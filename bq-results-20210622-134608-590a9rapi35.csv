repo_name,path,f0_
Majoolr/ethereum-libraries,TokenLib/truffle/contracts/ThrowProxy.sol,ThrowProxy(address _target);execute()
TheRougeProject/RougeTokens,contracts/EIP20.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
michinbear/solidity,test/compilationTests/zeppelin/token/TokenTimelock.sol,"TokenTimelock(ERC20Basic _token, address _beneficiary, uint _releaseTime);claim()"
elementrem/solidity,test/compilationTests/zeppelin/token/TokenTimelock.sol,"TokenTimelock(ERC20Basic _token, address _beneficiary, uint _releaseTime);claim()"
SafecontractDev/protocol,contracts/interfaces/IPriceDiscovery.sol,exchangeRate()
blockchain-hacklab/meteor-truffle,imports/lib/smart-contracts/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
locals-world/locals-app,truffle/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Upchain/upchain-hackathon-starterpack,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
maxwedwards/block-journal,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Firescar96/Flare,flareth/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
tetriseffect/activate,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
TrustyChain/ibhbr,project/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
adridadou/hackethon-2016,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
PlutusIt/PlutusDEX,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
jscottmiller/patronage,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
jonnycrunch/eHealthWallet,server/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
henning70/b9lab-wk3_small_project,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
ramvi/iotmarket,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
explosion78/hookrz,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
maxweng/oracleit-examples,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
vsimetka/MVP,HumanStandardToken.sol,"approveAndCall(address _spender, uint256 _value, bytes _extraData)"
TrueBitFoundation/webasm-solidity,contracts/IDisputeResolver.sol,"status(bytes32 gameId);newGame(address solver, address verifier, bytes32 spec, uint when)"
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/LimitBalance.sol,""
kowala-tech/kUSD,client/contracts/truffle/contracts/sysvars/SystemVars.sol,"SystemVars(uint _initialPrice, uint _initialSupply);initialize(uint _initialPrice, uint _initialSupply);_hasEnoughSupply();_cap();price();mintedAmount();oracleDeduction(uint mintedAmount);oracleReward()"
duaraghav8/Solium,test/lib/rules/array-declarations/unfixed/ws-btw-lit-op.sol,""
silasdavis/eris-db,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs10.sol,"addThing(string memory description, bytes32 url, string memory filehash, bytes32 filename)"
silasdavis/burrow,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs10.sol,"addThing(string memory description, bytes32 url, string memory filehash, bytes32 filename)"
eris-ltd/eris-db,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs10.sol,"addThing(string memory description, bytes32 url, string memory filehash, bytes32 filename)"
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/contracts/token/LimitedTransferToken.sol,"transferableTokens(address holder, uint64 time);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);transferableTokens(address holder, uint64 time)"
readevalprint/aragon-core,contracts/zeppelin/token/LimitedTransferToken.sol,"transferableTokens(address holder, uint64 time);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);transferableTokens(address holder, uint64 time)"
pz7/liquet,node_modules/zeppelin-solidity/contracts/token/LimitedTransferToken.sol,"transferableTokens(address holder, uint64 time);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);transferableTokens(address holder, uint64 time)"
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/token/LimitedTransferToken.sol,"transferableTokens(address holder, uint64 time);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);transferableTokens(address holder, uint64 time)"
TrueBitFoundation/webasm-solidity,contracts/stake.sol,"buyTicket(bytes32 ticket);removeTicket(address a);post(bytes32 init, uint mult);taskInitRandom(uint tnum, address solver);taskSolveRandom(uint tnum, bytes32 solution, address solver);specialMultiplier(uint tnum, address solver);solve(uint tnum, bytes32 sol_hash);finalize(uint tnum, bytes32 solution);checkJackpot(uint tnum);claimJackpot(uint tnum, uint idx, bytes32 solution);stealJackpot(uint tnum, bytes32 solution, address victim)"
papyrusglobal/smartcontracts,contracts/registry/MemberRegistry.sol,"updateRegistry(Registry registryType, address registryAddress);registerMember(address owner, address root, string name, string website);updateMember(uint64 memberId, address owner, address root, string name, string website);registerValidator(uint64 memberId, address validator);registerEndpoint(uint64 memberId, string endpoint);approveEndpoint(uint64 memberId, uint64 endpointId);removeEndpoint(uint64 memberId, uint64 endpointId);registerDomain(uint64 memberId, string domain);approveDomain(uint64 memberId, uint64 domainId);removeDomain(uint64 memberId, uint64 domainId);registerAppBundle(uint64 memberId, string appBundle);approveAppBundle(uint64 memberId, uint64 appBundleId);removeAppBundle(uint64 memberId, uint64 appBundleId);findByOwnerAddress(address memberAddress);getCount();getRegistryType(uint64 memberId);getRegistryAddress(uint64 memberId);getOwnerAddress(uint64 memberId);getPaymentsRootAddress(uint64 memberId);getName(uint64 memberId);getWebsite(uint64 memberId);getValidatorCount(uint64 memberId);getValidator(uint64 memberId, uint64 validatorId);getEndpointCount(uint64 memberId);getEndpoint(uint64 memberId, uint64 endpointId);isEndpointApproved(uint64 memberId, uint64 endpointId);isEndpointRemoved(uint64 memberId, uint64 endpointId);getDomainCount(uint64 memberId);getDomain(uint64 memberId, uint64 domainId);isDomainApproved(uint64 memberId, uint64 domainId);isDomainRemoved(uint64 memberId, uint64 domainId);getAppBundleCount(uint64 memberId);getAppBundle(uint64 memberId, uint64 appBundleId);isAppBundleApproved(uint64 memberId, uint64 appBundleId);isAppBundleRemoved(uint64 memberId, uint64 appBundleId);getRegistryTypeFromAddress(address registryAddress);getRegistryAddressFromType(Registry registryType)"
mechaism/mechaism,executioner.sol,terminate(address)
HamzaYasin1/ERC20-token-fixed-supply,ERC20.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);approve(address _spender, uint _value);allowance(address _owner, address _spender)"
FiatCentralBank/fiatcoin,contracts/ownership/DelayedClaimable.sol,"setLimits(uint256 _start, uint256 _end);claimOwnership()"
KudosProject/kudos-token,contracts/Ownable.sol,Ownable();transferOwnership(address newOwner)
y12studio/dltdojo,dockerfiles/ethereumgo/hahacoin.sol,"HahaCoin();mint(address receiver, uint amount);send(address receiver, uint amount)"
redsquirrel/augur-core,src/trading/OrdersFetcher.sol,"getOrderIds(Trading.TradeTypes _type, Market _market, uint8 _outcome, bytes32 _startingOrderId, uint256 _numOrdersToLoad);getOrder(bytes32 _orderId, Trading.TradeTypes _type, Market _market, uint8 _outcome);ascendOrderList(Trading.TradeTypes _type, Market _market, uint8 _outcome, int256 _fxpPrice, bytes32 _lowestOrderId);descendOrderList(Trading.TradeTypes _type, Market _market, uint8 _outcome, int256 _fxpPrice, bytes32 _highestOrderId);findBoundingOrders(Trading.TradeTypes _type, Market _market, uint8 _outcome, int256 _fxpPrice, bytes32 _bestOrderId, bytes32 _worstOrderId, bytes32 _betterOrderId, bytes32 _worseOrderId)"
digitalthailand/course-blockchain-4-dev,examples/Users.sol,register(bytes32 name);unregister(bytes32 name)
DecentralizedEscrow/pre-ico,contracts/simplified_DEST.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);balanceOf(address who);transfer(address to, uint256 value);transfer(address _to, uint256 _value);balanceOf(address _owner);allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);price(uint _v);withdraw();finish()"
iam-dev/ERC23,installed_contracts/zeppelin-solidity/contracts/token/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
wishcoinio/wishcoin-contract,contracts/Wishcoin.sol,"Wishcoin();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);runAnnualInflation();mint(address _to, uint256 _amount);getLastYearOfInflation()"
WingsDao/contracts,contracts/MultiSigWallet/TestToken.sol,"issueTokens(address _to, uint256 _value);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);balanceOf(address _owner)"
A-StadLabs/poezendemo,app/elements/alabs-web3js/contracts/localsAvatar.sol,"localsAvatar(bytes32 subjecthash, address subject, bytes32 validatorhash);addValidation(bytes32 validatorhash);countValidations();getValidations()"
A-StadLabs/locals.0.0.3,app/elements/alabs-web3js/contracts/localsAvatar.sol,"localsAvatar(bytes32 subjecthash, address subject, bytes32 validatorhash);addValidation(bytes32 validatorhash);countValidations();getValidations()"
boisde/Greed_Island,party/contracts/protocol/integration/UniswapPairPriceAdapter.sol,"getPrice(address _assetOne, address _assetTwo);addPool(address _poolAddress);removePool(address _poolAddress);getAllowedUniswapPools()"
iam-dev/ERC23,installed_contracts/zeppelin-solidity/contracts/token/SafeERC20.sol,"safeTransfer(ERC20Basic token, address to, uint256 value);safeTransferFrom(ERC20 token, address from, address to, uint256 value);safeApprove(ERC20 token, address spender, uint256 value)"
Great-Hill-Corporation/daodeepdive,assets/contracts/03-Token.sol,"balanceOf(address _owner);transfer(address _to, uint256 _amount);transferFrom(address _from, address _to, uint256 _amount);approve(address _spender, uint256 _amount);allowance(address _owner, address _spender)"
jensenbox/singnet,dao/contracts/market/MarketJobFactory.sol,""
Dobrokhvalov/eth2phone,contracts/SafeMath.sol,"safeMul(uint a, uint b);safeDiv(uint a, uint b);safeSub(uint a, uint b);safeAdd(uint a, uint b)"
BiathlonHelsinki/BiathlonContract,contracts/BiathlonToken.sol,"BiathlonToken(address _node_address, string _name, string _symbol, uint256 _decimals, address _upgradeFrom);transfer_storage_ownership(address _new);spend(address _addr, uint256 _amount);balanceOf(address _who);totalSupply();deactivate();mint(address _to, uint256 _amount);finishMinting();register_with_node();biathlon_transfer(address _from, address _to, uint256 _value)"
ethereum/frontier-release,views/content/dao-time-lock-multisig.sol,"owned();transferOwnership(address newOwner);receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);transferFrom(address _from, address _to, uint256 _value);TimeLockMultisig(address founder, address[] initialMembers, uint minimumAmountOfMinutes);addMember(address targetMember, string memberName);removeMember(address targetMember);changeMembers(address[] newMembers, bool canVote);proposalDeadline(uint proposalNumber);calculateFactor(uint a, uint b);executeProposal(uint proposalNumber, bytes transactionBytecode)"
ethereum/ethereum-org,views/content/dao-time-lock-multisig.sol,"owned();transferOwnership(address newOwner);receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);transferFrom(address _from, address _to, uint256 _value);TimeLockMultisig(address founder, address[] initialMembers, uint minimumAmountOfMinutes);addMember(address targetMember, string memberName);removeMember(address targetMember);changeMembers(address[] newMembers, bool canVote);proposalDeadline(uint proposalNumber);calculateFactor(uint a, uint b);executeProposal(uint proposalNumber, bytes transactionBytecode)"
BlockchainLabsNZ/Unconf-DApp,contracts/owned.sol,owned();transferOwnership(address newOwner)
stevejaxon/ethereum-tutorials,contracts/stackexchange/ModifierTest.sol,func()
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.5/KingOfTheEtherThrone.sol,""
paulhauner/token-syndicate,contracts/BAT/BATokenFactory.sol,BATokenFactory()
Matchpool/contracts,contracts/GUPToken.sol,"GUPToken(address _minter, uint _endMintingTime);createToken(address _recipient, uint _value);createIlliquidToken(address _recipient, uint _value);makeLiquid();transfer(address _recipient, uint _amount);transferFrom(address _from, address _recipient, uint _amount)"
OpenMoneyDigital/OpenMoneyToken,contracts/OpenMoneyCrowdsaleImpl.sol,"OpenMoneyCrowdsaleImpl();distributePresaleTokens();mintToken(address contributor, uint256 etherContributed)"
ConsenSys/dapp-store-contracts,contracts/LicenseModel.sol,"LicenseModel(DualIndex _user_version_index);create(uint[101][] attributes);validate(address sender, uint id, uint[101][] attributes);id_for_user_version(uint user_id, uint version_id);replace(address replacement)"
protofire/solhint,e2e/02-empty-solhint-json/Foo.sol,""
protofire/solhint,e2e/01-no-config/Foo.sol,""
Fermion-Project/Light-Wallet,source_gnosis/contracts/Factory.sol,getInstantiationCount(address creator);register(address instantiation)
readevalprint/aragon-core,contracts/common/Initializable.sol,initialized();getInitializationBlock();getBlockNumber()
papyrusglobal/smartcontracts,contracts/PapyrusToken.sol,"transferAndCall(address to, uint256 value, bytes data);transfer(address to, uint256 value);transferFrom(address from, address to, uint256 value);airdrop(address[] recipients, uint256[] values);mint(address receiver, uint256 value);burn(uint256 value);burnByOwner(address burner, uint256 value);claimTokens(address token, address to);revokeControlByOwner();setMintable(bool mintable);setTransferable(bool transferable);setBridgeContract(address bridgeContract);renounceOwnership();controllableByOwner();mintable();transferable();bridgeContract();totalMinted();totalBurnt();getTokenInterfacesVersion();contractFallback(address from, address receiver, uint256 value, bytes data);isContract(address account)"
FiatCentralBank/fiatcoin,contracts/token/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
status-im/status-go,contracts/ens/contract/PublicResolver.sol,"PublicResolver(AbstractENS ensAddr);supportsInterface(bytes4 interfaceID);addr(bytes32 node);setAddr(bytes32 node, address addr);content(bytes32 node);setContent(bytes32 node, bytes32 hash);name(bytes32 node);setName(bytes32 node, string name);ABI(bytes32 node, uint256 contentTypes);setABI(bytes32 node, uint256 contentType, bytes data);pubkey(bytes32 node);setPubkey(bytes32 node, bytes32 x, bytes32 y);text(bytes32 node, string key);setText(bytes32 node, string key, string value)"
vvelikodny/go-ethereum,contracts/ens/contract/PublicResolver.sol,"PublicResolver(AbstractENS ensAddr);supportsInterface(bytes4 interfaceID);addr(bytes32 node);setAddr(bytes32 node, address addr);content(bytes32 node);setContent(bytes32 node, bytes32 hash);name(bytes32 node);setName(bytes32 node, string name);ABI(bytes32 node, uint256 contentTypes);setABI(bytes32 node, uint256 contentType, bytes data);pubkey(bytes32 node);setPubkey(bytes32 node, bytes32 x, bytes32 y);text(bytes32 node, string key);setText(bytes32 node, string key, string value)"
wuestholz/go-ethereum,contracts/ens/contract/PublicResolver.sol,"PublicResolver(AbstractENS ensAddr);supportsInterface(bytes4 interfaceID);addr(bytes32 node);setAddr(bytes32 node, address addr);content(bytes32 node);setContent(bytes32 node, bytes32 hash);name(bytes32 node);setName(bytes32 node, string name);ABI(bytes32 node, uint256 contentTypes);setABI(bytes32 node, uint256 contentType, bytes data);pubkey(bytes32 node);setPubkey(bytes32 node, bytes32 x, bytes32 y);text(bytes32 node, string key);setText(bytes32 node, string key, string value)"
meta-network/go-meta,vendor/github.com/ethereum/go-ethereum/contracts/ens/contract/PublicResolver.sol,"PublicResolver(AbstractENS ensAddr);supportsInterface(bytes4 interfaceID);addr(bytes32 node);setAddr(bytes32 node, address addr);content(bytes32 node);setContent(bytes32 node, bytes32 hash);name(bytes32 node);setName(bytes32 node, string name);ABI(bytes32 node, uint256 contentTypes);setABI(bytes32 node, uint256 contentType, bytes data);pubkey(bytes32 node);setPubkey(bytes32 node, bytes32 x, bytes32 y);text(bytes32 node, string key);setText(bytes32 node, string key, string value)"
getamis/go-ethereum,contracts/ens/contract/PublicResolver.sol,"PublicResolver(AbstractENS ensAddr);supportsInterface(bytes4 interfaceID);addr(bytes32 node);setAddr(bytes32 node, address addr);content(bytes32 node);setContent(bytes32 node, bytes32 hash);name(bytes32 node);setName(bytes32 node, string name);ABI(bytes32 node, uint256 contentTypes);setABI(bytes32 node, uint256 contentType, bytes data);pubkey(bytes32 node);setPubkey(bytes32 node, bytes32 x, bytes32 y);text(bytes32 node, string key);setText(bytes32 node, string key, string value)"
fireblock/go-ethereum,contracts/ens/contract/PublicResolver.sol,"PublicResolver(AbstractENS ensAddr);supportsInterface(bytes4 interfaceID);addr(bytes32 node);setAddr(bytes32 node, address addr);content(bytes32 node);setContent(bytes32 node, bytes32 hash);name(bytes32 node);setName(bytes32 node, string name);ABI(bytes32 node, uint256 contentTypes);setABI(bytes32 node, uint256 contentType, bytes data);pubkey(bytes32 node);setPubkey(bytes32 node, bytes32 x, bytes32 y);text(bytes32 node, string key);setText(bytes32 node, string key, string value)"
trinityfx/trinity,contracts/ens/contract/PublicResolver.sol,"PublicResolver(AbstractENS ensAddr);supportsInterface(bytes4 interfaceID);addr(bytes32 node);setAddr(bytes32 node, address addr);content(bytes32 node);setContent(bytes32 node, bytes32 hash);name(bytes32 node);setName(bytes32 node, string name);ABI(bytes32 node, uint256 contentTypes);setABI(bytes32 node, uint256 contentType, bytes data);pubkey(bytes32 node);setPubkey(bytes32 node, bytes32 x, bytes32 y);text(bytes32 node, string key);setText(bytes32 node, string key, string value)"
ethersphere/go-ethereum,contracts/ens/fallback_contract/PublicResolver.sol,"PublicResolver(AbstractENS ensAddr);supportsInterface(bytes4 interfaceID);addr(bytes32 node);setAddr(bytes32 node, address addr);content(bytes32 node);setContent(bytes32 node, bytes32 hash);name(bytes32 node);setName(bytes32 node, string name);ABI(bytes32 node, uint256 contentTypes);setABI(bytes32 node, uint256 contentType, bytes data);pubkey(bytes32 node);setPubkey(bytes32 node, bytes32 x, bytes32 y);text(bytes32 node, string key);setText(bytes32 node, string key, string value)"
ManyCoin/ManyCoin,contracts/ens/contract/PublicResolver.sol,"PublicResolver(AbstractENS ensAddr);supportsInterface(bytes4 interfaceID);addr(bytes32 node);setAddr(bytes32 node, address addr);content(bytes32 node);setContent(bytes32 node, bytes32 hash);name(bytes32 node);setName(bytes32 node, string name);ABI(bytes32 node, uint256 contentTypes);setABI(bytes32 node, uint256 contentType, bytes data);pubkey(bytes32 node);setPubkey(bytes32 node, bytes32 x, bytes32 y);text(bytes32 node, string key);setText(bytes32 node, string key, string value)"
markya0616/go-ethereum,contracts/ens/contract/PublicResolver.sol,"PublicResolver(AbstractENS ensAddr);supportsInterface(bytes4 interfaceID);addr(bytes32 node);setAddr(bytes32 node, address addr);content(bytes32 node);setContent(bytes32 node, bytes32 hash);name(bytes32 node);setName(bytes32 node, string name);ABI(bytes32 node, uint256 contentTypes);setABI(bytes32 node, uint256 contentType, bytes data);pubkey(bytes32 node);setPubkey(bytes32 node, bytes32 x, bytes32 y);text(bytes32 node, string key);setText(bytes32 node, string key, string value)"
nexusdev/dapple-test,spec/debug.sol,""
QTBlockchain/SolidityNWeb3,SmartContracts/March2018/FareContract/contracts/BaseFareCalculator.sol,"BaseFareCalculator();calculateFare(string source,string destination);AddLocation(string location)"
Vorxil/MarketStake,test/TestOrderBook.sol,beforeEach();testMetered();testFee()
iswarm/p2pCny,insuranceFund.sol,InsurContract();applyInsurance(bytes32 _hash);claimInsurance(bytes32 _hash);fundInsurance();beManagerInsurance();withdrawFundInsurance();getBonus()
erooijak/ethlance,resources/public/contracts/src/nameReg.sol,register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr);kill();nameRegAddress();getCodeSize(address _addr);named(bytes32 name);named(bytes32 name)
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/ethpm/installed_contracts/tokens/contracts/eip20/EIP20.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
Majoolr/ethereum-libraries,ArrayUtilsLib/truffle/contracts/ArrayUtilsTestContractTwo.sol,""
zchn/ethereum-analyzer,examples/solidity.readthedocs.io/solidity-by-example/simple-auction.sol,bid();withdraw();auctionEnd()
robmyers/artworld-ethereum,dapps/hack-line-properties/contracts/SecureLineProperties.sol,""
Lawlez/solidity-contracts,swissBitv2.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);totalSupply();balanceOf(address addr);allowance(address _owner, address _spender);transfer(address _to, uint256 _value);approve(address _spender, uint256 _value);transferFrom(address _from, address _to, uint256 _value)"
pipermerriam/populus,tests/fixtures/TestMath.sol,TestMath()
manojpramesh/solidity-contracts,contracts/etherdelta_2.sol,"safeMul(uint a, uint b);safeSub(uint a, uint b);safeAdd(uint a, uint b);assert(bool assertion);totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);ReserveToken();create(address account, uint amount);destroy(address account, uint amount);accountLevel(address user);setAccountLevel(address user, uint level);accountLevel(address user);EtherDelta(address admin_, address feeAccount_, address accountLevelsAddr_, uint feeMake_, uint feeTake_, uint feeRebate_);changeAdmin(address admin_);changeAccountLevelsAddr(address accountLevelsAddr_);changeFeeAccount(address feeAccount_);changeFeeMake(uint feeMake_);changeFeeTake(uint feeTake_);changeFeeRebate(uint feeRebate_);deposit();withdraw(uint amount);depositToken(address token, uint amount);withdrawToken(address token, uint amount);balanceOf(address token, address user);order(address tokenGet, uint amountGet, address tokenGive, uint amountGive, uint expires, uint nonce);trade(address tokenGet, uint amountGet, address tokenGive, uint amountGive, uint expires, uint nonce, address user, uint8 v, bytes32 r, bytes32 s, uint amount);tradeBalances(address tokenGet, uint amountGet, address tokenGive, uint amountGive, address user, uint amount);testTrade(address tokenGet, uint amountGet, address tokenGive, uint amountGive, uint expires, uint nonce, address user, uint8 v, bytes32 r, bytes32 s, uint amount, address sender);availableVolume(address tokenGet, uint amountGet, address tokenGive, uint amountGive, uint expires, uint nonce, address user, uint8 v, bytes32 r, bytes32 s);amountFilled(address tokenGet, uint amountGet, address tokenGive, uint amountGive, uint expires, uint nonce, address user, uint8 v, bytes32 r, bytes32 s);cancelOrder(address tokenGet, uint amountGet, address tokenGive, uint amountGive, uint expires, uint nonce, uint8 v, bytes32 r, bytes32 s)"
livepeer/protocol,test/unit/TestSortedDoublyLLFindWithHints2.sol,beforeEach();test_insert_findWithHintPrevRemoved();test_insert_findWithHintPrevRemovedUpdateHead();test_insert_findWithHintPrevDecreased();test_insert_findWithHintNextRemoved();test_insert_findWithHintNextRemovedUpdateTail();test_insert_findWithHintNextIncreased();test_insert_findWithHintNotTightBound()
GX-Coin/SmartContract,GxEventsInterface.sol,"raiseTraderRegistered(address traderAccount);raiseTraderUnregistered(address traderAccount);raiseCoinsSeeded(address to, uint32 amountCoins, uint balanceCoins, uint pricePerCoin);raiseCoinsDeducted(address to, uint32 amountCoins, uint balanceCoins);raiseCoinsAdded(address to, uint32 amountCoins, uint balanceCoins);raiseDollarsFunded(address to, uint160 amountDollars, int160 balanceDollars);raiseDollarsWithdrew(address to, uint160 amountDollars, int160 balanceDollars);raiseDollarsDeducted(address to, uint160 amountDollars, int160 balanceDollars);raiseDollarsAdded(address to, uint160 amountDollars, int160 balanceDollars);raiseDollarsWithdrawalCancelled(address to, uint160 amountDollars, int160 balanceDollars)"
flysonic10/initial-celestial-offering,contracts/zeppelin/ownership/Ownable.sol,Ownable();transferOwnership(address newOwner)
OR13/car2go,contracts/zeppelin/ownership/Ownable.sol,Ownable();transferOwnership(address newOwner)
ranneyd/eth-faucet,contracts/zeppelin/ownership/Ownable.sol,Ownable();transferOwnership(address newOwner)
Spreadway/core,flow_auth/contracts/zeppelin/ownership/Ownable.sol,Ownable();transferOwnership(address newOwner)
transmute-industries/eth-faucet,contracts/zeppelin/ownership/Ownable.sol,Ownable();transferOwnership(address newOwner)
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/Ownable.sol,Ownable();transferOwnership(address newOwner)
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/Ownable.sol,Ownable();transferOwnership(address newOwner)
TickethProject/ticketh-core,contracts/zeppelin/ownership/Ownable.sol,Ownable();transferOwnership(address newOwner)
AragonOne/zeppelin-solidity,contracts/ownership/Ownable.sol,Ownable();transferOwnership(address newOwner)
ixofoundation/tge-server,contracts/zeppelin/ownership/Ownable.sol,Ownable();transferOwnership(address newOwner)
OriginalMy/OriginalMyAccessControl,testAccess.sol,testAccess(address acAddress);testSuperUser(address superUserAddress);testManager(address superUserAddress);testUser(address superUserAddress);changeACAddress(address acAddress)
paulhauner/token-syndicate,contracts/BAT/BAToken.sol,createTokens();finalize();refund()
dob/auctionhouse,contracts/Asset.sol,"owner(string _recordId);setOwner(string _recordId, address _newOwner)"
NathanLewis/surefair,contracts/macbookOracle.sol,"MacBookOracle();getOracleDetails();getUserQuoteIds(address _client);getQuote(address _client, uint64 _quoteId);createQuote(uint256 _macbookYear, bytes32 _serial_number, bytes32 _ipfsHash);verifyClaim(uint64 _quoteId)"
assafmo/PotOfEther,contracts/PotOfEther.sol,PotOfEther();availableOwnerWithdraw();ownerWithdraw();createPot(string name);joinPot(string name);canClosePot(string name);closePot(string name);withdrawRefund()
acebusters/safe-token-sale,contracts/policies/UpgradeEvent.sol,"UpgradeEvent(address _oldController, address _nextController);tick();verify();complete()"
RealEstateAssetLedger/real_contract,contracts/MiniMeToken.sol,"proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);Controlled();changeController(address _newController);receiveApproval(address from, uint256 _amount, address _token, bytes _data);transfer(address _to, uint256 _amount);balanceOf(address _owner);approve(address _spender, uint256 _amount);totalSupply();balanceOfAt(address _owner, uint _blockNumber);totalSupplyAt(uint _blockNumber);enableTransfers(bool _transfersEnabled);isContract(address _addr);min(uint a, uint b);claimTokens(address _token)"
iam-dev/ERC23,installed_contracts/zeppelin-solidity/contracts/token/TokenTimelock.sol,"TokenTimelock(ERC20Basic _token, address _beneficiary, uint64 _releaseTime);release()"
Neufund/Contracts,contracts/lib/RentrancyGuard.sol,""
Neufund/Contracts,contracts/neufund/NeufundGovernance.sol,""
zchn/ethereum-analyzer,examples/solidity.readthedocs.io/introduction-to-smart-contracts/storage.sol,set(uint x);get()
anniemwu/chainge,contracts/User3.sol,storeProof(bytes32 proof);notarize(string descriptor);proofFor(string descriptor);checkString(string descriptor);findString(bytes32 proof);hasProof(bytes32 proof)
GX-Coin/SmartContract,GxTradersProxy.sol,"GxTradersProxy(address deploymentAdminsAddress);add(address newAddress);remove(address removedAddress);setDollarBalance(address mappedAddress, int160 dollarBalance);setCoinBalance(address mappedAddress, uint32 coinBalance);addCoinAmount(address mappedAddress, uint32 coinAmount);addDollarAmount(address mappedAddress, int160 dollarAmount)"
mahendra-panchal/smart-contract-basics,modifierEx.sol,modifierEx();getData()
QTBlockchain/SolidityNWeb3,SmartContracts/March2018/ArrayDemo/contracts/ArrayDemo.sol,ArrayDemo();getRankDynamic(uint256 index);setRankDynamic(uint rank)
rsksmart/rskj,rskj-core/src/test/resources/dsl/createAfterSuicide/CallCreator.sol,""
rsksmart/rskj,rskj-core/src/test/resources/dsl/codeSizeAfterSuicide/CallCreator.sol,""
robmyers/artworld-ethereum,dapps/token-grid/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
cgewecke/eth-gas-reporter,mock/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/external_compile/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/ethpm/installed_contracts/tokens/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
Quintor/angular-truffle-box,contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
scmo/apayment-backend,smart-contracts/apayment_token.sol,"totalSupply();balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value);APaymentToken(uint256 supply);totalSupply();balanceOf(address src);allowance(address src, address guy);transferWithMessageAndRequestAddress(address dst, uint amount, address requestAdr, bytes message);transferWithMessage(address dst, uint amount, bytes message);transfer(address dst, uint amount);transferFrom(address src, address dst, uint amount);approve(address guy, uint256 amount)"
dscorbett/pygments,tests/examplefiles/test.sol,"addRegistry(string _name, uint8 _type);getHash(AStruct item);pay();receive();withdraw()"
aragon/aragon-core,contracts/kernel/IKernel.sol,"acl();hasPermission(address who, address where, bytes32 what, bytes how);setApp(bytes32 namespace, bytes32 appId, address app);getApp(bytes32 namespace, bytes32 appId)"
explosion78/hookrz,contracts/Logging.sol,"logMessage(bytes msg, Logginglevel msgLevel);logValue(bytes label, uint value, Logginglevel msgLevel)"
8CircuitStudios/8BitToken,contracts/EightBitToken.sol,"EightBitToken();startSale(uint256 _cap, uint256 _rate, uint256 _startBlock, uint256 _endBlock);buy(address _to);endSale();transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value)"
SilentCicero/wafr,src/tests/solidityTests/faucet/test.faucet.sol,setup();test_contractBalance();test_sendFundsToContract();test_oneFalseAssert();test_oneTrueAssert()
dacplayproject/play-dapp,src/ERC223ReceivingContract.sol,"tokenFallback(address _from, uint256 _value, bytes _data)"
szerintedmi/numbergame,contracts/solidity-stringutils/strings.sol,"memcpy(uint dest, uint src, uint len);toSlice(string self);len(bytes32 self);copy(slice self);toString(slice self);len(slice self);empty(slice self);compare(slice self, slice other);equals(slice self, slice other);nextRune(slice self, slice rune);nextRune(slice self);ord(slice self);keccak(slice self);startsWith(slice self, slice needle);beyond(slice self, slice needle);endsWith(slice self, slice needle);until(slice self, slice needle);findPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);rfindPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);find(slice self, slice needle);rfind(slice self, slice needle);split(slice self, slice needle, slice token);split(slice self, slice needle);rsplit(slice self, slice needle, slice token);rsplit(slice self, slice needle);count(slice self, slice needle);contains(slice self, slice needle);concat(slice self, slice other);join(slice self, slice[] parts)"
stanta/darfchain,ICO/contracts/BurnableCrowdsaleToken.sol,"BurnableCrowdsaleToken(string _name, string _symbol, uint _initialSupply, uint _decimals, bool _mintable)"
TrueBitFoundation/webasm-solidity,contracts/parallel.sol,"make(uint task_id, address p, address c, bytes32 s, bytes32 e, uint256 par, uint to);makeFinality(uint task_id, address p, address c, bytes32 s, bytes32 e, uint256 _steps, uint to);calcStateHash(bytes32[10] roots, uint[4] pointers);checkFileProof(bytes32 state, bytes32[10] roots, uint[4] pointers, bytes32[] proof, uint loc);checkProof(bytes32 hash, bytes32 root, bytes32[] proof, uint loc);isRejected(uint id);blockedTime(uint id);clock(bytes32 id);getWinner(bytes32 id);init(bytes32 state, uint state_size, uint, uint, address solver, address verifier);post(bytes32 id, bytes32 root);upload(bytes32 id, bytes32 root, bytes32 ll, bytes32 rl);select(bytes32 id, bytes32 root, bool lr);disagree(bytes32 id, bytes32 root, bytes32[] proof);clock(bytes32 id);resolved(bytes32 id, bytes32 state, uint reg);checkProof(bytes32 root, bytes32[] proof, uint loc)"
nomilous/huff,example/mortal.sol,mortal();kill()
airalab/DAO-IPCI,contracts/creator/CreatorTokenWithValidityPeriod.sol,"create(string _name, string _symbol, uint8 _decimals, uint256 _start_count, address _acl_storage, string _emitent_group, address _operator);version();abi()"
acebusters/safe-token-sale,contracts/controller/NutzEnabled.sol,"NutzEnabled(address _nutzAddr, address _storageAddr);totalSupply();allowance(address _owner, address _spender);approve(address _owner, address _spender, uint256 _amountBabz);_transfer(address _from, address _to, uint256 _amountBabz, bytes _data);transfer(address _from, address _to, uint256 _amountBabz, bytes _data);transferFrom(address _sender, address _from, address _to, uint256 _amountBabz, bytes _data)"
cgewecke/solcover,test/sources/zeppelin/Claimable.sol,transfer(address newOwner);claimOwnership()
WingsDao/contracts,contracts/zeppelin/Claimable.sol,transfer(address newOwner);claimOwnership()
JoinColony/solcover,test/sources/zeppelin/Claimable.sol,transfer(address newOwner);claimOwnership()
orbro/eth-enablers,decentGovernment.sol,Government();lendGovernmentMoney(address buddy);function();totalDebt();totalPayedOut();investInTheSystem();inheritToNextGeneration(address nextGeneration);getCreditorAddresses();getCreditorAmounts()
lifechange-io/christ-coin,contracts/Finalizable.sol,finalizeContract()
robmyers/artworld-ethereum,dapps/token-grid/contracts/TokenGrid.sol,""
Overlay-Networks/challenge-task,Ethereum/MessageRegistry.sol,"save(string message, address receiver, uint identifier);getMessage(uint identifier);isDeployed()"
manishbisht/Udacity,Blockchain Developer Nanodegree/P8 - Capstone - Real Estate Marketplace/eth-contracts/contracts/ERC721Mintable.sol,"currentOwner();transferOwnership(address newOwner);pauseContract();unpauseContract();supportsInterface(bytes4 interfaceId);_registerInterface(bytes4 interfaceId);balanceOf(address owner);ownerOf(uint256 tokenId);approve(address to, uint256 tokenId);getApproved(uint256 tokenId);setApprovalForAll(address to, bool approved);isApprovedForAll(address owner, address operator);transferFrom(address from, address to, uint256 tokenId);safeTransferFrom(address from, address to, uint256 tokenId);safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data);_exists(uint256 tokenId);_isApprovedOrOwner(address spender, uint256 tokenId);_mint(address to, uint256 tokenId);_transferFrom(address from, address to, uint256 tokenId);_clearApproval(uint256 tokenId);tokenOfOwnerByIndex(address owner, uint256 index);totalSupply();tokenByIndex(uint256 index);_transferFrom(address from, address to, uint256 tokenId);_mint(address to, uint256 tokenId);_tokensOfOwner(address owner);_addTokenToOwnerEnumeration(address to, uint256 tokenId);_addTokenToAllTokensEnumeration(uint256 tokenId);_removeTokenFromOwnerEnumeration(address from, uint256 tokenId);_removeTokenFromAllTokensEnumeration(uint256 tokenId);name();symbol();baseTokenURI();tokenURI(uint256 tokenId);setTokenURI(uint256 tokenId);mint(address to, uint256 tokenId)"
OR13/car2go,contracts/Transmute/EventStore.sol,"EventStore();getVersion();emitEvent(string _type, address _address, uint _uint, string _string);getType(uint eventId);getCreated(uint eventId);getAddressValue(uint eventId);getUIntValue(uint eventId);getStringValue(uint eventId)"
iam-dev/ERC23,contracts/example/ExampleToken.sol,ExampleToken(uint initialBalance)
Qipingsmile006/TianLianCoin,contracts/interface/ITianLianCoin.sol,"mint(address owner, uint256 value);burn(uint256 value);startFunding(uint256 fundingStartBlock, uint256 fundingStopBlock);stopFunding();setTokenExchangeRate(uint256 newRate);increaseSupply(uint256 value);decreaseSupply(uint256 value)"
dukoolio/d3health_code,contracts/D3Coin.sol,"Coin();mint(address receiver, uint amount);send(address receiver, uint amount)"
elementrem/solidity,std/StandardToken.sol,"StandardToken(address _initialOwner, uint256 _supply);balanceOf(address _account);totalSupply();transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);doTransfer(address _from, address _to, uint _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
MzansiRe/iMali,contracts/Campaign.sol,"theDay(uint256 t);theCeiling(uint256 input, uint256 precision);Campaign(address _walletAddress, address _tokenAddress, address _bountyWalletAdress);proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);doPayment(address _owner);forwardFunds();claimRefund();finalize();finalization();createBountyTokens();createReserveTokens();goalReached();hasEnded()"
tomaaron/raiden,raiden/tests/smart_contracts/DecoderTester.sol,testDecodeTransfer(bytes signed_transfer);decodedNonce();decodedAsset();decodedRecipient();decodedAmount();decodedLocksroot();decodedSecret();decodedExpiration()
FiatCentralBank/fiatcoin,contracts/FiatBase.sol,""
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/migrations/success/contracts/Loop.sol,""
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/migrations/error/contracts/Loops.sol,""
jimy74/Chablex,Smart Contracts/QueueDemande.sol,"length(Queue storage q);capacity(Queue storage q);push(Queue storage q,  Demande dem);replaceInFront(Queue storage q,  Demande dem);pop(Queue storage q);copyPop(Queue storage q);containMinValueFromOther(Queue storage q, uint256 _minValue, address exceptAddr);getTotalValue(Queue storage q);get(Queue storage q, uint pos);QueueDemandesEnCours();addRequest(address demandeur, uint256 valeur);replaceInFrontRequest(address demandeur, uint256 valeur);popRequest();copyPopRequest();queueLength();get(uint256 pos);containMinValueFromOther(uint256 _minValue, address exceptAddr);getTotalValue()"
RealEstateAssetLedger/real_contract,contracts/TeamTokensHolder.sol,"TeamTokensHolder(address _owner, address _crowdsale, address _real);collectTokens();months(uint256 m);getTime();claimTokens(address _token)"
vsimetka/MVP,Campaign.sol,proxyPayment(address _owner);doPayment(address _owner);seal()
shahankhatch/weifund-contracts,src/contracts/Campaign.sol,owner();version();name();contributeMethodABI();refundMethodABI();payoutMethodABI();beneficiary();expiry();fundingGoal();amountRaised()
DigixGlobal/ethereum-ruby,contracts/GenericInterface.sol,getConfigAddress();goldRegistry();vendorRegistry();custodianRegistry();auditorRegistry();isGoldRegistry(address _greg);isCustodian(address _cust);isAuditor(address _adtr);isVendor(address _vndr)
EthWorks/ethereum.rb,contracts/GenericInterface.sol,getConfigAddress();goldRegistry();vendorRegistry();custodianRegistry();auditorRegistry();isGoldRegistry(address _greg);isCustodian(address _cust);isAuditor(address _adtr);isVendor(address _vndr)
marekkirejczyk/ethereum.rb,contracts/GenericInterface.sol,getConfigAddress();goldRegistry();vendorRegistry();custodianRegistry();auditorRegistry();isGoldRegistry(address _greg);isCustodian(address _cust);isAuditor(address _adtr);isVendor(address _vndr)
jbaylina/EIP165Cache,test/MultisigMock.sol,""
iam-dev/ERC23,contracts/token/Basic23TokenVault.sol,"setStateLoading();setStateHolding();setStateDistributing();setInvestor(address _investor, uint256 _amount);lock();recoverFailedLock();getBalance();claim()"
Dicoiner/irianna-solidity,contracts/token/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
SmartChainX/ChainBlockchain,Contracts/DeployChainX_Token.sol,"setBalance(address _target, uint _value)"
SmartChainX/ChainBlockchain,Contracts/ChainX Token/DummyToken.sol,"setBalance(address _target, uint _value)"
shahankhatch/dapp-bin,registrar/ICAPRegistrar.sol,"reserve(bytes32 _name);disown(bytes32 _name, address _refund);transfer(bytes32 _name, address _newOwner);setAddr(bytes32 _name, address _a);addr(bytes32 _name);owner(bytes32 _name)"
LianaHus/dapp-bin,registrar/ICAPRegistrar.sol,"reserve(bytes32 _name);disown(bytes32 _name, address _refund);transfer(bytes32 _name, address _newOwner);setAddr(bytes32 _name, address _a);addr(bytes32 _name);owner(bytes32 _name)"
ethchange/smart-exchange,testnet/contracts/ICAPRegistrar.sol,"reserve(bytes32 _name);disown(bytes32 _name, address _refund);transfer(bytes32 _name, address _newOwner);setAddr(bytes32 _name, address _a);addr(bytes32 _name);owner(bytes32 _name)"
vaporry/dapp-bin,registrar/ICAPRegistrar.sol,"reserve(bytes32 _name);disown(bytes32 _name, address _refund);transfer(bytes32 _name, address _newOwner);setAddr(bytes32 _name, address _a);addr(bytes32 _name);owner(bytes32 _name)"
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app37-fallback_function/fallback.sol,""
eris-ltd/eris,tests/jobs_fixtures/app37-fallback_function/fallback.sol,""
monax/monax,tests/jobs_fixtures/app37-fallback_function/fallback.sol,""
eris-ltd/eris-cli,tests/jobs_fixtures/app37-fallback_function/fallback.sol,""
monax/cli,tests/jobs_fixtures/app37-fallback_function/fallback.sol,""
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app37-fallback_function/fallback.sol,""
DonorToken/DonorToken,contracts/lifecycle/Migrations.sol,setCompleted(uint256 completed);upgrade(address newAddress)
acebusters/safe-token-sale,contracts/controller/Controller.sol,"Controller(address _powerAddr, address _pullAddr, address _nutzAddr, address _storageAddr);setContracts(address _storageAddr, address _nutzAddr, address _powerAddr, address _pullAddr);changeDailyLimit(uint256 _dailyLimit);kill(address _newController)"
silasdavis/eris-db,tests/jobs_fixtures/app18-factory_contract_deployment_by_address_convention/GSFactoryFactory.sol,set(uint x);get();create();getLast();create();getLast()
silasdavis/eris-db,tests/jobs_fixtures/app17-factory_contract_deployment_by_instance_naming/GSFactoryFactory.sol,set(uint x);get();create();getLast();create();getLast()
silasdavis/burrow,tests/jobs_fixtures/app17-factory_contract_deployment_by_instance_naming/GSFactoryFactory.sol,set(uint x);get();create();getLast();create();getLast()
silasdavis/burrow,tests/jobs_fixtures/app18-factory_contract_deployment_by_address_convention/GSFactoryFactory.sol,set(uint x);get();create();getLast();create();getLast()
eris-ltd/eris-db,tests/jobs_fixtures/app17-factory_contract_deployment_by_instance_naming/GSFactoryFactory.sol,set(uint x);get();create();getLast();create();getLast()
eris-ltd/eris-db,tests/jobs_fixtures/app18-factory_contract_deployment_by_address_convention/GSFactoryFactory.sol,set(uint x);get();create();getLast();create();getLast()
etherisc/flightDelay,contracts/FlightDelayUnderwriteInterface.sol,"scheduleUnderwriteOraclizeCall(uint _policyId, bytes32 _carrierFlightNumber)"
nolash/go-ethereum-p2p-demo,solidity/upgrade/MainUpgrade.sol,MainUpgrade()
cniemann/etherpricebet,InactiveTests/TestBet_Create.sol,beforeAll();testCreatePricelevelUsingNewContract();testCreatePrizeUsingNewContract()
SwapyNetwork/swapy-exchange-protocol,test/TestSwapyExchange_versioning.sol,shouldThrow(bool execution);testOnlyProtocolOwnerCanAddLibrary();testProtocolOwnerCanAddLibraryVersion();testOwnerCannotAddDuplicatedVersion();testOwnerCannotAddInvalidVersion();testOwnerCannotAddInvalidLibrary()
becodemonkey/solidity,contracts/util/Ownable.sol,Ownable();changeOwner(address _newOwner);claimOwnership()
WeiFund/WeiFund,contracts/CampaignAccount.sol,"newCampaign(string _name, address _beneficiary, uint _fundingGoal, uint _expiry, address _config);contribute(uint _campaignID, address _beneficiary);refund(uint _campaignID, uint _contribution);payout(uint _campaignID);operatorCampaignID(address _operator, uint _campaignIndex);totalCampaignsBy(address _operator);totalContributionsBy(uint _campaignID, address _contributor);totalCampaigns();contributionAt(uint _campaignID, uint _contributionID);createdAt(uint _campaignID);contributionID(uint _campaignID, address _contributor, uint _contributionIndex);ownerOf(uint _campaignID);beneficiaryOf(uint _campaignID);configOf(uint _campaignID);amountRaisedBy(uint _campaignID);fundingGoalOf(uint _campaignID);expiryOf(uint _campaignID);totalContributors(uint _campaignID);isContributor(uint _campaignID, address _contributor);isOwner(uint _campaignID, address _owner);hasFailed(uint _campaignID);isSuccess(uint _campaignID);isPaidOut(uint _campaignID);totalRefunded(uint _campaignID);isRefunded(uint _campaignID);amountContributed(address _contributor)"
orbro/eth-enablers,DAO-develop/libs/oraclize.sol,"query(uint _timestamp, string _datasource, string _arg);query_withGasLimit(uint _timestamp, string _datasource, string _arg, uint _gaslimit);getPrice(string _datasource);getPrice(string _datasource, uint gaslimit);useCoupon(string _coupon);setProofType(byte _proofType);getAddress();oraclize_setNetwork(uint8 networkID);oraclize_query(string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2, uint gaslimit);oraclize_cbAddress();oraclize_setProof(byte proofP);getCodeSize(address _addr);parseAddr(string _a);strCompare(string _a, string _b);indexOf(string _haystack, string _needle);strConcat(string _a, string _b, string _c, string _d, string _e);strConcat(string _a, string _b, string _c, string _d);strConcat(string _a, string _b, string _c);strConcat(string _a, string _b);parseInt(string _a);parseInt(string _a, uint _b)"
gleim/DAO,libs/oraclize.sol,"query(uint _timestamp, string _datasource, string _arg);query_withGasLimit(uint _timestamp, string _datasource, string _arg, uint _gaslimit);getPrice(string _datasource);getPrice(string _datasource, uint gaslimit);useCoupon(string _coupon);setProofType(byte _proofType);getAddress();oraclize_setNetwork(uint8 networkID);oraclize_query(string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2, uint gaslimit);oraclize_cbAddress();oraclize_setProof(byte proofP);getCodeSize(address _addr);parseAddr(string _a);strCompare(string _a, string _b);indexOf(string _haystack, string _needle);strConcat(string _a, string _b, string _c, string _d, string _e);strConcat(string _a, string _b, string _c, string _d);strConcat(string _a, string _b, string _c);strConcat(string _a, string _b);parseInt(string _a);parseInt(string _a, uint _b)"
Spreadway/core,DAO-develop/libs/oraclize.sol,"query(uint _timestamp, string _datasource, string _arg);query_withGasLimit(uint _timestamp, string _datasource, string _arg, uint _gaslimit);getPrice(string _datasource);getPrice(string _datasource, uint gaslimit);useCoupon(string _coupon);setProofType(byte _proofType);getAddress();oraclize_setNetwork(uint8 networkID);oraclize_query(string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2, uint gaslimit);oraclize_cbAddress();oraclize_setProof(byte proofP);getCodeSize(address _addr);parseAddr(string _a);strCompare(string _a, string _b);indexOf(string _haystack, string _needle);strConcat(string _a, string _b, string _c, string _d, string _e);strConcat(string _a, string _b, string _c, string _d);strConcat(string _a, string _b, string _c);strConcat(string _a, string _b);parseInt(string _a);parseInt(string _a, uint _b)"
ashellwig/Ethereum-Mutual-Fund,libs/oraclize.sol,"query(uint _timestamp, string _datasource, string _arg);query_withGasLimit(uint _timestamp, string _datasource, string _arg, uint _gaslimit);getPrice(string _datasource);getPrice(string _datasource, uint gaslimit);useCoupon(string _coupon);setProofType(byte _proofType);getAddress();oraclize_setNetwork(uint8 networkID);oraclize_query(string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2, uint gaslimit);oraclize_cbAddress();oraclize_setProof(byte proofP);getCodeSize(address _addr);parseAddr(string _a);strCompare(string _a, string _b);indexOf(string _haystack, string _needle);strConcat(string _a, string _b, string _c, string _d, string _e);strConcat(string _a, string _b, string _c, string _d);strConcat(string _a, string _b, string _c);strConcat(string _a, string _b);parseInt(string _a);parseInt(string _a, uint _b)"
validitylabs/SimpleEthVote,contracts/Payout.sol,setVoteFactory(address voteFactoryAddress);setPayoutAmount();payOutVoterById(uint voterId);payOutVoterByAddress(address voter);getCurrentNumberOfVoters()
RealEstateAssetLedger/real_contract,contracts/REALCrowdsale.sol,"REALCrowdsale();setGuaranteedAddress(address _th, uint256 _limit);proxyPayment(address _th);onTransfer(address, address, uint256);onApprove(address, address, uint256);buyNormal(address _th);buyGuaranteed(address _th);doBuy(address _th, uint256 _toFund, bool _guaranteed);finalize();percent(uint256 p);isContract(address _sender);tokensIssued();totalCollected();getBlockNumber();claimTokens(address _token);pauseContribution();resumeContribution()"
slockit/DAO,simpleWithdraw.sol,withdraw(address donateExtraBalanceTo)
orbro/eth-enablers,DAO-develop/simpleWithdraw.sol,withdraw(address donateExtraBalanceTo)
Spreadway/core,DAO-develop/simpleWithdraw.sol,withdraw(address donateExtraBalanceTo)
ashellwig/Ethereum-Mutual-Fund,simpleWithdraw.sol,withdraw(address donateExtraBalanceTo)
ethbets/ebets,contracts/governanceInterface.sol,"__resolve(uint outcome);isMember(address user);getName();getHigherInstance();addMember(address member);removeMember(address member);castVote(address proposal, uint outcome);addProposal(address contractToDecide, uint deadline)"
TrueBitFoundation/webasm-solidity,contracts/fs.sol,"consume(bytes32 id, bytes32[] dta);createFileWithContents(string name, uint nonce, bytes32[] arr, uint sz);calcId(uint nonce);addIPFSFile(string name, uint size, string hash, bytes32 root, uint nonce);getName(bytes32 id);getNameHash(bytes32 id);getHash(bytes32 id);getByteSize(bytes32 id);setByteSize(bytes32 id, uint sz);getData(bytes32 id);getByteData(bytes32 id);forwardData(bytes32 id, address a);getRoot(bytes32 id);getLeaf(bytes32 id, uint loc);makeSimpleBundle(uint num, address code, bytes32 code_init, bytes32 file_id);finalizeBundleIPFS(bytes32 id, string file, bytes32 init);debug_finalizeBundleIPFS(bytes32 id, string file, bytes32 init);makeBundle(uint num);addToBundle(bytes32 id, bytes32 file_id);getInitHash(bytes32 bid);getCode(bytes32 bid);getIPFSCode(bytes32 bid);getFiles(bytes32 bid);getCodeAtAddress(address a);makeMerkle(bytes arr, uint idx, uint level);calcMerkle(bytes32[] arr, uint idx, uint level);fileMerkle(bytes32[] arr, uint idx, uint level);calcMerkleFiles(bytes32[] arr, uint idx, uint level);hashName(string name);addChunk(bytes32[] arr, uint sz);combineChunks(bytes32[] arr, uint part_sz, uint sz);fileFromChunk(string name, bytes32 chunk, uint size);idToString(bytes32 id);makeMerkle(bytes arr, uint idx, uint level);calcMerkle(bytes32[] arr, uint idx, uint level);hashName(string name)"
ChronoBank/LX-SC,contracts/helpers/ManagerMock.sol,"deny();isAllowed(address, bytes32)"
daostack/daostack,contracts/schemes/SchemeConstraints.sol,getContractsWhiteList()
raineorshine/solgraph,test/in/Payable.sol,Foo()
lkiversonlk/eth-cms,src/contract/94Ex.sol,"safeMul(uint a, uint b);safeSub(uint a, uint b);safeAdd(uint a, uint b);assert(bool assertion);totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);ReserveToken();create(address account, uint amount);destroy(address account, uint amount);accountLevel(address user);setAccountLevel(address user, uint level);accountLevel(address user);EtherDelta(address admin_, address feeAccount_, address accountLevelsAddr_, uint feeMake_, uint feeTake_, uint feeRebate_);changeAdmin(address admin_);changeAccountLevelsAddr(address accountLevelsAddr_);changeFeeAccount(address feeAccount_);changeFeeMake(uint feeMake_);changeFeeTake(uint feeTake_);changeFeeRebate(uint feeRebate_);deposit();withdraw(uint amount);depositToken(address token, uint amount);withdrawToken(address token, uint amount);balanceOf(address token, address user);order(address tokenGet, uint amountGet, address tokenGive, uint amountGive, uint expires, uint nonce);trade(address tokenGet, uint amountGet, address tokenGive, uint amountGive, uint expires, uint nonce, address user, uint8 v, bytes32 r, bytes32 s, uint amount);tradeBalances(address tokenGet, uint amountGet, address tokenGive, uint amountGive, address user, uint amount);testTrade(address tokenGet, uint amountGet, address tokenGive, uint amountGive, uint expires, uint nonce, address user, uint8 v, bytes32 r, bytes32 s, uint amount, address sender);availableVolume(address tokenGet, uint amountGet, address tokenGive, uint amountGive, uint expires, uint nonce, address user, uint8 v, bytes32 r, bytes32 s);amountFilled(address tokenGet, uint amountGet, address tokenGive, uint amountGive, uint expires, uint nonce, address user, uint8 v, bytes32 r, bytes32 s);cancelOrder(address tokenGet, uint amountGet, address tokenGive, uint amountGive, uint expires, uint nonce, uint8 v, bytes32 r, bytes32 s)"
kinfoundation/kin-token,contracts/ERC20.sol,"balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
silasdavis/eris-db,tests/jobs_fixtures/app24-multiple_inheritance_and_intermingling_contracts/three.sol,iii()
silasdavis/burrow,tests/jobs_fixtures/app24-multiple_inheritance_and_intermingling_contracts/three.sol,iii()
eris-ltd/eris-db,tests/jobs_fixtures/app24-multiple_inheritance_and_intermingling_contracts/three.sol,iii()
y12studio/y12eth,yetxkd1601/contracts/Yetxkd1601.sol,"sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
iswarm/p2pCny,ptopCNY.sol,"Bilateral();startPtopDeposit(address _seller, address _buyer, bytes32 _hash, uint256 _blockNumForTransfer, uint256 _blockNumForAskAbitrator);twoSigned(byte32 _operation);endPtopDeposit(address _seller, address _buyer, bytes32 _hash);withdrawPledge();beArbitrator();quitArbitrator();askArbitrator(address _arbitrator, bytes32 _hash);arbitrate(address _seller, address _buyer, bytes32 _hash, bool _bobResult);unlockCashpledge(bytes32 _hash)"
amisolution/Test,AMI-token.sol,"balanceOf(address owner);transfer(address to, uint256 value);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);allowance(address owner, address spender);StandardToken();transfer(address to, uint256 value);transferFrom(address from, address to, uint256 value);balanceOf(address owner);approve(address spender, uint256 value);allowance(address owner, address spender);AMIS(address multisig);createAMIS(address holder);getPrice();getTotalSupply();getNow();getTotalValue()"
Nipol/WhisperGroup,contracts/Group.sol,"Group(string adwhisperid);makeUser(address memberaddr, string whisperid, string nickname)"
ineiti/cothorities,bevm/testdata/MinimumToken/MinimumToken.sol,""
DeDiS/cothority,bevm/testdata/MinimumToken/MinimumToken.sol,""
silasdavis/eris-db,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs4.sol,"addThing(string memory description, bytes32 url, string memory filehash, string memory filename)"
silasdavis/burrow,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs4.sol,"addThing(string memory description, bytes32 url, string memory filehash, string memory filename)"
eris-ltd/eris-db,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs4.sol,"addThing(string memory description, bytes32 url, string memory filehash, string memory filename)"
nud3l/verifying-computation-solidity,contracts/usingOraclize.sol,"query(uint _timestamp, string _datasource, string _arg);query_withGasLimit(uint _timestamp, string _datasource, string _arg, uint _gaslimit);queryN(uint _timestamp, string _datasource, bytes _argN);queryN_withGasLimit(uint _timestamp, string _datasource, bytes _argN, uint _gaslimit);getPrice(string _datasource);getPrice(string _datasource, uint gaslimit);useCoupon(string _coupon);setProofType(byte _proofType);setConfig(bytes32 _config);setCustomGasPrice(uint _gasPrice);getAddress();oraclize_setNetwork(uint8 networkID);__callback(bytes32 myid, string result);__callback(bytes32 myid, string result, bytes proof);oraclize_getPrice(string datasource);oraclize_getPrice(string datasource, uint gaslimit);oraclize_query(string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2, uint gaslimit);oraclize_query(string datasource, string[] argN);oraclize_query(uint timestamp, string datasource, string[] argN);oraclize_query(uint timestamp, string datasource, string[] argN, uint gaslimit);oraclize_query(string datasource, string[] argN, uint gaslimit);oraclize_query(string datasource, string[1] args);oraclize_query(uint timestamp, string datasource, string[1] args);oraclize_query(uint timestamp, string datasource, string[1] args, uint gaslimit);oraclize_query(string datasource, string[1] args, uint gaslimit);oraclize_query(string datasource, string[2] args);oraclize_query(uint timestamp, string datasource, string[2] args);oraclize_query(uint timestamp, string datasource, string[2] args, uint gaslimit);oraclize_query(string datasource, string[2] args, uint gaslimit);oraclize_query(string datasource, string[3] args);oraclize_query(uint timestamp, string datasource, string[3] args);oraclize_query(uint timestamp, string datasource, string[3] args, uint gaslimit);oraclize_query(string datasource, string[3] args, uint gaslimit);oraclize_query(string datasource, string[4] args);oraclize_query(uint timestamp, string datasource, string[4] args);oraclize_query(uint timestamp, string datasource, string[4] args, uint gaslimit);oraclize_query(string datasource, string[4] args, uint gaslimit);oraclize_query(string datasource, string[5] args);oraclize_query(uint timestamp, string datasource, string[5] args);oraclize_query(uint timestamp, string datasource, string[5] args, uint gaslimit);oraclize_query(string datasource, string[5] args, uint gaslimit);oraclize_cbAddress();oraclize_setProof(byte proofP);oraclize_setCustomGasPrice(uint gasPrice);oraclize_setConfig(bytes32 config);getCodeSize(address _addr);parseAddr(string _a);strCompare(string _a, string _b);indexOf(string _haystack, string _needle);strConcat(string _a, string _b, string _c, string _d, string _e);strConcat(string _a, string _b, string _c, string _d);strConcat(string _a, string _b, string _c);strConcat(string _a, string _b);parseInt(string _a);parseInt(string _a, uint _b)"
allegewhd/erc20-token-service,contract/FixedCapSampleCoin.sol,FixedCapSampleCoin()
energychain/stromdao-solidity,assets/stromkonto/Stromkonto.sol,"owned();transferOwnership(address newOwner);transfer(address _to, uint256 _value);balanceOf(address _owner);addTx(address _to, uint256 _value,string _txt);transfer(address _to, uint256 _value);balanceHaben(address _owner);balanceSoll(address _owner);addTx(address _from,address _to, uint256 _value,string _txt);BalancerOracle();setBalancer(StableBalancer _balancer);balanceHaben(address _owner);balanceSoll(address _owner);addTx(address _from,address _to, uint256 _value,string _txt);transferOracleOwnership(address _owner);addOracle(address _oracle);removeOracle(address _oracle);setValue(string _value);setValue(address key,string _value);setValue(address key,uint256 amount,uint256 repeatMinutes,uint256 repeatTimes)"
Dobrokhvalov/eth2phone,contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app06-deploy_basic_contract_and_different_solc_types_packed_unpacked/storage.sol,setBool(bool x);getBool();setInt(int x);getInt();setUint(uint x);getUint();setAddress(address x);getAddress();setBytes(bytes32 x);getBytes();setString(string x);getString()
eris-ltd/eris,tests/jobs_fixtures/app06-deploy_basic_contract_and_different_solc_types_packed_unpacked/storage.sol,setBool(bool x);getBool();setInt(int x);getInt();setUint(uint x);getUint();setAddress(address x);getAddress();setBytes(bytes32 x);getBytes();setString(string x);getString()
monax/monax,tests/jobs_fixtures/app06-deploy_basic_contract_and_different_solc_types_packed_unpacked/storage.sol,setBool(bool x);getBool();setInt(int x);getInt();setUint(uint x);getUint();setAddress(address x);getAddress();setBytes(bytes32 x);getBytes();setString(string x);getString()
eris-ltd/eris-cli,tests/jobs_fixtures/app06-deploy_basic_contract_and_different_solc_types_packed_unpacked/storage.sol,setBool(bool x);getBool();setInt(int x);getInt();setUint(uint x);getUint();setAddress(address x);getAddress();setBytes(bytes32 x);getBytes();setString(string x);getString()
monax/cli,tests/jobs_fixtures/app06-deploy_basic_contract_and_different_solc_types_packed_unpacked/storage.sol,setBool(bool x);getBool();setInt(int x);getInt();setUint(uint x);getUint();setAddress(address x);getAddress();setBytes(bytes32 x);getBytes();setString(string x);getString()
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app06-deploy_basic_contract_and_different_solc_types_packed_unpacked/storage.sol,setBool(bool x);getBool();setInt(int x);getInt();setUint(uint x);getUint();setAddress(address x);getAddress();setBytes(bytes32 x);getBytes();setString(string x);getString()
ethereum/remix,remix-tests/examples/simple_storage.sol,set(uint x);get()
robmyers/artworld-ethereum,old/src/hot-cold/contracts/HotCold.sol,HotCold();swap()
jimy74/Chablex,Smart Contracts/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
mexskican/dapp,contracts/contracts/register.sol,Register();add(string _name)
iam-dev/ERC23,contracts/token/interface/Controller.sol,"proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount)"
GovernX/governx-contracts,src/contracts/utils/IMiniMeToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);generateTokens(address _to, uint256 _value);destroyTokens(address _owner, uint _amount);approveAndCall(address _spender, uint256 _value, bytes _extraData);balanceOf(address _owner);enableTransfers(bool _transfersEnabled);balanceOfAt(address _owner, uint256 _blockNumber);balanceOfAtTime(address _owner, uint256 _time);totalSupply();totalSupplyAt(uint256 _blockNumber);totalSupplyAtTime(uint256 _time)"
AustP/autocomplete-solidity,spec/files/StringLib.sol,uintToBytes(uint v);bytesToUInt(bytes32 v);uintToBytes(uint v);bytesToUInt(bytes32 v);someFunction()
dltdojo/courses,ethereum/solidity/T124_Encryption.sol,"set(uint _b);checkMAC(bytes32 key, bytes32[] cipher, bytes32 expected);_blockKey(bytes32 key, bytes32 iv, uint idx);encrypt(bytes32 key, bytes32 iv, bytes32[] memory data);decrypt(bytes32 key, bytes32[] memory cipher, bytes32 mac)"
civilizationalpha/WeQuest,truffle/contracts/WeQuest.sol,"WeQuest();request(bytes32 label, string lat, string lon);listResources()"
Nethereum/Nethereum,src/Nethereum.ENS/oldcontracts/PublicResolver.sol,"PublicResolver(ENS ensAddr);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash);setMultihash(bytes32 node, bytes hash);setName(bytes32 node, string name);setABI(bytes32 node, uint256 contentType, bytes data);setPubkey(bytes32 node, bytes32 x, bytes32 y);setText(bytes32 node, string key, string value);text(bytes32 node, string key);pubkey(bytes32 node);ABI(bytes32 node, uint256 contentTypes);name(bytes32 node);content(bytes32 node);multihash(bytes32 node);addr(bytes32 node);supportsInterface(bytes4 interfaceID)"
SmartChainX/ChainBlockchain,Contracts/safe.sol,"safeAdd(uint a, uint b);safeSubtract(uint a, uint b);safeMultiply(uint a, uint b)"
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/examples/ProofOfExistence.sol,storeProof(bytes32 proof);notarize(string document);calculateProof(string document);checkDocument(string document);hasProof(bytes32 proof)
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/examples/ProofOfExistence.sol,storeProof(bytes32 proof);notarize(string document);calculateProof(string document);checkDocument(string document);hasProof(bytes32 proof)
silasdavis/eris-db,tests/jobs_fixtures/app12-check_package_dot_json_presence/storage.sol,set(int x);get()
silasdavis/burrow,tests/jobs_fixtures/app12-check_package_dot_json_presence/storage.sol,set(int x);get()
eris-ltd/eris-db,tests/jobs_fixtures/app12-check_package_dot_json_presence/storage.sol,set(int x);get()
SilentCicero/wafr,src/tests/solidityTests/gasUsage/examples/LiquidDemocracyRules.sol,"configureBoard(address _board);resignAsCurator(address _board);depositBond(address _board, uint _proposalID);delegateVote(address _board, address _delegate, uint _proposalID);widthrawBondFunds(address _destination)"
manishbisht/Udacity,Blockchain Developer Nanodegree/P6 - Architect a Blockchain Supply Chain Solution/Part B/Starter_Code/project-6/contracts/accessControl/ManufacturerRole.sol,isManufacturer(address account);addManufacturer(address account);renounceManufacturer();_addManufacturer(address account);_removeManufacturer(address account)
pz7/liquet,contracts/lottery/LiquetLottery.sol,"LiquetLottery();bet(uint a, uint b, uint c, uint d, uint e, uint f)"
EthTrader/dappening,old/RegReader.sol,RegReader(address _registry);getUserByUsername(bytes20 _username);getUserByUsername(bytes20 _username);getIndexBatchByUsername(bytes20[] _usernames);getAddressBatchByUsername(bytes20[] _usernames)
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/inheritance/contracts/LeafA.sol,""
holiman/cpp-ethereum,test/unittests/performance/loop.sol,loop()
etherisc/flightDelay,contracts/FlightDelayPayout.sol,"FlightDelayPayout(address _controller);setContracts();fund();schedulePayoutOraclizeCall(uint _policyId, bytes32 _riskId, uint _oraclizeTime);__callback(bytes32 _queryId, string _result, bytes _proof);payOut(uint _policyId, uint8 _delay, uint _delayInMinutes)"
WeiFund/WeiFund,contracts/MultiService.sol,"newCampaign(uint _campaignID, address _owner, uint _fundingGoal);contribute(uint _campaignID, address _contributor, address _beneficiary, uint _amountContributed);refund(uint _campaignID, address _contributor, uint _amountRefunded);payout(uint _campaignID, uint _amountPaid);newCampaign(string _name, address _beneficiary, uint _fundingGoal, uint _expiry, address _config);contribute(uint _campaignID, address _beneficiary);refund(uint _campaignID, uint _contribution);payout(uint _campaignID);operatorCampaignID(address _operator, uint _campaignIndex);totalCampaignsBy(address _operator);totalContributionsBy(uint _campaignID, address _contributor);totalCampaigns();contributionAt(uint _campaignID, uint _contributionID);createdAt(uint _campaignID);contributionID(uint _campaignID, address _contributor, uint _contributionIndex);ownerOf(uint _campaignID);beneficiaryOf(uint _campaignID);configOf(uint _campaignID);amountRaisedBy(uint _campaignID);fundingGoalOf(uint _campaignID);expiryOf(uint _campaignID);totalContributors(uint _campaignID);isContributor(uint _campaignID, address _contributor);isOwner(uint _campaignID, address _owner);hasFailed(uint _campaignID);isSuccess(uint _campaignID);isPaidOut(uint _campaignID);totalRefunded(uint _campaignID);isRefunded(uint _campaignID);MultiService(address _weifund, address[] _services);newCampaign(uint _campaignID, address _owner, uint _fundingGoal);contribute(uint _campaignID, address _contributor, address _beneficiary, uint _amountContributed);refund(uint _campaignID, address _contributor, uint _amountRefunded);payout(uint _campaignID, uint _amountPaid)"
vishakh/blockinstruments,contracts/ChainBackedOption.sol,ChainBackedOption();validate();withdraw();trigger();recall();strToOperator(bytes32 str);strToUnderlierType(bytes32 str);resolveUnderlier(Underlier underlier);sumUnderliers(Underlier[] underliers);checkConditional(Conditional conditional);checkConjunction(Conditional[] conditionals);isConditionMet()
eris-ltd/eris-compilers,tests/contractImport4.sol,getVariables()
eris-ltd/lllc-server,tests/contractImport4.sol,getVariables()
WishFinanceCom/WF-contracts,contracts/migration/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
jellegerbrandy/daostack,contracts/Token.sol,Token()
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs11.sol,"addThing(bytes32 description, string url, string filehash, bytes32 filename)"
eris-ltd/eris,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs11.sol,"addThing(bytes32 description, string url, string filehash, bytes32 filename)"
monax/monax,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs11.sol,"addThing(bytes32 description, string url, string filehash, bytes32 filename)"
eris-ltd/eris-cli,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs11.sol,"addThing(bytes32 description, string url, string filehash, bytes32 filename)"
monax/cli,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs11.sol,"addThing(bytes32 description, string url, string filehash, bytes32 filename)"
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs11.sol,"addThing(bytes32 description, string url, string filehash, bytes32 filename)"
khmuminov/TokenSale,TokenSale.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);balanceOf(address _address);transferFromOwner(address _to, uint256 _value);setOwner(address _owner);setRate(uint _exchangeRate);setToken(address _icoToken);balanceOf(address _address);transfer(address _to, uint _value);transferByOwner(uint _value);convert();exchangeToIco(address owner);TokenSale();kill();transferFromOwner(address _to, uint256 _value);min(uint a, uint b)"
nolash/go-ethereum-p2p-demo,p2p/protocol-complex/contracts/pss.sol,"deposit();transfer(uint256 amount, address beneficiary);withdraw(uint256 amount)"
mothershipcx/contracts,contracts/test/ContributionMock.sol,ContributionMock();getBlockNumber();setMockedBlockNumber(uint _b)
bluedroplet/blobstore-ethereum,src/MixItemStoreShortId.t.sol,setUp();testControlCreateShortIdAlreadyExists();testFailCreateShortIdAlreadyExists();testCreateShortId()
link-blockchain/blobstore,src/MixItemStoreShortId.t.sol,setUp();testControlCreateShortIdAlreadyExists();testFailCreateShortIdAlreadyExists();testCreateShortId()
LianaHus/dapp-bin,standardized_contract_apis/fee_charging_datafeed.sol,"datafeed();set(bytes32 k, int256 v);setFee(uint256 f);get(bytes32 k);getFee()"
ethereum/dapp-bin,standardized_contract_apis/fee_charging_datafeed.sol,"datafeed();set(bytes32 k, int256 v);setFee(uint256 f);get(bytes32 k);getFee()"
vaporry/dapp-bin,standardized_contract_apis/fee_charging_datafeed.sol,"datafeed();set(bytes32 k, int256 v);setFee(uint256 f);get(bytes32 k);getFee()"
manosamy/enslisting,contracts/AbstractDeed.sol,""
nolash/go-ethereum-p2p-demo,solidity/upgrade/Main.sol,Main()
onewed/unitycoin,test/helpers/MockSale.sol,getTokenAddress();getNow();getCurrentDiscountTrancheIndex();getDiscountTrancheEnd(uint8 _index);getDiscountTrancheDiscount(uint8 _index);getWeiForRefund()
ryepdx/etherlab,lib/democracy/directDemocracy.sol,"DirectDemocracy();permitted(address action);addOwner(address owner);removeOwner(address owner);proposeAction(address proposedAction);withdrawProposedAction();setQuorumPercent(uint8 percent);setMarginForVictoryPercent(uint8 percent);setMinimumVotingWindow(uint minimumWindow);setMaximumVotingWindow(uint maximumWindow);wipeProposedActions();vote(address owner, address action, Vote vote);spend(address recipient, uint amount);remove();_removeProposal(address owner);_updateMargins();_checkVotes(address owner)"
robmyers/artworld-ethereum,dapps/schellingflags/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
kleroterion/dapp,contracts/Arbitrated/TwoPartyArbitrable.sol,"TwoPartyArbitrable(Court _court, address _partyB, uint256 _timeToReac);ruleA(uint256 disputeID);ruleB(uint256 disputeID);executeRulingA(uint256 _disputeID);executeRulingB(uint256 _disputeID);actionA(uint256 _disputeID);actionB(uint256 _disputeID);clean();request(bytes32 _hashRandom);counterRequest(uint256 _secondRandom);createDispute(uint256 firstRandom);hash(uint256 n);executeDueToInactivity(bool executeA);appeal(bytes32 _hashRandom);counterAppeal(uint256 _secondRandom);createAppeal(uint256 firstRandom)"
becodemonkey/solidity,contracts/token/MultiSigMintToken.sol,"submitMint(address _to, uint256 _amount)"
lionell/labs,infosec/contracts/Bank.sol,Bank();getUserBalance(address user);addToBalance();withdrawBalance()
lionell/university-labs,infosec/contracts/Bank.sol,Bank();getUserBalance(address user);addToBalance();withdrawBalance()
lionell/laboratories,infosec/contracts/Bank.sol,Bank();getUserBalance(address user);addToBalance();withdrawBalance()
TrueBitFoundation/webasm-solidity,contracts/tasks.sol,"solved(uint id, bytes32[] files);rejected(uint id);getInteractive();defaultParameters(uint id);add(bytes32 init, CodeType ct, Storage cs, string stor);commit(uint id);addWithParameters(bytes32 init, CodeType ct, Storage cs, string stor, uint8 stack, uint8 mem, uint8 globals, uint8 table, uint8 call);requireFile(uint id, bytes32 hash, Storage st);getUploadNames(uint id);getUploadTypes(uint id);taskInfo(uint unq);getVMParameters(uint id);nextTask();getSolver(uint id);solveIO(uint id, bytes32 code, bytes32 size, bytes32 name, bytes32 data);solutionInfo(uint unq);getCodeType(uint id);getCodeStorage(uint id);challenge(uint id);queryChallenge(bytes32 uniq);getChallenges(uint id);uploadFile(uint id, uint num, bytes32 file_id, bytes32[] name_proof, bytes32[] data_proof, uint file_num);finalizeTask(uint id);claimDeposit(bytes32 cid);tick()"
paulhauner/token-syndicate,contracts/BAT/SafeMath.sol,"assert(bool assertion);safeAdd(uint256 x, uint256 y);safeSubtract(uint256 x, uint256 y);safeMult(uint256 x, uint256 y)"
matthiaszimmermann/web3j_demo,src/main/resources/greeter.sol,greeter(string _greeting);greet();kill()
kierenh/vue-dark-chocolate,contracts/KeyedCollection.sol,KeyedCollection();addKey(bytes32 key);exists(bytes32 key);getCount()
nivertech/ethereum_cosmo,greeter.sol,greet(bytes32 input)
raiden-network/raiden-token,contracts/test/proxy.sol,"Proxy();fund();proxy(address to, string func, address data, uint num);proxyPayable(address to, string function_string)"
erkmos/moeda,contracts/vendored/gnosis/MultiSigWallet.sol,"MultiSigWallet(address[] _owners, uint _required);addOwner(address owner);removeOwner(address owner);replaceOwner(address owner, address newOwner);changeRequirement(uint _required);submitTransaction(address destination, uint value, bytes data);confirmTransaction(uint transactionId);revokeConfirmation(uint transactionId);executeTransaction(uint transactionId);isConfirmed(uint transactionId);addTransaction(address destination, uint value, bytes data);getConfirmationCount(uint transactionId);getTransactionCount(bool pending, bool executed);getOwners();getConfirmations(uint transactionId);getTransactionIds(uint from, uint to, bool pending, bool executed)"
DigixGlobal/ethereum-ruby,contracts/Gold.sol,"Gold(address _conf, uint256 _wt);register(address _owner);activate();getCalculatedFees();mint();transferOwner(address _recipient);getOwner();getLastStoragePayDate();getStorageRate();getWeightMinusFees();hasFees();isActive();isYellow();isRed();canSend();getWeight()"
EthWorks/ethereum.rb,contracts/Gold.sol,"Gold(address _conf, uint256 _wt);register(address _owner);activate();getCalculatedFees();mint();transferOwner(address _recipient);getOwner();getLastStoragePayDate();getStorageRate();getWeightMinusFees();hasFees();isActive();isYellow();isRed();canSend();getWeight()"
marekkirejczyk/ethereum.rb,contracts/Gold.sol,"Gold(address _conf, uint256 _wt);register(address _owner);activate();getCalculatedFees();mint();transferOwner(address _recipient);getOwner();getLastStoragePayDate();getStorageRate();getWeightMinusFees();hasFees();isActive();isYellow();isRed();canSend();getWeight()"
hankshz/dockers,ethereum/workspace/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
mcgoddard/connect4eth,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
CoinOffering/CoinOffering.Dapp,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
brakmic/BlockchainStore,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
civilizationalpha/WeQuest,truffle/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
jesseweed/seti-ui,file-types/Solidity.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
tyleryasaka/EtherCred,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
sarbogast/angular-metacoin,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
szerintedmi/numbergame,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
hainesc/daochain,contract/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
jellegerbrandy/daostack,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
cniemann/etherpricebet,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
DaoCloud/dao-chain,contract/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
saurabh-kurdukar/hackathon,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
deadmenswitch/dms,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
flysonic10/initial-celestial-offering,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
hygzhu/P2Secure,BorrowIt/truffletest/arthur-dev/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
qjflores/singularity,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
OR13/car2go,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
NahimNasser/ethwaterloo2017,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
BeBlockTech/Anemoi,Master/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
dxzdanny2407/Ethereum-Voting-DApp,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
pierredepaz/politics-of-code,11_intro_to_blockchain/hello-ethereum/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
fengkiej/chainsign,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
itmo-infocom/EcoChain,DApp/truffle-test/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
y12studio/dltdojo,dockerfiles/truffle/v320/ddjtab/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
y12studio/dltdojo,contracts/ddjtab/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
smoove/AddressOwnershipVerification,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
youvegoteth/youvegoteth.github.io,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
yoLUkAsss/DEscrutinio,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
davidoevans/react-redux-dapp,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
liors/tvdapp,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Neufund/Contracts,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
ranneyd/eth-faucet,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
spdz/ethereum_class_01,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
victorsintnicolaas/RVR,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
victorsintnicolaas/RVR,temp/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
syigzaw/ethjournal,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
corbinpage/ethereum-play,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Solvocracy/solvocracy-dapp,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
pooleja/SolidityPlayground,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
TripleSpeeder/StandingOrderDapp,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
LindaHealthcareICO/linda-crowdsale,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
blockchain-IoT/blockchain-IoT-core,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
yippee-ki-yay/eth-slots,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
nedodn/ethcrow,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Spreadway/core,token-vesting-ui/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
adridadou/shipia,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
JohannesBertens/movie-list,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
lzxm160/test-dapp,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
3of5of7/scoreboard,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
jashans98/dwikileaks,app/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
hsavit1/gosofi_webpage,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
EthereumUCM/BetfundingSimulation,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
saikyerubandi/smart-contract-beginner,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
horefice/donatechain,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
transmute-industries/eth-faucet,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
FekraTechnology/SmartSLA,05-Source Code/SMAG_Contract/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
infwonder/BlockQuotes,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
matmoi/Roulette,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
FilipPyrek/ethereum-csgo-example,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
transmute-industries/monarch-app,truffle/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
dmozzy/TimeClock,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
jvah/spicehours,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
cpetty-Novetta/raffle-dapp,imports/smart-contracts/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
TickethProject/ticketh-core,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
dltdojo/courses,ethereum/truffle/mytoken/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
dltdojo/courses,ethereum/truffle/boxreact/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
raviupreti85/tenancy-dapp,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
mediachain/cccoin,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
giulidb/ticket_dapp,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
dukoolio/d3health_code,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
kierenh/vue-dark-chocolate,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
sonm-io/token,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
QTBlockchain/SolidityNWeb3,SmartContracts/March2018/ArrayDemo/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Revolution1/daochain,contract/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
alantsv/gercom-ico,gercoin/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
DaoCloud/daochain,contract/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
qjflores/mealbot,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
openonelabs/graffiti,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
SimonBatardiere/frozenether,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
ArjunBhuptani/VILLJ,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
DramaticLiberty/GreenChain,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
coder-forge/chain-forge,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
livepeer/protocol,contracts/jobs/IJobsManager.sol,""
e-nettet/CustomerConsentWallet,contracts/Consents.sol,"Consents();requestConsent(address customer, address data_owner, uint id);updateConsent(address data_requester, address data_owner, uint id, State state);getConsent(uint index);customerConsents(address customer);changeConsent(address customer, address data_owner, address data_requester, uint id, State newState);requestData(address customer, address data_owner, uint id);provideData(address customer, address data_requester, uint id, bytes payload);kill()"
lifechange-io/christ-coin,contracts/Migrations.sol,Migrations();setCompleted(uint _completed);upgrade(address _newAddress)
SafecontractDev/protocol,contracts/bancor_contracts/Utils.sol,"Utils();safeAdd(uint256 _x, uint256 _y);safeSub(uint256 _x, uint256 _y);safeMul(uint256 _x, uint256 _y)"
LOOMIA/loomia,ethereum/contracts/Utils.sol,"Utils();safeAdd(uint256 _x, uint256 _y);safeSub(uint256 _x, uint256 _y);safeMul(uint256 _x, uint256 _y)"
mhhf/dapple,test/_fixtures/streams_test/src/sol/tests.sol,""
nexusdev/dapple-test,test/_fixtures/streams_test/src/sol/tests.sol,""
nexusdev/dapple,test/_fixtures/streams_test/src/sol/tests.sol,""
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app35-library_handling/multi-lib-consumer.sol,c();basicFunctionReturn()
eris-ltd/eris,tests/jobs_fixtures/app35-library_handling/multi-lib-consumer.sol,c();basicFunctionReturn()
monax/monax,tests/jobs_fixtures/app35-library_handling/multi-lib-consumer.sol,c();basicFunctionReturn()
eris-ltd/eris-cli,tests/jobs_fixtures/app35-library_handling/multi-lib-consumer.sol,c();basicFunctionReturn()
monax/cli,tests/jobs_fixtures/app35-library_handling/multi-lib-consumer.sol,c();basicFunctionReturn()
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app35-library_handling/multi-lib-consumer.sol,c();basicFunctionReturn()
aragon/aragon-network-token,packages/sale/test/TestTokenSale.sol,beforeAll();beforeEach();testHasCorrectPriceForStages();testHasCorrectPriceForMultistage();testAllocatesTokensInSale();testCannotGetTokensInNotInitiatedSale();throwsWhenGettingTokensInNotInitiatedSale();testEmergencyStop();testCantBuyTokensInStoppedSale();throwsWhenGettingTokensWithStoppedSale();testCantBuyTokensInEndedSale();throwsWhenGettingTokensWithEndedSale();testTokensAreLockedDuringSale();throwsWhenTransferingDuringSale();testTokensAreTransferrableAfterSale();testFundsAreTransferrableAfterSale();testFundsAreLockedDuringSale();throwsWhenTransferingFundsDuringSale();testNetworkDeployment();doTransfer(address token)
mwensveen-nl/solidity-testing,src/test/resources/transaction1.sol,getSender();value()
Dicoiner/irianna-solidity,contracts/ownership/Claimable.sol,transferOwnership(address newOwner);claimOwnership()
stanta/darfchain,ICO/contracts/MilestonePricing.sol,"MilestonePricing(uint[] _milestones);setPreicoAddress(address preicoAddress, uint pricePerToken);getMilestone(uint n);getFirstMilestone();getLastMilestone();getPricingStartsAt();getPricingEndsAt();isSane(address _crowdsale);getCurrentMilestone();getCurrentPrice();calculatePrice(uint value, uint weiRaised, uint tokensSold, address msgSender, uint decimals)"
chevdor/testrpc,test/Oracle.sol,Oracle();currentBlock();setCurrentBlock()
Lyniat/hackaburg17-smartcontracts,backend_server/node_modules/ethereumjs-testrpc/test/Oracle.sol,Oracle();currentBlock();setCurrentBlock()
eris-ltd/eris-compilers,tests/contractImport3.sol,getMappingElement(uint a)
eris-ltd/lllc-server,tests/contractImport3.sol,getMappingElement(uint a)
EMAXio/cosigner,cosigner-ethereum-token-storage/SolidityContracts/V4/OfflineMultiSig.sol,"ownerIndexBit(address addr);getNonce(address txSender);isOwner(address addr);getOwners();calculateTxHash(address txSender, address[] recipients, uint[] values);calculateAdminTxHash();confirmTransactionSig(bytes32 transactionHash);confirmTransaction();confirmAdminTx();OfflineMultiSig(address tokenContract, address admin, address[] owners, uint required);internalTransfer();freezeContract(bool freeze, uint8[] sigV, bytes32[] sigR, bytes32[] sigS)"
Braveno/cosigner,cosigner-ethereum-token-storage/SolidityContracts/V4/OfflineMultiSig.sol,"ownerIndexBit(address addr);getNonce(address txSender);isOwner(address addr);getOwners();calculateTxHash(address txSender, address[] recipients, uint[] values);calculateAdminTxHash();confirmTransactionSig(bytes32 transactionHash);confirmTransaction();confirmAdminTx();OfflineMultiSig(address tokenContract, address admin, address[] owners, uint required);internalTransfer();freezeContract(bool freeze, uint8[] sigV, bytes32[] sigR, bytes32[] sigS)"
EMAXio/heimdal,cosigner-ethereum-token-storage/SolidityContracts/V4/OfflineMultiSig.sol,"ownerIndexBit(address addr);getNonce(address txSender);isOwner(address addr);getOwners();calculateTxHash(address txSender, address[] recipients, uint[] values);calculateAdminTxHash();confirmTransactionSig(bytes32 transactionHash);confirmTransaction();confirmAdminTx();OfflineMultiSig(address tokenContract, address admin, address[] owners, uint required);internalTransfer();freezeContract(bool freeze, uint8[] sigV, bytes32[] sigR, bytes32[] sigS)"
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app27-multiple_imports_and_multiple_constructor_different_factory_types/contracts/GSMulti.sol,"GSMulti(uint initialValue1, uint initialValue2);set(uint first, uint second);getFirst();getSecond()"
eris-ltd/eris,tests/jobs_fixtures/app27-multiple_imports_and_multiple_constructor_different_factory_types/contracts/GSMulti.sol,"GSMulti(uint initialValue1, uint initialValue2);set(uint first, uint second);getFirst();getSecond()"
monax/monax,tests/jobs_fixtures/app27-multiple_imports_and_multiple_constructor_different_factory_types/contracts/GSMulti.sol,"GSMulti(uint initialValue1, uint initialValue2);set(uint first, uint second);getFirst();getSecond()"
eris-ltd/eris-cli,tests/jobs_fixtures/app27-multiple_imports_and_multiple_constructor_different_factory_types/contracts/GSMulti.sol,"GSMulti(uint initialValue1, uint initialValue2);set(uint first, uint second);getFirst();getSecond()"
monax/cli,tests/jobs_fixtures/app27-multiple_imports_and_multiple_constructor_different_factory_types/contracts/GSMulti.sol,"GSMulti(uint initialValue1, uint initialValue2);set(uint first, uint second);getFirst();getSecond()"
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app27-multiple_imports_and_multiple_constructor_different_factory_types/contracts/GSMulti.sol,"GSMulti(uint initialValue1, uint initialValue2);set(uint first, uint second);getFirst();getSecond()"
daostack/daostack,contracts/schemes/TransitionScheme.sol,transferAssets();sendEther(uint256 _amount);sendExternalToken(uint256[] calldata _amounts)
ledgerlabs/toy-state-channels,contracts/NonceCompareOp.sol,"getNonce(bytes32[] _state);isSuperior(bytes32[] _new, bytes32[] _old);isFinal(bytes32[] _state)"
b-mueller/mythril,solidity_examples/timelock.sol,deposit();increaseLockTime(uint _secondsToIncrease);withdraw()
gnosis/gnosis-contracts,contracts/Events/ScalarEvent.sol,redeemWinnings();getEventHash()
charles-cooper/raiden,raiden/tests/smart_contracts/SimpleApproveTransfer.sol,"SimpleApproveTransfer(address tokenAddress);transfer(address to, uint256 amount)"
tomashaber/raiden,raiden/tests/smart_contracts/SimpleApproveTransfer.sol,"SimpleApproveTransfer(address tokenAddress);transfer(address to, uint256 amount)"
Spreadway/core,eth/neurodao-master/NeuroDAO.sol,"owned();changeOwner(address _owner);confirmOwner();Crowdsale();Token();transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);burn(uint256 _value);migrateFrom(address _from, uint256 _value);TokenMigration();migrate(uint256 _value);setMigrationAgent(address _agent);NeuroDAO();withdraw();killMe()"
Majoolr/ethereum-libraries,CrowdsaleLib/EvenDistroCrowdsale/v1.0.0/EvenDistroCrowdsaleLib.sol,"registerUser(EvenDistroCrowdsaleStorage storage self, address _registrant);registerUsers(EvenDistroCrowdsaleStorage storage self, address[] _registrants);unregisterUser(EvenDistroCrowdsaleStorage storage self, address _registrant);unregisterUsers(EvenDistroCrowdsaleStorage storage self, address[] _registrants);calculateAddressCap(EvenDistroCrowdsaleStorage storage self);getMin(uint256 a, uint256 b);receivePurchase(EvenDistroCrowdsaleStorage storage self, uint256 _amount);setTokenExchangeRate(EvenDistroCrowdsaleStorage storage self, uint256 _exchangeRate);setTokens(EvenDistroCrowdsaleStorage storage self);withdrawTokens(EvenDistroCrowdsaleStorage storage self);withdrawLeftoverWei(EvenDistroCrowdsaleStorage storage self);withdrawOwnerEth(EvenDistroCrowdsaleStorage storage self);crowdsaleActive(EvenDistroCrowdsaleStorage storage self);crowdsaleEnded(EvenDistroCrowdsaleStorage storage self);validPurchase(EvenDistroCrowdsaleStorage storage self)"
boisde/Greed_Island,party/contracts/protocol/integration/AaveGovernanceAdapter.sol,"getVoteCalldata(uint256 _proposalId, bool _support, bytes memory _data);getDelegateCalldata(address /* _delegatee */);getRegisterCalldata(address /* _setToken */);getRevokeCalldata();getProposeCalldata(bytes memory /* _proposalData */)"
tomashaber/raiden,raiden/tests/smart_contracts/netting_channel/AuxiliaryTester.sol,"min(uint a, uint b);max(uint a, uint b);computeMerkleRoot(bytes lock, bytes merkle_proof);signatureSplit(bytes signature)"
Bit-Nation/BitnationApplications,Registry/registry.sol,"submit(address contract_addr, string name, string info_link, string description);vote(address target, bool support, string justification)"
AnnaIsAWang/LedgerLabsCoops2016,AbstractedStateChannel/LockedState.sol,checkState(bytes state);broadcastState(bytes state);kill()
gmo-blockchain/solidity,contracts/FileObject_v2.sol,"create(bytes32 _id, address _owner, bytes32 _nameHash, bytes32 _hash, address _cns, bytes32 _contractName);setHashByWriter(bytes32 _id, address _writer, bytes32 _hash);setHashByProvider(bytes32 _id, bytes32 _hash);getWriteTimestamp(bytes32 _id)"
aragon/aragon-network-token,packages/sale/test/helpers/AragonTokenSaleTokenMock.sol,"AragonTokenSaleTokenMock(address initialAccount, uint initialBalance)"
qjflores/singularity,contracts/Electricity.sol,"Electricity(string _name, string _description)"
Fermion-Project/Light-Wallet,contracts/Token.sol,"owned();transferOwnership(address newOwner);totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);FermionToken()"
dltdojo/courses,ethereum/dapps/token/T99_HumanStandardToken.sol,"balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);approveAndCall(address _spender, uint256 _value, bytes _extraData)"
chrisdotn/ethdemocracy,test/TestVotes.sol,beforeAll();testMsgSenderInVoters();testCreateElection();testCreateElectionOptions();testExistingVoteWeight();testNonExistingVoteWeight();testCastVote();testGetResults();testTransferVotes()
o0ragman0o/Withdrawable,contracts/Yank.sol,"yank(address[] _kAddrs, address[] _addrs)"
GovernX/governx-contracts,src/contracts/tests/test.OpenController.sol,set();setup()
shahankhatch/dapp-bin,wallet/wallet.sol,"multiowned(address[] _owners, uint _required);revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);reorganizeOwners();clearPending();daylimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today();changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);Wallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);clearPending()"
RepublicMaster/dapp-bin,wallet/wallet.sol,"multiowned(address[] _owners, uint _required);revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);reorganizeOwners();clearPending();daylimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today();changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);Wallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);clearPending()"
boisde/Greed_Island,party/contracts/mocks/integrations/GovernanceAdapterMock.sol,"createProposal(uint256 _proposalId);castVote(uint256 _proposalId, bool _support);delegate(address _delegatee);getProposeCalldata(bytes memory _proposalData);getDelegateCalldata(address _delegatee);getRegisterCalldata(address _setToken);getRevokeCalldata()"
Majoolr/ethereum-libraries,StringUtilsLib/truffle/test/TestStringUtilsLibOne.sol,testToSliceToString();testStrLenBytes();testStrLenZero();testStrLenFour();testStrLenTwo();testStrLenOne();testStrLenRunes();testStrLenRunesMore();testStrLenRunesEvenMore();testStrLenRunesMost();testStrLenRunesEvenMoster();testStrLenRunesMostest();testCopy();testEmpty();testCompare();testEquals();testNextRune();testOrd();testKeccak();testStartsWith();testBeyond();testEndsWith()
michinbear/solidity,test/compilationTests/gnosis/Tokens/EtherToken.sol,deposit();withdraw(uint value)
WingsDao/contracts,contracts/zeppelin/test-helpers/InsecureTargetBounty.sol,checkInvariant();deployContract()
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/test-helpers/InsecureTargetBounty.sol,checkInvariant();deployContract()
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/test-helpers/InsecureTargetBounty.sol,checkInvariant();deployContract()
AragonOne/zeppelin-solidity,contracts/test-helpers/InsecureTargetBounty.sol,checkInvariant();deployContract()
utocat/lib-blockchainiz-node,test_data/testSmartContract.sol,""
Sword-Smith/geth_tools,example/Tmc4.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);releaseApproval(address _cancelAddress);allowance(address _owner, address _spender)"
ethereum/dapp-bin,registrar/ExpRegistrar.sol,"owner(string _name);addr(string _name);subRegistrar(string _name);content(string _name);name(address _addr);ExpRegistrar();initLock();lock(string _name);unlock(string _name);reserve(string _name);setOwner(string _name, address _newOwner);setAddr(string _name, address _a);setSubRegistrar(string _name, address _registrar);setContent(string _name, bytes32 _content);setName(string _name);record(string _name);addr(string _name);subRegistrar(string _name);content(string _name);owner(string _name);price(string _name);name(address _addr)"
montyly/manticore,tests/ethereum/contracts/detectors/etherleak_true_neg3.sol,fakeconstructor();withdrawfunds()
trailofbits/manticore,tests/ethereum/contracts/detectors/etherleak_true_neg3.sol,fakeconstructor();withdrawfunds()
iurimatias/embark-framework,dapps/templates/demo/contracts/simple_storage.sol,set(uint x);get()
jvah/spicehours,contracts/SpiceRates.sol,"setHourlyRate(uint _hourlyRate);setUnpaidPercentage(bytes32 _info, uint8 _percentage);unpaidPercentage(bytes32 _info);entryInfo(uint _index);entryCount();calculatePayout(bytes32 _info, uint _duration)"
duaraghav8/Solium,test/lib/rules/imports-on-top/reject/intermingled.sol,""
CoderDennis/recoverable-wallet,contracts/recoverable-wallet.sol,"transfer(address recipient, uint256 amount);approve(address spender, uint256 value);createWallet(uint8 recoveryDelayInDays);getWalletFor(address walletOwner);Ownable(address owner);transferOwnership(address newOwner);Claimable(address owner);transferOwnership(address newOwner);claimOwnership();RecoverableWallet(address owner);addRecoveryAddress(address newRecoveryAddress, uint8 recoveryDelayInDays);removeRecoveryAddress(address oldRecoveryAddress);startRecovery(address newOwnerAddress);cancelRecovery();finishRecovery();sendEther(address destination, uint256 amount);sendToken(address tokenAddress, address destination, uint256 amount);approveToken(address tokenAddress, address spender, uint256 amount)"
juchiyama/cmkt,contracts/market.sol,"Market(bytes _ipfsHash,uint _maxVendors)"
input-output-hk/etc-client,src/evmTest/resources/solidity/ContractCallingItself.sol,callSelf();doubleSomeVar();getSomeVar()
boisde/Greed_Island,party/contracts/mocks/AddressArrayUtilsMock.sol,"testIndexOf(address[] memory A, address a);testContains(address[] memory A, address a);testHasDuplicate(address[] memory A);testRemove(address[] memory A, address a);testPop(address[] memory A, uint256 index)"
Neufund/Contracts,contracts/neufund/Neumark.sol,""
raineorshine/solgraph,test/in/issue13.sol,functionOne();functionTwo();functionThree()
blockgeeks/workshop,src/explorer/SimpleStorage.sol,setValue(string value);getValue()
dltdojo/courses,ethereum/dapps/token/T02_ZeppelinTimeToken.sol,FooStdToken()
chainpoint/chainpoint-services,node-eth-contracts/contracts/zeppelin-solidity/contracts/token/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
montyly/manticore,tests/ethereum/contracts/780.sol,C(bool x)
trailofbits/manticore,tests/ethereum/contracts/780.sol,C(bool x)
dltdojo/courses,ethereum/solidity/T125_Random.sol,"random();_offlineHash(bytes32 _key1, bytes32 _key2, bytes32 _key3);setKeyHash(bytes32 _hash);clientVerifyKeyHash(bytes32 _key1, bytes32 _key2, bytes32 _key3, bytes32 _hash)"
Spreadway/core,eth/login/ethereum-login-sample-master/solidity/contracts/Login.sol,login(string challenge)
SilentCicero/wafr,src/tests/solidityTests/increaseTimeBy/test.timeIncrease.sol,setup();test_someOtherTest();test_someTest()
eris-ltd/eris-db,execution/wasm/parent.sol,createChild();getChild(uint256 index);close();txPrice();blockDifficulty()
zchn/ethereum-analyzer,examples/etherscan.io/CryptoKittiesSiringAuction.sol,"Ownable();transferOwnership(address newOwner);totalSupply();balanceOf(address _owner);ownerOf(uint256 _tokenId);approve(address _to, uint256 _tokenId);transfer(address _to, uint256 _tokenId);transferFrom(address _from, address _to, uint256 _tokenId);name();symbol();tokensOfOwner(address _owner);tokenMetadata(uint256 _tokenId, string _preferredTransport);supportsInterface(bytes4 _interfaceID);_owns(address _claimant, uint256 _tokenId);_escrow(address _owner, uint256 _tokenId);_transfer(address _receiver, uint256 _tokenId);_addAuction(uint256 _tokenId, Auction _auction);_cancelAuction(uint256 _tokenId, address _seller);_bid(uint256 _tokenId, uint256 _bidAmount);_removeAuction(uint256 _tokenId);_isOnAuction(Auction storage _auction);_currentPrice(Auction storage _auction);_computeCut(uint256 _price);pause();unpause();ClockAuction(address _nftAddress, uint256 _cut);withdrawBalance();bid(uint256 _tokenId);cancelAuction(uint256 _tokenId);cancelAuctionWhenPaused(uint256 _tokenId);getAuction(uint256 _tokenId);getCurrentPrice(uint256 _tokenId);SiringClockAuction(address _nftAddr, uint256 _cut);bid(uint256 _tokenId)"
cryptape/cita,scripts/contracts/src/system/PriceManager.sol,setQuotaPrice(uint _quotaPrice);getQuotaPrice()
scmo/apayment-backend,smart-contracts/request.sol,"mortal();kill();setCreated();setModified();Request(uint16[] _contributionCodes, string _remark, address _rbacAddress, uint32[] _gves, uint _amountPreviousYear);setInspectorId(address _inspectorAddress);addLacks(uint16[] _contributionCodes, int64[] _controlCategoryIds, uint16[] _pointGroupCodes, int64[] _controlPointIds, int64[] _lackIds, uint8[] _points);setGVE(uint32 _gve1110, uint32 _gve1150, uint32 _gve1128, uint32 _gve1141, uint32 _gve1142, uint32 _gve1124, uint32 _gve1129, uint32 _gve1143, uint32 _gve1144);updateBtsPoint(uint16 _pointGroupCode, uint16 _points);updateRausPoint(uint16 _pointGroupCode, uint16 _points);calculateBTS();calculateRAUS();getFirstPaymentAmount();getFinalPaymentAmount();round(uint256 _amount)"
maximo/lottery,PowerBall.sol,"Lottery(uint feePercent, uint unixEndTime, uint daysToRedeem);DrawWinning(uint _whiteballs, uint _powerball);DisburseEarnings();CollectEarning();Play(uint _whiteballs, uint _powerball);Check()"
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app32-overwriting_jobs_and_checking_notification/app32.sol,f()
eris-ltd/eris,tests/jobs_fixtures/app32-overwriting_jobs_and_checking_notification/app32.sol,f()
monax/monax,tests/jobs_fixtures/app32-overwriting_jobs_and_checking_notification/app32.sol,f()
eris-ltd/eris-cli,tests/jobs_fixtures/app32-overwriting_jobs_and_checking_notification/app32.sol,f()
monax/cli,tests/jobs_fixtures/app32-overwriting_jobs_and_checking_notification/app32.sol,f()
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app32-overwriting_jobs_and_checking_notification/app32.sol,f()
AlexeyAkhunov/tokengame,contracts/TokenGame.sol,"transfer(address _to, uint256 _value);approve(address _spender, uint256 _value);transferFrom(address _from, address _to, uint256 _value);Token();mint(address _to, uint256 _value);ExcessWithdraw(uint _release_time, Token _token);withdraw();TokenDistribution(uint256 _target_in_wei, uint256 _cap_in_wei, uint256 _tokens_to_mint);exponential_decay(uint256 value, uint256 time);contribute(uint256 lock_weeks);escape(uint256 bucket);close_next_bucket();move_excess_for_bucket(uint256 bucket, uint256 excess);claim_tokens(address player, uint256 bucket);PrizePot(TokenDistribution _dist);claim_prize();cancel();TokenGame()"
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol,capReached()
Morgan-iv/Main-source-folder,Solidity/mafund.sol,kill()
ProBonoPublicoWorld/ico-contracts,test/utils/BonusCrowdsaleMock.sol,BonusCrowdsaleMock()
yaronvel/smart_contracts,mixer/mix.sol,"mixer();number_of_deals( );not_after_phase(mixing_deal deal, uint phase);get_deal_state(uint deal_id);get_deal_status(uint deal_id);make_initial_deposit( uint deal_id );make_anonymous_registration( uint deal_id, uint amount_in_wei );make_anonymous_withdraw(uint deal_id);reveal_registration( uint deal_id, address public_address );public_withdraw( uint deal_id )"
XelionIO/cryptostation-contracts,crowdsale.sol,"transfer(address receiver, uint amount);checkGoalReached();safeWithdrawal()"
aragon/aragon-core,contracts/test/TestDelegateProxy.sol,dontReturn();fail();die();implementation();proxyType();beforeAll();beforeEach();testFailIfNoContract();noContract();testFailIfReverts();revertCall();testIsContractZero();testIsContractAddress()
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/payment/SplitPayment.sol,"claim();addPayee(address _payee, uint256 _shares)"
mesh-market/mesh-market.github.io,mesh-market/node_modules/embark/test/contracts/token.sol,"Token( uint initial_balance );totalSupply();balanceOf( address who );transfer( address to, uint value);transferFrom( address from, address to, uint value);approve(address spender, uint value);allowance(address owner, address spender);safeToAdd(uint a, uint b)"
iurimatias/TransactionRelay,app/contracts/token.sol,"Token( uint initial_balance );totalSupply();balanceOf( address who );transfer( address to, uint value);transferFrom( address from, address to, uint value);approve(address spender, uint value);allowance(address owner, address spender);safeToAdd(uint a, uint b)"
bkrem/educhain,chain/contracts/SequenceArray.sol,"insert(bytes32 key, address value);exists(bytes32 key);keyAtIndex(uint index);keyAtIndexHasNext(uint idx);valueAtIndexHasNext(uint idx);keyIndex(bytes32 key);size();value(bytes32 key)"
WishFinanceCom/WF-contracts,contracts/core/platform/WFAssetProxy.sol,"init(WFPlatform _bmcPlatform, string _symbol, string _name);_getAsset();totalSupply();balanceOf(address _owner);allowance(address _from, address _spender);decimals();transfer(address _to, uint _value);transferWithReference(address _to, uint _value, string _reference);_transferWithReference(address _to, uint _value, string _reference);__transferWithReference(address _to, uint _value, string _reference, address _sender);transferFrom(address _from, address _to, uint _value);__transferFromWithReference(address _from, address _to, uint _value, string _reference, address _sender);approve(address _spender, uint _value);__approve(address _spender, uint _value, address _sender);emitTransfer(address _from, address _to, uint _value);emitApprove(address _from, address _spender, uint _value);getVersionFor(address _sender);getLatestVersion();getPendingVersion();getPendingVersionTimestamp();proposeUpgrade(address _newVersion);purgeUpgrade();commitUpgrade();optOut();optIn()"
aragon/aragon-core,contracts/factory/AppProxyFactory.sol,"newAppProxy(IKernel _kernel, bytes32 _appId);newAppProxy(IKernel _kernel, bytes32 _appId, bytes _initializePayload);newAppProxyPinned(IKernel _kernel, bytes32 _appId);newAppProxyPinned(IKernel _kernel, bytes32 _appId, bytes _initializePayload)"
adridadou/eth-propeller-core,src/test/resources/c2.sol,""
BeBlockTech/Anemoi,Master/contracts/ERC20.sol,"balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value)"
dltdojo/courses,ethereum/solidity/T200_Abi.sol,"hello();baz(uint32 x, bool y);FooAbi(address _fooAddr);testHello();testFallback();testBazMethodId();testBazMethod(uint32 x, bool y)"
chengtalent/ethereumj,starter/src/main/resources/sol/PsychoKiller.sol,homicide();multipleHomocide()
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/examples/StoppableBid.sol,bid();withdraw()
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/examples/StoppableBid.sol,bid();withdraw()
WingsDao/contracts,contracts/DAO.sol,update(bytes32 _infoHash)
GX-Coin/SmartContract,GxCallableByDeploymentAdmin.sol,GxCallableByDeploymentAdmin(address deploymentAdminsAddress);isDeploymentAdmin(address accountAddress);setDeploymentAdminsContract(address newDeploymentAdmins);kill()
energychain/StromDAO-BusinessObject,smart_contracts/RoleLookup.sol,"RoleLookup();setDefault(uint8 _role,address _from);setRelation(uint8 _for,address _from);setRelationFrom(uint8 _for,address _from)"
input-output-hk/etc-client,src/evmTest/resources/solidity/MinimumViableToken.sol,"transfer(address _to, uint256 _value)"
jgm-learn/SmartContract,UserList.sol,UserList();CreateUser(string user_id);GetUserConAddr(string user_id)
iam-dev/ERC23,installed_contracts/zeppelin-solidity/contracts/crowdsale/RefundableCrowdsale.sol,RefundableCrowdsale(uint256 _goal);forwardFunds();claimRefund();finalization();goalReached()
mhhf/dapple,test/_fixtures/testenv/golden_package/contracts/subdirectory/example2.sol,""
nexusdev/dapple,test/_fixtures/testenv/golden_package/contracts/subdirectory/example2.sol,""
boisde/Greed_Island,party/contracts/mocks/PreciseUnitMathMock.sol,"preciseUnit();preciseUnitInt();preciseMul(uint256 a, uint256 b);preciseMulInt(int256 a, int256 b);preciseMulCeil(uint256 a, uint256 b);preciseDiv(uint256 a, uint256 b);preciseDiv(int256 a, int256 b);preciseDivCeil(uint256 a, uint256 b);divDown(int256 a, int256 b);conservativePreciseMul(int256 a, int256 b);conservativePreciseDiv(int256 a, int256 b);safePower(uint256 a, uint256 b)"
b-mueller/mythril,solidity_examples/hashforether.sol,withdrawWinnings();_sendWinnings()
jensenbox/singnet,dao/contracts/foundation/AgiCrowdsale.sol,"buyTokens(address beneficiary);getTokens(uint256 amount);claimRefund();claimUnsold();updateWhitelist(address[] addresses, bool status);finalize();forwardFunds();hasEnded();goalReached();isWhitelisted(address contributor);validPurchase();getBlockTimestamp()"
adridadou/hackethon-2016,contracts/MyContract.sol,get(string _name);getOrThrow(string _name);isEntitled(address _address);getEntitlement()
globaljobcoin/GJC,contracts/token/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
Spreadway/core,flow_auth/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Spreadway/core,flow_manage/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Ethbet/ethbet,contracts/oraclizeAPI_0.5.sol,"query(uint _timestamp, string _datasource, string _arg);query_withGasLimit(uint _timestamp, string _datasource, string _arg, uint _gaslimit);queryN(uint _timestamp, string _datasource, bytes _argN);queryN_withGasLimit(uint _timestamp, string _datasource, bytes _argN, uint _gaslimit);getPrice(string _datasource);getPrice(string _datasource, uint gaslimit);setProofType(byte _proofType);setCustomGasPrice(uint _gasPrice);randomDS_getSessionPubKeyHash();getAddress();oraclize_setNetwork(uint8 networkID);oraclize_setNetwork();__callback(bytes32 myid, string result);__callback(bytes32 myid, string result, bytes proof);oraclize_getPrice(string datasource);oraclize_getPrice(string datasource, uint gaslimit);oraclize_query(string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2, uint gaslimit);oraclize_query(string datasource, string[] argN);oraclize_query(uint timestamp, string datasource, string[] argN);oraclize_query(uint timestamp, string datasource, string[] argN, uint gaslimit);oraclize_query(string datasource, string[] argN, uint gaslimit);oraclize_query(string datasource, string[1] args);oraclize_query(uint timestamp, string datasource, string[1] args);oraclize_query(uint timestamp, string datasource, string[1] args, uint gaslimit);oraclize_query(string datasource, string[1] args, uint gaslimit);oraclize_query(string datasource, string[2] args);oraclize_query(uint timestamp, string datasource, string[2] args);oraclize_query(uint timestamp, string datasource, string[2] args, uint gaslimit);oraclize_query(string datasource, string[2] args, uint gaslimit);oraclize_query(string datasource, string[3] args);oraclize_query(uint timestamp, string datasource, string[3] args);oraclize_query(uint timestamp, string datasource, string[3] args, uint gaslimit);oraclize_query(string datasource, string[3] args, uint gaslimit);oraclize_query(string datasource, string[4] args);oraclize_query(uint timestamp, string datasource, string[4] args);oraclize_query(uint timestamp, string datasource, string[4] args, uint gaslimit);oraclize_query(string datasource, string[4] args, uint gaslimit);oraclize_query(string datasource, string[5] args);oraclize_query(uint timestamp, string datasource, string[5] args);oraclize_query(uint timestamp, string datasource, string[5] args, uint gaslimit);oraclize_query(string datasource, string[5] args, uint gaslimit);oraclize_query(string datasource, bytes[] argN);oraclize_query(uint timestamp, string datasource, bytes[] argN);oraclize_query(uint timestamp, string datasource, bytes[] argN, uint gaslimit);oraclize_query(string datasource, bytes[] argN, uint gaslimit);oraclize_query(string datasource, bytes[1] args);oraclize_query(uint timestamp, string datasource, bytes[1] args);oraclize_query(uint timestamp, string datasource, bytes[1] args, uint gaslimit);oraclize_query(string datasource, bytes[1] args, uint gaslimit);oraclize_query(string datasource, bytes[2] args);oraclize_query(uint timestamp, string datasource, bytes[2] args);oraclize_query(uint timestamp, string datasource, bytes[2] args, uint gaslimit);oraclize_query(string datasource, bytes[2] args, uint gaslimit);oraclize_query(string datasource, bytes[3] args);oraclize_query(uint timestamp, string datasource, bytes[3] args);oraclize_query(uint timestamp, string datasource, bytes[3] args, uint gaslimit);oraclize_query(string datasource, bytes[3] args, uint gaslimit);oraclize_query(string datasource, bytes[4] args);oraclize_query(uint timestamp, string datasource, bytes[4] args);oraclize_query(uint timestamp, string datasource, bytes[4] args, uint gaslimit);oraclize_query(string datasource, bytes[4] args, uint gaslimit);oraclize_query(string datasource, bytes[5] args);oraclize_query(uint timestamp, string datasource, bytes[5] args);oraclize_query(uint timestamp, string datasource, bytes[5] args, uint gaslimit);oraclize_query(string datasource, bytes[5] args, uint gaslimit);oraclize_cbAddress();oraclize_setProof(byte proofP);oraclize_setCustomGasPrice(uint gasPrice);oraclize_randomDS_getSessionPubKeyHash();getCodeSize(address _addr);parseAddr(string _a);strCompare(string _a, string _b);indexOf(string _haystack, string _needle);strConcat(string _a, string _b, string _c, string _d, string _e);strConcat(string _a, string _b, string _c, string _d);strConcat(string _a, string _b, string _c);strConcat(string _a, string _b);parseInt(string _a);parseInt(string _a, uint _b);oraclize_setNetworkName(string _network_name);oraclize_getNetworkName();oraclize_newRandomDSQuery(uint _delay, uint _nbytes, uint _customGasLimit);oraclize_randomDS_setCommitment(bytes32 queryId, bytes32 commitment);verifySig(bytes32 tosignh, bytes dersig, bytes pubkey);oraclize_randomDS_proofVerify__sessionKeyValidity(bytes proof, uint sig2offset);oraclize_randomDS_proofVerify__returnCode(bytes32 _queryId, string _result, bytes _proof);oraclize_randomDS_proofVerify__main(bytes proof, bytes32 queryId, bytes result, string context_name);copyBytes(bytes from, uint fromOffset, uint length, bytes to, uint toOffset);safer_ecrecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s);ecrecovery(bytes32 hash, bytes sig)"
Ethbet/ethbet,alpha/contracts/oraclizeAPI_0.5.sol,"query(uint _timestamp, string _datasource, string _arg);query_withGasLimit(uint _timestamp, string _datasource, string _arg, uint _gaslimit);queryN(uint _timestamp, string _datasource, bytes _argN);queryN_withGasLimit(uint _timestamp, string _datasource, bytes _argN, uint _gaslimit);getPrice(string _datasource);getPrice(string _datasource, uint gaslimit);setProofType(byte _proofType);setCustomGasPrice(uint _gasPrice);randomDS_getSessionPubKeyHash();getAddress();oraclize_setNetwork(uint8 networkID);oraclize_setNetwork();__callback(bytes32 myid, string result);__callback(bytes32 myid, string result, bytes proof);oraclize_getPrice(string datasource);oraclize_getPrice(string datasource, uint gaslimit);oraclize_query(string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2, uint gaslimit);oraclize_query(string datasource, string[] argN);oraclize_query(uint timestamp, string datasource, string[] argN);oraclize_query(uint timestamp, string datasource, string[] argN, uint gaslimit);oraclize_query(string datasource, string[] argN, uint gaslimit);oraclize_query(string datasource, string[1] args);oraclize_query(uint timestamp, string datasource, string[1] args);oraclize_query(uint timestamp, string datasource, string[1] args, uint gaslimit);oraclize_query(string datasource, string[1] args, uint gaslimit);oraclize_query(string datasource, string[2] args);oraclize_query(uint timestamp, string datasource, string[2] args);oraclize_query(uint timestamp, string datasource, string[2] args, uint gaslimit);oraclize_query(string datasource, string[2] args, uint gaslimit);oraclize_query(string datasource, string[3] args);oraclize_query(uint timestamp, string datasource, string[3] args);oraclize_query(uint timestamp, string datasource, string[3] args, uint gaslimit);oraclize_query(string datasource, string[3] args, uint gaslimit);oraclize_query(string datasource, string[4] args);oraclize_query(uint timestamp, string datasource, string[4] args);oraclize_query(uint timestamp, string datasource, string[4] args, uint gaslimit);oraclize_query(string datasource, string[4] args, uint gaslimit);oraclize_query(string datasource, string[5] args);oraclize_query(uint timestamp, string datasource, string[5] args);oraclize_query(uint timestamp, string datasource, string[5] args, uint gaslimit);oraclize_query(string datasource, string[5] args, uint gaslimit);oraclize_query(string datasource, bytes[] argN);oraclize_query(uint timestamp, string datasource, bytes[] argN);oraclize_query(uint timestamp, string datasource, bytes[] argN, uint gaslimit);oraclize_query(string datasource, bytes[] argN, uint gaslimit);oraclize_query(string datasource, bytes[1] args);oraclize_query(uint timestamp, string datasource, bytes[1] args);oraclize_query(uint timestamp, string datasource, bytes[1] args, uint gaslimit);oraclize_query(string datasource, bytes[1] args, uint gaslimit);oraclize_query(string datasource, bytes[2] args);oraclize_query(uint timestamp, string datasource, bytes[2] args);oraclize_query(uint timestamp, string datasource, bytes[2] args, uint gaslimit);oraclize_query(string datasource, bytes[2] args, uint gaslimit);oraclize_query(string datasource, bytes[3] args);oraclize_query(uint timestamp, string datasource, bytes[3] args);oraclize_query(uint timestamp, string datasource, bytes[3] args, uint gaslimit);oraclize_query(string datasource, bytes[3] args, uint gaslimit);oraclize_query(string datasource, bytes[4] args);oraclize_query(uint timestamp, string datasource, bytes[4] args);oraclize_query(uint timestamp, string datasource, bytes[4] args, uint gaslimit);oraclize_query(string datasource, bytes[4] args, uint gaslimit);oraclize_query(string datasource, bytes[5] args);oraclize_query(uint timestamp, string datasource, bytes[5] args);oraclize_query(uint timestamp, string datasource, bytes[5] args, uint gaslimit);oraclize_query(string datasource, bytes[5] args, uint gaslimit);oraclize_cbAddress();oraclize_setProof(byte proofP);oraclize_setCustomGasPrice(uint gasPrice);oraclize_randomDS_getSessionPubKeyHash();getCodeSize(address _addr);parseAddr(string _a);strCompare(string _a, string _b);indexOf(string _haystack, string _needle);strConcat(string _a, string _b, string _c, string _d, string _e);strConcat(string _a, string _b, string _c, string _d);strConcat(string _a, string _b, string _c);strConcat(string _a, string _b);parseInt(string _a);parseInt(string _a, uint _b);oraclize_setNetworkName(string _network_name);oraclize_getNetworkName();oraclize_newRandomDSQuery(uint _delay, uint _nbytes, uint _customGasLimit);oraclize_randomDS_setCommitment(bytes32 queryId, bytes32 commitment);verifySig(bytes32 tosignh, bytes dersig, bytes pubkey);oraclize_randomDS_proofVerify__sessionKeyValidity(bytes proof, uint sig2offset);oraclize_randomDS_proofVerify__returnCode(bytes32 _queryId, string _result, bytes _proof);oraclize_randomDS_proofVerify__main(bytes proof, bytes32 queryId, bytes result, string context_name);copyBytes(bytes from, uint fromOffset, uint length, bytes to, uint toOffset);safer_ecrecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s);ecrecovery(bytes32 hash, bytes sig)"
etherfundme/dapp,test/TestEtherFundMeCrowdfunding.sol,testEtherFundMeCrowdfunding()
readevalprint/aragon-core,test/mocks/AppStub.sol,setValue(uint i);getValue();getValue()
openanx/OpenANXToken,contracts/LockedTokens-deployed.sol,LockedTokens(address _tokenContract);addRemainingTokens();require(msg.sender == address(tokenContract);balanceOfLocked(address account);totalSupplyLocked()
Arachnid/solidity-stringutils,src/strings.t.sol,abs(int x);sign(int x);testSliceToString();testCopy();testLen();testEmpty();testEquals();testNextRune();testOrd();testCompare();testStartsWith();testBeyond();testEndsWith();testUntil();testFind();testRfind();testSplit();testRsplit();testCount();testContains();testConcat();testJoin()
pacifics/Dao,PassProject.sol,"Client();numberOfOrders();ProjectManager();numberOfResolutions();setProjectManager(address _projectManager);updateDescription(string _projectDescription, bytes32 _hashOfTheDocument)"
hackaugusto/raiden,raiden/tests/smart_contracts/RpcWithStorageTest.sol,get(uint256 _someId);const();waste_storage(uint256 iterations)
getbloqs/scenario01,contract/contracts/SportsBet.sol,"SportsBet(string _game, uint256 _endOfBetting);bet(uint8 _tip);payout();finalizeBet(uint8 _winningTip);calculateOdds(uint8 _tip);checkTip(uint8 tip)"
cniemann/etherpricebet,contracts/Bet.sol,"Bet();parseInt(string _a, uint _b);isEmpty(string value);create(string price);closeBetting();determineWinner(uint result);queryOracle(string price);evaluateBet();evaluateAfterQuery(bool isPriceReached, uint priceDate);__callback(bytes32 myid, string result);payout()"
EthTrader/dappening,contracts/EthTraderDAO.sol,"EthTraderDAO(address _parent, bytes32 _root, address _token, address _registry, address _store);enactProp(uint _propIdx);upgrade(address _newController);onTransfer(address _from, address _to, uint _amount);getWeightedVote(bytes20 _username, uint _propIdx)"
Leondra/PXLT,contracts/PXLToken.sol,"transfer(address _to, uint256 _value);getBalanceOf(address _owner);transferFrom(address _from, address _to, uint256 _value);createTokens();getCurrentTokenPrice();redeemTokens(string _leoAddress);retrieveEth(uint256 _value, address _safe);finalize(address _safe);startRedeeming();pause();proceed();refund()"
shravan-shandilya/drone-charge,future.sol,"future();agreeFromDrone();agreeFromPod();setPod(address new_pod,uint8 new_rpm);verify(uint8 expected_rpm);start();stop();pay()"
boisde/Greed_Island,party/contracts/protocol/Controller.sol,"addSet(address _setToken);removeSet(address _setToken);addFactory(address _factory);removeFactory(address _factory);addModule(address _module);removeModule(address _module);addResource(address _resource, uint256 _id);removeResource(uint256 _id);addFee(address _module, uint256 _feeType, uint256 _newFeePercentage);editFee(address _module, uint256 _feeType, uint256 _newFeePercentage);editFeeRecipient(address _newFeeRecipient);getFactories();getModules();getResources();getSets();isSystemContract(address _contractAddress)"
mothershipcx/contracts,contracts/MiniMeToken.sol,"transfer(address _to, uint256 _amount);balanceOf(address _owner);approve(address _spender, uint256 _amount);totalSupply();balanceOfAt(address _owner, uint _blockNumber);totalSupplyAt(uint _blockNumber);enableTransfers(bool _transfersEnabled);isContract(address _addr);min(uint a, uint b);getBlockNumber();claimTokens(address _token)"
robmyers/artworld-ethereum,dapps/secret-artworks/contracts/SecretArtworks.sol,""
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app21-string_edge_cases/storage.sol,setString(string x);getString()
eris-ltd/eris,tests/jobs_fixtures/app21-string_edge_cases/storage.sol,setString(string x);getString()
monax/monax,tests/jobs_fixtures/app21-string_edge_cases/storage.sol,setString(string x);getString()
eris-ltd/eris-cli,tests/jobs_fixtures/app21-string_edge_cases/storage.sol,setString(string x);getString()
monax/cli,tests/jobs_fixtures/app21-string_edge_cases/storage.sol,setString(string x);getString()
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app21-string_edge_cases/storage.sol,setString(string x);getString()
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/contracts/crowdsale/RefundVault.sol,RefundVault(address _wallet);deposit(address investor);close();enableRefunds();refund(address investor)
readevalprint/aragon-core,contracts/zeppelin/crowdsale/RefundVault.sol,RefundVault(address _wallet);deposit(address investor);close();enableRefunds();refund(address investor)
pz7/liquet,node_modules/zeppelin-solidity/contracts/crowdsale/RefundVault.sol,RefundVault(address _wallet);deposit(address investor);close();enableRefunds();refund(address investor)
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/crowdsale/RefundVault.sol,RefundVault(address _wallet);deposit(address investor);close();enableRefunds();refund(address investor)
dmx374/zeppelin-solidity,contracts/crowdsale/RefundVault.sol,RefundVault(address _wallet);deposit(address investor);close();enableRefunds();refund(address investor)
cashpokerpro-dev/cash-smartcontracts,contracts/crowdsale/RefundVault.sol,RefundVault(address _wallet);deposit(address investor);close();enableRefunds();refund(address investor)
cinderblockchain/cindertoken,contracts/crowdsale/RefundVault.sol,RefundVault(address _wallet);deposit(address investor);close();enableRefunds();refund(address investor)
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app17-factory_contract_deployment_by_instance_naming/GSFactoryFactory.sol,set(uint x);get();create();getLast();create();getLast()
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app18-factory_contract_deployment_by_address_convention/GSFactoryFactory.sol,set(uint x);get();create();getLast();create();getLast()
eris-ltd/eris,tests/jobs_fixtures/app18-factory_contract_deployment_by_address_convention/GSFactoryFactory.sol,set(uint x);get();create();getLast();create();getLast()
eris-ltd/eris,tests/jobs_fixtures/app17-factory_contract_deployment_by_instance_naming/GSFactoryFactory.sol,set(uint x);get();create();getLast();create();getLast()
monax/monax,tests/jobs_fixtures/app18-factory_contract_deployment_by_address_convention/GSFactoryFactory.sol,set(uint x);get();create();getLast();create();getLast()
monax/monax,tests/jobs_fixtures/app17-factory_contract_deployment_by_instance_naming/GSFactoryFactory.sol,set(uint x);get();create();getLast();create();getLast()
eris-ltd/eris-cli,tests/jobs_fixtures/app17-factory_contract_deployment_by_instance_naming/GSFactoryFactory.sol,set(uint x);get();create();getLast();create();getLast()
eris-ltd/eris-cli,tests/jobs_fixtures/app18-factory_contract_deployment_by_address_convention/GSFactoryFactory.sol,set(uint x);get();create();getLast();create();getLast()
monax/cli,tests/jobs_fixtures/app17-factory_contract_deployment_by_instance_naming/GSFactoryFactory.sol,set(uint x);get();create();getLast();create();getLast()
monax/cli,tests/jobs_fixtures/app18-factory_contract_deployment_by_address_convention/GSFactoryFactory.sol,set(uint x);get();create();getLast();create();getLast()
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app18-factory_contract_deployment_by_address_convention/GSFactoryFactory.sol,set(uint x);get();create();getLast();create();getLast()
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app17-factory_contract_deployment_by_instance_naming/GSFactoryFactory.sol,set(uint x);get();create();getLast();create();getLast()
FedCoup/FedCoup,installed_contracts/zeppelin/contracts/ownership/DelayedClaimable.sol,"setLimits(uint _start, uint _end);claimOwnership()"
QTBlockchain/SolidityNWeb3,SmartContracts/March2018/CarRoute/contracts/CarRoute.sol,CarRoute(string  location);dropTo(string destination);getCurrentLocation()
boisde/Greed_Island,party/contracts/mocks/OracleMock.sol,updatePrice(uint256 _newPrice);read()
daostack/daostack,contracts/universalSchemes/UniversalSchemeInterface.sol,getParametersFromController(Avatar _avatar)
blockgeeks/workshop,src/contracts/hodor.sol,Hodor(string _greeting);greet();setGreeting(string _greeting)
Veterapreneur/VeteranCoin,contracts/VeteranCoin.sol,"mul(uint a, uint b);div(uint a, uint b);sub(uint a, uint b);add(uint a, uint b);owned();transferOwnership(address _newOwner);receiveApproval(address from, uint256 value, address token, bytes extraData);VeteranCoin(uint256 _initialSupply, address _centralMinter);balanceOf(address _owner);approveAndCall(address _aSpender, uint256 _value, bytes _extraData);burn(uint256 _value);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
dltdojo/courses,ethereum/solidity/T170_Mapping.sol,"Foo();update(uint newBalance);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);testFooUdate(uint amount);testFooApprove(uint amount)"
Pavel-DV/ChronoMint,old/ERC20Interface.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
bshevchenko/ChronoMint,old/ERC20Interface.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
infwonder/BlockQuotes,contracts/StringMapper.sol,"StringMapper();title(string memory source);becomeMember();checkMembership(address thisone);addKeyValue(string title, string mainhash, string mediahashs, uint mediacount);addReply(bytes32 postid, string comment, uint tip, address recipient);getReplyRaw(bytes32 postid, uint id);getReplyCount(bytes32 postid);getReply(bytes32 postid, uint start, uint end);dumpData(uint start, uint end);getIdByHash(bytes32 hash);getValueByHash(bytes32 hash);delKeyValue(uint id, bytes32 hash);packTable(uint id)"
Opus-foundation/contracts,contracts/ERC23BasicToken.sol,"tokenFallback(address _from, uint256 _value, bytes  _data);tokenFallback(address _from, uint256 _value, bytes  _data);transfer(address _to, uint256 _value, bytes _data);if(isContract(_to);transfer(address _to, uint256 _value);transferToAddress(address _to, uint256 _value, bytes _data);transferToContract(address _to, uint256 _value, bytes _data);balanceOf(address _owner);isContract(address _addr)"
michinbear/solidity,test/compilationTests/corion/announcementTypes.sol,""
hankshz/dockers,ethereum/workspace/contracts/Betting.sol,"Betting(uint _betId, uint _amount);getId();getAmount();makeBet();getNumber();getParticipant(uint index);resetBet();settle()"
PeterBorah/smart-contract-security-examples,contracts/TokenWithEStop.sol,"TokenWithEStop(address _curator);deposit(uint amount);transfer(address to, uint value);emergencyStop();withdraw()"
QTBlockchain/SolidityNWeb3,SmartContracts/truffletest/contracts/Calculator.sol,Calculator();getResult();addToNumber(uint num);substractNumber(uint num);multiplyWithNumber(uint num);divideByNumber(uint num)
QTBlockchain/SolidityNWeb3,SmartContracts/samplecontract/Calculator.sol,Calculator();getResult();addToNumber(uint num);substractNumber(uint num);multiplyWithNumber(uint num);divideByNumber(uint num)
QTBlockchain/SolidityNWeb3,SmartContracts/helloworld/contracts/Calculator.sol,Calculator();getResult();addToNumber(uint num);substractNumber(uint num);multiplyWithNumber(uint num);divideByNumber(uint num)
redsquirrel/augur-core,src/legacy_reputation/Ownable.sol,Ownable();transferOwnership(address newOwner)
TruLtd/tru-reputation-token,contracts/TruReputationToken.sol,changeBoardAddress(address _newAddress);canUpgrade();setUpgradeMaster(address _master)
vanderheijden86/p2politics,contracts/Votes.sol,"vote(uint proposalId, uint iteration, uint value, string comment);getProposalVoteCount(uint proposalId, uint iteration);getProposalVote(uint proposalId, uint iteration, uint proposalIdIndex);getAcceptedAndRejectedVotes(uint proposalId, uint iteration);_voteAs(address userAddress, uint proposalId, uint iteration, uint value, string comment)"
KudosProject/kudos-token,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
commodityadnetwork/CDX,contracts/TokenIceBox.sol,TokenIceBox(address token_)
maraoz/zeppelin-solidity,test/helpers/ShareableMock.sol,"ShareableMock(address[] _owners, uint _required);increaseCount(bytes32 action)"
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/build/OldSafeSend.sol,deliver()
sonm-io/core,blockchain/source/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
GovernX/governx-contracts,src/contracts/utils/IRules.sol,"canPropose(address _sender, uint256 _proposalID);canVote(address _sender, uint256 _proposalID);canExecute(address _sender, uint256 _proposalID);votingWeightOf(address _sender, uint256 _proposalID, uint256 _position, uint256 _data);hasWon(address _sender, uint256 _proposalID);hasFailed(address _sender, uint256 _proposalID)"
WishFinanceCom/WF-contracts,contracts/lockers/Lockup36m.sol,"emitError(bytes32 _message);_error(uint _errorCode, bytes32 _message);setupEventsHistory(address _eventsHistory);payIn();payOut(address _getter);getLockedFunds();getLockedFundsReleaseTime()"
iswarm/p2pCny,contracts/token/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
cashpokerpro-dev/cash-smartcontracts,contracts/token/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
cinderblockchain/cindertoken,contracts/token/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/test/helpers/HasNoEtherTest.sol,HasNoEtherTest()
pash7ka/zeppelin-solidity,test/helpers/HasNoEtherTest.sol,HasNoEtherTest()
Dicoiner/irianna-solidity,test/helpers/HasNoEtherTest.sol,HasNoEtherTest()
pz7/liquet,node_modules/zeppelin-solidity/test/helpers/HasNoEtherTest.sol,HasNoEtherTest()
dmx374/zeppelin-solidity,test/helpers/HasNoEtherTest.sol,HasNoEtherTest()
cashpokerpro-dev/cash-smartcontracts,test/helpers/HasNoEtherTest.sol,HasNoEtherTest()
Dicoiner/irianna-solidity,contracts/payment/PullPayment.sol,"asyncSend(address dest, uint256 amount);withdrawPayments()"
kowala-tech/kUSD,client/core/state/test_contracts/Strings.sol,""
Dsummers91/openfund,blockchain/contracts/OpenFundFactory.sol,"OpenFundFactory();addRepo(bytes32 user, string repo);getRepo(bytes32 user, string repo)"
infwonder/BlockQuotes,contracts/strings.sol,"memcpy(uint dest, uint src, uint len);toSlice(string self);len(bytes32 self);copy(slice self);toString(slice self);len(slice self);empty(slice self);compare(slice self, slice other);equals(slice self, slice other);nextRune(slice self, slice rune);nextRune(slice self);ord(slice self);keccak(slice self);startsWith(slice self, slice needle);beyond(slice self, slice needle);endsWith(slice self, slice needle);until(slice self, slice needle);findPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);rfindPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);find(slice self, slice needle);rfind(slice self, slice needle);split(slice self, slice needle, slice token);split(slice self, slice needle);rsplit(slice self, slice needle, slice token);rsplit(slice self, slice needle);count(slice self, slice needle);contains(slice self, slice needle);concat(slice self, slice other);join(slice self, slice[] parts)"
ChronoBank/LX-SC,contracts/PaymentGateway.sol,"balanceOf(address _address);deposit(address _from, uint _value, address _contract);withdraw(address _to, uint _value, address _contract);withdrawETH(address _to, uint _amount);setupEventsHistory(address _eventsHistory);setBalanceHolder(address _balanceHolder);setFeeAddress(address _feeAddress);setFeePercent(uint _feePercent);getFeePercent();withdraw(uint _value);_withdraw(address _from, uint _value);forwardFee(uint _value);getBalance(address _address);getBalanceOf(address _address);calculateFee(uint _value);getFeeAddress();getBalanceHolder();_addBalance(address _to, uint _value);_subBalance(address _from, uint _value);_emitFeeSet(uint _feePercent);_emitDeposited(address _by, uint _value);_emitWithdrawn(address _by, uint _value);_emitTransferred(address _from, address _to, uint _value);emitFeeSet(uint _feePercent);emitDeposited(address _by, uint _value);emitWithdrawn(address _by, uint _value);emitTransferred(address _from, address _to, uint _value)"
cryptape/cita,scripts/contracts/src/common/Error.sol,""
ethereum/remix,remix-tests/tests/various_sender/sender_and_value_test.sol,""
SafecontractDev/protocol,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
raineorshine/solgraph,test/in/Fallback.sol,""
Quiark/Roboth.web3,app/sol/Roboth.sol,"owned();kill();createJob(bytes32 word, uint256 bl_duration);addSolution(bytes32 my_desc, address job_user, uint32 job_id);solUpDownVote(bool up, uint32 sol_id, address job_user);checkPayout(address job_user, uint32 sol_id);getDictJob(address user, uint32 id);getSolution(address user, uint32 id);getVote(address voter, address sol_user, uint32 sol_id);_isNewUser();_ensureNewUser();_setGasPrice(uint256 val)"
zchn/ethereum-analyzer,examples/solidity.readthedocs.io/solidity-by-example/blind-auction.sol,"bid(bytes32 _blindedBid);placeBid(address bidder, uint value);withdraw();auctionEnd()"
silasdavis/eris-db,tests/compilers_fixtures/libraryContract.sol,"insert(Data storage self, uint value);remove(Data storage self, uint value);contains(Data storage self, uint value);register(uint value)"
silasdavis/burrow,tests/compilers_fixtures/libraryContract.sol,"insert(Data storage self, uint value);remove(Data storage self, uint value);contains(Data storage self, uint value);register(uint value)"
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/token/CrowdsaleToken.sol,createTokens(address recipient);getPrice()
SerCeMan/intellij-solidity,src/test/resources/fixtures/parser/comments.sol,""
UrsZeidler/checksumDatabase,checksumDatabase/src/main/resources/mix/contract.sol,"ChecksumDatabase(string _name,string _url,string _description);addEntry(string _version,string _checksum);changeOwner(address newOwner);getEntry(uint id)"
Majoolr/ethereum-libraries,WalletLib/truffle/contracts/WalletLibTestContract.sol,"WalletLibTestContract();owners();ownerIndex(address _owner);maxOwners();ownerCount();requiredAdmin();requiredMinor();requiredMajor();currentSpend(address _token);majorThreshold(address _token);transactionLength(bytes32 _id);transactionConfirms(bytes32 _id, uint256 _txIndex);transactionConfirmCount(bytes32 _id, uint256 _txIndex);transactionSuccess(bytes32 _id, uint256 _txIndex);changeOwner(address _from, address _to, bool _confirm);addOwner(address _newOwner, bool _confirm);removeOwner(address _ownerRemoving, bool _confirm);changeRequiredAdmin(uint256 _newRequired, bool _confirm);changeRequiredMajor(uint256 _newRequired, bool _confirm);changeRequiredMinor(uint256 _newRequired, bool _confirm);changeMajorThreshold(address _token, uint256 _newThreshold, bool _confirm);serveTx(address _to, uint256 _value, bytes _txData, bool _confirm);confirmTx(bytes32 _id);revokeConfirm(bytes32 _id);checkNotConfirmed(bytes32 _id, uint256 _txIndex)"
Atzen2/hacking-law-proto,truffle/contracts/ManufactorWallet.sol,"ManufactorWallet(string _name);resetWallet();updateHours();validContract(uint32 _emplyeHWage, uint32 _workHours, address _agencyAddress)"
OpenMoneyDigital/OpenMoneyToken,contracts/OpenMoneyToken.sol,""
iurimatias/embark-framework,packages/embark/src/test/modules/solidity/contracts/simple_storage.sol,set(uint x);get()
iurimatias/embark-framework,packages/embark/src/test/contracts/simple_storage.sol,set(uint x);get()
montyly/manticore,tests/ethereum/contracts/detectors/delegatecall_ok2.sol,default_call(bytes data)
trailofbits/manticore,tests/ethereum/contracts/detectors/delegatecall_ok2.sol,default_call(bytes data)
michinbear/solidity,test/compilationTests/gnosis/Oracles/CentralizedOracleFactory.sol,createCentralizedOracle(bytes ipfsHash)
elementrem/solidity,test/compilationTests/gnosis/Oracles/CentralizedOracleFactory.sol,createCentralizedOracle(bytes ipfsHash)
silasdavis/eris-db,tests/jobs_fixtures/app55-extcodehash/codehash.sol,""
silasdavis/burrow,tests/jobs_fixtures/app55-extcodehash/codehash.sol,""
eris-ltd/eris-db,tests/jobs_fixtures/app55-extcodehash/codehash.sol,""
boisde/Greed_Island,party/contracts-crued/protocol/modules/SingleIndexModule.sol,"trade(address _component);tradeRemainingWETH(address _component);raiseAssetTargets();updateTraderStatus(address[] calldata _traders, bool[] calldata _statuses);updateAnyoneTrade(bool _status);initialize(ISetToken _index);removeModule();getTargetUnits(address[] calldata _components);getRebalanceComponents();_validateTradeParameters(address _component);_calculateTradeSizeAndDirection(address _component);_buyUnderweight(address _component, uint256 _amount);_sellOverweight(address _component, uint256 _amount);_noTokensToSell();_allTargetsMet();_normalizeTargetUnit(address _component, uint256 _currentPositionMultiplier);_isAllowedTrader(address _caller);_validateArrays(address[] calldata _components, uint256[] calldata _data)"
zetherz/eth-match,test/helpers/SafeMathMock.sol,"multiply(uint256 a, uint256 b);subtract(uint256 a, uint256 b);add(uint256 a, uint256 b)"
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.5/selfdestruct.sol,""
Ethbet/ethbet,contracts/EBETtokenSale.sol,"owned();transferOwnership(address newOwner);safeMul(uint256 a, uint256 b);safeDiv(uint256 a, uint256 b);safeSub(uint256 a, uint256 b);safeAdd(uint256 a, uint256 b);safeAssert(bool assertion);balanceOf(address who);transfer(address to, uint256 value);EBETCrowdsale();initialEBETSupply();remainingSupply();SetupCrowdsale(uint256 _fundingStartBlock, uint256 _fundingEndBlock);setPrice();BuyEBETtokens();beneficiaryMultiSigWithdraw(uint256 _amount);checkGoalReached();refund()"
melonproject/protocol,contracts/fund/policies/utils/PolicyBase.sol,updateFundSettings(bytes calldata);__isPolicyManager(address _who)
dltdojo/courses,ethereum/solidity/T234_WhoOwnsPermission.sol,"FooStdToken();FooMintToken();Foo();setStdOwner(address _tokenOwner, address _tokenAddress);setMintTokenOwner(address _tokenOwner, address _tokenAddress)"
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/test/helpers/RefundableCrowdsaleImpl.sol,""
pash7ka/zeppelin-solidity,test/helpers/RefundableCrowdsaleImpl.sol,""
pz7/liquet,node_modules/zeppelin-solidity/test/helpers/RefundableCrowdsaleImpl.sol,""
dmx374/zeppelin-solidity,test/helpers/RefundableCrowdsaleImpl.sol,""
cashpokerpro-dev/cash-smartcontracts,test/helpers/RefundableCrowdsaleImpl.sol,""
cslarson/exchange,contracts/FIXED.sol,"FIXED();totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _amount);approve(address _spender, uint256 _amount);allowance(address _owner, address _spender)"
RyuuGan/sol-merger,test/contracts/DefaultParamentersInheritance.sol,""
papyrusglobal/smartcontracts,contracts/common/Ownable.sol,transferOwnership(address newOwner);renounceOwnership();owner();_transferOwnership(address newOwner)
SilentCicero/wafr,src/tests/solidityTests/assertEq/test.assertEq.multi.log.sol,test_oneValidEqStringUint()
Dobrokhvalov/eth2phone,contracts/Pausable.sol,pause();unpause()
stanta/darfchain,ICO/contracts/test/TestMigrationTarget.sol,"TestMigrationTarget(UpgradeableToken _oldToken);upgradeFrom(address _from, uint256 _value)"
annihilatio/ido,contracts/Migrations.sol,Migrations();setCompleted(uint256 completed);upgrade(address newAddress)
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/migrations/error/contracts/Example.sol,""
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/migrations/success/contracts/Example.sol,""
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/migrations/production/contracts/Example.sol,""
stanta/darfchain,ICO/contracts/AllocatedCrowdsale.sol,"AllocatedCrowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, address _beneficiary);isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal);isCrowdsaleFull();getTokensLeft();assignTokens(address receiver, uint tokenAmount)"
Health-Nexus/drs,contracts/HealthDRS.sol,"zero();isKeyOwner(bytes32 key, address account);isServiceOwner(bytes32 service, address account);getUrl(bytes32 service);getUrlFromKey(bytes32 key);updateUrl(bytes32 service, string memory url);getOwnersLength(bytes32 key);setLatestContract(address _contract);createService(string memory url);createKey(bytes32 service);issueKey(bytes32 service, address payable issueTo);shareKey(bytes32 key, address account);shareService(bytes32 service, address account);unshareKey(bytes32 key, address account);unshareService(bytes32 service, address account);createSalesOffer(bytes32 key, address payable buyer, uint price, bool _canSell);cancelSalesOffer(bytes32 key);purchaseKey(bytes32 key);createTradeOffer(bytes32 have, bytes32 want);cancelTradeOffer(bytes32 key);tradeKey(bytes32 have, bytes32 want);getServiceCount();getKeyCount();getService(bytes32 service);getKey(bytes32 key);setKeyData(bytes32 key, bytes32 dataKey, bytes32 dataValue);getKeyData(bytes32 key, bytes32 dataKey);logAccess(bytes32 key, string memory data);message(bytes32 from, bytes32 to, string memory category, string memory data);log(bytes32 from, string memory data)"
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/test/helpers/CappedCrowdsaleImpl.sol,""
pash7ka/zeppelin-solidity,test/helpers/CappedCrowdsaleImpl.sol,""
pz7/liquet,node_modules/zeppelin-solidity/test/helpers/CappedCrowdsaleImpl.sol,""
dmx374/zeppelin-solidity,test/helpers/CappedCrowdsaleImpl.sol,""
cashpokerpro-dev/cash-smartcontracts,test/helpers/CappedCrowdsaleImpl.sol,""
austing/blocksprintmountain,contracts/MountainFactory.sol,"joinMountain(bytes32 name, address mountain)"
Capillar/capillar-solidity,test/Test_ICO.sol,"beforeEach();testDistributing();testTransferControl();transferOwnerToProxy();transferOwnerToTest();ProxyUser(address _inst);transfer(address _to, uint _amount);remove()"
iurimatias/embark-framework,dapps/tests/app/another_folder/another_test.sol,SimpleStorage(uint initialValue);set(uint x);get()
Nethereum/Nethereum,src/Nethereum.Tutorials/Nethereum.Tutorials.Core/FunctionDTOs/contracts/test.sol,"StoreDocument(bytes32 key, string name, string description)"
bokkypoobah/TokenTrader,testing/test_20170205_1849/TokenTraderFactory.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);approve(address _spender, uint _value);allowance(address _owner, address _spender);Owned();transferOwnership(address newOwner);makerDepositEther();makerWithdrawAsset(uint256 tokens);makerWithdrawEther(uint256 ethers);takerBuyAsset();takerSellAsset(uint256 etherValueOfTokensToSell);verify(address tradeContract);TokenTrader(trader)"
mixbytes/storiqa_ico,contracts/crowdsale/FundsRegistryWalletConnector.sol,"FundsRegistryWalletConnector(address[] fundOwners, uint ownersSignatures);storeInvestment(address investor, uint payment);getTotalInvestmentsStored();wcOnCrowdsaleSuccess();wcOnCrowdsaleFailure()"
Storiqa/ico_smart_contract,contracts/crowdsale/FundsRegistryWalletConnector.sol,"FundsRegistryWalletConnector(address[] fundOwners, uint ownersSignatures);storeInvestment(address investor, uint payment);getTotalInvestmentsStored();wcOnCrowdsaleSuccess();wcOnCrowdsaleFailure()"
cgewecke/solcover,test/sources/function/empty-body.sol,emptyBody(uint x)
JoinColony/solcover,test/sources/function/empty-body.sol,emptyBody(uint x)
chenlian2015/eosEthMarketSample,contracts/OLAddressSuperManager.sol,getSuperManagerContractAddress()
gmo-blockchain/solidity,contracts/DataObject_v2.sol,"create(bytes32 _id, address _owner, bytes32 _hash, address _cns, bytes32 _contractName);setHashByWriter(bytes32 _id, address _writer, bytes32 _hash);setHashByProvider(bytes32 _id, bytes32 _hash);getWriteTimestamp(bytes32 _id)"
vanderheijden86/p2politics,test/TestUsers.sol,testSetRole();testHasRole();testChangeRole()
aragon/aragon-network-token,packages/sale/installed_contracts/zeppelin/contracts/payment/PullPayment.sol,"asyncSend(address dest, uint amount);withdrawPayments()"
pooleja/SolidityPlayground,contracts/zeppelin/payment/PullPayment.sol,"asyncSend(address dest, uint amount);withdrawPayments()"
maraoz/zeppelin-solidity,contracts/payment/PullPayment.sol,"asyncSend(address dest, uint amount);withdrawPayments()"
duaraghav8/Solium,test/lib/rules/indentation/reject/config-default.sol,singleLineWrong();firstLineWrong();secondLineWrong();thirdLineWrong();allLinesWrong();chainedFunctions();abstractFunc();abstractFunc()
kyamuise/mugen-money,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address newAddress)
redsquirrel/augur-core,src/LegacyRepContract.sol,LegacyRepContract();faucet(uint256 _amount)
eris-ltd/eris-db,execution/solidity/revert.sol,RevertAt(uint32 i);RevertNoReason()
EtherReal-ID/EtherReal-ID,sol/samrtIDRecipient.sol,"receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);Validate(string name,string id,string location);addFamily(address a);removeFamily(address a);addWallet(address a);removeWallet(address a);checkpopa();verifyAddress(address a,string addr);addressVerified(string addr);verifyEmail(address a,string addr);emailVerified();verifyImage(address a,string addr);imageVerified();getValidator(uint v);getValidated(uint v);getWallet(uint w);getInfo();check();transfer(address _to, uint256 _value);approve(address _spender, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);transferFrom(address _from, address _to, uint256 _value);setOwner(address _owner);AddressReg();verify(address addr);deverify(address addr);hasPhysicalAddress(address addr)"
PeculiumPCL/Peculium,contracts/v2/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
PeculiumPCL/Peculium,contracts/v1.2/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
PeculiumPCL/Peculium,contracts/v0.3/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
PeculiumPCL/Peculium,contracts/v0.6/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
PeculiumPCL/Peculium,contracts/v1.0/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
PeculiumPCL/Peculium,contracts/v0.5/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
PeculiumPCL/Peculium,contracts/v0.4/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
PeculiumPCL/Peculium,contracts/v0.2/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
PeculiumPCL/Peculium,contracts/v0.7/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
PeculiumPCL/Peculium,contracts/v1.1/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
iam-dev/ERC23,installed_contracts/zeppelin-solidity/contracts/ownership/HasNoEther.sol,HasNoEther();reclaimEther()
boisde/Greed_Island,party/contracts/protocol/modules/StreamingFeeModule.sol,"accrueFee(ISetToken _setToken);removeModule();updateFeeRecipient(ISetToken _setToken, address _newFeeRecipient);getFee(ISetToken _setToken);_calculateStreamingFee(ISetToken _setToken);_mintManagerAndProtocolFee(ISetToken _setToken, uint256 _feeQuantity);_editPositionMultiplier(ISetToken _setToken, uint256 _inflationFee);_feeRecipient(ISetToken _set);_lastStreamingFeeTimestamp(ISetToken _set);_maxStreamingFeePercentage(ISetToken _set);_streamingFeePercentage(ISetToken _set)"
FedCoup/FedCoup,contracts/FedCoup.sol,"Ownable();transferOwnership(address newOwner);mul(uint a, uint b);div(uint a, uint b);sub(uint a, uint b);add(uint a, uint b);assert(bool assertion);balanceOf(address who);transfer(address to, uint value);allowance(address owner, address spender);transferFrom(address from, address to, uint value);approve(address spender, uint value);transfer(address _to, uint _value);balanceOf(address _owner);transferFrom(address _from, address _to, uint _value);approve(address _spender, uint _value);allowance(address _owner, address _spender);FedCoup();createCoupons(uint _numberOfTokens);accept_B_coupons(address _from, uint _numberOfBcoupons);transferBcoupons(address _to, uint _numberOfBcoupons);transferScoupons(address _to, uint _numberOfScoupons);transferResidualBcoupons(address _to, uint _numberOfBcoupons);transferResidualScoupons(address _to, uint _numberOfScoupons);approveBcoupons(address _acceptor, uint _Bcoupons);approveScoupons(address _receiver, uint _Scoupons);allowanceBcoupons(address _from, address _acceptor);getCouponMulFactor();setCouponMulFactor(uint couponMulFactor);getTokenBalances(address _addr);getBcouponAllocationFactor();setBcouponAllocationFactor(uint BcouponAllocFactor);getScouponAllocationFactor();setScouponAllocationFactor(uint ScouponAllocFactor);getBcouponTransferCost();setBcouponTransferCost(uint transferCostBcoup);getScouponTransferCost();setScouponTransferCost(uint transferCostScoup);getBcouponBalances(address _addr);getScouponBalances(address _addr);getBalanceOfResidualBcoupons();setContractorImpl(address _contractorImplAddr);contractorTransfer_Bcoupon(address _to, uint _numberOfBcoupons);contractorTransferFrom_Bcoupon(address _from, address _to, uint _numberOfBcoupons);contractorTransfer_Scoupon(address _to, uint _numberOfScoupons);contractorTransferFrom_Scoupon(address _from, address _to, uint _numberOfScoupons)"
WishFinanceCom/WF-contracts,contracts/buyback/BuyBackInterface.sol,"setPrices(uint _buyPrice, uint _sellPrice)"
Nethereum/Nethereum,src/Nethereum.ENS/oldcontracts/FIFSRegistrar.sol,"FIFSRegistrar(ENS ensAddr, bytes32 node);register(bytes32 subnode, address owner)"
michinbear/solidity,test/compilationTests/zeppelin/token/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
elementrem/solidity,test/compilationTests/zeppelin/token/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app11-negative_numbers/storage.sol,"testNegatives(int a);setX(int a);setNegativeArray(int a, int b);getNegativeArray()"
eris-ltd/eris,tests/jobs_fixtures/app11-negative_numbers/storage.sol,"testNegatives(int a);setX(int a);setNegativeArray(int a, int b);getNegativeArray()"
monax/monax,tests/jobs_fixtures/app11-negative_numbers/storage.sol,"testNegatives(int a);setX(int a);setNegativeArray(int a, int b);getNegativeArray()"
eris-ltd/eris-cli,tests/jobs_fixtures/app11-negative_numbers/storage.sol,"testNegatives(int a);setX(int a);setNegativeArray(int a, int b);getNegativeArray()"
monax/cli,tests/jobs_fixtures/app11-negative_numbers/storage.sol,"testNegatives(int a);setX(int a);setNegativeArray(int a, int b);getNegativeArray()"
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app11-negative_numbers/storage.sol,"testNegatives(int a);setX(int a);setNegativeArray(int a, int b);getNegativeArray()"
boisde/Greed_Island,party/contracts/mocks/protocol/integration/AaveLendingPoolMock.sol,""
mycspring/ClaveChain,Chain/Lottery/LotteryClaveChain.sol,"LotteryClaveChain(address _clave);Register(bytes4 callback);SendResult(uint64 id, uint64 number)"
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.5/ctor.sol,""
burnoutcoin/go-burnout,contracts/chequebook/contract/chequebook.sol,""
locals-world/locals-app,truffle/contracts/owned.sol,owned();transferOwnership(address newOwner)
BlockTube/blocktube-client.0.3,app/contracts/owned.sol,owned();transferOwnership(address newOwner)
silasdavis/eris-db,tests/jobs_fixtures/app53-BLOCKHASH/GetBlockHash.sol,getBlockHash(uint blockNumber)
silasdavis/burrow,tests/jobs_fixtures/app53-BLOCKHASH/GetBlockHash.sol,getBlockHash(uint blockNumber)
eris-ltd/eris-db,tests/jobs_fixtures/app53-BLOCKHASH/GetBlockHash.sol,getBlockHash(uint blockNumber)
cryptape/cita,scripts/contracts/src/system/EmergencyIntervention.sol,setState(bool _state)
SilentCicero/wafr,src/tests/solidityTests/gasUsage/examples/tests/OpenRegistryBoardRoom_test.sol,"newProposal(address _board, string _name, address _proxy, uint _debatePeriod, address _destination, uint _value, bytes _calldata);vote(address _board, uint _proposalID, uint _position);execute(address _board, uint _proposalID, bytes _calldata);setup();test_openRegistry();test_openRegistryRules();test_newProposalAndVoting();test_complexNewProposalAndVoting()"
creditbit-dev/credit2.0,Utils/Owned.sol,Owned();transferOwnership(address _newOwner);acceptOwnership()
androlo/solidity-workshop,examples/IterableAddressSetFASM.sol,add(address addr);remove(address addr);has(address addr);size();all()
openanx/OpenANXToken,contracts/LockedTokens.sol,LockedTokens(address _tokenContract);addRemainingTokens();require(msg.sender == address(tokenContract);balanceOfLocked(address account);totalSupplyLocked()
openanx/OpenANXToken,test/LockedTokens.sol,LockedTokens(address _tokenContract);addRemainingTokens();require(msg.sender == address(tokenContract);balanceOfLocked(address account);totalSupplyLocked()
TruLtd/tru-reputation-token,src/0.1.8/TruCrowdSaleFull.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);isValid(address input);toString(address input);addressLength(address input);Ownable();transferOwnership(address newOwner);balanceOf(address who);transfer(address to, uint256 value);transfer(address _to, uint256 _value);balanceOf(address _owner);allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);increaseApproval(address _spender, uint _addedValue);decreaseApproval(address _spender, uint _subtractedValue);setReleaseAgent(address addr);setTransferAgent(address addr, bool state);releaseTokenTransfer();mint(address _to, uint256 _amount);finishMinting(bool _presale, bool _sale);isUpgradeAgent();upgradeFrom(address _from, uint256 _value);TruUpgradeableToken(address _upgradeMaster);upgrade(uint256 _value);setUpgradeAgent(address _agent);getUpgradeState();setUpgradeMaster(address _master);canUpgrade();TruReputationToken();changeBoardAddress(address _newAddress);canUpgrade();setUpgradeMaster(address _master);halt();unhalt();buy();updateWhitelist(address _purchaser, uint _status);changeEndTime(uint256 _endTime);hasEnded();checkSaleValid();validatePurchase(address _purchaser);forwardFunds();buyTokens(address _purchaser);finalise();completion()"
TruLtd/tru-reputation-token,src/0.1.6/TruCrowdSaleFull.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);isValid(address input);toString(address input);addressLength(address input);Ownable();transferOwnership(address newOwner);balanceOf(address who);transfer(address to, uint256 value);transfer(address _to, uint256 _value);balanceOf(address _owner);allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);increaseApproval(address _spender, uint _addedValue);decreaseApproval(address _spender, uint _subtractedValue);setReleaseAgent(address addr);setTransferAgent(address addr, bool state);releaseTokenTransfer();mint(address _to, uint256 _amount);finishMinting(bool _presale, bool _sale);isUpgradeAgent();upgradeFrom(address _from, uint256 _value);TruUpgradeableToken(address _upgradeMaster);upgrade(uint256 _value);setUpgradeAgent(address _agent);getUpgradeState();setUpgradeMaster(address _master);canUpgrade();TruReputationToken();changeBoardAddress(address _newAddress);canUpgrade();setUpgradeMaster(address _master);halt();unhalt();buy();updateWhitelist(address _purchaser, uint _status);changeEndTime(uint256 _endTime);hasEnded();checkSaleValid();validatePurchase(address _purchaser);forwardFunds();buyTokens(address _purchaser);finalise();completion()"
Davidyuk/Hackathon2017,app/public/solidity/Registry.sol,"Registry(string _name);addPerformer(address performer, string name, uint8 rating, string description);addOperationType(string name, string description);removePerformer(address performer);removeOperationType(uint32 id);verifyOperation(address performer, uint32 operation);touch()"
pooleja/SolidityPlayground,contracts/ProposalVote.sol,ProposalVote(mapping (address => uint);CastVote(bool votingYes)
kryptopy1/crowdsale,contracts/KryptopyToken.sol,"KryptopyToken();mint(address _to, uint256 _amount);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value)"
olivier-schmitt/solc-maven-plugin,src/test/resources/contracts/solidity/Ballot.sol,Ballot(bytes32[] proposalNames);giveRightToVote(address voter);delegate(address to);vote(uint proposal);winningProposal();winnerName()
mothershipcx/contracts,contracts/test/SITExchangerMock.sol,"SITExchangerMock(address _sit, address _msp, address _contribution);getBlockNumber();setMockedBlockNumber(uint _b)"
airalab/DAO-IPCI,contracts/builder/BuilderOperator.sol,""
allegewhd/erc20-token-service,contract/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
ethbitcoin/goodbit,tests/TestMetaData.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
CORIONplatform/solidity,safeMath.sol,"safeAdd(uint256 a, uint256 b);safeSub(uint256 a, uint256 b);safeMul(uint256 a, uint256 b)"
nud3l/verifying-computation-solidity,contracts/ComputationServiceLocally.sol,"__callback(bytes32 _oraclizeID, string _result);compute(string _val1, string _val2, uint _operation, uint256 _computationId);provideIndex(string _resultSolver, uint _computationId);registerOperation(uint _operation, string _query);enableArbiter(address _arbiterAddress);disableArbiter(address _arbiterAddress);getResult(uint _computationId);stringToUint(string s);uintToBytes(uint v)"
vechain-team/crowdsale-contracts,contracts/MockedExchange.sol,setToken(Token _token)
chenlian2015/eosEthMarketSample,contracts/OLFeeManager.sol,"setFee(string serverName, uint fee);setFeedBackFee(string serverName, uint fee);getFee(string serverName);getFeedBackFeeAward(string serverName);addFeeFeedBack(address serverPorvider, string contractName)"
shekhar-shubhendu/supply-chain,contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
FiatCentralBank/fiatcoin,contracts/token/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
fccoelho/Curso_Blockchain,contracts/Intro-to-Solidity/blindauction.sol,"bid(bytes32 _blindedBid);placeBid(address bidder, uint value);withdraw();auctionEnd()"
redsquirrel/augur-core,tests/solidity_test_helpers/Constants.sol,""
credsign/credsign.github.io,contracts/Content.sol,"Content();publish(string channel, string header, bytes body, address[] indexes);toContentID(address publisher, uint256 channelID, string header, bytes body);toChannelID(string channel);getPublisher(uint256 contentID);getChannelID(uint256 contentID);getTimestamp(uint256 contentID);getAttributes(uint256 contentID)"
LoRexxar/Cobra-W,tests/vul_sol/gouzaohanshucuowu.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);balanceOf(address _owner);transfer(address _to, uint256 _value);balanceOf(address who);transfer(address to, uint256 value);allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);distr(address _to, uint256 _value);totalSupply();balanceOf(address _owner);Constructor();transferOwnership(address newOwner);finishDistribution();finishedPurchase();distr(address _to, uint256 _amount);purch(address _to,uint256 _amount);purchaseTokens();airdropTokens();balanceOf(address _owner);transfer(address _to, uint256 _amount);transferFrom(address _from, address _to, uint256 _amount);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);getTokenBalance(address tokenAddress, address who);withdraw();burn(uint256 _value);burnPurchase(uint256 _value);withdrawForeignTokens(address _tokenContract);withdrawToken(address _to,uint256 _amount)"
DigixGlobal/ethereum-ruby,contracts/GoldRegistry.sol,"GoldRegistry(address _conf);registerGold(address _gold, address _owner, bytes32 _doc);isRegistered(address _gold);isVendorOf(address _gold, address _vndr);isCustodianOf(address _gold, address _cstdn);delegateCustodian(address _gold, address _cstdn);receiveFromVendor(address _gold, bytes32 _doc);submitAudit(address _gold, bytes32 _doc, bool _passed);requestRedemption(address _gold);markRedeemed(address _gold)"
EthWorks/ethereum.rb,contracts/GoldRegistry.sol,"GoldRegistry(address _conf);registerGold(address _gold, address _owner, bytes32 _doc);isRegistered(address _gold);isVendorOf(address _gold, address _vndr);isCustodianOf(address _gold, address _cstdn);delegateCustodian(address _gold, address _cstdn);receiveFromVendor(address _gold, bytes32 _doc);submitAudit(address _gold, bytes32 _doc, bool _passed);requestRedemption(address _gold);markRedeemed(address _gold)"
marekkirejczyk/ethereum.rb,contracts/GoldRegistry.sol,"GoldRegistry(address _conf);registerGold(address _gold, address _owner, bytes32 _doc);isRegistered(address _gold);isVendorOf(address _gold, address _vndr);isCustodianOf(address _gold, address _cstdn);delegateCustodian(address _gold, address _cstdn);receiveFromVendor(address _gold, bytes32 _doc);submitAudit(address _gold, bytes32 _doc, bool _passed);requestRedemption(address _gold);markRedeemed(address _gold)"
mycspring/ClaveChain,Chain/Id/Id.sol,"Id(IIdClaveChain _idClaveChain);RegisterUser(bytes32 user, bytes32[8] encPassword);SetSaltPassword(bytes32 user, bytes32 hashSaltPassword)"
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/ownership/DelayedClaimable.sol,"setLimits(uint256 _start, uint256 _end);claimOwnership()"
adridadou/hackethon-2016,contracts/GovContracts.sol,"buildContract(string contractHash, string name);getNumberContracts();getContractHash(uint id);getContractName(uint id);buildMilestone(uint govContract_id, uint duration, uint targetBudget);getNumberMilestones(uint contractId);getNumberSources(uint contractId, uint milestoneId);getDuration(uint contractId, uint milestoneId);getTargetBudget(uint contractId, uint milestoneId)"
aragon/aragon-core,contracts/test/mocks/ERCProxyMock.sol,proxyType();implementation()
GovernX/governx-contracts,src/contracts/utils/IMembershipRegistry.sol,members(uint256 _id);ids(address _member);isMember(address _member);numMembers();numActiveMembers();transfer(address _addr);addMember(address _member);removeMember(address _member)
mahendra-panchal/smart-contract-basics,func.sol,getData();setData(uint x);getName();setName(bytes2 myName)
SilentCicero/wafr,src/tests/solidityTests/gasUsage/examples/tests/StandardTokenFreezer_test.sol,"createHumanStandardToken(address _factory, uint256 _initialAmount, string _name, uint8 _decimals, string _symbol);approve(address _token, address _spender, uint256 _value);freezeAllowance(address _freezer, uint _daysToThaw);setup();test_tokenFreeze();test_invalidTokenFreeze()"
lucywe/rootcore-crowdsale,solidity/contracts/SmartTokenController.sol,"SmartTokenController(ISmartToken _token);transferTokenOwnership(address _newOwner);acceptTokenOwnership();disableTokenTransfers(bool _disable);withdrawFromToken(IERC20Token _token, address _to, uint256 _amount)"
ethereum/frontier-release,solidity/dao-association.sol,"transferOwnership(address newOwner);receiveApproval(address _from, uint256 _value, address _token, bytes memory _extraData);transferFrom(address _from, address _to, uint256 _value);changeVotingRules(Token sharesAddress, uint minimumSharesToPassAVote, uint minutesForDebate);executeProposal(uint proposalNumber, bytes memory transactionBytecode)"
ethereum/ethereum-org,solidity/dao-association.sol,"transferOwnership(address newOwner);receiveApproval(address _from, uint256 _value, address _token, bytes memory _extraData);transferFrom(address _from, address _to, uint256 _value);changeVotingRules(Token sharesAddress, uint minimumSharesToPassAVote, uint minutesForDebate);executeProposal(uint proposalNumber, bytes memory transactionBytecode)"
aragon/aragon-core,contracts/lib/math/SafeMath.sol,"mul(uint256 _a, uint256 _b);div(uint256 _a, uint256 _b);sub(uint256 _a, uint256 _b);add(uint256 _a, uint256 _b);mod(uint256 a, uint256 b)"
FiatCentralBank/fiatcoin,contracts/ownership/Ownable.sol,Ownable();transferOwnership(address newOwner)
eris-ltd/eris-db,tests/compilers_fixtures/contractImport2.sol,"add(int a, int b);subtract(int a, int b);addFromMapping(uint a, uint b)"
AdChain/AdChainRegistry,contracts/historical/HumanStandardToken.sol,"approveAndCall(address _spender, uint256 _value, bytes _extraData)"
kr8os/token-sale-contracts,contracts/HumanStandardToken.sol,"approveAndCall(address _spender, uint256 _value, bytes _extraData)"
Dsummers91/Dist-Trade-2017,installed_contracts/tokens/contracts/HumanStandardToken.sol,"approveAndCall(address _spender, uint256 _value, bytes _extraData)"
axic/tinyoracle,contracts/api.sol,query(bytes _query);getQueryAddress();getResponseAddress();queryTinyOracle(bytes query)
manishbisht/Udacity,Blockchain Developer Nanodegree/P8 - Capstone - Real Estate Marketplace/eth-contracts/contracts/Oraclize.sol,"f(bytes calldata x);setProofType(byte _proofType);setCustomGasPrice(uint _gasPrice);getPrice(string memory _datasource);randomDS_getSessionPubKeyHash();getPrice(string memory _datasource, uint _gasLimit);queryN(uint _timestamp, string memory _datasource, bytes memory _argN);query(uint _timestamp, string calldata _datasource, string calldata _arg);query_withGasLimit(uint _timestamp, string calldata _datasource, string calldata _arg, uint _gasLimit);queryN_withGasLimit(uint _timestamp, string calldata _datasource, bytes calldata _argN, uint _gasLimit);getAddress();init(buffer memory _buf, uint _capacity);resize(buffer memory _buf, uint _capacity);max(uint _a, uint _b);append(buffer memory _buf, bytes memory _data);append(buffer memory _buf, uint8 _data);appendInt(buffer memory _buf, uint _data, uint _len);encodeType(Buffer.buffer memory _buf, uint8 _major, uint _value);encodeIndefiniteLengthType(Buffer.buffer memory _buf, uint8 _major);encodeUInt(Buffer.buffer memory _buf, uint _value);encodeInt(Buffer.buffer memory _buf, int _value);encodeBytes(Buffer.buffer memory _buf, bytes memory _value);encodeString(Buffer.buffer memory _buf, string memory _value);startArray(Buffer.buffer memory _buf);startMap(Buffer.buffer memory _buf);endSequence(Buffer.buffer memory _buf);oraclize_setNetwork(uint8 _networkID);oraclize_setNetworkName(string memory _network_name);oraclize_getNetworkName();oraclize_setNetwork();__callback(bytes32 _myid, string memory _result);__callback(bytes32 _myid, string memory _result, bytes memory _proof);oraclize_getPrice(string memory _datasource);oraclize_getPrice(string memory _datasource, uint _gasLimit);oraclize_query(string memory _datasource, string memory _arg);oraclize_query(uint _timestamp, string memory _datasource, string memory _arg);oraclize_query(uint _timestamp, string memory _datasource, string memory _arg, uint _gasLimit);oraclize_query(string memory _datasource, string memory _arg, uint _gasLimit);oraclize_query(string memory _datasource, string memory _arg1, string memory _arg2);oraclize_query(uint _timestamp, string memory _datasource, string memory _arg1, string memory _arg2);oraclize_query(uint _timestamp, string memory _datasource, string memory _arg1, string memory _arg2, uint _gasLimit);oraclize_query(string memory _datasource, string memory _arg1, string memory _arg2, uint _gasLimit);oraclize_query(string memory _datasource, string[] memory _argN);oraclize_query(uint _timestamp, string memory _datasource, string[] memory _argN);oraclize_query(uint _timestamp, string memory _datasource, string[] memory _argN, uint _gasLimit);oraclize_query(string memory _datasource, string[] memory _argN, uint _gasLimit);oraclize_query(string memory _datasource, string[1] memory _args);oraclize_query(uint _timestamp, string memory _datasource, string[1] memory _args);oraclize_query(uint _timestamp, string memory _datasource, string[1] memory _args, uint _gasLimit);oraclize_query(string memory _datasource, string[1] memory _args, uint _gasLimit);oraclize_query(string memory _datasource, string[2] memory _args);oraclize_query(uint _timestamp, string memory _datasource, string[2] memory _args);oraclize_query(uint _timestamp, string memory _datasource, string[2] memory _args, uint _gasLimit);oraclize_query(string memory _datasource, string[2] memory _args, uint _gasLimit);oraclize_query(string memory _datasource, string[3] memory _args);oraclize_query(uint _timestamp, string memory _datasource, string[3] memory _args);oraclize_query(uint _timestamp, string memory _datasource, string[3] memory _args, uint _gasLimit);oraclize_query(string memory _datasource, string[3] memory _args, uint _gasLimit);oraclize_query(string memory _datasource, string[4] memory _args);oraclize_query(uint _timestamp, string memory _datasource, string[4] memory _args);oraclize_query(uint _timestamp, string memory _datasource, string[4] memory _args, uint _gasLimit);oraclize_query(string memory _datasource, string[4] memory _args, uint _gasLimit);oraclize_query(string memory _datasource, string[5] memory _args);oraclize_query(uint _timestamp, string memory _datasource, string[5] memory _args);oraclize_query(uint _timestamp, string memory _datasource, string[5] memory _args, uint _gasLimit);oraclize_query(string memory _datasource, string[5] memory _args, uint _gasLimit);oraclize_query(string memory _datasource, bytes[] memory _argN);oraclize_query(uint _timestamp, string memory _datasource, bytes[] memory _argN);oraclize_query(uint _timestamp, string memory _datasource, bytes[] memory _argN, uint _gasLimit);oraclize_query(string memory _datasource, bytes[] memory _argN, uint _gasLimit);oraclize_query(string memory _datasource, bytes[1] memory _args);oraclize_query(uint _timestamp, string memory _datasource, bytes[1] memory _args);oraclize_query(uint _timestamp, string memory _datasource, bytes[1] memory _args, uint _gasLimit);oraclize_query(string memory _datasource, bytes[1] memory _args, uint _gasLimit);oraclize_query(string memory _datasource, bytes[2] memory _args);oraclize_query(uint _timestamp, string memory _datasource, bytes[2] memory _args);oraclize_query(uint _timestamp, string memory _datasource, bytes[2] memory _args, uint _gasLimit);oraclize_query(string memory _datasource, bytes[2] memory _args, uint _gasLimit);oraclize_query(string memory _datasource, bytes[3] memory _args);oraclize_query(uint _timestamp, string memory _datasource, bytes[3] memory _args);oraclize_query(uint _timestamp, string memory _datasource, bytes[3] memory _args, uint _gasLimit);oraclize_query(string memory _datasource, bytes[3] memory _args, uint _gasLimit);oraclize_query(string memory _datasource, bytes[4] memory _args);oraclize_query(uint _timestamp, string memory _datasource, bytes[4] memory _args);oraclize_query(uint _timestamp, string memory _datasource, bytes[4] memory _args, uint _gasLimit);oraclize_query(string memory _datasource, bytes[4] memory _args, uint _gasLimit);oraclize_query(string memory _datasource, bytes[5] memory _args);oraclize_query(uint _timestamp, string memory _datasource, bytes[5] memory _args);oraclize_query(uint _timestamp, string memory _datasource, bytes[5] memory _args, uint _gasLimit);oraclize_query(string memory _datasource, bytes[5] memory _args, uint _gasLimit);oraclize_setProof(byte _proofP);oraclize_cbAddress();getCodeSize(address _addr);oraclize_setCustomGasPrice(uint _gasPrice);oraclize_randomDS_getSessionPubKeyHash();parseAddr(string memory _a);strCompare(string memory _a, string memory _b);indexOf(string memory _haystack, string memory _needle);strConcat(string memory _a, string memory _b);strConcat(string memory _a, string memory _b, string memory _c);strConcat(string memory _a, string memory _b, string memory _c, string memory _d);strConcat(string memory _a, string memory _b, string memory _c, string memory _d, string memory _e);safeParseInt(string memory _a);safeParseInt(string memory _a, uint _b);parseInt(string memory _a);parseInt(string memory _a, uint _b);oraclize_newRandomDSQuery(uint _delay, uint _nbytes, uint _customGasLimit);oraclize_randomDS_setCommitment(bytes32 _queryId, bytes32 _commitment);verifySig(bytes32 _tosignh, bytes memory _dersig, bytes memory _pubkey);oraclize_randomDS_proofVerify__sessionKeyValidity(bytes memory _proof, uint _sig2offset);oraclize_randomDS_proofVerify__returnCode(bytes32 _queryId, string memory _result, bytes memory _proof);oraclize_randomDS_proofVerify__main(bytes memory _proof, bytes32 _queryId, bytes memory _result, string memory _contextName);copyBytes(bytes memory _from, uint _fromOffset, uint _length, bytes memory _to, uint _toOffset);safer_ecrecover(bytes32 _hash, uint8 _v, bytes32 _r, bytes32 _s);ecrecovery(bytes32 _hash, bytes memory _sig);safeMemoryCleaner()"
phi-nomenal/phi-nomenal,local_modules/phi-nomenal-contracts/contracts/MatchingEngine.sol,"MatchingEngine();getAmountOfQuotations(RFQ rfq);getQuotation(RFQ rfq, uint index);amountOfQuotations();addQuotation(Quotation quotation)"
cgewecke/solcover,test/sources/expressions/single-binary-expression.sol,a(uint x)
JoinColony/solcover,test/sources/expressions/single-binary-expression.sol,a(uint x)
QTBlockchain/SolidityNWeb3,SmartContracts/March2018/AbstractionDemo/contracts/FareBase.sol,"FareBase(uint16 distance,uint16 price);computeFare(uint16 distance);setDistanceAndPrice(uint16 distance,uint16 price)"
Opus-foundation/contracts,contracts/OpusToken.sol,"OpusToken();halt();unhalt();buy();buyRecipient(address recipient);burn(uint256 _value);proposeFoundationTransfer(address newFoundation);cancelFoundationTransfer();acceptFoundationTransfer();setMultisig(address addr);transfer(address _to, uint256 _value, bytes _data);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);returnRate();perAddressCap();preCrowdsaleOn();crowdsaleOn();getEtherRaised();getTokenSold()"
dltdojo/courses,ethereum/dapps/ens/AbstractENS.sol,"owner(bytes32 node);resolver(bytes32 node);ttl(bytes32 node);setOwner(bytes32 node, address _owner);setSubnodeOwner(bytes32 node, bytes32 label, address _owner);setResolver(bytes32 node, address _resolver);setTTL(bytes32 node, uint64 _ttl)"
LykkeCity/EthereumApiDotNetCore,src/ContractBuilder/contracts/token/SafeMath.sol,""
Spreadway/core,eth/token2.sol,"receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);_transfer(address _from, address _to, uint _value);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);burn(uint256 _value);burnFrom(address _from, uint256 _value)"
boisde/Greed_Island,party/contracts/mocks/protocol/module/NAVIssuanceCaller.sol,""
cryptape/cita,scripts/contracts/src/user_management/Group.sol,addAccounts(address[] _accounts);deleteAccounts(address[] _accounts);updateName(bytes32 _name);deleteChild(address _child);addChild(address _child);close();queryInfo();queryName();queryAccounts();queryChild();queryChildLength();queryParent();inGroup(address _account)
Neurone/persians,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Majoolr/ethereum-libraries,VestingLib/truffle/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Majoolr/ethereum-libraries,WalletLib/truffle/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Majoolr/ethereum-libraries,CrowdsaleLib/IICOLib/truffle/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Majoolr/ethereum-libraries,LinkedListLib/truffle/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
NoahZinsmeister/ProveIt,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
elementrem/solidity,test/compilationTests/MultiSigWallet/MultiSigWalletWithDailyLimit.sol,"MultiSigWalletWithDailyLimit(address[] _owners, uint _required, uint _dailyLimit);changeDailyLimit(uint _dailyLimit);executeTransaction(uint transactionId);isUnderLimit(uint amount);calcMaxWithdraw()"
ethereum/dapp-bin,library/linkedList.sol,"append(data storage self, bytes32 _data);remove(data storage self, uint80 _index);find(data storage self, bytes32 _value);iterate_start(data storage self);iterate_valid(data storage self, uint80 _index);iterate_prev(data storage self, uint80 _index);iterate_next(data storage self, uint80 _index);iterate_get(data storage self, uint80 _index);Test();remove(bytes32 data)"
readevalprint/aragon-core,contracts/misc/IScheduled.sol,"setSchedule(bytes2 _ct_sec, bytes2 _ct_min, bytes2 _ct_hour, bytes2 _ct_day, bytes2 _ct_month, bytes2 _ct_weekday, bytes2 _ct_year, uint _max_count);task()"
channel/channel.github.io,contracts/Read.sol,"Read(address feedContract);getChannelFeed(address token, uint256 offset, uint256 limit, uint256 cacheBust);getAccountFeed(address user, uint256 offset, uint256 limit, uint256 cacheBust);getContentReplies(uint256 contentID, uint256 cacheBust);getContents(uint256[] contentIDs, uint256 cacheBust);getChannelSize(address token, uint256 cacheBust);getAccountSize(address user, uint256 cacheBust)"
zetherz/eth-match,test/helpers/ForceEther.sol,ForceEther();destroyAndSend(address _recipient)
PeculiumPCL/Peculium,contracts/v0.5/Bounty.sol,Bounty(uint256 amount);payBounty()
golemfactory/ethereum-contracts,BankOfDeposit.sol,"balanceOf(address addr);balance();deposit();withdraw(uint value, address to);transfer(bytes32[] payments);transferExternalValue(bytes32[] payments)"
scorpilix/Golemtest,golem/ethereum/contracts/BankOfDeposit.sol,"balanceOf(address addr);balance();deposit();withdraw(uint value, address to);transfer(bytes32[] payments);transferExternalValue(bytes32[] payments)"
Radagast-red/golem,golem/ethereum/contracts/BankOfDeposit.sol,"balanceOf(address addr);balance();deposit();withdraw(uint value, address to);transfer(bytes32[] payments);transferExternalValue(bytes32[] payments)"
imapp-pl/ethereum-contracts,BankOfDeposit.sol,"balanceOf(address addr);balance();deposit();withdraw(uint value, address to);transfer(bytes32[] payments);transferExternalValue(bytes32[] payments)"
mothershipcx/contracts,contracts/test/MSPPlaceholderMock.sol,"MSPPlaceholderMock(address _controller, address _msp, address _contribution, address _sitExchanger);getTime();setMockedTime(uint _t)"
mothershipcx/contracts,contracts/interface/Finalizable.sol,finalize()
Majoolr/ethereum-libraries,CrowdsaleLib/EvenDistroCrowdsale/truffle/contracts/EvenDistroTestEteenD.sol,sendPurchase();registerUser(address _registrant);registerUsers(address[] _registrants);unregisterUser(address _registrant);unregisterUsers(address[] _registrants);isRegistered(address _registrant);withdrawTokens();withdrawLeftoverWei();withdrawOwnerEth();crowdsaleActive();crowdsaleEnded();setTokens();getOwner();getTokensPerEth();getStartTime();getEndTime();getEthRaised();getContribution(address _buyer);getTokenPurchase(address _buyer);getLeftoverWei(address _buyer);getSaleData(uint256 timestamp);getTokensSold();getPercentBurn();getAddressTokenCap();getNumRegistered()
stevejaxon/ethereum-tutorials,contracts/Crowdsale.sol,"transfer(address receiver, uint amount);checkGoalReached();safeWithdrawal()"
aragon/aragon-core,contracts/ens/ENSSubdomainRegistrar.sol,"initialize(AbstractENS _ens, bytes32 _rootNode);createName(bytes32 _label, address _owner);createNameAndPoint(bytes32 _label, address _target);deleteName(bytes32 _label);pointRootNode(address _target);_createName(bytes32 _label, address _owner);_pointToResolverAndResolve(bytes32 _node, address _target);getAddr(bytes32 node);getNodeForLabel(bytes32 _label)"
Majoolr/ethereum-libraries,CrowdsaleLib/IICOLib/truffle/contracts/InteractiveCrowdsaleTestContract.sol,"submitBid(uint256 _personalValuation, uint256 _listPredict);withdrawBid();withdrawLeftoverWei();retreiveFinalResult();finalizeSale();withdrawOwnerEth();crowdsaleActive();crowdsaleEnded();getOwner();getTokensPerEth();getStartTime();getEndTime();getMinimumRaise();getEndWithdrawlTime();getCommittedCapital();getContribution(address _buyer);getLeftoverWei(address _buyer);getPersonalCap(address _bidder);getPrice(address _bidder);getTokensSold();getPercentBeingSold();getCurrentBucket();getTotalValuation();getTokenAddress();getValueCommitement(uint256 bucket);getOwnerBalance()"
ChronoBank/LX-SC,contracts/MultiEventsHistory.sol,""
Nethereum/Nethereum,src/Nethereum.Tutorials/Nethereum.Tutorials.Account/Deployment/contracts/test.sol,test(int multiplier);multiply(int val)
Nethereum/Nethereum,src/Nethereum.Tutorials/Nethereum.Tutorials/Deployment/contracts/test.sol,test(int multiplier);multiply(int val)
serapath-contribution/browser-solidity,contracts/folder1/contract1.sol,""
readevalprint/aragon-core,test/helpers/TestToken.sol,""
pruby/AdversariallyVerifiableMachine,contracts/AVMDemoStackMachine.sol,"validateStep(uint256[] readAccesses, uint256[] writeAccesses);getMaximumReadsPerStep();getMaximumWritesPerStep()"
willnwhite/Y,contracts/Y.sol,"Y(uint num, uint denom);payAndDonate(uint num, uint denom, address donee);setDonationProportion(uint num, uint denom);unstickWei(address recipient, uint wei_);stickWei()"
etherisc/flightDelay,contracts/FlightDelayLedger.sol,"FlightDelayLedger(address _controller);setContracts();fund();receiveFunds(Acc _to);sendFunds(address _recipient, Acc _from, uint _amount);bookkeeping(Acc _from, Acc _to, uint256 _amount)"
Neufund/Contracts,contracts/neufund/NeufundICO.sol,""
UrsZeidler/smart-contract-examples,openLibrary/src/main/resources/contract/contracts.sol,"Library();registerManager(address _address);unregisterManager(address _address);registerEmployee(address _address);unregisterEmployee(address _address);registerUser(address _address,string _name);unregisterUser(address _address);addBook(string _titel);changeBookState(uint id,uint _state);borrowBook(uint id,address _address);returnBook(uint id,address _address);getBook(uint _id)"
michinbear/solidity,test/compilationTests/gnosis/Markets/Campaign.sol,fund(uint amount);refund();createMarket();closeMarket();withdrawFees()
elementrem/solidity,test/compilationTests/gnosis/Markets/Campaign.sol,fund(uint amount);refund();createMarket();closeMarket();withdrawFees()
readevalprint/aragon-core,contracts/common/EtherToken.sol,"wrap();withdraw(uint256 amount, address recipient);secureWithdraw(uint256 amount, address recipient);performWithdrawAccounting(uint256 amount, address recipient)"
dpilch/solmd,test/solmd/general/GavCoin.sol,"send(address to, uint256 valueInmGAV);setOwner(address _owner);mint()"
dpilch/solmd,test/solmd/notoc/GavCoin.sol,"send(address to, uint256 valueInmGAV);setOwner(address _owner);mint()"
chainpoint/chainpoint-services,node-eth-contracts/contracts/zeppelin-solidity/contracts/lifecycle/Pausable.sol,pause();unpause()
adklempner/solidity-license,contracts/zeppelin/lifecycle/Pausable.sol,pause();unpause()
adamdossa/ProfitSharingContract,installed_contracts/zeppelin/contracts/lifecycle/Pausable.sol,pause();unpause()
Majoolr/ethereum-libraries,ArrayUtilsLib/truffle/contracts/ArrayUtilsTestContractThree.sol,""
WishFinanceCom/WF-contracts,contracts/assets/WF.sol,"initWF(WFAssetProxy _proxy, uint _icoUsd, uint _icoEth, uint _icoBtc, uint _icoLtc)"
y12studio/dltdojo,contracts/ddjat/contracts/DDJETHToken.sol,DDJETHToken();deposit();withdraw(uint amount)
eris-ltd/eris-db,rpc/test.sol,Hello()
iExecBlockchainComputing/rlc-token,contracts/ERC20.sol,"balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value)"
FedCoup/FedCoup,installed_contracts/zeppelin/contracts/token/VestedToken.sol,"revokeTokenGrant(address _holder, uint _grantId);tokenGrantsCount(address _holder);tokenGrant(address _holder, uint _grantId);vestedTokens(TokenGrant grant, uint64 time);nonVestedTokens(TokenGrant grant, uint64 time);lastTokenIsTransferableDate(address holder);transferableTokens(address holder, uint64 time)"
justmake/smart_contract,utils/Owned.sol,Owned();transferOwnership(address _newOwner);acceptOwnership()
manishbisht/Udacity,Blockchain Developer Nanodegree/P6 - Architect a Blockchain Supply Chain Solution/Part B/Starter_Code/project-6/contracts/base/SupplyChain.sol,"kill();processItem(uint _upc, address _originManufacturerID, string _originManufacturerName, string _originManufacturerInformation, string _originManufacturerLatitude, string _originManufacturerLongitude);packItem(uint _upc);verifyCaller(items[_upc].ownerID);addItem(uint _upc, uint _price, address retailerID);verifyCaller(items[_upc].ownerID);receiveItem(uint _upc, string productNotes);shipItem(uint _upc, address customerID);verifyCaller(items[_upc].ownerID);buyItem(uint _upc);fetchItem(uint _upc);fetchItemDetails(uint _upc);addItemHistory(uint _upc, string txHash);getItemHistory(uint _upc)"
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/inheritance/contracts/Root.sol,"addToRoot(uint a, uint b)"
ethbitcoin/goodbit,contracts/GoodBitToken.sol,"GoodBit();transfer(address _to, uint256 _value);approve(address _spender, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);transferFrom(address _from, address _to, uint256 _value);burn(uint256 _value);burnFrom(address _from, uint256 _value)"
DonorToken/DonorToken,test/helpers/ReentrancyMock.sol,ReentrancyMock();count();countLocalRecursive(uint256 n);countThisRecursive(uint256 n);countAndCall(ReentrancyAttack attacker);callback()
stanta/darfchain,ICO/contracts/Haltable.sol,halt();unhalt()
federicobond/solidity-antlr4,test.sol,"f(uint a, uint b);g(uint c);f();fun(uint256 a);f();f();f();f();f();fun();fun();fun();fun();fun();f(ufixed x, fixed32x32 y);fun(uint256 a);functionName(bytes20 arg1, address addr);fun(uint256 a);x();fun(uint256 a);fun(uint256 a);fun(uint256 a);fun(uint256 a);functionName(bytes32 input);fun(uint256 a);fun();f();f();test();f();f(uint[] constant x, uint[] memory y);f();f();g();fun();fun();fun();fun();foo(uint a);bar(string a, string b);fun();f();functionName();fun(int256 a);fun(uint a);fun(uint a, uint b);fun();functionName(bytes32 input);fun();f();fun();f();f();fun(uint256 a);fun(uint256 a);f();f_priv();f_public();f_internal();fun(uint256 a);f(x);f();g();f();f();foo();_finalization()"
solidityj/solidity-antlr4,test.sol,"f(uint a, uint b);g(uint c);f();fun(uint256 a);f();f();f();f();f();fun();fun();fun();fun();fun();f(ufixed x, fixed32x32 y);fun(uint256 a);functionName(bytes20 arg1, address addr);fun(uint256 a);x();fun(uint256 a);fun(uint256 a);fun(uint256 a);fun(uint256 a);functionName(bytes32 input);fun(uint256 a);fun();f();f();test();f();f(uint[] constant x, uint[] memory y);f();f();g();fun();fun();fun();fun();foo(uint a);bar(string a, string b);fun();f();functionName();fun(int256 a);fun(uint a);fun(uint a, uint b);fun();functionName(bytes32 input);fun();f();fun();f();f();fun(uint256 a);fun(uint256 a);f();f_priv();f_public();f_internal();fun(uint256 a);f(x);f();g();f();f();foo();_finalization()"
ConsenSys/dapp-store-contracts,contracts/AttributeModel.sol,"AttributeModel();create(uint[101][] attributes);validate(address sender, uint id, uint[101][] attributes)"
mycspring/ClaveChain,Chain/Id/IIdClaveChain.sol,"Register(bytes4 callback, bytes32 user, bytes32[8] encPassword);Update(IIdClaveChain _idClaveChain)"
bdbi/ERC20-simple-marketplace,contracts/marketplace/SimpleTrade.sol,"approve(<this_contract_address>,<amount>);close();setRecovery();tokenRecovery(address _token, address _recipient, uint256 _amount)"
bloodstalker/scrypt-interactive,contracts/scryptVerifier.sol,"isInitiallyValid(VerificationSession storage session);performStepVerificationSpecific(VerificationSession storage, uint step, bytes preState, bytes postState, bytes proof);verifyStep(uint step, bytes preState, bytes postState, bytes proof);initMemory(State memory);readMemory(State memory state, uint index, Proofs memory proofs);writeMemory(State memory state, uint index, uint[4] values, Proofs memory proofs);preCheckProof(State memory state, uint index, Proofs memory proofs);executeProof(bytes32[] proof, uint index)"
livepeer/protocol,test/unit/TestSortedDoublyLLRemove.sol,beforeAll();beforeEach();test_remove();test_remove_singleNode();test_remove_head();test_remove_tail();test_remove_notInList()
saulbein/web3j,core/src/test/resources/solidity/contracts/HumanStandardTokenFactory.sol,"HumanStandardTokenFactory();verifyHumanStandardToken(address _tokenContract);codeAt(address _addr);createHumanStandardToken(uint256 _initialAmount, string _name, uint8 _decimals, string _symbol)"
rfikki/demo-solidity,blindauction.sol,"bid(bytes32 _blindedBid);placeBid(address bidder, uint value);withdraw();auctionEnd()"
PlutusIt/PlutusDEX,contracts/Trader.sol,""
TrueFlip/trueflip-contracts,contracts/StandardToken.sol,"totalSupply();balanceOf(address owner);transfer(address to, uint256 value);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);allowance(address owner, address spender);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
vishakh/blockinstruments,contracts/RandomizedPriceFeedApi.sol,RandomizedPriceFeedApi();getPrice(bytes32 symbol);getTimestamp(bytes32 symbol);perturb(bytes32 symbol);ping()
aragon/aragon-network-token,packages/sale/installed_contracts/zeppelin/contracts/ownership/Multisig.sol,"changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h)"
FedCoup/FedCoup,installed_contracts/zeppelin/contracts/ownership/Multisig.sol,"changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h)"
pooleja/SolidityPlayground,contracts/zeppelin/ownership/Multisig.sol,"changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h)"
maraoz/zeppelin-solidity,contracts/ownership/Multisig.sol,"changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h)"
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app25-multiple_contracts_single_factory/contracts/Factory.sol,set(uint x);get();create();last()
eris-ltd/eris,tests/jobs_fixtures/app25-multiple_contracts_single_factory/contracts/Factory.sol,set(uint x);get();create();last()
monax/monax,tests/jobs_fixtures/app25-multiple_contracts_single_factory/contracts/Factory.sol,set(uint x);get();create();last()
eris-ltd/eris-cli,tests/jobs_fixtures/app25-multiple_contracts_single_factory/contracts/Factory.sol,set(uint x);get();create();last()
monax/cli,tests/jobs_fixtures/app25-multiple_contracts_single_factory/contracts/Factory.sol,set(uint x);get();create();last()
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app25-multiple_contracts_single_factory/contracts/Factory.sol,set(uint x);get();create();last()
gnidan/interval-trees-solidity,test/intervals/TestTreeLib.sol,""
bryantwong/breadcoin,contract.sol,"initializeBread(uint breadSupply, string tokenName);sendBread(address recip, uint amount);proofOfWork(uint guess)"
aragon/aragon-core,contracts/factory/DAOFactory.sol,newDAO(address _root)
pipermerriam/populus,tests/fixtures/WithNoArgumentConstructor.sol,WithNoArgumentConstructor()
boisde/Greed_Island,party/contracts/protocol/integration/ZeroExApiAdapter.sol,""
acebusters/safe-token-sale,contracts/satelites/Power.sol,"balanceOf(address _holder);totalSupply();activeSupply();slashPower(address _holder, uint256 _value, bytes32 _data);powerUp(address _holder, uint256 _value);transfer(address _to, uint256 _amountPower);downtime();downTick(address _owner);downs(address _owner)"
nexusdev/feedbase,src/interface.sol,"claim();set(bytes12 id, bytes32 value, uint40 expiration);has(bytes12 id);get(bytes12 id);tryGet(bytes12 id)"
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.4.24/modifier1.sol,b(address a)
soad003/browser-solidity,test/staticanalysis/test-contracts/modifier1.sol,b(address a)
jensenbox/singnet,dao/contracts/agent/Agent.sol,"sendPacket(address target, bytes packet);appendPacket(bytes packet);getPacket(uint id);setJob(MarketJob _job)"
AragonOne/zeppelin-solidity,contracts/test-helpers/PullPaymentMock.sol,"PullPaymentMock();callSend(address dest, uint amount)"
Crypto-Apartments/CRA-ICO-TOKEN,contract/Owned.sol,Owned();transferOwnership(address _newOwner);acceptOwnership()
fkbenjamin/pc-firebase-starter,contracts/examples/Registry.sol,SomeRegister();changeBackend(address newBackend)
becodemonkey/solidity,contracts/util/ReentryProtected.sol,""
mkorpela/randomized,contracts/Randomized.sol,"setKey(bytes32 publicKey);validate(uint seedBlockNumber, bytes32 seed, address sender, bytes32 crypted, bytes32 result);findKey(Key[] addressKeys, uint seedBlockNumber);privatized(bytes32 crypted, bytes32 publicKey);modexp(bytes memory _base, bytes memory _exp, bytes memory _mod)"
asseth/dao1901,customModules/protocol/contracts/Dao1901Votes.sol,"createProposal(string _description, uint _daysUntilDeadline);vote(uint _propId, string _choice);getVote(uint _propId, address _voter)"
ProBonoPublicoWorld/ico-contracts,contracts/PreICOCrowdsale.sol,""
darcius/rocketpool-crowdsale,contracts/sales/RocketPoolCrowdsale.sol,RocketPoolCrowdsale(address _tokenContractAddress);claimTokensAndRefund();ownerClaimTokensAndRefundForUser(address _contributerAddress);sendTokensAndRefund(address _contributerAddress);setSaleDepositsAllowed(bool _set);kill()
AnnaIsAWang/LedgerLabsCoops2016,AbstractedStateChannel/Adjudicator.sol,"Adjudicator(address[] _addresses, uint _consenters, uint _timeout);createLockedState();getStateLength();getStateAt(uint index);getLockedStateAddress();getNonce();giveConsent(uint8 v, bytes32 r, bytes32 s);doBroadcast();finaliseChannel();kill()"
aletheia-foundation/aletheia-app,contracts/ManuscriptIndex.sol,"add(bytes32 _hash, address _addr);remove(bytes32 _hash)"
Yann-Liang/browser-solidity,contracts/src/ug/finance.sol,Loan(uint8 _numProposals)
serapath-contribution/browser-solidity,contracts/src/ug/finance.sol,Loan(uint8 _numProposals)
duaraghav8/Solium,test/lib/rules/indentation/reject/chars-before-top-level.sol,""
Xorek/SmartContract,ID.sol,getConID();getNegID();getMarketID()
phi-nomenal/phi-nomenal,local_modules/phi-nomenal-contracts/contracts/Location.sol,"Location(LocationType type_, string geolocation_)"
RealEstateAssetLedger/real_contract,contracts/MultiSigWallet.sol,"MultiSigWallet(address[] _owners, uint _required);addOwner(address owner);removeOwner(address owner);replaceOwner(address owner, address newOwner);changeRequirement(uint _required);submitTransaction(address destination, uint value, bytes data);confirmTransaction(uint transactionId);revokeConfirmation(uint transactionId);executeTransaction(uint transactionId);isConfirmed(uint transactionId);addTransaction(address destination, uint value, bytes data);getConfirmationCount(uint transactionId);getTransactionCount(bool pending, bool executed);getOwners();getConfirmations(uint transactionId);getTransactionIds(uint from, uint to, bool pending, bool executed)"
dharmeshkakadia/eris,libraries/erisdb/Godeps/_workspace/src/github.com/eris-ltd/lllc-server/tests/storage.sol,set(uint x);get()
dharmeshkakadia/eris,libraries/compilers/tests/storage.sol,set(uint x);get()
dharmeshkakadia/eris,libraries/decerver/epm-go/Godeps/_workspace/src/github.com/eris-ltd/lllc-server/tests/storage.sol,set(uint x);get()
dltdojo/courses,ethereum/solidity/T410_GovUkPay.sol,"insertAccount(bytes32 _tokenHash, string _tokenLink, uint _accountId, string _username, string _description );testInsert()"
jeanturgeon/dawn,contracts/letter_of_credit.sol,""
BeBlockTech/Anemoi,Master/consolidated_contract.sol,"Ownable();transferOwnership(address newOwner);safeAdd(uint256 x, uint256 y);safeSubtract(uint256 x, uint256 y);safeMult(uint256 x, uint256 y);balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);balanceOf(address _owner);approve(address _spender, uint _value);allowance(address _owner, address _spender);pause();unpause();IndorseToken();transfer(address _to, uint _value);approve(address _spender, uint _value);AnemoiSaleContract();CreateANM(address to, uint256 val);createTokens(address _beneficiary, uint256 _value);finalize()"
clawoflight/aursec,Ethereum/contracts/Owned.sol,Owned();transferOwnership(address newOwner);close()
orbro/eth-enablers,solidity-baby-steps-master/contracts/22_value_incrementer3.sol,"increment(int howmuch, int _customvalue);getCustomValue();getWhatHappened();getIteration();kill()"
ericvrp/SoliditySandbox,app/src/contracts/MyToken.sol,"receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);transfer(address _to, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);transferFrom(address _from, address _to, uint256 _value)"
mixbytes/storiqa_ico,contracts/STQPreICO2.sol,getWeiCollected();getMinimumFunds();getMaximumFunds();getStartTime();getEndTime();getPreICOBonus()
Storiqa/ico_smart_contract,contracts/STQPreICO2.sol,getWeiCollected();getMinimumFunds();getMaximumFunds();getStartTime();getEndTime();getPreICOBonus()
GovernX/governx-contracts,src/contracts/OwnedControllerFactory.sol,"createProxy(address _owner);createController(address _proxy, address _owner)"
mahendra-panchal/smart-contract-basics,MultiSigWallet.sol,"MultiSigWallet(address[] _owners, uint _required);addOwner(address owner);removeOwner(address owner);replaceOwner(address owner, address newOwner);changeRequirement(uint _required);submitTransaction(address destination, uint value, bytes data);confirmTransaction(uint transactionId);revokeConfirmation(uint transactionId);executeTransaction(uint transactionId);isConfirmed(uint transactionId);addTransaction(address destination, uint value, bytes data);getConfirmationCount(uint transactionId);getTransactionCount(bool pending, bool executed);getOwners();getConfirmations(uint transactionId);getTransactionIds(uint from, uint to, bool pending, bool executed)"
iurimatias/embark-framework,dapps/tests/contracts/contracts/ownable.sol,transferOwnership(address newOwner)
mahendra-panchal/smart-contract-basics,OrphanToken.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);FixedSupplyToken();totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _amount);approve(address _spender, uint256 _amount);allowance(address _owner, address _spender);checkGoalReached();safeWithdrawal()"
ethereum/frontier-release,solidity/crowdsale.sol,"transfer(address receiver, uint amount);checkGoalReached();safeWithdrawal()"
ethereum/ethereum-org,solidity/crowdsale.sol,"transfer(address receiver, uint amount);checkGoalReached();safeWithdrawal()"
TheRougeProject/RougeTokens,contracts/EIP20Interface.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
stanta/darfchain,ICO/contracts/UncappedCrowdsale.sol,"UncappedCrowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal);isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal);isCrowdsaleFull();assignTokens(address receiver, uint tokenAmount)"
SafecontractDev/protocol,contracts/bancor_contracts/BancorBuyer.sol,"token();getReserveBalance(IERC20Token _reserveToken);BancorBuyer(IBancorChanger _changer, IEtherToken _etherToken);buy(uint256 _minReturn)"
WishFinanceCom/WF-contracts,contracts/core/platform/WFAsset.sol,"init(WFAssetProxy _proxy);__transferWithReference(address _to, uint _value, string _reference, address _sender);_transferWithReference(address _to, uint _value, string _reference, address _sender);__transferFromWithReference(address _from, address _to, uint _value, string _reference, address _sender);_transferFromWithReference(address _from, address _to, uint _value, string _reference, address _sender);__approve(address _spender, uint _value, address _sender);_approve(address _spender, uint _value, address _sender)"
Dicoiner/irianna-solidity,contracts/token/MintableToken.sol,"mint(address _to, uint256 _amount);finishMinting()"
TruLtd/tru-reputation-token,contracts/TruPreSale.sol,finalise();completion()
Spreadway/core,eth/workflow.sol,executeByAction();dispenceDelta(delta)
KPull/eth-membership-tokens,contracts/EthApplicationRegistrar.sol,"EthApplicationRegistrar(ExpiringMembership _membershipContract, Application _applications, uint _price, uint _duration);changePrice(uint _price);changeDuration(uint _duration);purchaseMembership();withdrawApplication();processWithdrawalForAccount(address _account);withdraw();isMembershipAllowed(address _member);applicationApproved(address _applicant, address _approver);applicationRejected(address _applicant, address _approver)"
ganchix/ETH_16_Ethereum,UNIT-5/shopfrontProject/contracts/Shop.sol,"Shop(address administratorAddress);getProductCount();getProductIdAt(uint index);getProduct(uint id);addProduct(uint id, uint price, string name, uint stockBalance);deleteProduct(uint id);buyProduct(uint id);withdraw()"
brakmic/BlockchainStore,test/TestStore.sol,beforeAll();testInitialBalanceUsingDeployedContract();testRenameStore();testTransferOwnership();testStoreBalanceAfterCheckout();testRegisterProduct();testDeregisterProduct();testRegisterCustomer();testDeregisterCustomer();testReturnsProductInformation();testInsertProductIntoCart();testInsertMultipleProductsIntoCart();testRemoveProductFromCart();testCheckoutCart();testEmptyCart()
asinyagin/solidity,std/mortal.sol,kill()
adklempner/automte-exchange-contracts,contracts/DisputeInterface.sol,"setMarketplace(address _market);setDisputed(address seller, string uid);resolveDisputeSeller(string uid, address seller);resolveDisputeBuyer(string uid, address seller)"
prashantpawar/DisputeResolution,contracts/owned.sol,owned()
prashantpawar/truffle-octo-robot,contracts/owned.sol,owned()
chai2/Midterm,contracts/Crowdsale.sol,"Crowdsale(uint256 _startTime, uint256 _endTime, uint256 _rate, address _owner, uint maxTime);createTokenContract(address buyerAddress, uint256 totalSupply);buyTokens(address buyerAddress);forwardFunds();validPurchase();hasEnded()"
EthTrader/dappening,contracts/Interfaces.sol,"controller();changeController(address _newController);values(bytes20);set(bytes20, uint);remove(bytes20);usernameToUser(bytes20);ownerToUsername(address);userValueNames(uint);add(bytes20, address);remove(bytes20);addUserValueName(bytes20);getOwner(bytes20);getUserValue(bytes20, uint);setUserValue(bytes20, uint, uint);name();decimals();symbol();version();parentToken();parentSnapShotBlock();creationBlock();transfersEnabled();tokenFactory();transfer(address, uint256);transferFrom(address, address, uint256);balanceOf(address);approve(address, uint256);allowance(address, address);approveAndCall(address, uint256, bytes);totalSupply();balanceOfAt(address, uint);totalSupplyAt(uint);createCloneToken(string, uint8, string, uint, bool);generateTokens(address, uint);destroyTokens(address, uint);enableTransfers(bool);createCloneToken(address, uint, string, uint8, string, bool)"
misrab/gethools,testdata/imp1.sol,b()
etherisc/flightDelay,contracts/FlightDelayConstants.sol,""
Arctek/eth_splitter,contracts/UnsafeKillable.sol,""
Qipingsmile006/TianLianCoin,contracts/TianLianCoin.sol,"TianLianCoin(uint256 _totalSupply, uint256 _currentSupply);mint(address _owner, uint256 _value);burn(uint256 _value);startFunding(uint256 _fundingStartBlock, uint256 _fundingStopBlock);stopFunding();setTokenExchangeRate(uint256 _newRate);increaseSupply(uint256 _value);decreaseSupply(uint256 _value);migrate();setMigrateContract(address _newContactAddr);kill();__formatDecimals(uint256 _value);__toDecimals(uint256 _value)"
mixbytes/storiqa_ico,contracts/crowdsale/InvestmentAnalytics.sol,"AnalyticProxy();InvestmentAnalytics();createMorePaymentChannelsInternal(uint limit);iaInvestedBy(address investor);iaOnInvested(address /*investor*/, uint /*payment*/, bool /*usingPaymentChannel*/);paymentChannelsCount();readAnalyticsMap();readPaymentChannels()"
Storiqa/ico_smart_contract,contracts/crowdsale/InvestmentAnalytics.sol,"AnalyticProxy();InvestmentAnalytics();createMorePaymentChannelsInternal(uint limit);iaInvestedBy(address investor);iaOnInvested(address /*investor*/, uint /*payment*/, bool /*usingPaymentChannel*/);paymentChannelsCount();readAnalyticsMap();readPaymentChannels()"
iam-dev/ERC23,installed_contracts/zeppelin-solidity/contracts/lifecycle/TokenDestructible.sol,TokenDestructible();destroy(address[] tokens)
iudex/iudex,contracts/github.sol,"setOwner(address addr);Github();setLookup(address addr);__callback(bytes32 myid, string result, bytes proof);score(bytes32 id, string userId);verifyUrl(string userId, string proofLocation);verify(bytes32 id, string userId, string proofLocation)"
FiatCentralBank/fiatcoin,contracts/ownership/HasNoTokens.sol,"tokenFallback(address from_, uint256 value_, bytes data_);reclaimToken(address tokenAddr)"
livepeer/protocol,contracts/verification/IdentityVerifier.sol,IdentityVerifier(address _controller);getPrice()
zchn/ethereum-analyzer,examples/co2.unica.it/ethereum/SetProvider_0.4.2.sol,SetProvider();updateLibrary(address arg);getSet()
aragon/aragon-core,contracts/kernel/KernelConstants.sol,""
TrueFlip/trueflip-contracts,contracts/Owned.sol,setOwner(address _new);confirmOwnership()
SilentCicero/wafr,src/tests/solidityTests/beforeAfterEach/test.beforeEach.sol,setup();beforeEach();test_validShouldThrow()
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/test/helpers/PausableMock.sol,PausableMock();normalProcess();drasticMeasure()
pash7ka/zeppelin-solidity,test/helpers/PausableMock.sol,PausableMock();normalProcess();drasticMeasure()
Dicoiner/irianna-solidity,test/helpers/PausableMock.sol,PausableMock();normalProcess();drasticMeasure()
pz7/liquet,node_modules/zeppelin-solidity/test/helpers/PausableMock.sol,PausableMock();normalProcess();drasticMeasure()
dmx374/zeppelin-solidity,test/helpers/PausableMock.sol,PausableMock();normalProcess();drasticMeasure()
cashpokerpro-dev/cash-smartcontracts,test/helpers/PausableMock.sol,PausableMock();normalProcess();drasticMeasure()
citizencode/embark-framework,test/support/contracts/wallet.sol,Wallet(address c)
d11e9/embark-framework,test/support/contracts/wallet.sol,Wallet(address c)
jpentland/BitBadge,node_modules/grunt-embark/node_modules/embark-framework/test/support/contracts/wallet.sol,Wallet(address c)
jpentland/BitBadge,node_modules/embark-framework/test/support/contracts/wallet.sol,Wallet(address c)
jeffanthony/embark-framework,test/support/contracts/wallet.sol,Wallet(address c)
SafeMarket/embark-framework,test/support/contracts/wallet.sol,Wallet(address c)
msfeldstein/embark-framework,test/support/contracts/wallet.sol,Wallet(address c)
mesh-market/mesh-market.github.io,mesh-market/node_modules/embark/old_test/support/contracts/wallet.sol,Wallet(address c)
hitchcott/embark-framework,test/support/contracts/wallet.sol,Wallet(address c)
troyth/embark-dappsforbeginners-demo,embark_demo/node_modules/embark-framework/test/support/contracts/wallet.sol,Wallet(address c)
johnkozan/embark-framework,test/support/contracts/wallet.sol,Wallet(address c)
AronVanAmmers/embark-framework,test/support/contracts/wallet.sol,Wallet(address c)
RCasatta/embark-framework,test/support/contracts/wallet.sol,Wallet(address c)
VoR0220/embark-framework,test/support/contracts/wallet.sol,Wallet(address c)
aakilfernandes/embark-framework,test/support/contracts/wallet.sol,Wallet(address c)
ryepdx/embark-framework,test/support/contracts/wallet.sol,Wallet(address c)
tom-seddon/embark-framework,test/support/contracts/wallet.sol,Wallet(address c)
gerbrand/embark-framework,test/support/contracts/wallet.sol,Wallet(address c)
akhilss/embark-framework,old_test/support/contracts/wallet.sol,Wallet(address c)
wpypeiyao/Identity-On-Blockchain,node_modules/embark/old_test/support/contracts/wallet.sol,Wallet(address c)
xiaopow/embark-framework,test/support/contracts/wallet.sol,Wallet(address c)
jimy74/Chablex,Smart Contracts/MintableToken.sol,"mint(address _to, uint256 _amount)"
status-im/status-network-token,contracts/SGT.sol,SGT(address _tokenFactory);multiMint(uint256[] data)
maxweng/oracleit-examples,contracts/api/Utils.sol,"parseAddr(string _a);strCompare(string _a, string _b);indexOf(string _haystack, string _needle);strConcat(string _a, string _b, string _c, string _d, string _e);strConcat(string _a, string _b, string _c, string _d);strConcat(string _a, string _b, string _c);strConcat(string _a, string _b);parseInt(string _a);parseInt(string _a, uint _b)"
GovernX/governx-contracts,src/contracts/utils/tests/test.DefaultRules.sol,setup()
Yann-Liang/browser-solidity,contracts/src/voting.sol,Vote(uint8 _numProposals)
serapath-contribution/browser-solidity,contracts/src/voting.sol,Vote(uint8 _numProposals)
Majoolr/ethereum-libraries,CrowdsaleLib/IICOLib/truffle/contracts/InteractiveCrowdsaleLib.sol,"numDigits(uint256 _number);getCurrentBonus(InteractiveCrowdsaleStorage storage self);withdrawBid(InteractiveCrowdsaleStorage storage self);finalizeSale(InteractiveCrowdsaleStorage storage self);launchToken(InteractiveCrowdsaleStorage storage self);setCanceled(InteractiveCrowdsaleStorage storage self);retreiveFinalResult(InteractiveCrowdsaleStorage storage self);withdrawLeftoverWei(InteractiveCrowdsaleStorage storage self);withdrawOwnerEth(InteractiveCrowdsaleStorage storage self);crowdsaleActive(InteractiveCrowdsaleStorage storage self);crowdsaleEnded(InteractiveCrowdsaleStorage storage self);getPersonalCap(InteractiveCrowdsaleStorage storage self, address _bidder);getTokensSold(InteractiveCrowdsaleStorage storage self)"
Majoolr/ethereum-libraries,CrowdsaleLib/IICOLib/InteractiveCrowdsaleLib.sol,"numDigits(uint256 _number);getCurrentBonus(InteractiveCrowdsaleStorage storage self);withdrawBid(InteractiveCrowdsaleStorage storage self);finalizeSale(InteractiveCrowdsaleStorage storage self);launchToken(InteractiveCrowdsaleStorage storage self);setCanceled(InteractiveCrowdsaleStorage storage self);retreiveFinalResult(InteractiveCrowdsaleStorage storage self);withdrawLeftoverWei(InteractiveCrowdsaleStorage storage self);withdrawOwnerEth(InteractiveCrowdsaleStorage storage self);crowdsaleActive(InteractiveCrowdsaleStorage storage self);crowdsaleEnded(InteractiveCrowdsaleStorage storage self);getPersonalCap(InteractiveCrowdsaleStorage storage self, address _bidder);getTokensSold(InteractiveCrowdsaleStorage storage self)"
androlo/gulp-smake,test/testdata/src/Test.sol,""
credsign/credsign.github.io,contracts/indexes/AddressSeries.sol,AddressSeries(address contentContract);add(uint256 contentID);getSize(address publisher)
acebusters/safe-token-sale,contracts/controller/MarketEnabled.sol,"MarketEnabled(address _pullAddr, address _storageAddr, address _nutzAddr);ceiling();floor();moveCeiling(uint256 _newPurchasePrice);moveFloor(uint256 _newSalePrice);purchase(address _sender, uint256 _value, uint256 _price);sell(address _from, uint256 _price, uint256 _amountBabz);allocateEther(uint256 _amountWei, address _beneficiary)"
GuigsEvt/CrowdsaleEthereum,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
tokenai/tokenai-network-token,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
onewed/unitycoin,contracts/UnitySale.sol,"determineDiscountRate();ownerTopUp();ownerEnableRefunds();ownerTransferWei(address _beneficiary, uint256 _value);ownerRecoverTokens(address _beneficiary);handleRefundRequest(address _contributor)"
iam-dev/ERC23,installed_contracts/zeppelin-solidity/test/mocks/ForceEther.sol,ForceEther();destroyAndSend(address _recipient)
SilentCicero/wafr,src/tests/solidityTests/dirDepth/test.baseDepth.sol,test_oneValidAssertFalse()
aragon/aragon-core,contracts/test/mocks/APMRegistryFactoryMock.sol,"newAPM(bytes32, bytes32, address);newBadAPM(bytes32 tld, bytes32 label, address _root, bool withoutACL)"
bdbi/ERC20-simple-marketplace,contracts/ownership/Ownable.sol,Ownable();transferOwnership(address newOwner)
Neufund/Contracts,contracts/watchdog/WatchdogInterface.sol,"is_watched(address wallet);is_white_listed(address _to, uint _value, bytes _data)"
CMLTeam/ICOsurance,truffle/contracts/InsuranceToken.sol,"InsuranceToken(/*string icoSymbol*/);totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _amount);transferFrom(address _from, address _to, uint256 _amount);approve(address _spender, uint256 _amount);allowance(address _owner, address _spender);setEligibleForReimburse(bool val)"
zetherz/eth-match,test/helpers/LimitBalanceMock.sol,limitedDeposit()
makoto/blockparty,contracts/zeppelin/ownership/Ownable.sol,transferOwnership(address newOwner)
flysonic10/initial-celestial-offering,contracts/Authentication.sol,login();signup(bytes32 name);update(bytes32 name)
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/test/helpers/ForceEther.sol,ForceEther();destroyAndSend(address _recipient)
pash7ka/zeppelin-solidity,test/helpers/ForceEther.sol,ForceEther();destroyAndSend(address _recipient)
Dicoiner/irianna-solidity,test/helpers/ForceEther.sol,ForceEther();destroyAndSend(address _recipient)
pz7/liquet,node_modules/zeppelin-solidity/test/helpers/ForceEther.sol,ForceEther();destroyAndSend(address _recipient)
dmx374/zeppelin-solidity,test/helpers/ForceEther.sol,ForceEther();destroyAndSend(address _recipient)
cashpokerpro-dev/cash-smartcontracts,test/helpers/ForceEther.sol,ForceEther();destroyAndSend(address _recipient)
cinderblockchain/cindertoken,test/helpers/ForceEther.sol,ForceEther();destroyAndSend(address _recipient)
singhkay/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
ttmc/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
SudhakaraReddyEvuri/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
irwinwilliams/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
ChackDan/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
benofben/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
RuudBorst/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
sebastus/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
rarsan/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
ALM-Rangers/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
singhkays/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
rgardler/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
crypto-coder/Tokens,Token_Contracts/contracts/DecayingTokenEnvironment.sol,""
boisde/Greed_Island,party/contracts/protocol/integration/CurveStakingAdapter.sol,getSpenderAddress(address _stakingContract);_isValidStakingContract(address _stakingContract)
SilentCicero/wafr,src/tests/solidityTests/assertEq/test.assertEq.multi.sol,test_oneValidEqBytesUint()
cruskit/truffle-voting-example,test/TestBallot.sol,testCreateBallotContract()
commodityadnetwork/CDX,contracts/TokenData.sol,"TokenData(address token_, uint supply_, address owner_);setOwner(address owner_);setToken(address token_);setSupply(uint supply_);setBalances(address guy, uint balance);setApprovals(address src, address guy, uint wad)"
rmerom/PutYourMoneyWhereYourContractIs,contracts/BaseBountyContract.sol,"BaseBountyContract(address _bountyManagerAddress);challengeContract(address ownerToSet);createTargetContract(EnvironmentContractInterface env, address ownerToSet);createTestingEnvironment();assertInvalidState()"
redsquirrel/augur-core,src/legacy_reputation/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
redsquirrel/augur-core,src/libraries/token/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
uzyn/ERC20-TST,StandardToken.sol,"balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
commodityadnetwork/CDX,contracts/ContributionRegistration.sol,"ContributionRegistration(address roles);hasHash(bytes10 date, uint8 idx);getHash(bytes10 date, uint8 idx);getLastHash(bytes10 date);addContributionList(bytes10 date, string ipfsHash)"
raineorshine/solgraph,test/in/issue14.sol,someFunction()
fccoelho/Curso_Blockchain,contracts/Intro-to-Solidity/ballot.sol,giveRightToVote(address voter);delegate(address to);vote(uint proposal);winningProposal();winnerName()
nolash/go-ethereum-p2p-demo,solidity/upgrade/AbstractMain.sol,setStore(address _store);kill(address _beneficiary);transfer(address _owner);isOwned()
tokenai/tokenai-network-token,contracts/Pausable.sol,emergencyStop();release()
saulbein/web3j,core/src/test/resources/solidity/greeter/Greeter.sol,mortal();kill();greeter(string _greeting);greet()
trailofbits/greenhorn,grehack-2017/bank/Bank.sol,"Bank();initBank();win();getBalance(address u);addToBalance();transfer(address to, uint amount);transferAll(address to);withdrawBalance(uint amount);kill()"
machinomy/machinomy,packages/contracts/contracts/support/TestToken.sol,"transfer(address _to, uint256 _value)"
Vorxil/MarketStake,contracts/OrderBook.sol,"setMarket(bytes32 id, bytes32 market_id);setClient(bytes32 id, address client);setPrice(bytes32 id, uint value);setAmount(bytes32 id, uint value);setStake(bytes32 id, uint value);setActive(bytes32 id, bool value);setConfirmations(bytes32 id, bool value, bool client);setReadings(bytes32 id, uint value, bool client);setGivenReadings(bytes32 id, bool value, bool client);setBilateral(bytes32 id, bool value, bool client);fee(bytes32 id);isMetered();deleteHelper(bytes32 id);setTolerance(bytes32 id, uint value);deleteHelper(bytes32 id);isMetered()"
airalab/DAO-IPCI,contracts/InsuranceHolder.sol,"size();record(uint _index);InsuranceHolder(address _operator, address _token);setHoldDuration(uint _duration_sec);transfer(uint _value);withdraw(uint _index)"
TruLtd/tru-reputation-token,contracts/supporting/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
FiatCentralBank/fiatcoin,contracts/ownership/HasNoContracts.sol,reclaimContract(address contractAddr)
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/examples/GoodArrayUse.sol,payBonus();calculateBonus(address employee)
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/examples/GoodArrayUse.sol,payBonus();calculateBonus(address employee)
YusukeMukoyama/boiler-trade-dapp,call_option.sol,""
Majoolr/ethereum-libraries,CrowdsaleLib/EvenDistroCrowdsale/truffle/contracts/EvenDistroTestTenD.sol,sendPurchase();registerUser(address _registrant);registerUsers(address[] _registrants);unregisterUser(address _registrant);unregisterUsers(address[] _registrants);isRegistered(address _registrant);withdrawTokens();withdrawLeftoverWei();withdrawOwnerEth();crowdsaleActive();crowdsaleEnded();setTokens();getOwner();getTokensPerEth();getStartTime();getEndTime();getEthRaised();getContribution(address _buyer);getTokenPurchase(address _buyer);getLeftoverWei(address _buyer);getSaleData(uint256 timestamp);getTokensSold();getPercentBurn();getAddressTokenCap();getNumRegistered()
papyrusglobal/smartcontracts,contracts/PapyrusAirdrop.sol,"airdrop(address[] receivers, uint256[] amounts)"
QTBlockchain/SolidityNWeb3,SmartContracts/HelloTruffle/contracts/Calculator.sol,"Calculator();add(int x, int y)"
getbloqs/scenario01,contract/contracts/SportsBetFactory.sol,"createSportsBet(string _game, uint256 _endOfBetting);getBet(uint256 _index)"
mexskican/dapp,contracts/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
robmyers/artworld-ethereum,dapps/4x/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
robmyers/artworld-ethereum,dapps/colours-in-my-studio/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
robmyers/artworld-ethereum,dapps/hack-line-properties/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
robmyers/artworld-ethereum,dapps/drawing-transactions/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
robmyers/artworld-ethereum,dapps/voxel-sculpture/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Niky4000/UsefulUtils,projects/tutorials-master/tutorials-master/ethereum/src/main/resources/dev_truffle/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
b-mueller/mythril,tests/truffle_project/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
MzansiRe/iMali,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Spreadway/core,new_prophets/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Spreadway/core,Prophets/myproject/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
lionell/labs,infosec/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
getbloqs/scenario01,contract/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
m1nam1/UTCoin,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
QTBlockchain/SolidityNWeb3,SmartContracts/Math/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
QTBlockchain/SolidityNWeb3,SmartContracts/calculator/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
QTBlockchain/SolidityNWeb3,SmartContracts/March2018/AbstractionDemo/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
QTBlockchain/SolidityNWeb3,Projects/VehicleRTO/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
QTBlockchain/SolidityNWeb3,SmartContracts/myfirstsample/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
QTBlockchain/SolidityNWeb3,SmartContracts/truffletest/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
QTBlockchain/SolidityNWeb3,SmartContracts/truffleboxdemo/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
QTBlockchain/SolidityNWeb3,SmartContracts/debugtest/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
QTBlockchain/SolidityNWeb3,SmartContracts/March2018/CarRoute/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
QTBlockchain/SolidityNWeb3,Projects/Reference/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
QTBlockchain/SolidityNWeb3,SmartContracts/HelloTruffle/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
QTBlockchain/SolidityNWeb3,SmartContracts/March2018/FareContract/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
QTBlockchain/SolidityNWeb3,SmartContracts/March2018/StringDemo/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
lionell/university-labs,infosec/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
lionell/laboratories,infosec/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
willnwhite/Y,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
PeculiumPCL/Peculium,contracts/v0.5/Peculium.sol,"Peculium();buyTokenPreIco(address toAddress, uint256 _vamounts);buyTokenIco(address toAddress, uint256 _vamounts);buyTokenPostIco(address toAddress, uint256 _vamounts);airdropsTokens(address[] _vaddr, uint256[] _vamounts);approveAndCall(address _spender, uint256 _value, bytes _extraData);getBlockTimestamp();stopBatchAssign();balanceOf(address _owner);getOwnerInfos();killContract()"
makerdao/maker.py,tests/abi/GemMock.sol,"can(address src, address guy);push(bytes32 guy, uint wad);hope(address guy);nope(address guy)"
makerdao/keeper,tests/abi/GemMock.sol,"can(address src, address guy);push(bytes32 guy, uint wad);hope(address guy);nope(address guy)"
b-mueller/mythril,tests/testdata/input_contracts/rubixi.sol,function();dynamicPyramid();collectAllFees();collectFeesInEther(uint _amt);collectPercentOfFees(uint _pcent);changeOwner(address payable _owner);changeMultiplier(uint _mult);changeFeePercentage(uint _fee);currentMultiplier();currentFeePercentage();currentPyramidBalanceApproximately();nextPayoutWhenPyramidBalanceTotalsApproximately();feesSeperateFromBalanceApproximately();totalParticipants();numberOfParticipantsWaitingForPayout();participantDetails(uint orderInPyramid);init();addPayout(uint _fee)
b-mueller/mythril,solidity_examples/rubixi.sol,function();dynamicPyramid();collectAllFees();collectFeesInEther(uint _amt);collectPercentOfFees(uint _pcent);changeOwner(address payable _owner);changeMultiplier(uint _mult);changeFeePercentage(uint _fee);currentMultiplier();currentFeePercentage();currentPyramidBalanceApproximately();nextPayoutWhenPyramidBalanceTotalsApproximately();feesSeperateFromBalanceApproximately();totalParticipants();numberOfParticipantsWaitingForPayout();participantDetails(uint orderInPyramid);init();addPayout(uint _fee)
github/linguist,test/fixtures/Generic/sol/Solidity/legacy2.sol,""
trust-tech/go-trustmachine,contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
orbro/eth-enablers,solidity-baby-steps-master/contracts/05_greeter.sol,Greeter(string _greeting);greet();getBlockNumber();setGreeting(string _newgreeting);kill()
dltdojo/courses,ethereum/solidity/T121_Event.sol,testEvent()
BeBlockTech/Anemoi,BeBlock-Master/WePowerPresaleContractAudit-master/audit/test/WCT.sol,WCT(address _tokenFactory)
BeBlockTech/Anemoi,BeBlock-Master/WePowerPresaleContractAudit-master/contracts/WCT.sol,WCT(address _tokenFactory)
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app35-library_handling/consuming-contract.sol,"append(uint value);replace(uint _old, uint _new)"
eris-ltd/eris,tests/jobs_fixtures/app35-library_handling/consuming-contract.sol,"append(uint value);replace(uint _old, uint _new)"
monax/monax,tests/jobs_fixtures/app35-library_handling/consuming-contract.sol,"append(uint value);replace(uint _old, uint _new)"
eris-ltd/eris-cli,tests/jobs_fixtures/app35-library_handling/consuming-contract.sol,"append(uint value);replace(uint _old, uint _new)"
monax/cli,tests/jobs_fixtures/app35-library_handling/consuming-contract.sol,"append(uint value);replace(uint _old, uint _new)"
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app35-library_handling/consuming-contract.sol,"append(uint value);replace(uint _old, uint _new)"
bitcoinmeetups/dapp-bin,coin/coin.sol,"sendCoinFrom(address _from, uint _val, address _to);sendCoin(uint _val, address _to);coinBalance();coinBalanceOf(address _a);approve(address _a);isApproved(address _proxy);isApprovedFor(address _target, address _proxy);GavCoin();sendCoinFrom(address _from, uint _val, address _to);sendCoin(uint _val, address _to);coinBalance();coinBalanceOf(address _a);approve(address _a);isApproved(address _proxy);isApprovedFor(address _target, address _proxy);mine();isApprovedFor(address _target,address _proxy);isApproved(address _proxy);sendCoinFrom(address _from,uint256 _val,address _to);mine();coinBalanceOf(address _a);sendCoin(uint256 _val,address _to);coinBalance();approve(address _a)"
chriseth/dapp-bin,coin/coin.sol,"sendCoinFrom(address _from, uint _val, address _to);sendCoin(uint _val, address _to);coinBalance();coinBalanceOf(address _a);approve(address _a);isApproved(address _proxy);isApprovedFor(address _target, address _proxy);GavCoin();sendCoinFrom(address _from, uint _val, address _to);sendCoin(uint _val, address _to);coinBalance();coinBalanceOf(address _a);approve(address _a);isApproved(address _proxy);isApprovedFor(address _target, address _proxy);mine();isApprovedFor(address _target,address _proxy);isApproved(address _proxy);sendCoinFrom(address _from,uint256 _val,address _to);mine();coinBalanceOf(address _a);sendCoin(uint256 _val,address _to);coinBalance();approve(address _a)"
shahankhatch/dapp-bin,coin/coin.sol,"sendCoinFrom(address _from, uint _val, address _to);sendCoin(uint _val, address _to);coinBalance();coinBalanceOf(address _a);approve(address _a);isApproved(address _proxy);isApprovedFor(address _target, address _proxy);GavCoin();sendCoinFrom(address _from, uint _val, address _to);sendCoin(uint _val, address _to);coinBalance();coinBalanceOf(address _a);approve(address _a);isApproved(address _proxy);isApprovedFor(address _target, address _proxy);mine();isApprovedFor(address _target,address _proxy);isApproved(address _proxy);sendCoinFrom(address _from,uint256 _val,address _to);mine();coinBalanceOf(address _a);sendCoin(uint256 _val,address _to);coinBalance();approve(address _a)"
LianaHus/dapp-bin,coin/coin.sol,"sendCoinFrom(address _from, uint _val, address _to);sendCoin(uint _val, address _to);coinBalance();coinBalanceOf(address _a);approve(address _a);isApproved(address _proxy);isApprovedFor(address _target, address _proxy);GavCoin();sendCoinFrom(address _from, uint _val, address _to);sendCoin(uint _val, address _to);coinBalance();coinBalanceOf(address _a);approve(address _a);isApproved(address _proxy);isApprovedFor(address _target, address _proxy);mine();isApprovedFor(address _target,address _proxy);isApproved(address _proxy);sendCoinFrom(address _from,uint256 _val,address _to);mine();coinBalanceOf(address _a);sendCoin(uint256 _val,address _to);coinBalance();approve(address _a)"
RepublicMaster/dapp-bin,coin/coin.sol,"sendCoinFrom(address _from, uint _val, address _to);sendCoin(uint _val, address _to);coinBalance();coinBalanceOf(address _a);approve(address _a);isApproved(address _proxy);isApprovedFor(address _target, address _proxy);GavCoin();sendCoinFrom(address _from, uint _val, address _to);sendCoin(uint _val, address _to);coinBalance();coinBalanceOf(address _a);approve(address _a);isApproved(address _proxy);isApprovedFor(address _target, address _proxy);mine();isApprovedFor(address _target,address _proxy);isApproved(address _proxy);sendCoinFrom(address _from,uint256 _val,address _to);mine();coinBalanceOf(address _a);sendCoin(uint256 _val,address _to);coinBalance();approve(address _a)"
frozeman/ethereum-smart-contracts,coin/coin.sol,"sendCoinFrom(address _from, uint _val, address _to);sendCoin(uint _val, address _to);coinBalance();coinBalanceOf(address _a);approve(address _a);isApproved(address _proxy);isApprovedFor(address _target, address _proxy);GavCoin();sendCoinFrom(address _from, uint _val, address _to);sendCoin(uint _val, address _to);coinBalance();coinBalanceOf(address _a);approve(address _a);isApproved(address _proxy);isApprovedFor(address _target, address _proxy);mine();isApprovedFor(address _target,address _proxy);isApproved(address _proxy);sendCoinFrom(address _from,uint256 _val,address _to);mine();coinBalanceOf(address _a);sendCoin(uint256 _val,address _to);coinBalance();approve(address _a)"
vaporry/dapp-bin,coin/coin.sol,"sendCoinFrom(address _from, uint _val, address _to);sendCoin(uint _val, address _to);coinBalance();coinBalanceOf(address _a);approve(address _a);isApproved(address _proxy);isApprovedFor(address _target, address _proxy);GavCoin();sendCoinFrom(address _from, uint _val, address _to);sendCoin(uint _val, address _to);coinBalance();coinBalanceOf(address _a);approve(address _a);isApproved(address _proxy);isApprovedFor(address _target, address _proxy);mine();isApprovedFor(address _target,address _proxy);isApproved(address _proxy);sendCoinFrom(address _from,uint256 _val,address _to);mine();coinBalanceOf(address _a);sendCoin(uint256 _val,address _to);coinBalance();approve(address _a)"
vvelikodny/go-ethereum,contracts/chequebook/contract/mortal.sol,kill()
wuestholz/go-ethereum,contracts/chequebook/contract/mortal.sol,kill()
meta-network/go-meta,vendor/github.com/ethereum/go-ethereum/contracts/chequebook/contract/mortal.sol,kill()
getamis/go-ethereum,contracts/chequebook/contract/mortal.sol,kill()
fireblock/go-ethereum,contracts/chequebook/contract/mortal.sol,kill()
trinityfx/trinity,contracts/chequebook/contract/mortal.sol,kill()
ethersphere/go-ethereum,contracts/chequebook/contract/mortal.sol,kill()
ManyCoin/ManyCoin,contracts/chequebook/contract/mortal.sol,kill()
elementrem/solidity,std/mortal.sol,kill()
markya0616/go-ethereum,contracts/chequebook/contract/mortal.sol,kill()
RyuuGan/sol-merger,test/contracts/NamedImportOnlySelectedFailContract.sol,totalSupply()
chenlian2015/eosEthMarketSample,contracts/OLRandomContract.sol,"addOneRequest(address addr);requestOneUUID(address callBackAddress, uint versionCaller);callServer(address callFrom, uint versionCaller);sendOnlyHash(bytes32 hash);nowCanProvideHash();sendSeedAndHash(bytes32 seed, bytes32 hash);addBytes(bytes32 a, bytes b);getBytes(bytes32 a);getCurrentNeedsCount()"
pipermerriam/ethereum-alarm-clock,contracts/Scheduler/TimestampScheduler.sol,""
dubaicoin-dbix/go-dubaicoin,contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
zchn/ethereum-analyzer,examples/etherscan.io/CryptoKittiesCore.sol,"Ownable();transferOwnership(address newOwner);totalSupply();balanceOf(address _owner);ownerOf(uint256 _tokenId);approve(address _to, uint256 _tokenId);transfer(address _to, uint256 _tokenId);transferFrom(address _from, address _to, uint256 _tokenId);name();symbol();tokensOfOwner(address _owner);tokenMetadata(uint256 _tokenId, string _preferredTransport);supportsInterface(bytes4 _interfaceID);isGeneScience();mixGenes(uint256 genes1, uint256 genes2, uint256 targetBlock);setCEO(address _newCEO);setCFO(address _newCFO);setCOO(address _newCOO);pause();unpause();_transfer(address _from, address _to, uint256 _tokenId);setSecondsPerBlock(uint256 secs);getMetadata(uint256 _tokenId, string);supportsInterface(bytes4 _interfaceID);setMetadataAddress(address _contractAddress);_owns(address _claimant, uint256 _tokenId);_approvedFor(address _claimant, uint256 _tokenId);_approve(uint256 _tokenId, address _approved);balanceOf(address _owner);totalSupply();ownerOf(uint256 _tokenId);tokensOfOwner(address _owner);_memcpy(uint _dest, uint _src, uint _len);_toString(bytes32[4] _rawBytes, uint256 _stringLength);tokenMetadata(uint256 _tokenId, string _preferredTransport);setGeneScienceAddress(address _address);_isReadyToBreed(Kitty _kit);_isSiringPermitted(uint256 _sireId, uint256 _matronId);_triggerCooldown(Kitty storage _kitten);approveSiring(address _addr, uint256 _sireId);setAutoBirthFee(uint256 val);_isReadyToGiveBirth(Kitty _matron);isReadyToBreed(uint256 _kittyId);isPregnant(uint256 _kittyId);_canBreedWithViaAuction(uint256 _matronId, uint256 _sireId);canBreedWith(uint256 _matronId, uint256 _sireId);_breedWith(uint256 _matronId, uint256 _sireId);breedWithAuto(uint256 _matronId, uint256 _sireId);giveBirth(uint256 _matronId);_owns(address _claimant, uint256 _tokenId);_escrow(address _owner, uint256 _tokenId);_transfer(address _receiver, uint256 _tokenId);_addAuction(uint256 _tokenId, Auction _auction);_cancelAuction(uint256 _tokenId, address _seller);_bid(uint256 _tokenId, uint256 _bidAmount);_removeAuction(uint256 _tokenId);_isOnAuction(Auction storage _auction);_currentPrice(Auction storage _auction);_computeCut(uint256 _price);pause();unpause();ClockAuction(address _nftAddress, uint256 _cut);withdrawBalance();bid(uint256 _tokenId);cancelAuction(uint256 _tokenId);cancelAuctionWhenPaused(uint256 _tokenId);getAuction(uint256 _tokenId);getCurrentPrice(uint256 _tokenId);SiringClockAuction(address _nftAddr, uint256 _cut);bid(uint256 _tokenId);SaleClockAuction(address _nftAddr, uint256 _cut);bid(uint256 _tokenId);setSaleAuctionAddress(address _address);setSiringAuctionAddress(address _address);withdrawAuctionBalances();createPromoKitty(uint256 _genes, address _owner);KittyCore();setNewAddress(address _v2Address);getKitty(uint256 _id);unpause();withdrawBalance()"
vishakh/blockinstruments,contracts/std.sol,owned();changeOwner(address newOwner);claim();kill();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr);kill();nameRegAddress();named(bytes32 name);named(bytes32 name)
ethermarket/democracy,src/base/ownedApiEnabled.sol,apiAuthorized();setApiAddress(address newApi);remove()
axic/ethereumjs-codesim,examples/example.sol,""
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol,""
montyly/manticore,tests/ethereum/contracts/1102.sol,run(uint256 input)
trailofbits/manticore,tests/ethereum/contracts/1102.sol,run(uint256 input)
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/token/ERC20/BasicToken.sol,"totalSupply();transfer(address _to, uint256 _value);balanceOf(address _owner)"
aragon/aragon-core,contracts/lib/math/SafeMath64.sol,"mul(uint64 _a, uint64 _b);div(uint64 _a, uint64 _b);sub(uint64 _a, uint64 _b);add(uint64 _a, uint64 _b);mod(uint64 a, uint64 b)"
brakmic/BlockchainStore,contracts/Store.sol,"Store();deregisterProduct(uint256 id);registerCustomer(address _address, bytes32 _name, uint256 _balance);deregisterCustomer(address _address);insertProductIntoCart(uint256 id);removeProductFromCart(uint256 prod_pos_in_mapping);checkoutCart();emptyCart();renameStoreTo(bytes32 new_store_name);getProduct(uint256 id);getCart();getBalance();getStoreBalance();checkProductValidity(Product product)"
ChicoBitcoinJoe/MeDao,contracts/MeDao.sol,""
coinjoker/cjtoken,SmartContracts/cjtoken.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);Owned();transferOwnership(address newOwner);changeCJTeamWallet(address newWallet);_transfer(address _from, address _to, uint256 _value);transfer(address _to, uint256 _value);balanceOf(address _owner);totalSupply();endOfSaleFullWithdrawal();partialWithdrawal(uint256 toWithdraw)"
Lamden/flora,example-contract/crowdsale/CustomCrowdsale.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);Ownable();transferOwnership(address _newOwner);acceptOwnership();balanceOf(address who);transfer(address to, uint256 value);allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);transfer(address _to, uint256 _value);balanceOf(address _owner);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);mint(address _to, uint256 _amount);finishMinting();transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);Crowdsale(uint256 _startTime, uint256 _endTime, uint256 _rate, address _wallet);createTokenContract();buyTokens(address beneficiary);forwardFunds();validPurchase();hasEnded();CappedCrowdsale(uint256 _cap);validPurchase();hasEnded();CustomCrowdsale(uint256 _startTime, uint256 _endTime, uint256 _rate, uint256 _cap, address _wallet, address _tokenAddress);createTokenContract()"
montyly/manticore,tests/ethereum/contracts/799.sol,X(address x);C(address x)
trailofbits/manticore,tests/ethereum/contracts/799.sol,X(address x);C(address x)
BBOLDT86/SquaresGame,Contracts/Token.sol,"owned();transferOwnership(address newOwner);receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);transfer(address _to, uint256 _value);approve(address _spender, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);transferFrom(address _from, address _to, uint256 _value);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);mintToken(address target, uint256 mintedAmount);freezeAccount(address target, bool freeze);setPrices(uint256 newSellPrice, uint256 newBuyPrice);buy();sell(uint256 amount)"
livepeer/protocol,contracts/test/RevertProxy.sol,execute(address _target)
fkbenjamin/pc-firebase-starter,contracts/Embassy.sol,"Embassy(address _usedStorage, address _nationControl);setStorage(address _store);setNation(address _nation);addEmbassyOfCountry(address _embassy, uint _country);deleteVisaOffering(uint _country, uint _index);verifyPass(address _owner)"
djh82uk/Winik.io,Crowdsale Contract/SafeMath.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b)"
akhilss/embark-framework,test/contracts/token_storage.sol,"TokenStorage( uint initial_balance, address _addr);totalSupply();balanceOf( address who );transfer( address to, uint value);transferFrom( address from, address to, uint value);approve(address spender, uint value);allowance(address owner, address spender);safeToAdd(uint a, uint b)"
wpypeiyao/Identity-On-Blockchain,node_modules/embark/test/contracts/token_storage.sol,"TokenStorage( uint initial_balance, address _addr);totalSupply();balanceOf( address who );transfer( address to, uint value);transferFrom( address from, address to, uint value);approve(address spender, uint value);allowance(address owner, address spender);safeToAdd(uint a, uint b)"
status-im/status-go,contracts/ens/contract/FIFSRegistrar.sol,"FIFSRegistrar(AbstractENS ensAddr, bytes32 node);register(bytes32 subnode, address owner)"
vvelikodny/go-ethereum,contracts/ens/contract/FIFSRegistrar.sol,"FIFSRegistrar(AbstractENS ensAddr, bytes32 node);register(bytes32 subnode, address owner)"
wuestholz/go-ethereum,contracts/ens/contract/FIFSRegistrar.sol,"FIFSRegistrar(AbstractENS ensAddr, bytes32 node);register(bytes32 subnode, address owner)"
meta-network/go-meta,vendor/github.com/ethereum/go-ethereum/contracts/ens/contract/FIFSRegistrar.sol,"FIFSRegistrar(AbstractENS ensAddr, bytes32 node);register(bytes32 subnode, address owner)"
getamis/go-ethereum,contracts/ens/contract/FIFSRegistrar.sol,"FIFSRegistrar(AbstractENS ensAddr, bytes32 node);register(bytes32 subnode, address owner)"
fireblock/go-ethereum,contracts/ens/contract/FIFSRegistrar.sol,"FIFSRegistrar(AbstractENS ensAddr, bytes32 node);register(bytes32 subnode, address owner)"
trinityfx/trinity,contracts/ens/contract/FIFSRegistrar.sol,"FIFSRegistrar(AbstractENS ensAddr, bytes32 node);register(bytes32 subnode, address owner)"
ManyCoin/ManyCoin,contracts/ens/contract/FIFSRegistrar.sol,"FIFSRegistrar(AbstractENS ensAddr, bytes32 node);register(bytes32 subnode, address owner)"
markya0616/go-ethereum,contracts/ens/contract/FIFSRegistrar.sol,"FIFSRegistrar(AbstractENS ensAddr, bytes32 node);register(bytes32 subnode, address owner)"
livepeer/protocol,test/unit/TestEarningsPool2.sol,beforeEach();test_claimShare_notTranscoder();test_claimShare_isTranscoder();test_claimShares_emptyFeePool_notTranscoder();test_claimShares_emptyFeePool_isTranscoder();test_claimShares_emptyRewardPool_notTranscoder();test_claimShares_emptyRewardPool_isTranscoder();test_claimShare_emptyFeeAndRewardPools();test_feePoolShare_noClaimableStake();test_feePoolShare_notTranscoder();test_feePoolShare_isTranscoder();test_rewardPoolShare_noClaimableStake();test_rewardPoolShare_notTranscoder();test_rewardPoolShare_isTranscoder();test_hasClaimableShares_nonZeroClaimableStake();test_hasClaimableShares_zeroClaimableStake()
digitalthailand/course-blockchain-4-dev,examples/EtherVote.sol,"vote(bytes32 proposalHash, bool pro)"
LykkeCity/EthereumApiDotNetCore,src/ContractBuilder/contracts/erc20DepositContract.sol,"transferAllTokens(address _tokenAddress, address _to);tokenFallback(address _from, uint _value, bytes _data)"
charles-cooper/raiden,raiden/tests/smart_contracts/LockDecoderTester.sol,testDecodeTransfer(bytes locked_encoded)
tomashaber/raiden,raiden/tests/smart_contracts/LockDecoderTester.sol,testDecodeTransfer(bytes locked_encoded)
cryptape/teth,examples/contracts/Token.sol,"Token();issue(address account, uint amount);transfer(address to, uint amount);getBalance(address account)"
flash286/CitizenDataLicences,blockchain/contracts/manager_contract.sol,"ManagerContract();createSensor(uint sensor_id, uint fee, uint dt_start);createData(uint sensor_id, uint timestamp);holdTransaction(uint sensor_id, uint start_time, uint end_time)"
Majoolr/ethereum-libraries,WalletLib/truffle/contracts/WalletAdminLib.sol,"checkChangeOwnerArgs(uint256 _from, uint256 _to);checkNewOwnerArgs(uint256 _index, uint256 _length, uint256 _max);checkRemoveOwnerArgs(uint256 _index, uint256 _length, uint256 _min);checkRequiredChange(uint256 _newRequired, uint256 _length);calcConfirmsNeeded(uint256 _required, uint256 _count)"
melonproject/protocol,contracts/fund/policies/risk-management/PriceTolerance.sol,"addFundSettings(bytes calldata _encodedSettings);identifier();validateRule(bytes calldata _encodedArgs);__calcCumulativeAssetsValue(address[] memory _assets, uint256[] memory _amounts)"
SilentCicero/wafr,src/tests/solidityTests/dirDepth/anotherFolder/test.secondDepth.2.sol,test_oneValidAssertFalse()
pipermerriam/ethereum-alarm-clock,contracts/CloneFactory.sol,createClone(address target)
manishbisht/Competitive-Programming,Hiring Challenges/Bosch Blockchain Developer Hiring/Round 2/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
michinbear/solidity,test/compilationTests/gnosis/Oracles/UltimateOracle.sol,"setForwardedOutcome();challengeOutcome(int _outcome);voteForOutcome(int _outcome, uint amount);withdraw();isChallengePeriodOver();isFrontRunnerPeriodOver();isChallenged();isOutcomeSet();getOutcome()"
elementrem/solidity,test/compilationTests/gnosis/Oracles/UltimateOracle.sol,"setForwardedOutcome();challengeOutcome(int _outcome);voteForOutcome(int _outcome, uint amount);withdraw();isChallengePeriodOver();isFrontRunnerPeriodOver();isChallenged();isOutcomeSet();getOutcome()"
marclijour/presentations,2018-10-13 Intro to ConsenSys at UofTBlockfest/contracts/higherbidder.sol,bid()
marclijour/presentations,2018-12-12 TECinToronto Blockchain Hands-on/contracts/higherbidder.sol,bid()
marclijour/presentations,2019-01-28 Blockchain for Entrepreneurs at Lozard Institute/contracts/higherbidder.sol,bid()
marclijour/presentations,GBC - Blockchain Developer Certificate/contracts/higherbidder.sol,bid()
marclijour/presentations,2018-04-21 Intro to Ethereum with ConsenSys tools/contracts/higherbidder.sol,bid()
marclijour/presentations,2019 TechConnex - Blockchain Peer Group/contracts/higherbidder.sol,bid()
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.4.24/notReentrant.sol,withdraw()
soad003/browser-solidity,test/staticanalysis/test-contracts/notReentrant.sol,withdraw()
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/inheritance/contracts/SameFile.sol,""
ethbets/ebets,contracts/ERC20.sol,"balanceOf(address _owner);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);approve(address _spender, uint _value)"
stanta/darfchain,ICO/contracts/PreICOProxyBuyer.sol,"PreICOProxyBuyer(address _owner, uint _freezeEndsAt, uint _weiMinimumLimit, uint _weiCap);getToken();invest();buyForEverybody();getClaimAmount(address investor);getClaimLeft(address investor);claimAll();claim(uint amount);refund();setCrowdsale(Crowdsale _crowdsale);getState()"
redsquirrel/augur-core,src/legacy_reputation/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
Vourhey/learning-center,sol/Lesson_5.sol,"execute(string _token_name, Core _dao)"
SilentCicero/wafr,src/tests/solidityTests/gasUsage/examples/DelegatedVotingRules.sol,"OpenRegistryRules(address _registry);delegateVote(address _board, address _delegate, uint _proposalID);hasWon(uint _proposalID);canVote(address _sender, uint _proposalID);canPropose(address _sender);votingWeightOf(address _sender, uint _proposalID)"
kowala-tech/kUSD,client/contracts/truffle/contracts/kns/PublicResolver.sol,"initialize(KNS knsAddr);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash);setMultihash(bytes32 node, bytes hash);setName(bytes32 node, string name);setABI(bytes32 node, uint256 contentType, bytes data);setPubkey(bytes32 node, bytes32 x, bytes32 y);setText(bytes32 node, string key, string value);text(bytes32 node, string key);pubkey(bytes32 node);ABI(bytes32 node, uint256 contentTypes);name(bytes32 node);content(bytes32 node);multihash(bytes32 node);addr(bytes32 node);supportsInterface(bytes4 interfaceID)"
silasdavis/eris-db,tests/jobs_fixtures/app08-initialization_constructors_in_contracts/contracts/storage.sol,get()
silasdavis/burrow,tests/jobs_fixtures/app08-initialization_constructors_in_contracts/contracts/storage.sol,get()
eris-ltd/eris-db,tests/jobs_fixtures/app08-initialization_constructors_in_contracts/contracts/storage.sol,get()
TickethProject/ticketh-core,contracts/Ticketh.sol,Ticketh()
chenlian2015/eosEthMarketSample,contracts/OLMarket.sol,"OCMarket();getFee(string servarName);callServer(string servarName, uint versionCaller);preCheckAndPay(string servarName, uint versionCaller, address user)"
Neufund/Contracts,contracts/lib/IERC20Basic.sol,"balanceOf(address who);transfer(address to, uint value)"
livepeer/protocol,contracts/test/ManagerProxyTargetMockV1.sol,"setAddress(address _value);setString(string _value);setBytes(bytes _value);setTuple(uint256 _value1, uint256 _value2, bytes32 _value3);getTuple()"
WeTrustPlatform/rosca-contracts,contracts/deps/ERC20TokenInterface.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
akhilss/embark-framework,demo/app/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
wpypeiyao/Identity-On-Blockchain,node_modules/embark/demo/app/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
citizencode/embark-framework,test/support/contracts/wallets.sol,Wallet(address w)
d11e9/embark-framework,test/support/contracts/wallets.sol,Wallet(address w)
jpentland/BitBadge,node_modules/embark-framework/test/support/contracts/wallets.sol,Wallet(address w)
jpentland/BitBadge,node_modules/grunt-embark/node_modules/embark-framework/test/support/contracts/wallets.sol,Wallet(address w)
jeffanthony/embark-framework,test/support/contracts/wallets.sol,Wallet(address w)
SafeMarket/embark-framework,test/support/contracts/wallets.sol,Wallet(address w)
msfeldstein/embark-framework,test/support/contracts/wallets.sol,Wallet(address w)
mesh-market/mesh-market.github.io,mesh-market/node_modules/embark/old_test/support/contracts/wallets.sol,Wallet(address w)
hitchcott/embark-framework,test/support/contracts/wallets.sol,Wallet(address w)
troyth/embark-dappsforbeginners-demo,embark_demo/node_modules/embark-framework/test/support/contracts/wallets.sol,Wallet(address w)
johnkozan/embark-framework,test/support/contracts/wallets.sol,Wallet(address w)
AronVanAmmers/embark-framework,test/support/contracts/wallets.sol,Wallet(address w)
RCasatta/embark-framework,test/support/contracts/wallets.sol,Wallet(address w)
VoR0220/embark-framework,test/support/contracts/wallets.sol,Wallet(address w)
aakilfernandes/embark-framework,test/support/contracts/wallets.sol,Wallet(address w)
ryepdx/embark-framework,test/support/contracts/wallets.sol,Wallet(address w)
tom-seddon/embark-framework,test/support/contracts/wallets.sol,Wallet(address w)
gerbrand/embark-framework,test/support/contracts/wallets.sol,Wallet(address w)
akhilss/embark-framework,old_test/support/contracts/wallets.sol,Wallet(address w)
wpypeiyao/Identity-On-Blockchain,node_modules/embark/old_test/support/contracts/wallets.sol,Wallet(address w)
xiaopow/embark-framework,test/support/contracts/wallets.sol,Wallet(address w)
pash7ka/zeppelin-solidity,test/helpers/DetailedERC20Mock.sol,""
ProBonoPublicoWorld/ico-contracts,contracts/MultiBonusCrowdsale.sol,MultiBonusCrowdsale();getBonusRate();getTotalBonus();buyTokens(address beneficiary)
isvirin/prover,Proof.sol,"owned();changeOwner(address _owner);startTokensSale(address _crowdsaleOwner, uint _etherPrice);timeToFinishTokensSale();finishTokensSale(uint _investorsToProcess);withdrawBack();Token();transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);migrateFrom(address _from, uint256 _value);TokenMigration();migrate(uint256 _value);setMigrationAgent(address _agent);ProofTeamVote();startVoting(uint _weiReqFund);votingInfo();vote(bool _inSupport);finishVoting(uint _votesToProcess);ProofPublicVote();deployProject(uint _proofReqFund, string _urlInfo);projectInfo(address _projectOwner);vote(address _projectOwner, bool _inSupport);finishVoting(address _projectOwner, uint _votesToProcess);Proof();setPrice(uint _priceInTokens);swypeCode();setHash(uint16 _swype, bytes32 _hash)"
ethereum/cpp-ethereum,test/unittests/performance/fun.sol,nada(uint u);nada(uint u);useless(uint u);test();fun()
winsvega/cpp-ethereum,test/unittests/performance/fun.sol,nada(uint u);nada(uint u);useless(uint u);test();fun()
silasdavis/eris-db,tests/jobs_fixtures/app31-memory_and_storage_arrays_dynamic_forms_static_types/array.sol,intCallWithArray(uint8[4] memory someUintz);bytesCallWithArray(bytes32[4] memory someBytez);boolCallWithArray(bool[4] memory someBoolz);addressCallWithArray(address[3] memory someAddressz);intMemoryArray();bytesMemoryArray();boolMemoryArray()
silasdavis/burrow,tests/jobs_fixtures/app31-memory_and_storage_arrays_dynamic_forms_static_types/array.sol,intCallWithArray(uint8[4] memory someUintz);bytesCallWithArray(bytes32[4] memory someBytez);boolCallWithArray(bool[4] memory someBoolz);addressCallWithArray(address[3] memory someAddressz);intMemoryArray();bytesMemoryArray();boolMemoryArray()
eris-ltd/eris-db,tests/jobs_fixtures/app31-memory_and_storage_arrays_dynamic_forms_static_types/array.sol,intCallWithArray(uint8[4] memory someUintz);bytesCallWithArray(bytes32[4] memory someBytez);boolCallWithArray(bool[4] memory someBoolz);addressCallWithArray(address[3] memory someAddressz);intMemoryArray();bytesMemoryArray();boolMemoryArray()
mesh-market/mesh-market.github.io,mesh-market/node_modules/embark/old_test/support/contracts/token.sol,"token(uint supply);sendCoin(address receiver, uint amount)"
akhilss/embark-framework,old_test/support/contracts/token.sol,"token(uint supply);sendCoin(address receiver, uint amount)"
wpypeiyao/Identity-On-Blockchain,node_modules/embark/old_test/support/contracts/token.sol,"token(uint supply);sendCoin(address receiver, uint amount)"
redsquirrel/augur-core,src/libraries/ReentrancyGuard.sol,""
aragon/aragon-core,contracts/factory/APMRegistryFactory.sol,"newAPM(bytes32 _tld, bytes32 _label, address _root);b(string memory x);configureAPMPermissions(ACL _acl, APMRegistry _apm, address _root)"
bkrem/educhain,chain/contracts/UserManager.sol,"registerActionEvent(bytes32 actionType);isUsernameTaken(bytes32 _username);getUserListSize();getUserAddress(bytes32 username);getUserTaskAtIndex(address userAddr, uint idx)"
androlo/doc-auth,contracts/src/SingleSignerAuthority.sol,sign(bytes32 hash);signed(bytes32 hash);isSigner(address addr);authType();sign(bytes32 hash);signed(bytes32 hash);signDate(bytes32 hash);isSigner(address addr);signer();authType()
creditbit-dev/credit2.0,contracts/CreditBIT.sol,"CreditBIT();balanceOf(address _owner);lockedBalanceOf(address _owner);getAccountData(address _owner);lockBalance(uint _amount, uint _lockForBlocks);mintMigrationTokens(address _reciever, uint _amount);claimBondReward();claimGameReward(address _champion, uint _lockedTokenAmount, uint _lockTime);mintBonusTokensForGames(uint _amount);mint(uint _newCreditsIssued, address _sender);transfer(address _to, uint256 _value);approve(address _spender, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);transferFrom(address _from, address _to, uint256 _value);setCreditBond(address _bondAddress);getCreditBondAddress();setCreditDaoAddress(address _daoAddress);setCreditGameAddress(address _gameAddress);setCreditMcAddress(address _mcAddress);lockToken()"
shahankhatch/weifund-contracts,src/contracts/StandardCampaignFactory.sol,""
alice-si/contracts,contracts/alice/MockValidation.sol,"validate(string outcome, uint value);getValidationsCount();getValidatorByIndex(uint index);getOutcomeByIndex(uint index);getValueByIndex(uint index)"
Cryptonomica/cryptonomica,src/main/webapp/eth-vote/contracts/VotingForERC20.sol,balanceOf(address _owner);totalSupply()
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721Basic.sol,"balanceOf(address _owner);ownerOf(uint256 _tokenId);exists(uint256 _tokenId);approve(address _to, uint256 _tokenId);getApproved(uint256 _tokenId);setApprovalForAll(address _operator, bool _approved);isApprovedForAll(address _owner, address _operator);transferFrom(address _from, address _to, uint256 _tokenId);safeTransferFrom(address _from, address _to, uint256 _tokenId)"
validitylabs/LuckyDAO,app/private/contracts/GameManager.sol,"createGame(uint _endTimeStamp, address _redeemer)"
CORIONplatform/solidity,publisher.sol,"transferEvent(address from, address to, uint256 value);publisher(address moduleHandlerAddr);closeAnnouncement(uint256 id);oppositeAnnouncement(uint256 id);invalidateAnnouncement(uint256 id);Announcements(uint256 id);checkOpposited(uint256 weight, bool oppositable)"
melonproject/protocol,contracts/mock/utils/RateProviderBase.sol,"__getDecimalsForAsset(address _asset);__getRate(address _baseAsset, address _quoteAsset)"
michinbear/solidity,test/compilationTests/gnosis/Markets/Market.sol,"fund(uint _funding);close();withdrawFees();buy(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint maxCost);sell(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint minProfit);shortSell(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint minProfit);calcMarketFee(uint outcomeTokenCost)"
elementrem/solidity,test/compilationTests/gnosis/Markets/Market.sol,"fund(uint _funding);close();withdrawFees();buy(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint maxCost);sell(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint minProfit);shortSell(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint minProfit);calcMarketFee(uint outcomeTokenCost)"
willdavidc/prometh,truffle/contracts/prometh.sol,"lookup();execute(uint128 expectedGas, uint128 expectedPayout);loadFunds()"
boisde/Greed_Island,party/contracts/protocol/integration/AaveWrapAdapter.sol,"getSpenderAddress(address /* _underlyingToken */, address /* _wrappedToken */);validTokenPair(address _underlyingToken, address _wrappedToken)"
shahankhatch/dapp-bin,getting started/greeter.sol,greeter();greet(bytes32 input);kill()
LianaHus/dapp-bin,getting started/greeter.sol,greeter();greet(bytes32 input);kill()
RepublicMaster/dapp-bin,getting started/greeter.sol,greeter();greet(bytes32 input);kill()
frozeman/ethereum-smart-contracts,getting started/greeter.sol,greeter();greet(bytes32 input);kill()
ethereum/dapp-bin,getting started/greeter.sol,greeter();greet(bytes32 input);kill()
vaporry/dapp-bin,getting started/greeter.sol,greeter();greet(bytes32 input);kill()
Arctek/eth_splitter,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
ownage-ltd/ether-router,contracts/Migrations.sol,Migrations();setCompleted(uint completed)
drgorb/insurechain,contracts/Retailers.sol,"Owned();kill();requestRegistration(string companyName, address insurance);getRequestStatus(address retailer, address insurance);setRequestStatus(address retailer, Status status);getRetailer(uint index)"
drgorb/hackathon-2016-11,contracts/Retailers.sol,"Owned();kill();requestRegistration(string companyName, address insurance);getRequestStatus(address retailer, address insurance);setRequestStatus(address retailer, Status status);getRetailer(uint index)"
triage/KPCSEthereum,contracts/Certificate.sol,"kill();getNumberOfParticipantsOrigins();getParticipantOriginWithIndex(uint index);getParticipantSource();getParticipantDestination();getParticipants();addParsel(uint carats, uint value, address[] origins);completedAddingParsels();getImportingParty();getExportingParty();getSignatures();canSign();sign();markAsReceived();hasRequiredSignaturesToValidate();expireIfNecessary();isExpired();isComplete();isValid()"
BlockTube/blocktube-client.0.3,app/contracts/blocktubeTag.sol,blocktubeTag(string _name)
ConsenSys/dapp-store-contracts,contracts/VersionModel.sol,"VersionModel();create(uint[101][] attributes);validate(address sender, uint id, uint[101][] attributes);add_rating(uint id, uint rating)"
PeculiumPCL/Peculium,contracts/v1.2/Peculium.sol,"Peculium();defrostToken();transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);freezeAccount(address target, bool canSell);approveAndCall(address _spender, uint256 _value, bytes _extraData);getBlockTimestamp();getOwnerInfos()"
PeculiumPCL/Peculium,contracts/v1.1/Peculium.sol,"Peculium();defrostToken();transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);freezeAccount(address target, bool canSell);approveAndCall(address _spender, uint256 _value, bytes _extraData);getBlockTimestamp();getOwnerInfos()"
PeculiumPCL/Peculium,contracts/v1.0/Peculium.sol,"Peculium();defrostToken();transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);freezeAccount(address target, bool canSell);approveAndCall(address _spender, uint256 _value, bytes _extraData);getBlockTimestamp();getOwnerInfos()"
qjflores/singularity,contracts/User.sol,User(string _name);registerToProvider(address _providerAddress);setDebt(uint256 _debt);clearDebt();unsubcribe(address _providerAddress)
web3j/web3j-maven-plugin,src/test/resources/Greeter-invalid-version.sol,""
KuekenPartei/party-contracts,src/main/resources/mix/members.sol,"isMember(address _memberAdress);getMemberAddress(uint id);getMemberCount();isMember(address _memberAdress);getMemberAddress(uint id);getMemberCount();addMember(string name,address _memberAddress);unregisterMember(uint id);isActiveMember(address _memberAdress);changeMemberAddress(uint id,address _newMemberAddress);getMemberData(address _address);publishMemberEvent(address mAddress,uint eventType);isMember(address _address)"
TrueFlip/trueflip-contracts,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Dsummers91/Dist-Trade-2017,installed_contracts/tokens/contracts/SampleRecipientSuccess.sol,"receiveApproval(address _from, uint256 _value, address _tokenContract, bytes _extraData)"
charles-cooper/raiden,raiden/smart_contracts/EndpointRegistry.sol,"registerEndpoint(string socket);findEndpointByAddress(address eth_address);findAddressByEndpoint(string socket);equals(string a, string b)"
tomaaron/raiden,raiden/smart_contracts/EndpointRegistry.sol,"registerEndpoint(string socket);findEndpointByAddress(address eth_address);findAddressByEndpoint(string socket);equals(string a, string b)"
duaraghav8/Solium,test/lib/rules/indentation/accept/multiline-call-expression.sol,"Counter();inc();incBy(uint n);incByTwo();pack(uint32 param1, uint16 param2, uint32 param3)"
readevalprint/aragon-core,contracts/kernel/KernelStorage.sol,""
pipermerriam/ethereum-alarm-clock,contracts/Interface/RequestFactoryInterface.sol,"createRequest(address[3] addressArgs, uint[12] uintArgs, bytes callData);createValidatedRequest(address[3] addressArgs, uint[12] uintArgs, bytes callData);validateRequestParams(address[3] addressArgs, uint[12] uintArgs, uint endowment);isKnownRequest(address _address)"
doppio/EtherWheel,contracts/ether-wheel.sol,"EtherWheel(uint _goalInFinney, uint _incrementInFinney, uint8 _recentWinsCount);numContributors();numWinners();addToContribution();addValueToContribution(uint value);removeFromContribution(uint amount);setContribution(uint amount);selectWinner();recordWin(address winner);reset();changeHost(address newHost);destroy()"
shahankhatch/weifund-contracts,src/contracts/CampaignRegistry.sol,"register(address _campaign, address _interface);idOf(address _campaign);abiOf(uint256 _campaignID);registeredAt(uint256 _campaignID);addressOf(uint256 _campaignID);numCampaigns();register(address _campaign, address _interface);idOf(address _campaign);abiOf(uint256 _campaignID);registeredAt(uint256 _campaignID);addressOf(uint256 _campaignID);numCampaigns()"
melonproject/protocol,contracts/fund/fees/utils/FeeBase.sol,payoutSharesOutstanding();__emptySharesDueValues();__isFeeManager(address _who)
mothershipcx/contracts,contracts/SIT.sol,SIT(address _tokenFactory)
DivvyDAO/minime,contracts/MembershipIdentity.sol,"setPrice(uint256 value);setWallet(address addr);claimIFactor(bytes32 factor, uint256 hash);verifyCode(bytes32 factor, uint256 key);setCode(address who, bytes32 factor, uint256 encrypted);verifyIdentity(address who, bytes32 factor, uint256 hash);bringuPort(address uPortId);getHashID(address who, bytes32 factor);getVerifiedHashID(address who, bytes32 factor);revoke(bytes32 factor,address who);revokeMyId(bytes32 factor);revokeAll(bytes32 factor, address who);revokeAllMyId()"
web3j/web3j,codegen/src/test/resources/truffle/MetaCoin/MetaCoin.sol,"sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
ChronoBank/LX-SC,contracts/Imports.sol,""
GX-Coin/SmartContract,GxUsesWallet.sol,setWalletContract(address walletAddress)
AdChain/AdChainRegistry,contracts/Challenge.sol,"isInitialized(Data storage _self);isResolved(Data storage _self);canBeResolved(Data storage _self);challengeWinnerReward(Data storage _self);voterReward(Data storage _self, address _voter, uint _salt);claimReward(Data storage _self, address _voter, uint _salt)"
dltdojo/courses,ethereum/solidity/T131_Require.sol,""
GX-Coin/SmartContract,GxCallableByAdmin.sol,isAdmin(address accountAddress)
sirasistant/market_consensys_academy,contracts/GroupBuy.sol,"GroupBuy(address hubAddress);addBuyRequestInternal(BuyRequest memory request);deleteBuyRequestInternal(uint id);executeBuyRequest(uint requestId);addBuyRequest(bytes32 productId,address shopAddress);joinBuyRequest(uint requestId);exitBuyRequest(uint requestId);getBuyRequestCount();getCollaborated(uint requestId)"
mixbytes/storiqa_ico,contracts/STQPreICO3.sol,getWeiCollected();getMinimumFunds();getMaximumFunds();getStartTime();getEndTime();getPreICOBonus()
Storiqa/ico_smart_contract,contracts/STQPreICO3.sol,getWeiCollected();getMinimumFunds();getMaximumFunds();getStartTime();getEndTime();getPreICOBonus()
status-im/status-network-token,contracts/MultiSigWallet.sol,"MultiSigWallet(address[] _owners, uint _required);addOwner(address owner);removeOwner(address owner);replaceOwner(address owner, address newOwner);changeRequirement(uint _required);submitTransaction(address destination, uint value, bytes data);confirmTransaction(uint transactionId);revokeConfirmation(uint transactionId);executeTransaction(uint transactionId);isConfirmed(uint transactionId);addTransaction(address destination, uint value, bytes data);getConfirmationCount(uint transactionId);getTransactionCount(bool pending, bool executed);getOwners();getConfirmations(uint transactionId);getTransactionIds(uint from, uint to, bool pending, bool executed)"
mothershipcx/contracts,contracts/MultiSigWallet.sol,"MultiSigWallet(address[] _owners, uint _required);addOwner(address owner);removeOwner(address owner);replaceOwner(address owner, address newOwner);changeRequirement(uint _required);submitTransaction(address destination, uint value, bytes data);confirmTransaction(uint transactionId);revokeConfirmation(uint transactionId);executeTransaction(uint transactionId);isConfirmed(uint transactionId);addTransaction(address destination, uint value, bytes data);getConfirmationCount(uint transactionId);getTransactionCount(bool pending, bool executed);getOwners();getConfirmations(uint transactionId);getTransactionIds(uint from, uint to, bool pending, bool executed)"
dacplayproject/play-dapp,src/MultiSigWallet.sol,"MultiSigWallet(address[] _owners, uint _required);addOwner(address owner);removeOwner(address owner);replaceOwner(address owner, address newOwner);changeRequirement(uint _required);submitTransaction(address destination, uint value, bytes data);confirmTransaction(uint transactionId);revokeConfirmation(uint transactionId);executeTransaction(uint transactionId);isConfirmed(uint transactionId);addTransaction(address destination, uint value, bytes data);getConfirmationCount(uint transactionId);getTransactionCount(bool pending, bool executed);getOwners();getConfirmations(uint transactionId);getTransactionIds(uint from, uint to, bool pending, bool executed)"
manojpramesh/solidity-contracts,contracts/BancorConverter.sol,"Utils();safeAdd(uint256 _x, uint256 _y);safeSub(uint256 _x, uint256 _y);safeMul(uint256 _x, uint256 _y);name();symbol();decimals();totalSupply();balanceOf(address _owner);allowance(address _owner, address _spender);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);owner();transferOwnership(address _newOwner);acceptOwnership();withdrawTokens(IERC20Token _token, address _to, uint256 _amount);convertibleTokenCount();convertibleToken(uint16 _tokenIndex);getReturn(IERC20Token _fromToken, IERC20Token _toToken, uint256 _amount);convert(IERC20Token _fromToken, IERC20Token _toToken, uint256 _amount, uint256 _minReturn);change(IERC20Token _fromToken, IERC20Token _toToken, uint256 _amount, uint256 _minReturn);disableTransfers(bool _disable);issue(address _to, uint256 _amount);destroy(address _from, uint256 _amount);formula();gasPriceLimit();quickConverter();calculatePurchaseReturn(uint256 _supply, uint256 _reserveBalance, uint32 _reserveRatio, uint256 _depositAmount);calculateSaleReturn(uint256 _supply, uint256 _reserveBalance, uint32 _reserveRatio, uint256 _sellAmount);gasPrice();convert(IERC20Token[] _path, uint256 _amount, uint256 _minReturn);convertFor(IERC20Token[] _path, uint256 _amount, uint256 _minReturn, address _for);deposit();withdraw(uint256 _amount);withdrawTo(address _to, uint256 _amount);Owned();transferOwnership(address _newOwner);acceptOwnership();Managed();transferManagement(address _newManager);acceptManagement();TokenHolder();withdrawTokens(IERC20Token _token, address _to, uint256 _amount);SmartTokenController(ISmartToken _token);transferTokenOwnership(address _newOwner);acceptTokenOwnership();disableTokenTransfers(bool _disable);withdrawFromToken(IERC20Token _token, address _to, uint256 _amount);BancorConverter(ISmartToken _token, IBancorConverterExtensions _extensions, uint32 _maxConversionFee, IERC20Token _reserveToken, uint32 _reserveRatio);reserveTokenCount();convertibleTokenCount();convertibleToken(uint16 _tokenIndex);setExtensions(IBancorConverterExtensions _extensions);setQuickBuyPath(IERC20Token[] _path);clearQuickBuyPath();getQuickBuyPathLength();disableConversions(bool _disable);setConversionFee(uint32 _conversionFee);getConversionFeeAmount(uint256 _amount);addReserve(IERC20Token _token, uint32 _ratio, bool _enableVirtualBalance);updateReserve(IERC20Token _reserveToken, uint32 _ratio, bool _enableVirtualBalance, uint256 _virtualBalance);disableReservePurchases(IERC20Token _reserveToken, bool _disable);getReserveBalance(IERC20Token _reserveToken);getReturn(IERC20Token _fromToken, IERC20Token _toToken, uint256 _amount);getPurchaseReturn(IERC20Token _reserveToken, uint256 _depositAmount);getSaleReturn(IERC20Token _reserveToken, uint256 _sellAmount);convert(IERC20Token _fromToken, IERC20Token _toToken, uint256 _amount, uint256 _minReturn);buy(IERC20Token _reserveToken, uint256 _depositAmount, uint256 _minReturn);sell(IERC20Token _reserveToken, uint256 _sellAmount, uint256 _minReturn);quickConvert(IERC20Token[] _path, uint256 _amount, uint256 _minReturn);change(IERC20Token _fromToken, IERC20Token _toToken, uint256 _amount, uint256 _minReturn);quickChange(IERC20Token[] _path, uint256 _amount, uint256 _minReturn);quickBuy(uint256 _minReturn);hasQuickBuyEtherToken();getQuickBuyEtherToken();getSaleReturn(IERC20Token _reserveToken, uint256 _sellAmount, uint256 _totalSupply)"
cryptape/cita,scripts/contracts/src/native/CrossChain.sol,getCrossChainSendNonce();getCrossChainRecvNonce();getFromChainId()
prashantpawar/truffle-octo-robot,contracts/priced.sol,""
Juzix/BlockChain-Demo,contracts/JuzixTokenManager.sol,"JuzixTokenManager();getPubkey(address _address);setPubkey(string _pubKey);setCirculationShares(string _circulationShares);buyFrom(string _param,address _to);transferPaillier(string _param,address _to);balanceOfPaillier(address _owner);totalSupplyPaillier();approvePaillier(address _spender, string _value);allowancePaillier(address _owner, address _spender);listAllBuyBalance(address _buyAddr, uint _pageNum, uint _pageSize);pageByAccount(address _account, uint _tranferType,uint _pageNum, uint _pageSize);pageBuyRecordByAccount(address _account,uint _pageNum, uint _pageSize);isAdmin();getNizkStruct()"
Atzen2/hacking-law-proto,truffle/contracts/AgencyWallet.sol,"AgencyWallet(string _name);resetWallet();pipeMoney();validEAContract(uint32 _emplyeHWage, address _employeeAddress);validPLAContract(uint32 _emplyeHWage2, uint32 _workHours)"
Dicoiner/irianna-solidity,contracts/ownership/DelayedClaimable.sol,"setLimits(uint256 _start, uint256 _end);claimOwnership()"
gmo-blockchain/solidity,contracts/CnsController.sol,"CnsController(ContractNameService _cns, bytes32 _contractName);getCns();getContractName();isVersionContract();isVersionLogic();isVersionContractOrLogic()"
iam-dev/ERC23,installed_contracts/zeppelin-solidity/contracts/crowdsale/CappedCrowdsale.sol,CappedCrowdsale(uint256 _cap);validPurchase();hasEnded()
iam-dev/ERC23,installed_contracts/zeppelin-solidity/contracts/ownership/HasNoContracts.sol,reclaimContract(address contractAddr)
gleim/DAO,Offer.sol,getTotalCost();getInitialWithdraw();getMinDailyWithdrawLimit();getDailyWithdrawLimit();getContractor();getHashOfTheProposalDocument();getLastWithdraw();getDateOfAcceptance();getClient();getOriginalClient();getIsContractValid();accept();setDailyWithdrawLimit(uint128 _dailyWithdrawLimit);terminate();withdraw();updateClientAddress(DAO _newClient)
LOOMIA/loomia,ethereum/contracts/TokenChanger.sol,sellTile(uint quantity)
ageyev/Solidity.Examples,HelloWorld.sol,HelloWorld(string _greeting);changeGreeting(string _greeting)
creditbit-dev/credit2.0,contracts/Interfaces/ICreditBIT.sol,"mintMigrationTokens(address _reciever, uint _amount)"
LindaHealthcareICO/linda-crowdsale,contracts/LindaToken.sol,""
iurimatias/embark-framework,dapps/tests/contracts/contracts/simple_storage.sol,set(uint x);get();getS()
ethereum/dapp-bin,registrar/GlobalRegistrar.sol,"addr(string _name);name(address _owner);owner(string _name);addr(string _name);subRegistrar(string _name);content(string _name);name(address _owner);onAuctionEnd(string _name);bid(string _name, address _bidder, uint _value);Registrar();onAuctionEnd(string _name);reserve(string _name);requiresAuction(string _name);setOwner(string _name, address _newOwner);disown(string _name);setName(string _name);setAddress(string _name, address _a);setSubRegistrar(string _name, address _registrar);setContent(string _name, bytes32 _content);stringsEqual(string storage _a, string memory _b);owner(string _name);addr(string _name);subRegistrar(string _name);content(string _name);name(address _addr)"
golemfactory/ethereum-contracts,Lottery.sol,"Lottery();init(bytes32 lotteryHash);getValue(bytes32 lotteryHash);getMaturity(bytes32 lotteryHash);getRandomValue(bytes32 lotteryHash);randomize(bytes32 lotteryHash);validateProof(uint32 rand, bytes32 lotteryHash, WinnerProof proof);changeMaturity(uint maturity);random(uint maturity);calculateInitialPayerDeposit(uint val);calculatePayerDeposit(uint val);getOwnerDeposit();payout()"
scorpilix/Golemtest,golem/ethereum/contracts/Lottery.sol,"Lottery();init(bytes32 lotteryHash);getValue(bytes32 lotteryHash);getMaturity(bytes32 lotteryHash);getRandomValue(bytes32 lotteryHash);randomize(bytes32 lotteryHash);validateProof(uint32 rand, bytes32 lotteryHash, WinnerProof proof);changeMaturity(uint maturity);random(uint maturity);calculateInitialPayerDeposit(uint val);calculatePayerDeposit(uint val);getOwnerDeposit();payout()"
Radagast-red/golem,golem/ethereum/contracts/Lottery.sol,"Lottery();init(bytes32 lotteryHash);getValue(bytes32 lotteryHash);getMaturity(bytes32 lotteryHash);getRandomValue(bytes32 lotteryHash);randomize(bytes32 lotteryHash);validateProof(uint32 rand, bytes32 lotteryHash, WinnerProof proof);changeMaturity(uint maturity);random(uint maturity);calculateInitialPayerDeposit(uint val);calculatePayerDeposit(uint val);getOwnerDeposit();payout()"
imapp-pl/ethereum-contracts,Lottery.sol,"Lottery();init(bytes32 lotteryHash);getValue(bytes32 lotteryHash);getMaturity(bytes32 lotteryHash);getRandomValue(bytes32 lotteryHash);randomize(bytes32 lotteryHash);validateProof(uint32 rand, bytes32 lotteryHash, WinnerProof proof);changeMaturity(uint maturity);random(uint maturity);calculateInitialPayerDeposit(uint val);calculatePayerDeposit(uint val);getOwnerDeposit();payout()"
JacqMT/web3j-maven-example,contracts/solidity/Greeter.sol,mortal();kill();greeter(string _greeting);greet();newGreeting(string _greeting)
gmo-blockchain/solidity,contracts/FileObjectEvent_v1.sol,"create(address _sender, bytes32 _id);setAllowCnsContract(address _sender, bytes32 _id, address _cns, bytes32 _contractName, bool _isAdded);setHash(address _sender, bytes32 _id, address _writer, bytes32 _hash, uint _targetIdx);setReaderId(address _sender, bytes32 _id, bytes32 _readerId);setWriterId(address _sender, bytes32 _id, bytes32 _writerId)"
Majoolr/ethereum-libraries,VestingLib/truffle/contracts/VestingLibTokenTestContract.sol,"initializeTokenBalance(CrowdsaleToken token, uint256 _balance);registerUser(address _registrant, uint256 _vestAmount, uint256 _bonus);registerUsers(address[] _registrants, uint256 _vestAmount, uint256 _bonus);unregisterUser(address _registrant);unregisterUsers(address[] _registrants);swapRegistration(address _replacementRegistrant);withdrawTokens(CrowdsaleToken token);sendTokens(CrowdsaleToken token, address _beneficiary);ownerWithdrawExtraTokens(CrowdsaleToken token);getOwner();getTotalSupply();getContractBalance();getIsToken();getStartTime();getEndTime();getNumRegistered();getTimeInterval();getPercentPerInterval();getPercentReleased();getHasWithdrawn(address _participant);getVestingAmount(address _participant);getBonusAmount(address _participant)"
androlo/solidity-workshop,examples/IterableAddressSetASM.sol,add(address addr);remove(address addr);has(address addr);size()
lucywe/rootcore-crowdsale,solidity/contracts/helpers/TestUtils.sol,"TestUtils();testSafeAdd(uint256 _x, uint256 _y);testSafeSub(uint256 _x, uint256 _y);testSafeMul(uint256 _x, uint256 _y)"
Majoolr/ethereum-libraries,CrowdsaleLib/DirectCrowdsale/truffle/contracts/CrowdsaleTestTokenZeroD.sol,"name();symbol();decimals();totalSupply();initialSupply();balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint256 value);transferFrom(address from, address to, uint value);approve(address spender, uint256 value);approveChange(address spender, uint256 valueChange, bool increase);changeOwner(address newOwner);burnToken(uint256 amount)"
eris-ltd/eris-compilers,tests/contractImport2.sol,"add(int a, int b);subtract(int a, int b);addFromMapping(uint a, uint b)"
eris-ltd/lllc-server,tests/contractImport2.sol,"add(int a, int b);subtract(int a, int b);addFromMapping(uint a, uint b)"
adklempner/solidity-license,contracts/zeppelin/ownership/Shareable.sol,"Shareable(address[] _owners, uint256 _required);revoke(bytes32 _operation);getOwner(uint256 ownerIndex);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);clearPending()"
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/ownership/Shareable.sol,"Shareable(address[] _owners, uint256 _required);revoke(bytes32 _operation);getOwner(uint256 ownerIndex);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);clearPending()"
adamdossa/ProfitSharingContract,installed_contracts/zeppelin/contracts/ownership/Shareable.sol,"Shareable(address[] _owners, uint256 _required);revoke(bytes32 _operation);getOwner(uint256 ownerIndex);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);clearPending()"
silasdavis/eris-db,tests/jobs_fixtures/app19-factory_abi_supplied_to_interaction_job/GSFactory.sol,set(uint x);get();create();getLast()
silasdavis/burrow,tests/jobs_fixtures/app19-factory_abi_supplied_to_interaction_job/GSFactory.sol,set(uint x);get();create();getLast()
eris-ltd/eris-db,tests/jobs_fixtures/app19-factory_abi_supplied_to_interaction_job/GSFactory.sol,set(uint x);get();create();getLast()
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/contracts/crowdsale/FinalizableCrowdsale.sol,finalize();finalization()
pash7ka/zeppelin-solidity,contracts/crowdsale/FinalizableCrowdsale.sol,finalize();finalization()
readevalprint/aragon-core,contracts/zeppelin/crowdsale/FinalizableCrowdsale.sol,finalize();finalization()
pz7/liquet,node_modules/zeppelin-solidity/contracts/crowdsale/FinalizableCrowdsale.sol,finalize();finalization()
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/crowdsale/FinalizableCrowdsale.sol,finalize();finalization()
cashpokerpro-dev/cash-smartcontracts,contracts/crowdsale/FinalizableCrowdsale.sol,finalize();finalization()
cinderblockchain/cindertoken,contracts/crowdsale/FinalizableCrowdsale.sol,finalize();finalization()
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/token/ERC20/StandardBurnableToken.sol,"burnFrom(address _from, uint256 _value)"
creditbit-dev/credit2.0,contracts/Interfaces/ITokenRecipient.sol,"receiveApproval(address _from, uint256 _value, address _token, bytes _extraData)"
ryepdx/gulp-ethertest,test.sol,""
ryepdx/welcometothejungle,src/contracts/test.sol,""
alice-si/contracts,contracts/alice/bonds/ProjectWithBonds.sol,"investFromWallet(uint _amount);validateOutcome(bytes32 _claimId, uint _value);redeemCoupons(uint256 _amount);getPriceWithInterests(uint256 _value);getCoupon();getLiability();getValidatedLiability()"
stradled/ftHackathonNews,contract/contract.sol,"News();add(bytes fingerprint, uint price);getPrice(bytes fingerprint);buy(bytes fingerprint);proveBuy(bytes fingerprint);proveOwnership(bytes fingerprint)"
iudex/iudex,contracts/std.sol,owned();changeOwner(address newOwner);addAdministrator(address admin);removeAdministrator(address admin);kill();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr);kill();nameRegAddress();named(bytes32 name);named(bytes32 name)
Majoolr/ethereum-libraries,CrowdsaleLib/DirectCrowdsale/truffle/contracts/TokenLib.sol,"transfer(TokenStorage storage self, address _to, uint256 _value);balanceOf(TokenStorage storage self, address _owner);approve(TokenStorage storage self, address _spender, uint256 _value);allowance(TokenStorage storage self, address _owner, address _spender);changeOwner(TokenStorage storage self, address _newOwner);mintToken(TokenStorage storage self, uint256 _amount);closeMint(TokenStorage storage self);burnToken(TokenStorage storage self, uint256 _amount)"
centaurustech/WeiFund,WeiCoin.sol,"onNewCampaign(uint cid, address addr);onContribute(uint cid, address addr, uint amount);onRefund(uint cid, address addr, uint amount);onPayout(uint cid, uint amount);sendCoinFrom(address _from, uint _val, address _to);sendCoin(uint _val, address _to);coinBalance();coinBalanceOf(address _a);approve(address _a);isApproved(address _proxy);isApprovedFor(address _target, address _proxy);WeiCoin(address _weifundAddress, uint _initAmount, uint _blockReward, uint _weiRatio);sendCoinFrom(address _from, uint _val, address _to);sendCoin(uint _val, address _to);onNewCampaign(uint _cid, address _addr);onContribute(uint _cid, address _addr, uint _amount);onRefund(uint _cid, address _addr, uint _amount);coinBalance();coinBalanceOf(address _a);approve(address _a);isApproved(address _proxy);isApprovedFor(address _target, address _proxy)"
motionwerkGmbH/ethermint,pegzone/solidity/TendermintLightClient.sol,"TendermintLightClient(Validator[] validatorSet, string chainID)"
ramilexe/ethermint,pegzone/solidity/TendermintLightClient.sol,"TendermintLightClient(Validator[] validatorSet, string chainID)"
slockit/DAO,DAOTokenCreationProxyTransferer.sol,"DAOTokenCreationProxyTransferer(address _owner, address _dao);sendValues()"
orbro/eth-enablers,DAO-develop/DAOTokenCreationProxyTransferer.sol,"DAOTokenCreationProxyTransferer(address _owner, address _dao);sendValues()"
gleim/DAO,DAOTokenCreationProxyTransferer.sol,"DAOTokenCreationProxyTransferer(address _owner, address _dao);sendValues()"
Spreadway/core,DAO-develop/DAOTokenCreationProxyTransferer.sol,"DAOTokenCreationProxyTransferer(address _owner, address _dao);sendValues()"
ashellwig/Ethereum-Mutual-Fund,DAOTokenCreationProxyTransferer.sol,"DAOTokenCreationProxyTransferer(address _owner, address _dao);sendValues()"
ethereum/remix,remix-tests/examples/simple_storage_test.sol,beforeAll();beforeEach()
FiatCentralBank/fiatcoin,contracts/time/NowClock.sol,get_time()
dob/auctionhouse,contracts/SampleName.sol,"owner(string _recordId);setOwner(string _recordId, address _newOwner);addRecord(string _recordId, address _owner, string _name, address _walletAddress);getWalletAddress(string _recordId);updateRecordWalletAddress(string _recordId, address _newWalletAddress)"
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/Shareable.sol,"Shareable(address[] _owners, uint _required);revoke(bytes32 _operation);getOwner(uint ownerIndex);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);clearPending()"
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/Shareable.sol,"Shareable(address[] _owners, uint _required);revoke(bytes32 _operation);getOwner(uint ownerIndex);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);clearPending()"
AragonOne/zeppelin-solidity,contracts/ownership/Shareable.sol,"Shareable(address[] _owners, uint _required);revoke(bytes32 _operation);getOwner(uint ownerIndex);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);clearPending()"
flysonic10/initial-celestial-offering,contracts/zeppelin/lifecycle/Killable.sol,kill()
ranneyd/eth-faucet,contracts/zeppelin/lifecycle/Killable.sol,kill()
Spreadway/core,flow_auth/contracts/zeppelin/lifecycle/Killable.sol,kill()
TickethProject/ticketh-core,contracts/zeppelin/lifecycle/Killable.sol,kill()
ixofoundation/tge-server,contracts/zeppelin/lifecycle/Killable.sol,kill()
duaraghav8/Solium,test/lib/rules/imports-on-top/fixes/only-one-error.sol,""
EthTrader/dappening,contracts/MiniMeToken.sol,"receiveApproval(address from, uint256 _amount, address _token, bytes _data);transfer(address _to, uint256 _amount);transferFrom(address _from, address _to, uint256 _amount);doTransfer(address _from, address _to, uint _amount);balanceOf(address _owner);approve(address _spender, uint256 _amount);allowance(address _owner, address _spender);approveAndCall(address _spender, uint256 _amount, bytes _extraData);totalSupply();balanceOfAt(address _owner, uint _blockNumber);totalSupplyAt(uint _blockNumber);generateTokens(address _owner, uint _amount);destroyTokens(address _owner, uint _amount);enableTransfers(bool _transfersEnabled);getValueAt(Checkpoint[] storage checkpoints, uint _block);updateValueAtNow(Checkpoint[] storage checkpoints, uint _value);isContract(address _addr);min(uint a, uint b)"
GovernX/governx-contracts,src/contracts/utils/Proxy.sol,"forward(address destination, uint value, bytes data);transfer(address _owner)"
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/test/helpers/PausableTokenMock.sol,"PausableTokenMock(address initialAccount, uint initialBalance)"
pash7ka/zeppelin-solidity,test/helpers/PausableTokenMock.sol,"PausableTokenMock(address initialAccount, uint initialBalance)"
Dicoiner/irianna-solidity,test/helpers/PausableTokenMock.sol,"PausableTokenMock(address initialAccount, uint initialBalance)"
pz7/liquet,node_modules/zeppelin-solidity/test/helpers/PausableTokenMock.sol,"PausableTokenMock(address initialAccount, uint initialBalance)"
dmx374/zeppelin-solidity,test/helpers/PausableTokenMock.sol,"PausableTokenMock(address initialAccount, uint initialBalance)"
cashpokerpro-dev/cash-smartcontracts,test/helpers/PausableTokenMock.sol,"PausableTokenMock(address initialAccount, uint initialBalance)"
redsquirrel/augur-core,src/library_test_contracts/SafeMathUint256Tester.sol,"mul(uint256 _a, uint256 _b);div(uint256 _a, uint256 _b);sub(uint256 _a, uint256 _b);add(uint256 _a, uint256 _b);min(uint256 _a, uint256 _b);max(uint256 _a, uint256 _b);fxpMul(uint256 _a, uint256 _b, uint256 _base);fxpDiv(uint256 _a, uint256 _b, uint256 _base)"
ryepdx/etherlab,lib/base/persistentProtectedContract.sol,remove()
ryepdx/the-tao,contracts/factory.sol,"TheTAOFactory(DSFactory factory);createAuthority();createToken(DSBasicAuthority authority);giveOwnership(DSBasicAuthority authority);setupMultisig(DSBasicAuthority authority, uint n, uint m, uint exp)"
ProBonoPublicoWorld/ico-contracts,contracts/ExternalTokenCrowdsale.sol,ExternalTokenCrowdsale(MintableToken _token);createTokenContract()
Anchormen/dutch-blockchain-hackathon-project-piggybank,backend/contracts/BalanceBook.sol,"BalanceBook();addHouseHold(uint household, uint n, uint g);removeHouseHold(uint household);addPayment(uint household, string company, int encrypted_change, bool active);togglePayment(uint household, string company);getPayment(uint household, string company);getPublicKeys(uint household)"
DigixGlobal/ethereum-ruby,contracts/classic/DigixbotEthereum.sol,"DigixbotEthereum(address _config);depositCoin(bytes32 _userid, uint _amount);getConfig();getUsersContract();getBotContract();getUserId(address _address);getUserAccount(bytes32 _userid);sendCoin(bytes32 _sender, bytes32 _recipient, uint _amt);withdrawCoin(bytes32 _user, uint _amount);withdrawCoinExt(uint _amount);getBalance(bytes32 _uid);totalBalance()"
EthWorks/ethereum.rb,contracts/classic/DigixbotEthereum.sol,"DigixbotEthereum(address _config);depositCoin(bytes32 _userid, uint _amount);getConfig();getUsersContract();getBotContract();getUserId(address _address);getUserAccount(bytes32 _userid);sendCoin(bytes32 _sender, bytes32 _recipient, uint _amt);withdrawCoin(bytes32 _user, uint _amount);withdrawCoinExt(uint _amount);getBalance(bytes32 _uid);totalBalance()"
marekkirejczyk/ethereum.rb,contracts/classic/DigixbotEthereum.sol,"DigixbotEthereum(address _config);depositCoin(bytes32 _userid, uint _amount);getConfig();getUsersContract();getBotContract();getUserId(address _address);getUserAccount(bytes32 _userid);sendCoin(bytes32 _sender, bytes32 _recipient, uint _amt);withdrawCoin(bytes32 _user, uint _amount);withdrawCoinExt(uint _amount);getBalance(bytes32 _uid);totalBalance()"
vsimetka/MVP,Token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
LOOMIA/loomia,ethereum/contracts/CentrallyIssuedToken.sol,"CentrallyIssuedToken(address _owner, string _name, string _symbol, uint _totalSupply, uint _decimals);setTokenInformation(string _name, string _symbol)"
SilentCicero/wafr,src/tests/solidityTests/assertTrue/test.assertTrueLarge.sol,test_oneFalseAssert();test_oneTrueAssert();test_twoTrueAssertNoMessage();test_twoFalseAssertNoMessage();test_oneTrueAssertNoMessage();test_oneFalseAssertNoMessage();test_twoFalseAsserts();test_twoTrueAsserts();test_threeFalseAssert();test_threeTrueAssert();test_oneTrueAndFalseAssert();test_twoTrueAndFalseAssert()
nipunn1313/parity,js/src/contracts/snippets/enhanced-wallet.sol,"revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);setDailyLimit(uint _newLimit);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);initMultiowned(address[] _owners, uint _required);revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);getOwner(uint ownerIndex);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);initDaylimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();initWallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);create(uint _value, bytes _code);confirm(bytes32 _h);confirmAndCheck(bytes32 _operation);reorganizeOwners();underLimit(uint _value);today();clearPending();Wallet(address[] _owners, uint _required, uint _daylimit);getOwner(uint ownerIndex);hasConfirmed(bytes32 _operation, address _owner);isOwner(address _addr)"
DonorToken/DonorToken,test/helpers-my/SampleERC23Token.sol,""
maxwedwards/block-journal,contracts/Owned.sol,Owned();transferOwnership(address newOwner)
stanta/darfchain,ICO/contracts/FractionalERC20.sol,""
Sensorica/Interspace-Access,solidity/AccessManager.sol,"insert(bytes32 key, address value);exists(bytes32 key);keyAtIndex(uint index);keyAtIndexHasNext(uint idx);valueAtIndexHasNext(uint idx);keyIndex(bytes32 key);size();value(bytes32 key);addIdentity(bytes32 _id, bytes32 _name);addCredentials(bytes32 _id, bool _hasCredentials)"
iam-dev/ERC23,contracts/token/StandardReceiver.sol,"tokenFallback(address _sender, address _origin, uint _value, bytes _data);getSig(bytes _data)"
BlockchainLabsNZ/Unconf-DApp,contracts/UnConf.sol,"UnConf(string _name, address _owner);addMember(address targetMember, string memberName);getName();getNumTopics();listTopics();getVoteCount();getMembersCount();getMemberName(address targetMember);getTopicNameAndVotesAt(uint index);getMemberSince(address targetMember);newTopic(string topicDescription);vote(uint topicID)"
michinbear/solidity,test/compilationTests/gnosis/Markets/StandardMarketFactory.sol,"createMarket(Event eventContract, MarketMaker marketMaker, uint24 fee)"
elementrem/solidity,test/compilationTests/gnosis/Markets/StandardMarketFactory.sol,"createMarket(Event eventContract, MarketMaker marketMaker, uint24 fee)"
ethereum/dapp-bin,ether_ad/two_phase_auction.sol,"acceptAuctionResult(address winner, uint256 value, string metadata);TwoPhaseAuction();initialize(address _t, uint256 _hsp, uint256 _hrp, uint256 _vssm, uint256 _tp);commitBid(bytes32 bidValueHash, string metadata);revealBid(uint256 index, uint256 bidValue, bytes32 nonce);ping();setOwner(address newOwner);withdraw();getPhase();getMostRecentAuctionStart();getHashSubmissionEnd();getHashRevealEnd()"
dltdojo/courses,ethereum/dapps/dao/T100_Ballot.sol,"vote(Ballot ballot, uint8 proposal);Ballot(uint8 _numProposals);giveRightToVote(address voter);delegate(address to);vote(uint8 proposal);winningProposal()"
lzxm160/test-dapp,contracts/Property.sol,"EjariRules();addEjariRule(string latitude, string longitude, uint incrementPercentage, uint maxRent);isValid(string latitude, string longitude, uint oldRent, uint newRent);setGovernment(address _government);rateTenant(uint rating);rateOwner(uint rating);rateProperty(uint rating);getLatitude();getLongitude();getOwnerRating();getPropertyRating();getOwnerRatingTuple();getPropertyRatingTuple();Property(string _latitude, string _longitude, uint _rent, uint _security);validate();pay(uint startTime, uint endTime);updateRent(uint _rent);terminate(uint deduction)"
raviupreti85/tenancy-dapp,contracts/Property.sol,"EjariRules();addEjariRule(string latitude, string longitude, uint incrementPercentage, uint maxRent);isValid(string latitude, string longitude, uint oldRent, uint newRent);setGovernment(address _government);rateTenant(uint rating);rateOwner(uint rating);rateProperty(uint rating);getLatitude();getLongitude();getOwnerRating();getPropertyRating();getOwnerRatingTuple();getPropertyRatingTuple();Property(string _latitude, string _longitude, uint _rent, uint _security);validate();pay(uint startTime, uint endTime);updateRent(uint _rent);terminate(uint deduction)"
TruLtd/tru-reputation-token,src/0.1.8/TruAddressFull.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);isValid(address input);toString(address input);addressLength(address input)"
TruLtd/tru-reputation-token,src/0.1.9/TruAddressFull.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);isValid(address input);toString(address input);addressLength(address input)"
TruLtd/tru-reputation-token,src/0.1.10/TruAddressFull.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);isValid(address input);toString(address input);addressLength(address input)"
TruLtd/tru-reputation-token,src/0.1.5/TruAddressFull.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);isValid(address input);toString(address input);addressLength(address input)"
TruLtd/tru-reputation-token,src/0.1.6/TruAddressFull.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);isValid(address input);toString(address input);addressLength(address input)"
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/contracts/token/MintableToken.sol,"mint(address _to, uint256 _amount);finishMinting()"
readevalprint/aragon-core,contracts/zeppelin/token/MintableToken.sol,"mint(address _to, uint256 _amount);finishMinting()"
pz7/liquet,node_modules/zeppelin-solidity/contracts/token/MintableToken.sol,"mint(address _to, uint256 _amount);finishMinting()"
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/token/MintableToken.sol,"mint(address _to, uint256 _amount);finishMinting()"
dmx374/zeppelin-solidity,contracts/token/MintableToken.sol,"mint(address _to, uint256 _amount);finishMinting()"
cashpokerpro-dev/cash-smartcontracts,contracts/token/MintableToken.sol,"mint(address _to, uint256 _amount);finishMinting()"
cinderblockchain/cindertoken,contracts/token/MintableToken.sol,"mint(address _to, uint256 _amount);finishMinting()"
henning70/b9lab-wk3_small_project,contracts/SmallProject.sol,"SmallProject();Accounts(address _account1, address _account2);SplitAmount(address _account1, address _account2, uint256 _amount);SendAmount(address _account1, address _account2, uint256 _amount);GetBalance(address _address);KillContract()"
airalab/DAO-IPCI,contracts/Billing.sol,"Billing(address _taxman, address _beneficiary);serviceFee(address _account, uint256 _fee);payment()"
RyuuGan/sol-merger,test/contracts/LocalImports.sol,MyOwned()
SafecontractDev/protocol,contracts/bancor_contracts/helpers/TestBancorFormula.sol,"TestBancorFormula();powerTest(uint256 _baseN, uint256 _baseD, uint32 _expN, uint32 _expD);lnTest(uint256 _numerator, uint256 _denominator);findPositionInMaxExpArrayTest(uint256 _x);fixedExpTest(uint256 _x, uint8 _precision)"
airalab/core,contracts/ens/AbstractENS.sol,"owner(bytes32 _node);resolver(bytes32 _node);ttl(bytes32 _node);setOwner(bytes32 _node, address _owner);setSubnodeOwner(bytes32 _node, bytes32 _label, address _owner);setResolver(bytes32 _node, address _resolver);setTTL(bytes32 _node, uint64 _ttl)"
drgorb/insurechain,contracts/Mortal.sol,kill()
drgorb/hackathon-2016-11,contracts/Mortal.sol,kill()
daostack/daostack,contracts/schemes/GenericScheme.sol,"executeProposal(bytes32 _proposalId, int256 _decision);execute(bytes32 _proposalId);proposeCall(bytes memory _callData, uint256 _value, string memory _descriptionHash)"
lucywe/rootcore-crowdsale,solidity/contracts/Owned.sol,Owned();transferOwnership(address _newOwner);acceptOwnership()
Neufund/Contracts,contracts/neufund/LimitedPartnerAgreement.sol,sign();hasSigned(address signer)
DonorToken/DonorToken,contracts/token/ERC23Token.sol,"transfer(address _to, uint256 _value, bytes _data);transfer(address _to, uint256 _value)"
nud3l/smart-contract-analysis,data-loader/tests/data/simple.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
QTBlockchain/SolidityNWeb3,patterns/contracts/UserAddressRegistry.sol,"UserAddressRegistry();registerName(bytes32 name);updateName(address given, bytes32 name);deleteName(address given);count();getByIndex(uint index);getByAddress(address addr);removeFromAddresses(address addr)"
micahaza/go-ethereum,contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
Nepal-Blockchain/go-ethereum,contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
wpypeiyao/Identity-On-Blockchain,node_modules/embark/test_app/app/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get();getS()
WingsDao/contracts,contracts/Temporary.sol,"setTime(uint _start, uint _end)"
PeculiumPCL/Peculium,contracts/v0.1/Ownable.sol,Ownable();transferOwnership(address newOwner)
manishbisht/Udacity,Blockchain Developer Nanodegree/P6 - Architect a Blockchain Supply Chain Solution/Part B/Starter_Code/project-6/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
robmyers/artworld-ethereum,dapps/secret-artworks/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
AIAlan/News,contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
fccoelho/Curso_Blockchain,contracts/ICO/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
fccoelho/Curso_Blockchain,contracts/Lista_de_Presenca/Contract/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
iurimatias/embark-framework,dapps/tests/contracts/contracts/test2.sol,testAdd();changeAddress(address _addr)
orbro/eth-enablers,solidity-baby-steps-master/contracts/50_replicator.sol,Replicator();getBlockCreatedOn();kill();Replicator();getBAddress();getBlockCreatedOn();kill()
alice-si/contracts,contracts/alice/Project.sol,"setValidator(address _validatorAddress);setBeneficiary(address _beneficiaryAddress);setImpactRegistry(address impactRegistryAddress);setClaimsRegistry(ClaimsRegistry _claimsRegistry);setToken(ERC20 _token);notify(address _from, uint _amount);registerDonation(address _from, uint _amount);donateFromWallet(uint _amount);fund(uint _value);validateOutcome(bytes32 _claimId, uint _value);payBack(address account);getBalance(address donor);escape(address escapeAddress);reclaimAlternativeTokens(ERC20 _alternativeToken, address _targetAddress, uint256 _value);getToken();calculateUpfrontSplit(uint256 _amount)"
Giveth/vaultcontract,contracts/Vault.sol,"Owned();changeOwner(address _newOwner);Escapable(address _escapeHatchCaller, address _escapeHatchDestination);escapeHatch();changeEscapeCaller(address _newEscapeHatchCaller);numberOfAuthorizedPayments();receiveEther();collectAuthorizedPayment(uint _idPayment);delayPayment(uint _idPayment, uint _delay);cancelPayment(uint _idPayment);authorizeSpender(address _spender, bool _authorize);setSecurityGuard(address _newSecurityGuard);setTimelock(uint _newTimeLock);setMaxSecurityGuardDelay(uint _maxSecurityGuardDelay)"
erkmos/moeda,contracts/MoedaToken.sol,"MoedaToken();issueTokens();setMigrationAgent(address agent);isContract(address addr);migrate(address beneficiary, uint256 amount);burn(uint256 amount);unlock();mint(address recipient, uint256 amount);transfer(address to, uint _value);transferFrom(address from, address to, uint value)"
melonproject/protocol,contracts/mock/priceSources/MockChaiPriceSource.sol,drip()
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/ethpm/contracts/Local.sol,""
silasdavis/eris-db,tests/jobs_fixtures/app24-multiple_inheritance_and_intermingling_contracts/one.sol,i()
silasdavis/burrow,tests/jobs_fixtures/app24-multiple_inheritance_and_intermingling_contracts/one.sol,i()
eris-ltd/eris-db,tests/jobs_fixtures/app24-multiple_inheritance_and_intermingling_contracts/one.sol,i()
trailofbits/greenhorn,csaw-2017/ETHERSNOOB/sources/ethersnoob7.sol,"set(uint data, uint data2, uint data3);get_flag();get()"
TheGenesisCoin/GenesisCoin,Contract/GenesisCoin.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);GenesisToken();totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _amount);approve(address _spender, uint256 _amount);allowance(address _owner, address _spender)"
thekaleidoscope/Hello-Ethereum,contracts/hello1.sol,getBalance();deposit(uint val)
Nethereum/Nethereum,src/Nethereum.Tutorials/Nethereum.Tutorials.Core/CallTransactionEvents/contracts/test.sol,test(int multiplier);multiply(int a)
jamespic/ethereum-tools,ballot.sol,Ballot(bytes32[] proposalNames);giveRightToVote(address voter);delegate(address to);vote(uint proposal);winningProposal();winnerName()
suntechsoft/dmarket-smartcontract,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
mdmshf/Komhar,testingContracts1.sol,testingContracts();setArray(uint8[10] incoming);getArraySettingResult();getArray();getValue(uint8 x);kill()
montyly/manticore,tests/ethereum/contracts/detectors/delegatecall_ok1.sol,default_call(bytes data)
trailofbits/manticore,tests/ethereum/contracts/detectors/delegatecall_ok1.sol,default_call(bytes data)
bkrem/educhain,chain/contracts/TeamManager.sol,"registerActionEvent(bytes32 actionType);addTeamMember(address _teamAddr, bytes32 _username, address _userAddr);removeTeamMember(address _teamAddr, bytes32 _username);getTeamAddress(bytes32 _name);getMemberAtIndex(address _teamAddr, uint idx)"
nexusdev/feedbase,src/paid_feeds.sol,"unpaid(bytes12 id);price(bytes12 id);token(bytes12 id);free(bytes12 id);claim(ERC20 token);can_get(address user, bytes12 id);set(bytes12 id, bytes32 value, uint40 expiration);set_price(bytes12 id, uint price);try_pay(address user, bytes12 id);pay(address user, bytes12 id)"
orbro/eth-enablers,solidity-baby-steps-master/contracts/40_multiple_constructor_test.sol,MultipleConstructorTest();MultipleConstructorTest();MultipleConstructorTest();MultipleConstructorTest();MultipleConstructorTest(bool irrelevantvalue);getFirst();getSecond();kill()
SafecontractDev/protocol,contracts/interfaces/IBalances.sol,queryBalance(address _account)
jgm-learn/SmartContract,Quotation.sol,"printQuotation();delList(string user_id, uint quo_id, uint deal_qty)"
Neufund/Contracts,contracts/lib/EventListener.sol,is_valid_event()
SES-fortiss/SmartGridCoSimulation,examples/memap/res/smart_contracts/src/DoubleSidedAuctionMarket.sol,"postOffer(uint[] prices, uint[] amounts);postDemand(uint[] prices, uint[] amounts);withdrawReleasedPayments();clearMarket();deleteWsFromPreviousClearing(address participant);skipDemandsWithTooLowPrice(uint currentPrice, uint demandCount);prepareNextStep();addDownPayment(uint amountToPay);isEqualLength(uint[] firstArray, uint[] secondArray);isSortedAscending(uint[] array);infinteAmountOnlyAtEnd(uint[] functionAmounts)"
SES-fortiss/SmartGridCoSimulation,projects/previousProjects/memapEtherium/res/smart_contracts/src/DoubleSidedAuctionMarket.sol,"postOffer(uint[] prices, uint[] amounts);postDemand(uint[] prices, uint[] amounts);withdrawReleasedPayments();clearMarket();deleteWsFromPreviousClearing(address participant);skipDemandsWithTooLowPrice(uint currentPrice, uint demandCount);prepareNextStep();addDownPayment(uint amountToPay);isEqualLength(uint[] firstArray, uint[] secondArray);isSortedAscending(uint[] array);infinteAmountOnlyAtEnd(uint[] functionAmounts)"
RyuuGan/sol-merger,test/contracts/GlobalComments.sol,myFunction()
CoinOffering/CoinOffering.Dapp,contracts/Corporation.sol,"getCurrentShareholders();getBalanceByAdress(address _address);getMyShareholderID();getShareholderAdressByID(uint256 _id);getMyShares();transfer(address _to, uint256 _value);getMyProposals();voteForProposal(uint256 _proposalID);countVotes(uint256 _proposalID)"
OpenSTFoundation/SimpleTokenSale,contracts/Owned.sol,Owned();isOwner(address _address);initiateOwnershipTransfer(address _proposedOwner);completeOwnershipTransfer()
dltdojo/courses,ethereum/dapps/ico/T999_SubmarineSends.sol,buyTokens(address beneficiary)
fccoelho/Curso_Blockchain,contracts/Intro-to-Solidity/openauction.sol,bid();withdraw();auctionEnd()
whachoe/eth_tutorial_game,contracts/DiceGame.sol,DiceGame();guessNumber(uint guess);reset();setMinimumBet(uint newMinimumBet);destroy()
adklempner/automte-exchange-contracts,contracts/MultiSigWallet.sol,"MultiSigWallet(address[] _owners, uint _required);addOwner(address owner);removeOwner(address owner);replaceOwner(address owner, address newOwner);changeRequirement(uint _required);submitTransaction(address destination, uint value, bytes data);confirmTransaction(uint transactionId);revokeConfirmation(uint transactionId);executeTransaction(uint transactionId);isConfirmed(uint transactionId);addTransaction(address destination, uint value, bytes data);getConfirmationCount(uint transactionId);getTransactionCount(bool pending, bool executed);getOwners();getConfirmations(uint transactionId);getTransactionIds(uint from, uint to, bool pending, bool executed)"
BeBlockTech/Anemoi,BeBlock-Master/WePowerPresaleContractAudit-master/contracts/MultiSigWallet.sol,"MultiSigWallet(address[] _owners, uint _required);addOwner(address owner);removeOwner(address owner);replaceOwner(address owner, address newOwner);changeRequirement(uint _required);submitTransaction(address destination, uint value, bytes data);confirmTransaction(uint transactionId);revokeConfirmation(uint transactionId);executeTransaction(uint transactionId);isConfirmed(uint transactionId);addTransaction(address destination, uint value, bytes data);getConfirmationCount(uint transactionId);getTransactionCount(bool pending, bool executed);getOwners();getConfirmations(uint transactionId);getTransactionIds(uint from, uint to, bool pending, bool executed)"
sponnet/allowance,app/contracts/allowance.sol,"allowance(address _mychild, uint _amount, uint _payoutperiod);requestPayout()"
SmartChainX/ChainBlockchain,Contracts/ICO/AllocatedCrowdsale.sol,"AllocatedCrowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, address _beneficiary);isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal);isCrowdsaleFull();getTokensLeft();assignTokens(address receiver, uint tokenAmount)"
QTBlockchain/SolidityNWeb3,patterns/contracts/NameRegistry.sol,getContractInfo(bytes32 name);removeContract()
Greenman28/CityCoin,CityCoin.sol,"CCProject();setFine(uint16 num);resetFine(uint16 num);main(uint16 num, uint8 point);getBalance(uint16 num);getAdres(uint16 num);getType(uint16 num);getSum(uint16 num);addCar(address adr, uint8 carType, uint16 num);checkPoint(uint8 point, uint16 num );die()"
sonm-io/core,blockchain/source/contracts/Administratable.sol,renounceOwnership();transferOwnership(address _newOwner);_transferOwnership(address _newOwner);transferAdministratorship(address _newAdministrator);_transferAdministratorship(address _newAdministrator)
MzansiRe/iMali,contracts/Controlled.sol,Controlled();transferControl(address newController)
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/ethpm/installed_contracts/tokens/contracts/eip20/EIP20Interface.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
trevorbernard/heimdal,cosigner-ethereum-token/token-contract-eth.sol,"calculateTxHash();calculateHash(address[] hashTransactions, uint[] hashValues);calculateAdminTxHash();confirmTransactionSig();confirmTransaction();confirmAdminTx(uint nonce);ownerIndexBit(address addr);getNonce();getSecurityValue();isOwner(address addr);getOwners();min(uint val1, uint val2);max(uint val1, uint val2);balanceOf(address _owner);totalSupply();freezeContract(bool freeze, uint nonce, uint8[] sigV, bytes32[] sigR, bytes32[] sigS);deleteContract(uint nonce, uint8[] sigV, bytes32[] sigR, bytes32[] sigS);deposit(address _to);revoke(bytes32 _operation);clearPending();transfer(address _from, address _to, uint _value);transfer(address _to, uint _value);confirm(bytes32 _h);confirmAndCheck(bytes32 _operation);topUp()"
orbro/eth-enablers,solidity-baby-steps-master/contracts/59_byteExtractor.sol,"ByteExtractor();getDigitFromUint(uint buint, uint8 index);kill()"
maurelian/dot-eth-js,src/test/dotEthRegistrar.sol,"ENS();owner(bytes32 node);resolver(bytes32 node);ttl(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);setTTL(bytes32 node, uint64 ttl);Deed(address _owner);setOwner(address newOwner);setRegistrar(address newRegistrar);setBalance(uint newValue, bool throwOnFailure);closeDeed(uint refundRatio);destroyDeed();state(bytes32 _hash);entries(bytes32 _hash);Registrar(ENS _ens, bytes32 _rootNode, uint _startDate);max(uint a, uint b);min(uint a, uint b);strlen(string s);isAllowed(bytes32 _hash, uint _timestamp);getAllowedTime(bytes32 _hash);trySetSubnodeOwner(bytes32 _hash, address _newOwner);startAuction(bytes32 _hash);startAuctions(bytes32[] _hashes);shaBid(bytes32 hash, address owner, uint value, bytes32 salt);newBid(bytes32 sealedBid);startAuctionsAndBid(bytes32[] hashes, bytes32 sealedBid);unsealBid(bytes32 _hash, uint _value, bytes32 _salt);cancelBid(address bidder, bytes32 seal);finalizeAuction(bytes32 _hash);transfer(bytes32 _hash, address newOwner);releaseDeed(bytes32 _hash);invalidateName(string unhashedName);eraseNode(bytes32[] labels);_tryEraseSingleNode(bytes32 label);_eraseNodeHierarchy(uint idx, bytes32[] labels, bytes32 node);transferRegistrars(bytes32 _hash);acceptRegistrarTransfer(bytes32 hash, Deed deed, uint registrationDate);DeployENS();registrarInfo()"
maurelian/eth-registrar-ens,src/test/dotEthRegistrar.sol,"ENS();owner(bytes32 node);resolver(bytes32 node);ttl(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);setTTL(bytes32 node, uint64 ttl);Deed(address _owner);setOwner(address newOwner);setRegistrar(address newRegistrar);setBalance(uint newValue, bool throwOnFailure);closeDeed(uint refundRatio);destroyDeed();state(bytes32 _hash);entries(bytes32 _hash);Registrar(ENS _ens, bytes32 _rootNode, uint _startDate);max(uint a, uint b);min(uint a, uint b);strlen(string s);isAllowed(bytes32 _hash, uint _timestamp);getAllowedTime(bytes32 _hash);trySetSubnodeOwner(bytes32 _hash, address _newOwner);startAuction(bytes32 _hash);startAuctions(bytes32[] _hashes);shaBid(bytes32 hash, address owner, uint value, bytes32 salt);newBid(bytes32 sealedBid);startAuctionsAndBid(bytes32[] hashes, bytes32 sealedBid);unsealBid(bytes32 _hash, uint _value, bytes32 _salt);cancelBid(address bidder, bytes32 seal);finalizeAuction(bytes32 _hash);transfer(bytes32 _hash, address newOwner);releaseDeed(bytes32 _hash);invalidateName(string unhashedName);eraseNode(bytes32[] labels);_tryEraseSingleNode(bytes32 label);_eraseNodeHierarchy(uint idx, bytes32[] labels, bytes32 node);transferRegistrars(bytes32 _hash);acceptRegistrarTransfer(bytes32 hash, Deed deed, uint registrationDate);DeployENS();registrarInfo()"
cgewecke/solcover,test/sources/zeppelin/MultisigWallet.sol,"MultisigWallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);clearPending()"
WingsDao/contracts,contracts/zeppelin/MultisigWallet.sol,"MultisigWallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);clearPending()"
JoinColony/solcover,test/sources/zeppelin/MultisigWallet.sol,"MultisigWallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);clearPending()"
duaraghav8/Solium,test/lib/rules/blank-lines/reject/function.sol,spam();ham();sam();normalFunc()
aragon/aragon-core,contracts/test/mocks/UnsafeRepo.sol,"canPerform(address, bytes32, uint256[])"
naveenbalani/blockchain-definitive-handbook,ethereum/contract/CrowdSourceContract.sol,"stringsEqual(string _a, string _b);fundProject( string name);stopFundRaising();getProjectStatus()"
WeiFund/WeiFund,contracts/CategoryAuction.sol,"newCampaign(uint _campaignID, address _owner, uint _fundingGoal);contribute(uint _campaignID, address _contributor, address _beneficiary, uint _amountContributed);refund(uint _campaignID, address _contributor, uint _amountRefunded);payout(uint _campaignID, uint _amountPaid);newCampaign(string _name, address _beneficiary, uint _fundingGoal, uint _expiry, address _config);contribute(uint _campaignID, address _beneficiary);refund(uint _campaignID, uint _contribution);payout(uint _campaignID);operatorCampaignID(address _operator, uint _campaignIndex);totalCampaignsBy(address _operator);totalContributionsBy(uint _campaignID, address _contributor);totalCampaigns();contributionAt(uint _campaignID, uint _contributionID);createdAt(uint _campaignID);contributionID(uint _campaignID, address _contributor, uint _contributionIndex);ownerOf(uint _campaignID);beneficiaryOf(uint _campaignID);configOf(uint _campaignID);amountRaisedBy(uint _campaignID);fundingGoalOf(uint _campaignID);expiryOf(uint _campaignID);totalContributors(uint _campaignID);isContributor(uint _campaignID, address _contributor);isOwner(uint _campaignID, address _owner);hasFailed(uint _campaignID);isSuccess(uint _campaignID);isPaidOut(uint _campaignID);totalRefunded(uint _campaignID);isRefunded(uint _campaignID);transfer_ownership(address _new_implementer);forward(address _destination, uint _value, bytes _transactionBytecode);CategoryAuction(address _weifund);bid(uint _categoryID, uint _campaignID)"
montyly/manticore,tests/ethereum/contracts/detectors/retval_crazy.sol,call();callchecked()
trailofbits/manticore,tests/ethereum/contracts/detectors/retval_crazy.sol,call();callchecked()
aragon/aragon-network-token,packages/sale/installed_contracts/zeppelin/contracts/lifecycle/Pausable.sol,emergencyStop();release()
pooleja/SolidityPlayground,contracts/zeppelin/lifecycle/Pausable.sol,emergencyStop();release()
maraoz/zeppelin-solidity,contracts/lifecycle/Pausable.sol,emergencyStop();release()
careerxon/code,new.sol,"CareerXonToken(uint _startP, uint _endP, uint _startI, uint _endI);setupPeriodForPreSale(uint _start, uint _end);setupPeriodForICO(uint _start, uint _end);buyTokens(address _sender);withdraw(uint256 _value);walunlock();wallock();getBonus(uint256 _tokens);getCurrentPeriod();tokenReserved(address _to, uint256 _value);transferunlock();transferlock()"
eris-ltd/eris-sqlsol,examples/EggTracker/contracts/eggtracker.sol,"eggtracker();isAdmin(address user);canCreate(address user);canTrade(address user);createUser(address userAddress, string name , bool adminPerm, bool createPerm, bool tradePerm);changeUserPerms(address userAddress, bool adminPerm, bool createPerm, bool tradePerm);removeUser(address userAddress);getShit();getUser(uint uid);getUserByAddress(address userAddress);getEggData(uint eggid);getHistoryEntry(uint eggid, uint eventNum);createEgg(string desc, bytes32 secretHash);transferEgg(uint eggid, address newOwner);claimEgg(uint eggid, bytes32 secret, bytes32 newSecretHash)"
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721.sol,totalSupply();tokenByIndex(uint256 _index);name();symbol();tokenURI(uint256 _tokenId)
gnosis/gnosis-contracts,contracts/Oracles/MajorityOracleFactory.sol,createMajorityOracle(Oracle[] memory oracles)
airalab/DAO-IPCI,contracts/creator/CreatorAuditor.sol,"create(address _operator, address _token, address _holder);version();abi()"
Project-WikiGit/WikiGit,dev/contracts/repo_handler.sol,RepoHandler(address _mainAddr);setPersonalHash(bytes _hash)
acebusters/safe-token-sale,contracts/ownership/Pausable.sol,pause();unpause()
SilentCicero/wafr,src/tests/solidityTests/gasUsage/examples/tests/SixtyPercentBoardRoom_test.sol,"newProposal(address _board, string _name, address _proxy, uint _debatePeriod, address _destination, uint _value, bytes _calldata);vote(address _board, uint _proposalID, uint _position);execute(address _board, uint _proposalID, bytes _calldata);setup();test_openRegistry();test_SixtyPercentRules();test_newProposalAndNotEnoughVotes();test_YayIsOverSixtyPercent();test_YayIsNotOverSixtyPercent()"
mothershipcx/contracts,contracts/test/SITMock.sol,SITMock(address _tokenFactory);getBlockNumber();setMockedBlockNumber(uint _b)
suntechsoft/dmarket-smartcontract,contracts/v0.1/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
eris-ltd/eris-sqlsol,examples/EggTracker/contracts/stdlib/errors.sol,""
bkrem/educhain,chain/contracts/TaskManager.sol,"registerActionEvent(bytes32 actionType);getTaskAtIndex(uint _idx);getTaskAddress(bytes32 _id);getTaskKeyAtIndex(uint _idx);getTaskFromToken(bytes32 token);getTaskListSize();markTaskCompleted(address taskAddr, bytes32 status)"
disruptivewidgets/pay2play-react,src/smart-contract/_/factory.sol,Factory();deployTokenContract();deployRegistrarContract();getContract(uint index)
vanderthiel/techdays-2017-demo,identity/contracts/DelegatedIdentity.sol,"DelegatedIdentity(address delegate);addClaim(string claim);checkClaim(string publicKey, string claim);addRequester(address requester, string publicKey)"
trailofbits/greenhorn,csaw-2017/ETHERSNOOB/sources/ethersnoob5.sol,"set(uint data, uint data2, uint data3);get_flag();get()"
GazeCoin/GazeCoinTokenContract,test/GazeCoinCrowdsale.sol,"balanceOf(address account);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value);allowance(address owner, address spender);Owned();transferOwnership(address _newOwner);acceptOwnership();add(uint a, uint b);sub(uint a, uint b);mul(uint a, uint b);div(uint a, uint b);GazeCoin();balanceOf(address account);transfer(address to, uint tokens);approve(address spender, uint tokens);transferFrom(address from, address to, uint tokens);allowance(address owner, address spender );mint(address to, uint tokens);multiMint(address[] to, uint[] amount);GazeCoinCrowdsale();addToWhitelist(address[] addresses, uint[] amounts);addPrecommitment(address participant, uint tokens, uint ethers);proxyPayment(address contributor);finalise();transfer(address to, uint tokens);transferFrom(address from, address to, uint tokens)"
drupalnomad/ethereum-contracts,private_ledger.sol,PrivateLedger();addMember(address member);removeMember(address member);getMembers();addTransaction(bytes transaction);numTransactions()
gnosis/gnosis-contracts,contracts/Events/CategoricalEvent.sol,redeemWinnings();getEventHash()
adklempner/solidity-license,contracts/zeppelin/token/TokenTimelock.sol,"TokenTimelock(ERC20Basic _token, address _beneficiary, uint _releaseTime);claim();release()"
adamdossa/ProfitSharingContract,installed_contracts/zeppelin/contracts/token/TokenTimelock.sol,"TokenTimelock(ERC20Basic _token, address _beneficiary, uint _releaseTime);claim();release()"
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app30-multiple_type_tuple_returns/app30.sol,getInts();getBools();getBytes();getInterMixed()
eris-ltd/eris,tests/jobs_fixtures/app30-multiple_type_tuple_returns/app30.sol,getInts();getBools();getBytes();getInterMixed()
monax/monax,tests/jobs_fixtures/app30-multiple_type_tuple_returns/app30.sol,getInts();getBools();getBytes();getInterMixed()
eris-ltd/eris-cli,tests/jobs_fixtures/app30-multiple_type_tuple_returns/app30.sol,getInts();getBools();getBytes();getInterMixed()
monax/cli,tests/jobs_fixtures/app30-multiple_type_tuple_returns/app30.sol,getInts();getBools();getBytes();getInterMixed()
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app30-multiple_type_tuple_returns/app30.sol,getInts();getBools();getBytes();getInterMixed()
iam-dev/ERC23,installed_contracts/zeppelin-solidity/contracts/token/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
robmyers/artworld-ethereum,dapps/proof-of-work-bitmap/contracts/ProofOfWorkBitmap.sol,"max(uint a, uint b);difficulty()"
suntechsoft/dmarket-smartcontract,contracts/v0.1/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
tomaaron/raiden,raiden/smart_contracts/StandardToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
Dsummers91/family-wallet-etherum-contract,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
ryepdx/etherlab,lib/base/ownedApiEnabled.sol,apiAuthorized();setApiAddress(address newApi);remove()
ryepdx/etherlab,lib/base/action.sol,execute();remove();_execute()
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs8.sol,"addThing(string description, string url, bytes32 filehash, bytes32 filename)"
eris-ltd/eris,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs8.sol,"addThing(string description, string url, bytes32 filehash, bytes32 filename)"
monax/monax,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs8.sol,"addThing(string description, string url, bytes32 filehash, bytes32 filename)"
eris-ltd/eris-cli,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs8.sol,"addThing(string description, string url, bytes32 filehash, bytes32 filename)"
monax/cli,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs8.sol,"addThing(string description, string url, bytes32 filehash, bytes32 filename)"
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs8.sol,"addThing(string description, string url, bytes32 filehash, bytes32 filename)"
pipermerriam/populus,docs/assets/Ownable.sol,Ownable();transferOwnership(address newOwner)
iam-dev/ERC23,test/helpers/ReceiverMock.sol,foo();saveTokenValues()
Spreadway/core,eth/NeuroProtect.sol,"owned();changeOwner(address _candidate);confirmOwner();balanceOf(address who);transfer(address to, uint value);allowance(address owner, address spender);transferFrom(address from, address to, uint value);approve(address spender, uint value);setConfirmer(address _confirmer);setToKnown(address _who);setEnableAllTransfers(bool _enable);Crowdsale();depositUSD(address _who, uint _valueUSD);mintTokens(address _who, uint _valueUSD, uint _valueWei);timeToFinishTokensSale();finishTokensSale(uint _investorsToProcess);withdrawBack();Token();balanceOf(address who);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);approve(address _spender, uint _value);allowance(address _owner, address _spender);burn(address _who, uint _value);migrateFrom(address _from, uint _value);NeuroProtect();migrate();setMigrationAgent(address _agent)"
LOOMIA/loomia,tiletoken/src/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address newAddress)
ChicoBitcoinJoe/MeDao,contracts/MeDaoFactory.sol,""
AragonOne/zeppelin-solidity,contracts/lifecycle/Killable.sol,kill()
TrueBitFoundation/webasm-solidity,contracts/dispute.sol,"newGame(address s, address v, bytes32 spec, uint);status(bytes32 dispute_id);postPhases(bytes32 dispute_id, bytes32[13] phases);selectPhase(bytes32 dispute_id, uint q);checkProof(bytes32[] pr, bytes32[] pr2);judgeDispute(bytes32 dispute_id, bytes32[] _proof, bytes32[] _proof2, bytes32 vm_, bytes32 op, uint[4] regs, bytes32[10] roots, uint[4] pointers);newGame(address s, address v, bytes32 spec, uint when);status(bytes32 id);postPhases(bytes32 dispute_id, bytes32[] phases, address res);selectPhase(bytes32 dispute_id, uint q);newGame(address s, address v, bytes32 spec, uint);status(bytes32 dispute_id);transition(bytes32 state, uint q);judge(bytes32 dispute_id, bytes32 state, uint q);checkProof(bytes32[] pr, bytes32[] pr2);transition(bytes32 init, uint q);newGame(address s, address v, bytes32 spec, uint when);init(bytes32 dispute_id, address res, bytes32 first, bytes32 last, uint steps, uint size);status(bytes32 id);report(bytes32 id, uint i1, uint i2, bytes32[] arr);query(bytes32 id, uint i1, uint i2, uint num);newGame(address s, address v, bytes32 spec, uint when);init(bytes32 id, bytes32 da, bytes32 db, uint when);status(bytes32 id);init(bytes32 id, bytes32[] lst);status(bytes32 id);init(bytes32 id, bytes32 name, bytes32 data);requireFile(bytes32 id, bytes32 hash, Storage st);enough(bytes32 id);uploadFile(bytes32 id, uint num, bytes32 file_id, bytes32[] name_proof, bytes32[] data_proof, uint file_num);checkProof(bytes32 hash, bytes32 root, bytes32[] proof, uint loc);getLeaf(bytes32[] proof, uint loc);getRoot(bytes32[] proof, uint loc);fill(bytes32 id);good(bytes32 id, uint when);good(bytes32 id, uint when);status(bytes32 id)"
PeculiumPCL/Peculium,contracts/v0.6/Bounty.sol,"Bounty(uint256 amount);payBountyManager();airdropsTokens(address[] _vaddr, uint256[] _vamounts);payBounties(address[] _vaddr, uint256[] _vamounts)"
justmake/smart_contract,drafts/JustmakeNewAccountsIssuer.sol,JustmakeNewAccountsIssuer();issue(address _to);updateIssuer(address _newIssuer);updateJMAmount(uint256 _value);updateWEIAmount(uint256 _value)
aragon/aragon-network-token,packages/sale/test/helpers/AragonTokenSaleMock.sol,getBlockNumber();setMockedBlockNumber(uint _b);setMockedTotalCollected(uint _totalCollected)
AlphaDinoRC/rockchain,contracts/Ownable.sol,Ownable();transferOwnership(address newOwner)
mingocoin/contracts,contracts/MingoToken.sol,""
danielnovy/dapp-poc-starter,contracts/UserRegistry.sol,"register(address addr, string name, uint8 role, string photoUrl)"
mothershipcx/contracts,etherscan/MiniMeToken.sol,"totalSupply();totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);Controlled();changeController(address _newController);Burnable();changeBurner(address _newBurner);totalSupplyAt(uint _blockNumber);generateTokens(address _owner, uint _amount);destroyTokens(address _owner, uint _amount);enableTransfers(bool _transfersEnabled);claimTokens(address _token);proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);receiveApproval(address _from, uint256 _amount, address _token, bytes _data);transfer(address _to, uint256 _amount);balanceOf(address _owner);approve(address _spender, uint256 _amount);totalSupply();balanceOfAt(address _owner, uint _blockNumber);totalSupplyAt(uint _blockNumber);enableTransfers(bool _transfersEnabled);isContract(address _addr);min(uint a, uint b);getBlockNumber();claimTokens(address _token)"
TrueBitFoundation/webasm-solidity,contracts/onchain.sol,"setVM(bytes32[10] roots, uint[4] pointers);hashVM();hashMachine();getLeaf(uint loc);setLeaf(uint loc, uint v);checkWriteAccess(uint loc, uint /* hint */);checkInputDataAccess(uint /* loc2 */, uint loc);checkReadAccess(uint loc, uint hint);checkInputNameAccess(uint loc2, uint loc);getRoot(uint loc);getCode(uint loc);getStack(uint loc);getCallStack(uint loc);getCallTable(uint loc);getCallTypes(uint loc);getMemory(uint loc);getGlobal(uint loc);getInputSize(uint loc);getInputName(uint loc, uint loc2);setInputName(uint loc, uint loc2, uint v);setInputSize(uint loc, uint v);setInputFile(uint loc, bytes32 v);setNthByte(uint a, uint n, uint8 bte);setInputData(uint loc, uint loc2, uint v);getInputData(uint loc, uint loc2);createInputData(uint loc, uint sz);setCallStack(uint loc, uint v);setMemory(uint loc, uint v);setStack(uint loc, uint v);setGlobal(uint loc, uint v);setCallTable(uint loc, uint v);setCallType(uint loc, uint v);getPC();getMemsize();getStackPtr();getCallPtr();getIreg();getOp();setMemsize(uint v);setIreg(uint v);setPC(uint v);setStackPtr(uint v);setCallPtr(uint v);setOp(bytes32 op);makeZero(uint n);setStackSize(uint sz);setCallStackSize(uint sz);setGlobalsSize(uint sz);setMemorySize(uint sz);setTableSize(uint sz);setTableTypesSize(uint sz)"
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.5/deleteDynamicArray.sol,"addUser(uint id, byte rights);resetState();bla(string memory bal)"
dltdojo/courses,ethereum/solidity/T280_DecompilerPorosity.sol,setState(uint _value);setState(uint _value)
silasdavis/eris-db,tests/jobs_fixtures/app25-multiple_contracts_single_factory/contracts/Factory.sol,set(uint x);get();create();last()
silasdavis/burrow,tests/jobs_fixtures/app25-multiple_contracts_single_factory/contracts/Factory.sol,set(uint x);get();create();last()
eris-ltd/eris-db,tests/jobs_fixtures/app25-multiple_contracts_single_factory/contracts/Factory.sol,set(uint x);get();create();last()
orbro/eth-enablers,solidity-baby-steps-master/contracts/46_ping_via_send.sol,Ping(address _pongAddress);getBalance();getSendVal();setPongAddress(address _pongAddress);getPongAddress();getAddress();kill()
MzansiRe/iMali,contracts/MiniMeToken.sol,"receiveApproval(address from, uint256 _amount, address _token, bytes _data);transfer(address _to, uint256 _amount);balanceOf(address _owner);approve(address _spender, uint256 _amount);totalSupply();balanceOfAt(address _owner, uint _blockNumber);totalSupplyAt(uint _blockNumber);enableTransfers(bool _transfersEnabled);isContract(address _addr);min(uint a, uint b);claimTokens(address _token)"
redsquirrel/augur-core,src/extensions/MarketCreation.sol,"createScalarMarket(Branch _branch, uint256 _endTime, uint256 _feePerEthInWei, Cash _denominationToken, int256 _minDisplayPrice, int256 _maxDisplayPrice, address _automatedReporterAddress, bytes32 _topic);createCategoricalMarket(Branch _branch, uint256 _endTime, uint8 _numOutcomes, uint256 _feePerEthInWei, Cash _denominationToken, address _automatedReporterAddress, bytes32 _topic)"
cniemann/etherpricebet,InactiveTests/TestBet_PlaceBet.sol,beforeAll();testPlaceBet();testChangeBet()
gnosis/gnosis-contracts,contracts/Oracles/SignedMessageOracle.sol,"replaceSigner(address newSigner, uint _nonce, uint8 v, bytes32 r, bytes32 s);setOutcome(int _outcome, uint8 v, bytes32 r, bytes32 s);isOutcomeSet();getOutcome()"
cgewecke/solcover,test/sources/conditional/multiline-alternate.sol,a()
JoinColony/solcover,test/sources/conditional/multiline-alternate.sol,a()
blockgeeks/workshop,src/auction/auction.sol,bid();end()
iam-dev/ERC23,installed_contracts/zeppelin-solidity/test/mocks/ERC23TokenMock.sol,"tokenFallback(address _from, uint256 _value, bytes _data)"
pooleja/SolidityPlayground,contracts/SimpleFund.sol,"withdrawToken(ERC20 ownedToken, uint value)"
adridadou/eth-contract-api,src/test/resources/ContractDefinitions.sol,"owned();getOwner();kill();getWarrantyPrice(string productId, uint startDate, uint endDate, uint productPrice);isInsurance(address insurance);createInsurance(string name, address priceCalculator);setInsuranceState(address insuranceAddress, InsuranceStatus status);getInsurance(uint index);getInsuranceByAddress(address insuranceAddress);getInsuranceStatus(address insuranceAddress);getWarrantyPrice(address insuranceAddress, string productId, uint startDate, uint endDate, uint productPrice);getInsuranceBalance(address insuranceAddress);increaseSalesBalance(address insurance, uint amount);decreaseSalesBalance(address insurance, uint amount);increasePaymentsBalance(address insurance, uint amount);decreasePaymentsBalance(address insurance, uint amount);increaseClaimsBalance(address insurance, uint amount);decreaseClaimsBalance(address insurance, uint amount);RetailerManager(address _insuranceManager);isInsurance(address insurance);requestRegistration(string companyName, address insurance);getInsurance(address retailer, uint idx);getRequestState(address retailer, address insurance);setRequestState(address retailer, RetailerStatus status);getRetailerStatus(address retailer, address insurance);getRetailerStatus(address retailer);getRetailer(uint index, address insuranceAddress);getRetailerByAddress(address retailerAddress, address insuranceAddress);getRetailerBalances(address retailer, address insurance);getRetailerTotalBalances(address retailerAddress);increaseSalesBalance(address retailer, address insurance, uint price);decreaseSalesBalance(address retailer, address insurance, uint price);increasePaymentsBalance(address retailer, address insurance, uint amount);decreasePaymentsBalance(address retailer, address insurance, uint amount);increaseClaimsBalance(address retailer, address insurance, uint amount);decreaseClaimsBalance(address retailer, address insurance, uint amount);Insurechain(address _insuranceManager, address _retailerManager);isInsurance(address insurance);isRegisteredRetailer(address insurance, address retailer);getRole(address user);getWarrantyQuote(string productId, address insurance, uint startDate, uint endDate, uint productPrice);createWarranty(string productId, string serialNumber, address insurance, uint startDate, uint endDate, uint productPrice);confirmWarranty(string productId, string serialNumber, string policyNumber);cancelWarranty(string productId, string serialNumber, address insuranceAddress);getWarranty(string productId, string serialNumber, address insurance);getWarrantyByIndex(uint idx);isWarrantyValid(address insurance, string productId, string serialNumber);createClaim(string productId, string serialNumber, address insurance, uint amount, string description);getClaim(string productId, string serialNumber, address insurance, uint idx)"
Vourhey/learning-center,sol/Lesson_4.sol,execute(ShareSale _shareSale)
ageyev/Solidity.Examples,EtherBank.sol,EtherBank();weiToEther(uint _wei);etherToWei(uint _ether);depositEther();withdraw(uint _ethSumToWithdraw);ownerWithdraw(uint _sum)
daostack/daostack,contracts/schemes/GenericSchemeMultiCall.sol,"executeProposal(bytes32 _proposalId, int256 _decision);execute(bytes32 _proposalId)"
mixbytes/storiqa_ico,contracts/crowdsale/SimpleCrowdsaleBase.sol,"SimpleCrowdsaleBase(address token);buy();buyInternal(address investor, uint payment, uint extraBonuses);finish();mustApplyTimeCheck(address /*investor*/, uint /*payment*/);getCurrentTime();getMaximumFunds();getMinimumFunds();getStartTime();getEndTime();getMinInvestment();calculateTokens(address investor, uint payment, uint extraBonuses);getWeiCollected();getTokenMinted()"
Storiqa/ico_smart_contract,contracts/crowdsale/SimpleCrowdsaleBase.sol,"SimpleCrowdsaleBase(address token);buy();buyInternal(address investor, uint payment, uint extraBonuses);finish();mustApplyTimeCheck(address /*investor*/, uint /*payment*/);getCurrentTime();getMaximumFunds();getMinimumFunds();getStartTime();getEndTime();getMinInvestment();calculateTokens(address investor, uint payment, uint extraBonuses);getWeiCollected();getTokenMinted()"
daostack/daostack,contracts/schemes/Forwarder.sol,"initialize(Avatar _avatar, uint256 _expirationTime);unregisterSelf()"
adamdossa/ProfitSharingContract,contracts/ProfitSharing.sol,ProfitSharing(address _miniMeToken);depositDividend();claimDividend(uint256 _dividendIndex);claimDividendAll();recycleDividend(uint256 _dividendIndex);getNow()
Neufund/Contracts,contracts/faucet/IFaucet.sol,minimum_balance();withdraw()
trevorbernard/heimdal,cosigner-ethereum-token/token-contract.sol,"getOwner();allowance(address _owner, address _spender);balanceOf(address _owner);totalSupply();TokenContract(address _owner, string _name, string _symbol, uint8 _decimals);updateOwner(address _owner);approve(address _spender, uint256 _value);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);transferOnBehalf(address _from, address _to, uint256 _value);calculateTxHash();calculateHash(address[] hashTransactions, uint[] hashValues);calculateAdminTxHash();confirmTransactionSig();confirmTransaction();confirmAdminTx(uint nonce);ownerIndexBit(address addr);isOwner(address addr);getNonce();getSecurityValue();getOwners();balanceOf(address _owner);totalSupply();TokenAdminContract(address _admin, address[] _owners, uint _required, uint _securityValue);deleteContract(uint nonce, address newAdminContract, uint8[] sigV, bytes32[] sigR, bytes32[] sigS);deposit(address _from, address _to, uint256 _value);calculateTxHash();calculateHash(address[] hashTransactions, uint[] hashValues);calculateAdminTxHash();confirmTransactionSig();confirmTransaction();confirmAdminTx(uint nonce);ownerIndexBit(address addr);getNonce();getSecurityValue();isOwner(address addr);getOwners();min(uint val1, uint val2);max(uint val1, uint val2);balanceOf(address _owner);totalSupply();freezeContract(bool freeze, uint nonce, uint8[] sigV, bytes32[] sigR, bytes32[] sigS);deleteContract(uint nonce, uint8[] sigV, bytes32[] sigR, bytes32[] sigS);deposit(address _to, uint256 _value);revoke(bytes32 _operation);clearPending();transfer(address _from, address _to, uint _value);transfer(address _to, uint _value);confirm(bytes32 _h);confirmAndCheck(bytes32 _operation)"
melonproject/protocol,contracts/fund/shares/SharesToken.sol,"transfer(address, uint256);approve(address, uint256);increaseAllowance(address, uint256);decreaseAllowance(address, uint256)"
ledgerlabs/toy-state-channels,contracts/CompareOp.sol,"isSuperior(bytes32[] _new, bytes32[] _old);isFinal(bytes32[] _state)"
kr8os/token-sale-contracts,contracts/Token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
LOOMIA/loomia,ethereum/contracts/Token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
lserafin/Tic-tac-toe,test/TestTicTacToeGame.sol,testInitialBoardUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
stanta/darfchain,ICO/contracts/CrowdsaleToken.sol,"CrowdsaleToken(string _name, string _symbol, uint _initialSupply, uint _decimals, bool _mintable);releaseTokenTransfer();canUpgrade();setTokenInformation(string _name, string _symbol)"
EMAXio/cosigner,cosigner-ethereum-token-storage/SolidityContracts/Old/EthStorageContract.sol,"calculateTxHash();calculateHash(address[] hashTransactions, uint[] hashValues);calculateAdminTxHash();confirmTransactionSig();confirmTransaction();confirmAdminTx(uint nonce);ownerIndexBit(address addr);getNonce();getSecurityValue();isOwner(address addr);getOwners();min(uint val1, uint val2);max(uint val1, uint val2);balanceOf(address _owner);totalSupply();freezeContract(bool freeze, uint nonce, uint8[] sigV, bytes32[] sigR, bytes32[] sigS);deleteContract(uint nonce, uint8[] sigV, bytes32[] sigR, bytes32[] sigS);deposit(address _to);revoke(bytes32 _operation);clearPending();transfer(address _from, address _to, uint _value);transfer(address _to, uint _value);confirm(bytes32 _h);confirmAndCheck(bytes32 _operation);topUp()"
Braveno/cosigner,cosigner-ethereum-token-storage/SolidityContracts/Old/EthStorageContract.sol,"calculateTxHash();calculateHash(address[] hashTransactions, uint[] hashValues);calculateAdminTxHash();confirmTransactionSig();confirmTransaction();confirmAdminTx(uint nonce);ownerIndexBit(address addr);getNonce();getSecurityValue();isOwner(address addr);getOwners();min(uint val1, uint val2);max(uint val1, uint val2);balanceOf(address _owner);totalSupply();freezeContract(bool freeze, uint nonce, uint8[] sigV, bytes32[] sigR, bytes32[] sigS);deleteContract(uint nonce, uint8[] sigV, bytes32[] sigR, bytes32[] sigS);deposit(address _to);revoke(bytes32 _operation);clearPending();transfer(address _from, address _to, uint _value);transfer(address _to, uint _value);confirm(bytes32 _h);confirmAndCheck(bytes32 _operation);topUp()"
EMAXio/heimdal,cosigner-ethereum-token-storage/SolidityContracts/Old/EthStorageContract.sol,"calculateTxHash();calculateHash(address[] hashTransactions, uint[] hashValues);calculateAdminTxHash();confirmTransactionSig();confirmTransaction();confirmAdminTx(uint nonce);ownerIndexBit(address addr);getNonce();getSecurityValue();isOwner(address addr);getOwners();min(uint val1, uint val2);max(uint val1, uint val2);balanceOf(address _owner);totalSupply();freezeContract(bool freeze, uint nonce, uint8[] sigV, bytes32[] sigR, bytes32[] sigS);deleteContract(uint nonce, uint8[] sigV, bytes32[] sigR, bytes32[] sigS);deposit(address _to);revoke(bytes32 _operation);clearPending();transfer(address _from, address _to, uint _value);transfer(address _to, uint _value);confirm(bytes32 _h);confirmAndCheck(bytes32 _operation);topUp()"
innovator256/meteor-dapp-boilerplate-semanticUI,app/client/lib/contracts/MultiplyContract.sol,multiply(uint a)
SilentCicero/meteor-dapp-boilerplate,app/client/lib/contracts/MultiplyContract.sol,multiply(uint a)
darentuzi/aequalis,client/lib/contracts/MultiplyContract.sol,multiply(uint a)
jashans98/dwikileaks,app/contracts/Leak.sol,"Leak();fetchHash(uint i);addSubmittal(bytes ipfs_hash, address toaddr);fetchRecentSubmittals()"
prashantpawar/truffle,test/scenarios/solidity_testing/TestWithBalance.sol,testInitialBalance()
anniemwu/chainge,node_modules/truffle/test/scenarios/solidity_testing/TestWithBalance.sol,testInitialBalance()
hsavit1/gosofi_webpage,node_modules/truffle/test/scenarios/solidity_testing/TestWithBalance.sol,testInitialBalance()
DigixGlobal/truffle,test/scenarios/solidity_testing/TestWithBalance.sol,testInitialBalance()
DRI-project/RICO,contracts/PoD.sol,PoD();donate();resetWeiBalance(address _user);getBalanceOfWei(address _user);getTokenPrice();getCapOfToken();getCapOfWei();getStartTime();getEndTime();isPoDStarted();isPoDEnded();processDonate(address _user);getBalanceOfToken(address _user)
eris-ltd/eris-db,tests/jobs_fixtures/app52-proposal-execute/contract.sol,addFoobar(uint n);getFoobar()
mhhf/dapple,test/_fixtures/testenv/deploy_package/src/sol/SimpleStorage.sol,ConstructorContract(uint arg);set(uint x);get()
nexusdev/dapple,test/_fixtures/testenv/deploy_package/src/sol/SimpleStorage.sol,ConstructorContract(uint arg);set(uint x);get()
Pavel-DV/ChronoMint,old/ChronoMint.sol,"getAddress(string name);isCBE(address key);getValue(string name);setAddress(string name, address value);setValue(string name, uint value);setContractValue(address subject, string name, uint value);getLOCbyID(uint _id);addLOCtoLHT(address laborOfferingContract, address laborHourToken);approveContract(address newContract);ChronoMint(address _tc, address _rc, address _ec)"
bshevchenko/ChronoMint,old/ChronoMint.sol,"getAddress(string name);isCBE(address key);getValue(string name);setAddress(string name, address value);setValue(string name, uint value);setContractValue(address subject, string name, uint value);getLOCbyID(uint _id);addLOCtoLHT(address laborOfferingContract, address laborHourToken);approveContract(address newContract);ChronoMint(address _tc, address _rc, address _ec)"
pipermerriam/populus,tests/fixtures/owned.sol,Owned()
ryepdx/ethereum-deprecationsafe-proposal,DeprecationSafe.sol,""
melonproject/protocol,contracts/engine/AmguConsumer.sol,__chargeAmgu(uint256 _gasUsed);__refundExtraEther(uint256 _totalEthCharged)
mixbytes/storiqa_ico,contracts/security/ArgumentsChecker.sol,""
Storiqa/ico_smart_contract,contracts/security/ArgumentsChecker.sol,""
mingocoin/contracts,contracts/MintableToken.sol,"mint(address _to, uint256 _amount)"
hunterlong/textmessage.eth,example.sol,"sendText(string phoneNumber, string textBody);costWei();example();deposit();sendMsg()"
grxy/SolarEclipseToken,contracts/SolarEclipseToken.sol,"balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);ownerWithdraw();SolarEclipseToken()"
TrueBitFoundation/webasm-solidity,contracts/alu.sol,"handleALU(uint hint, uint r1, uint r2, uint r3, uint ireg)"
BSDStudios/parity,js/src/contracts/snippets/standard-token.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
nipunn1313/parity,js/src/contracts/snippets/standard-token.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
destenson/ethcore--parity,js-old/src/contracts/snippets/standard-token.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
immartian/musicoin,js/src/contracts/snippets/standard-token.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
pdaian/parity,js/src/contracts/snippets/standard-token.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
crypto-coder/Tokens,Token_Contracts/contracts/StandardToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
jesuscript/parity,js/src/contracts/snippets/standard-token.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
chrisdotn/jsmnSol,test/TestHelpers.sol,testIntParser();testIntParserOneDecimal();testIntParserTwoDecimal();testIntParserNegative()
JackBekket/Kort,Sample.sol,owned();transferOwnership(address newOwner)
bloodstalker/scrypt-interactive,contracts/verify.sol,"claimComputation(bytes _input, bytes _output, uint steps);query(uint session, uint step);respond(uint session, uint step, bytes32 hash);performStepVerification(uint session, bytes preValue, bytes postValue, bytes proofs);performStepVerificationSpecific(VerificationSession storage session, uint step, bytes preState, bytes postState, bytes proof);isInitiallyValid(VerificationSession storage session);timeout(uint sessionId);challengerConvicted(uint session);claimantConvicted(uint session);disable(uint session)"
Cryptonomica/cryptonomica,src/main/webapp/cryptoshares/contracts/xEUR-MockUp.sol,"add(uint256 a, uint256 b);sub(uint256 a, uint256 b);mul(uint256 a, uint256 b);div(uint256 a, uint256 b);mod(uint256 a, uint256 b);onTokenTransfer(address from, uint256 amount, bytes calldata data);transferFrom(address _from, address _to, uint256 _value);transfer(address _to, uint256 _value);transferAndCall(address _to, uint256 _value, bytes memory _extraData);transferAllAndCall(address _to, bytes calldata _extraData);approve(address _spender, uint256 _value);approve(address _spender, uint256 _currentValue, uint256 _value);giveMeTokens(uint _value)"
daostack/daostack,contracts/test/GlobalConstraintMock.sol,"setConstraint(bytes32 method, bool pre, bool post);pre(address, bytes32, bytes32 method);post(address, bytes32, bytes32 method);when()"
nud3l/verifying-computation-solidity,contracts/Arbiter.sol,"enableService();disableService();requestComputation(string _input1, string _input2, uint _operation, uint _numVerifiers);executeComputation();receiveResults(string _result, uint256 _computationId);compareResults();requestIndex();receiveIndex(uint _index1, uint _index2, uint _operation, uint256 _computationId, bool _end);setJudge(address _judge);updateStatus(uint newStatus, uint computationId);getStatus(address _requester);getCurrentSolver(address _requester);stringToUint(string s);stringsEqual(string _a, string _b);rand(uint min, uint max)"
Lunyr/crowdsale-contracts,contracts/ERC20.sol,"balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value)"
yampi1/CrystalMines,game.sol,upgradeReactor();upgradeCrystalMine();Mine();Collect();newPlayer();Game()
Opus-foundation/contracts,contracts/SafeMath.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b)"
ProjectEntropy/contracts,contracts/Entropy.sol,"Entropy();buyTokens();changeSafetyLimit(uint _new_limit);setGuardian(address _person, bool _is_guardian);isGuardian(address _citizen);isCitizen(address _citizen)"
orbro/eth-enablers,ethereum-examples-master/solidity/KrakenPriceTicker.sol,"KrakenPriceTicker();__callback(bytes32 myid, string result, bytes proof);update();kill()"
Majoolr/ethereum-libraries,VestingLib/truffle/contracts/VestingLibETHTestContract.sol,"initializeETHBalance();registerUser(address _registrant, uint256 _vestAmount, uint256 _bonus);registerUsers(address[] _registrants, uint256 _vestAmount, uint256 _bonus);unregisterUser(address _registrant);unregisterUsers(address[] _registrants);swapRegistration(address _replacementRegistrant);withdrawETH();sendETH(address _beneficiary);ownerWithdrawExtraETH();getOwner();getTotalSupply();getContractBalance();getIsToken();getStartTime();getEndTime();getNumRegistered();getTimeInterval();getPercentPerInterval();getPercentReleased();getHasWithdrawn(address _participant);getVestingAmount(address _participant);getBonusAmount(address _participant)"
TrueBitFoundation/webasm-solidity,contracts/offchain.sol,"checkReadAccess(uint /* loc */, uint /* hint */);checkWriteAccess(uint /* loc */, uint /* hint */);checkInputDataAccess(uint /* loc */, uint /* hint */);checkInputNameAccess(uint /* loc */, uint /* hint */);setStackSize(uint sz);setCallStackSize(uint sz);setGlobalsSize(uint sz);setMemorySize(uint sz);setTableSize(uint sz);setTableTypesSize(uint sz);getCode(uint loc);getStack(uint loc);getCallStack(uint loc);setCallStack(uint loc, uint v);getCallTable(uint loc);getCallTypes(uint loc);getMemory(uint loc);setMemory(uint loc, uint v);setStack(uint loc, uint v);getGlobal(uint loc);setGlobal(uint loc, uint v);setCallTable(uint loc, uint v);setCallType(uint loc, uint v);getInputSize(uint loc);getInputName(uint loc, uint loc2);getInputData(uint loc, uint loc2);createInputData(uint loc, uint sz);setInputSize(uint loc, uint v);setInputName(uint loc, uint loc2, uint v);setInputData(uint loc, uint loc2, uint v);getPC();getMemsize();setMemsize(uint v);getStackPtr();getCallPtr();getIreg();setIreg(uint v);setPC(uint v);setStackPtr(uint v);setCallPtr(uint v);getOp();setOp(bytes32 op)"
papyrusglobal/smartcontracts,contracts/common/TokenVesting.sol,release(ERC20 _token);revoke(ERC20 _token);releasableAmount(ERC20 _token);vestedAmount(ERC20 _token)
aragon/aragon-core,contracts/apps/AppProxyUpgradeable.sol,implementation();proxyType()
eris-ltd/eris-db,tests/jobs_fixtures/app50-set-storage-zero/storageIssueWithZero.sol,setInt(int x);setIntToZero();getInt();setUint(uint x);setUintToZero();getUint()
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.5/ERC20.sol,"name();symbol();decimals();totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
DonorToken/DonorToken,test/helpers/InsecureTargetBounty.sol,checkInvariant();deployContract()
s-tikhomirov/solar-token,contracts/Voting.sol,assignTestAddresses(bool isRpc);assignRoles();Voting(bool isRpc);withdrawBeforeVoting(uint _amount);startVoting();approve();closeFailedVotingAndWithdraw();closeFailedInstallationAndWithdraw();withdraw(uint amount);withdrawFirst();auditConfirm();withdrawSecond();hasApproved(address addr)
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app31-memory_and_storage_arrays_dynamic_forms_static_types/array.sol,intCallWithArray(uint8[4] someUintz);bytesCallWithArray(bytes32[4] someBytez);boolCallWithArray(bool[4] someBoolz);addressCallWithArray(address[3] someAddressz);intMemoryArray();bytesMemoryArray();boolMemoryArray()
eris-ltd/eris,tests/jobs_fixtures/app31-memory_and_storage_arrays_dynamic_forms_static_types/array.sol,intCallWithArray(uint8[4] someUintz);bytesCallWithArray(bytes32[4] someBytez);boolCallWithArray(bool[4] someBoolz);addressCallWithArray(address[3] someAddressz);intMemoryArray();bytesMemoryArray();boolMemoryArray()
monax/monax,tests/jobs_fixtures/app31-memory_and_storage_arrays_dynamic_forms_static_types/array.sol,intCallWithArray(uint8[4] someUintz);bytesCallWithArray(bytes32[4] someBytez);boolCallWithArray(bool[4] someBoolz);addressCallWithArray(address[3] someAddressz);intMemoryArray();bytesMemoryArray();boolMemoryArray()
eris-ltd/eris-cli,tests/jobs_fixtures/app31-memory_and_storage_arrays_dynamic_forms_static_types/array.sol,intCallWithArray(uint8[4] someUintz);bytesCallWithArray(bytes32[4] someBytez);boolCallWithArray(bool[4] someBoolz);addressCallWithArray(address[3] someAddressz);intMemoryArray();bytesMemoryArray();boolMemoryArray()
monax/cli,tests/jobs_fixtures/app31-memory_and_storage_arrays_dynamic_forms_static_types/array.sol,intCallWithArray(uint8[4] someUintz);bytesCallWithArray(bytes32[4] someBytez);boolCallWithArray(bool[4] someBoolz);addressCallWithArray(address[3] someAddressz);intMemoryArray();bytesMemoryArray();boolMemoryArray()
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app31-memory_and_storage_arrays_dynamic_forms_static_types/array.sol,intCallWithArray(uint8[4] someUintz);bytesCallWithArray(bytes32[4] someBytez);boolCallWithArray(bool[4] someBoolz);addressCallWithArray(address[3] someAddressz);intMemoryArray();bytesMemoryArray();boolMemoryArray()
Souptacular/marriage-dapp,marriage.sol,"Marriage();createMarriage(bytes32 partner1Entry, bytes32 partner2Entry, uint256 marriageDateEntry, bytes32 statusEntry, bytes32 descriptionEntry);getOwner();setStatus(bytes32 status);setImage(bytes IPFSImageHash);marriageProof(bytes IPFSProofHash);majorEventFunc(uint256 eventTimeStamp, bytes32 name, bytes32 description)"
BiathlonHelsinki/BiathlonContract,contracts/UpgradedNodelist.sol,"UpgradedNodelist();look_for_node(address addr);is_current();count_nodes();count_users();register_node(string _name);upgrade_self(address _to);upgrade_node(address _from, address _to, string _newname);find_and_or_register_user(address _addr, address _registrar)"
dsperac/consensys-remittance,src/contracts/Ownable.sol,Ownable()
flypme/flypme-contracts,contracts/MyCrowdsaleToken.sol,"enableTransfers();transferableTokens(address holder, uint64 time);finishMinting()"
Sensorica/Interspace-Access,solidity/Credentials.sol,"Credentials(bytes32 _id, bool _hasCredentials)"
maraoz/zeppelin-solidity,test/helpers/VestedTokenMock.sol,"VestedTokenMock(address initialAccount, uint initialBalance)"
joelcan/tools-eth-contract-dev,mul7.sol,multiply(uint a)
melonproject/protocol,contracts/mock/priceSources/MockKyberPriceSource.sol,__getReverseKyberMaskAsset(address _asset)
blockgeeks/workshop,src/contracts/escrow-burn.sol,initiateContract();confirmPayment();confirmDelivery()
bitcoinbrisbane/BitPoker,BitPoker.ETH.Contracts/Poker.sol,""
QTBlockchain/SolidityNWeb3,SmartContracts/revisit/contracts/SavingsAccount.sol,SavingsAccount();getBalance();deposit(int amount);withdraw(int amount)
paulyc/sol_machine,contracts/evm_stack_machine.sol,"executeTransaction(ContractCreationTransaction transaction);executeStop(SystemState state);executeAdd(SystemState state);executeMul(SystemState state);executeSub(SystemState state);executeDiv(SystemState state);executeSdiv(SystemState state);executeMod(SystemState state);executeSmod(SystemState state);executeAddmod(SystemState state);executeMulmod(SystemState state);executeExp(SystemState state);executeSignextend(SystemState state);illegalOperation(SystemState state);dispatchInstruction(byte OpCode,  SystemState state)"
michinbear/solidity,test/compilationTests/corion/schelling.sol,"replaceOwner(address newOwner);schellingDB();getFunds(address _owner);setFunds(address _owner, uint256 _amount);getRound(uint256 _id);pushRound(uint256 _totalAboveWeight, uint256 _totalBelowWeight, uint256 _reward, uint256 _blockHeight, bool _voted);setRound(uint256 _id, uint256 _totalAboveWeight, uint256 _totalBelowWeight, uint256 _reward, uint256 _blockHeight, bool _voted);getCurrentRound();getVoter(address _owner);setVoter(address _owner, uint256 _roundID, bytes32 _hash, voterStatus _status, bool _voteResult, uint256 _rewards);getSchellingExpansion(uint256 _id);setSchellingExpansion(uint256 _id, uint256 _expansion);setCurrentSchellingRound(uint256 _id);getCurrentSchellingRound();replaceModule(address addr);transferEvent(address from, address to, uint256 value);getFunds(address addr);setFunds(address addr, uint256 amount);setVoter(address owner, _voter voter);getVoter(address addr);setRound(uint256 id, _rounds round);pushRound(_rounds round);getRound(uint256 id);getCurrentRound();setCurrentSchellingRound(uint256 id);getCurrentSchellingRound();setSchellingExpansion(uint256 id, uint256 amount);getSchellingExpansion(uint256 id);schelling(address _moduleHandler, address _db, bool _forReplace);configure(announcementType a, uint256 b);prepareVote(bytes32 votehash, uint256 roundID);sendVote(string vote);checkVote();getRewards(address beneficiary);checkReward();nextRound();addFunds(uint256 amount);getFunds();getCurrentSchellingRoundID();getSchellingRound(uint256 id);getRoundWeight(uint256 aboveW, uint256 belowW);isWinner(_rounds round, bool aboveVote);getTotalSupply();getTokenBalance(address addr)"
elementrem/solidity,test/compilationTests/corion/schelling.sol,"replaceOwner(address newOwner);schellingDB();getFunds(address _owner);setFunds(address _owner, uint256 _amount);getRound(uint256 _id);pushRound(uint256 _totalAboveWeight, uint256 _totalBelowWeight, uint256 _reward, uint256 _blockHeight, bool _voted);setRound(uint256 _id, uint256 _totalAboveWeight, uint256 _totalBelowWeight, uint256 _reward, uint256 _blockHeight, bool _voted);getCurrentRound();getVoter(address _owner);setVoter(address _owner, uint256 _roundID, bytes32 _hash, voterStatus _status, bool _voteResult, uint256 _rewards);getSchellingExpansion(uint256 _id);setSchellingExpansion(uint256 _id, uint256 _expansion);setCurrentSchellingRound(uint256 _id);getCurrentSchellingRound();replaceModule(address addr);transferEvent(address from, address to, uint256 value);getFunds(address addr);setFunds(address addr, uint256 amount);setVoter(address owner, _voter voter);getVoter(address addr);setRound(uint256 id, _rounds round);pushRound(_rounds round);getRound(uint256 id);getCurrentRound();setCurrentSchellingRound(uint256 id);getCurrentSchellingRound();setSchellingExpansion(uint256 id, uint256 amount);getSchellingExpansion(uint256 id);schelling(address _moduleHandler, address _db, bool _forReplace);configure(announcementType a, uint256 b);prepareVote(bytes32 votehash, uint256 roundID);sendVote(string vote);checkVote();getRewards(address beneficiary);checkReward();nextRound();addFunds(uint256 amount);getFunds();getCurrentSchellingRoundID();getSchellingRound(uint256 id);getRoundWeight(uint256 aboveW, uint256 belowW);isWinner(_rounds round, bool aboveVote);getTotalSupply();getTokenBalance(address addr)"
silasdavis/eris-db,tests/jobs_fixtures/app09-basic_solidity_imports/contracts/storage.sol,test()
silasdavis/burrow,tests/jobs_fixtures/app09-basic_solidity_imports/contracts/storage.sol,test()
eris-ltd/eris-db,tests/jobs_fixtures/app09-basic_solidity_imports/contracts/storage.sol,test()
SafecontractDev/protocol,contracts/RewardDAO.sol,"RewardDAO(address _safeToken, address _bancorChanger, address _etherToken);deployVault();claim();deposit(address _token, uint _amount);withdraw();onDeposit(uint _amount);calcFee(Vault _vault, uint _newBalance, address _token);calcFee(Vault _vault, uint _newBalance, address _token);getEthBalance();search(address _query, address[] _pool)"
hundsun/blockchain,tokenV1.sol,"owned();transferOwnership(address newOwner);sendApproval(address _from, uint256 _value, address _token);MyToken(uint256 initialSupply, string tokenName, uint8 decimalUnits, string tokenSymbol, address centralMinter);transfer(address _to, uint256 _value);approve(address _spender, uint256 _value);transferFrom(address _from, address _to, uint256 _value);mintToken(address target, uint256 mintedAmount);freezeAccount(address target, bool freeze);setPrices(uint256 newSellPrice, uint256 newBuyPrice);buy();sell(uint256 amount)"
Getline-Network/getline,dapp/test/TestInvestorLedger.sol,"testLedgerCreation();testLedgerPayback();testLedgerZeroCollateral();testLedgerUnderPayback();testLedgerCreation();testLedgerPayback();testLedgerUnderPayback();testLedgerZeroCollateral();TestPerson(PrintableToken _loanToken, PrintableToken _collateralToken);ensureLoanBalance(uint256 amount);ensureCollateralBalance(uint256 amount);sendCollateral(address target, uint256 amount);sendLoan(address target, uint256 amount);approveCollateral(address target, uint256 amount);approveLoan(address target, uint256 amount)"
SilentCicero/wafr,src/tests/solidityTests/assertEq/test.assertEq.address.sol,setup();test_oneValidEqAddress();test_twoValidEqAddress();test_threeValidEqAddress();test_oneValidEmptyAddress();test_oneInvalidEmptyAddress();test_messageSenderEq();test_oneInvalidEqAddress();test_twoInvalidEqAddress();test_threeInvalidEqAddress();test_oneValidAndInvalidEqAddress();test_twoValidAndInvalidEqAddress();test_threeValidAndInvalidEqAddress()
adridadou/hackethon-2016,contracts/PubcrawlState.sol,""
SilentCicero/wafr,src/tests/solidityTests/testThrow/test.Owned.sol,"OwnedExample(address _owner);someMethod(uint _val);attemptSomeMethod(address _example, uint _val);setup()"
ganchix/ETH_16_Ethereum,UNIT-4/remittanceProject/contracts/Remmittance.sol,"Remmittance(uint duration, uint _fee);getHashFromData(bytes32 passOne, bytes32 passTwo);create(address destination, bytes32 hashPassword);withdrawCommission();withdraw(bytes32 passOne, bytes32 passTwo);claimRefund(address destination, bytes32 hashPassword);getFee();createHash(address destination, bytes32 passOne, bytes32 passTwo)"
DigixGlobal/ethereum-ruby,contracts/GoldTokenLedger.sol,""
EthWorks/ethereum.rb,contracts/GoldTokenLedger.sol,""
marekkirejczyk/ethereum.rb,contracts/GoldTokenLedger.sol,""
EthWorks/ethereum.rb,spec/fixtures/greeter.sol,kill();greet()
ethermarket/democracy,src/base/protectedApi.sol,"ProtectedApi(address permissionsProvider);getPermissionsProvider();setPermissionsProvider(address provider);addContract(bytes32 name, address newContract);removeContract(bytes32 name);remove();_permitted()"
ProBonoPublicoWorld/ico-contracts,contracts/BonusCrowdsale.sol,buyTokens(address beneficiary)
libdeos/deos-rsksmart,var/wiki/helloworld.sol,HolaMundo();getBalance()
district0x/name-bazaar,resources/public/contracts/src/Forwarder.sol,"delegatedFwd(address _dst, bytes memory _calldata)"
silasdavis/eris-db,tests/jobs_fixtures/app51-user-account-forward-proxy-pattern/UserAccountTest.sol,"testCallForwarding();serviceInvocation(address _entity, uint _newState, bytes32 _key);getString();getSuccessMessage()"
silasdavis/burrow,tests/jobs_fixtures/app51-user-account-forward-proxy-pattern/UserAccountTest.sol,"testCallForwarding();serviceInvocation(address _entity, uint _newState, bytes32 _key);getString();getSuccessMessage()"
eris-ltd/eris-db,tests/jobs_fixtures/app51-user-account-forward-proxy-pattern/UserAccountTest.sol,"testCallForwarding();serviceInvocation(address _entity, uint _newState, bytes32 _key);getString();getSuccessMessage()"
silasdavis/eris-db,tests/jobs_fixtures/app39-sign-extension/byte_casting.sol,"Test(int8 _in1, int256 _in2, int16 _in3)"
silasdavis/burrow,tests/jobs_fixtures/app39-sign-extension/byte_casting.sol,"Test(int8 _in1, int256 _in2, int16 _in3)"
eris-ltd/eris-db,tests/jobs_fixtures/app39-sign-extension/byte_casting.sol,"Test(int8 _in1, int256 _in2, int16 _in3)"
airalab/core,contracts/misc/PublicAmbix.sol,run(uint256 _ix)
boisde/Greed_Island,party/contracts/mocks/integrations/WrapAdapterMock.sol,"deposit(address _underlyingToken, uint256 _underlyingQuantity);withdraw(address _underlyingToken, uint256 _underlyingQuantity)"
DecentralizedEscrow/pre-ico,contracts/DEST.sol,"hasStarted();hasFinished();tokensAreLiquid();price(uint _v);refund();withdraw();transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);approve(address _spender, uint _value)"
gnosis/gnosis-contracts,contracts/Markets/StandardMarketFactory.sol,"createMarket(Event eventContract, MarketMaker marketMaker, uint24 fee)"
kowala-tech/kUSD,client/core/state/test_contracts/BigInts.sol,""
QTBlockchain/SolidityNWeb3,SmartContracts/March2018/AbstractionDemo/contracts/AutoFare.sol,"AutoFare(uint16 distance,uint16 price);receiveEther();computeFare(uint16 distance);getBalance()"
boisde/Greed_Island,party/contracts/mocks/integrations/StakingAdapterMock.sol,stake(uint256 _amount);unstake(uint256 _amount);setUnstakeFee(uint256 _fee);getSpenderAddress(address /* _pool */)
hedgepigdaniel/gnomocracy,src/contracts/IssueElection.sol,reset();castVote();setLabel(string newLabel);setDescription(string newDesccription);setNumVotesRequired(uint newRequirement)
Vourhey/learning-center,sol/Lesson_2.sol,"execute(Core _dao, string _shares_name)"
careerxon/code,mint.sol,"mint(address _to, uint256 _amount);burn(uint _value);burnFrom(address _from, uint256 _value);finishMinting()"
suntechsoft/dmarket-smartcontract,contracts/v0.1/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
orbro/eth-enablers,Voting.sol,Ballot(bytes32[] proposalNames);giveRightToVote(address voter);delegate(address to);vote(uint proposal);winningProposal()
Neufund/Contracts,contracts/watchdog/WatchedWallet.sol,"WatchedWallet(address owner, address watchdog);execute(address _to, uint _value, bytes _data);cancel(bytes32 _id);block(bytes32 _id);unblock(bytes32 _id);transferOwnership(address);kill();setWatchDog(address);setDelays(uint min_delay, uint max_delay);trigger(bytes32 _id)"
erooijak/ethlance,resources/public/contracts/src/ethlanceInvoice.sol,EthlanceInvoice(address _ethlanceDB)
energychain/StromDAO-BusinessObject,smart_contracts/StromDAO-BO-SC-CostCenter.sol,"owned();transferOwnership(address newOwner);StringStorage(string _str);build(string _str);RoleLookup();setDefault(uint8 _role,address _from);setRelation(uint8 _for,address _from);setRelationFrom(uint8 _for,address _from);setMPO(MPO _mpo);storeReading(uint256 _reading);storeReading(uint256 i);setMPO(MPO _mpo);storeReading(uint256 _reading);addTx(address _from,address _to, uint256 _value,uint256 _base);transfer(address _to, uint256 _value);balanceHaben(address _owner);balanceSoll(address _owner);addTx(address _from,address _to, uint256 _value,uint256 _base);build();StromkontoProxy();modifySender(address _who,bool _allow);addTx(address _from,address _to, uint256 _value,uint256 _base);Connection(address _from,address _to);PricingEnergy(uint256 _cost_per_energy);PricingDay(uint256 _cost_per_day);build();addMeterPoint(address _meterpoint);length();copy(address[] storage mps);build(MPset _mpset,MPReading _reading);SingleMeterClearingFactory(MPReading _reading);build(TxHandler _stromkonto,address _meterpoint,uint256 _cost,address _account,bool _becomeTo);CostCenterClearing(TxHandler _stromkonto,MPReading _reading,address _meterpoint,uint256 _cost,address _account, bool _becomeTo);setAccount(address _account,uint256 _shares);becomeProvider(TxHandler _providerkonto);activate();deactivate();setMeterPoint(address _meterpoint);addTx(address _from,address _to,uint256 value,uint256 base);setEnergyCost(uint256 _cost);clearing();MPRset(MPset _mpset,MPReading _reading);MPRsum(address[] meterpoints,MPR mpr);update(MPset _mpset,MPR _mpr);build(MPset _mpset,MPR _set_start,MPR _set_end);MPRdecorate(MPset _mpset,MPR _set_start,MPR _set_end);ChargeEnergy(uint amount);ChargeFix(uint amount);Add(MPR mpr2);SplitWeighted(uint256 amount);SplitEqual(uint256 amount);addTx(address _from,address _to,uint256 _base,uint256 _value);length();from(uint i);to(uint i);base(uint i);value(uint i);build(MPset _mpset,bool _toOwner);Settlement(MPset _mpset,bool toOwner);settle(MPR _tx);Clearing(TxHandler _stromkonto);clear(TXCache cache);build(TxHandler _stromkonto,SettlementFactory _sf);DirectClearing(TxHandler _stromkonto,SettlementFactory _sf);preSettle(MPset mpset);setSettlement(Settlement _settlement);settle(MPR _readings);clear()"
b-mueller/mythril,tests/testdata/input_contracts/weak_random.sol,chooseWinner()
b-mueller/mythril,solidity_examples/weak_random.sol,chooseWinner()
mwensveen-nl/solidity-testing,src/test/resources/Ballot.sol,Ballot(bytes32[] proposalNames);giveRightToVote(address voter);delegate(address to);vote(uint proposal);winningProposal();winnerName();getProposalName(uint someInt)
stanta/darfchain,ICO/contracts/BurnableToken.sol,burn(uint burnAmount)
xenioplatform/go-xenio,contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
mixbytes/storiqa_ico,contracts/crowdsale/IInvestmentsWalletConnector.sol,"storeInvestment(address investor, uint payment);getTotalInvestmentsStored();wcOnCrowdsaleSuccess();wcOnCrowdsaleFailure()"
Storiqa/ico_smart_contract,contracts/crowdsale/IInvestmentsWalletConnector.sol,"storeInvestment(address investor, uint payment);getTotalInvestmentsStored();wcOnCrowdsaleSuccess();wcOnCrowdsaleFailure()"
WingsDao/contracts,contracts/DAOAbstraction.sol,update(bytes32 _infoHash)
SilentCicero/wafr,src/tests/solidityTests/excludeTest/tests/test.Something.sol,""
vsimetka/MVP,StandardToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
saulbein/web3j,core/src/test/resources/solidity/contracts/Token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
MarketProject/MarketProtocol,contracts/MarketContractRegistry.sol,isAddressWhiteListed(address contractAddress);getAddressWhiteList();addAddressToWhiteList(address contractAddress);addFactoryAddress(address factoryAddress);removeFactoryAddress(address factoryAddress)
delneg/cryptogrip-contracts,tokensale.sol,"CryptoGripInitiative(uint tokenTotalAmount, uint startTime, uint endTime, address admin);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);burn(uint _value);burnFrom(address _from, uint256 _value);Whitelist(address _owner, address _sale);accept(address a, uint amountInWei);setSale(address sale_);getCap(address _user);contributorCap(address contributor);eligible(address contributor, uint amountInWei);eligibleTestAndIncrement(address contributor, uint amountInWei);saleEnded();saleStarted();publicSaleStarted();setHaltSale(bool halt);buy(address recipient);sendETHToMultiSig(uint value);finalizeSale();emergencyDrain(ERC20 anyToken);debugBuy()"
acebusters/safe-token-sale,test/helpers/PowerMock.sol,"downTickTest(address _owner, uint256 _now)"
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/migrations/error/contracts/ExampleRevert.sol,""
silasdavis/eris-db,tests/jobs_fixtures/app34-save_binary_and_deploy_binary/binary.sol,set(uint x);get()
silasdavis/burrow,tests/jobs_fixtures/app34-save_binary_and_deploy_binary/binary.sol,set(uint x);get()
eris-ltd/eris-db,tests/jobs_fixtures/app34-save_binary_and_deploy_binary/binary.sol,set(uint x);get()
EthereumUCM/BetfundingSimulation,contracts/Betfunding.sol,"createProject(string name, string desc, uint deadline, address oracle);bet(uint projectId, bool success);verify(uint projectId, bool success);updateBalances(uint projectId);claimProfits();getProject(uint i);getBets(uint i)"
dltdojo/courses,ethereum/solidity/T201_PureView.sol,testPure();testView();pureFunc();viewFunc()
PositronicBrain/react-ethereum-scaffolding,src/contracts/counter.sol,setCounter(uint value)
aragon/aragon-network-token,packages/sale/installed_contracts/zeppelin/contracts/ownership/DelayedClaimable.sol,"setLimits(uint _start, uint _end);claimOwnership()"
pooleja/SolidityPlayground,contracts/zeppelin/ownership/DelayedClaimable.sol,"setLimits(uint _start, uint _end);claimOwnership()"
maraoz/zeppelin-solidity,contracts/ownership/DelayedClaimable.sol,"setLimits(uint _start, uint _end);claimOwnership()"
Majoolr/ethereum-libraries,CrowdsaleLib/IICOLib/truffle/contracts/CrowdsaleToken.sol,"name();symbol();decimals();totalSupply();initialSupply();balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value);approveChange(address spender, uint256 valueChange, bool increase);changeOwner(address newOwner);mintToken(uint256 amount);closeMint();burnToken(uint256 amount)"
NathanLewis/surefair,contracts/SFEscrow.sol,"SFEscrow();deposit(uint256 amount);payout(address payee, uint256 amount)"
energychain/StromDAO-BusinessObject,smart_contracts/gwalink.sol,"owned();transferOwnership(address newOwner);changeClearance(uint256 _min_time,uint256 _min_power,uint256 _max_time, uint256 _max_power,bool _clearance);setNewReaders();changeZS(address link,address oracle,uint256 _power_in,uint256 _power_out);ping(address link,uint256 delta_time,uint256 delta_power_in,uint256 delta_power_out);StromDAOReading(GWALink _gwalink,bool _isPowerIn);pingDelta(uint256 _delta);pingReading(uint256 _reading);PDclearingStub(BalancerOracles _stromkonto);execute(PrivatePDcontract _pd);getPD();PDfactory(GWALink _link,address _mpid,address _from, address _to,uint256 _wh_microcent,uint256 _min_tx_microcent,bool _endure);PDclearing(BalancerOracles _stromkonto);execute(PrivatePDcontract _pd);PrivatePDcontract(GWALink _link,address _mpid,address _from, address _to,uint256 _wh_microcent,uint256 _min_tx_microcent,bool _endure,PDclearingStub _clearing);init();execute();check();stopEndure();receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);transfer(address _to, uint256 _value);balanceOf(address _owner);addTx(address _to, uint256 _value,string _txt);transfer(address _to, uint256 _value);balanceHaben(address _owner);balanceSoll(address _owner);addTx(address _from,address _to, uint256 _value,uint256 _base);BalancerOracle();setBalancer(Stromkonto _balancer);balanceHaben(address _owner);balanceSoll(address _owner);addTx(address _from,address _to, uint256 _value,uint256 _base);transferOracleOwnership(address _owner);addOracle(address _oracle);removeOracle(address _oracle);setValue(string _value);setValue(address key,string _value);setValue(address key,uint256 amount,uint256 repeatMinutes,uint256 repeatTimes);transfer(address _to, uint256 _value);setOracle(address _oracle);transferSupervisor(address _new_supervisor);addTx(uint256 amount);addShareholder(address _shareholder)"
vanderheijden86/p2politics,contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
prashantpawar/truffle-octo-robot,contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
KPull/eth-membership-tokens,contracts/ExpiringMembership.sol,"ExpiringMembership();addRegistrar(address _registrar, string description);removeRegistrar(address _registrar);enroll(address _member, uint duration);revoke(address _member);extendMembership(address _member, uint duration);registerNewMember(address _member, uint duration);isMember(address _member);getMembershipExpiryDate(address _member)"
ocg1/assetx,009_ReservedTokensFinalizeAgent.sol,"balanceOf(address who);transfer(address to, uint256 value);safeMul(uint a, uint b);safeDiv(uint a, uint b);safeSub(uint a, uint b);safeAdd(uint a, uint b);Ownable();transferOwnership(address newOwner);times(uint a, uint b);divides(uint a, uint b);minus(uint a, uint b);plus(uint a, uint b);halt();unhalt();isPricingStrategy();isSane(address crowdsale);isPresalePurchase(address purchaser);calculatePrice(uint value, uint weiRaised, uint tokensSold, address msgSender, uint decimals);isFinalizeAgent();isSane();finalizeCrowdsale();allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);CrowdsaleExt(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, bool _isUpdatable, bool _isWhiteListed);investInternal(address receiver, uint128 customerId);preallocate(address receiver, uint fullTokens, uint weiPrice);investWithSignedAddress(address addr, uint128 customerId, uint8 v, bytes32 r, bytes32 s);investWithCustomerId(address addr, uint128 customerId);invest(address addr);buyWithSignedAddress(uint128 customerId, uint8 v, bytes32 r, bytes32 s);buyWithCustomerId(uint128 customerId);buy();finalize();setFinalizeAgent(FinalizeAgent addr);setRequireCustomerId(bool value);setRequireSignedAddress(bool value, address _signerAddress);setEarlyParicipantWhitelist(address addr, bool status, uint minCap, uint maxCap);setEarlyParicipantsWhitelist(address[] addrs, bool[] statuses, uint[] minCaps, uint[] maxCaps);updateEarlyParicipantWhitelist(address addr, address contractAddr, uint tokensBought);updateJoinedCrowdsales(address addr);setLastCrowdsale(address addr);clearJoinedCrowdsales();updateJoinedCrowdsalesMultiple(address[] addrs);setStartsAt(uint time);setEndsAt(uint time);setPricingStrategy(PricingStrategy _pricingStrategy);setMultisig(address addr);loadRefund();refund();isMinimumGoalReached();isFinalizerSane();isPricingSane();getState();setOwnerTestValue(uint val);isCrowdsale();isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal);isBreakingInvestorCap(address receiver, uint tokenAmount);isCrowdsaleFull();assignTokens(address receiver, uint tokenAmount);isToken();transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);balanceOf(address _owner);approve(address _spender, uint _value);allowance(address _owner, address _spender);isUpgradeAgent();upgradeFrom(address _from, uint256 _value);UpgradeableToken(address _upgradeMaster);upgrade(uint256 value);setUpgradeAgent(address agent);getUpgradeState();setUpgradeMaster(address master);canUpgrade();setReleaseAgent(address addr);setTransferAgent(address addr, bool state);releaseTokenTransfer();transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);setReservedTokensList(address addr, uint inTokens, uint inPercentageUnit, uint inPercentageDecimals);getReservedTokensListValInTokens(address addr);getReservedTokensListValInPercentageUnit(address addr);getReservedTokensListValInPercentageDecimals(address addr);setReservedTokensListMultiple(address[] addrs, uint[] inTokens, uint[] inPercentageUnit, uint[] inPercentageDecimals);mint(address receiver, uint amount);setMintAgent(address addr, bool state);CrowdsaleTokenExt(string _name, string _symbol, uint _initialSupply, uint _decimals, bool _mintable, uint _globalMinCap);releaseTokenTransfer();canUpgrade();setTokenInformation(string _name, string _symbol);ReservedTokensFinalizeAgent(CrowdsaleTokenExt _token, CrowdsaleExt _crowdsale);isSane();finalizeCrowdsale()"
ethereum/dapp-bin,ether_ad/adStorer.sol,"initialize(uint256 _hsp, uint256 _hrp, uint256 _bdur, uint256 _dbt, uint256 _mim, uint256 _vssm);isInitialized();acceptAuctionResult(address winner, uint256 value, string metadata);getAuctionAddress(uint256 id);getWinnerUrl(uint256 id);getWinnerAddress(uint256 id)"
boisde/Greed_Island,party/contracts/protocol/integration/UniswapV2ExchangeAdapter.sol,getSpender()
montyly/manticore,tests/ethereum/contracts/consensys_benchmark/integer_overflow_mapping_strkey.sol,get(string key)
trailofbits/manticore,tests/ethereum_bench/consensys_benchmark/integer_overflow_mapping_strkey.sol,get(string key)
Xorek/SmartContract,Market.sol,"printMarket();delList(string user_id, uint market_id, uint deal_qty)"
web3j/web3j,contracts/src/main/resources/eip721/solidity/ERC721.sol,"balanceOf(address _owner);ownerOf(uint256 _tokenId);safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes data);safeTransferFrom(address _from, address _to, uint256 _tokenId);transferFrom(address _from, address _to, uint256 _tokenId);approve(address _approved, uint256 _tokenId);setApprovalForAll(address _operator, bool _approved);getApproved(uint256 _tokenId);isApprovedForAll(address _owner, address _operator)"
melonproject/protocol,contracts/fund/policies/utils/CallOnIntegrationPreValidatePolicyBase.sol,policyHook();policyHookExecutionTime();__decodeRuleArgs(bytes memory _encodedRuleArgs)
isvirin/neurodao,TestTokensMigration.sol,"migrateFrom(address _from, uint256 _value);TestTokensMigration(address _migrationHost);migrateFrom(address _from, uint256 _value)"
Spreadway/core,eth/neurodao-master/TestTokensMigration.sol,"migrateFrom(address _from, uint256 _value);TestTokensMigration(address _migrationHost);migrateFrom(address _from, uint256 _value)"
GovernX/governx-contracts,src/contracts/utils/HumanStandardToken.sol,"approveAndCall(address _spender, uint256 _value, bytes _extraData)"
FedCoup/FedCoup,installed_contracts/zeppelin/contracts/ownership/HasNoContracts.sol,reclaimContract(address contractAddr)
shahankhatch/dapp-bin,registrar/urlhint.sol,"UrlHint();url(bytes32 _hash);suggestUrl(bytes32 _hash, bytes32 _url)"
LianaHus/dapp-bin,registrar/urlhint.sol,"UrlHint();url(bytes32 _hash);suggestUrl(bytes32 _hash, bytes32 _url)"
RepublicMaster/dapp-bin,registrar/urlhint.sol,"UrlHint();url(bytes32 _hash);suggestUrl(bytes32 _hash, bytes32 _url)"
frozeman/ethereum-smart-contracts,registrar/urlhint.sol,"UrlHint();url(bytes32 _hash);suggestUrl(bytes32 _hash, bytes32 _url)"
vaporry/dapp-bin,registrar/urlhint.sol,"UrlHint();url(bytes32 _hash);suggestUrl(bytes32 _hash, bytes32 _url)"
gnosis/gnosis-contracts,contracts/Markets/StandardMarket.sol,"fund(uint _funding);close();withdrawFees();buy(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint maxCost);sell(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint minProfit);shortSell(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint minProfit);trade(int[] memory outcomeTokenAmounts, int collateralLimit);tradeImpl(uint8 outcomeCount, int[] memory outcomeTokenAmounts, int collateralLimit);calcMarketFee(uint outcomeTokenCost)"
loiluu/peacerelay,contracts/PeaceRelay.sol,"submitBlock(bytes32 blockHash, bytes rlpHeader);checkStateProof(bytes32 blockHash, bytes rlpStack, uint[] indexes, bytes statePrefix, bytes rlpState);checkTxProof(bytes32 blockHash, bytes rlpStack, uint[] indexes, bytes transactionPrefix, bytes rlpTransaction);checkReceiptProof(bytes32 blockHash, bytes rlpStack, uint[] indexes, bytes receiptPrefix, bytes rlpReceipt);parseBlockHeader(bytes rlpHeader);checkProof(bytes32 rootHash, bytes rlpStack, uint[] indexes, bytes valuePrefix, bytes rlpValue);getStateRoot(bytes32 blockHash);getTxRoot(bytes32 blockHash);getReceiptRoot(bytes32 blockHash);test(bytes rlpValue);getTransactionDetails(bytes rlpTransaction)"
kowala-tech/kUSD,client/contracts/truffle/contracts/oracle/OracleMgr.sol,"isOracle(address identity);_hasAvailability();_deleteOracle(address identity);_insertOracle(address identity, uint deposit);getOracleCount();getOracleAtIndex(uint index);getPriceCount();getPriceAtIndex(uint index);registerOracle();deregisterOracle();submitPrice(uint _price)"
Dobrokhvalov/eth2phone,test/TestE2pEscrow.sol,testItStoresAValue()
AragonOne/zeppelin-solidity,contracts/Bounty.sol,createTarget();deployContract();checkInvariant();claim(Target target);checkInvariant()
PeculiumPCL/Peculium,contracts/v0.2/Peculium.sol,"PeculiumToken();buyTokens(address _vaddr, uint _vamounts);setBonus(uint256 _bonus_Percent);approveAndCall(address _spender, uint256 _value, bytes _extraData);getBlockTimestamp();stopBatchAssign();balanceOf(address _owner);getOwnerInfos();killContract()"
PeculiumPCL/Peculium,contracts/v0.3/Peculium.sol,"PeculiumToken();buyTokens(address _vaddr, uint _vamounts);setBonus(uint256 _bonus_Percent);approveAndCall(address _spender, uint256 _value, bytes _extraData);getBlockTimestamp();stopBatchAssign();balanceOf(address _owner);getOwnerInfos();killContract()"
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/contracts/examples/SimpleToken.sol,SimpleToken()
pash7ka/zeppelin-solidity,contracts/examples/SimpleToken.sol,SimpleToken()
readevalprint/aragon-core,contracts/zeppelin/examples/SimpleToken.sol,SimpleToken()
pz7/liquet,node_modules/zeppelin-solidity/contracts/examples/SimpleToken.sol,SimpleToken()
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/examples/SimpleToken.sol,SimpleToken()
cashpokerpro-dev/cash-smartcontracts,contracts/examples/SimpleToken.sol,SimpleToken()
cinderblockchain/cindertoken,contracts/examples/SimpleToken.sol,SimpleToken()
papyrusglobal/smartcontracts,contracts/PrivateParticipation.sol,"allowPrivateParticipant(address _participant, uint256 _amount)"
dltlab/teepee,teepee.sol,update(uint256 marketCap);Teepee()
web3j/web3j,contracts/src/main/resources/eip721/solidity/ERC721Enumerable.sol,"totalSupply();tokenByIndex(uint256 _index);tokenOfOwnerByIndex(address _owner, uint256 _index)"
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.5/etherTransferInLoop.sol,transferInForLoop(uint index);transferInWhileLoop(uint index);transferInDoWhileLoop(uint index)
ethereum/ethereumj,ethereumj-core/src/test/resources/solidity/foo/file3.sol,""
marcegarba/ethereumj,ethereumj-core/src/test/resources/solidity/foo/file3.sol,""
martintreurnicht/ethereumj,ethereumj-core/src/test/resources/solidity/foo/file3.sol,""
DigixGlobal/ethereum-ruby,contracts/classic/Gold.sol,"ParticipantRegistry();getOwner();setOwner(address nown);registerAdmin(address regraddr);unregisterAdmin(address regraddr);registerVendor(address vendoraddress);unregisterVendor(address vendoraddress);registerCustodian(address custodianaddress);unregisterCustodian(address custodianaddress);registerAuditor(address auditoraddress);unregisterAuditor(address auditoraddress);isVendor(address vendoraddress);isCustodian(address custodianaddress);isAuditor(address auditoraddress);isRegistrar(address regraddr);GoldRegistry();setConfiguration(address pr);getOwner();setOwner(address nown);getParticipantRegistry();checkCustodian();checkVendor();checkAuditor();checkRegistrar();registerGold();getGoldStatusCode(address gaddr);getGoldStatusVendorverify(address gaddr);getGoldStatusCustodianverify(address gaddr);getGoldStatusMinted(address gaddr);getGoldStatusAuditcount(address gaddr);getGoldStatusRegistered(address gaddr);getGoldStatusLastauditid(address gaddr);getGoldInfoVendor(address gaddr);getGoldInfoCustodian(address gaddr);getGoldInfoWeight(address gaddr);getGoldInfoSerial(address gaddr);getGoldInfoSku(address gaddr);getGoldInfoDocumentation(address gaddr);getLastAuditId(address gaddr);getLastAuditTime(address gaddr);getLastAuditPass(address gaddr);getLastAuditAuditor(address gaddr);getLastAuditExtradata(address gaddr);getLastAuditDocumentation(address gaddr);custodianVerify(address gaddr);vendorVerify(address gaddr);custodianTransfer(address gaddr, address ncaddr);auditReport(address gaddr, bool ares, bytes32 ed, bytes32 doc);Gold();getOwner();initGoldData(uint wt, bytes32 sn, bytes32 sk, bytes32 doc);initRegistryData(address raddr, address vaddr, address caddr);sendRegistration();registryRequestCustodian();registryRequestVendor();registryRequestWeight();registryRequestSerialNumber();registryRequestSku();registryRequestDocumentation();getGoldDataInitialized();getGoldDataMinted();getGoldDataWeight();getGoldDataSerial();getGoldDataSku();getGoldDataDocumentation();getRegistryDataInitialized();getRegistryDataRegistered();getRegistryDataRegistry();getRegistryDataVendor();getRegistryDataCustodian();getRegistryDataMinter();sendToMinter(uint minttype);goldRegistry()"
EthWorks/ethereum.rb,contracts/classic/Gold.sol,"ParticipantRegistry();getOwner();setOwner(address nown);registerAdmin(address regraddr);unregisterAdmin(address regraddr);registerVendor(address vendoraddress);unregisterVendor(address vendoraddress);registerCustodian(address custodianaddress);unregisterCustodian(address custodianaddress);registerAuditor(address auditoraddress);unregisterAuditor(address auditoraddress);isVendor(address vendoraddress);isCustodian(address custodianaddress);isAuditor(address auditoraddress);isRegistrar(address regraddr);GoldRegistry();setConfiguration(address pr);getOwner();setOwner(address nown);getParticipantRegistry();checkCustodian();checkVendor();checkAuditor();checkRegistrar();registerGold();getGoldStatusCode(address gaddr);getGoldStatusVendorverify(address gaddr);getGoldStatusCustodianverify(address gaddr);getGoldStatusMinted(address gaddr);getGoldStatusAuditcount(address gaddr);getGoldStatusRegistered(address gaddr);getGoldStatusLastauditid(address gaddr);getGoldInfoVendor(address gaddr);getGoldInfoCustodian(address gaddr);getGoldInfoWeight(address gaddr);getGoldInfoSerial(address gaddr);getGoldInfoSku(address gaddr);getGoldInfoDocumentation(address gaddr);getLastAuditId(address gaddr);getLastAuditTime(address gaddr);getLastAuditPass(address gaddr);getLastAuditAuditor(address gaddr);getLastAuditExtradata(address gaddr);getLastAuditDocumentation(address gaddr);custodianVerify(address gaddr);vendorVerify(address gaddr);custodianTransfer(address gaddr, address ncaddr);auditReport(address gaddr, bool ares, bytes32 ed, bytes32 doc);Gold();getOwner();initGoldData(uint wt, bytes32 sn, bytes32 sk, bytes32 doc);initRegistryData(address raddr, address vaddr, address caddr);sendRegistration();registryRequestCustodian();registryRequestVendor();registryRequestWeight();registryRequestSerialNumber();registryRequestSku();registryRequestDocumentation();getGoldDataInitialized();getGoldDataMinted();getGoldDataWeight();getGoldDataSerial();getGoldDataSku();getGoldDataDocumentation();getRegistryDataInitialized();getRegistryDataRegistered();getRegistryDataRegistry();getRegistryDataVendor();getRegistryDataCustodian();getRegistryDataMinter();sendToMinter(uint minttype);goldRegistry()"
marekkirejczyk/ethereum.rb,contracts/classic/Gold.sol,"ParticipantRegistry();getOwner();setOwner(address nown);registerAdmin(address regraddr);unregisterAdmin(address regraddr);registerVendor(address vendoraddress);unregisterVendor(address vendoraddress);registerCustodian(address custodianaddress);unregisterCustodian(address custodianaddress);registerAuditor(address auditoraddress);unregisterAuditor(address auditoraddress);isVendor(address vendoraddress);isCustodian(address custodianaddress);isAuditor(address auditoraddress);isRegistrar(address regraddr);GoldRegistry();setConfiguration(address pr);getOwner();setOwner(address nown);getParticipantRegistry();checkCustodian();checkVendor();checkAuditor();checkRegistrar();registerGold();getGoldStatusCode(address gaddr);getGoldStatusVendorverify(address gaddr);getGoldStatusCustodianverify(address gaddr);getGoldStatusMinted(address gaddr);getGoldStatusAuditcount(address gaddr);getGoldStatusRegistered(address gaddr);getGoldStatusLastauditid(address gaddr);getGoldInfoVendor(address gaddr);getGoldInfoCustodian(address gaddr);getGoldInfoWeight(address gaddr);getGoldInfoSerial(address gaddr);getGoldInfoSku(address gaddr);getGoldInfoDocumentation(address gaddr);getLastAuditId(address gaddr);getLastAuditTime(address gaddr);getLastAuditPass(address gaddr);getLastAuditAuditor(address gaddr);getLastAuditExtradata(address gaddr);getLastAuditDocumentation(address gaddr);custodianVerify(address gaddr);vendorVerify(address gaddr);custodianTransfer(address gaddr, address ncaddr);auditReport(address gaddr, bool ares, bytes32 ed, bytes32 doc);Gold();getOwner();initGoldData(uint wt, bytes32 sn, bytes32 sk, bytes32 doc);initRegistryData(address raddr, address vaddr, address caddr);sendRegistration();registryRequestCustodian();registryRequestVendor();registryRequestWeight();registryRequestSerialNumber();registryRequestSku();registryRequestDocumentation();getGoldDataInitialized();getGoldDataMinted();getGoldDataWeight();getGoldDataSerial();getGoldDataSku();getGoldDataDocumentation();getRegistryDataInitialized();getRegistryDataRegistered();getRegistryDataRegistry();getRegistryDataVendor();getRegistryDataCustodian();getRegistryDataMinter();sendToMinter(uint minttype);goldRegistry()"
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/test-helpers/LimitBalanceMock.sol,limitedDeposit()
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/test-helpers/LimitBalanceMock.sol,limitedDeposit()
AragonOne/zeppelin-solidity,contracts/test-helpers/LimitBalanceMock.sol,limitedDeposit()
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/test/helpers/SafeMathMock.sol,"multiply(uint256 a, uint256 b);subtract(uint256 a, uint256 b);add(uint256 a, uint256 b)"
pash7ka/zeppelin-solidity,test/helpers/SafeMathMock.sol,"multiply(uint256 a, uint256 b);subtract(uint256 a, uint256 b);add(uint256 a, uint256 b)"
Dicoiner/irianna-solidity,test/helpers/SafeMathMock.sol,"multiply(uint256 a, uint256 b);subtract(uint256 a, uint256 b);add(uint256 a, uint256 b)"
pz7/liquet,node_modules/zeppelin-solidity/test/helpers/SafeMathMock.sol,"multiply(uint256 a, uint256 b);subtract(uint256 a, uint256 b);add(uint256 a, uint256 b)"
dmx374/zeppelin-solidity,test/helpers/SafeMathMock.sol,"multiply(uint256 a, uint256 b);subtract(uint256 a, uint256 b);add(uint256 a, uint256 b)"
cashpokerpro-dev/cash-smartcontracts,test/helpers/SafeMathMock.sol,"multiply(uint256 a, uint256 b);subtract(uint256 a, uint256 b);add(uint256 a, uint256 b)"
cinderblockchain/cindertoken,test/helpers/SafeMathMock.sol,"multiply(uint256 a, uint256 b);subtract(uint256 a, uint256 b);add(uint256 a, uint256 b)"
etherisc/flightDelay,vendors/usingOraclize.sol,"query(uint _timestamp, string _datasource, string _arg);query_withGasLimit(uint _timestamp, string _datasource, string _arg, uint _gaslimit);queryN(uint _timestamp, string _datasource, bytes _argN);queryN_withGasLimit(uint _timestamp, string _datasource, bytes _argN, uint _gaslimit);getPrice(string _datasource);getPrice(string _datasource, uint gaslimit);useCoupon(string _coupon);setProofType(byte _proofType);setConfig(bytes32 _config);setCustomGasPrice(uint _gasPrice);randomDS_getSessionPubKeyHash();getAddress();oraclize_setNetwork(uint8 networkID);__callback(bytes32 myid, string result);__callback(bytes32 myid, string result, bytes proof);oraclize_useCoupon(string code);oraclize_getPrice(string datasource);oraclize_getPrice(string datasource, uint gaslimit);oraclize_query(string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2, uint gaslimit);oraclize_query(string datasource, string[] argN);oraclize_query(uint timestamp, string datasource, string[] argN);oraclize_query(uint timestamp, string datasource, string[] argN, uint gaslimit);oraclize_query(string datasource, string[] argN, uint gaslimit);oraclize_query(string datasource, string[1] args);oraclize_query(uint timestamp, string datasource, string[1] args);oraclize_query(uint timestamp, string datasource, string[1] args, uint gaslimit);oraclize_query(string datasource, string[1] args, uint gaslimit);oraclize_query(string datasource, string[2] args);oraclize_query(uint timestamp, string datasource, string[2] args);oraclize_query(uint timestamp, string datasource, string[2] args, uint gaslimit);oraclize_query(string datasource, string[2] args, uint gaslimit);oraclize_query(string datasource, string[3] args);oraclize_query(uint timestamp, string datasource, string[3] args);oraclize_query(uint timestamp, string datasource, string[3] args, uint gaslimit);oraclize_query(string datasource, string[3] args, uint gaslimit);oraclize_query(string datasource, string[4] args);oraclize_query(uint timestamp, string datasource, string[4] args);oraclize_query(uint timestamp, string datasource, string[4] args, uint gaslimit);oraclize_query(string datasource, string[4] args, uint gaslimit);oraclize_query(string datasource, string[5] args);oraclize_query(uint timestamp, string datasource, string[5] args);oraclize_query(uint timestamp, string datasource, string[5] args, uint gaslimit);oraclize_query(string datasource, string[5] args, uint gaslimit);oraclize_query(string datasource, bytes[] argN);oraclize_query(uint timestamp, string datasource, bytes[] argN);oraclize_query(uint timestamp, string datasource, bytes[] argN, uint gaslimit);oraclize_query(string datasource, bytes[] argN, uint gaslimit);oraclize_query(string datasource, bytes[1] args);oraclize_query(uint timestamp, string datasource, bytes[1] args);oraclize_query(uint timestamp, string datasource, bytes[1] args, uint gaslimit);oraclize_query(string datasource, bytes[1] args, uint gaslimit);oraclize_query(string datasource, bytes[2] args);oraclize_query(uint timestamp, string datasource, bytes[2] args);oraclize_query(uint timestamp, string datasource, bytes[2] args, uint gaslimit);oraclize_query(string datasource, bytes[2] args, uint gaslimit);oraclize_query(string datasource, bytes[3] args);oraclize_query(uint timestamp, string datasource, bytes[3] args);oraclize_query(uint timestamp, string datasource, bytes[3] args, uint gaslimit);oraclize_query(string datasource, bytes[3] args, uint gaslimit);oraclize_query(string datasource, bytes[4] args);oraclize_query(uint timestamp, string datasource, bytes[4] args);oraclize_query(uint timestamp, string datasource, bytes[4] args, uint gaslimit);oraclize_query(string datasource, bytes[4] args, uint gaslimit);oraclize_query(string datasource, bytes[5] args);oraclize_query(uint timestamp, string datasource, bytes[5] args);oraclize_query(uint timestamp, string datasource, bytes[5] args, uint gaslimit);oraclize_query(string datasource, bytes[5] args, uint gaslimit);oraclize_cbAddress();oraclize_setProof(byte proofP);oraclize_setCustomGasPrice(uint gasPrice);oraclize_setConfig(bytes32 config);oraclize_randomDS_getSessionPubKeyHash();getCodeSize(address _addr);parseAddr(string _a);strCompare(string _a, string _b);indexOf(string _haystack, string _needle);strConcat(string _a, string _b, string _c, string _d, string _e);strConcat(string _a, string _b, string _c, string _d);strConcat(string _a, string _b, string _c);strConcat(string _a, string _b);parseInt(string _a);parseInt(string _a, uint _b);oraclize_setNetworkName(string _network_name);oraclize_getNetworkName();oraclize_newRandomDSQuery(uint _delay, uint _nbytes, uint _customGasLimit);oraclize_randomDS_setCommitment(bytes32 queryId, bytes32 commitment);verifySig(bytes32 tosignh, bytes dersig, bytes pubkey);oraclize_randomDS_proofVerify__sessionKeyValidity(bytes proof, uint sig2offset);oraclize_randomDS_proofVerify__returnCode(bytes32 _queryId, string _result, bytes _proof);oraclize_randomDS_proofVerify__main(bytes proof, bytes32 queryId, bytes result, string context_name);copyBytes(bytes from, uint fromOffset, uint length, bytes to, uint toOffset);safer_ecrecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s);ecrecovery(bytes32 hash, bytes sig)"
dbrainio/Soltsice,contracts/MultiOwnable.sol,isOwner(address owner);isOwner(address _address);pause();unpause()
enjin/contracts,solidity/contracts/interfaces/IERC20Token.sol,"name();symbol();decimals();totalSupply();balanceOf(address _owner);allowance(address _owner, address _spender);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value)"
chenlian2015/eosEthMarketSample,contracts/OLBlackWhiteList.sol,"isAddrCanCallServer(string contractName, address addr);setContractServerBlackWhiteListType(string contractName, uint nType);getContractServerBlackWhiteListType(string contractName);addToWhiteList(string contractName, address addr);removeFromWhiteList(string contractName, address addr);addToBlackList(string contractName, address addr);removeFromBlackList(string contractName, address addr);isAddressInWhiteList(string contractName, address addr);isAddressInBlackList(string contractName, address addr)"
adklempner/solidity-license,contracts/zeppelin/MultisigWallet.sol,"MultisigWallet(address[] _owners, uint256 _required, uint256 _daylimit);destroy(address _to);execute(address _to, uint256 _value, bytes _data);confirm(bytes32 _h);setDailyLimit(uint256 _newLimit);resetSpentToday();clearPending()"
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/MultisigWallet.sol,"MultisigWallet(address[] _owners, uint256 _required, uint256 _daylimit);destroy(address _to);execute(address _to, uint256 _value, bytes _data);confirm(bytes32 _h);setDailyLimit(uint256 _newLimit);resetSpentToday();clearPending()"
adamdossa/ProfitSharingContract,installed_contracts/zeppelin/contracts/MultisigWallet.sol,"MultisigWallet(address[] _owners, uint256 _required, uint256 _daylimit);destroy(address _to);execute(address _to, uint256 _value, bytes _data);confirm(bytes32 _h);setDailyLimit(uint256 _newLimit);resetSpentToday();clearPending()"
mediachain/cccoin,contracts/CCCoinToken.sol,"lockedBalanceOf(address _owner);CCCoinToken(string set_name, string set_symbol, uint set_decimals, uint set_max_creation_rate_per_second, address set_minter_address, address set_cccoin_address, uint set_start_time);changeSettings(string set_name, string set_symbol, uint set_decimals, uint set_max_creation_rate_per_second, address set_minter_address, address set_cccoin_address, uint set_start_time);addLog(bytes val);mintTokens(uint reward_tok, uint reward_lock, address recipient);mintLockCashout(address recipient, uint amount_lock);updateTokPerLockRate(uint rate);lockupTok(address recipient, uint amount_tok);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);balanceOf(address _owner);approve(address _spender, uint _value);allowance(address _owner, address _spender);changeCCCoinAddress(address newAddress);changeMintingAddress(address newAddress);safeMul(uint a, uint b);safeDiv(uint a, uint b);safeSub(uint a, uint b);safeAdd(uint a, uint b);assert(bool assertion)"
EthereumUCM/Betfunding,test/autoJudge.sol,"autoJudge();setNumNumbers(uint n);setPrice(uint price);setProjectToVerify(address betfunding, uint id);buyTicket(uint nonce);getPot();getTicketPrice();getDifficulty();getBetfundingAddress();getIdProject()"
RealEstateAssetLedger/real_contract,contracts/REALPlaceHolder.sol,"REALPlaceHolder(address _owner, address _real, address _contribution);changeController(address _newController);proxyPayment(address);onTransfer(address _from, address, uint256);onApprove(address _from, address, uint256);transferable(address _from);getTime();claimTokens(address _token)"
D-Nice/solidity-helper-functions,helpers/helpers.sol,"safeSend(address _receiver, uint _amtToSend);stringsEqual(string _a, string _b)"
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/contracts/crowdsale/CappedCrowdsale.sol,CappedCrowdsale(uint256 _cap);validPurchase();hasEnded()
woshidama323/hello-github,contracts/test.sol,""
stanta/darfchain,ICO/contracts/DefaultFinalizeAgent.sol,"DefaultFinalizeAgent(ReleasableToken _token, Crowdsale _crowdsale);isSane();finalizeCrowdsale()"
gnosis/gnosis-contracts,contracts/Oracles/FutarchyOracleFactory.sol,""
Quiark/AuditDog,contracts/AuditDog.sol,"GetSoftwareCount();GetClaimCount();AddSoftware(string name, string git_repo, bytes32 git_commit, bytes32 extra_auth, bytes32 extra_auth_type);AddClaim(uint32 sw_ix, string claim, bytes32 claim_hash, bytes32 claim_hash_type, address claim_ref_adog, uint32 claim_ref_ix);SearchByGit(bytes git_repo);m_software(uint ix);run(address addr);complex()"
fractalPlatform/Fractal,test/fee/withdraw.sol,withdrawAssetFee(uint256 assetId);withdrawContractFee(uint256 userId);withdrawCoinbaseFee(uint256 userId)
FedCoup/FedCoup,installed_contracts/zeppelin/contracts/Bounty.sol,createTarget();deployContract();claim(Target target);checkInvariant()
montyly/manticore,tests/ethereum/contracts/reached.sol,"print(string message);terminate(string message);assume(bool constraint);make_symbolic_buffer(uint size);make_symbolic_uint();is_symbolic(bytes mem);is_symbolic(uint mem);set_taint(bytes mem, uint taints);get_taint(bytes mem, uint size);make_testcase();debug_print_constraints();can_be_true(bool condition);assert(bool condition, string message);entry(uint input);write_then_throw();write_then_throw()"
trailofbits/manticore,tests/ethereum/contracts/reached.sol,"print(string message);terminate(string message);assume(bool constraint);make_symbolic_buffer(uint size);make_symbolic_uint();is_symbolic(bytes mem);is_symbolic(uint mem);set_taint(bytes mem, uint taints);get_taint(bytes mem, uint size);make_testcase();debug_print_constraints();can_be_true(bool condition);assert(bool condition, string message);entry(uint input);write_then_throw();write_then_throw()"
GovernX/governx-contracts,src/contracts/utils/IToken.sol,"balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
PlutusIt/PlutusDEX,contracts/PlutusUser.sol,"PlutusUser(bytes32 _userVdcIban, NameReg _namereg);sendTokenFromDex(address _to, uint _amount);offerBtcFromApp(address _trader,  uint _btcOffered)"
lucywe/rootcore-crowdsale,solidity/contracts/interfaces/ITokenHolder.sol,"withdrawTokens(IERC20Token _token, address _to, uint256 _amount)"
woshidama323/hello-github,contracts/BetContract.sol,"roundinfo();buy(uint256 _affCode);checkPrize(uint256 _pID, uint256 _affCode, bytes ticket);judge(uint256 pId, bytes ticket);withdraw();activate();updateNextRoundInfo();newRound();generateRandom()"
SafecontractDev/protocol,contracts/PriceDiscovery.sol,"PriceDiscovery(address _fromToken, address _toToken);exchangeRate()"
pipermerriam/ethereum-alarm-clock,contracts/_examples/RecurringPayment.sol,process();payout();schedule()
slockit/DAO,Token.sol,"getOrModifyBlocked(address _account);balanceOf(address _owner);transfer(address _to, uint256 _amount);transferFrom(address _from, address _to, uint256 _amount);approve(address _spender, uint256 _amount);balanceOf(address _owner);transfer(address _to, uint256 _amount);approve(address _spender, uint256 _amount);allowance(address _owner, address _spender)"
Spreadway/core,DAO-develop/Token.sol,"getOrModifyBlocked(address _account);balanceOf(address _owner);transfer(address _to, uint256 _amount);transferFrom(address _from, address _to, uint256 _amount);approve(address _spender, uint256 _amount);balanceOf(address _owner);transfer(address _to, uint256 _amount);approve(address _spender, uint256 _amount);allowance(address _owner, address _spender)"
ashellwig/Ethereum-Mutual-Fund,Token.sol,"getOrModifyBlocked(address _account);balanceOf(address _owner);transfer(address _to, uint256 _amount);transferFrom(address _from, address _to, uint256 _amount);approve(address _spender, uint256 _amount);balanceOf(address _owner);transfer(address _to, uint256 _amount);approve(address _spender, uint256 _amount);allowance(address _owner, address _spender)"
zchn/ethereum-analyzer,examples/slockit/Token.sol,"getOrModifyBlocked(address _account);balanceOf(address _owner);transfer(address _to, uint256 _amount);transferFrom(address _from, address _to, uint256 _amount);approve(address _spender, uint256 _amount);balanceOf(address _owner);transfer(address _to, uint256 _amount);approve(address _spender, uint256 _amount);allowance(address _owner, address _spender)"
Sensorica/Interspace-Access,solidity/Saflok.sol,"Saflok(bytes32 _id, bytes32 _expiryDate, bytes32 _expiryTime, bytes32 _room)"
TruLtd/tru-reputation-token,contracts/supporting/TruUpgradeableToken.sol,upgrade(uint256 _value);setUpgradeAgent(address _agent);getUpgradeState();setUpgradeMaster(address _master);canUpgrade()
cpetty-Novetta/raffle-dapp,imports/smart-contracts/contracts/RaffleBitcoinBook.sol,"RaffleBitcoinBook(string _prizeName, uint _numPrizes);nextStage();closeRegistration();generateNewTicket(address userAddress);remove(uint index);generate_random(uint maxNum, string salt);randomChoiceFromticketPool();distributePrizes();getNumUsers();getNumTickets();getStage()"
melonproject/protocol,contracts/mock/integratees/MockChaiIntegratee.sol,"join(address payable _trader, uint256 _daiAmount);exit(address payable _trader, uint256 _chaiAmount)"
vishakh/blockinstruments,contracts/TradingAccount.sol,"TradingAccount();deposit();withdraw(uint amount);authorize(address accountAddr, uint duration);isAuthorized(address accountAddr);timeRemaining(AuthPeriod period)"
chenlian2015/eosEthMarketSample,contracts/OLTestSynatax.sol,"OLTestSynatax();addLog(string log, string logContent);baby();test()"
FedCoup/FedCoup,installed_contracts/zeppelin/contracts/ownership/HasNoEther.sol,HasNoEther();reclaimEther()
jpoon/EthRelay,contracts/TransferDetails.sol,"TransferDetails(string _origAccount, uint _origBank, string _destAccount, uint _destBank, uint _amount, address[] _approvers);getState();approve();reject();externalFailure()"
Lyniat/hackaburg17-smartcontracts,backend_server/node_modules/ethereumjs-testrpc/test/Example.sol,Example();setValue(uint val)
boisde/Greed_Island,party/contracts/mocks/Uint256ArrayUtilsMock.sol,"testExtend(uint256[] memory A, uint256[] memory B)"
ineiti/cothorities,bevm/testdata/CallByzcoin/CallByzcoin.sol,"spawnValue(bytes32 darcID, string contractID, uint8 value);spawnTwoValues(bytes32 darcID, string contractID, uint8 value);updateValue(bytes32 instanceID, string contractID, uint8 value);deleteValue(bytes32 instanceID, string contractID)"
DeDiS/cothority,bevm/testdata/CallByzcoin/CallByzcoin.sol,"spawnValue(bytes32 darcID, string contractID, uint8 value);spawnTwoValues(bytes32 darcID, string contractID, uint8 value);updateValue(bytes32 instanceID, string contractID, uint8 value);deleteValue(bytes32 instanceID, string contractID)"
SilentCicero/wafr,src/tests/solidityTests/gasUsage/examples/SingleAccountRules.sol,"hasWon(uint _proposalID);canVote(address _sender, uint _proposalID);canPropose(address _sender);votingWeightOf(address _sender, uint _proposalID)"
montyly/manticore,tests/ethereum/contracts/consensys_benchmark/integer_overflow_dynarray.sol,init()
trailofbits/manticore,tests/ethereum_bench/consensys_benchmark/integer_overflow_dynarray.sol,init()
cgewecke/solcover,test/sources/conditional/variable-decl-assignment-alternate.sol,a()
JoinColony/solcover,test/sources/conditional/variable-decl-assignment-alternate.sol,a()
DivvyDAO/minime,MiniMeToken.sol,"proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);Controlled();changeController(address _newController);transfer(address _to, uint256 _amount);balanceOf(address _owner);approve(address _spender, uint256 _amount);totalSupply();balanceOfAt(address _owner, uint _blockNumber);totalSupplyAt(uint _blockNumber);enableTransfers(bool _transfersEnabled);isContract(address _addr)"
ownage-ltd/ether-router,contracts/test/PayableContract.sol,payFunction()
elementrem/solidity,test/compilationTests/milestonetracker/MilestoneTracker.sol,numberOfMilestones();changeArbitrator(address _newArbitrator);changeDonor(address _newDonor);changeRecipient(address _newRecipient);unproposeMilestones();markMilestoneComplete(uint _idMilestone);approveCompletedMilestone(uint _idMilestone);rejectMilestone(uint _idMilestone);cancelMilestone(uint _idMilestone);arbitrateCancelCampaign();authorizePayment(uint _idMilestone)
vechain-team/crowdsale-contracts,contracts/Rollback.sol,"receiveApproval(address _from, uint256 _value, address _tokenContract, bytes _extraData);Rollback();withdrawETH(address _address,uint256 _amount);withdrawToken(address _address, uint256 _amount);setCredit(address _account, uint256 _amount);getCredit(address _account);receiveApproval(address _from, uint256 _value, address /*_tokenContract*/, bytes /*_extraData*/)"
GX-Coin/SmartContract,GxAccountsInterface.sol,contains(address lookupAddress);add(address newAddress);remove(address removedAddress);iterateStart();iterateValid(uint keyIndex);iterateNext(uint keyIndex);iterateGet(uint keyIndex)
michinbear/solidity,test/compilationTests/gnosis/Events/ScalarEvent.sol,redeemWinnings();getEventHash()
elementrem/solidity,test/compilationTests/gnosis/Events/ScalarEvent.sol,redeemWinnings();getEventHash()
iExecBlockchainComputing/rlc-token,contracts/SafeMath.sol,"safeMul(uint a, uint b);safeDiv(uint a, uint b);safeSub(uint a, uint b);safeAdd(uint a, uint b);assert(bool assertion)"
brakmic/BlockchainStore,contracts/Tokens/BaseStoreToken.sol,"BaseStoreToken();transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);balanceOf(address _address);allowance(address _owner, address _spender)"
alice-si/contracts,contracts/alice/DigitalGBPToken.sol,"mint(address _to, uint256 _value);burn(address _from, uint256 _value)"
aragon/aragon-core,contracts/test/mocks/TokenMock.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value)"
iivvoo/ethic,minimal3.sol,get()
SilentCicero/wafr,src/tests/solidityTests/gasUsage/examples/Token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
bluedroplet/blobstore-ethereum,src/MixItemStoreRegistry.sol,register();getItemStore(bytes32 itemId)
link-blockchain/blobstore,src/MixItemStoreRegistry.sol,register();getItemStore(bytes32 itemId)
janx/ruby-ethereum,test/contracts/seven_contract_without_import.sol,seven();test()
cryptape/ruby-ethereum,test/contracts/seven_contract_without_import.sol,seven();test()
se3000/ruby-ethereum,test/contracts/seven_contract_without_import.sol,seven();test()
etherbanking/go-etherbanking,contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
eris-ltd/eris-db,tests/jobs_fixtures/app59-operator-smod/OperatorSmod.sol,"smod(int a, int b)"
tokenai/tokenai-network-token,contracts/MultisigWallet.sol,"MultiSigWallet(address[] _owners, uint _required);addOwner(address owner);removeOwner(address owner);replaceOwner(address owner, address newOwner);changeRequirement(uint _required);submitTransaction(address destination, uint value, bytes data);confirmTransaction(uint transactionId);revokeConfirmation(uint transactionId);executeTransaction(uint transactionId);isConfirmed(uint transactionId);addTransaction(address destination, uint value, bytes data);getConfirmationCount(uint transactionId);getTransactionCount(bool pending, bool executed);getOwners();getConfirmations(uint transactionId);getTransactionIds(uint from, uint to, bool pending, bool executed)"
furusiyya/Notary-Platform,contracts/ReentrancyGuard.sol,""
NTRYPlatform/ntry-solidity,contracts/ReentrancyGuard.sol,""
eris-ltd/eris-compilers,vendor/github.com/monax/cli/docs/contracts_deploying_adv/GSFactory.sol,set(uint x);get();create();getLast()
eris-ltd/eris,docs/contracts_deploying_adv/GSFactory.sol,set(uint x);get();create();getLast()
monax/monax,docs/contracts_deploying_adv/GSFactory.sol,set(uint x);get();create();getLast()
eris-ltd/eris-cli,docs/contracts_deploying_adv/GSFactory.sol,set(uint x);get();create();getLast()
monax/cli,docs/contracts_deploying_adv/GSFactory.sol,set(uint x);get();create();getLast()
eris-ltd/lllc-server,vendor/github.com/monax/cli/docs/contracts_deploying_adv/GSFactory.sol,set(uint x);get();create();getLast()
RealEstateAssetLedger/real_contract,contracts/mocks/ReserveTokensHolderMock.sol,"ReserveTokensHolderMock(address _owner, address _crowdsale, address _real);getTime();setMockedDate(uint256 date)"
pipermerriam/populus,docs/assets/Donator2.sol,donate(uint usd_rate);withdrawAll()
NucleusIo/HealthGenesis,contracts/Resource.sol,"Resource(address _recipient, string _url, string _resourceId, string _resourceType)"
livepeer/protocol,verification/OraclizeVerifier.sol,"OraclizeVerifier(address _controller, string _verificationCodeHash, uint256 _gasPrice, uint256 _gasLimit);setVerificationCodeHash(string _verificationCodeHash);__callback(bytes32 _queryId, string _result, bytes _proof);getPrice()"
liors/tvdapp,contracts/Bookmark.sol,Bookmark();bookmark(string show);getBookmarks()
kleroterion/dapp,contracts/Arbitrated/ArbitratedBuyDeposit.sol,"ArbitratedBuyDeposit(address _arbitrator, string hashContractIPFS);pay();confirmPerfectReception();cancelSellOffer();changeSellerProposedValue(uint256 _sellerProposedValue);confirmImperfectReception(uint256 valueToSeller);withdraw();createDispute();decideSplit(uint256 buyerShare,uint256 sellerShare, string hashDecisionIPFS);submit(string hashDocumentIPFS);getBalance()"
ConsenSys/ether-pudding,test/Example.sol,Example(uint val);setValue(uint val);getValue();parrot(uint val);triggerEvent()
darcius/rocketpool-crowdsale,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
iam-dev/ERC23,contracts/token/interface/Controlled.sol,Controlled();changeController(address _newController)
acebusters/safe-token-sale,contracts/ERC20Basic.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value)"
wilmveel/praetorian-contracts,contracts/PasswordChallenge.sol,"PasswordChallenge(bytes20 _response, bytes32 _salt);getSalt();getChallenge();verify(uint8 v, bytes32 r, bytes32 s);change(uint8 v, bytes32 r, bytes32 s, bytes20 _response);auth(uint8 v, bytes32 r, bytes32 s);getFactory();getOwner()"
DonorToken/DonorToken,test/helpers/PausableMock.sol,PausableMock();normalProcess();drasticMeasure()
mingocoin/contracts,contracts/Crowdsale.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);mint(address _to, uint256 _amount);MultiOwnable();addOwner(address newOwner);removeOwner(address ownerToRemove);isOwner(address possibleOwner);Crowdsale(uint256 _eurToWei, address _token, address _wallet);rate();buyTokens(address beneficiary);numberOfContributors();finalize()"
AragonOne/zeppelin-solidity,contracts/MultisigWallet.sol,"MultisigWallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);setDailyLimit(uint _newLimit);resetSpentToday();clearPending()"
AlphaDinoRC/rockchain,contracts/MultiSigWallet.sol,"MultiSigWallet(address[] _owners, uint _required);addOwner(address owner);removeOwner(address owner);replaceOwnerIndexed(address owner, address newOwner, uint index);changeRequirement(uint _required);submitTransaction(address destination, uint value, bytes data);confirmTransaction(uint transactionId);revokeConfirmation(uint transactionId);isConfirmed(uint transactionId);executeTransaction(uint transactionId);addTransaction(address destination, uint value, bytes data);getConfirmationCount(uint transactionId);getTransactionCount(bool pending, bool executed);getOwners();getConfirmations(uint transactionId);getTransactionIds(uint from, uint to, bool pending, bool executed)"
DavdRoman/Payroll,contracts/Tokens/ERC20Token.sol,"approveAndCall(address _spender, uint256 _value, bytes _extraData);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
livepeer/protocol,contracts/bonding/BondingManager.sol,"getTotalBonded();BondingManager(address _controller);setUnbondingPeriod(uint64 _unbondingPeriod);setNumTranscoders(uint256 _numTranscoders);setNumActiveTranscoders(uint256 _numActiveTranscoders);setMaxEarningsClaimsRounds(uint256 _maxEarningsClaimsRounds);transcoder(uint256 _rewardCut, uint256 _feeShare, uint256 _pricePerSegment);unbond(uint256 _amount);withdrawStake(uint256 _unbondingLockId);withdrawFees();setActiveTranscoders();reward();electActiveTranscoder(uint256 _maxPricePerSegment, bytes32 _blockHash, uint256 _round);claimEarnings(uint256 _endRound);pendingStake(address _delegator, uint256 _endRound);pendingFees(address _delegator, uint256 _endRound);activeTranscoderTotalStake(address _transcoder, uint256 _round);transcoderTotalStake(address _transcoder);transcoderStatus(address _transcoder);delegatorStatus(address _delegator);getTranscoderPoolMaxSize();getTranscoderPoolSize();getFirstTranscoderInPool();getNextTranscoderInPool(address _transcoder);getTotalBonded();getTotalActiveStake(uint256 _round);isActiveTranscoder(address _transcoder, uint256 _round);isRegisteredTranscoder(address _transcoder);isValidUnbondingLock(address _delegator, uint256 _unbondingLockId);resignTranscoder(address _transcoder);updateTranscoderWithRewards(address _transcoder, uint256 _rewards, uint256 _round);updateDelegatorWithEarnings(address _delegator, uint256 _endRound);processRebond(address _delegator, uint256 _unbondingLockId);livepeerToken();minter();roundsManager()"
kowala-tech/kUSD,client/contracts/truffle/contracts/oracle/ExchangeMgr.sol,addExchange(string name);removeExchange(string name);whitelistExchange(string name);blacklistExchange(string name);isExchange(string name);isWhitelistedExchange(string name);isBlacklistedExchange(string name);getWhitelistedExchangeCount();getWhitelistedExchangeAtIndex(uint index)
Neufund/Contracts,contracts/neubank/ClientRegistery.sol,isClient(address client);addClient(address client);removeClient(address client)
ArnaudBrousseau/blockbin,dapp/contracts/Blockbin.sol,"Blockbin();softDelete(bytes32 hash);softUndelete(bytes32 hash);empty(bytes32 hash);dumpCube(bytes data, bytes32 hash);readCube(bytes32 hash)"
ethersphere/go-ethereum,contracts/ens/contract/PublicResolver.sol,"setAddr(bytes32 node, address addr);setContenthash(bytes32 node, bytes calldata hash);setName(bytes32 node, string calldata name);setABI(bytes32 node, uint256 contentType, bytes calldata data);setPubkey(bytes32 node, bytes32 x, bytes32 y);setText(bytes32 node, string calldata key, string calldata value);text(bytes32 node, string calldata key);pubkey(bytes32 node);ABI(bytes32 node, uint256 contentTypes);name(bytes32 node);addr(bytes32 node);contenthash(bytes32 node);supportsInterface(bytes4 interfaceID)"
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.4.24/KingOfTheEtherThrone.sol,""
soad003/browser-solidity,test/staticanalysis/test-contracts/KingOfTheEtherThrone.sol,""
aragon/aragon-network-token,packages/sale/installed_contracts/zeppelin/contracts/lifecycle/Killable.sol,kill()
pooleja/SolidityPlayground,contracts/zeppelin/lifecycle/Killable.sol,kill()
maraoz/zeppelin-solidity,contracts/lifecycle/Killable.sol,kill()
segovro/Community-Currency,contractNew.sol,"getParameters();getMoneyTotals();getBudget();credit(address _borrower, uint _credit, uint _daysAfter);monitorWallet(address _monitored)"
SilentCicero/wafr,src/tests/solidityTests/gasUsage/examples/Owner.sol,""
saulbein/web3j,core/src/test/resources/solidity/contracts/SampleRecipientThrow.sol,""
Vourhey/learning-center,sol/Lesson_7.sol,execute(Crowdfunding _crowdfunding)
BeBlockTech/Anemoi,Test/Token/ex.sol,"owned();transferOwnership(address newOwner);receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);_transfer(address _from, address _to, uint _value);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);burn(uint256 _value);burnFrom(address _from, uint256 _value);_transfer(address _from, address _to, uint _value);mintToken(address target, uint256 mintedAmount);freezeAccount(address target, bool freeze);setPrices(uint256 newSellPrice, uint256 newBuyPrice);buy();sell(uint256 amount)"
orbro/eth-enablers,Insurance Contract.sol,"receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);transfer(address _to, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);transferFrom(address _from, address _to, uint256 _value)"
easyMINE/SmartContracts,contracts/ICO/EasyMineIco.sol,"EasyMineIco(address _wallet);setup(address _easyMineToken, address _sys, address _reservationAddress, uint256 _minStartDelay, uint256 _maxDuration);maxTokensSold();totalTokensSold();scheduleStart(uint256 _startBlock);updateStage();buyTokens();reserveTokens(uint256 tokenCount);cleanup();finalize()"
hedgepigdaniel/gnomocracy,src/contracts/counter.sol,increment();get()
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/test/helpers/SafeERC20Helper.sol,"transfer(address, uint256);transferFrom(address, address, uint256);approve(address, uint256);balanceOf(address);allowance(address, address);transfer(address, uint256);transferFrom(address, address, uint256);approve(address, uint256);balanceOf(address);allowance(address, address);doFailingTransfer();doFailingTransferFrom();doFailingApprove();doSucceedingTransfer();doSucceedingTransferFrom();doSucceedingApprove()"
pash7ka/zeppelin-solidity,test/helpers/SafeERC20Helper.sol,"transfer(address, uint256);transferFrom(address, address, uint256);approve(address, uint256);balanceOf(address);allowance(address, address);transfer(address, uint256);transferFrom(address, address, uint256);approve(address, uint256);balanceOf(address);allowance(address, address);doFailingTransfer();doFailingTransferFrom();doFailingApprove();doSucceedingTransfer();doSucceedingTransferFrom();doSucceedingApprove()"
pz7/liquet,node_modules/zeppelin-solidity/test/helpers/SafeERC20Helper.sol,"transfer(address, uint256);transferFrom(address, address, uint256);approve(address, uint256);balanceOf(address);allowance(address, address);transfer(address, uint256);transferFrom(address, address, uint256);approve(address, uint256);balanceOf(address);allowance(address, address);doFailingTransfer();doFailingTransferFrom();doFailingApprove();doSucceedingTransfer();doSucceedingTransferFrom();doSucceedingApprove()"
dmx374/zeppelin-solidity,test/helpers/SafeERC20Helper.sol,"transfer(address, uint256);transferFrom(address, address, uint256);approve(address, uint256);balanceOf(address);allowance(address, address);transfer(address, uint256);transferFrom(address, address, uint256);approve(address, uint256);balanceOf(address);allowance(address, address);doFailingTransfer();doFailingTransferFrom();doFailingApprove();doSucceedingTransfer();doSucceedingTransferFrom();doSucceedingApprove()"
cashpokerpro-dev/cash-smartcontracts,test/helpers/SafeERC20Helper.sol,"transfer(address, uint256);transferFrom(address, address, uint256);approve(address, uint256);balanceOf(address);allowance(address, address);transfer(address, uint256);transferFrom(address, address, uint256);approve(address, uint256);balanceOf(address);allowance(address, address);doFailingTransfer();doFailingTransferFrom();doFailingApprove();doSucceedingTransfer();doSucceedingTransferFrom();doSucceedingApprove()"
stevejaxon/ethereum-tutorials,contracts/exploitable/HoneyPot.sol,HoneyPot();put();get()
dmozzy/TimeClock,contracts/TimeClock.sol,getNextPaymentDate();contracteesSize();purchase(string description);update();contracteeWithdraw(uint index);contractorWithdraw();calculatedPaymentInterval()
Blocklancer/Blocklancer-Contracts,solidity/BlocklancerDataHolder.sol,BlocklancerDataHolder();getTokenHolderTribunal();getBlocklancerContractHolder();setTokenHolderTribunal(address _TokenHolderTribunal);setBlocklancerContractHolder(address _BlocklancerContractHolder);getBlocklancerToken();setBlocklancerToken(address _BlocklancerTokenContract)
destenson/rng-sol,rng.sol,RNG();RandomNumber();RandomNumberFromSeed(uint seed);Guess(uint _guess)
web3j/web3j,codegen/src/test/resources/solidity/humanstandardtoken/HumanStandardToken.sol,"approveAndCall(address _spender, uint256 _value, bytes _extraData)"
spdz/ethereum_class_01,Examples.sol,getMonkey();setMonkey(string MonkeyName);getMagicNumber();setMagicNumber(uint mn)
DonorToken/DonorToken,contracts/crowdsale/DonorCrowdsale.sol,"DonorCrowdsale(uint256 _startTime, uint256 _endTime, uint256 _rate, address _wallet, uint256 _cap);createTokenContract();buyTokens(address beneficiary);buyTokensBonus(uint256 tokens, uint256 weiAccept);checkThreshold(uint256 weiAccept);checkEarlybird(uint256 tokens);checkWhale(uint256 weiAccept);forwardFunds();tokenFallback(address /*_from*/, uint256 /*_value*/, bytes /*_data*/);receiveApproval(address _from, uint256 _value, address _tokenContract, bytes _data);receiveTransfer(address _from, uint256 _value, address _tokenContract, bytes _data);tokenSweep(address _from, address _tokenContract);transferBenship(address newAddr);transferWallet(address newAddr);onetimeLaunch(uint256 _startTime)"
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/ownership/CanReclaimToken.sol,reclaimToken(ERC20Basic _token)
airalab/core,contracts/misc/AbstractAmbix.sol,_run(uint256 _ix)
linneacfritz/matchingalgo,Match.sol,"Match();askForMatch(uint n);addMatch(uint h, uint s);bubbleSort();swap(uint index1, uint index2);findBest();getMatch(uint n);getLengthOfMatches();clearArray();getNumber()"
RyuuGan/sol-merger,test/compiled/DoubleNamedImports.sol,"mul(uint256 _a, uint256 _b);div(uint256 _a, uint256 _b);sub(uint256 _a, uint256 _b);add(uint256 _a, uint256 _b);totalSupply();balanceOf(address _who);transfer(address _to, uint256 _value);totalSupply();transfer(address _to, uint256 _value);balanceOf(address _owner)"
GX-Coin/SmartContract,GxConstants.sol,GxConstants()
WeiFund/WeiFund,app/client/lib/contracts/WeiControllerFactory.sol,"newCampaign(uint _campaignID, address _owner, uint _fundingGoal);contribute(uint _campaignID, address _contributor, address _beneficiary, uint _amountContributed);refund(uint _campaignID, address _contributor, uint _amountRefunded);payout(uint _campaignID, uint _amountPaid);totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);newCampaign(string _name, address _beneficiary, uint _fundingGoal, uint _expiry, address _config);contribute(uint _campaignID, address _beneficiary);refund(uint _campaignID, uint _contribution);payout(uint _campaignID);operatorCampaignID(address _operator, uint _campaignIndex);totalCampaignsBy(address _operator);totalContributionsBy(uint _campaignID, address _contributor);totalCampaigns();contributionAt(uint _campaignID, uint _contributionID);createdAt(uint _campaignID);contributionID(uint _campaignID, address _contributor, uint _contributionIndex);ownerOf(uint _campaignID);beneficiaryOf(uint _campaignID);configOf(uint _campaignID);amountRaisedBy(uint _campaignID);fundingGoalOf(uint _campaignID);expiryOf(uint _campaignID);totalContributors(uint _campaignID);isContributor(uint _campaignID, address _contributor);isOwner(uint _campaignID, address _owner);hasFailed(uint _campaignID);isSuccess(uint _campaignID);isActive(uint _campaignID);isPaidOut(uint _campaignID);totalRefunded(uint _campaignID);isRefunded(uint _campaignID);newCampaign(uint _campaignID, address _owner, uint _fundingGoal);contribute(uint _campaignID, address _contributor, address _beneficiary, uint _amountContributed);claimTokens();refund(uint _campaignID, address _contributor, uint _amountRefunded);payout(uint _campaignID, uint _amountPaid);addService(address _service);ownerOf(address _service);isService(address _service)"
status-im/status-network-token,contracts/ContributionWallet.sol,"ContributionWallet(address _multisig, uint256 _endBlock, address _contribution);withdraw()"
b-mueller/mythril,solidity_examples/exceptions.sol,requireisfine(uint256 input);thisisfine(uint256 input);arrayaccess(uint256 index);thisisalsofind(uint256 index)
Majoolr/ethereum-libraries,ArrayUtilsLib/truffle/contracts/Array256Lib.sol,"sumElements(uint256[] storage self);getMax(uint256[] storage self);getMin(uint256[] storage self);indexOf(uint256[] storage self, uint256 value, bool isSorted);getParentI(uint256 index);getLeftChildI(uint256 index);heapSort(uint256[] storage self);uniq(uint256[] storage self)"
domschiener/publicvotes,contracts/contract.sol,"NewPoll(string _options, string _title, uint _votelimit, uint _deadline);vote(string choice);endPoll()"
SilentCicero/wafr,src/tests/solidityTests/gasUsage/examples/CampaignRules.sol,"hasWon(uint _proposalID);canVote(address _sender, uint _proposalID);canPropose(address _sender);votingWeightOf(address _sender, uint _proposalID)"
b-mueller/mythril,tests/testdata/input_contracts/kinds_of_calls.sol,"callSetN(address _e, uint _n);callcodeSetN(address _e, uint _n);delegatecallSetN(address _e, uint _n)"
jimy74/Chablex,Smart Contracts/ChabToken.sol,"getMaxEmpruntable(address addr);getDemande(uint256 pos);getNbDemandes();demander(uint256 _value);preter(uint256 _value);transfer(address _to, uint256 _value);approve(address _spender, uint256 _value);transferFrom(address _from, address _to, uint256 _value);increaseApproval(address _spender, uint _addedValue)"
dacplayproject/play-dapp,src/TokenTransferGuard.sol,"onTokenTransfer(address _from, address _to, uint _amount)"
Neufund/Contracts,contracts/watchdog/WatchedRegistery.sol,""
WingsDao/contracts,contracts/milestones/MilestonesAbstraction.sol,"add(uint amount, bytes32 items);update(uint index, uint amount, bytes32 items);remove(uint index);get(uint index)"
airalab/DAO-IPCI,contracts/creator/CreatorInsuranceHolder.sol,"create(address _operator, address _token);version();abi()"
Neurone/persians,contracts/Ownable.sol,Ownable();transferOwnership(address newOwner)
patrizz/FinancialRegistryService,src/main/solidity/SimpleContract-subcurrency.sol,"Coin();mint(address receiver, uint amount);send(address receiver, uint amount)"
energychain/StromDAO-BusinessObject,smart_contracts/StromDAO-BO-SPV.sol,"owned();transferOwnership(address newOwner);storeReading(uint256 _reading);addTx(address _from,address _to, uint256 _value,uint256 _base);transfer(address _to, uint256 _value);balanceHaben(address _owner);balanceSoll(address _owner);addTx(address _from,address _to, uint256 _value,uint256 _base);build(Stromkonto _linked_stromkonto,string _name);SPV(Stromkonto linked_stromkonto,string _name);allowFunding();disallowFunding();fund(uint256 _value);spend(uint256 _value);earn(uint256 _value);meteredEarn(uint256 _reading);meteredPrice(uint256 _value);sell(address _to,uint256 _fund,uint256 _value);transfer(address _to, uint256 _fund)"
melonproject/protocol,contracts/prices/primitives/KyberPriceFeed.sol,"getCanonicalRate(address _baseAsset, address _quoteAsset);setExpectedRateWethQty(uint256 _expectedRateWethQty);setMaxPriceDeviation(uint256 _newMaxPriceDeviation);setMaxSpread(uint256 _newMaxSpread);setRegistry(address _newRegistry);setUpdater(address _newUpdater);update(address[] calldata _saneAssets, uint256[] calldata _sanePrices);getLiveRate(address _baseAsset, address _quoteAsset);hasValidPrice(address _asset);__calcSrcQtyForExpectedRateLookup(address _srcAsset);__getKyberMaskAsset(address _asset);__priceIsSane(uint256 _priceFromKyber, uint256 _sanePrice)"
iam-dev/ERC23,installed_contracts/zeppelin-solidity/test/mocks/ReentrancyAttack.sol,callSender(bytes4 data)
jaakmusic/go-ethereum,jaak/contract/jaak.sol,"Jaak();getTracks(uint offset, uint count);trackCount();getTracksByArtist(address id, uint offset, uint count);artistTrackCount(address id);getTrackByArtist(address id, uint index);play(bytes32 id, address streamer, address jaaker);register(bytes32 id, address artist);clearTracks();unregister(bytes32 id);transfer(address from, address to, uint256 amount);withdraw(address from, address to, uint amount)"
redsquirrel/augur-core,src/libraries/Initializable.sol,endInitialization();getInitialized()
iExecBlockchainComputing/rlc-token,contracts/RLC.sol,"RLC();unlock();burn(uint256 _value);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);balanceOf(address _owner);approve(address _spender, uint _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);allowance(address _owner, address _spender)"
youvegoteth/youvegoteth.github.io,contracts/SimpleStorage.sol,set(uint x);get()
ranneyd/eth-faucet,contracts/SimpleStorage.sol,set(uint x);get()
Solvocracy/solvocracy-dapp,contracts/SimpleStorage.sol,set(uint x);get()
transmute-industries/eth-faucet,contracts/SimpleStorage.sol,set(uint x);get()
Alonski/CoinPanion,contracts/SimpleStorage.sol,set(uint x);get()
TickethProject/ticketh-core,contracts/SimpleStorage.sol,set(uint x);get()
dltdojo/courses,ethereum/truffle/boxreact/contracts/SimpleStorage.sol,set(uint x);get()
smartcontractor/smartponzi-dapp,contracts/SmartPonzi.sol,SmartPonzi();getBalance();getProfit();getCumulativeProfit();getDepositDelta();deposit();reCalc();withdraw();withdrawProfit()
GX-Coin/SmartContract,GxCoinToken.sol,"setControllerContract(GxCoinTokenControllerInterface _controller);emitTransfer(address from, address to, uint amount);emitApproval(address holder, address spender, uint amount);totalSupply();balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value)"
crypto-coder/Tokens,Token_Contracts/contracts/TokenFactory.sol,useDefaultRegistry();getUseRegistry();setUseRegistry(bool _useRegistry);setRegistry(address _newRegistryAddress);getRegistry();registerNewToken(Token _newToken);deregisterToken(Token _token)
rmerom/PutYourMoneyWhereYourContractIs,contracts/BountyManager.sol,"BountyManager(address _lostDepositsAddress);initiateChallenge(address bountyContract);assertInvalidState(address bountyContract);releaseUnclaimedBounty(address bountyContract);getPendingWithdrawl();assertValidChallenger(address bountyContract);endBounty(address bountyContract);clearUnusedDeposit(uint lockedUntilBlock, uint currentDeposit);addContractTestToBounty(address originalContractTest, address additionalContractTest)"
silasdavis/eris-db,tests/jobs_fixtures/app33-evm_connection_edb_permissions_and_roles_layer/permissions.sol,"addRole(address Account, string memory Role);removeRole(address Account, string memory Role);hasRole(address Account, string memory Role);setBase(address Account, uint64 Permission, bool Set);unsetBase(address Account, uint64 Permission);hasBase(address Account, uint64 Permission);setGlobal(uint64 Permission, bool Set);hasBase(address addr, uint64 permFlag);setBase(address addr, uint64 permFlag, bool value);unsetBase(address addr, uint64 permFlag);setGlobal(uint64 permFlag, bool value);hasRole(address addr, string memory role);addRole(address addr, string memory role);removeRole(address addr, string memory role)"
silasdavis/burrow,tests/jobs_fixtures/app33-evm_connection_edb_permissions_and_roles_layer/permissions.sol,"addRole(address Account, string memory Role);removeRole(address Account, string memory Role);hasRole(address Account, string memory Role);setBase(address Account, uint64 Permission, bool Set);unsetBase(address Account, uint64 Permission);hasBase(address Account, uint64 Permission);setGlobal(uint64 Permission, bool Set);hasBase(address addr, uint64 permFlag);setBase(address addr, uint64 permFlag, bool value);unsetBase(address addr, uint64 permFlag);setGlobal(uint64 permFlag, bool value);hasRole(address addr, string memory role);addRole(address addr, string memory role);removeRole(address addr, string memory role)"
iudex/iudex,contracts/facebook.sol,"setOwner(address addr);Facebook();setLookup(address addr);__callback(bytes32 myid, string result, bytes proof);score(bytes32 id, string userId);verifyUrl(string userId, string proofLocation);verify(bytes32 id, string userId, string proofLocation)"
DonorToken/DonorToken,test/helpers/RefundableCrowdsaleImpl.sol,""
orbro/eth-enablers,solidity-baby-steps-master/contracts/25_msg_examiner.sol,msgExaminer();getContractCreationData();getContractCreationGas();getContractCreationValue();getContractCreationTxGasprice();getContractCreationTxOrigin();sendOneEtherToMiner();sendOneEtherToHome();getMsgDataBefore();getMsgDataAfter();getMsgGasBefore();getMsgGasAfter();getMsgValueBefore();getMsgValueAfter();kill()
customizablebasicincome/cbi-tokensale,contracts/CBIToken.sol,""
energychain/StromDAO-BusinessObject,smart_contracts/StromDAO-BO.sol,"owned();transferOwnership(address newOwner);StringStorage(string _str);build(string _str);DeliveryReceiver(RoleLookup _roles);process(Delivery _delivery);monitor(address _account,bool _monitor);setNextReceiver(DeliveryReceiver _next);RoleLookup();setDefault(uint8 _role,address _from);setRelation(uint8 _for,address _from);setRelationFrom(uint8 _for,address _from);setMPO(MPO _mpo);storeReading(uint256 _reading);setMPO(MPO _mpo);storeReading(uint256 _reading);MPO(RoleLookup _roles);approveMP(address _meter_point,uint8 role_id);declineMP(address _meter_point);storeReading(uint256 _reading);addTx(address _from,address _to, uint256 _value,uint256 _base);transfer(address _to, uint256 _value);balanceHaben(address _owner);balanceSoll(address _owner);addTx(address _from,address _to, uint256 _value,uint256 _base);addRx(address _to,address _msg, uint256 _value,uint256 _base,bool _is_liability);modifySender(address _who,bool _allow);addTx(address _from,address _to, uint256 _value,uint256 _base);setReceiptAsset(address _address);setReceiptLiablity(address _address);Billing(uint256 _cost_per_day,uint256 _cost_per_energy);becomeFrom();becomeTo();calculate(Delivery _delivery);Connection(address _from,address _to);PricingEnergy(uint256 _cost_per_energy);PricingDay(uint256 _cost_per_day);build();addMeterPoint(address _meterpoint);length();copy(address[] storage mps);build(MPset _mpset,MPReading _reading);MPRset(MPset _mpset,MPReading _reading);MPRsum(address[] meterpoints,MPR mpr);build(MPset _mpset,MPR _set_start,MPR _set_end);MPRdecorate(MPset _mpset,MPR _set_start,MPR _set_end);ChargeEnergy(uint256 amount);ChargeFix(uint256 amount);Add(MPR mpr2);SplitWeighted(uint256 amount);SplitEqual(uint256 amount);addTx(address _from,address _to,uint256 _base,uint256 _value);length();from(uint i);to(uint i);base(uint i);value(uint i);build(MPset _mpset,bool _toOwner);Settlement(MPset _mpset,bool toOwner);settle(MPR _tx,MPR _base);build(TxHandler _stromkonto);Clearing(TxHandler _stromkonto);clear(TXCache cache);setFrom(address _from);setTo(address _to);setMeterPoint(address _meter_point);setCostPerDay(uint256 _cost_per_day);setCostPerEnergy(uint256 _cost_per_energy);DirectConnectionFactory();buildConnection(address _from,address _to,address _meter_point,uint256 _cost_per_energy,uint256 _cost_per_day);DirectChargingFactory(MPReading _reader);buildCharging();DirectBalancingGroupFactory(MPReading _reader);build();DirectBalancingGroup(DirectConnectionFactory _dconf,DirectChargingFactory _dcharf,bool _isDynamicPricing);addFeedIn(address account,address meter_point,uint256 _cost_per_energy,uint256 _cost_per_day);addFeedOut(address account,address meter_point,uint256 _cost_per_energy,uint256 _cost_per_day);setAccountInfo(address _account,address _infoset);setCostPerEnergy(DirectConnection connection,uint256 cost_per_energy);setCostPerDay(DirectConnection connection,uint256 cost_per_day);setStromkontoDelta(Stromkonto _delta);charge();addTx(address _from,address _to, uint256 _value,uint256 _base);addConnection(DirectConnection _connection);setConnections(DirectConnection[] _connections);chargeAll(uint256 dyn_cost);setStromkonto(Stromkonto _stromkonto);DirectCharging(Stromkonto _stromkonto,MPReading _reader);addTx(address _from,address _to, uint256 _value,uint256 _base);setStromkonto(Stromkonto _stromkonto);addConnection(DirectConnection _connection);setConnections(DirectConnection[] _connections);chargeAll(uint256 dyn_cost);settleBaseDeliveries();handleDelivery(Delivery _delivery);crossBalance();DeliveryMUX(RoleLookup _roles);settleBaseDeliveries();handleDelivery(Delivery _delivery);doCrossing(Delivery _del1,Delivery _del2);crossBalance();Provider(RoleLookup _roles,TxHandler _stromkonto,AbstractDeliveryMux _deliveryMux);handleDelivery(Delivery _delivery);powerToMoney(Delivery _delivery);addTx(address _from,address _to, uint256 _value,uint256 _base);setDeliveryMux(AbstractDeliveryMux _deliveryMux);approveSender(address _address,bool _approve,uint256 cost_per_day,uint256 cost_per_energy);DSO(RoleLookup _roles);approveConnection(address _address,uint256 _power_limit);providerAllowance(address dso,bool allow);process(Delivery _delivery);monitor(address _account,bool _monitor);setNextReceiver(DeliveryReceiver _next);Delivery(RoleLookup _roles,address _meterpoint,uint8 _mprole,uint256 _startTime,uint256 _endTime, uint256 _power);includeDelivery(Delivery _delivery);destructWith(Delivery _delivery);DeliverySplit(Delivery _sourceDelivery,uint256 _time_to_split);doSplit()"
dmx374/zeppelin-solidity,contracts/Bounty.sol,createTarget();deployContract();claim(Target target);checkInvariant()
jellegerbrandy/daostack,contracts/zeppelin-solidity/token/SimpleToken.sol,SimpleToken()
cgewecke/solcover,test/sources/zeppelin/token/SimpleToken.sol,SimpleToken()
WingsDao/contracts,contracts/zeppelin/token/SimpleToken.sol,SimpleToken()
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/token/SimpleToken.sol,SimpleToken()
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/token/SimpleToken.sol,SimpleToken()
JoinColony/solcover,test/sources/zeppelin/token/SimpleToken.sol,SimpleToken()
nivertech/ethereum_cosmo,NameReg.sol,NameReg();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr)
montyly/manticore,tests/ethereum/contracts/detectors/balance_not_ok.sol,foo()
trailofbits/manticore,tests/ethereum/contracts/detectors/balance_not_ok.sol,foo()
GX-Coin/SmartContract,GxCoinTotalsInterface.sol,setCoinLimit(uint32 limit);adjustTotalCoins(int32 coins);setTotalCoins(uint32 coins)
Fluid-AI/ICO,contracts/Drops.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);balanceOf(address who);transfer(address to, uint256 value);allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);transfer(address _to, uint256 _value);balanceOf(address _owner);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);Ownable();transferOwnership(address newOwner);pause();unpause();transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);increaseApproval(address _spender, uint _addedValue);decreaseApproval(address _spender, uint _subtractedValue);Drops(uint256 _ICOEndTime);setCrowdsaleAddress(address _crowdsale);addWhitelisted();removeWhitelisted();distributeTokens(address _to, uint256 _amount);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);increaseApproval(address _spender, uint _addedValue);decreaseApproval(address _spender, uint _subtractedValue);emergencyExtract()"
chenlian2015/eosEthMarketSample,contracts/OLFeeManagerInterface.sol,"setFee(string serverName, uint fee);getFee(string serverName);setFeedBackFee(string serverName, uint fee);getFeedBackFeeAward(string serverName)"
cgag/loc,tests/data/test.sol,set(uint x);get()
jmeis/solidity-examples,contracts/simple-auction.sol,"SimpleAuction(uint _biddingTime, address _beneficiary);bid();auctionEnd()"
jmeis/solidity,contracts/simple-auction.sol,"SimpleAuction(uint _biddingTime, address _beneficiary);bid();auctionEnd()"
duaraghav8/Solium,test/lib/rules/indentation/reject/multiline-call-declaration.sol,Counter();inc();incByTwo()
SafeContracts/TREX-token,SafecontractsTREXToken.sol,"issueTokens(address _for, uint tokenCount);transfer(address to, uint256 value);transferFrom(address from, address to, uint256 value);SafecontractsTREXToken()"
loiluu/peacerelay,contracts/ETCLocking.sol,"ETCLocking(address peaceRelayAddr, address _etcTokenAddr);lock(address ethAddr);getSig(bytes b);getReceiptDetails(bytes rlpReceipt);testGetReceiptDetails(bytes rlpReceipt);getTransactionDetails(bytes rlpTransaction);testGetTransactionDetails(bytes rlpTransaction)"
AugustoL/OpenContent,contracts/index.sol,"Post(address _owner, address _author, address _board, bytes32 _title, bytes32 _image, bytes32 c1, bytes32 c2, bytes32 c3, bytes32 c4, bytes32 c5, bytes32 c6, bytes32 c7, bytes32 c8);setIds(uint _number, uint _block);getData();getContent();getBoard();getComment(uint index);destroy();addComment(address _user, uint _block, bytes32 _t1, bytes32 _t2, bytes32 _t3);giveUp(address user_address);giveDown(address user_address);getOwner();Board(address _owner, bytes32 _name);destroy();getName();getInfo();getOwner();getPost(uint i);getUser(uint i);addPostOnBoard(address _user, address post_address);removePost(address post_address);addUser(address new_user_address);removeUser(address user_address);User(address _owner, bytes32 _username);edit(address _owner, bytes32 _name, bytes32 _email, bytes32 _imageurl, bytes10 _birth, bytes32 _location, bytes32 _url1, bytes32 _url2);addBoard(address board_address);getBoard(uint i);getPost(uint i);removeBoard(address board_address);addPostOnUser(address post_address);removePost(address post_address);getUsername();getData();getProfile();getOwner();OpenContentIndex();getIndexInfo();createBoard( bytes32 new_board_name );removeBoard(address board_address);getBoardInfo(address board_address);createUser(bytes32 _username);editUser(bytes32 _name, bytes32 _email, bytes32 _imageurl, bytes10 _birth, bytes32 _location, bytes32 _url1, bytes32 _url2);addBoardOnUser(address board_address);removeBoardOnUser(address board_address);removeUser();getUserByUsername(bytes32 _username);getUserByAddress(address _owner);getHomePost(uint i);addComment(address post_address, bytes32 t1, bytes32 t2, bytes32 t3);giveUp(address post_address);giveDown(address post_address);createPost(address _user, address _board, bytes32 _title, bytes32 _image, bytes32 c1, bytes32 c2, bytes32 c3, bytes32 c4, bytes32 c5, bytes32 c6, bytes32 c7, bytes32 c8);removePost(address post_address)"
iam-dev/ERC23,installed_contracts/zeppelin-solidity/test/mocks/CappedCrowdsaleImpl.sol,""
eris-ltd/eris-compilers,tests/contractImport1.sol,"c(address Addr, int a, int b)"
eris-ltd/lllc-server,tests/contractImport1.sol,"c(address Addr, int a, int b)"
jkeesh/dogetoken,contracts/contract.sol,"balanceOf(address _owner);transfer(address _to, uint256 _value);name();symbol();decimals();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);enablePurchasing();disablePurchasing();withdrawForeignTokens(address _tokenContract);getStats()"
livepeer/protocol,contracts/libraries/SortedDoublyLL.sol,"setMaxSize(Data storage self, uint256 _size);insert(Data storage self, address _id, uint256 _key, address _prevId, address _nextId);remove(Data storage self, address _id);updateKey(Data storage self, address _id, uint256 _newKey, address _prevId, address _nextId);contains(Data storage self, address _id);isFull(Data storage self);isEmpty(Data storage self);getSize(Data storage self);getMaxSize(Data storage self);getKey(Data storage self, address _id);getFirst(Data storage self);getLast(Data storage self);getNext(Data storage self, address _id);getPrev(Data storage self, address _id);validInsertPosition(Data storage self, uint256 _key, address _prevId, address _nextId);descendList(Data storage self, uint256 _key, address _startId);ascendList(Data storage self, uint256 _key, address _startId);findInsertPosition(Data storage self, uint256 _key, address _prevId, address _nextId)"
nolash/go-ethereum-p2p-demo,solidity/upgrade/Upgrader.sol,Upgrader();create();upgrade(address _main);check()
landon/Playground,DecentralizedApp1/DecentralizedApp/samples/SimpleDataFeed.sol,update(uint newPrice)
dltdojo/courses,ethereum/solidity/T320_CordaIOU.sol,"IOU(User _lender, User _borrower, uint _amount);verify(IOU _addrIOU)"
mahendra-panchal/smart-contract-basics,Managefund.sol,"getBidIndex(address seller, bytes32 name);closeBid(address seller, uint bidId);refund(address seller, uint bidId);rejectBid(address seller, uint bidId);withdraw(address person)"
woshidama323/hello-github,back/Console.sol,"log(string s, uint x);log(string s, uint32 x);log(string s, int x);log(string s, bytes x);log(string s, bytes32 x);log(string s, address x);log(string s, bool x)"
lkiversonlk/eth-cms,src/contract/94B.sol,"_transfer(address _from, address _to, uint _value);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);burn(uint256 _value);burnFrom(address _from, uint256 _value)"
SilentCicero/wafr,src/tests/solidityTests/gasUsage/examples/MultiSigRules.sol,"hasWon(uint _proposalID);canVote(address _sender, uint _proposalID);canPropose(address _sender);votingWeightOf(address _sender, uint _proposalID)"
raineorshine/solgraph,test/in/Constructor.sol,""
AnnaIsAWang/LedgerLabsCoops2016,AbstractedStateChannel/LockedStateWithFunds.sol,getBalance(address toCheck);addFunds(address recipient)
daostack/daostack,contracts/schemes/LockingEth4Reputation.sol,"release(address payable _beneficiary, bytes32 _lockingId);lock(uint256 _period, bytes32 _agreementHash)"
rolandkofler/matthew,Matthew.sol,Matthew();setFacts();destroyWhenRoundOver();setNewPeriod(uint _newPeriod);getPeriod();getNewPeriod();getDestroyedWhenRoundOver();getBlocksTillMatthew()
MicahZoltu/ethereum-scripts,source/TheDAO.sol,"balanceOf(address _owner);transfer(address _to, uint256 _amount);transferFrom(address _from, address _to, uint256 _amount);approve(address _spender, uint256 _amount);allowance(address _owner, address _spender);balanceOf(address _owner);transfer(address _to, uint256 _amount);approve(address _spender, uint256 _amount);allowance(address _owner, address _spender);payOut(address _recipient, uint _amount);ManagedAccount(address _owner, bool _payOwnerOnly);payOut(address _recipient, uint _amount);createTokenProxy(address _tokenHolder);refund();divisor();createTokenProxy(address _tokenHolder);refund();divisor();receiveEther();newProposal(address _recipient, uint _amount, string _description, bytes _transactionData, uint _debatingPeriod, bool _newCurator);checkProposalCode(uint _proposalID, address _recipient, uint _amount, bytes _transactionData);vote(uint _proposalID, bool _supportsProposal);executeProposal(uint _proposalID, bytes _transactionData);splitDAO(uint _proposalID, address _newCurator);newContract(address _newContract);changeAllowedRecipients(address _recipient, bool _allowed);changeProposalDeposit(uint _proposalDeposit);retrieveDAOReward(bool _toMembers);getMyReward();withdrawRewardFor(address _account);transferWithoutReward(address _to, uint256 _amount);transferFromWithoutReward(address _from, address _to, uint256 _amount);halveMinQuorum();numberOfProposals();getNewDAOAddress(uint _proposalID);isBlocked(address _account);unblockMe()"
motionwerkGmbH/ethermint,pegzone/solidity/contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
ramilexe/ethermint,pegzone/solidity/contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
PeculiumPCL/Peculium,contracts/v0.1/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
kowala-tech/kUSD,client/core/state/test_contracts/Mappings.sol,Mappings()
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/build/NewSafeSend.sol,deliver()
silasdavis/eris-db,tests/jobs_fixtures/app16-binding_abi_using_address_returns_factory_and_base_separate/GSFactory.sol,create();getLast()
silasdavis/eris-db,tests/jobs_fixtures/app15-binding_abi_using_naming_pattern_importing_base/GSFactory.sol,create();getLast()
silasdavis/burrow,tests/jobs_fixtures/app15-binding_abi_using_naming_pattern_importing_base/GSFactory.sol,create();getLast()
silasdavis/burrow,tests/jobs_fixtures/app16-binding_abi_using_address_returns_factory_and_base_separate/GSFactory.sol,create();getLast()
eris-ltd/eris-db,tests/jobs_fixtures/app16-binding_abi_using_address_returns_factory_and_base_separate/GSFactory.sol,create();getLast()
eris-ltd/eris-db,tests/jobs_fixtures/app15-binding_abi_using_naming_pattern_importing_base/GSFactory.sol,create();getLast()
rootprojectco/backend,contracts/reservation/PricingStrategy.sol,isPricingStrategy();calculateTokenAmount(uint weiAmount)
RosEvroBank/IDChain,contracts/idChain.sol,"IDChain();SetAdminContract(address _address);SetStorageContract(address _address);SetIdentifiedContract(address _address);GetPartyRole(address _address);addCustomerHash(bytes32 _token, bytes32 _hash);GiveTokenPerm(address _address, bytes32 _token);RequestP(bytes32 _token, bytes32 _hash);RequestTest(bytes32 _token, bytes32 _hash);RequestC(bytes32 _token, bytes32 _hash)"
bcosorg/bcos,systemcontractv2/AuthorityFilter.sol,"AuthorityFilter();getInfo();setUserGroup(address user, address group);getUserGroup(address user);enable();process(address origin, address from, address to, string func, string input);newGroup()"
ethbets/ebets,contracts/governance.sol,"addMember(address member);removeMember(address member);castVote(address proposal, uint outcome);addProposal(address proposalAddress, uint deadline)"
redsquirrel/augur-core,src/reporting/Market.sol,"initialize(ReportingWindow _reportingWindow, uint256 _endTime, uint8 _numOutcomes, uint256 _payoutDenominator, uint256 _feePerEthInAttoeth, Cash _cash, address _creator, int256 _minDisplayPrice, int256 _maxDisplayPrice, address _automatedReporterAddress, bytes32 _topic);createShareToken(uint8 _outcome);approveSpenders();decreaseMarketCreatorSettlementFeeInAttoethPerEth(uint256 _newFeePerEthInWei);automatedReport(uint256[] _payoutNumerators);disputeAutomatedReport();disputeLimitedReporters();disputeAllReporters();migrateReportingWindow(ReportingWindow _newReportingWindow);updateTentativeWinningPayoutDistributionHash(bytes32 _payoutDistributionHash);tryFinalize();migrateThroughAllForks();migrateThroughOneFork();getReportingToken(uint256[] _payoutNumerators);transferIncorrectDisputeBondsToWinningReportingToken();derivePayoutDistributionHash(uint256[] _payoutNumerators);getReportingTokenOrZeroByPayoutDistributionHash(bytes32 _payoutDistributionHash);getTypeName();getReportingWindow();getBranch();getAutomatedReporterDisputeBondToken();getLimitedReportersDisputeBondToken();getAllReportersDisputeBondToken();getNumberOfOutcomes();getEndTime();getTentativeWinningPayoutDistributionHash();getFinalWinningReportingToken();getShareToken(uint8 outcome);getFinalPayoutDistributionHash();getPayoutDenominator();getDenominationToken();getMarketCreatorSettlementFeeInAttoethPerEth();getMaxDisplayPrice();getMinDisplayPrice();getCompleteSetCostInAttotokens();getTopic();getFinalizationTime();isContainerForReportingToken(ReportingToken _shadyToken);isContainerForShareToken(IShareToken _shadyShareToken);isContainerForDisputeBondToken(DisputeBondToken _shadyBondToken);getAutomatedReportDueTimestamp();getAutomatedReportDisputeDueTimestamp();getReportingState();getWinningPayoutDistributionHashFromFork()"
raineorshine/solgraph,test/in/Require.sol,Foo()
validitylabs/LuckyDAO,app/private/contracts/LuckyDAO.sol,"LuckyDAO(uint _endTimeStamp, address _redeemer, Environment _environment);setEndTimeStamp(uint _endTimeStamp);computeSecret(uint _secretNum, address _address);getParticipant(uint i);winProbability(address _participant);getGuessCount(address _participant);getGuess(address _participant, uint8 i);isWinner(address _participant);redeem()"
pipermerriam/ethereum-alarm-clock,contracts/_test/SimpleToken.sol,buyTokens()
montyly/manticore,tests/ethereum/contracts/consensys_benchmark/reentrancy_dao.sol,withdrawAll();deposit()
trailofbits/manticore,tests/ethereum_bench/consensys_benchmark/reentrancy_dao.sol,withdrawAll();deposit()
nolash/go-ethereum-p2p-demo,solidity/upgrade/lib/owned.sol,owned()
michinbear/solidity,std/owned.sol,owned()
ruchevits/solidity,std/owned.sol,owned()
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs1.sol,"addThing(string description, string url, string filehash, string filename)"
eris-ltd/eris,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs1.sol,"addThing(string description, string url, string filehash, string filename)"
monax/monax,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs1.sol,"addThing(string description, string url, string filehash, string filename)"
eris-ltd/eris-cli,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs1.sol,"addThing(string description, string url, string filehash, string filename)"
monax/cli,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs1.sol,"addThing(string description, string url, string filehash, string filename)"
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs1.sol,"addThing(string description, string url, string filehash, string filename)"
Capillar/capillar-solidity,contracts/basic/owned.sol,owned();setOwner(address _newOwner)
WishFinanceCom/WF-contracts,contracts/helpers/Stub.sol,""
tls-n/BTCPriceFeed,contracts/BTCPriceFeed.sol,parseBitcoinComFeed(string json);submitProofOfPrice(bytes memory proof);getPrice(uint32 timestamp)
y12studio/dltdojo,contracts/ddjtab/contracts/Ddjtab.sol,"balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);approveAndCall(address _spender, uint256 _value, bytes _extraData);sendAliceBlue(address _to, uint16 _certid , uint256 _value, bytes _ipfsHash)"
y12studio/dltdojo,docs/chains/darkorange/Ddjtab.sol,"balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);approveAndCall(address _spender, uint256 _value, bytes _extraData);sendAliceBlue(address _to, uint16 _certid , uint256 _value, bytes _ipfsHash)"
stanta/darfchain,ICO/contracts/test/TestSolidityAddressHash.sol,getHashLeftPad();getHashRightPad()
jnayak1/ember-peer-review-ethereum,public/contracts/PeerReviewDAO.sol,"createPeerReviewContract(address initJournal, bytes initFileHash)"
dltdojo/courses,ethereum/solidity/T230_Time.sol,FooTime();timeInfo();setFooInt(uint x)
TruLtd/tru-reputation-token,contracts/supporting/Ownable.sol,transferOwnership(address newOwner)
AlphaDinoRC/rockchain,test/TestCrowdsaleLogic.sol,testBonus();testCheckRokTeam();testPayTokens();testCheckRokBounty();testCheckRokSold();testPayTeam();testPayout()
GuigsEvt/CrowdsaleEthereum,contracts/BasicToken.sol,"allowance(address _owner, address _spender);balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value)"
SafeContracts/TREX-token,AbstractSafecontractsTREXToken.sol,"issueTokens(address _for, uint tokenCount)"
iam-dev/ERC23,contracts/token/interface/ApproveAndCallReceiver.sol,"receiveApproval(address _from, uint256 _amount, address _token, bytes _data)"
daostack/daostack,contracts/libs/SafeERC20.sol,"safeTransfer(address _erc20Addr, address _to, uint256 _value);safeTransferFrom(address _erc20Addr, address _from, address _to, uint256 _value);safeApprove(address _erc20Addr, address _spender, uint256 _value)"
iurimatias/embark-framework,dapps/tests/service/contracts/pluginSimpleStorage.sol,""
hundsun/blockchain,token.sol,"MyToken(uint256 _supply, string _name, string _symbol, uint8 _decimals);transfer(address _to, uint256 _value);kill()"
ethbitcoin/goodbit,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
tonymichaelhead/Legatum,LegatumClient/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
duaraghav8/Solium,test/lib/rules/indentation/accept/config-tabs.sol,accessPolicy();Counter();inc()
charles-cooper/raiden,raiden/tests/smart_contracts/netting_channel/AuxiliaryTester.sol,"min(uint a, uint b);max(uint a, uint b);computeMerkleRoot(bytes lock, bytes merkle_proof)"
phi-nomenal/phi-nomenal,local_modules/phi-nomenal-contracts/contracts/StockLocation.sol,StockLocation(string location_);stockSize();addStock(Product product)
wilmveel/praetorian-contracts,contracts/Challenge.sol,"authorize(uint8 v, bytes32 r, bytes32 s, address access)"
elementrem/solidity,test/compilationTests/corion/token.sol,"receiveCorionToken(address, uint256, bytes);approvedCorionToken(address, uint256, bytes);replaceModule(address addr);token(bool forReplace, address moduleHandler, address dbAddr, address icoContractAddr, address exchangeContractAddress, address[] genesisAddr, uint256[] genesisValue);closeIco();approve(address spender, uint256 amount, uint256 nonce);approveAndCall(address spender, uint256 amount, uint256 nonce, bytes extraData);_approve(address spender, uint256 amount, uint256 nonce);allowance(address owner, address spender);transfer(address to, uint256 amount);transferFrom(address from, address to, uint256 amount);transferFromByModule(address from, address to, uint256 amount, bool fee);transfer(address to, uint256 amount, bytes extraData);_transferToContract(address from, address to, uint256 amount, bytes extraData);_transfer(address from, address to, uint256 amount, bool fee);processTransactionFee(address owner, uint256 value);_processTransactionFee(address owner, uint256 value);getTransactionFee(uint256 value);mint(address owner, uint256 value);_mint(address owner, uint256 value);burn(address owner, uint256 value);_burn(address owner, uint256 value);isContract(address addr);balanceOf(address owner);totalSupply();configure(announcementType aType, uint256 value)"
web3j/web3j-maven-plugin,src/test/resources/import-with-path/with-spaces/Main.sol,""
primasio/pst,src/main.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);PrimasToken();balanceOf(address _account);totalSupply();transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);doTransfer(address _from, address _to, uint _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);enableTransfers(bool _transfersEnabled);catchYou(address _target, uint _timestamp)"
manishbisht/Udacity,Blockchain Developer Nanodegree/P8 - Capstone - Real Estate Marketplace/eth-contracts/contracts/SolnSquareVerifier.sol,"verifyTx(uint[2] memory a, uint[2] memory a_p, uint[2][2] memory b, uint[2] memory b_p, uint[2] memory c, uint[2] memory c_p, uint[2] memory h, uint[2] memory k, uint[2] memory input);addSolution(uint[2] memory a, uint[2] memory a_p, uint[2][2] memory b, uint[2] memory b_p, uint[2] memory c, uint[2] memory c_p, uint[2] memory h, uint[2] memory k, uint[2] memory input, address to);mintNewToken(uint[2] memory a, uint[2] memory a_p, uint[2][2] memory b, uint[2] memory b_p, uint[2] memory c, uint[2] memory c_p, uint[2] memory h, uint[2] memory k, uint[2] memory input, address to, uint256 tokenId)"
itmo-infocom/EcoChain,DApp/waste-management-edge-hub/contracts/checkUserBalance.sol,Authenticate(address userAddress);checkBalance()
mahendra-panchal/smart-contract-basics,DSProxy.sol,"DSProxy(address _cacheAddr);execute(bytes _code, bytes _data);execute(address _target, bytes _data);setCache(address _cacheAddr);build();build(address owner);read(bytes _code);write(bytes _code)"
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/ownership/Claimable.sol,transferOwnership(address newOwner);claimOwnership()
Majoolr/ethereum-libraries,ArrayUtilsLib/truffle/contracts/Array64Lib.sol,"sumElements(uint64[] storage self);getMax(uint64[] storage self);getMin(uint64[] storage self);indexOf(uint64[] storage self, uint64 value, bool isSorted);getParentI(uint256 index);getLeftChildI(uint256 index);heapSort(uint64[] storage self);uniq(uint64[] storage self)"
elementrem/solidity,test/compilationTests/corion/module.sol,"transfer(address from, address to, uint256 value, bool fee);balanceOf(address owner);disableModule(bool forever);_disableModule(bool forever);replaceModuleHandler(address newModuleHandlerAddress);_replaceModuleHandler(address newModuleHandlerAddress);connectModule();_connectModule();disconnectModule();_disconnectModule();replaceModule(address newModuleAddress);_replaceModule(address newModuleAddress);transferEvent(address from, address to, uint256 value);newSchellingRoundEvent(uint256 roundID, uint256 reward);registerModuleHandler(address _moduleHandlerAddress);isModuleHandler(address addr);isActive()"
ethbets/ebets,contracts/triunvirate.sol,"Triunvirate(address[] _members);castVote(address proposal, uint outcome);addProposal(address proposalAddress, uint deadline);addMember(address member);removeMember(address member)"
GovernX/governx-contracts,src/contracts/tests/test.OpenControllerFactory.sol,setup()
PeculiumPCL/Peculium,contracts/v1.2/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
PeculiumPCL/Peculium,contracts/v2/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
PeculiumPCL/Peculium,contracts/v1.1/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
PeculiumPCL/Peculium,contracts/v1.0/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
dec16180/EtherMediation,mediation.sol,addMediator(address mediator);getAllMediators();getAllClients();getAgreedMediators();randomGen(uint range);getNominatedMediator();getBalance();deposit();refund();withdraw();acceptMediation(uint fee_to_be_paid)
manosamy/enslisting,contracts/MockDeed.sol,MockDeed(address _owner);setOwner(address _owner)
hundsun/blockchain,eth-wallet/app/board/MessageBoardContractV1.sol,transferOwnership(address newOwner);kill();MessageBoard();post(string message);read(uint64 index)
anniemwu/chainge,contracts/User2.sol,storeProof(bytes32 proof);notarize(string descriptor);proofFor(string descriptor);checkString(string descriptor);findString(bytes32 proof);hasProof(bytes32 proof)
ryepdx/etherlab,lib/base/permissions.sol,getPermissionsProvider();setPermissionsProvider(address provider);permitted(address action)
DonorToken/DonorToken,contracts/token/DonorToken.sol,""
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs7.sol,"addThing(bytes32 description, bytes32 url, string filehash, string filename)"
eris-ltd/eris,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs7.sol,"addThing(bytes32 description, bytes32 url, string filehash, string filename)"
monax/monax,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs7.sol,"addThing(bytes32 description, bytes32 url, string filehash, string filename)"
eris-ltd/eris-cli,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs7.sol,"addThing(bytes32 description, bytes32 url, string filehash, string filename)"
monax/cli,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs7.sol,"addThing(bytes32 description, bytes32 url, string filehash, string filename)"
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs7.sol,"addThing(bytes32 description, bytes32 url, string filehash, string filename)"
melonproject/protocol,contracts/integrations/adapters/ZeroExV3Adapter.sol,"identifier();parseAssetsForMethod(bytes4 _selector, bytes calldata _encodedCallArgs);takeOrder(bytes calldata _encodedCallArgs, bytes calldata _encodedAssetTransferArgs);__calcProtocolFeeAmount();__constructOrderStruct(bytes memory _encodedOrderArgs);__getAssetProxy(bytes memory _assetData);__getAssetAddress(bytes memory _assetData);__decodeTakeOrderArgs(bytes memory _encodedCallArgs);__decodeZeroExOrderArgs(bytes memory _encodedZeroExOrderArgs)"
mitchellfchan/IKB,IKB.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);owned();transferOwnership(address newOwner);safeAdd(uint256 x, uint256 y);safeSubtract(uint256 x, uint256 y);safeMult(uint256 x, uint256 y);Klein();balanceOf(address _owner);approve(address _spender, uint256 _value);specificApprove(address _spender, uint256 _edition);allowance(address _owner, address _spender);totalSupply();issueNewSeries();buy();returnChange(uint256 _receivable);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint256 _value);specificTransfer(address _to, uint _edition);specificTransferFrom(address _from, address _to, uint _edition);getTokenHolder(uint searchedRecord);getHolderEditions(address _holder);redeemEther();fund();ritual(uint256 _edition)"
euri10/populus,populus/migrations/RegistrarV3.sol,"Registrar();transferOwner(address newOwner);setParent(address parentAddress);set(string key, bytes32 value);get(string key);exists(string key);setAddress(string key, address value);getAddress(string key);setUInt(string key, uint value);getUInt(string key);setInt(string key, int value);getInt(string key);setBool(string key, bool value);getBool(string key);setString(string key, string value);getString(string key)"
axic/ethereumjs-codesim,examples/hashes.sol,""
b-mueller/mythril,solidity_examples/suicide.sol,kill(address payable addr)
mcgoddard/connect4eth,contracts/Connect4ethTournament.sol,"addGame(bytes32 gameName, address player1, address player2, uint fee);addPlayer(address player, bytes32 name);getPlayerName(address playerAddress);getGameName(address gameAddress);getGames();getPlayers()"
Contraktor-Legal-Tech/contraktor-sign-smart-contract,contracts/Destructible.sol,Destructible();destroy();destroyAndSend(address _recipient)
ethereum/dapp-bin,scrypt/scrypt.sol,"claimComputation(bytes _data, bytes32 _hash);query(uint session, uint16 _i);respond(uint session, uint[4] _value);convict(uint session, uint q1, uint q2, uint q3);convictInitial(uint session, uint q);convictFinal(uint session, uint q);verifyFirstHalf(uint[4] input, uint[4] output);verifySecondHalf(uint[4] input, uint[4] vinput, uint[4] output);computeResponse(uint16 _i);computeResponseSecondHalf(uint16 _i);computeResponseFirstHalf(uint16 _i);quarter(uint32 y0, uint32 y1, uint32 y2, uint32 y3);get(uint data, uint word);put(uint x, uint word);rowround(uint first, uint second);columnround(uint first, uint second);round(uint _a, uint _b, uint _c, uint _d)"
AnnaIsAWang/LedgerLabsCoops2016,StateChannel/PaymentChannel.sol,"PaymentChannel(address addressA, address addressB, uint timeout, bytes state);bytesToUint(bytes input);checkState(bytes state);finaliseState()"
aragon/aragon-core,contracts/test/mocks/AppStubConditionalRecovery.sol,initialize();allowRecoverability(address token)
BiathlonHelsinki/BiathlonContract,contracts/Nodelist.sol,"Nodelist();look_for_node(address addr);is_current();count_nodes();count_users();register_node(string _name);upgrade_self(address _to);upgrade_node(address _from, address _to, string _newname);find_and_or_register_user(address _addr, address _registrar)"
silasdavis/eris-db,tests/jobs_fixtures/app52-proposal-execute/contract.sol,addFoobar(uint n);getFoobar()
silasdavis/burrow,tests/jobs_fixtures/app52-proposal-execute/contract.sol,addFoobar(uint n);getFoobar()
pipermerriam/ethereum-alarm-clock,contracts/_test/TransactionRecorder.sol,TransactionRecorder();__reset__();kill()
eris-ltd/eris-db,tests/compilers_fixtures/libraryContract.sol,"insert(Data storage self, uint value);remove(Data storage self, uint value);contains(Data storage self, uint value);register(uint value)"
SafecontractDev/protocol,contracts/bancor_contracts/BancorChanger.sol,"BancorChanger(ISmartToken _token, IBancorFormula _formula, uint32 _maxChangeFee, IERC20Token _reserveToken, uint32 _reserveRatio);reserveTokenCount();changeableTokenCount();changeableToken(uint16 _tokenIndex);setFormula(IBancorFormula _formula);setQuickBuyPath(address[] _path);getQuickBuyPathLength();getQuickBuyEtherTokenAddress();disableChanging(bool _disable);setChangeFee(uint32 _changeFee);getChangeFeeAmount(uint256 _amount);addReserve(IERC20Token _token, uint32 _ratio, bool _enableVirtualBalance);updateReserve(IERC20Token _reserveToken, uint32 _ratio, bool _enableVirtualBalance, uint256 _virtualBalance);disableReservePurchases(IERC20Token _reserveToken, bool _disable);getReserveBalance(IERC20Token _reserveToken);getReturn(IERC20Token _fromToken, IERC20Token _toToken, uint256 _amount);getPurchaseReturn(IERC20Token _reserveToken, uint256 _depositAmount);getSaleReturn(IERC20Token _reserveToken, uint256 _sellAmount);change(IERC20Token _fromToken, IERC20Token _toToken, uint256 _amount, uint256 _minReturn);buy(IERC20Token _reserveToken, uint256 _depositAmount, uint256 _minReturn);sell(IERC20Token _reserveToken, uint256 _sellAmount, uint256 _minReturn);quickChange(uint256 _amount, address[] _path, uint256 _minReturn);quickBuy(uint256 _minReturn);getSaleReturn(IERC20Token _reserveToken, uint256 _sellAmount, uint256 _totalSupply);ensureAllowance(IERC20Token _token, address _spender, uint256 _value)"
papyrusglobal/smartcontracts,contracts/PapyrusPrototypeToken.sol,"transfer(address to, uint256 value);transferFrom(address from, address to, uint256 value);mint(address receiver, uint256 value, uint256 priceUsd);finishMinting();burn(uint256 value);setTransferable(bool _transferable)"
validitylabs/RockPaperScissors,rps.sol,rps();getWinner();play(string choice);register();checkBothNotNull()
adridadou/hackethon-2016,inProgress/Payouts.sol,"calculatePayout(uint contractId, uint milestoneId, Constraint constraint);payoutForTimeline(uint contractId, uint milestoneId);payoutForBudget(uint contractId, uint milestoneId)"
slavik0329/BetterAuction,betterauction.sol,auctionEndTime();getBid(address _address);bidderUpdateBid();bidderPlaceBid();nonHighestBidderRefund()
nipunn1313/parity,js/src/contracts/snippets/wallet.sol,"multiowned(address[] _owners, uint _required);revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);getOwner(uint ownerIndex);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);reorganizeOwners();clearPending();daylimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today();execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);Wallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);create(uint _value, bytes _code);confirm(bytes32 _h);clearPending()"
destenson/ethcore--parity,js-old/src/contracts/snippets/wallet.sol,"multiowned(address[] _owners, uint _required);revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);getOwner(uint ownerIndex);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);reorganizeOwners();clearPending();daylimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today();execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);Wallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);create(uint _value, bytes _code);confirm(bytes32 _h);clearPending()"
SilentCicero/wafr,src/tests/solidityTests/gasUsage/examples/StandardToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.5/inheritance.sol,"s();getX();getY(uint z, bool r);getY(string storage n);d()"
rsksmart/rskj,rskj-core/src/test/resources/dsl/contract_call/contracts/ErrorHandlingTest.sol,callPrec(address precAddress)
Tzunami/go-earthdollar,release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
raiden-network/raiden-token,contracts/token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);transfer(address _to, uint256 _value, bytes _data);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);balanceOf(address _owner);burn(uint num)"
GX-Coin/SmartContract,GxCoinInterface.sol,isTradingOpen()
iam-dev/ERC23,installed_contracts/zeppelin-solidity/contracts/ownership/NoOwner.sol,""
pipermerriam/populus,tests/fixtures/Multiply13.sol,""
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/monorepo/truffleproject/node_modules/nodepkg/LocalNodeImport.sol,""
Neufund/Contracts,contracts/lib/Owned.sol,Owned();assert(bool cond);transfer_ownership(address new_owner);accept_ownership();terminate(IERC20Basic[] tokens)
suntechsoft/dmarket-smartcontract,contracts/v0.1/ReservationStorage.sol,"reservationFromEthereum(address _to, uint256 _value, uint _token);reservationFromBackend(uint coinId, bytes32 coinAccount, address etherAccount, uint256 value, uint token)"
openanx/OpenANXToken,contracts/OpenANXTokenConfig.sol,""
orbro/eth-enablers,solidity-baby-steps-master/contracts/47_array_passer.sol,getDescription();ArrayPasser(uint8[9] incmap);getElevations()
lucywe/rootcore-crowdsale,solidity/contracts/interfaces/ISmartToken.sol,"disableTransfers(bool _disable);issue(address _to, uint256 _amount);destroy(address _from, uint256 _amount)"
justmake/smart_contract,interfaces/ISmartToken.sol,"disableTransfers(bool _disable);issue(address _to, uint256 _amount);destroy(address _from, uint256 _amount)"
BlockchainLabsNZ/Unconf-DApp,contracts/UnConfFactory.sol,findUnConference(string _name);listUnconferences();create(string _name)
redsquirrel/augur-core,src/legacy_reputation/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
Quiark/populus,tests/utility/projects/test-01/contracts/SolidityContract.sol,Example()
cgewecke/solcover,test/sources/zeppelin/LimitBalance.sol,LimitBalance(uint _limit)
WingsDao/contracts,contracts/zeppelin/LimitBalance.sol,LimitBalance(uint _limit)
JoinColony/solcover,test/sources/zeppelin/LimitBalance.sol,LimitBalance(uint _limit)
bcosorg/bcos,systemcontractv2/NodeAction.sol,NodeAction();updateIdx();cancelNode(string _id);getNode(string _id);getNodeIdx(string _id);getNodeIdsLength();getNodeId(uint _index)
RyuuGan/sol-merger,test/contracts/MultiImports.sol,MyToken()
MzansiRe/iMali,contracts/SafeMath.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b)"
cniemann/etherpricebet,InactiveTests/TestBet_New.sol,testInitalBalanceUsingDeployedContract();testInitalBalanceUsingNewContract()
DigixGlobal/ethereum-ruby,contracts/CustodianInterface.sol,"CustodianInterface(address _config);receiveFromVendor(address _gold, bytes32 _doc);transferCustodian(address _gold, address _cstdn);isRedeemable(address _gold)"
EthWorks/ethereum.rb,contracts/CustodianInterface.sol,"CustodianInterface(address _config);receiveFromVendor(address _gold, bytes32 _doc);transferCustodian(address _gold, address _cstdn);isRedeemable(address _gold)"
marekkirejczyk/ethereum.rb,contracts/CustodianInterface.sol,"CustodianInterface(address _config);receiveFromVendor(address _gold, bytes32 _doc);transferCustodian(address _gold, address _cstdn);isRedeemable(address _gold)"
AlphaDinoRC/rockchain,contracts/ERC20.sol,"balanceOf(address who);transfer(address to, uint256 value);allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
JohannesBertens/movie-list,test/TestSimpleStorage.sol,testItStoresAValue()
TickethProject/ticketh-core,test/TestSimpleStorage.sol,testItStoresAValue()
dltdojo/courses,ethereum/truffle/boxreact/test/TestSimpleStorage.sol,testItStoresAValue()
xas/ico-regroup,GroupIcos/GroupIcos.sol,"killedContract();version();startBuyTime();setAddresses(address _sale, address _token);activateKillSwitch();setBuyTime(uint256 _newTime);withdraw(address user);sendToIco()"
EthTrader/dappening,contracts/TokenFactory.sol,""
montyly/manticore,tests/ethereum/contracts/detectors/selfdestruct_true_neg.sol,kill()
trailofbits/manticore,tests/ethereum/contracts/detectors/selfdestruct_true_neg.sol,kill()
Project-Oaken/water-meter-acorn,demo-for-video/water-meter-1-liter-demo/solidity/WaterMeterAcorn.sol,WaterMeterAcorn(address newMeterKey);transferContractOwnership(address _newOwner);kill()
kingflurkel/sponnietube,app/contracts/token.sol,"receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);transfer(address _to, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);transferFrom(address _from, address _to, uint256 _value)"
FedCoup/FedCoup,installed_contracts/zeppelin/contracts/token/CrowdsaleToken.sol,createTokens(address recipient);getPrice()
QTBlockchain/SolidityNWeb3,SmartContracts/myfirstsample/contracts/Calculator.sol,Calculator()
LykkeCity/EthereumApiDotNetCore,src/ContractBuilder/contracts/token/Erc223/LyCI.sol,""
thekaleidoscope/Hello-Ethereum,contracts/Test2.sol,"giveCredits(address adr,uint crd);giveEther(address adr,uint amt );buyCredits(address adr,uint crd);Balance(address adr)"
chevdor/testrpc,test/Example.sol,Example();setValue(uint val)
AleksandrLeonov/Baccara-Smart-Contract,dealer.sol,Dealer();deal();close()
zetherz/eth-match,test/helpers/SafeERC20Helper.sol,"transfer(address, uint256);transferFrom(address, address, uint256);approve(address, uint256);balanceOf(address);allowance(address, address);transfer(address, uint256);transferFrom(address, address, uint256);approve(address, uint256);balanceOf(address);allowance(address, address);doFailingTransfer();doFailingTransferFrom();doFailingApprove();doSucceedingTransfer();doSucceedingTransferFrom();doSucceedingApprove()"
BSDStudios/parity,js/src/contracts/snippets/human-standard-token.sol,"approveAndCall(address _spender, uint256 _value, bytes _extraData)"
nipunn1313/parity,js/src/contracts/snippets/human-standard-token.sol,"approveAndCall(address _spender, uint256 _value, bytes _extraData)"
destenson/ethcore--parity,js-old/src/contracts/snippets/human-standard-token.sol,"approveAndCall(address _spender, uint256 _value, bytes _extraData)"
immartian/musicoin,js/src/contracts/snippets/human-standard-token.sol,"approveAndCall(address _spender, uint256 _value, bytes _extraData)"
pdaian/parity,js/src/contracts/snippets/human-standard-token.sol,"approveAndCall(address _spender, uint256 _value, bytes _extraData)"
crypto-coder/Tokens,Token_Contracts/contracts/HumanStandardToken.sol,"approveAndCall(address _spender, uint256 _value, bytes _extraData)"
jesuscript/parity,js/src/contracts/snippets/human-standard-token.sol,"approveAndCall(address _spender, uint256 _value, bytes _extraData)"
gmo-blockchain/solidity,contracts/AddressGroup.sol,""
daostack/daostack,contracts/test/ARCDebug.sol,""
sirasistant/market_consensys_academy,contracts/SampleRecipientThrow.sol,""
Dicoiner/irianna-solidity,contracts/ownership/Ownable.sol,Ownable();transferOwnership(address newOwner)
orbro/eth-enablers,protectTheCastle.sol,ProtectTheCastle();repairTheCastle();function();surrender();newBribedCitizen(address newBribedCitizen);collectFee();newJester(address newJester)
GovernX/governx-contracts,src/contracts/ElectedBoardController.sol,"ElectedBoardController(address _proxy, address[] _members, uint256 _required, address _electorate);changeVariables(uint256 _required);changeElectorate(address _electorate);addMember(address _member);removeMember(address _member)"
duaraghav8/Solium,test/lib/rules/indentation/accept/config-two-spaces.sol,accessPolicy();Counter();inc()
enjin/contracts,solidity/contracts/ENJToken.sol,"ENJToken(address _crowdFundAddress, address _advisorAddress, address _incentivisationFundAddress, address _enjinTeamAddress);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);releaseEnjinTeamTokens();releaseAdvisorTokens();retrieveUnsoldTokens();addToAllocation(uint256 _amount);allowTransfers();isTransferAllowed()"
phi-nomenal/phi-nomenal,local_modules/phi-nomenal-contracts/contracts/Quotation.sol,"Quotation(uint greenness_, string deliveryDate_)"
hackaugusto/raiden,raiden/tests/smart_contracts/RpcTest.sol,fail();ret();loop(uint reps);createEvent(uint _someId)
CORIONplatform/solidity,announcementTypes.sol,""
SmartChainX/ChainBlockchain,Contracts/Base/Proxy.sol,addAuthorizedAddress(address target);removeAuthorizedAddress(address target);getAuthorizedAddresses()
airalab/DAO-IPCI,contracts/Commitment.sol,setPercentage(uint _percentage);balance();emissionLimit();emission(uint _value);transfer(uint _value)
shekhar-shubhendu/supply-chain,contracts/OrderRegistry.sol,"createOrder(string memory orderno, string memory product, string memory temp, string memory value, string memory quantity, string memory delivery);setDistValues(string memory orderno, string memory name, string memory delivery, string memory value, string memory quantity);setMfgValues(string memory orderno, string memory name, string memory material, string memory delivery, string memory value, string memory quantity);setReport(string memory orderno,uint category, string memory report);getReport(string memory orderno,uint category);fetchInitialDetails(string memory orderno);getDistValues(string memory orderno);getMfgDetails(string memory orderno)"
RyuuGan/sol-merger,test/compiled/AbstractContract.sol,utterance();utterance()
orbro/eth-enablers,solidity-baby-steps-master/contracts/10_creator_balance_checker.sol,creatorBalanceChecker();getContractAddress();getCreatorBalance();getCreatorDotBalance();kill()
Dicoiner/irianna-solidity,contracts/lifecycle/Migrations.sol,setCompleted(uint256 completed);upgrade(address newAddress)
district0x/name-bazaar,resources/public/contracts/src/Offering.sol,"unregister();reclaimOwnership();transferOwnership(address payable _newOwner);doTransferOwnership(address payable _newOwner);doSetSettings(uint _price);fireOnChanged(bytes32 eventType, uint[] memory extraData);fireOnChanged(bytes32 eventType);isContractNodeOwner();isNodeTLDOfRegistrar();isSenderOriginalOwner();isSenderEmergencyMultisig();wasEmergencyCancelled()"
ProBonoPublicoWorld/ico-contracts,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address newAddress)
melonproject/protocol,contracts/prices/derivatives/ChaiPriceFeed.sol,getRatesToUnderlyings(address _derivative);__calcChaiRate();chi();rho();drip()
misrab/gethools,testdata/imp0.sol,b()
DavdRoman/Payroll,contracts/Tokens/ERC20.sol,"balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
LOOMIA/loomia,ethereum/test/Crowdsale.sol,"Crowdsale(uint256 _startTime, uint256 _endTime, uint256 _rate, address _wallet);createTokenContract();buyTokens(address beneficiary);forwardFunds();validPurchase();hasEnded()"
Getline-Network/getline,dapp/contracts/loans/Loan.sol,collateralToken();loanToken();amountWanted();borrower();interestPermil();state();paybackRequired();totalAmountInvested();amountInvested(address investor);fundraisingDeadline();paybackDeadline();fundraisingDelta();paybackDelta();receivedCollateral();gatherCollateral();invest();payback();withdrawable();withdraw()
SwapyNetwork/swapy-exchange-protocol,test/TestSwapyExchange_actions.sol,shouldThrow(bool result);testUserCanCreateOfferWithoutVersion();testUserCanCreateOfferWithVersion();testUserCannotCreateOfferWithAnInvalidVersion();testUnitValueAndFundsMustMatch();testUserCanInvest();testOnlyInvestorCanCancelInvestment();testInvestorCanCancelInvestment();testOnlyOwnerCanRefuseInvestment();testOwnerCanRefuseInvestment();testOnlyOwnerCanWithdrawFunds();testOwnerCanWithdrawFunds();testOnlyInvestorCanPutOnSale();testInvestorCanPutOnSale();testOnlyInvestorCanRemoveOnSale();testInvestorCanRemoveOnSale();testUserCanBuyAsset();testOnlyBuyerCanCancelPurchase();testBuyerCanCancelPurchase();testOnlyInvestorCanRefusePurchase();testInvestorCanRefusePurchase();testOnlyInvestorCanAcceptSale();testInvestorCanAcceptSale();testOnlyOwnerCanReturnInvestment();testReturnValuesAndFundsMustMatch();testOwnerCanReturnInvestment()
ProjectEntropy/project-entropy.com_meteor,app/client/lib/contracts/Database.sol,""
airalab/core,contracts/robonomics/interface/IFactory.sol,"wnFromGas(uint256 _gas);liabilityCreated(ILiability _liability, uint256 _start_gas);liabilityFinalized(ILiability _liability, uint256 _start_gas)"
channel/channel.github.io,contracts/Feed.sol,"Feed();publish(address publisher, uint256 contentID, address token, uint256 parentID);tip(uint256 contentID, address token, uint256 value);createAccountFundContract();withdrawAccountBalance(address token);updatePublishContract(address publishContract);updateChannelMinimum(address token, uint256 minimum);getContent(uint256 contentID);getReplyCount(uint256 contentID);getChannelSize(address token);getAccountSize(address user);getAccountContentTip(address user, uint256 contentID);getAccountFundContract(address user);getAccountTokenBalance(address user, address token)"
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/ownership/HasNoEther.sol,reclaimEther()
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/crowdsale/price/IncreasingPriceCrowdsale.sol,getCurrentRate();_getTokenAmount(uint256 _weiAmount)
vishakh/blockinstruments,contracts/Loggable.sol,toText(bool flag)
stevejaxon/ethereum-tutorials,contracts/channels/payment/SimplePaymentChannel.sol,"SimplePaymentChannel(address to, uint timeout);CloseChannel(bytes32 h, uint8 v, bytes32 r, bytes32 s, uint value);ChannelTimeout()"
DigixGlobal/ethereum-ruby,contracts/classic/ParticipantRegistry.sol,ParticipantRegistry();getOwner();setOwner(address nown);registerAdmin(address regraddr);unregisterAdmin(address regraddr);registerVendor(address vendoraddress);unregisterVendor(address vendoraddress);registerCustodian(address custodianaddress);unregisterCustodian(address custodianaddress);registerAuditor(address auditoraddress);unregisterAuditor(address auditoraddress);isVendor(address vendoraddress);isCustodian(address custodianaddress);isAuditor(address auditoraddress);isRegistrar(address regraddr)
EthWorks/ethereum.rb,contracts/classic/ParticipantRegistry.sol,ParticipantRegistry();getOwner();setOwner(address nown);registerAdmin(address regraddr);unregisterAdmin(address regraddr);registerVendor(address vendoraddress);unregisterVendor(address vendoraddress);registerCustodian(address custodianaddress);unregisterCustodian(address custodianaddress);registerAuditor(address auditoraddress);unregisterAuditor(address auditoraddress);isVendor(address vendoraddress);isCustodian(address custodianaddress);isAuditor(address auditoraddress);isRegistrar(address regraddr)
marekkirejczyk/ethereum.rb,contracts/classic/ParticipantRegistry.sol,ParticipantRegistry();getOwner();setOwner(address nown);registerAdmin(address regraddr);unregisterAdmin(address regraddr);registerVendor(address vendoraddress);unregisterVendor(address vendoraddress);registerCustodian(address custodianaddress);unregisterCustodian(address custodianaddress);registerAuditor(address auditoraddress);unregisterAuditor(address auditoraddress);isVendor(address vendoraddress);isCustodian(address custodianaddress);isAuditor(address auditoraddress);isRegistrar(address regraddr)
jellegerbrandy/daostack,contracts/zeppelin-solidity/token/BasicToken.sol,"transfer(address _to, uint _value);balanceOf(address _owner)"
cgewecke/solcover,test/sources/zeppelin/token/BasicToken.sol,"transfer(address _to, uint _value);balanceOf(address _owner)"
WingsDao/contracts,contracts/zeppelin/token/BasicToken.sol,"transfer(address _to, uint _value);balanceOf(address _owner)"
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/token/BasicToken.sol,"transfer(address _to, uint _value);balanceOf(address _owner)"
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/token/BasicToken.sol,"transfer(address _to, uint _value);balanceOf(address _owner)"
AragonOne/zeppelin-solidity,contracts/token/BasicToken.sol,"transfer(address _to, uint _value);balanceOf(address _owner)"
JoinColony/solcover,test/sources/zeppelin/token/BasicToken.sol,"transfer(address _to, uint _value);balanceOf(address _owner)"
aragon/aragon-network-token,packages/controller/e2e/mocks/AragonTokenSale.sol,"totalSupply();balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value);safeMul(uint a, uint b);safeDiv(uint a, uint b);safeSub(uint a, uint b);safeAdd(uint a, uint b);assert(bool assertion);receiveApproval(address _from, uint256 _amount, address _token, bytes _data);Controlled();changeController(address _newController);saleFinalized();SaleWallet(address _multisig, uint _finalBlock, address _tokenSale);withdraw();doWithdraw();proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);ANPlaceholder(address _sale, address _ant);changeController(address network);proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);transfer(address _to, uint256 _amount);balanceOf(address _owner);approve(address _spender, uint256 _amount);totalSupply();balanceOfAt(address _owner, uint _blockNumber);totalSupplyAt(uint _blockNumber);min(uint a, uint b);enableTransfers(bool _transfersEnabled);isContract(address _addr);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);spendableBalanceOf(address _holder);setCanCreateGrants(address _addr, bool _allowed);doSetCanCreateGrants(address _addr, bool _allowed);changeVestingWhitelister(address _newWhitelister);revokeTokenGrant(address _holder, uint _grantId);tokenGrantsCount(address _holder);tokenGrant(address _holder, uint _grantId);vestedTokens(TokenGrant grant, uint64 time);nonVestedTokens(TokenGrant grant, uint64 time);lastTokenIsTransferableDate(address holder);transferableTokens(address holder, uint64 time);setANT(address _token, address _networkPlaceholder, address _saleWallet);activateSale();doActivateSale(address _entity);isActivated();getPrice(uint _blockNumber);stageForBlock(uint _blockNumber);priceForStage(uint8 _stage);allocatePresaleTokens(address _receiver, uint _amount, uint64 cliffDate, uint64 vestingDate);proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);doPayment(address _owner);emergencyStopSale();restartSale();revealCap(uint256 _cap, uint256 _cap_secure);finalizeSale(uint256 _cap, uint256 _cap_secure);doFinalizeSale(uint256 _cap, uint256 _cap_secure);deployNetwork(address networkAddress);setAragonDevMultisig(address _newMultisig);setCommunityMultisig(address _newMultisig);getBlockNumber();computeCap(uint256 _cap, uint256 _cap_secure);isValidCap(uint256 _cap, uint256 _cap_secure)"
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.5/ballot.sol,giveRightToVote(address voter);delegate(address to);vote(uint proposal);winningProposal();winnerName()
machinomy/machinomy,packages/contracts/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address newAddress)
AdChain/AdChainRegistry,contracts/historical/Filter.sol,setup(Disbursement _disburser);claim()
SafecontractDev/protocol,contracts/bancor_contracts/SmartTokenController.sol,"SmartTokenController(ISmartToken _token);transferTokenOwnership(address _newOwner);acceptTokenOwnership();disableTokenTransfers(bool _disable);withdrawFromToken(IERC20Token _token, address _to, uint256 _amount)"
web3j/web3j-maven-plugin,src/test/resources/Greeter.sol,kill();greet()
FedCoup/FedCoup,installed_contracts/zeppelin/contracts/token/StandardToken.sol,"transferFrom(address _from, address _to, uint _value);approve(address _spender, uint _value);allowance(address _owner, address _spender)"
ConsenSys/live-libs,contracts/LibFund.sol,"setOwner(address o);setThreshold(bytes32 libName, uint versionNum, uint threshold, address author);addTo(bytes32 libName, uint versionNum);isLocked(bytes32 libName, uint versionNum);get(bytes32 libName, uint versionNum)"
aragon/aragon-core,contracts/test/mocks/EtherTokenConstantMock.sol,getETHConstant()
cgewecke/solcover,test/sources/statements/post-close-brace.sol,a(uint x)
JoinColony/solcover,test/sources/statements/post-close-brace.sol,a(uint x)
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.4.24/selfdestruct.sol,""
LykkeCity/EthereumApiDotNetCore,src/ContractBuilder/contracts/mainExchangeManyOwners.sol,"MainExchange();cashout(uint id, address coinAddress, address client, address to, uint amount, bytes client_sign, bytes params);transfer(uint id, address coinAddress, address from, address to, uint amount, bytes sign, bytes params);transferWithChange(uint id, address coinAddress, address fromAddress, address toAddress, uint amount, uint change, bytes fromSign, bytes toSign, bytes params);changeMainContractInCoin(address coinContract, address newMainContract);_transferCoins(address contractAddress, address from, address to, uint amount);_checkClientSign(address client_addr, bytes32 hash, bytes sig);AddOwners(address[] owners);RemoveOwners(address[] owners);isOwner(address ownerAddress);ping()"
wilmveel/praetorian-contracts,contracts/Grant.sol,Grant(address _client);authorize();revoke();getState()
EthTrader/dappening,contracts/Store.sol,"Store(bool _isDev, uint _decimals);set(bytes20 _key, uint _val);remove(bytes20 _key)"
gmo-blockchain/solidity,contracts/FileObject_v1.sol,"create(bytes32 _id, address _owner, bytes32 _nameHash, bytes32 _hash, address _cns, bytes32 _contractName);remove(bytes32 _id);exist(bytes32 _id);isActive(bytes32 _id);addAllowCnsContract(bytes32 _id, address _cns, bytes32 _contractName);removeAllowCnsContract(bytes32 _id, address _cns, bytes32 _contractName);isAllowCnsContract(address _cns, bytes32 _contractName, bytes32 _id);setOwner(bytes32 _id, address _new);getOwner(bytes32 _id);setHashByWriter(bytes32 _id, address _writer, bytes32 _hash);setHashByProvider(bytes32 _id, bytes32 _hash);setNameHashByWriter(bytes32 _id, address _writer, bytes32 _hash);getHash(bytes32 _id);getNameHash(bytes32 _id);setReaderId(bytes32 _id, bytes32 _readerId);setWriterId(bytes32 _id, bytes32 _writerId);setNameReaderId(bytes32 _id, bytes32 _readerId);setNameWriterId(bytes32 _id, bytes32 _writerId);getReaderId(bytes32 _id);getWriterId(bytes32 _id);getNameReaderId(bytes32 _id);getNameWriterId(bytes32 _id);canRead(address _account, bytes32 _id);canWrite(address _account, bytes32 _id);canReadName(address _account, bytes32 _id);canWriteName(address _account, bytes32 _id)"
stevejaxon/ethereum-tutorials,contracts/cryptozombies/ZombieOwnership.sol,"balanceOf(address _owner);ownerOf(uint256 _tokenId);_transfer(address _from, address _to, uint256 _tokenId);transfer(address _to, uint256 _tokenId);approve(address _to, uint256 _tokenId);takeOwnership(uint256 _tokenId)"
erooijak/ethlance,resources/public/contracts/src/ethlanceFeedback.sol,EthlanceFeedback(address _ethlanceDB)
acebusters/safe-token-sale,test/helpers/MockController.sol,"MockController(address _powerAddr, address _pullAddr, address _nutzAddr, address _storageAddr);inflateActiveSupply(uint256 _extraSupply);ethBalance()"
BeBlockTech/Anemoi,Master/contracts/SafeMath.sol,"safeAdd(uint256 x, uint256 y);safeSubtract(uint256 x, uint256 y);safeMult(uint256 x, uint256 y)"
lserafin/Tic-tac-toe,contracts/TicTacToeGame.sol,TicTacToeGame();getOpponent();getGameStatus();acceptGame();getPosition(uint8 position);placeMove(uint8 position);checkGameStatus()
etherisc/flightDelay,contracts/FlightDelayAddressResolver.sol,FlightDelayAddressResolver();changeOwner(address _owner);getAddress();setAddress(address _addr)
jashans98/dwikileaks,app/test/TestLeak.sol,testSubmitHash();testReceiveHash();testReceiveSubmittal()
TechEnterprises/guildrep,crowdfund.sol,""
TechEnterprises/pXP,crowdfund.sol,""
TechEnterprises/GuildSkrypt-genesis-blocks,crowdfund.sol,""
TechEnterprises/GuildSkrypt,crowdfund.sol,""
ChronoBank/LX-SC,contracts/UserLibrary.sol,"setupEventsHistory(address _eventsHistory);hasArea(address _user, uint _area);getCategoryInfo(address _user, uint _area, uint _category);hasCategory(address _user, uint _area, uint _category);getUserSkills(address _user);getUsersCount();addMany(address _user, uint _areas, uint[] _categories, uint[] _skills);setMany(address _user, uint _areas, uint[] _categories, uint[] _skills);_addArea(address _user, uint _area);_addCategory(address _user, uint _area, uint _category);_setAreas(address _user, uint _areas);_setCategories(address _user, uint _area, uint _categories);_setSkills(address _user, uint _area, uint _category, uint _skills);_isValidAreaOrCategory(uint _value);_getAreaOrCategoryBits(uint _value);_emitSkillAreasSet(address _user, uint _areas);_emitSkillCategoriesSet(address _user, uint _area, uint _categories);_emitSkillsSet(address _user, uint _area, uint _category, uint _skills);emitSkillAreasSet(address _user, uint _areas);emitSkillCategoriesSet(address _user, uint _area, uint _categories);emitSkillsSet(address _user, uint _area, uint _category, uint _skills)"
CoderDennis/recoverable-wallet,contracts/token.sol,"Token();totalSupply();balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint256 value);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
justmake/smart_contract,JustmakeToken.sol,"totalSupply();balanceOf(address _owner );transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value );allowance(address _owner, address _spender);mul(uint a, uint b);div(uint a, uint b);sub(uint a, uint b);add(uint a, uint b);Utils();safeMul(uint a, uint b);safeDiv(uint a, uint b);safeSub(uint a, uint b);safeAdd(uint a, uint b);isToken();totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);isUpgradeAgent();upgradeFrom(address _tokenHolder, uint _amount);UpgradeableToken(address _upgradeMaster);upgrade(uint value);setUpgradeAgent(address agent);getUpgradeState();setUpgradeMaster(address master);canUpgrade();ManagedToken();transferOwnership(address _newOwner);acceptOwnership();startEngines();blastOff(address _to);nextStage();releaseTokenSaleJM(address _to, uint _jm);autoReleaseTokenSaleJM();releaseFeesAndBountyJM(address _to, uint _jm);releaseFoundationJM(address _to);releaseEcosystemJM(address _to);setAutoDistributionViaETHContributions(bool _bool);setJMETHExchangeRate(uint _jm_no_decimals);setMaxETHContribution(uint _wei);setMaxETHAutoContributions(uint _jm);engineRunning();isFlying();autoDistributionViaETHContributions();currentStage();currentStageMaxSupply();currentStageRemainingJM();currentStageETHContributions();tokenSaleSupplyRemaining();feesAndBountySupplyRemaining();ecosystemSupplyRemaining();foundationSupplyRemaining();JM_ETH_ExchangeRate();maxETHContribution();maxETHAutoContributions();rocketshipReachedDestination();JustmakeToken();name();symbol();decimals()"
dacplayproject/play-dapp,src/FloatGameToken.sol,"FloatGameToken(bytes32 _symbol, address _pls);tokenFallback(address _from, uint256 _value, bytes _data);buyToken(address _from, uint _value, uint _minReturn, bool transfered);sellToken(address _from, uint _value, uint _minReturn, bool transfered);price();mint(address _guy, uint _wad);burn(address _guy, uint _wad)"
web3j/web3j-maven-plugin,src/test/resources/import-with-path/dependencies with spaces/Dependency.sol,""
web3j/web3j-maven-plugin,src/test/resources/import-with-path/dependencies/Dependency.sol,""
KudosProject/kudos-token,test/helpers/SafeMathMock.sol,"multiply(uint a, uint b);subtract(uint a, uint b);add(uint a, uint b);divide(uint a, uint b)"
kowala-tech/kUSD,client/contracts/truffle/contracts/kns/DomainResolver.sol,addr(bytes32 node)
jvah/spicehours,contracts/IPayoutCalculator.sol,"calculatePayout(bytes32 _info, uint _duration)"
SmartChainX/ChainBlockchain,Contracts/ICO/Crowdsale.sol,"Crowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal);investInternal(address receiver, uint128 customerId);preallocate(address receiver, uint fullTokens, uint weiPrice);investWithSignedAddress(address addr, uint128 customerId, uint8 v, bytes32 r, bytes32 s);investWithCustomerId(address addr, uint128 customerId);invest(address addr);buyWithSignedAddress(uint128 customerId, uint8 v, bytes32 r, bytes32 s);buyWithCustomerId(uint128 customerId)"
shahankhatch/weifund-contracts,src/contracts/StandardCampaign.sol,checkInvarience();contributeMsgValue();payoutToBeneficiary();claimRefundOwed(uint256 _contributionID);totalContributions();totalContributionsBySender(address _sender)
AICoin-io/AICoin,contracts/AICoin.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);administrator();totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _amount);transferFrom(address _from, address _to, uint256 _amount);approve(address _spender, uint256 _amount);allowance(address _owner, address _spender);adminAddBallot(string _proposal, uint256 _start, uint256 _end);adminAmendBallot(uint32 _ballotId, string _proposal, uint256 _start, uint256 _end);adminAddBallotOption(uint32 _ballotId, string _option);adminEditBallotOption(uint32 _ballotId, uint32 _optionId, string _option);adminSealBallot(uint32 _ballotId);isBallotInProgress(uint32 _ballotId);hasBallotEnded(uint32 _ballotId);isBallotSealed(uint32 _ballotId);vote(uint32 _ballotId, uint32 _selectedOptionId);hasAddressVotedInBallot(uint32 _ballotId, address _voter);accountHasCurrentVote(address _voter)"
jellegerbrandy/daostack,contracts/Ballot.sol,Ballot(Reputation _reputationContractAddress);vote(uint proposal);winningProposal();executeWinningProposal()
redsquirrel/augur-core,src/legacy_reputation/PausableToken.sol,"transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value)"
lzxm160/test-dapp,contracts/testsol说明.sol,Ballot(bytes32[] proposalNames);giveRightToVote(address voter);delegate(address to);vote(uint proposalIndex);winningProposal();winnerName()
robmyers/artworld-ethereum,old/src/binary-aesthetic.sol,""
AnnaIsAWang/LedgerLabsCoops2016,StateChannel/TicTacToe.sol,"TicTacToe(address x, address o, uint timeout);gridToIndex(uint x, uint y);lastSender();checkState(bytes state);finaliseState()"
DroneEmployee/contracts,ros/AirTrafficControlROS.sol,"newRequest(address _addr);incomingMessage(Message _msg);AirTrafficControllerROS(address _endpoint, address _atc);makeRoute(Checkpoint[] _checkpoints);dropRoute(uint32 _id);setRoute(Aircraft _aircraft, RouteResponse _response)"
TheRougeProject/RougeTokens,contracts/RougeTGE.sol,"balanceOf(address _owner);balanceOf(address _owner);transfer(address _to, uint256 _value);toggleFunding(bool _flag);isFundingOpen();tokensOf(address _who);_with_RGXBonus(Sale _sale, address _a, uint8 _multiplier, uint8 _divisor);_with_RGXToken(Sale _sale, address _a, uint8 _multiplier, uint8 _divisor);toggleKYC(address _who, bool _flag);revertAML(address _who);withdraw();withdrawFunding();kill()"
prashantpawar/truffle,templates/Test.sol,testIsTrue()
anniemwu/chainge,node_modules/truffle/build/templates/Test.sol,testIsTrue()
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/build/templates/Test.sol,testIsTrue()
hsavit1/gosofi_webpage,node_modules/truffle/build/templates/Test.sol,testIsTrue()
DigixGlobal/truffle,build/templates/Test.sol,testIsTrue()
stevejaxon/ethereum-tutorials,contracts/channels/signeth/MockGetTogether.sol,MockGetTogether();owner();coupon();getTogetherDate();stakeRequired();attendeesList();numberOfAttendees();maxCapacity();canCancel(uint datetime);amountOfStakeReturnedOnCancellation(uint _datetime);whenStakeCanBeReturned();register(address _attendee);cancelRegistration(address _attendee);cancelGetTogether()
dltdojo/courses,ethereum/solidity/T240_CrowdSale.sol,"info();buyTokens(Crowdsale crowdsale, uint weiAmount)"
cryptape/cita,scripts/contracts/src/system/ChainManager.sol,"getChainId();newSideChain(uint sideChainId, address[] addrs);enableSideChain(uint id);disableSideChain(uint id);getParentChainId();getAuthorities(uint id)"
Pavel-DV/ChronoMint,old/ChronoBankAssetProxyInterface.sol,"__transferWithReference(address _to, uint _value, string _reference, address _sender);__transferFromWithReference(address _from, address _to, uint _value, string _reference, address _sender);__approve(address _spender, uint _value, address _sender)"
bshevchenko/ChronoMint,old/ChronoBankAssetProxyInterface.sol,"__transferWithReference(address _to, uint _value, string _reference, address _sender);__transferFromWithReference(address _from, address _to, uint _value, string _reference, address _sender);__approve(address _spender, uint _value, address _sender)"
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app27-multiple_imports_and_multiple_constructor_different_factory_types/contracts/GSSingle.sol,GSSingle(uint initialValue);set(uint x);get()
eris-ltd/eris,tests/jobs_fixtures/app27-multiple_imports_and_multiple_constructor_different_factory_types/contracts/GSSingle.sol,GSSingle(uint initialValue);set(uint x);get()
monax/monax,tests/jobs_fixtures/app27-multiple_imports_and_multiple_constructor_different_factory_types/contracts/GSSingle.sol,GSSingle(uint initialValue);set(uint x);get()
eris-ltd/eris-cli,tests/jobs_fixtures/app27-multiple_imports_and_multiple_constructor_different_factory_types/contracts/GSSingle.sol,GSSingle(uint initialValue);set(uint x);get()
monax/cli,tests/jobs_fixtures/app27-multiple_imports_and_multiple_constructor_different_factory_types/contracts/GSSingle.sol,GSSingle(uint initialValue);set(uint x);get()
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app27-multiple_imports_and_multiple_constructor_different_factory_types/contracts/GSSingle.sol,GSSingle(uint initialValue);set(uint x);get()
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/contract_names/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/migrations/success/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/migrations/error/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/migrations/production/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/migrations/init/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
fractalPlatform/Fractal,test/fee/MultiAsset.sol,"reg(string desc);add(uint256 assetId, address to, uint256 value );transAsset(address to, uint256 value);changeOwner(address newOwner, uint256 assetId)"
iam-dev/ERC23,contracts/Utils.sol,""
SwapyNetwork/swapy-exchange-protocol,contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
GX-Coin/SmartContract,GxCoinTokenControllerInterface.sol,"totalSupply();balanceOf(address who);allowance(address owner, address spender);transfer(address _caller, address to, uint value);transferFrom(address _caller, address from, address to, uint value);approve( address _caller, address spender, uint value)"
daostack/daostack,contracts/globalConstraints/TokenCapGC.sol,"setParameters(IERC20 _token, uint256 _cap);getParametersHash(IERC20 _token, uint256 _cap);pre(address, bytes32, bytes32);post(address, bytes32 _paramsHash, bytes32);when()"
miller46/digital-identity,contracts/PersonaIdentity.sol,"PersonaIdentity();addKey(address _key, uint256 _type);replaceKey(address _oldKey, address _newKey);removeKey(address _key);execute(address _to, uint256 _value, bytes32 _data);approve(bytes32 _id, bool _approve);removeClaim(bytes32 _claimId);_addKey(address _key, uint256 _type);_removeKey(address _key);getKeyType(address _key);getKeysByType(uint256 _type);getClaim(bytes32 _claimId);getClaimsIdByType(uint256 _claimType)"
KuekenPartei/party-contracts,src/main/resources/mix/publishing.sol,"publishMessage(string message,string hash,string er);ShortBlog(string _name);sendMessage(string message,string hash,string er);registerBlog(string _name)"
tetriseffect/activate,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
AnnaIsAWang/LedgerLabsCoops2016,StateChannel/StateChannel.sol,"checkState(bytes state);finaliseState();StateChannel(address addressA, address addressB, uint timeout, bytes state);getHash(bytes state, uint nonce);closeChannel(bytes state, uint nonce, uint8 v, bytes32 r, bytes32 s);finaliseChannel()"
ultra-koder/JobMarket,.c9/metadata/workspace/dapp/contracts/std.sol,""
locals-world/locals-app,truffle/contracts/localsReptoken.sol,"receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);transfer(address _to, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);transferFrom(address _from, address _to, uint256 _value);mintToken(address target, uint256 mintedAmount);addToWhitelist(address _whitelistaddr);kill()"
montyly/manticore,tests/ethereum/contracts/detectors/selfdestruct_true_neg1.sol,fakeSetOwner();kill()
trailofbits/manticore,tests/ethereum/contracts/detectors/selfdestruct_true_neg1.sol,fakeSetOwner();kill()
prashantpawar/truffle,test/scenarios/contract_names/relative_import.sol,""
anniemwu/chainge,node_modules/truffle/test/scenarios/contract_names/relative_import.sol,""
hsavit1/gosofi_webpage,node_modules/truffle/test/scenarios/contract_names/relative_import.sol,""
DigixGlobal/truffle,test/scenarios/contract_names/relative_import.sol,""
ChainTrade/ctc-token,contracts/CTCToken.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);Ownable();transferOwnership(address newOwner);totalSupply();balanceOf(address who);transfer(address to, uint256 value);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);allowance(address owner, address spender);CTCToken(address _multisig);tokensale(address recipient);updateBalances(address receiver, uint256 tokens);refundFunds(address origin);forwardFunds();validPurchase();hasEnded();getNow();changeTokenRate(uint _tokenPrice);finishMinting();startTradable(bool _tradable);updateICODate(uint256 _startTime, uint256 _endTime);changeStartTime(uint256 _startTime);changeEndTime(uint256 _endTime);totalSupply();totalNumberTokenSold();changeTotalSupply(uint256 totalSupply);balanceOf(address who);balanceOfKyCToBeApproved(address who);approveBalancesWaitingKYC(address[] listAddresses);addBonusForOneHolder(address holder, uint256 bonusToken);addBonusForMultipleHolders(address[] listAddresses, uint256[] bonus);modifyCurrentHardCap(uint256 _hardCap);transfer(address to, uint256 value);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);allowance(address _owner, address spender);getRate();getTokenDetail()"
aragon/aragon-core,contracts/apps/UnsafeAragonApp.sol,""
Capillar/capillar-solidity,test/Test_CAP1.sol,"beforeEach();testMinting();testTransfering();testApproveTransfer();ProxyUser(address _inst);transfer(address _to, uint _amount);transferFrom(address _from, address _to, uint _amount);approve(address _spender, uint _amount);remove()"
PeculiumPCL/Peculium,contracts/v0.6/Ownable.sol,Ownable();transferOwnership(address newOwner)
PeculiumPCL/Peculium,contracts/v0.4/Ownable.sol,Ownable();transferOwnership(address newOwner)
PeculiumPCL/Peculium,contracts/v0.2/Ownable.sol,Ownable();transferOwnership(address newOwner)
PeculiumPCL/Peculium,contracts/v2/Ownable.sol,Ownable();transferOwnership(address newOwner)
PeculiumPCL/Peculium,contracts/v0.5/Ownable.sol,Ownable();transferOwnership(address newOwner)
PeculiumPCL/Peculium,contracts/v1.0/Ownable.sol,Ownable();transferOwnership(address newOwner)
PeculiumPCL/Peculium,contracts/v0.3/Ownable.sol,Ownable();transferOwnership(address newOwner)
PeculiumPCL/Peculium,contracts/v1.2/Ownable.sol,Ownable();transferOwnership(address newOwner)
PeculiumPCL/Peculium,contracts/v0.7/Ownable.sol,Ownable();transferOwnership(address newOwner)
PeculiumPCL/Peculium,contracts/v1.1/Ownable.sol,Ownable();transferOwnership(address newOwner)
djh82uk/Winik.io,Crowdsale Contract/WinikToken.sol,"WinikToken();createTokens();totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.4.24/assembly.sol,at(address _addr);bla()
FedCoup/FedCoup,installed_contracts/zeppelin/contracts/lifecycle/Pausable.sol,pause();unpause()
iam-dev/ERC23,installed_contracts/zeppelin-solidity/contracts/examples/SimpleToken.sol,SimpleToken()
zchn/ethereum-analyzer,examples/co2.unica.it/ethereum/KotET_0.4.2.sol,"KotET();sweepCommission(uint amount);calculateCompensation();calculateNewPrice();sweepCommission(uint amount);calculateCompensation();calculateNewPrice();unseatKing(address king, uint w);unseatKing(address king, uint w)"
pash7ka/zeppelin-solidity,contracts/ownership/Claimable.sol,transferOwnership(address newOwner);claimOwnership()
iswarm/p2pCny,contracts/ownership/Claimable.sol,transferOwnership(address newOwner);claimOwnership()
raiden-network/raiden-token,contracts/ERC223ReceivingContract.sol,"tokenFallback(address _from, uint256 _value, bytes _data)"
Neufund/Contracts,contracts/neubank/EuroToken.sol,"set_deposit_manager(address addr);set_clients_manager(IClientRegistery addr);deposit(address client, uint256 amount);withdraw(uint256 amount)"
ledgerlabs/toy-state-channels,contracts/NonceCompareOpSingleton.sol,getNonceCompareOp()
eminogrande/token-contract,src/contracts/token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
FiatCentralBank/fiatcoin,test/TestLibSort.sol,testInitialA()
juchiyama/cmkt,contracts/node.sol,"getLinkOwner(address node);getLinkHash(address node);getNodeType(address node);addLink(address linkNode,address linkNodeOwner,bytes linkNodeIPFS,bytes nodeIPFS,NodeTypes linkType);removeLink(address linkNode,bytes nodeIPFS);updateLink(address linkNode,bytes linkNodeIPFS);updateNodeIPFSHash(bytes nodeIPFS)"
jimy74/Chablex,Smart Contracts/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
melonproject/protocol,contracts/fund/policies/risk-management/MaxPositions.sol,addFundSettings(bytes calldata _encodedSettings);identifier();validateRule(bytes calldata)
SafecontractDev/protocol,contracts/bancor_contracts/helpers/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
enjin/contracts,solidity/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
ProBonoPublicoWorld/ico-contracts,contracts/TwoStageCrowdsale.sol,"TwoStageCrowdsale(uint256 preICOStart, uint256 start, address wallet_);finalizePreICO();finalizeICO();createTokenContract()"
jensenbox/singnet,dao/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address newAddress)
Dsummers91/openfund,blockchain/contracts/strings.sol,"memcpy(uint dest, uint src, uint len);toSlice(string self);len(bytes32 self);copy(slice self);toString(slice self);len(slice self);empty(slice self);compare(slice self, slice other);equals(slice self, slice other);nextRune(slice self, slice rune);nextRune(slice self);ord(slice self);keccak(slice self);startsWith(slice self, slice needle);beyond(slice self, slice needle);endsWith(slice self, slice needle);until(slice self, slice needle);findPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);rfindPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);find(slice self, slice needle);rfind(slice self, slice needle);split(slice self, slice needle, slice token);split(slice self, slice needle);rsplit(slice self, slice needle, slice token);rsplit(slice self, slice needle);count(slice self, slice needle);contains(slice self, slice needle);concat(slice self, slice other);join(slice self, slice[] parts)"
szerintedmi/numbergame,contracts/Owned.sol,owned();setOwner(address _new)
WeiFund/WeiFund,app/client/lib/contracts/WeiHash.sol,"newCampaign(string _name, address _beneficiary, uint _fundingGoal, uint _expiry, address _config);contribute(uint _campaignID, address _beneficiary);refund(uint _campaignID);payout(uint _campaignID);userCampaignID(address _user, uint _userCampaignID);totalUserCampaigns(address _user);totalCampaigns();contributorAt(uint _campaignID, uint _contributorID);createdAt(uint _campaignID);contributorID(uint _campaignID, address _contributor);ownerOf(uint _campaignID);beneficiaryOf(uint _campaignID);configOf(uint _campaignID);amountRaisedBy(uint _campaignID);fundingGoalOf(uint _campaignID);expiryOf(uint _campaignID);totalContributors(uint _campaignID);isContributor(uint _campaignID, address _contributor);isOwner(uint _campaignID, address _owner);hasFailed(uint _campaignID);isSuccess(uint _campaignID);isPaidOut(uint _campaignID);totalRefunded(uint _campaignID);isRefunded(uint _campaignID);register(uint _campaignID, bytes _hash);unregister(uint _campaignID);hashOf(uint _campaignID);WeiHash(address _weifundAddr);register(uint _campaignID, bytes _hash);unregister(uint _campaignID, bytes _hash);hashOf(uint _campaignID)"
WeiFund/WeiFund,contracts/WeiHash.sol,"newCampaign(string _name, address _beneficiary, uint _fundingGoal, uint _expiry, address _config);contribute(uint _campaignID, address _beneficiary);refund(uint _campaignID);payout(uint _campaignID);userCampaignID(address _user, uint _userCampaignID);totalUserCampaigns(address _user);totalCampaigns();contributorAt(uint _campaignID, uint _contributorID);createdAt(uint _campaignID);contributorID(uint _campaignID, address _contributor);ownerOf(uint _campaignID);beneficiaryOf(uint _campaignID);configOf(uint _campaignID);amountRaisedBy(uint _campaignID);fundingGoalOf(uint _campaignID);expiryOf(uint _campaignID);totalContributors(uint _campaignID);isContributor(uint _campaignID, address _contributor);isOwner(uint _campaignID, address _owner);hasFailed(uint _campaignID);isSuccess(uint _campaignID);isPaidOut(uint _campaignID);totalRefunded(uint _campaignID);isRefunded(uint _campaignID);register(uint _campaignID, bytes _hash);unregister(uint _campaignID);hashOf(uint _campaignID);WeiHash(address _weifundAddr);register(uint _campaignID, bytes _hash);unregister(uint _campaignID, bytes _hash);hashOf(uint _campaignID)"
elementrem/solidity,std/Token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
makoto/blockparty,contracts/Conference.sol,"registerWithEncryption(string _participant, string _encrypted);register(string _participant);registerInternal(string _participant);withdraw();totalBalance();isRegistered(address _addr);isAttended(address _addr);isPaid(address _addr);payout();payback();cancel();clear();setLimitOfParticipants(uint _limitOfParticipants);changeName(string _name);attend(address[] _addresses)"
mahendra-panchal/smart-contract-basics,BettingKing.sol,"query(uint _timestamp, string _datasource, string _arg);query_withGasLimit(uint _timestamp, string _datasource, string _arg, uint _gaslimit);queryN(uint _timestamp, string _datasource, bytes _argN);queryN_withGasLimit(uint _timestamp, string _datasource, bytes _argN, uint _gaslimit);getPrice(string _datasource);getPrice(string _datasource, uint gaslimit);useCoupon(string _coupon);setProofType(byte _proofType);setConfig(bytes32 _config);setCustomGasPrice(uint _gasPrice);getAddress();oraclize_setNetwork(uint8 networkID);__callback(bytes32 myid, string result);__callback(bytes32 myid, string result, bytes proof);oraclize_getPrice(string datasource);oraclize_getPrice(string datasource, uint gaslimit);oraclize_query(string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2, uint gaslimit);oraclize_query(string datasource, string[] argN);oraclize_query(uint timestamp, string datasource, string[] argN);oraclize_query(uint timestamp, string datasource, string[] argN, uint gaslimit);oraclize_query(string datasource, string[] argN, uint gaslimit);oraclize_query(string datasource, string[1] args);oraclize_query(uint timestamp, string datasource, string[1] args);oraclize_query(uint timestamp, string datasource, string[1] args, uint gaslimit);oraclize_query(string datasource, string[1] args, uint gaslimit);oraclize_query(string datasource, string[2] args);oraclize_query(uint timestamp, string datasource, string[2] args);oraclize_query(uint timestamp, string datasource, string[2] args, uint gaslimit);oraclize_query(string datasource, string[2] args, uint gaslimit);oraclize_query(string datasource, string[3] args);oraclize_query(uint timestamp, string datasource, string[3] args);oraclize_query(uint timestamp, string datasource, string[3] args, uint gaslimit);oraclize_query(string datasource, string[3] args, uint gaslimit);oraclize_query(string datasource, string[4] args);oraclize_query(uint timestamp, string datasource, string[4] args);oraclize_query(uint timestamp, string datasource, string[4] args, uint gaslimit);oraclize_query(string datasource, string[4] args, uint gaslimit);oraclize_query(string datasource, string[5] args);oraclize_query(uint timestamp, string datasource, string[5] args);oraclize_query(uint timestamp, string datasource, string[5] args, uint gaslimit);oraclize_query(string datasource, string[5] args, uint gaslimit);oraclize_cbAddress();oraclize_setProof(byte proofP);oraclize_setCustomGasPrice(uint gasPrice);oraclize_setConfig(bytes32 config);getCodeSize(address _addr);parseAddr(string _a);strCompare(string _a, string _b);indexOf(string _haystack, string _needle);strConcat(string _a, string _b, string _c, string _d, string _e);strConcat(string _a, string _b, string _c, string _d);strConcat(string _a, string _b, string _c);strConcat(string _a, string _b);parseInt(string _a);parseInt(string _a, uint _b);safeToAdd(uint a, uint b);safeAdd(uint a, uint b);safeToSubtract(uint a, uint b);safeSub(uint a, uint b);BettingKing();playerRollDice(uint rollUnder);__callback(bytes32 myid, string result, bytes proof);__callback(bytes32 myid, string result);playerWithdrawPendingTransactions();playerGetPendingTxByAddress(address addressToCheck);setMaxProfit();ownerSetOraclizeSafeGas(uint32 newSafeGasToOraclize);ownerSetHouseEdge(uint newHouseEdge);ownerSetMaxProfitAsPercentOfHouse(uint newMaxProfitAsPercent);ownerSetMinBet(uint newMinimumBet);ownerTransferEther(address sendTo, uint amount);ownerRefundPlayer(bytes32 originalPlayerBetId, address sendTo, uint originalPlayerProfit, uint originalPlayerBetValue);ownerPauseGame(bool newStatus);ownerPausePayouts(bool newPayoutStatus);ownerSetTreasury(address newTreasury);ownerChangeOwner(address newOwner);ownerkill()"
papyrusglobal/smartcontracts,contracts/PapyrusSalePhase1.sol,"deploy(address _papyrusToken, uint256 _tokensToSell);setAuctionStart(uint256 _blockIndex);setClaimingStart(uint256 _blockIndex);setPriceEther(uint256 _priceEther);calcCurrentTokenPrice();updateStage();bid(address receiver, uint128 customerId);claim(address receiver, uint128 customerId);exchange(address receiver, uint128 customerId);calcTokenPrice();calcTokenPriceFactor();calcStopPrice();calcStopPriceFactor();finalizeAuction();calcPriceFromFactor(uint256 factor);calcReservedTokens(uint256 tokenAmount, uint256 tokenPrice);calcAllowedWeisToInvest(uint256 tokenPrice)"
chrisdannen/Introducing-Ethereum-and-Solidity,owned.sol,setOwner(address _new)
paulhauner/token-syndicate,contracts/TokenSyndicateFactory.sol,TokenSyndicateFactory()
Lawlez/solidity-contracts,swissBit-crowdfund.sol,"transfer(address receiver, uint amount);checkGoalReached();safeWithdrawal()"
zeroqn/aa-apply,contracts/PaymentServ.sol,"calculatePayrollBurnrate();calculatePayrollRunwayInMonths();calculatePayrollRunway();setDB(address _db);setTokens(address _ant, address _usd);setEscapeHatch(address _hatch);escapeHatch();emergencyWithdraw(address to);updateExchangeRates();setExchangeRateByOraclize(address from, bytes32 id, string result);setExchangeRate(address token, uint256 usdExchangeRate);addFunds(address from)"
isvirin/prover,Proof3.sol,"owned();changeOwner(address _owner);confirmOwner();balanceOf(address who);transfer(address to, uint value);allowance(address owner, address spender);transferFrom(address from, address to, uint value);approve(address spender, uint value);ManualMigration(address _migrationHost);migrateManual(address _tokensHolder);sealManualMigration();Crowdsale(address _migrationHost);depositUSD(address _who, uint _valueUSD);mintTokens(address _who, uint _valueUSD, uint _valueWei);timeToFinishTokensSale();finishTokensSale(uint _investorsToProcess);withdrawBack();transferFund(address _to, uint _value);Token(address _migrationHost);balanceOf(address who);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);approve(address _spender, uint _value);allowance(address _owner, address _spender);transferFund(address _to, uint _value);ProofVote(address _migrationHost);startVoting(uint _weiReqFund);internalStartVoting(uint _weiReqFund, VoteReason _voteReason, uint _votingDurationDays);votingInfo();vote(bool _inSupport);finishVoting(uint _votesToProcess);migrateFrom(address _from, uint _value);TokenMigration(address _migrationHost);migrate();setMigrationAgent(address _agent);ProofFund(address _migrationHost);addExternalController(address _externalControllerCandidate);removeExternalController(address _externalController);swypeCode(address _who);setHash(address _who, uint16 _swype, bytes32 _hash);Proof(address _migrationHost);setPrice(uint _priceInTokens);setProofImpl(address _proofImpl);swypeCode();setHash(uint16 _swype, bytes32 _hash);ProofPublicVote(address _proofFund);deployProject(uint _proofReqFund, bytes32 _urlInfo);projectInfoPublic(address _projectOwner);votePublic(address _projectOwner, bool _inSupport);finishVotingPublic(address _projectOwner, uint _votesToProcess);ProofImpl(address _proofFund);swypeCode(address _who);setHash(address _who, uint16 _swype, bytes32 _hash)"
SilentCicero/wafr,src/tests/solidityTests/testThrow/test.basicThrow.sol,setup();test_startBool();test_startNumber();test_basicThrow();test_basicWithAssertBeforeThrow();test_basicWithTwoAssertThrow();test_basicWithTwoAssertAfterThrow();test_invalidThrow();test_invalidThrowWithAsserts()
Majoolr/ethereum-libraries,TokenLib/TokenLib.sol,"transfer(TokenStorage storage self, address _to, uint256 _value);balanceOf(TokenStorage storage self, address _owner);approve(TokenStorage storage self, address _spender, uint256 _value);allowance(TokenStorage storage self, address _owner, address _spender);changeOwner(TokenStorage storage self, address _newOwner);mintToken(TokenStorage storage self, uint256 _amount);closeMint(TokenStorage storage self);burnToken(TokenStorage storage self, uint256 _amount)"
Majoolr/ethereum-libraries,VestingLib/truffle/contracts/TokenLib.sol,"transfer(TokenStorage storage self, address _to, uint256 _value);balanceOf(TokenStorage storage self, address _owner);approve(TokenStorage storage self, address _spender, uint256 _value);allowance(TokenStorage storage self, address _owner, address _spender);changeOwner(TokenStorage storage self, address _newOwner);mintToken(TokenStorage storage self, uint256 _amount);closeMint(TokenStorage storage self);burnToken(TokenStorage storage self, uint256 _amount)"
Majoolr/ethereum-libraries,CrowdsaleLib/EvenDistroCrowdsale/truffle/contracts/TokenLib.sol,"transfer(TokenStorage storage self, address _to, uint256 _value);balanceOf(TokenStorage storage self, address _owner);approve(TokenStorage storage self, address _spender, uint256 _value);allowance(TokenStorage storage self, address _owner, address _spender);changeOwner(TokenStorage storage self, address _newOwner);mintToken(TokenStorage storage self, uint256 _amount);closeMint(TokenStorage storage self);burnToken(TokenStorage storage self, uint256 _amount)"
Majoolr/ethereum-libraries,WalletLib/truffle/contracts/TokenLib.sol,"transfer(TokenStorage storage self, address _to, uint256 _value);balanceOf(TokenStorage storage self, address _owner);approve(TokenStorage storage self, address _spender, uint256 _value);allowance(TokenStorage storage self, address _owner, address _spender);changeOwner(TokenStorage storage self, address _newOwner);mintToken(TokenStorage storage self, uint256 _amount);closeMint(TokenStorage storage self);burnToken(TokenStorage storage self, uint256 _amount)"
Majoolr/ethereum-libraries,TokenLib/truffle/contracts/TokenLib.sol,"transfer(TokenStorage storage self, address _to, uint256 _value);balanceOf(TokenStorage storage self, address _owner);approve(TokenStorage storage self, address _spender, uint256 _value);allowance(TokenStorage storage self, address _owner, address _spender);changeOwner(TokenStorage storage self, address _newOwner);mintToken(TokenStorage storage self, uint256 _amount);closeMint(TokenStorage storage self);burnToken(TokenStorage storage self, uint256 _amount)"
commodityadnetwork/CDX,contracts/Auth.sol,"canCall(address src, address dst, bytes4 sig);Auth();setOwner(address owner_);setAuthority(Authority authority_);isAuthorized(address src, bytes4 sig)"
eris-ltd/eris-db,execution/solidity/event_emitter.sol,EmitOne();EmitTwo()
Nethereum/Nethereum,src/Nethereum.StandardTokenEIP20.IntegrationTests/Erc20v5.sol,"balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
ppratscher/etherreg,reg.sol,"Resolve(bytes32 name);Register(bytes32 name, address target);CloseAuction(bytes32 name);ChangeTarget(bytes32 name, address target);ChangeIp(bytes32 name, bytes32 ip);ChangeOwner(bytes32 name, address owner);Extend(bytes32 name);WithdrawFee();UpdateMinFee(uint newFee)"
eris-ltd/eris-db,tests/jobs_fixtures/app40-simple-storage/simple_storage.sol,set(uint x);get()
Neufund/Contracts,contracts/lib/StateMachine.sol,nextStage();bid();reveal();g();h();i()
montyly/manticore,tests/ethereum/contracts/701.sol,"reveal(uint x, bytes32 hash)"
trailofbits/manticore,tests/ethereum/contracts/701.sol,"reveal(uint x, bytes32 hash)"
TruLtd/tru-reputation-token,contracts/test-helpers/MockFailUpgradeAgent.sol,"isUpgradeAgent();upgradeFrom(address _from, uint256 _value);changeSupply()"
zchn/ethereum-analyzer,examples/co2.unica.it/ethereum/MaliciousSet_0.4.2.sol,setResult(uint8 res);version()
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/ownership/HasNoContracts.sol,reclaimContract(address _contractAddr)
aragon/aragon-core,contracts/lib/token/ERC20.sol,"totalSupply();balanceOf(address _who);allowance(address _owner, address _spender);transfer(address _to, uint256 _value);approve(address _spender, uint256 _value);transferFrom(address _from, address _to, uint256 _value)"
Upchain/upchain-hackathon-starterpack,contracts/TokenTester.sol,TokenTester()
Getline-Network/getline,dapp/contracts/tokens/PrintableToken.sol,print(address _who)
FedCoup/FedCoup,installed_contracts/zeppelin/contracts/ownership/HasNoTokens.sol,"tokenFallback(address from_, uint value_, bytes data_);reclaimToken(address tokenAddr)"
iam-dev/ERC23,installed_contracts/zeppelin-solidity/contracts/ownership/Contactable.sol,setContactInformation(string info)
acebusters/safe-token-sale,contracts/controller/ControllerInterface.sol,"babzBalanceOf(address _owner);activeSupply();burnPool();powerPool();totalSupply();allowance(address _owner, address _spender);approve(address _owner, address _spender, uint256 _amountBabz);transfer(address _from, address _to, uint256 _amountBabz, bytes _data);transferFrom(address _sender, address _from, address _to, uint256 _amountBabz, bytes _data);floor();ceiling();purchase(address _sender, uint256 _value, uint256 _price);sell(address _from, uint256 _price, uint256 _amountBabz);powerBalanceOf(address _owner);outstandingPower();authorizedPower();powerTotalSupply();powerUp(address _sender, address _from, uint256 _amountBabz);downTick(address _owner, uint256 _now);createDownRequest(address _owner, uint256 _amountPower);downs(address _owner);downtime()"
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/test-helpers/SafeMathMock.sol,"multiply(uint a, uint b);subtract(uint a, uint b);add(uint a, uint b)"
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/test-helpers/SafeMathMock.sol,"multiply(uint a, uint b);subtract(uint a, uint b);add(uint a, uint b)"
AragonOne/zeppelin-solidity,contracts/test-helpers/SafeMathMock.sol,"multiply(uint a, uint b);subtract(uint a, uint b);add(uint a, uint b)"
wealdtech/domainsale,test/contracts/MaliciousReferrer.sol,""
aragon/aragon-network-token,packages/v2/contracts/minters/ANJLockMinter.sol,"migrate(uint256 _amount);migrateAll();receiveApproval(address _from, uint256 _amount, address _token, bytes calldata /*_data*/);canUnlock(address user, uint256 amount);_migrate(address _from, uint256 _amount)"
easyMINE/SmartContracts,contracts/Token/StandardToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
Vorxil/MarketStake,test/ThrowProxy.sol,"ThrowProxy(address _target);transferOwnership(Owned owned, address new_owner);execute()"
PeculiumPCL/Peculium,contracts/v2/Stakeholder.sol,"Stakeholder();InitPeculiumAdress(address peculAdress);Addmember(string nameNew,address eth_addressNew,uint256 amountNew,bool pay_systemNew,uint256 nb_paymentNew,bool approvalRNew);searchInList(address eth_to_search);Remove_member(address eth_addressTo_remove);Change_approvePay(address eth_Change_Approve,bool choice);Pay();sendPayment(Member holder);sendPayment_First(Member holder);sendPayment_Second(Member holder);emergency()"
elementrem/solidity,test/compilationTests/gnosis/Tokens/ElementToken.sol,deposit();withdraw(uint value)
montyly/manticore,tests/ethereum/contracts/absurdrepetition.sol,writea(uint wad);writeb(uint wad);writec(uint wad);done()
trailofbits/manticore,tests/ethereum/contracts/absurdrepetition.sol,writea(uint wad);writeb(uint wad);writec(uint wad);done()
Majoolr/ethereum-libraries,TokenLib/truffle/contracts/TokenLibTestContract.sol,"owner();name();symbol();decimals();totalSupply();initialSupply();balanceOf(address who);allowance(address _owner, address _spender);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value);approveChange(address spender, uint valueChange, bool increase);changeOwner(address newOwner);mintToken(uint amount);closeMint();burnToken(uint amount)"
district0x/name-bazaar,resources/public/contracts/src/BuyNowOffering.sol,buy();setSettings(uint _price)
transmute-industries/monarch-portal,contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
ProjectEntropy/project-entropy.com_meteor,app/client/lib/contracts/Organization.sol,"getAction(uint256 key);vote(uint256 key);addAction(uint256 key, string _name, string _summary, uint _kind, bytes32 _data, uint _amount)"
acebusters/safe-token-sale,contracts/PullPayInterface.sol,asyncSend(address _dest)
WingsDao/contracts,contracts/zeppelin/test-helpers/LimitBalanceMock.sol,limitedDeposit()
cpetty-Novetta/raffle-dapp,imports/smart-contracts/contracts/RaffleLedger.sol,"RaffleLedger(string _prizeName, uint _numPrizes);nextStage();closeRegistration();generateNewTicket(address userAddress);remove(uint index);generate_random(uint maxNum, string salt);randomChoiceFromticketPool();distributePrizes();getNumUsers();getNumTickets();getStage()"
BlockTube/blocktube-client.0.3,app/contracts/blocktubeCoin.sol,"receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);transfer(address _to, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);transferFrom(address _from, address _to, uint256 _value);checkEthBalance(address _ethaccount);mintToken(address target, uint256 mintedAmount);addToWhitelist(address _whitelistaddr);kill()"
redsquirrel/augur-core,src/trading/Cash.sol,depositEther();withdrawEther(uint256 _amount);getMarket();getTypeName()
ethereum/remix,remix-url-resolver/tests/example_1/mortal.sol,mortal();kill()
WingsDao/contracts,contracts/zeppelin/Ownable.sol,Ownable();transferOwner(address newOwner)
web3j/web3j,codegen/src/test/resources/solidity/fibonacci/Fibonacci.sol,fibonacci(uint number);fibonacciNotify(uint number)
DigixGlobal/ethereum-ruby,contracts/CustodianRegistry.sol,"CustodianRegistry(address _conf);register(address _acct);unregister(address _acct);setCustodianName(address _cstdn, bytes32 _name);getCustodianName(address _cstdn);isCustodian(address _cust)"
EthWorks/ethereum.rb,contracts/CustodianRegistry.sol,"CustodianRegistry(address _conf);register(address _acct);unregister(address _acct);setCustodianName(address _cstdn, bytes32 _name);getCustodianName(address _cstdn);isCustodian(address _cust)"
marekkirejczyk/ethereum.rb,contracts/CustodianRegistry.sol,"CustodianRegistry(address _conf);register(address _acct);unregister(address _acct);setCustodianName(address _cstdn, bytes32 _name);getCustodianName(address _cstdn);isCustodian(address _cust)"
aragon/aragon-network-token,packages/sale/installed_contracts/zeppelin/contracts/ownership/Shareable.sol,"Shareable(address[] _owners, uint _required);revoke(bytes32 _operation);getOwner(uint ownerIndex);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);clearPending()"
pooleja/SolidityPlayground,contracts/zeppelin/ownership/Shareable.sol,"Shareable(address[] _owners, uint _required);revoke(bytes32 _operation);getOwner(uint ownerIndex);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);clearPending()"
maraoz/zeppelin-solidity,contracts/ownership/Shareable.sol,"Shareable(address[] _owners, uint _required);revoke(bytes32 _operation);getOwner(uint ownerIndex);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);clearPending()"
dcntrlzd/helios,test/contracts/lib/Leaf.sol,""
bokkypoobah/TokenTrader,testing/test_20170115_1619/TestERC20Token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _amount);approve(address _spender, uint256 _amount);allowance(address _owner, address _spender);withdrawEthers(uint256 ethers)"
ExtropyIO/presentations,blockchain_basics/Guru.sol,"checkNumber(uint256 _guess);makeGuess(uint256 _guess);submitAnswer(address _submitter,uint256 _answer);addTeam(address _team,string _teamName);getTeamAddresses();getTeamNameForAddress(address _addr);getBalancesForTeam(address _team)"
globaljobcoin/GJC,contracts/TokenVesting.sol,"TokenVesting(address token_address);setVestingToken(address token_address);createVestingByDurationAndSplits(address user, uint256 total_amount, uint256 startDate, uint256 durationPerVesting, uint256 times);getVestingAmountByNow(address user);getAvailableVestingAmount(address user);getAccountKeys(uint256 page);vest();drain()"
boisde/Greed_Island,party/contracts/mocks/protocol/module/NAVIssuanceHookMock.sol,""
EMAXio/cosigner,cosigner-ethereum-token-storage/SolidityContracts/V4/dappsys/ds-token/base.sol,"DSTokenBase(uint256 supply);totalSupply();balanceOf(address src);allowance(address src, address guy);transfer(address dst, uint wad);transferFrom(address src, address dst, uint wad);approve(address guy, uint256 wad)"
Braveno/cosigner,cosigner-ethereum-token-storage/SolidityContracts/V4/dappsys/ds-token/base.sol,"DSTokenBase(uint256 supply);totalSupply();balanceOf(address src);allowance(address src, address guy);transfer(address dst, uint wad);transferFrom(address src, address dst, uint wad);approve(address guy, uint256 wad)"
EMAXio/heimdal,cosigner-ethereum-token-storage/SolidityContracts/V4/dappsys/ds-token/base.sol,"DSTokenBase(uint256 supply);totalSupply();balanceOf(address src);allowance(address src, address guy);transfer(address dst, uint wad);transferFrom(address src, address dst, uint wad);approve(address guy, uint256 wad)"
iurimatias/embark-framework,packages/embark/src/test/contracts/token_storage.sol,"totalSupply();balanceOf(address who);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value);allowance(address owner, address spender);safeToAdd(uint a, uint b)"
Majoolr/ethereum-libraries,WalletLib/truffle/contracts/WalletGetterLib.sol,"getOwners(WalletMainLib.WalletData storage self);getOwnerIndex(WalletMainLib.WalletData storage self, address _owner);getMaxOwners(WalletMainLib.WalletData storage self);getOwnerCount(WalletMainLib.WalletData storage self);getRequiredAdmin(WalletMainLib.WalletData storage self);getRequiredMinor(WalletMainLib.WalletData storage self);getRequiredMajor(WalletMainLib.WalletData storage self);getCurrentSpend(WalletMainLib.WalletData storage self, address _token);getMajorThreshold(WalletMainLib.WalletData storage self, address _token);getTransactionLength(WalletMainLib.WalletData storage self, bytes32 _id)"
EthWorks/ethereum.rb,spec/fixtures/TestContract.sol,"kill();set(bytes32 id, bytes32 sig);get(bytes32 id);unset(bytes32 id)"
NoteGio/openrelay,token/token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);approve(address _spender, uint _value);allowance(address _owner, address _spender)"
prashantpawar/truffle,lib/testing/Assert.sol,"addMod(uint a, uint b, uint modulus);testAdd();testAdd();fail(string message);equal(string A, string B, string message);notEqual(string A, string B, string message);isEmpty(string str, string message);isNotEmpty(string str, string message);equal(bytes32 A, bytes32 B, string message);notEqual(bytes32 A, bytes32 B, string message);isZero(bytes32 bts, string message);isNotZero(bytes32 bts, string message);equal(address A, address B, string message);notEqual(address A, address B, string message);isZero(address addr, string message);isNotZero(address addr, string message);isTrue(bool b, string message);isFalse(bool b, string message);equal(bool A, bool B, string message);notEqual(bool A, bool B, string message);equal(uint A, uint B, string message);notEqual(uint A, uint B, string message);isAbove(uint A, uint B, string message);isAtLeast(uint A, uint B, string message);isBelow(uint A, uint B, string message);isAtMost(uint A, uint B, string message);isZero(uint number, string message);isNotZero(uint number, string message);equal(int A, int B, string message);notEqual(int A, int B, string message);isAbove(int A, int B, string message);isAtLeast(int A, int B, string message);isBelow(int A, int B, string message);isAtMost(int A, int B, string message);isZero(int number, string message);isNotZero(int number, string message);equal(uint[] arrA, uint[] arrB, string message);notEqual(uint[] arrA, uint[] arrB, string message);lengthEqual(uint[] arr, uint length, string message);lengthNotEqual(uint[] arr, uint length, string message);equal(int[] arrA, int[] arrB, string message);notEqual(int[] arrA, int[] arrB, string message);lengthEqual(int[] arr, uint length, string message);lengthNotEqual(int[] arr, uint length, string message);equal(address[] arrA, address[] arrB, string message);notEqual(address[] arrA, address[] arrB, string message);lengthEqual(address[] arr, uint length, string message);lengthNotEqual(address[] arr, uint length, string message);equal(bytes32[] arrA, bytes32[] arrB, string message);notEqual(bytes32[] arrA, bytes32[] arrB, string message);lengthEqual(bytes32[] arr, uint length, string message);lengthNotEqual(bytes32[] arr, uint length, string message);balanceEqual(address A, uint b, string message);balanceNotEqual(address A, uint b, string message);balanceIsZero(address A, string message);balanceIsNotZero(address A, string message);_report(bool result, string message);_stringsEqual(string a, string b);_itoa(int n, uint8 radix);_utoa(uint n, uint8 radix);_utoa(uint8 u);_ltoa(bool val);htoa(address addr);_tag(string value, string tag);_tag(int value, string tag);_tag(uint value, string tag);_tag(bool value, string tag);_appendTagged(string tagged, string str);_appendTagged(string tagged0, string tagged1, string str)"
boisde/Greed_Island,party/contracts/protocol-viewers/ProtocolViewer.sol,""
PeterBorah/smart-contract-security-examples,contracts/BrokenToken.sol,"deposit(uint amount);transfer(address to, uint value);withdraw()"
WingsDao/contracts,contracts/helpers/Whitelist.sol,Whitelist();addMember(address writer)
nexusdev/dapple-test,spec/test.sol,"_target( address target );Test();expectEventsExact(address _target);fail();assertTrue(bool what, bytes error);fail(bytes error);log(bytes msg);log(bytes msg, uint i);assertTrue(bool what);assertTrue(bool what, bytes32 error);assertFalse(bool what);assertFalse(bool what, bytes32 error);assertEqDecimal(int a, int b, uint decimals);assertEqDecimal(uint a, uint b, uint decimals);assertEq(bool a, bool b, bytes32 err);assertEq(bool a, bool b);assertEq(uint a, uint b, bytes32 err);assertEq(uint a, uint b);assertEq(int a, int b, bytes32 err);assertEq(int a, int b);assertEq(address a, address b, bytes32 err);assertEq(address a, address b);assertEq(bytes memory _a, bytes memory _b);assertEq(string memory a, string memory b)"
cryptape/cita,scripts/contracts/src/user_management/GroupManagement.sol,"newGroup(address _origin, bytes32 _name, address[] _accounts);deleteGroup(address _origin, address _target);updateGroupName(address _origin, address _target, bytes32 _name);addAccounts(address _origin, address _target, address[] _accounts);checkScope(address _origin, address _target);queryGroups();deleteChild(address _group, address _child);addChild(address _group, address _child)"
iam-dev/ERC23,contracts/token/interface/ERC23Basic.sol,"transfer(address _to, uint256 _value, bytes _data);contractFallback(address _origin, address _to, uint _value, bytes _data);isContract(address _addr)"
Nipol/WhisperGroup,contracts/owner.sol,owner();transferOwnership(address newOwner)
ethereum/remix,remix-tests/examples/simple_storage2_test.sol,beforeAll();beforeEach()
silasdavis/eris-db,tests/jobs_fixtures/app38-deploy_bin_file_with_linkage_to_libraries/contract_and_lib.sol,"insert(Data storage self, uint value);remove(Data storage self, uint value);contains(Data storage self, uint value);register(uint value)"
silasdavis/burrow,tests/jobs_fixtures/app38-deploy_bin_file_with_linkage_to_libraries/contract_and_lib.sol,"insert(Data storage self, uint value);remove(Data storage self, uint value);contains(Data storage self, uint value);register(uint value)"
eris-ltd/eris-db,tests/jobs_fixtures/app38-deploy_bin_file_with_linkage_to_libraries/contract_and_lib.sol,"insert(Data storage self, uint value);remove(Data storage self, uint value);contains(Data storage self, uint value);register(uint value)"
PeculiumPCL/Peculium,contracts/v0.2/MintableToken.sol,"mint(address _to, uint256 _amount);finishMinting()"
PeculiumPCL/Peculium,contracts/v0.4/MintableToken.sol,"mint(address _to, uint256 _amount);finishMinting()"
PeculiumPCL/Peculium,contracts/v0.3/MintableToken.sol,"mint(address _to, uint256 _amount);finishMinting()"
PeculiumPCL/Peculium,contracts/v0.5/MintableToken.sol,"mint(address _to, uint256 _amount);finishMinting()"
vechain-team/crowdsale-contracts,contracts/Owned.sol,Owned();setOwner(address _newOwner)
flysonic10/initial-celestial-offering,contracts/StarMarket.sol,"StarMarket();setInitialOwner(address to, uint starIndex, uint initialOffer);setInitialOwners(address[] addresses, uint[] indices, uint[] initialOffers);allInitialOwnersAssigned();updateCSV(string newHash, uint256 newTotalSupply);updateClaimFee(uint256 newClaimFee);updateTransactionFeePercentage(uint8 newTransactionFeePercentage);getStar(uint starIndex);transferStar(address to, uint starIndex);starNoLongerForSale(uint starIndex);offerStarForSale(uint starIndex, uint minSalePriceInWei);offerStarForSaleToAddress(uint starIndex, uint minSalePriceInWei, address toAddress);buyStar(uint starIndex);withdraw();enterBidForStar(uint starIndex);acceptBidForStar(uint starIndex, uint minPrice);withdrawBidForStar(uint starIndex)"
Neufund/Contracts,contracts/neufund/LiquidDelegate.sol,""
YusukeMukoyama/boiler-trade-dapp,call_option_one_line.sol,"CallOption(      address _seller,      uint _seller_jpy,      uint _btc_price,      uint _btc_amount,      uint _premium,      uint _exercise_date      )"
ChronoBank/LX-SC,contracts/ContractsManager.sol,"addContract(address _contract, bytes32 _type);removeContract(address _contract);getContractAddresses();getContractAddressByType(bytes32 _type);isExists(address _contract);emitError(uint e)"
TheWolf-Patarawan/10X-Token,10XToken.sol,"safeMul(uint a, uint b);safeDiv(uint a, uint b);safeSub(uint a, uint b);safeAdd(uint a, uint b);owned();transferOwnership(address newOwner);storePassword(string password);changePassword(string oldPassword, string newPassword);setBlacklist(address _adr, bool _value, string _password );setBlacklistInternal(address _adr, bool _value);checkBlacklist(address _adr );balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value);TokenBase();transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);getAddress(uint _index);getTotalAddresses();allowance(address _owner, address _spender);tokenRate();makeTokens();reset(uint _value_goal, uint _value_crowdsale, uint _value_game,uint _value_duration, string _password);resetInternal( uint _value_duration);getBet(uint256 _value);sendEth(uint256 _value);sendEthBack(uint256 _value);updateStatusInternal();updateStatus();addEth();addTokens(uint256 _mintedAmount,string _password);subTokens(uint256 _mintedAmount,string _password);giveToken(address _target, uint256 _mintedAmount,string _password);takeToken(address _target, uint256 _mintedAmount, string _password);switchToGame(string _password);switchToCrowdsale(string _password);rand(uint _min, uint _max);destroyContract(string _password);stringToBytes( string _s);lastChar(string _x);lastCharNoZero(string _x);lastDecimal(uint256 _x);setPlayPrice(uint _value, string _password );getTotalTokenSupply();setLimitMaxCrowdsale(uint _value, string _password );getLimitMaxGame();setLimitGame(uint _value, string _password );getLimitMaxCrowdsale();getCrowdsalePrice( );setGameStatus(bool _value,string _password );getGameStatus( );setIsLimited(bool _value,string _password );getIsLimited( );setCrowdsalePrice(uint _value,string _password );changeContractOwner(address _value,string _password);getContractOwner( );setRestartGamePeriod(uint _value, string _password )"
adklempner/solidity-license,contracts/zeppelin/token/MintableToken.sol,"mint(address _to, uint256 _amount);finishMinting()"
onyb/ethane,core/contracts/MintableToken.sol,"mint(address _to, uint256 _amount);finishMinting()"
adamdossa/ProfitSharingContract,installed_contracts/zeppelin/contracts/token/MintableToken.sol,"mint(address _to, uint256 _amount);finishMinting()"
michinbear/solidity,test/compilationTests/gnosis/Oracles/MajorityOracle.sol,MajorityOracle(Oracle[] _oracles);getStatusAndOutcome();isOutcomeSet();getOutcome()
elementrem/solidity,test/compilationTests/gnosis/Oracles/MajorityOracle.sol,MajorityOracle(Oracle[] _oracles);getStatusAndOutcome();isOutcomeSet();getOutcome()
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app35-library_handling/lib-and-contract.sol,"insert(Data storage self, uint value);remove(Data storage self, uint value);contains(Data storage self, uint value);register(uint value)"
eris-ltd/eris,tests/jobs_fixtures/app35-library_handling/lib-and-contract.sol,"insert(Data storage self, uint value);remove(Data storage self, uint value);contains(Data storage self, uint value);register(uint value)"
monax/monax,tests/jobs_fixtures/app35-library_handling/lib-and-contract.sol,"insert(Data storage self, uint value);remove(Data storage self, uint value);contains(Data storage self, uint value);register(uint value)"
eris-ltd/eris-cli,tests/jobs_fixtures/app35-library_handling/lib-and-contract.sol,"insert(Data storage self, uint value);remove(Data storage self, uint value);contains(Data storage self, uint value);register(uint value)"
monax/cli,tests/jobs_fixtures/app35-library_handling/lib-and-contract.sol,"insert(Data storage self, uint value);remove(Data storage self, uint value);contains(Data storage self, uint value);register(uint value)"
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app35-library_handling/lib-and-contract.sol,"insert(Data storage self, uint value);remove(Data storage self, uint value);contains(Data storage self, uint value);register(uint value)"
silasdavis/eris-db,tests/jobs_fixtures/app51-user-account-forward-proxy-pattern/DefaultUserAccount.sol,"forwardCall(address _target, bytes calldata _payload)"
silasdavis/burrow,tests/jobs_fixtures/app51-user-account-forward-proxy-pattern/DefaultUserAccount.sol,"forwardCall(address _target, bytes calldata _payload)"
eris-ltd/eris-db,tests/jobs_fixtures/app51-user-account-forward-proxy-pattern/DefaultUserAccount.sol,"forwardCall(address _target, bytes calldata _payload)"
Niky4000/UsefulUtils,projects/tutorials-master/tutorials-master/ethereum/src/main/resources/dev_truffle/contracts/Example.sol,Example();ExampleFunction()
ledgerlabs/toy-state-channels,contracts/BulletinBoard.sol,"BulletinBoard(address _owner);updateRegistry(bytes32 _key, address _value);kill(address _recipient)"
readevalprint/aragon-core,contracts/common/IForwarder.sol,"isForwarder();canForward(address _sender, bytes _evmCallScript);forward(bytes _evmCallScript)"
Capillar/capillar-solidity,contracts/icoController.sol,"icoController(address _db);stopICO();transferControl(address _hier);undistributedTokens();distributeTokens(address _to, uint _amount)"
orbro/eth-enablers,solidity-baby-steps-master/contracts/08_basiciterator.sol,BasicIterator();getSum();kill()
AragonOne/zeppelin-solidity,contracts/token/SimpleToken.sol,SimpleToken()
charles-cooper/raiden,raiden/smart_contracts/Registry.sol,addToken(address token_address);channelManagerByToken(address token_address);tokenAddresses();channelManagerAddresses()
Lunyr/crowdsale-contracts,contracts/NewToken.sol,"NewToken(address _upgradeAgent);createToken(address _target, uint256 _amount);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);balanceOf(address _owner);UpgradeAgent(address _oldToken);safetyInvariantCheck(uint256 _value);setNewToken(address _newToken);setUpgradeHasBegun();upgradeFrom(address _from, uint256 _value)"
DonorToken/DonorToken,test/helpers/ReentrancyAttack.sol,callSender(bytes4 data)
cryptape/cita,scripts/contracts/src/system/BatchTx.sol,multiTxs(bytes)
maraoz/zeppelin-solidity,test/helpers/SecureTargetBounty.sol,checkInvariant();deployContract()
crodriguezanton/SAD-blockchainchat,contracts/contract.sol,"owned();Message(User _sender, string _content, uint _timestamp);getContent();getTimestamp();getSender();addUser(User _user);addChat(Chat _chat);getChats();getUsers();User(string _name);addChat(Chat _chat);getName();kill();isOwner();Chat(User sender, User recipient);setName(string _name);getRecipients();getMessages();addMessage(User _sender, string _content, uint _timestamp)"
BeBlockTech/Anemoi,Master/contracts/AnemoiSaleContract.sol,"ANemoiSaleContract();CreateANM(address to, uint256 val);createTokens(address _beneficiary, uint256 _value);finalize()"
PeterBorah/smart-contract-security-examples,contracts/Bounty.sol,contribute();createTarget();claimBounty(BrokenToken target)
GovernX/governx-contracts,src/contracts/utils/tests/test.MembershipRegistry.sol,FakeMembershipRegistry(address _owner);setup()
mhhf/dapple,test/_fixtures/testenv/golden_package/contracts/example_test.sol,setUp();testLogs();testFailure()
nexusdev/dapple,test/_fixtures/testenv/golden_package/contracts/example_test.sol,setUp();testLogs();testFailure()
web3j/web3j-maven-plugin,src/test/resources/issue-13.sol,"subtractScalar(int[] memory self, int a)"
rs-davila/currencyspot,contracts/Owned.sol,Owned();transferOwnership(address newOwner)
QTBlockchain/SolidityNWeb3,SmartContracts/revisit/contracts/SpecialArrays.sol,SpecialArrays();getCharAt(uint index);getFirstAndSecondItem();getStaticArraySize();getStaticElementAt(uint index);addNumberToDynamicBytes(uint number);getDynamicElementAt(uint index)
gleim/DAO,Token.sol,"balanceOf(address _owner);transfer(address _to, uint256 _amount);transferFrom(address _from, address _to, uint256 _amount);approve(address _spender, uint256 _amount);receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);balanceOf(address _owner);transfer(address _to, uint256 _amount);approve(address _spender, uint256 _amount);approveAndCall(address _spender, uint256 _value, bytes _extraData);allowance(address _owner, address _spender)"
dltdojo/courses,ethereum/truffle/multisig/test/TestMultiSigWallet.sol,"confirmTransaction(MultiSigWallet wallet ,uint txid);beforeAll();beforeEach();testDeployMultiSigWallet()"
kowala-tech/kUSD,client/contracts/bindings/consensus/testfiles/contracts/TokenMock.sol,"balanceOf(address who);name();symbol();decimals();totalSupply();transfer(address to, uint value);transfer(address to, uint value, bytes data);transfer(address to, uint value, bytes data, string custom_fallback)"
kowala-tech/kUSD,client/contracts/truffle/contracts/test/TokenMock.sol,"balanceOf(address who);name();symbol();decimals();totalSupply();transfer(address to, uint value);transfer(address to, uint value, bytes data);transfer(address to, uint value, bytes data, string custom_fallback)"
WeiFund/WeiFund,contracts/StaffPicks.sol,"changeOwner(address _owner);StaffPicks();addPick(uint _campaignID);updatePick(uint _pickID, uint _campaignID);deletePick(uint _pickID);getPick(uint _pickID);totalPicks()"
ethbets/ebets,contracts/staticArbiter.sol,"StaticArbiter(address[] _members);isMember(address user);getName();getHigherInstance();castVote(address proposal, uint outcome);declareHanged(address proposal, uint[] arbiterVotes);addProposal(address proposalAddress, uint deadline);addMember(address /*member*/);removeMember(address /*member*/)"
phi-nomenal/phi-nomenal,local_modules/phi-nomenal-contracts/contracts/RFQ.sol,"RFQ(string product_, uint amount_, string deliveryRegion_)"
Neufund/Contracts,contracts/lib/IERC23Token.sol,"transfer(address to, uint value, bytes data);transferFrom(address _from, address _to, uint _value, bytes _data)"
bcosorg/bcos,systemcontractv2/CAAction.sol,"CAAction(address _systemproxy);updateStatus(string _hash,CaStatus _status);get(string _hash);getIp(string _hash);getHashsLength();getHash(uint _index)"
m1nam1/UTCoin,test/TestUTCoin.sol,testInitialBalanceUsingDeployedContract()
orbro/eth-enablers,solidity-baby-steps-master/contracts/58_indexOf.sol,"IndexOf();indexOf(string _a, string _b);whatWasTheVal();kill()"
ownage-ltd/ether-router,contracts/test/ResolverAccessor.sol,getResolver()
AbhishekShah212/learningspace,ethereum/solidity/truffle/contracts/Notary.sol,notarize(string document);calculateProof(string document)
DAISEE/DApp-v2,smartcontracts/token.sol,"owned();transferOwnership(address newOwner);receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);transfer(address _to, uint256 _value);approve(address _spender, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);transferFrom(address _from, address _to, uint256 _value);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);mintToken(address target, uint256 mintedAmount);freezeAccount(address target, bool freeze);setPrices(uint256 newSellPrice, uint256 newBuyPrice);buy();sell(uint256 amount)"
Majoolr/ethereum-libraries,CrowdsaleLib/EvenDistroCrowdsale/truffle/contracts/EvenDistroCrowdsaleLib.sol,"registerUser(EvenDistroCrowdsaleStorage storage self, address _registrant);registerUsers(EvenDistroCrowdsaleStorage storage self, address[] _registrants);unregisterUser(EvenDistroCrowdsaleStorage storage self, address _registrant);unregisterUsers(EvenDistroCrowdsaleStorage storage self, address[] _registrants);calculateAddressTokenCap(EvenDistroCrowdsaleStorage storage self);getMin(uint256 a, uint256 b);receivePurchase(EvenDistroCrowdsaleStorage storage self, uint256 _amount);setTokens(EvenDistroCrowdsaleStorage storage self);withdrawTokens(EvenDistroCrowdsaleStorage storage self);withdrawLeftoverWei(EvenDistroCrowdsaleStorage storage self);withdrawOwnerEth(EvenDistroCrowdsaleStorage storage self);getSaleData(EvenDistroCrowdsaleStorage storage self, uint256 timestamp);getTokensSold(EvenDistroCrowdsaleStorage storage self);crowdsaleActive(EvenDistroCrowdsaleStorage storage self);crowdsaleEnded(EvenDistroCrowdsaleStorage storage self)"
Majoolr/ethereum-libraries,CrowdsaleLib/EvenDistroCrowdsale/EvenDistroCrowdsaleLib.sol,"registerUser(EvenDistroCrowdsaleStorage storage self, address _registrant);registerUsers(EvenDistroCrowdsaleStorage storage self, address[] _registrants);unregisterUser(EvenDistroCrowdsaleStorage storage self, address _registrant);unregisterUsers(EvenDistroCrowdsaleStorage storage self, address[] _registrants);calculateAddressTokenCap(EvenDistroCrowdsaleStorage storage self);getMin(uint256 a, uint256 b);receivePurchase(EvenDistroCrowdsaleStorage storage self, uint256 _amount);setTokens(EvenDistroCrowdsaleStorage storage self);withdrawTokens(EvenDistroCrowdsaleStorage storage self);withdrawLeftoverWei(EvenDistroCrowdsaleStorage storage self);withdrawOwnerEth(EvenDistroCrowdsaleStorage storage self);getSaleData(EvenDistroCrowdsaleStorage storage self, uint256 timestamp);getTokensSold(EvenDistroCrowdsaleStorage storage self);crowdsaleActive(EvenDistroCrowdsaleStorage storage self);crowdsaleEnded(EvenDistroCrowdsaleStorage storage self)"
aragon/aragon-network-token,packages/sale/installed_contracts/zeppelin/contracts/token/BasicToken.sol,"transfer(address _to, uint _value);balanceOf(address _owner)"
pooleja/SolidityPlayground,contracts/zeppelin/token/BasicToken.sol,"transfer(address _to, uint _value);balanceOf(address _owner)"
maraoz/zeppelin-solidity,contracts/token/BasicToken.sol,"transfer(address _to, uint _value);balanceOf(address _owner)"
darcius/rocketpool-crowdsale,contracts/base/Owned.sol,Owned();transferOwnership(address _newOwner);acceptOwnership()
etherisc/flightDelay,contracts/FlightDelayPayoutInterface.sol,"schedulePayoutOraclizeCall(uint _policyId, bytes32 _riskId, uint _offset)"
adklempner/solidity-license,contracts/zeppelin/crowdsale/Crowdsale.sol,"Crowdsale(uint256 _startBlock, uint256 _endBlock, uint256 _rate, address _wallet);createTokenContract();buyTokens(address beneficiary);forwardFunds();validPurchase();hasEnded()"
adamdossa/ProfitSharingContract,installed_contracts/zeppelin/contracts/crowdsale/Crowdsale.sol,"Crowdsale(uint256 _startBlock, uint256 _endBlock, uint256 _rate, address _wallet);createTokenContract();buyTokens(address beneficiary);forwardFunds();validPurchase();hasEnded()"
redsquirrel/augur-core,src/reporting/ReputationToken.sol,"initialize(Branch _branch);migrateOut(ReputationToken _destination, address _reporter, uint256 _attotokens);migrateIn(address _reporter, uint256 _attotokens);migrateFromLegacyRepContract();trustedTransfer(address _source, address _destination, uint256 _attotokens);assertReputationTokenIsLegit(ReputationToken _shadyReputationToken);getTypeName();getBranch();getTopMigrationDestination()"
jensenbox/singnet,dao/test/helpers/AgiCrowdsaleMock.sol,setBlockTimestamp(uint256 _timeStamp);getBlockTimestamp()
ethermarket/democracy,src/base/ownerPermissionsProvider.sol,permitted(address action)
ethereum/frontier-release,solidity/token-erc20.sol,"receiveApproval(address _from, uint256 _value, address _token, bytes calldata _extraData);_transfer(address _from, address _to, uint _value);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes memory _extraData);burn(uint256 _value);burnFrom(address _from, uint256 _value)"
ethereum/ethereum-org,solidity/token-erc20.sol,"receiveApproval(address _from, uint256 _value, address _token, bytes calldata _extraData);_transfer(address _from, address _to, uint _value);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes memory _extraData);burn(uint256 _value);burnFrom(address _from, uint256 _value)"
montyly/manticore,tests/ethereum/contracts/detectors/etherleak_true_pos_argument2.sol,fakeconstructor();withdrawfunds(address attacker)
trailofbits/manticore,tests/ethereum/contracts/detectors/etherleak_true_pos_argument2.sol,fakeconstructor();withdrawfunds(address attacker)
Majoolr/ethereum-libraries,BasicMathLib/truffle/contracts/BasicMathLib.sol,"times(uint256 a, uint256 b);dividedBy(uint256 a, uint256 b);plus(uint256 a, uint256 b);minus(uint256 a, uint256 b)"
Majoolr/ethereum-libraries,CrowdsaleLib/IICOLib/truffle/contracts/BasicMathLib.sol,"times(uint256 a, uint256 b);dividedBy(uint256 a, uint256 b);plus(uint256 a, uint256 b);minus(uint256 a, uint256 b)"
Majoolr/ethereum-libraries,VestingLib/truffle/contracts/BasicMathLib.sol,"times(uint256 a, uint256 b);dividedBy(uint256 a, uint256 b);plus(uint256 a, uint256 b);minus(uint256 a, uint256 b)"
Majoolr/ethereum-libraries,BasicMathLib/BasicMathLib.sol,"times(uint256 a, uint256 b);dividedBy(uint256 a, uint256 b);plus(uint256 a, uint256 b);minus(uint256 a, uint256 b)"
Majoolr/ethereum-libraries,CrowdsaleLib/EvenDistroCrowdsale/truffle/contracts/BasicMathLib.sol,"times(uint256 a, uint256 b);dividedBy(uint256 a, uint256 b);plus(uint256 a, uint256 b);minus(uint256 a, uint256 b)"
Majoolr/ethereum-libraries,CrowdsaleLib/DirectCrowdsale/truffle/contracts/BasicMathLib.sol,"times(uint256 a, uint256 b);dividedBy(uint256 a, uint256 b);plus(uint256 a, uint256 b);minus(uint256 a, uint256 b)"
Majoolr/ethereum-libraries,WalletLib/truffle/contracts/BasicMathLib.sol,"times(uint256 a, uint256 b);dividedBy(uint256 a, uint256 b);plus(uint256 a, uint256 b);minus(uint256 a, uint256 b)"
Majoolr/ethereum-libraries,TokenLib/truffle/contracts/BasicMathLib.sol,"times(uint256 a, uint256 b);dividedBy(uint256 a, uint256 b);plus(uint256 a, uint256 b);minus(uint256 a, uint256 b)"
iam-dev/ERC23,installed_contracts/zeppelin-solidity/test/mocks/SafeERC20Helper.sol,"transfer(address, uint256);transferFrom(address, address, uint256);approve(address, uint256);balanceOf(address);allowance(address, address);transfer(address, uint256);transferFrom(address, address, uint256);approve(address, uint256);balanceOf(address);allowance(address, address);doFailingTransfer();doFailingTransferFrom();doFailingApprove();doSucceedingTransfer();doSucceedingTransferFrom();doSucceedingApprove()"
ownage-ltd/ether-router,contracts/test/TheAnswer.sol,getAnswer()
kowala-tech/kUSD,client/contracts/truffle/contracts/test/KNSRegistryV1.sol,"initialize(address _owner);helloProxy();setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);setTTL(bytes32 node, uint64 ttl);owner(bytes32 node);resolver(bytes32 node);ttl(bytes32 node)"
Juzix/BlockChain-Demo,contracts/interfaces/IJuzixTokenManager.sol,"transferPaillier(string _param,address _to);balanceOfPaillier(address _owner);totalSupplyPaillier();approvePaillier(address _spender, string _value);allowancePaillier(address _owner, address _spender);pageByAccount(address _account, uint _tranferType,uint _pageNum, uint _pageSize);buyFrom(string _params,address _to);isAdmin();getPubkey(address _address);setCirculationShares(string _circulationShares);setPubkey(string _pubKey)"
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/LimitBalance.sol,LimitBalance(uint _limit)
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/LimitBalance.sol,LimitBalance(uint _limit)
AragonOne/zeppelin-solidity,contracts/LimitBalance.sol,LimitBalance(uint _limit)
charles-cooper/raiden,raiden/smart_contracts/StandardToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);totalSupply()"
SafecontractDev/protocol,contracts/bancor_contracts/BancorPriceFloor.sol,BancorPriceFloor(ISmartToken _token);sell();withdraw(uint256 _amount)
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app24-multiple_inheritance_and_intermingling_contracts/three.sol,iii()
eris-ltd/eris,tests/jobs_fixtures/app24-multiple_inheritance_and_intermingling_contracts/three.sol,iii()
monax/monax,tests/jobs_fixtures/app24-multiple_inheritance_and_intermingling_contracts/three.sol,iii()
eris-ltd/eris-cli,tests/jobs_fixtures/app24-multiple_inheritance_and_intermingling_contracts/three.sol,iii()
monax/cli,tests/jobs_fixtures/app24-multiple_inheritance_and_intermingling_contracts/three.sol,iii()
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app24-multiple_inheritance_and_intermingling_contracts/three.sol,iii()
Dicoiner/irianna-solidity,contracts/token/PausableToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value)"
zchn/ethereum-analyzer,examples/solidity.readthedocs.io/control-structures/tuple-min.sol,g()
ethereum/cpp-ethereum,test/unittests/performance/rng.sol,rng()
winsvega/cpp-ethereum,test/unittests/performance/rng.sol,rng()
Nethereum/Nethereum,src/Nethereum.ENS/oldcontracts/ReverseRegistrar.sol,"setName(bytes32 node, string name);ReverseRegistrar(ENS ensAddr, Resolver resolverAddr);claim(address owner);claimWithResolver(address owner, address resolver);setName(string name);node(address addr)"
eddieoz/workshop-rootstock-labitconf2016,contracts/pokecentral.sol,"owned();transferOwnership(address newOwner);updatePokeMarketAddress(address marketAddress);PokeCentral(address account1Demo, address account2Demo);PokeCentral();newPokemon(uint pokemonNumber, uint cp, uint hp );updatePokemon(uint _pokemonID, uint _cp, uint _hp );newPokemonMaster(address pokemonMaster);transferPokemon(address _from, address _to, uint256 _pokemonID);addPokemonToMaster(address _pokemonOwner, uint256 _pokemonID);addPokemonToMaster(address _pokemonOwner, uint256 _pokemonID);delPokemonFromMaster(address _pokemonOwner, uint256 _pokemonID);delPokemonFromMaster(address _pokemonOwner, uint256 _pokemonID);listPokemons( address _pokeOwner );qtdePokemons(address _pokeOwner);qtdePokemonsMapping( address _pokeOwner);qtdePokemons( address _pokeOwner);cleanArray(uint[] pokeList);updatePokeMarketAddress(address marketAddress)"
Spreadway/core,Prophets/my-ico/contracts/GustavoCoin.sol,""
BSDStudios/parity,js/src/contracts/snippets/enhanced-wallet.sol,"isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirm(bytes32 _h);setDailyLimit(uint _newLimit);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);revoke(bytes32 _operation);changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);initMultiowned(address[] _owners, uint _required);revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);reorganizeOwners();clearPending();initDaylimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today();initWallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);clearWalletPending();Wallet(address[] _owners, uint _required, uint _daylimit);getOwner(uint ownerIndex);hasConfirmed(bytes32 _operation, address _owner);isOwner(address _addr)"
immartian/musicoin,js/src/contracts/snippets/enhanced-wallet.sol,"isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirm(bytes32 _h);setDailyLimit(uint _newLimit);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);revoke(bytes32 _operation);changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);initMultiowned(address[] _owners, uint _required);revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);reorganizeOwners();clearPending();initDaylimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today();initWallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);clearWalletPending();Wallet(address[] _owners, uint _required, uint _daylimit);getOwner(uint ownerIndex);hasConfirmed(bytes32 _operation, address _owner);isOwner(address _addr)"
jesuscript/parity,js/src/contracts/snippets/enhanced-wallet.sol,"isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirm(bytes32 _h);setDailyLimit(uint _newLimit);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);revoke(bytes32 _operation);changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);initMultiowned(address[] _owners, uint _required);revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);reorganizeOwners();clearPending();initDaylimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today();initWallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);clearWalletPending();Wallet(address[] _owners, uint _required, uint _daylimit);getOwner(uint ownerIndex);hasConfirmed(bytes32 _operation, address _owner);isOwner(address _addr)"
duaraghav8/Solium,test/lib/rules/indentation/reject/top-level-indent.sol,""
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app16-binding_abi_using_address_returns_factory_and_base_separate/GSFactory.sol,create();getLast()
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app15-binding_abi_using_naming_pattern_importing_base/GSFactory.sol,create();getLast()
eris-ltd/eris,tests/jobs_fixtures/app15-binding_abi_using_naming_pattern_importing_base/GSFactory.sol,create();getLast()
eris-ltd/eris,tests/jobs_fixtures/app16-binding_abi_using_address_returns_factory_and_base_separate/GSFactory.sol,create();getLast()
monax/monax,tests/jobs_fixtures/app16-binding_abi_using_address_returns_factory_and_base_separate/GSFactory.sol,create();getLast()
monax/monax,tests/jobs_fixtures/app15-binding_abi_using_naming_pattern_importing_base/GSFactory.sol,create();getLast()
eris-ltd/eris-cli,tests/jobs_fixtures/app16-binding_abi_using_address_returns_factory_and_base_separate/GSFactory.sol,create();getLast()
eris-ltd/eris-cli,tests/jobs_fixtures/app15-binding_abi_using_naming_pattern_importing_base/GSFactory.sol,create();getLast()
monax/cli,tests/jobs_fixtures/app15-binding_abi_using_naming_pattern_importing_base/GSFactory.sol,create();getLast()
monax/cli,tests/jobs_fixtures/app16-binding_abi_using_address_returns_factory_and_base_separate/GSFactory.sol,create();getLast()
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app15-binding_abi_using_naming_pattern_importing_base/GSFactory.sol,create();getLast()
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app16-binding_abi_using_address_returns_factory_and_base_separate/GSFactory.sol,create();getLast()
shahankhatch/weifund-contracts,src/contracts/CampaignDataRegistry.sol,"register(address _campaign, bytes _data);storedData(address _campaign);register(address _campaign, bytes _data);storedData(address _campaign)"
livepeer/protocol,contracts/token/Minter.sol,"Minter(address _controller, uint256 _inflation, uint256 _inflationChange, uint256 _targetBondingRate);setTargetBondingRate(uint256 _targetBondingRate);setInflationChange(uint256 _inflationChange);migrateToNewMinter(IMinter _newMinter);createReward(uint256 _fracNum, uint256 _fracDenom);trustedTransferTokens(address _to, uint256 _amount);trustedBurnTokens(uint256 _amount);trustedWithdrawETH(address _to, uint256 _amount);depositETH();setCurrentRewardTokens();getController();setInflation();livepeerToken();bondingManager()"
xenioplatform/go-xenio,contracts/xnousers/XNOUsers.sol,"XNOUsers();registerNewUser(string _name, bool _isServer, string _game);removeUser(address gameAddress);getAllUsersAddresses();getGamersAddresses();getServersAddresses();getGamersNumber();getServersNumber();isServer(address _address);getUser(address _address);getServers();getGamers();getUsers()"
duaraghav8/Solium,test/lib/rules/blank-lines/accept/function.sol,spam();ham();baba();spam();ham();lola();someFunction();anotherFunction();yetAnotherFunction()
vechain-team/crowdsale-contracts,contracts/MockedVenSale.sol,blockTime();setMockedBlockTime(uint32 _time)
brakmic/BlockchainStore,contracts/Base/SafeMath.sol,"safeSub(uint256 x, uint256 y);safeAdd(uint256 x, uint256 y);safeMul(uint256 x, uint256 y);safeDiv(uint256 x, uint256 y)"
mahendra-panchal/smart-contract-basics,structEx.sol,""
melonproject/protocol,contracts/integrations/adapters/ZeroExV2Adapter.sol,"identifier();parseAssetsForMethod(bytes4 _selector, bytes calldata _encodedCallArgs);takeOrder(bytes calldata _encodedCallArgs, bytes calldata _encodedAssetTransferArgs);__constructOrderStruct(bytes memory _encodedOrderArgs);__getAssetProxy(bytes memory _assetData);__getAssetAddress(bytes memory _assetData);__decodeTakeOrderCallArgs(bytes memory _encodedCallArgs);__decodeZeroExOrderArgs(bytes memory _encodedZeroExOrderArgs)"
montyly/manticore,tests/ethereum/contracts/consensys_benchmark/integer_overflow_mapping_sym_2.sol,"init(uint256 k, uint256 v)"
trailofbits/manticore,tests/ethereum_bench/consensys_benchmark/integer_overflow_mapping_sym_2.sol,"init(uint256 k, uint256 v)"
transmute-industries/monarch-portal,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
trixyrabbit/Exile,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
michinbear/solidity,test/compilationTests/zeppelin/ownership/HasNoEther.sol,HasNoEther();reclaimEther()
silasdavis/eris-db,execution/solidity/strange_loop.sol,UpsieDownsie()
silasdavis/burrow,execution/solidity/strange_loop.sol,UpsieDownsie()
DigixGlobal/ethereum-ruby,contracts/classic/GoldTokenLedger.sol,"ParticipantRegistry();getOwner();setOwner(address nown);registerAdmin(address regraddr);unregisterAdmin(address regraddr);registerVendor(address vendoraddress);unregisterVendor(address vendoraddress);registerCustodian(address custodianaddress);unregisterCustodian(address custodianaddress);registerAuditor(address auditoraddress);unregisterAuditor(address auditoraddress);isVendor(address vendoraddress);isCustodian(address custodianaddress);isAuditor(address auditoraddress);isRegistrar(address regraddr);GoldRegistry();setConfiguration(address pr);getOwner();setOwner(address nown);getParticipantRegistry();checkCustodian();checkVendor();checkAuditor();checkRegistrar();registerGold();getGoldStatusCode(address gaddr);getGoldStatusVendorverify(address gaddr);getGoldStatusCustodianverify(address gaddr);getGoldStatusMinted(address gaddr);getGoldStatusAuditcount(address gaddr);getGoldStatusRegistered(address gaddr);getGoldStatusLastauditid(address gaddr);getGoldInfoVendor(address gaddr);getGoldInfoCustodian(address gaddr);getGoldInfoWeight(address gaddr);getGoldInfoSerial(address gaddr);getGoldInfoSku(address gaddr);getGoldInfoDocumentation(address gaddr);getLastAuditId(address gaddr);getLastAuditTime(address gaddr);getLastAuditPass(address gaddr);getLastAuditAuditor(address gaddr);getLastAuditExtradata(address gaddr);getLastAuditDocumentation(address gaddr);custodianVerify(address gaddr);vendorVerify(address gaddr);custodianTransfer(address gaddr, address ncaddr);auditReport(address gaddr, bool ares, bytes32 ed, bytes32 doc);Gold();getOwner();initGoldData(uint wt, bytes32 sn, bytes32 sk, bytes32 doc);initRegistryData(address raddr, address vaddr, address caddr);sendRegistration();registryRequestCustodian();registryRequestVendor();registryRequestWeight();registryRequestSerialNumber();registryRequestSku();registryRequestDocumentation();getGoldDataInitialized();getGoldDataMinted();getGoldDataWeight();getGoldDataSerial();getGoldDataSku();getGoldDataDocumentation();getRegistryDataInitialized();getRegistryDataRegistered();getRegistryDataRegistry();getRegistryDataVendor();getRegistryDataCustodian();getRegistryDataMinter();sendToMinter(uint minttype);goldRegistry();GoldTokenLedger();setMinter(address maddr);getMinter();getOwner();setOwner();getBalance(address user);sendToken(uint256 amount, address recipient);mint(uint256 amount, address recipient)"
EthWorks/ethereum.rb,contracts/classic/GoldTokenLedger.sol,"ParticipantRegistry();getOwner();setOwner(address nown);registerAdmin(address regraddr);unregisterAdmin(address regraddr);registerVendor(address vendoraddress);unregisterVendor(address vendoraddress);registerCustodian(address custodianaddress);unregisterCustodian(address custodianaddress);registerAuditor(address auditoraddress);unregisterAuditor(address auditoraddress);isVendor(address vendoraddress);isCustodian(address custodianaddress);isAuditor(address auditoraddress);isRegistrar(address regraddr);GoldRegistry();setConfiguration(address pr);getOwner();setOwner(address nown);getParticipantRegistry();checkCustodian();checkVendor();checkAuditor();checkRegistrar();registerGold();getGoldStatusCode(address gaddr);getGoldStatusVendorverify(address gaddr);getGoldStatusCustodianverify(address gaddr);getGoldStatusMinted(address gaddr);getGoldStatusAuditcount(address gaddr);getGoldStatusRegistered(address gaddr);getGoldStatusLastauditid(address gaddr);getGoldInfoVendor(address gaddr);getGoldInfoCustodian(address gaddr);getGoldInfoWeight(address gaddr);getGoldInfoSerial(address gaddr);getGoldInfoSku(address gaddr);getGoldInfoDocumentation(address gaddr);getLastAuditId(address gaddr);getLastAuditTime(address gaddr);getLastAuditPass(address gaddr);getLastAuditAuditor(address gaddr);getLastAuditExtradata(address gaddr);getLastAuditDocumentation(address gaddr);custodianVerify(address gaddr);vendorVerify(address gaddr);custodianTransfer(address gaddr, address ncaddr);auditReport(address gaddr, bool ares, bytes32 ed, bytes32 doc);Gold();getOwner();initGoldData(uint wt, bytes32 sn, bytes32 sk, bytes32 doc);initRegistryData(address raddr, address vaddr, address caddr);sendRegistration();registryRequestCustodian();registryRequestVendor();registryRequestWeight();registryRequestSerialNumber();registryRequestSku();registryRequestDocumentation();getGoldDataInitialized();getGoldDataMinted();getGoldDataWeight();getGoldDataSerial();getGoldDataSku();getGoldDataDocumentation();getRegistryDataInitialized();getRegistryDataRegistered();getRegistryDataRegistry();getRegistryDataVendor();getRegistryDataCustodian();getRegistryDataMinter();sendToMinter(uint minttype);goldRegistry();GoldTokenLedger();setMinter(address maddr);getMinter();getOwner();setOwner();getBalance(address user);sendToken(uint256 amount, address recipient);mint(uint256 amount, address recipient)"
marekkirejczyk/ethereum.rb,contracts/classic/GoldTokenLedger.sol,"ParticipantRegistry();getOwner();setOwner(address nown);registerAdmin(address regraddr);unregisterAdmin(address regraddr);registerVendor(address vendoraddress);unregisterVendor(address vendoraddress);registerCustodian(address custodianaddress);unregisterCustodian(address custodianaddress);registerAuditor(address auditoraddress);unregisterAuditor(address auditoraddress);isVendor(address vendoraddress);isCustodian(address custodianaddress);isAuditor(address auditoraddress);isRegistrar(address regraddr);GoldRegistry();setConfiguration(address pr);getOwner();setOwner(address nown);getParticipantRegistry();checkCustodian();checkVendor();checkAuditor();checkRegistrar();registerGold();getGoldStatusCode(address gaddr);getGoldStatusVendorverify(address gaddr);getGoldStatusCustodianverify(address gaddr);getGoldStatusMinted(address gaddr);getGoldStatusAuditcount(address gaddr);getGoldStatusRegistered(address gaddr);getGoldStatusLastauditid(address gaddr);getGoldInfoVendor(address gaddr);getGoldInfoCustodian(address gaddr);getGoldInfoWeight(address gaddr);getGoldInfoSerial(address gaddr);getGoldInfoSku(address gaddr);getGoldInfoDocumentation(address gaddr);getLastAuditId(address gaddr);getLastAuditTime(address gaddr);getLastAuditPass(address gaddr);getLastAuditAuditor(address gaddr);getLastAuditExtradata(address gaddr);getLastAuditDocumentation(address gaddr);custodianVerify(address gaddr);vendorVerify(address gaddr);custodianTransfer(address gaddr, address ncaddr);auditReport(address gaddr, bool ares, bytes32 ed, bytes32 doc);Gold();getOwner();initGoldData(uint wt, bytes32 sn, bytes32 sk, bytes32 doc);initRegistryData(address raddr, address vaddr, address caddr);sendRegistration();registryRequestCustodian();registryRequestVendor();registryRequestWeight();registryRequestSerialNumber();registryRequestSku();registryRequestDocumentation();getGoldDataInitialized();getGoldDataMinted();getGoldDataWeight();getGoldDataSerial();getGoldDataSku();getGoldDataDocumentation();getRegistryDataInitialized();getRegistryDataRegistered();getRegistryDataRegistry();getRegistryDataVendor();getRegistryDataCustodian();getRegistryDataMinter();sendToMinter(uint minttype);goldRegistry();GoldTokenLedger();setMinter(address maddr);getMinter();getOwner();setOwner();getBalance(address user);sendToken(uint256 amount, address recipient);mint(uint256 amount, address recipient)"
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol,"allowance(address _owner, address _spender);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value)"
chrisdotn/jsmnSol,test/TestObjects.sol,testSimpleObject()
yoLUkAsss/DEscrutinio,contracts/Counts.sol,"init(bytes32[] newCandidates);getTotal();setData(uint did, uint eid, uint mid, uint8[] co);getByDistrict(uint did);getBySchool(uint did, uint eid);getByMesa(uint did, uint eid, uint mid)"
dltdojo/courses,ethereum/solidity/T261_ProxyLibraries.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);div(uint a, uint b);FooContract(address safeMathAddress);div(uint a, uint b)"
Dsensor/resolutionwallet,src/server/smartcontracts/sampling-contract.sol,"sampleAuthor();startSample(address receiver, uint sampletime);computation(uint a);showSample(address receiver);getSampledmap()"
EthFans/carbonvote,contract/vote.sol,""
bluedroplet/blobstore-ethereum,src/MixItemStoreConstants.sol,""
link-blockchain/blobstore,src/MixItemStoreConstants.sol,""
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app16-binding_abi_using_address_returns_factory_and_base_separate/GSContract.sol,set(uint x);get()
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app15-binding_abi_using_naming_pattern_importing_base/GSContract.sol,set(uint x);get()
eris-ltd/eris,tests/jobs_fixtures/app15-binding_abi_using_naming_pattern_importing_base/GSContract.sol,set(uint x);get()
eris-ltd/eris,tests/jobs_fixtures/app16-binding_abi_using_address_returns_factory_and_base_separate/GSContract.sol,set(uint x);get()
monax/monax,tests/jobs_fixtures/app15-binding_abi_using_naming_pattern_importing_base/GSContract.sol,set(uint x);get()
monax/monax,tests/jobs_fixtures/app16-binding_abi_using_address_returns_factory_and_base_separate/GSContract.sol,set(uint x);get()
eris-ltd/eris-cli,tests/jobs_fixtures/app15-binding_abi_using_naming_pattern_importing_base/GSContract.sol,set(uint x);get()
eris-ltd/eris-cli,tests/jobs_fixtures/app16-binding_abi_using_address_returns_factory_and_base_separate/GSContract.sol,set(uint x);get()
monax/cli,tests/jobs_fixtures/app15-binding_abi_using_naming_pattern_importing_base/GSContract.sol,set(uint x);get()
monax/cli,tests/jobs_fixtures/app16-binding_abi_using_address_returns_factory_and_base_separate/GSContract.sol,set(uint x);get()
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app15-binding_abi_using_naming_pattern_importing_base/GSContract.sol,set(uint x);get()
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app16-binding_abi_using_address_returns_factory_and_base_separate/GSContract.sol,set(uint x);get()
SmartChainX/ChainBlockchain,Contracts/Base/StandardTokenWithOverflowProtection.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);balanceOf(address _owner)"
Bunjin/DXF,DXF_Tokens.sol,"DXF_Tokens();acceptTermsAndJoinDXF();refund();fullTransfer(address _to);registerVIP(address _vip, address _vip_confirm, uint256 _previous_balance);paybackContribution(uint i);changeAdmin(address _admin, address _admin_confirm);closeFunding();reopenDO();allowTransfers();disableTransfers();totalSupply();balanceOf(address _owner);accountInformation(address _owner)"
saulbein/web3j,core/src/test/resources/solidity/contracts/HumanStandardToken.sol,"approveAndCall(address _spender, uint256 _value, bytes _extraData)"
dcntrlzd/helios,test/contracts/lib/TokenRecipient.sol,"receiveApproval(address _from, uint256 _value, address _token, bytes _extraData)"
yoLUkAsss/DEscrutinio,contracts/Mesa.sol,"Mesa(bytes32[] inputCandidates, uint newCantidadDePersonas, address newCountsAddress);addParticipantVerify(bytes32 p, ParticipantData pd);addParticipant(bytes32 p, ParticipantData pd);getCandidatesList();getParticipantList();loadVotesForParticipantVerify(bytes32 participant, bytes32 candidate, uint8 votos);loadVotesForParticipant(bytes32 participant, bytes32 candidate, uint8 votos);isValidCandidate(bytes32 candidate);isValidParticipant(bytes32 participant);isFiscal(bytes32 participant);isCategory(bytes32 participant, ParticipantCategory category);isPresidenteDeMesa(bytes32 participant);setFiscalVerify(bytes32 fiscal);setFiscal(bytes32 fiscal);setPresidenteDeMesaVerify(bytes32 presidente);setPresidenteDeMesa(bytes32 presidente);setVicepresidenteDeMesa(bytes32 vicepresidente);checkVerify(bytes32 presi, uint distritoId, uint escuelaId, uint mesaId);check(bytes32 presi, uint distritoId, uint escuelaId, uint mesaId);checkFiscalVerify(bytes32 participant);checkFiscal(bytes32 participant);loadMesaVerify(bytes32 participante, bytes32[] candidatos, uint8[] conteos);loadMesa(bytes32 participante, bytes32[] candidatos, uint8[] conteos)"
olivier-schmitt/solc-maven-plugin,src/test/resources/contracts/solidity/SimpleAuction.sol,bid();withdraw();auctionEnd()
maxweng/oracleit-examples,contracts/AirCrash.sol,"AirCrash();queryAirCrash(string _flightId);__callback(uint id, string result)"
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/test/helpers/DayLimitMock.sol,DayLimitMock(uint256 _value);attemptSpend(uint256 _value);setDailyLimit(uint256 _newLimit);resetSpentToday()
pash7ka/zeppelin-solidity,test/helpers/DayLimitMock.sol,DayLimitMock(uint256 _value);attemptSpend(uint256 _value);setDailyLimit(uint256 _newLimit);resetSpentToday()
Dicoiner/irianna-solidity,test/helpers/DayLimitMock.sol,DayLimitMock(uint256 _value);attemptSpend(uint256 _value);setDailyLimit(uint256 _newLimit);resetSpentToday()
pz7/liquet,node_modules/zeppelin-solidity/test/helpers/DayLimitMock.sol,DayLimitMock(uint256 _value);attemptSpend(uint256 _value);setDailyLimit(uint256 _newLimit);resetSpentToday()
dmx374/zeppelin-solidity,test/helpers/DayLimitMock.sol,DayLimitMock(uint256 _value);attemptSpend(uint256 _value);setDailyLimit(uint256 _newLimit);resetSpentToday()
cashpokerpro-dev/cash-smartcontracts,test/helpers/DayLimitMock.sol,DayLimitMock(uint256 _value);attemptSpend(uint256 _value);setDailyLimit(uint256 _newLimit);resetSpentToday()
ProjectEntropy/contracts,contracts/tokens/StandardToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
meta-network/go-meta,contracts/KORDRegistry.sol,"graph(address kordID);setGraph(bytes32 hash, bytes sig)"
WishFinanceCom/WF-contracts,contracts/core/platform/WFPlatformInterface.sol,"name(bytes32 _symbol);setProxy(address _address, bytes32 _symbol);isOwner(address _owner, bytes32 _symbol);totalSupply(bytes32 _symbol);balanceOf(address _holder, bytes32 _symbol);allowance(address _from, address _spender, bytes32 _symbol);baseUnit(bytes32 _symbol);proxyTransferWithReference(address _to, uint _value, bytes32 _symbol, string _reference, address _sender);proxyTransferFromWithReference(address _from, address _to, uint _value, bytes32 _symbol, string _reference, address _sender);proxyApprove(address _spender, uint _value, bytes32 _symbol, address _sender);issueAsset(bytes32 _symbol, uint _value, string _name, string _description, uint8 _baseUnit, bool _isReissuable);reissueAsset(bytes32 _symbol, uint _value);revokeAsset(bytes32 _symbol, uint _value);isReissuable(bytes32 _symbol);changeOwnership(bytes32 _symbol, address _newOwner)"
fkbenjamin/pc-firebase-starter,contracts/Citizen.sol,"Citizen(address _usedStorage);setStorage(Storage _usedStorage);createPassport(uint countryId, bytes32 hashedPass);applyForVisa(uint _country, uint _index);payVisa(uint _country, uint _visaId)"
Souptacular/motivate-dapp,_pre/name_reg.sol,owned();kill();NameReg();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr)
ultra-koder/JobMarket,dapp/_pre/name_reg.sol,owned();kill();NameReg();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr)
WingsDao/contracts,contracts/zeppelin/test-helpers/SecureTargetBounty.sol,checkInvariant();deployContract()
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/test-helpers/SecureTargetBounty.sol,checkInvariant();deployContract()
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/test-helpers/SecureTargetBounty.sol,checkInvariant();deployContract()
AragonOne/zeppelin-solidity,contracts/test-helpers/SecureTargetBounty.sol,checkInvariant();deployContract()
SilentCicero/wafr,src/tests/solidityTests/emptyTestContract/test.emptyContractInSequence.sol,test_oneAssert();test_oneAssert()
coincrowd-it/ico,contracts/Ambassador.sol,Ambassador()
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/ownership/HasNoTokens.sol,""
osmode/ddash,ddash/source/blackswan.sol,"is_entity(address entityAddress);get_entity_count();new_entity(address entityAddress, string enode);update_entity(address entityAddress, string enode);BlackSwan();randomGen(uint seed);add_entity(string enode);sender_enode();get_enode_by_row(uint row);greet_omar(uint _i)"
hundsun/blockchain,ticket.sol,"Conference();buyTicket();changeQuota(uint newquota);refundTicket(address recipient, uint amount);destroy()"
transmute-industries/eth-faucet,contracts/Authentication.sol,login();signup(bytes32 name);update(bytes32 name)
dltdojo/courses,ethereum/solidity/T420_EdgeComputing.sol,doWorkAndPayTOT();doWorkAndPayEAT();doWorkAndPayEBT();TheOneToken()
ProBonoPublicoWorld/ico-contracts,contracts/ICOCrowdsale.sol,finalization()
gnosis/gnosis-contracts,contracts/Markets/StandardMarketWithPriceLogger.sol,"buy(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint maxCost);sell(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint minProfit);shortSell(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint minProfit);trade(int[] memory outcomeTokenAmounts, int collateralLimit);close();getAvgPrice();logPriceBefore();logPriceAfter()"
ledgerlabs/toy-state-channels,contracts/Rules.sol,""
ramvi/iotmarket,contracts/SimpleDataMarket.sol,"register(string key, string desc, bool active, string help, address payTo, uint secondsLength, uint price);update(string key, string desc, bool active, string help, address payTo, uint secondsLength, uint256 price);toggleActive(string key);isRegistered(string key);getRecordAtIndex(uint rindex);getRecord(string key);getOwner(string key);getTime(string key);getTotalRecords();buyAccess(string key);checkAccess(string key, address _buyer);withdraw(string key);balance(string key)"
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/test-helpers/MultisigWalletMock.sol,"MultisigWalletMock(address[] _owners, uint _required, uint _daylimit);changeOwner(address _from, address _to)"
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/test-helpers/MultisigWalletMock.sol,"MultisigWalletMock(address[] _owners, uint _required, uint _daylimit);changeOwner(address _from, address _to)"
AragonOne/zeppelin-solidity,contracts/test-helpers/MultisigWalletMock.sol,"MultisigWalletMock(address[] _owners, uint _required, uint _daylimit);changeOwner(address _from, address _to)"
ether-camp/ethereum-harmony,src/test/resources/contracts/NameReg.sol,owned();kill();NameReg();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr)
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol,finishMinting()
aragon/aragon-core,contracts/test/mocks/VaultMock.sol,initialize()
ForgionePawar/tribitration_contract,contracts/Escrow.sol,"EscrowRaj();setSellerAndAmt(address sellerAddress, uint amt);release();void()"
RyuuGan/sol-merger,test/compiled/ReservedWordsInString.sol,"Ownable();transferOwnership(address newOwner);mintSupply(address src20, address swmAccount, uint256 swmValue, uint256 src20Value);incStake(address src20, address swmAccount, uint256 swmValue)"
mothershipcx/contracts,etherscan/SITExchanger.sol,"mul(uint a, uint b);div(uint a, uint b);sub(uint a, uint b);add(uint a, uint b);Controlled();changeController(address _newController);refund(address th, uint amount);proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);totalSupply();totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);Burnable();changeBurner(address _newBurner);totalSupplyAt(uint _blockNumber);generateTokens(address _owner, uint _amount);destroyTokens(address _owner, uint _amount);enableTransfers(bool _transfersEnabled);claimTokens(address _token);finalize();Contribution();proxyPayment(address _th);onTransfer(address, address, uint256);onApprove(address, address, uint256);doBuy(address _th);isContract(address _addr);refund();finalize();percent(uint256 p);tokensIssued();tokensForSale();getBlockNumber();claimTokens(address _token);pauseContribution();resumeContribution();SITExchanger(address _sit, address _msp, address _contribution);collect();proxyPayment(address);onTransfer(address, address, uint256);onApprove(address, address, uint256);getBlockNumber();claimTokens(address _token)"
bitcoinmeetups/dapp-bin,coins/coin.sol,"coin(string3 name, uint denom)"
chriseth/dapp-bin,coins/coin.sol,"coin(string3 name, uint denom)"
shahankhatch/dapp-bin,coins/coin.sol,"coin(string3 name, uint denom)"
LianaHus/dapp-bin,coins/coin.sol,"coin(string3 name, uint denom)"
RepublicMaster/dapp-bin,coins/coin.sol,"coin(string3 name, uint denom)"
frozeman/ethereum-smart-contracts,coins/coin.sol,"coin(string3 name, uint denom)"
ethereum/dapp-bin,coins/coin.sol,"coin(string3 name, uint denom)"
vaporry/dapp-bin,coins/coin.sol,"coin(string3 name, uint denom)"
jpoon/EthRelay,contracts/RuralBank.sol,"credit(string account, uint amount);debit(string account, uint amount);RuralBank(uint _routingCode, address[] _transferApprovers);getBalance(string account);deposit(string account, uint amount);withdraw(string account, uint amount);getTransfer(string account, uint id);initiateTransfer(string origAccount, string destAccount, uint destBank, uint amount);executeTransfer(string origAccount, string destAccount, uint destBank, uint amount);acceptExternalTransfer(string origAccount, uint origBank, string destAccount, uint amount)"
airalab/DAO-IPCI,contracts/Auditor.sol,setEmissionLimit(uint _limit);setHoldPercentage(uint _hold);emission(uint _value);transfer(uint _value)
GuigsEvt/CrowdsaleEthereum,contracts/GuigsTokenSale.sol,buyTokens(address beneficiary);finalization()
mixbytes/storiqa_ico,contracts/test_helpers/STQPreICOTestHelper.sol,"STQPreICOTestHelper(address token, address funds);getCurrentTime();setTime(uint time);getMaximumFunds()"
Storiqa/ico_smart_contract,contracts/test_helpers/STQPreICOTestHelper.sol,"STQPreICOTestHelper(address token, address funds);getCurrentTime();setTime(uint time);getMaximumFunds()"
erooijak/ethlance,resources/public/contracts/src/userLibrary.sol,"getUserCount(address db);userExists(address db, address userId);getAllUsers(address db);setStatus(address db, address userId, uint8 status);setFreelancerSkills(address db, address userId, uint[] skills);getFreelancerSkills(address db, address userId);setFreelancerCategories(address db, address userId, uint[] categories);getFreelancerCategories(address db, address userId);setUserNotifications(address db, address userId, bool[] boolNotifSettings, uint8[] uint8NotifSettings);addReceivedMessage(address db, address userId, uint messageId);addSentMessage(address db, address userId, uint messageId);isActiveEmployer(address db, address userId);isActiveFreelancer(address db, address userId);hasStatus(address db, address userId, uint8 status);getStatus(address db, address userId);setUserLanguages(address db, address userId, uint[] languages);addEmployerJob(address db, address userId, uint jobId);getEmployerJobs(address db, address userId);getFreelancerContractsCount(address db, address userId);addFreelancerContract(address db, address userId, uint contractId);getFreelancerContracts(address db, address userId);addEmployerContract(address db, address userId, uint contractId);getEmployerContracts(address db, address userId);addFreelancerTotalInvoiced(address db, address userId, uint amount);subFreelancerTotalInvoiced(address db, address userId, uint amount);addEmployerTotalInvoiced(address db, address userId, uint amount);subEmployerTotalInvoiced(address db, address userId, uint amount);addSponsorship(address db, address userId, uint sponsorshipId);addTotalSponsored(address db, address userId, uint amount);subTotalSponsored(address db, address userId, uint amount);getSponsorships(address db, address userId);getSponsorships(address db, address userId, bool isRefunded);userSponsorshipsPred(address db, uint[] args, uint sponsorshipId);addToAvgRating(address db, address userId, string countKey, string key, uint8 rating);addToFreelancerAvgRating(address db, address userId, uint8 rating);getFreelancerAvgRating(address db, address userId);addToEmployerAvgRating(address db, address userId, uint8 rating);getEmployerAvgRating(address db, address userId);addToFreelancerTotalEarned(address db, address userId, uint amount);addToEmployerTotalPaid(address db, address userId, uint amount);isFromCountry(address db, address userId, uint countryId);isFromState(address db, address userId, uint stateId);hasMinRating(address db, address userId, uint8 minAvgRating);hasFreelancerMinRatingsCount(address db, address userId, uint minRatingsCount);getFreelancerHourlyRate(address db, address userId);getFreelancerHourlyRateCurrency(address db, address userId);hasHourlyRateWithinRange(address db, address userId, uint[] minHourlyRates, uint[] maxHourlyRates);hasLanguage(address db, address userId, uint languageId);hasJobRecommendations(address db, address userId, uint jobRecommendations);isFreelancerAvailable(address db, address userId);userContractsPred(address db, uint[] contractStatuses, uint[] jobStatuses, uint contractId);getFreelancerContractsByStatus(address db, address userId, uint[] contractStatuses, uint[] jobStatuses);getEmployerContractsByStatus(address db, address userId, uint[] contractStatuses, uint[] jobStatuses);getFreelancerInvoicesByStatus(address db, address userId, uint8 invoiceStatus);getEmployerInvoicesByStatus(address db, address userId, uint8 invoiceStatus)"
ethereum/frontier-release,solidity/dao-liquid-democracy.sol,"vote(address nominatedAddress);execute(address target, uint valueInWei, bytes32 bytecode);calculateVotes()"
ethereum/ethereum-org,solidity/dao-liquid-democracy.sol,"vote(address nominatedAddress);execute(address target, uint valueInWei, bytes32 bytecode);calculateVotes()"
Spreadway/core,new_prophets/contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
QTBlockchain/SolidityNWeb3,SmartContracts/truffleboxdemo/contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
QTBlockchain/SolidityNWeb3,Projects/Reference/contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
QTBlockchain/SolidityNWeb3,SmartContracts/debugtest/contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app27-multiple_imports_and_multiple_constructor_different_factory_types/contracts/GSFactory.sol,"createSingle(uint initialValueSingle);getLastSingle();createMulti(uint initialValueFirst, uint initialValueSecond);getLastMulti()"
eris-ltd/eris,tests/jobs_fixtures/app27-multiple_imports_and_multiple_constructor_different_factory_types/contracts/GSFactory.sol,"createSingle(uint initialValueSingle);getLastSingle();createMulti(uint initialValueFirst, uint initialValueSecond);getLastMulti()"
monax/monax,tests/jobs_fixtures/app27-multiple_imports_and_multiple_constructor_different_factory_types/contracts/GSFactory.sol,"createSingle(uint initialValueSingle);getLastSingle();createMulti(uint initialValueFirst, uint initialValueSecond);getLastMulti()"
eris-ltd/eris-cli,tests/jobs_fixtures/app27-multiple_imports_and_multiple_constructor_different_factory_types/contracts/GSFactory.sol,"createSingle(uint initialValueSingle);getLastSingle();createMulti(uint initialValueFirst, uint initialValueSecond);getLastMulti()"
monax/cli,tests/jobs_fixtures/app27-multiple_imports_and_multiple_constructor_different_factory_types/contracts/GSFactory.sol,"createSingle(uint initialValueSingle);getLastSingle();createMulti(uint initialValueFirst, uint initialValueSecond);getLastMulti()"
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app27-multiple_imports_and_multiple_constructor_different_factory_types/contracts/GSFactory.sol,"createSingle(uint initialValueSingle);getLastSingle();createMulti(uint initialValueFirst, uint initialValueSecond);getLastMulti()"
sirasistant/market_consensys_academy,contracts/Owned.sol,Owned();setOwner(address newOwner);getOwner();kill()
eris-ltd/eris-db,tests/jobs_fixtures/app52-proposal-execute/test.sol,addFoobar(uint n);getFoobar()
GovernX/governx-contracts,src/contracts/utils/tests/test.Controller.sol,setup()
aragon/aragon-network-token,packages/sale/installed_contracts/zeppelin/contracts/MultisigWallet.sol,"MultisigWallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);setDailyLimit(uint _newLimit);resetSpentToday();clearPending()"
pooleja/SolidityPlayground,contracts/zeppelin/MultisigWallet.sol,"MultisigWallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);setDailyLimit(uint _newLimit);resetSpentToday();clearPending()"
maraoz/zeppelin-solidity,contracts/MultisigWallet.sol,"MultisigWallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);setDailyLimit(uint _newLimit);resetSpentToday();clearPending()"
RyuuGan/sol-merger,test/contracts/Enum.sol,""
obscuren/etherapis,etherapis/contract/contract.sol,"userServicesLength(address addr);servicesLength();getService(uint serviceID);deleteService(uint serviceID);enableService(uint serviceID);disableService(uint serviceID);addService(string name, string endpoint, uint model, uint price, uint cancellation);makeSubscriptionID(address from, uint serviceID);getHash(address from, uint serviceID, uint nonce, uint value);verifySignature(bytes32 subscriptionID, uint nonce, uint value, uint8 v, bytes32 r, bytes32 s);verifyPayment(bytes32 subscriptionID, uint nonce, uint value, uint8 v, bytes32 r, bytes32 s);claim(bytes32 subscriptionID, uint nonce, uint value, uint8 v, bytes32 r, bytes32 s);deposit(bytes32 subscriptionID);cancel(bytes32 subscriptionID);reclaim(bytes32 subscriptionID);getSubscription(bytes32 subscriptionID);getSubscriptionValue(bytes32 subscriptionID);getSubscriptionNonce(bytes32 subscriptionID);getSubscriptionOwner(bytes32 subscriptionID);getSubscriptionServiceID(bytes32 subscriptionID);getSubscriptionClosedAt(bytes32 subscriptionID);isValidSubscription(bytes32 subscriptionID);userSubscriptionsLength(address addr);subscribe(uint serviceID)"
etherapis/etherapis,etherapis/contract/contract.sol,"userServicesLength(address addr);servicesLength();getService(uint serviceID);deleteService(uint serviceID);enableService(uint serviceID);disableService(uint serviceID);addService(string name, string endpoint, uint model, uint price, uint cancellation);makeSubscriptionID(address from, uint serviceID);getHash(address from, uint serviceID, uint nonce, uint value);verifySignature(bytes32 subscriptionID, uint nonce, uint value, uint8 v, bytes32 r, bytes32 s);verifyPayment(bytes32 subscriptionID, uint nonce, uint value, uint8 v, bytes32 r, bytes32 s);claim(bytes32 subscriptionID, uint nonce, uint value, uint8 v, bytes32 r, bytes32 s);deposit(bytes32 subscriptionID);cancel(bytes32 subscriptionID);reclaim(bytes32 subscriptionID);getSubscription(bytes32 subscriptionID);getSubscriptionValue(bytes32 subscriptionID);getSubscriptionNonce(bytes32 subscriptionID);getSubscriptionOwner(bytes32 subscriptionID);getSubscriptionServiceID(bytes32 subscriptionID);getSubscriptionClosedAt(bytes32 subscriptionID);isValidSubscription(bytes32 subscriptionID);userSubscriptionsLength(address addr);subscribe(uint serviceID)"
gophergala2016/etherapis,etherapis/contract/contract.sol,"userServicesLength(address addr);servicesLength();getService(uint serviceID);deleteService(uint serviceID);enableService(uint serviceID);disableService(uint serviceID);addService(string name, string endpoint, uint model, uint price, uint cancellation);makeSubscriptionID(address from, uint serviceID);getHash(address from, uint serviceID, uint nonce, uint value);verifySignature(bytes32 subscriptionID, uint nonce, uint value, uint8 v, bytes32 r, bytes32 s);verifyPayment(bytes32 subscriptionID, uint nonce, uint value, uint8 v, bytes32 r, bytes32 s);claim(bytes32 subscriptionID, uint nonce, uint value, uint8 v, bytes32 r, bytes32 s);deposit(bytes32 subscriptionID);cancel(bytes32 subscriptionID);reclaim(bytes32 subscriptionID);getSubscription(bytes32 subscriptionID);getSubscriptionValue(bytes32 subscriptionID);getSubscriptionNonce(bytes32 subscriptionID);getSubscriptionOwner(bytes32 subscriptionID);getSubscriptionServiceID(bytes32 subscriptionID);getSubscriptionClosedAt(bytes32 subscriptionID);isValidSubscription(bytes32 subscriptionID);userSubscriptionsLength(address addr);subscribe(uint serviceID)"
DOkwufulueze/eth-vue,contracts/DB.sol,""
iam-dev/ERC23,contracts/token/interface/Upgradeable23Token.sol,setName(bytes32 _name);setSymbol(bytes32 _symbol);setDecimals(uint256 _decimals);addSupply(uint256 _amount);subSupply(uint256 _amount)
isvirin/neurodao,BREM/PresaleBREMP.sol,"balanceOf(address who);freezedBalanceOf(address _who);owned();changeOwner(address _owner);confirmOwner();Crowdsale(address _neurodao, uint _etherPrice);setEtherPrice(uint _etherPrice);startPresale(address _presaleOwner);startBonuses();finishCrowdsale();Token(address _neurodao, uint _etherPrice);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint _value);approve(address _spender, uint _value);allowance(address _owner, address _spender);PresaleBREMP(address _neurodao, uint _etherPrice);withdraw();killMe()"
Spreadway/core,eth/neurodao-master/BREM/PresaleBREMP.sol,"balanceOf(address who);freezedBalanceOf(address _who);owned();changeOwner(address _owner);confirmOwner();Crowdsale(address _neurodao, uint _etherPrice);setEtherPrice(uint _etherPrice);startPresale(address _presaleOwner);startBonuses();finishCrowdsale();Token(address _neurodao, uint _etherPrice);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint _value);approve(address _spender, uint _value);allowance(address _owner, address _spender);PresaleBREMP(address _neurodao, uint _etherPrice);withdraw();killMe()"
hygzhu/P2Secure,BorrowIt/truffletest/arthur-dev/contracts/CollatLending.sol,"CollatLending();initLending(address _lenderAddr, uint _collat, uint _loanPayment);settle();forfietCollat();transfer(address _to, uint _value);getBalance(address _user);setBalance(address _user, uint _balance)"
aragon/aragon-core,contracts/test/helpers/ThrowProxy.sol,assertThrows(string _msg);assertItDoesntThrow(string _msg);execute()
XelionIO/cryptostation-contracts,token.sol,"owned();transferOwnership(address newOwner);receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);_transfer(address _from, address _to, uint _value);transfer(address _to, uint256 _value);internaltransfer(address _from, address _to, uint _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);burn(uint256 _value);burnFrom(address _from, uint256 _value);mintToken(address target, uint256 mintedAmount);freezeAccount(address target, bool freeze)"
input-output-hk/etc-client,src/it/resources/txExecTest/documentation/ForksTestContract.sol,ForksTestContract();selfDestruct(address refundAddr);exp()
montyly/manticore,examples/evm/simple_multi_func.sol,Test()
trailofbits/manticore,examples/evm/simple_multi_func.sol,Test()
dacplayproject/play-dapp,src/MigrateController.sol,"MigrateController(address _pls);changeController(address _newController);proxyPayment(address);onTransfer(address, address, uint256);onApprove(address, address, uint256);mint(address _th, uint256 _amount, bytes data);isContract(address _addr);time();getBlockNumber();claimTokens(address _token)"
Getline-Network/getline,dapp/test/TestTokens.sol,testPrintableToken()
mycspring/ClaveChain,Chain/Kyc/IKycClaveChain.sol,"Register(address requester, bytes4 callback, bytes18 index);Update(IKycClaveChain _kycClaveChain)"
manishbisht/Udacity,Blockchain Developer Nanodegree/P7 - FlightSurety/contracts/FlightSuretyData.sol,"isOperational();setOperatingStatus(bool mode);getAirlineVotes(address newAirline);addAirlineVotes(address newAirline, address senderAddress);isAirlineVoted(address newAirline, address senderAddress);registerAirline(address newAirline);isAirlineRegistered(address newAirline);activateAirline(address airlineAddress);isAirlineActivated(address airlineAddress);getRegisteredAirlines();getActiveAirlines();buyInsurance(address airline, string flight, uint256 timestamp, address passenger, uint256 insuranceAmount);claimInsuranceAmount(address airline, string flight, uint256 timestamp, address airlineAddress, address passenger);withdrawAmount(address senderAddress);fund(address senderAddress);getFlightKey(address airline, string memory flight, uint256 timestamp)"
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/ethpm/contracts/PLCRVoting.sol,"isExpired(uint _terminationDate);attrUUID(address _user, uint _pollID)"
adridadou/eth-contract-api,src/test/resources/c2.sol,""
PeculiumPCL/Peculium,contracts/v1.1/Delivery.sol,"Delivery();InitPeculiumAdress(address peculAdress);airdropsTokens(address[] _vaddr, uint256[] _vamounts)"
dadaista/GorillaSale,contracts/GorillaToken.sol,""
papyrusglobal/smartcontracts,contracts/PapyrusTokenTestReceiver.sol,"onTokenTransfer(address from, uint256 value, bytes data);test()"
montyly/manticore,tests/ethereum/contracts/consensys_benchmark/integer_overflow_multitx_onefunc_feasible.sol,run(uint256 input)
trailofbits/manticore,tests/ethereum_bench/consensys_benchmark/integer_overflow_multitx_onefunc_feasible.sol,run(uint256 input)
Quiark/populus,tests/command_line_interface/projects/test-01/contracts/owned.sol,Owned()
etherisc/flightDelay,vendors/strings.sol,"memcpy(uint dest, uint src, uint len);toSlice(string self);len(bytes32 self);copy(slice self);toString(slice self);len(slice self);empty(slice self);compare(slice self, slice other);equals(slice self, slice other);nextRune(slice self, slice rune);nextRune(slice self);ord(slice self);keccak(slice self);startsWith(slice self, slice needle);beyond(slice self, slice needle);endsWith(slice self, slice needle);until(slice self, slice needle);findPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);rfindPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);find(slice self, slice needle);rfind(slice self, slice needle);split(slice self, slice needle, slice token);split(slice self, slice needle);rsplit(slice self, slice needle, slice token);rsplit(slice self, slice needle);count(slice self, slice needle);contains(slice self, slice needle);concat(slice self, slice other);join(slice self, slice[] parts)"
michinbear/solidity,test/compilationTests/MultiSigWallet/TestToken.sol,"issueTokens(address _to, uint256 _value);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);balanceOf(address _owner)"
elementrem/solidity,test/compilationTests/MultiSigWallet/TestToken.sol,"issueTokens(address _to, uint256 _value);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);balanceOf(address _owner)"
adklempner/solidity-license,contracts/zeppelin/lifecycle/Destructible.sol,Destructible();destroy();destroyAndSend(address _recipient)
michinbear/solidity,test/compilationTests/zeppelin/lifecycle/Destructible.sol,Destructible();destroy();destroyAndSend(address _recipient)
elementrem/solidity,test/compilationTests/zeppelin/lifecycle/Destructible.sol,Destructible();destroy();destroyAndSend(address _recipient)
adamdossa/ProfitSharingContract,installed_contracts/zeppelin/contracts/lifecycle/Destructible.sol,Destructible();destroy();destroyAndSend(address _recipient)
stevejaxon/ethereum-tutorials,contracts/cryptozombies/ZombieBattle.sol,"randMod(uint _modulus);attack(uint _zombieId, uint _targetId)"
dtcoin/dtcoin,dtcToken.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);DigitalCoin();balanceOf(address _owner);allowance(address _owner, address _spender);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value)"
lucywe/rootcore-crowdsale,solidity/contracts/Utils.sol,"Utils();safeAdd(uint256 _x, uint256 _y);safeSub(uint256 _x, uint256 _y);safeMul(uint256 _x, uint256 _y)"
kakkarut/true-clinical,src/ClinicalTrial.sol,"ClinicalTrial(address _regulator, address _cro, uint _proposalId, uint _startDate, uint _endDate, bytes32 _drugName, bytes _ipfsHash);getSubjectsCount();getSubjectById(uint _id);getDataCounterForSubject(uint _subjectId);getSubjectIdentById(uint _subjectId);getDataPointForSubject(uint _subjectId, uint _dataPointId);addSubject(bytes32 _subject);addDataPoint(uint _subjectId, bytes32 _json)"
aragon/aragon-core,contracts/acl/ACL.sol,"initialize(address _permissionsCreator);createPermission(address _entity, address _app, bytes32 _role, address _manager);grantPermission(address _entity, address _app, bytes32 _role);grantPermissionP(address _entity, address _app, bytes32 _role, uint256[] _params);revokePermission(address _entity, address _app, bytes32 _role);setPermissionManager(address _newManager, address _app, bytes32 _role);removePermissionManager(address _app, bytes32 _role);createBurnedPermission(address _app, bytes32 _role);burnPermissionManager(address _app, bytes32 _role);getPermissionParamsLength(address _entity, address _app, bytes32 _role);getPermissionParam(address _entity, address _app, bytes32 _role, uint _index);getPermissionManager(address _app, bytes32 _role);hasPermission(address _who, address _where, bytes32 _what, bytes memory _how);hasPermission(address _who, address _where, bytes32 _what, uint256[] memory _how);hasPermission(address _who, address _where, bytes32 _what);_createPermission(address _entity, address _app, bytes32 _role, address _manager);_setPermission(address _entity, address _app, bytes32 _role, bytes32 _paramsHash);_saveParams(uint256[] _encodedParams);_evalLogic(Param _param, bytes32 _paramsHash, address _who, address _where, bytes32 _what, uint256[] _how);compare(uint256 _a, Op _op, uint256 _b);checkOracle(IACLOracle _oracleAddr, address _who, address _where, bytes32 _what, uint256[] _how);_setPermissionManager(address _newManager, address _app, bytes32 _role);roleHash(address _where, bytes32 _what);permissionHash(address _who, address _where, bytes32 _what)"
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/test/helpers/LimitBalanceMock.sol,limitedDeposit()
pash7ka/zeppelin-solidity,test/helpers/LimitBalanceMock.sol,limitedDeposit()
Dicoiner/irianna-solidity,test/helpers/LimitBalanceMock.sol,limitedDeposit()
pz7/liquet,node_modules/zeppelin-solidity/test/helpers/LimitBalanceMock.sol,limitedDeposit()
dmx374/zeppelin-solidity,test/helpers/LimitBalanceMock.sol,limitedDeposit()
cashpokerpro-dev/cash-smartcontracts,test/helpers/LimitBalanceMock.sol,limitedDeposit()
tailingchen/go-ethereum,tests/solidity/contracts/OpCodes.sol,"isSameAddress(address a, address b);test();f(a, d);g(a, d);f(a, d);g(a, d);f(a, d);g(a, d);test_revert();test_invalid();test_stop()"
rjl493456442/go-ethereum,tests/solidity/contracts/OpCodes.sol,"isSameAddress(address a, address b);test();f(a, d);g(a, d);f(a, d);g(a, d);f(a, d);g(a, d);test_revert();test_invalid();test_stop()"
kurkomisi/go-ethereum,tests/solidity/contracts/OpCodes.sol,"isSameAddress(address a, address b);test();f(a, d);g(a, d);f(a, d);g(a, d);f(a, d);g(a, d);test_revert();test_invalid();test_stop()"
holiman/go-ethereum,tests/solidity/contracts/OpCodes.sol,"isSameAddress(address a, address b);test();f(a, d);g(a, d);f(a, d);g(a, d);f(a, d);g(a, d);test_revert();test_invalid();test_stop()"
ethereum/go-ethereum,tests/solidity/contracts/OpCodes.sol,"isSameAddress(address a, address b);test();f(a, d);g(a, d);f(a, d);g(a, d);f(a, d);g(a, d);test_revert();test_invalid();test_stop()"
matthieu/go-ethereum,tests/solidity/contracts/OpCodes.sol,"isSameAddress(address a, address b);test();f(a, d);g(a, d);f(a, d);g(a, d);f(a, d);g(a, d);test_revert();test_invalid();test_stop()"
expanse-org/go-expanse,tests/solidity/contracts/OpCodes.sol,"isSameAddress(address a, address b);test();f(a, d);g(a, d);f(a, d);g(a, d);f(a, d);g(a, d);test_revert();test_invalid();test_stop()"
sirasistant/market_consensys_academy,contracts/ERC20.sol,"receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);_transfer(address _from, address _to, uint _value);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);burn(uint256 _value);burnFrom(address _from, uint256 _value)"
nolash/go-ethereum-p2p-demo,solidity/upgrade/Store.sol,poke()
KudosProject/kudos-token,contracts/StandardToken.sol,"balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/contracts/lifecycle/TokenDestructible.sol,TokenDestructible();destroy(address[] tokens)
pash7ka/zeppelin-solidity,contracts/lifecycle/TokenDestructible.sol,TokenDestructible();destroy(address[] tokens)
readevalprint/aragon-core,contracts/zeppelin/lifecycle/TokenDestructible.sol,TokenDestructible();destroy(address[] tokens)
pz7/liquet,node_modules/zeppelin-solidity/contracts/lifecycle/TokenDestructible.sol,TokenDestructible();destroy(address[] tokens)
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/lifecycle/TokenDestructible.sol,TokenDestructible();destroy(address[] tokens)
dmx374/zeppelin-solidity,contracts/lifecycle/TokenDestructible.sol,TokenDestructible();destroy(address[] tokens)
cashpokerpro-dev/cash-smartcontracts,contracts/lifecycle/TokenDestructible.sol,TokenDestructible();destroy(address[] tokens)
cinderblockchain/cindertoken,contracts/lifecycle/TokenDestructible.sol,TokenDestructible();destroy(address[] tokens)
trailofbits/greenhorn,csaw-2017/ETHERSNOOB/sources/ethersnoob9.sol,"set(uint data, uint data2, uint data3);get_flag();get()"
cslarson/exchange,dump/TestExchange.sol,testDepositUsingDeployedContract()
ChronoBank/LX-SC,contracts/SkillsLibrary.sol,"_isSingleFlag(uint _flag);_isOddFlag(uint _flag);setupEventsHistory(address _eventsHistory);getArea(uint _area);getCategory(uint _area, uint _category);getSkill(uint _area, uint _category, uint _skill);_emitAreaSet(uint _area, bytes32 _hash);_emitCategorySet(uint _area, uint _category, bytes32 _hash);_emitSkillSet(uint _area, uint _category, uint _skill, bytes32 _hash);emitAreaSet(uint _area, bytes32 _hash);emitCategorySet(uint _area, uint _category, bytes32 _hash);emitSkillSet(uint _area, uint _category, uint _skill, bytes32 _hash)"
DevanaLabs/lemon.email-dApp,solidity/Email.sol,"mortal();withdraw();kill();registerUser(bytes32 username, string publicKey);sendEmail(address to, string ipfsHash, bytes32 inReplyToId, string inReplyToIpfsHash)"
Yann-Liang/browser-solidity,contracts/app/solidity/mode.sol,Normal(uint8 _numProposals)
serapath-contribution/browser-solidity,contracts/app/solidity/mode.sol,Normal(uint8 _numProposals)
TruLtd/tru-reputation-token,src/0.1.10/TruPreSaleFull.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);Ownable();transferOwnership(address newOwner);balanceOf(address who);transfer(address to, uint256 value);transfer(address _to, uint256 _value);balanceOf(address _owner);allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);increaseApproval(address _spender, uint _addedValue);decreaseApproval(address _spender, uint _subtractedValue);setReleaseAgent(address addr);setTransferAgent(address addr, bool state);releaseTokenTransfer();mint(address _to, uint256 _amount);finishMinting(bool _presale, bool _sale);isUpgradeAgent();upgradeFrom(address _from, uint256 _value);TruUpgradeableToken(address _upgradeMaster);upgrade(uint256 _value);setUpgradeAgent(address _agent);getUpgradeState();setUpgradeMaster(address _master);canUpgrade();TruReputationToken();changeBoardAddress(address _newAddress);canUpgrade();setUpgradeMaster(address _master);halt();unhalt();buy();updateWhitelist(address _purchaser, uint _status);changeEndTime(uint256 _endTime);hasEnded();checkSaleValid();validatePurchase(address _purchaser);forwardFunds();buyTokens(address _purchaser);finalise();completion()"
TruLtd/tru-reputation-token,src/0.1.9/TruPreSaleFull.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);Ownable();transferOwnership(address newOwner);balanceOf(address who);transfer(address to, uint256 value);transfer(address _to, uint256 _value);balanceOf(address _owner);allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);increaseApproval(address _spender, uint _addedValue);decreaseApproval(address _spender, uint _subtractedValue);setReleaseAgent(address addr);setTransferAgent(address addr, bool state);releaseTokenTransfer();mint(address _to, uint256 _amount);finishMinting(bool _presale, bool _sale);isUpgradeAgent();upgradeFrom(address _from, uint256 _value);TruUpgradeableToken(address _upgradeMaster);upgrade(uint256 _value);setUpgradeAgent(address _agent);getUpgradeState();setUpgradeMaster(address _master);canUpgrade();TruReputationToken();changeBoardAddress(address _newAddress);canUpgrade();setUpgradeMaster(address _master);halt();unhalt();buy();updateWhitelist(address _purchaser, uint _status);changeEndTime(uint256 _endTime);hasEnded();checkSaleValid();validatePurchase(address _purchaser);forwardFunds();buyTokens(address _purchaser);finalise();completion()"
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/contracts/lifecycle/Destructible.sol,Destructible();destroy();destroyAndSend(address _recipient)
pash7ka/zeppelin-solidity,contracts/lifecycle/Destructible.sol,Destructible();destroy();destroyAndSend(address _recipient)
readevalprint/aragon-core,contracts/zeppelin/lifecycle/Destructible.sol,Destructible();destroy();destroyAndSend(address _recipient)
pz7/liquet,node_modules/zeppelin-solidity/contracts/lifecycle/Destructible.sol,Destructible();destroy();destroyAndSend(address _recipient)
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/lifecycle/Destructible.sol,Destructible();destroy();destroyAndSend(address _recipient)
dmx374/zeppelin-solidity,contracts/lifecycle/Destructible.sol,Destructible();destroy();destroyAndSend(address _recipient)
cashpokerpro-dev/cash-smartcontracts,contracts/lifecycle/Destructible.sol,Destructible();destroy();destroyAndSend(address _recipient)
cinderblockchain/cindertoken,contracts/lifecycle/Destructible.sol,Destructible();destroy();destroyAndSend(address _recipient)
serapath-contribution/browser-solidity,contracts/contract1.sol,""
commodityadnetwork/CDX,contracts/Math.sol,"add(uint256 x, uint256 y);sub(uint256 x, uint256 y);mul(uint256 x, uint256 y);div(uint256 x, uint256 y);min(uint256 x, uint256 y);max(uint256 x, uint256 y);hadd(uint128 x, uint128 y);hsub(uint128 x, uint128 y);hmul(uint128 x, uint128 y);hdiv(uint128 x, uint128 y);hmin(uint128 x, uint128 y);hmax(uint128 x, uint128 y);imin(int256 x, int256 y);imax(int256 x, int256 y);wadd(uint128 x, uint128 y);wsub(uint128 x, uint128 y);wmul(uint128 x, uint128 y);wdiv(uint128 x, uint128 y);wmin(uint128 x, uint128 y);wmax(uint128 x, uint128 y);radd(uint128 x, uint128 y);rsub(uint128 x, uint128 y);rmul(uint128 x, uint128 y);rdiv(uint128 x, uint128 y);rpow(uint128 x, uint64 n);rmin(uint128 x, uint128 y);rmax(uint128 x, uint128 y);cast(uint256 x)"
AlphaDinoRC/rockchain,test/TestRokToken.sol,testInitialBalance();testBurn();testTransfer();testTransferFrom();TestApprove()
gmo-blockchain/solidity,contracts/FileObjectField_v1.sol,"allowCnsContracts(bytes32 _id, address _cns, bytes32 _contractName);hashes(bytes32 _id);setDefault(bytes32 _id);existIdAtCurrentVersion(bytes32 _id);create(bytes32 _id, bytes32[3] _hashes, bytes32 _readerId, bytes32 _writerId);setAllowCnsContract(bytes32 _id, address _cns, bytes32 _contractName, bool _isAdded);isAllowCnsContract(address _cns, bytes32 _contractName, bytes32 _id);setHash(bytes32 _id, uint _idx, bytes32 _hash);getHash(bytes32 _id, uint _idx);setReaderId(bytes32 _id, bytes32 _readerId);setWriterId(bytes32 _id, bytes32 _writerId);getReaderId(bytes32 _id);getWriterId(bytes32 _id)"
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/test/helpers/InsecureTargetBounty.sol,checkInvariant();deployContract()
pash7ka/zeppelin-solidity,test/helpers/InsecureTargetBounty.sol,checkInvariant();deployContract()
Dicoiner/irianna-solidity,test/helpers/InsecureTargetBounty.sol,checkInvariant();deployContract()
pz7/liquet,node_modules/zeppelin-solidity/test/helpers/InsecureTargetBounty.sol,checkInvariant();deployContract()
dmx374/zeppelin-solidity,test/helpers/InsecureTargetBounty.sol,checkInvariant();deployContract()
cashpokerpro-dev/cash-smartcontracts,test/helpers/InsecureTargetBounty.sol,checkInvariant();deployContract()
cinderblockchain/cindertoken,test/helpers/InsecureTargetBounty.sol,checkInvariant();deployContract()
slockit/DAO,libs/oraclize.sol,"query(uint _timestamp, string _datasource, string _arg);query_withGasLimit(uint _timestamp, string _datasource, string _arg, uint _gaslimit);getPrice(string _datasource);getPrice(string _datasource, uint gaslimit);useCoupon(string _coupon);setProofType(byte _proofType);getAddress();oraclize_setNetwork(uint8 networkID);oraclize_query(string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2, uint gaslimit);oraclize_cbAddress();oraclize_setProof(byte proofP);getCodeSize(address _addr);parseAddr(string _a);strCompare(string _a, string _b);indexOf(string _haystack, string _needle);strConcat(string _a, string _b, string _c, string _d, string _e);strConcat(string _a, string _b, string _c, string _d);strConcat(string _a, string _b, string _c);strConcat(string _a, string _b);parseInt(string _a);parseInt(string _a, uint _b)"
LOOMIA/loomia,ethereum/contracts/SafeMath.sol,"safeMul(uint a, uint b);safeDiv(uint a, uint b);safeSub(uint a, uint b);safeAdd(uint a, uint b);assert(bool assertion)"
locals-world/locals-app,truffle/contracts/localsInOut.sol,"claim(uint offerNumber);confirm(uint offerNumber, bool supportsConfirmation);executeOffer(uint offerNumber, bytes transactionBytecode);kill()"
FiatCentralBank/fiatcoin,contracts/token/LimitedTransferToken.sol,"transferableTokens(address holder, uint64 time);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);transferableTokens(address holder, uint64 time)"
adklempner/solidity-license,contracts/zeppelin/token/PausableToken.sol,"transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value)"
adamdossa/ProfitSharingContract,installed_contracts/zeppelin/contracts/token/PausableToken.sol,"transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value)"
melonproject/protocol,contracts/fund/policies/risk-management/MaxConcentration.sol,"addFundSettings(bytes calldata _encodedSettings);identifier();validateRule(bytes calldata _encodedArgs);__calcConcentration(uint256 _assetGav, uint256 _totalGav)"
silasdavis/eris-db,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs0.sol,"addThing(bytes32 description, bytes32 url, bytes32 filehash, bytes32 filename);getDesc();getUrl();getHash();getName()"
silasdavis/burrow,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs0.sol,"addThing(bytes32 description, bytes32 url, bytes32 filehash, bytes32 filename);getDesc();getUrl();getHash();getName()"
eris-ltd/eris-db,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs0.sol,"addThing(bytes32 description, bytes32 url, bytes32 filehash, bytes32 filename);getDesc();getUrl();getHash();getName()"
kowala-tech/kUSD,client/contracts/bindings/oracle/testfiles/contracts/DomainResolverMock.sol,addr(bytes32 node)
dacplayproject/play-dapp,src/PlayDapp.sol,""
axic/shapeshiftbot,shapeshiftbot.lookup.sol,setOwner(address _owner);ShapeshiftBotLookup();setAddress(address _addr);getAddress();kill()
jeje/solidity-code-quality,core/src/test/antlr/ThrowDeprecationContract.sol,useSuperPowers()
qjflores/singularity,contracts/Water.sol,"Water(string _name, string _description)"
WingsDao/contracts,contracts/forecasts/ForecastingFactory.sol,ForecastingFactory(address _token)
WingsDao/contracts,contracts/MultiSigWallet/MultiSigWalletFactory.sol,"create(address[] _owners, uint _required)"
gnidan/interval-trees-solidity,contracts/Example.sol,"ExampleIntervalTree();addInterval(uint treeID, uint begin, uint end, bytes32 data);numIntervals(uint treeID);intervalsAt(uint treeID, uint point);intervalAt(uint treeID, uint point, uint offset);getHash(address owner, uint treeID)"
TheRougeProject/RougeTokens,contracts/RGXToken.sol,isFundingOpen();freezeSupply(uint256 _value);setMinimum(uint256 _value);timeFundingStart(uint _fundingStart);withdraw();kill()
aragon/aragon-core,contracts/test/mocks/Uint256Mock.sol,convert(uint256 a)
SilentCicero/wafr,src/tests/solidityTests/onlyContractsNoTests/Attestation.sol,"Attestation(string _attestationType, bool _agree, address _attestor)"
mwensveen-nl/solidity-testing,src/test/resources/transaction2.sol,getSender();value()
lepsalex/Mansplaining,Smart Contracts/contracts/Mortal.sol,Mortal();kill()
montyly/manticore,tests/ethereum/contracts/consensys_benchmark/integer_overflow_multitx_onefunc_infeasible.sol,run(uint256 input)
trailofbits/manticore,tests/ethereum_bench/consensys_benchmark/integer_overflow_multitx_onefunc_infeasible.sol,run(uint256 input)
D-Nice/solidity-helper-functions,helpers/round.sol,"uintCeil(uint _number, uint _roundTo);uintRound(uint _number, uint _roundTo);uintFloor(uint _number, uint _roundTo);recursiveFloor(uint _number, uint _roundTo, uint _unit);recursiveCeil(uint _number, uint _roundTo, uint _unit);recursiveRound(uint _number, uint _roundTo, uint _unit);findFigures(uint _number, uint _unit);findFigures(uint _number)"
daostack/daostack,contracts/test/NectarRepAllocation.sol,"balanceOfAt(address _owner, uint _blockNumber);totalSupplyAt(uint _blockNumber);balanceOf(address _beneficiary)"
alice-si/contracts,contracts/alice/impact/ImpactLinker.sol,linkImpact(bytes32 _claimId)
tomashaber/raiden,raiden/smart_contracts/ChannelManagerContract.sol,"ChannelManagerContract(address token_address);getChannelsAddresses();getChannelsParticipants();nettingContractsByAddress(address node_address);tokenAddress();getChannelWith(address partner);newChannel(address partner, uint settle_timeout)"
pruby/AdversariallyVerifiableMachine,contracts/AVMTestSuite.sol,"validateStep(uint256[] readAccesses, uint256[] writeAccesses);getMaximumReadsPerStep();getMaximumWritesPerStep();AVMTestSuite();calculateMemoryState(uint step);prepareDisputeValid();testDisputedWriteValid();testDisputedWriteDifferentValueInState();testDisputedReadValid();testDisputedValidMemoryAccessSequence();testDisputedInvalidSequenceWrongWriteValue();testDisputedInvalidSequenceWrongReadAddress();testDisputedInvalidSequenceWrongWriteAddress()"
Superdao-DAO/Superdao-Seed-Stage1,contracts/AddressChecker.sol,AddressChecker();checkAddressBatch(address[] _AddressesToBeChecked);specificBatchCheck(uint _batchNumber);getSize(address _addr)
aragon/aragon-core,contracts/apm/APMNamehash.sol,apmNamehash(string name)
FiatCentralBank/fiatcoin,contracts/token/VestedToken.sol,"revokeTokenGrant(address _holder, uint256 _grantId);transferableTokens(address holder, uint64 time);tokenGrantsCount(address _holder);tokenGrant(address _holder, uint256 _grantId);vestedTokens(TokenGrant grant, uint64 time);nonVestedTokens(TokenGrant grant, uint64 time);lastTokenIsTransferableDate(address holder)"
ethchange/smart-exchange,lib/contracts/SmartExchange.sol,"deposit(bytes32 to);transfer(bytes32 from, address to, uint value);icapTransfer(bytes32 from, address to, bytes32 indirectId, uint value)"
ethbitcoin/goodbit,contracts/StandardToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.5/intDivisionTruncate.sol,contribute();endCampaign();endAmbiguous()
zsfelfoldi/ethapps,rpa.sol,"addRef(bytes32 parentObj, bytes32 childObj);presentObject(bytes data, bytes32 typeID);newRequest(address signer, uint expiry, bytes32 objHash);transitivePath(bytes32 parentObj, bytes32 childObj, bytes32 grandChildObj);propagateRequest(address signer, uint expiry, bytes32 parentObj, bytes32 childObj);max(uint a, uint b);signup(uint time);withdraw();balance(address addr);isClean(address addr);whatIsMissing();isGuilty(address addr);claimReporterReward(address addr);expiresAfter(address addr, uint time)"
ChronoBank/LX-SC,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
kowala-tech/kUSD,client/contracts/truffle/contracts/consensus/mgr/ValidatorMgr.sol,"isGenesisValidator(address code);isValidator(address code);isSuperNode(address code);getValidatorCount();getValidatorAtIndex(uint index);_hasAvailability();getMinimumDeposit();_updateChecksum();_insertValidator(address code, uint deposit);setBaseDeposit(uint deposit);setMaxValidators(uint max);_deleteValidator(address account);_deleteSmallestBidder();getDepositCount();getDepositAtIndex(uint index);_registerValidator();deregisterValidator();_removeDeposits(address code, uint index);releaseDeposits();registerValidator(address _from, uint _value)"
papyrusglobal/smartcontracts,contracts/dao/PapyrusDAO.sol,transferDao(address _daoOwner);destroy()
boisde/Greed_Island,party/contracts/protocol/modules/GovernanceModule.sol,initialize(ISetToken _setToken);removeModule()
ethereum/dapp-bin,library/features.sol,owned();kill()
tokenai/tokenai-network-token,contracts/ERC20Basic.sol,"totalSupply();balanceOf(address who);transfer(address to, uint value);allowance(address owner, address spender);transferFrom(address from, address to, uint value);approve(address spender, uint value);approveAndCall(address spender, uint256 value, bytes extraData);doTransfer(address _from, address _to, uint _amount)"
RyuuGan/sol-merger,test/compiled/NamedImportOnlySelectedFailContract.sol,"totalSupply();transfer(address _to, uint256 _value);balanceOf(address _owner);totalSupply()"
paulyc/sol_machine,test/logging.sol,""
kleroterion/dapp,contracts/Court.sol,"Court(address[] accounts, uint256[] tokens);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);blocked(address account);activateTokensForArbitration(uint256 tokens);activateTokensForJury(uint256 tokens);drawnArbiter(address account, uint256 r);drawnTokens(address account, uint256 r, uint256 t);createDispute(uint256 r);arbitrate(uint256 disputeID, bool voteA);untrustedExecuteRuling(uint256 disputeID);appealRuling(uint256 disputeID, uint256 r);voteRuling(uint256 disputeID, bool voteA);executeTokenRepartition(uint256 disputeID);penalizeInactiveArbitrators(address[] accounts, uint256[] disputeIDs);penalizeInactiveJuries(address[] accounts, uint256[] disputeIDs);nextSession();activationOpen();disputeOpen();voteOpen();appealOpen();penalizationOpen();executionOpen();getAppeals(uint256 disputeID);getHasVoted(uint256 disputeID, address account);getVoteStake(uint256 disputeID, uint256 appeal, uint256 voteID, bool stakeA);getVoteAccount(uint256 disputeID, uint256 appeal, uint256 voteID);activatedArbitrationTokens(address account);activatedJuryTokens(address account)"
adridadou/eth-propeller-ethj,src/test/resources/contract2.sol,getT();getM();getArray();getOwner()
BiathlonHelsinki/BiathlonContract,contracts/TokenStorage.sol,"TokenStorage(address _node);alterTotalSupply(uint256 _amount);subtract(address _addr, uint256 _amount);add(address _addr, uint256 _amount);transferFrom(address _from, address _to, uint256 _value)"
Neufund/Contracts,contracts/kyc/KYCRegistery.sol,set_validator(address new_validator);client_address();submit(bytes32 submission_hash);accept(address client);reject(address client);revoke(address client);state_of(address client);hash_of(address client);is_kyced(address client)
livepeer/protocol,contracts/IController.sol,"setContractInfo(bytes32 _id, address _contractAddress, bytes20 _gitCommitHash);updateController(bytes32 _id, address _controller);getContract(bytes32 _id)"
daostack/daostack,contracts/controller/DAOToken.sol,"mint(address _to, uint256 _amount)"
boisde/Greed_Island,party/contracts/protocol/PriceOracle.sol,"getPrice(address _assetOne, address _assetTwo);addPair(address _assetOne, address _assetTwo, IOracle _oracle);editPair(address _assetOne, address _assetTwo, IOracle _oracle);removePair(address _assetOne, address _assetTwo);addAdapter(address _adapter);removeAdapter(address _adapter);editMasterQuoteAsset(address _newMasterQuoteAsset);getAdapters();_calculateInversePrice(IOracle _inverseOracle)"
iam-dev/ERC23,installed_contracts/zeppelin-solidity/test/mocks/BurnableTokenMock.sol,"BurnableTokenMock(address initialAccount, uint initialBalance)"
raineorshine/solgraph,test/in/Simple.sol,Count();CallCount()
phi-nomenal/phi-nomenal,local_modules/phi-nomenal-contracts/contracts/OrderHistoryLeg.sol,""
ethbets/ebets,contracts/monarchy.sol,"Monarchy();isMember(address user);getName();getHigherInstance();castVote(address proposal, uint outcome);addProposal(address proposalAddress, uint deadline);addMember(address member);removeMember(address /*member*/)"
eminogrande/token-contract,src/contracts/standard-token.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
daostack/daostack,contracts/schemes/Agreement.sol,getAgreementHash();setAgreementHash(bytes32 _agreementHash)
iurimatias/TransactionRelay,app/contracts/transaction.sol,set(uint x);get();Transaction()
DroneEmployee/contracts,src/DroneEmployee.sol,setFlightPrice(uint _price);init();placeTicket();tradeStream();buyATCToken();getFlight();flightDone()
mixbytes/storiqa_ico,contracts/crowdsale/FundsRegistry.sol,"FundsRegistry(address[] _owners, uint _signaturesRequired, address _controller);changeState(State _newState);invested(address _investor);sendEther(address to, uint value);withdrawPayments();getInvestorsCount()"
Storiqa/ico_smart_contract,contracts/crowdsale/FundsRegistry.sol,"FundsRegistry(address[] _owners, uint _signaturesRequired, address _controller);changeState(State _newState);invested(address _investor);sendEther(address to, uint value);withdrawPayments();getInvestorsCount()"
OR13/car2go,contracts/MeshPoint.sol,"MeshPoint(string _name, address _creator);setBlockLimit(uint limit);getBlockLimit();setSendAmount(uint256 val);getSendAmount();getBalance();getRequestorAddresses();getRemainingBlocks();addRequestorAddress(address _requestor);authorizeRequestorAddress(address _requestor);revokeRequestorAddress(address _requestor);isAddressAuthorized(address _address);sendWei(address recp);getWei()"
Majoolr/ethereum-libraries,WalletLib/WalletMainLib.sol,"checkNotConfirmed(WalletData storage self, bytes32 _id, uint256 _txIndex);calcConfirmsNeeded(uint256 _required, uint256 _count);getAmount(bytes _txData);createContract(bytes _txData, uint256 _value);if(msg.sender != address(this);confirmTx(WalletData storage self, bytes32 _id);revokeConfirm(WalletData storage self, bytes32 _id)"
jeje/solidity-code-quality,core/src/test/antlr/TxOriginContract.sol,"TxOriginContract();transferTo(address dest, uint amount);anotherTransferTo(address dest, uint amount);yetAnotherTransferTo(address dest, uint amount);transferToThroughVariable(address dest, uint amount);transferToThroughVariable(address dest, uint amount)"
Upchain/upchain-hackathon-starterpack,contracts/HumanStandardToken.sol,"approveAndCall(address _spender, uint256 _value, bytes _extraData)"
Neurone/persians,contracts/FaucetToken.sol,"FaucetToken(string _name, string _symbol, uint8 _decimals);getTokens(uint256 _amount)"
Lyniat/hackaburg17-smartcontracts,backend_server/contracts/contractStorage.sol,"getContract(address target);createNewContract(string partner, string text)"
axic/ethereum-tokenescrow,tokenescrow.api.sol,"create(address token, uint tokenAmount, uint price, address seller, address buyer, address recipient);create(address token, uint tokenAmount, uint price, address seller, address buyer)"
LianaHus/dapp-bin,standardized_contract_apis/namereg.sol,"reserve(string _name);owner(string _name);transfer(string _name, address _newOwner);setAddr(string _name, address _addr);addr(string _name);setContent(string _name, bytes32 _content);content(string _name);setSubRegistrar(string _name, address _subRegistrar);subRegistrar(string _name);disown(string _name)"
ethereum/dapp-bin,standardized_contract_apis/namereg.sol,"reserve(string _name);owner(string _name);transfer(string _name, address _newOwner);setAddr(string _name, address _addr);addr(string _name);setContent(string _name, bytes32 _content);content(string _name);setSubRegistrar(string _name, address _subRegistrar);subRegistrar(string _name);disown(string _name)"
vaporry/dapp-bin,standardized_contract_apis/namereg.sol,"reserve(string _name);owner(string _name);transfer(string _name, address _newOwner);setAddr(string _name, address _addr);addr(string _name);setContent(string _name, bytes32 _content);content(string _name);setSubRegistrar(string _name, address _subRegistrar);subRegistrar(string _name);disown(string _name)"
michinbear/solidity,test/compilationTests/zeppelin/ownership/DelayedClaimable.sol,"setLimits(uint256 _start, uint256 _end);claimOwnership()"
elementrem/solidity,test/compilationTests/zeppelin/ownership/DelayedClaimable.sol,"setLimits(uint256 _start, uint256 _end);claimOwnership()"
Neufund/Contracts,contracts/lib/BaseToken.sol,"totalSupply();symbol();name();decimals();isContract(address client);balanceOf(address _owner);approve(address _spender, uint _value);approveAndCall(address _spender, uint256 _value, bytes _data);allowance(address _owner, address _spender);transferInternal(address _from, address _to, uint _value);transfer(address to, uint value);transfer(address to, uint value, bytes data);transferFrom(address _from, address _to, uint _value);transferFrom(address _from, address _to, uint _value, bytes _data);mint(address to, uint value);burn(address from, uint value);BaseToken(string symbol_, string name_, uint256 decimals_)"
energychain/stromdao-solidity,assets/liefervertrag/Liefervertrag.sol,"owned();transferOwnership(address newOwner);Negotiation(address _partyA,address _partyB,address _negotiated_contract,uint256 _timeout_seconds);becomePartyB();confirmAsPartyA(uint256 _timeout);confirmAsPartyB(uint256 _timeout);startNegotiation(address _partyB,address _negotiated_contract,uint256 _timeout_seconds);PowerDeliveryProposal(address _ersteller,uint256 _arbeitspreis,uint256 _jahrespreis,string _plz,uint256 _ablauf,string _ipfs);deployPowerDeliveryProposal(uint256 _arbeitspreis,uint256 _jahrespreis,string _plz,uint256 _ablauf,string _ipfs)"
toshikase/swap-trade,SwapTrade.sol,""
toshikase/swap-trade,app/client/lib/contracts/MultiplyContract.sol,""
erooijak/ethlance,resources/public/contracts/src/contractLibrary.sol,"addFeedback(address db, uint contractId, address senderId, string feedback, uint8 rating);addMessage(address db, uint contractId, uint messageId);getMessages(address db, uint contractId);getOtherContractParticipant(address db, uint contractId, address user);addTotalInvoiced(address db, uint contractId, uint amount);subTotalInvoiced(address db, uint contractId, uint amount);addInvoice(address db, uint contractId, uint invoiceId, uint amount);getInvoices(address db, uint contractId);getInvoicesCount(address db, uint contractId);getInvoicesByStatus(address db, uint contractId, uint8 invoiceStatus);getInvoices(address db, uint[] contractIds);getTotalInvoicesCount(address db, uint[] contractIds);addTotalPaid(address db, uint contractId, uint amount);getTotalPaid(address db, uint contractId);getFreelancer(address db, uint contractId);getEmployer(address db, uint contractId);getJob(address db, uint contractId);setStatus(address db, uint contractId, uint8 status);getStatus(address db, uint contractId);getFreelancerFeedbackOn(address db, uint contractId);getEmployerFeedbackOn(address db, uint contractId);getProposalCreatedOn(address db, uint contractId);getInvitationCreatedOn(address db, uint contractId);getContract(address db, address freelancerId, uint jobId);getContracts(address db, address[] freelancerIds, uint jobId);getRate(address db, uint contractId);statusPred(address db, uint[] args, uint contractId);notContractPred(address db, address[] args, uint jobId);setFreelancerJobIndex(address db, uint contractId, address freelancerId, uint jobId)"
SilentCicero/wafr,src/tests/solidityTests/onlyContractsNoTests/Contract.sol,"Contract(string _contractHash, string _title, address _author);changeAddress(address _newAddress);addAttestation(string attestationType, bool agree, address attestor)"
raineorshine/solgraph,test/in/Transfer.sol,Foo()
AlphaDinoRC/rockchain,test/Crowdsale.sol,"Crowdsale();contribute();isStarted();isComplete();tokenBalance();tokenBalance(address _address);setTokenBalance(address _address, uint _value);isSuccessful();checkEthBalance(address _contributor);setEthBalance(address _this, uint _value);checkSavedEthBalance(address _contributor);setSavedEthBalance(address _this, uint _value);checkRokBalance(address _contributor);setRokBalance(address _this, uint _value);setSavedBalanceToken(uint _value);setSavedBalance(uint value);checkRokSold();checkEthSold();checkRokTeam();checkRokBounty();percentOfGoal();getRok();getBalance(address _address);RefundPeriodOver();RefundPeriodStart();getBonus(uint amount);payout();payTokens();payTeam();setMultiSigWallet(address newWallet)"
montyly/manticore,tests/ethereum/contracts/808.sol,f(uint z);C()
trailofbits/manticore,tests/ethereum/contracts/808.sol,f(uint z);C()
Neufund/Contracts,contracts/faucet/Faucet.sol,minimum_balance();set_manager(address new_manager);register(address account);unregister(address account);withdraw_for(address account);withdraw()
ethereum/dapp-bin,ether_ad/one_phase_auction.sol,"OnePhaseAuction();initialize(address _t, uint256 _baseDuration, uint256 _durationBumpTo, uint256 _minIncrementMillis, uint256 _tp);bid(string metadata);increaseBid(uint256 index);ping();setOwner(address newOwner);withdraw();getPhase();getMostRecentAuctionStart();getPhaseExpiry()"
wealdtech/domainsale,test/contracts/MaliciousSeller.sol,"MaliciousSeller();transfer(Registrar registrar, string name, address to);offer(DomainSale domainSale, string name, uint256 price, uint256 reserve, address referrer)"
GovernX/governx-contracts,src/contracts/utils/IProposable.sol,"latestMomentOf(uint256 _pid, address _sender);hasVoted(uint256 _proposalID, address _sender);numMomentsOf(uint256 _proposalID);momentSenderOf(uint256 _proposalID, uint256 _momentID);momentValueOf(uint256 _proposalID, uint256 _momentID);momentTimeOf(uint256 _proposalID, uint256 _momentID);momentBlockOf(uint256 _proposalID, uint256 _momentID);momentNonceOf(uint256 _proposalID, uint256 _momentID);weightOf(uint256 _proposalID, uint256 _position);voteWeightOf(uint256 _pid, uint256 _mid);votePositionOf(uint256 _pid, uint256 _mid);hasExecuted(uint _proposalID);metadataOf(uint256 _proposalID);numDataOf(uint256 _proposalID);dataOf(uint256 _proposalID);nonces(address)"
readevalprint/aragon-core,contracts/apps/finance/FinanceApp.sol,"initialize(address vaultAddress, address etherTokenAddress);cancelPayment(uint pid);withdrawPayment(uint pid);getCurrentAccountingPeriodId();getTransactionInfo(uint transactionId);getTransactionState(uint transactionId);_startNextAccountingPeriod();startNextAccountingPeriod();_deposit(address tokenAddress, uint amount);_depositEther();deposit(address tokenAddress, uint amount);depositEther();_setTokenBudget(address tokenAddress, uint amount);setTokenBudget(address tokenAddress, uint amount);_executeTransaction(uint transactionId);_updateTransaction(uint transactionId, TransactionState state)"
kabl/sol-dns,src/main/resources/contracts/DnsDB.sol,"register(bytes32 dnsName, bytes32 entry, address owner);deleteEntryByName(bytes32 dnsName);getEntryByName(bytes32 dnsName);getOwnerByName(bytes32 dnsName)"
readevalprint/aragon-core,contracts/apps/voting/VotingApp.sol,"initialize(MiniMeToken _token, uint256 _supportRequiredPct, uint256 _minAcceptQuorumPct, uint64 _voteTime);changeMinAcceptQuorumPct(uint256 _minAcceptQuorumPct);newVoting(bytes _executionScript, string _metadata);vote(uint256 _votingId, bool _supports);executeVote(uint256 _votingId);forward(bytes _evmCallScript);canForward(address _sender, bytes _evmCallScript);canVote(uint256 _votingId, address _voter);canExecute(uint256 _votingId);getVoting(uint256 _votingId);getVotingMetadata(uint256 _votingId);getVotingScriptAction(uint256 _votingId, uint256 _scriptAction);_newVoting(bytes _executionScript, string _metadata);_vote(uint256 _votingId, bool _supports, address _voter);_executeVote(uint256 _votingId);pct(uint256 x, uint p)"
pipermerriam/ethereum-gas-proxy,contracts/Testers.sol,doit();undo();set(uint v);infinite();fails();variable(uint loops)
redsquirrel/augur-core,src/reporting/ReportingWindow.sol,"initialize(Branch _branch, uint256 _reportingWindowId);createNewMarket(uint256 _endTime, uint8 _numOutcomes, uint256 _payoutDenominator, uint256 _feePerEthInWei, Cash _denominationToken, address _creator, int256 _minDisplayPrice, int256 _maxDisplayPrice, address _automatedReporterAddress, bytes32 _topic);migrateMarketInFromSibling();migrateMarketInFromNibling();removeMarket();updateMarketPhase();noteReport(Market _market, address _reporter, bytes32 _payoutDistributionHash);getTypeName();getBranch();getRegistrationToken();getReputationToken();getStartTime();getEndTime();getReportingStartTime();getReportingEndTime();getDisputeStartTime();getDisputeEndTime();isActive();isReportingActive();isDisputeActive();getTargetReportsPerLimitedReporterMarket();getNumberOfReportsByMarket(Market _market);getMaxReportsPerLimitedReporterMarket();getRequiredReportsPerReporterForlimitedReporterMarkets();getTargetReportsPerReporter();getLimitedReporterMarkets();getMarketsCount();getLimitedReporterMarketsCount();getAllReporterMarketsCount();getReportsByReporter(address _reporter);isContainerForRegistrationToken(RegistrationToken _shadyRegistrationToken);isContainerForMarket(Market _shadyMarket);isDoneReporting(address _reporter);privateAddMarket(Market _market);privateNoteReport(Market _market, address _reporter);isForkingMarketFinalized()"
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/crowdsale/distribution/FinalizableCrowdsale.sol,finalize();finalization()
JackBekket/Kort,HostingDNS.sol,owned();transferOwnership(address newOwner);safeWithdrawal()
stevejaxon/ethereum-tutorials,contracts/cryptozombies/ZombieFactory.sol,"_createZombie(string _name, uint _dna);_generateRandomDna(string _str);createRandomZombie(string _name)"
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/test/helpers/StandardTokenMock.sol,"StandardTokenMock(address initialAccount, uint256 initialBalance)"
pash7ka/zeppelin-solidity,test/helpers/StandardTokenMock.sol,"StandardTokenMock(address initialAccount, uint256 initialBalance)"
Dicoiner/irianna-solidity,test/helpers/StandardTokenMock.sol,"StandardTokenMock(address initialAccount, uint256 initialBalance)"
pz7/liquet,node_modules/zeppelin-solidity/test/helpers/StandardTokenMock.sol,"StandardTokenMock(address initialAccount, uint256 initialBalance)"
dmx374/zeppelin-solidity,test/helpers/StandardTokenMock.sol,"StandardTokenMock(address initialAccount, uint256 initialBalance)"
cashpokerpro-dev/cash-smartcontracts,test/helpers/StandardTokenMock.sol,"StandardTokenMock(address initialAccount, uint256 initialBalance)"
SwapyNetwork/swapy-exchange-protocol,test/AssetCall.sol,cancelInvestment();invest(bool invalid);sell(uint256 value);cancelSellOrder();buy(bool invalid);cancelSale();refuseSale();acceptSale()
RyuuGan/sol-merger,test/compiled/Enum.sol,""
globaljobcoin/GJC,contracts/lifecycle/Pausable.sol,pause();unpause()
CORIONplatform/solidity,module.sol,"transfer(address from, address to, uint256 value, bool fee);balanceOf(address owner);module(address moduleHandler);disableModule(bool forever);replaceModuleHandler(address newModuleHandlerAddress);connectModule();disconnectModule();replaceModule(address newModuleAddress);transferEvent(address from, address to, uint256 value);configureModule(announcementType aType, uint256 value, address addr);newSchellingRoundEvent(uint256 roundID, uint256 reward);_disableModule(bool forever);_replaceModuleHandler(address newModuleHandlerAddress);_connectModule();_disconnectModule();_replaceModule(address newModuleAddress);_transferEvent(address from, address to, uint256 value);_configureModule(announcementType aType, uint256 value, address addr);_newSchellingRoundEvent(uint256 roundID, uint256 reward);registerModuleHandler(address _moduleHandlerAddress);isModuleHandler(address addr);isActive()"
aragon/aragon-network-token,packages/sale/installed_contracts/zeppelin/contracts/DayLimit.sol,DayLimit(uint _limit);_setDailyLimit(uint _newLimit);_resetSpentToday();underLimit(uint _value);today()
pooleja/SolidityPlayground,contracts/zeppelin/DayLimit.sol,DayLimit(uint _limit);_setDailyLimit(uint _newLimit);_resetSpentToday();underLimit(uint _value);today()
maraoz/zeppelin-solidity,contracts/DayLimit.sol,DayLimit(uint _limit);_setDailyLimit(uint _newLimit);_resetSpentToday();underLimit(uint _value);today()
citizencode/embark-framework,test/support/contracts/manager.sol,Manager(address dataAddress);update(address _addr)
d11e9/embark-framework,test/support/contracts/manager.sol,Manager(address dataAddress);update(address _addr)
jpentland/BitBadge,node_modules/embark-framework/test/support/contracts/manager.sol,Manager(address dataAddress);update(address _addr)
jpentland/BitBadge,node_modules/grunt-embark/node_modules/embark-framework/test/support/contracts/manager.sol,Manager(address dataAddress);update(address _addr)
jeffanthony/embark-framework,test/support/contracts/manager.sol,Manager(address dataAddress);update(address _addr)
SafeMarket/embark-framework,test/support/contracts/manager.sol,Manager(address dataAddress);update(address _addr)
mesh-market/mesh-market.github.io,mesh-market/node_modules/embark/old_test/support/contracts/manager.sol,Manager(address dataAddress);update(address _addr)
hitchcott/embark-framework,test/support/contracts/manager.sol,Manager(address dataAddress);update(address _addr)
troyth/embark-dappsforbeginners-demo,embark_demo/node_modules/embark-framework/test/support/contracts/manager.sol,Manager(address dataAddress);update(address _addr)
johnkozan/embark-framework,test/support/contracts/manager.sol,Manager(address dataAddress);update(address _addr)
AronVanAmmers/embark-framework,test/support/contracts/manager.sol,Manager(address dataAddress);update(address _addr)
RCasatta/embark-framework,test/support/contracts/manager.sol,Manager(address dataAddress);update(address _addr)
VoR0220/embark-framework,test/support/contracts/manager.sol,Manager(address dataAddress);update(address _addr)
aakilfernandes/embark-framework,test/support/contracts/manager.sol,Manager(address dataAddress);update(address _addr)
ryepdx/embark-framework,test/support/contracts/manager.sol,Manager(address dataAddress);update(address _addr)
tom-seddon/embark-framework,test/support/contracts/manager.sol,Manager(address dataAddress);update(address _addr)
gerbrand/embark-framework,test/support/contracts/manager.sol,Manager(address dataAddress);update(address _addr)
akhilss/embark-framework,old_test/support/contracts/manager.sol,Manager(address dataAddress);update(address _addr)
wpypeiyao/Identity-On-Blockchain,node_modules/embark/old_test/support/contracts/manager.sol,Manager(address dataAddress);update(address _addr)
xiaopow/embark-framework,test/support/contracts/manager.sol,Manager(address dataAddress);update(address _addr)
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.5/structReentrant.sol,bla(address payable a);bla();bli(Voter storage x)
WingsDao/contracts,contracts/zeppelin/DayLimit.sol,DayLimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today()
iam-dev/ERC23,installed_contracts/zeppelin-solidity/contracts/LimitBalance.sol,LimitBalance(uint256 _limit)
mechaism/mechaism,soul.sol,""
papyrusglobal/smartcontracts,contracts/Migrations.sol,setCompleted(uint256 completed);upgrade(address newAddress)
SenthuranSivananthan/devops-blockchain-jenkins,ethereum/contracts/BankAccount.sol,"BankAccount();deposit(address accountHolder, uint256 amount);withdraw(address accountHolder, uint256 amount);balanceOf(address accountHolder)"
Bit-Nation/BitnationApplications,ProfitShare/profit_share.sol,"owned();transferOwnership(address newOwner);transfer(address _to, uint256 _value);profitSharing(address sharesAddress, string ownerName);activateMe(string name);distributeToken(address tokenToDistributeAddress)"
Dicoiner/irianna-solidity,contracts/LimitBalance.sol,LimitBalance(uint256 _limit)
zeroqn/aa-apply,contracts/Gateway.sol,setPayrollAddress(address _payroll)
duaraghav8/Solium,test/lib/rules/indentation/accept/one-line-array.sol,""
GX-Coin/SmartContract,GxDeploymentAdminsAuthority.sol,"setDeploymentAdminsContract(address _deploymentAdmins);canCall(address caller_address, address code_address, bytes4 sig)"
TruLtd/tru-reputation-token,contracts/supporting/ReleasableToken.sol,"setReleaseAgent(address addr);setTransferAgent(address addr, bool state);releaseTokenTransfer()"
furusiyya/Notary-Platform,contracts/Allocations.sol,Allocations();allocate();release();RealeaseTime()
NTRYPlatform/ntry-solidity,contracts/Allocations.sol,Allocations();allocate();release();RealeaseTime()
kinfoundation/kin-token,contracts/TokenHolder.sol,""
bkrem/educhain,chain/contracts/Team.sol,"addMember(bytes32 _username, address _userAddr);removeMember(bytes32 _username);getMemberAtIndex(uint _idx)"
livepeer/protocol,contracts/ServiceRegistry.sol,ServiceRegistry(address _controller);setServiceURI(string _serviceURI);getServiceURI(address _addr)
boisde/Greed_Island,party/contracts/protocol/modules/ClaimModule.sol,"updateAnyoneClaim(ISetToken _setToken);removeModule();getRewardPools(ISetToken _setToken);isRewardPool(ISetToken _setToken, address _rewardPool);getRewardPoolClaims(ISetToken _setToken, address _rewardPool);_claim(ISetToken _setToken, address _rewardPool, string calldata _integrationName);_addClaim(ISetToken _setToken, address _rewardPool, string calldata _integrationName);_removeClaim(ISetToken _setToken, address _rewardPool, string calldata _integrationName);_isValidCaller(ISetToken _setToken)"
mcgoddard/connect4eth,contracts/Connect4eth.sol,joinGame();isStarted();isFinished();makeMove(uint8 col);checkGrid(uint8 player);getGrid();getBet();getWinner()
tomaaron/raiden,raiden/smart_contracts/NettingChannelContract.sol,"deposit(uint256 amount);partner(address one_address);addressAndBalance();transferredAmount(address participant);close(bytes theirs_encoded, bytes ours_encoded);updateTransfer(bytes theirs_encoded);unlock(bytes locked_encoded, bytes merkle_proof, bytes32 secret);settle();settleTimeout();assetAddress();opened();closed();settled();closingAddress()"
ownage-ltd/ether-router,contracts/test/Thrower.sol,throws()
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.4.24/ballot_reentrant.sol,"info();Ballot(uint8 _numProposals);giveRightToVote(address voter, address b);delegate(address to);vote(uint8 proposal);winningProposal()"
soad003/browser-solidity,test/staticanalysis/test-contracts/ballot_reentrant.sol,"info();Ballot(uint8 _numProposals);giveRightToVote(address voter, address b);delegate(address to);vote(uint8 proposal);winningProposal()"
zetherz/eth-match,test/helpers/PullPaymentMock.sol,"PullPaymentMock();callSend(address dest, uint256 amount)"
iurimatias/embark-framework,dapps/tests/app/app/contracts/simple_storage_test.sol,set(uint x);test(uint x);get()
elementrem/solidity,test/compilationTests/corion/publisher.sol,"transferEvent(address from, address to, uint256 value);publisher(address moduleHandler);Announcements(uint256 id);checkOpposited(uint256 weight, bool oppositable);newAnnouncement(announcementType Type, string Announcement, string Link, bool Oppositable, string _str, uint256 _uint, address _addr);closeAnnouncement(uint256 id);oppositeAnnouncement(uint256 id);invalidateAnnouncement(uint256 id);checkICO()"
GX-Coin/SmartContract,GxAdminOperations.sol,"GxAdminOperations(address deploymentAdminsAddress);seedCoins(address receiver, uint32 amount, string notes, uint pricePerCoin);registerTraderAccount(address traderAccount);unregisterTraderAccount(address traderAccount);fund(address receiver, uint160 amount);adjustCoins(address receiver, int32 amount, string notes);adjustCash(address receiver, int160 amount, string notes);adminCancelWithdrawal(address receiver, uint160 amount, string notes);transferTraderBalance(address oldAccount, address newAccount)"
WishFinanceCom/WF-contracts,contracts/helpers/FakeCoin2.sol,""
destenson/ethcore--parity,js-old/src/contracts/snippets/enhanced-wallet.sol,"revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);setDailyLimit(uint _newLimit);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);initMultiowned(address[] _owners, uint _required);revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);getOwner(uint ownerIndex);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);initDaylimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();initWallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);create(uint _value, bytes _code);confirm(bytes32 _h);confirmAndCheck(bytes32 _operation);reorganizeOwners();underLimit(uint _value);today();clearPending();Wallet(address[] _owners, uint _required, uint _daylimit);getOwner(uint ownerIndex);hasConfirmed(bytes32 _operation, address _owner);isOwner(address _addr)"
daostack/daostack,contracts/test/PriceOracleMock.sol,"setTokenPrice(address token, uint256 numerator, uint256 denominator);getPrice(address token)"
TheRougeProject/RougeTokens,test/TestRGXBonus.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewRGXBonus()
ocg1/assetx,001_SafeMathLibExt.sol,"times(uint a, uint b);divides(uint a, uint b);minus(uint a, uint b);plus(uint a, uint b)"
igetgames/ether-pudding,test/Example.sol,Example(uint val);setValue(uint val);getValue();parrot(uint val);triggerEvent()
melonproject/protocol,contracts/mock/integratees/MockKyberIntegratee.sol,"swapEtherToToken(address _destToken, uint256)"
ethereum/frontier-release,solidity/token-advanced.sol,"transferOwnership(address newOwner);receiveApproval(address _from, uint256 _value, address _token, bytes calldata _extraData);_transfer(address _from, address _to, uint _value);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes memory _extraData);burn(uint256 _value);burnFrom(address _from, uint256 _value);_transfer(address _from, address _to, uint _value);mintToken(address target, uint256 mintedAmount);freezeAccount(address target, bool freeze);setPrices(uint256 newSellPrice, uint256 newBuyPrice);buy();sell(uint256 amount)"
ethereum/ethereum-org,solidity/token-advanced.sol,"transferOwnership(address newOwner);receiveApproval(address _from, uint256 _value, address _token, bytes calldata _extraData);_transfer(address _from, address _to, uint _value);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes memory _extraData);burn(uint256 _value);burnFrom(address _from, uint256 _value);_transfer(address _from, address _to, uint _value);mintToken(address target, uint256 mintedAmount);freezeAccount(address target, bool freeze);setPrices(uint256 newSellPrice, uint256 newBuyPrice);buy();sell(uint256 amount)"
mhhf/dapple,test/_fixtures/linker_test_package/src.linked/sol/pkg/contract.sol,""
nexusdev/dapple,test/_fixtures/linker_test_package/src.linked/sol/pkg/contract.sol,""
AdChain/AdChainRegistry,contracts/historical/Disbursement.sol,"Disbursement(address _receiver, uint _disbursementPeriod, uint _startDate);setup(Token _token);withdraw(address _to, uint256 _value);calcMaxWithdraw()"
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/access/rbac/RBAC.sol,"checkRole(address _operator, string _role);hasRole(address _operator, string _role);addRole(address _operator, string _role);removeRole(address _operator, string _role)"
GX-Coin/SmartContract,GxCancelOrders.sol,"GxCancelOrders(address deploymentAdminsAddress);cancelOrder(uint80 orderId, bool isBuy);cancelOrderByAdmin(uint80 orderId, bool isBuy);cancelOrderInternal(uint80 orderId, bool isBuy, bool isAdmin);removeSellOrder(Order order);removeBuyOrder(Order order)"
SilentCicero/wafr,src/tests/solidityTests/gasUsage/examples/CuratorRules.sol,"hasWon(uint _proposalID);configureBoard(address _board);canVote(address _sender, uint _proposalID);canPropose(address _sender);votingWeightOf(address _sender, uint _proposalID)"
Great-Hill-Corporation/daodeepdive,assets/contracts/02-TokenCreation.sol,"TokenCreation(uint _minTokensToCreate, uint _closingTime, address _privateCreation);createTokenProxy(address _tokenHolder);refund();divisor()"
DRI-project/RICO,contracts/AbsPoD.sol,resetWeiBalance(address _user);getBalanceOfToken(address _user);getCapOfToken();isPoDStarted();isPoDEnded();getTokenPrice();getStartTime();getEndtime()
kingflurkel/sponnietube,app/contracts/upload.sol,"transfer(address receiver, uint amount);blocktubeClip(string _ipfsclipobject, uint _treshold, uint _percentageforowner);blocktubeTransfer(address _liker, uint _likeamount);kill()"
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/introspection/ERC165.sol,supportsInterface(bytes4 _interfaceId)
orbro/eth-enablers,blindAuction.sol,"bid(bytes32 _blindedBid);placeBid(address bidder, uint value);withdraw();auctionEnd()"
tetriseffect/activate,contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
AriseID/ariseid-core,contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
cgewecke/solcover,test/sources/if/if-no-brackets-multiline.sol,a(uint x)
JoinColony/solcover,test/sources/if/if-no-brackets-multiline.sol,a(uint x)
BlockTube/blocktube-client.0.2,app/contracts/blocktube.sol,"blockTube(uint256 _initialSupply, string _tokenName, uint8 _decimalUnits, string _tokenSymbol);like(address _clipaddr, uint256 _value);transfer(address _to, uint256 _value);addclip(address _clip, string _title, string _description, string _tags)"
BlockTube/blocktube-client,app/contracts/blocktube.sol,"blockTube(uint256 _initialSupply, string _tokenName, uint8 _decimalUnits, string _tokenSymbol);like(address _clipaddr, uint256 _value);transfer(address _to, uint256 _value);addclip(address _clip, string _title, string _description, string _tags)"
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/contracts/ownership/Claimable.sol,transferOwnership(address newOwner);claimOwnership()
readevalprint/aragon-core,contracts/zeppelin/ownership/Claimable.sol,transferOwnership(address newOwner);claimOwnership()
pz7/liquet,node_modules/zeppelin-solidity/contracts/ownership/Claimable.sol,transferOwnership(address newOwner);claimOwnership()
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/ownership/Claimable.sol,transferOwnership(address newOwner);claimOwnership()
dmx374/zeppelin-solidity,contracts/ownership/Claimable.sol,transferOwnership(address newOwner);claimOwnership()
cashpokerpro-dev/cash-smartcontracts,contracts/ownership/Claimable.sol,transferOwnership(address newOwner);claimOwnership()
cinderblockchain/cindertoken,contracts/ownership/Claimable.sol,transferOwnership(address newOwner);claimOwnership()
thunder-network/thunder-network.github.io,contracts/strings.sol,"memcpy(uint dest, uint src, uint len);toSlice(string self);len(bytes32 self);copy(slice self);toString(slice self);len(slice self);empty(slice self);compare(slice self, slice other);equals(slice self, slice other);nextRune(slice self, slice rune);nextRune(slice self);ord(slice self);keccak(slice self);startsWith(slice self, slice needle);beyond(slice self, slice needle);endsWith(slice self, slice needle);until(slice self, slice needle);findPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);rfindPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);find(slice self, slice needle);rfind(slice self, slice needle);split(slice self, slice needle, slice token);split(slice self, slice needle);rsplit(slice self, slice needle, slice token);rsplit(slice self, slice needle);count(slice self, slice needle);contains(slice self, slice needle);concat(slice self, slice other);join(slice self, slice[] parts)"
Qipingsmile006/TianLianCoin,contracts/interface/IPausable.sol,pause();unPause()
SilentCicero/wafr,src/tests/solidityTests/dirDepth/tests/test.secondDepth.sol,test_oneValidAssertFalse()
ChicoBitcoinJoe/Community,contracts/Community.sol,""
BlockTube/blocktube-client.0.2,app/contracts/blocktubeClip.sol,"transfer(address receiver, uint amount);blocktubeClip(string _ipfsclipobject, uint _treshold, uint _percentageforowner);publish();unpublish();blocktubeTransfer(address _liker, uint _likeamount);kill()"
BlockTube/blocktube-client,app/contracts/blocktubeClip.sol,"transfer(address receiver, uint amount);blocktubeClip(string _ipfsclipobject, uint _treshold, uint _percentageforowner);publish();unpublish();blocktubeTransfer(address _liker, uint _likeamount);kill()"
SwapyNetwork/swapy-exchange-protocol,contracts/token/Token.sol,""
SilentCicero/wafr,src/tests/solidityTests/excludeTest/Something.sol,""
EthereumUCM/Betfunding,Betfunding.sol,"createProject(string name, string desc, uint deadline, address oracle);bet(uint projectId, bool success);verify(uint projectId, bool success);updateBalances(uint projectId);claimProfits();getProject(uint i);getBets(uint i)"
enjin/contracts,solidity/contracts/interfaces/IOwned.sol,owner();transferOwnership(address _newOwner);acceptOwnership()
Nethereum/Nethereum,src/Nethereum.ENS/oldcontracts/HashRegistrarSimplified.sol,"Registrar(ENS _ens, bytes32 _rootNode, uint _startDate);startAuction(bytes32 _hash);startAuctions(bytes32[] _hashes);newBid(bytes32 sealedBid);startAuctionsAndBid(bytes32[] hashes, bytes32 sealedBid);unsealBid(bytes32 _hash, uint _value, bytes32 _salt);cancelBid(address bidder, bytes32 seal);finalizeAuction(bytes32 _hash);transfer(bytes32 _hash, address newOwner);releaseDeed(bytes32 _hash);invalidateName(string unhashedName);eraseNode(bytes32[] labels);transferRegistrars(bytes32 _hash);acceptRegistrarTransfer(bytes32 hash, Deed deed, uint registrationDate);state(bytes32 _hash);entries(bytes32 _hash);isAllowed(bytes32 _hash, uint _timestamp);getAllowedTime(bytes32 _hash);shaBid(bytes32 hash, address owner, uint value, bytes32 salt);_tryEraseSingleNode(bytes32 label);_eraseNodeHierarchy(uint idx, bytes32[] labels, bytes32 node);trySetSubnodeOwner(bytes32 _hash, address _newOwner);max(uint a, uint b);min(uint a, uint b);strlen(string s)"
RyuuGan/sol-merger,test/compiled/DefaultParamentersInheritance.sol,"name();symbol();granularity();totalSupply();balanceOf(address owner);send(address recipient, uint256 amount, bytes calldata data);burn(uint256 amount, bytes calldata data);isOperatorFor(address operator, address tokenHolder);authorizeOperator(address operator);revokeOperator(address operator);defaultOperators();totalSupply();balanceOf(address account);transfer(address recipient, uint256 amount);allowance(address owner, address spender);approve(address spender, uint256 amount);transferFrom(address sender, address recipient, uint256 amount);add(uint256 a, uint256 b);sub(uint256 a, uint256 b);mul(uint256 a, uint256 b);div(uint256 a, uint256 b);mod(uint256 a, uint256 b);isContract(address account);setManager(address account, address newManager);getManager(address account);setInterfaceImplementer(address account, bytes32 interfaceHash, address implementer);getInterfaceImplementer(address account, bytes32 interfaceHash);interfaceHash(string calldata interfaceName);name();symbol();decimals();granularity();totalSupply();balanceOf(address tokenHolder);send(address recipient, uint256 amount, bytes calldata data);transfer(address recipient, uint256 amount);burn(uint256 amount, bytes calldata data);authorizeOperator(address operator);revokeOperator(address operator);defaultOperators();operatorBurn(address account, uint256 amount, bytes calldata data, bytes calldata operatorData);allowance(address holder, address spender);approve(address spender, uint256 value);transferFrom(address holder, address recipient, uint256 amount);_approve(address holder, address spender, uint256 value)"
airalab/core,contracts/misc/KycAmbix.sol,"run(uint256 _ix, bytes calldata _signature)"
QTBlockchain/SolidityNWeb3,SmartContracts/calculator/contracts/Scientific.sol,"Scientific();squareOfSums(uint x, uint y);startsWith(string original, string prefix)"
GovernX/governx-contracts,src/contracts/utils/DefaultRules.sol,"canPropose(address _sender, uint256 _proposalID);canVote(address _sender, uint256 _proposalID);canExecute(address _sender, uint256 _proposalID);votingWeightOf(address _sender, uint256 _proposalID, uint256 _position, uint256 _data);hasWon(address _sender, uint256 _proposalID);hasFailed(address _sender, uint256 _proposalID)"
gleim/DAO,TokenCreation.sol,createTokenProxy(address _tokenHolder);refund();divisor();createTokenProxy(address _tokenHolder);refund();divisor()
GenesysLabs/TheKiwi,contracts/KiwiInvoices.sol,"isInvoice(bytes32 _id);createInvoice(bytes32 _id, address _to, uint256 _amount, string _reference);cancelInvoice(bytes32 _id);payInvoice(bytes32 id, uint256 _amount);getInvoiceCount();getInvoice(bytes32 _id);getInvoiceStatus(bytes32 _id);getInvoiceAmountPaid(bytes32 _id);getInvoiceBalance(bytes32 _id)"
Cryptonomica/cryptonomica,src/main/webapp/app/ethidtokens/examples/ERC223Token.sol,"safeAdd(uint256 x, uint256 y);safeSub(uint256 x, uint256 y);safeMul(uint256 x, uint256 y);tokenFallback(address _from, uint _value, bytes _data);name();symbol();decimals();totalSupply();transfer(address _to, uint _value, bytes _data, string _custom_fallback);transfer(address _to, uint _value, bytes _data);transfer(address _to, uint _value);isContract(address _addr);transferToAddress(address _to, uint _value, bytes _data);transferToContract(address _to, uint _value, bytes _data);balanceOf(address _owner)"
Capillar/capillar-solidity,test/Test_CAP2.sol,"beforeEach();testSimpleBurning();testLimiting();testBurningUndistributed();transferOwnerToProxy();transferOwnerToTest();ProxyUser(address _inst);transfer(address _to, uint _amount);remove()"
WishFinanceCom/WF-contracts,contracts/core/common/Owned.sol,Owned();destroy();changeContractOwnership(address _to);claimContractOwnership()
JohannesBertens/movie-list,contracts/SciFi.sol,vote(bytes32 name)
daostack/daostack,contracts/schemes/ContinuousLocking4Reputation.sol,"redeem(address _beneficiary, uint256 _lockingId);lock(uint256 _amount, uint256 _period, uint256 _batchIndexToLockIn, bytes32 _agreementHash);release(address _beneficiary, uint256 _lockingId);getRepRewardPerBatch(uint256  _batchIndex);getLockingIdScore(uint256  _batchIndex, uint256 _lockingId);mul(uint256 realA, uint256 realB);toReal(uint216 ipart);fromReal(uint256 _realValue);div(uint256 realNumerator, uint256 realDenominator)"
Cryptonomica/cryptonomica,src/main/webapp/app/ethereum/CryptonomicaVerification.sol,"CryptonomicaVerification();uploadSignedString(string _fingerprint, bytes20 _fingerprintBytes20, string _signedString);revokeVerification(address _acc);changeOwnerStart(address _newOwner);changeOwnerAccept();addManager(address _acc);removeManager(address manager);setPriceForVerification(uint priceInWei);withdrawAllToWithdrawalAddress();setWithdrawalAddress(address _withdrawalAddress);fixWithdrawalAddress(address _withdrawalAddress)"
Cryptonomica/cryptonomica,smart.contracts/CryptonomicaVerification.sol,"CryptonomicaVerification();uploadSignedString(string _fingerprint, bytes20 _fingerprintBytes20, string _signedString);revokeVerification(address _acc);changeOwnerStart(address _newOwner);changeOwnerAccept();addManager(address _acc);removeManager(address manager);setPriceForVerification(uint priceInWei);withdrawAllToWithdrawalAddress();setWithdrawalAddress(address _withdrawalAddress);fixWithdrawalAddress(address _withdrawalAddress)"
silasdavis/eris-db,tests/compilers_fixtures/contractImport4.sol,getVariables()
silasdavis/burrow,tests/compilers_fixtures/contractImport4.sol,getVariables()
aragon/aragon-network-token,packages/sale/installed_contracts/zeppelin/contracts/token/CrowdsaleToken.sol,createTokens(address recipient);getPrice()
pooleja/SolidityPlayground,contracts/zeppelin/token/CrowdsaleToken.sol,createTokens(address recipient);getPrice()
maraoz/zeppelin-solidity,contracts/token/CrowdsaleToken.sol,createTokens(address recipient);getPrice()
marvinfy/ConsentDirectives,contracts/Patient.sol,"Patient(address owner);GetOwner();GetConsentDirectiveCount();GetConsentDirective(uint i);GetConsentDirectives();AddConsentDirective(ConsentDirective cd);RemoveAllConsentDirectives();ConsentsTo(address who, Category what);HasDelegatedAuthority(address who, ConsentDirective what)"
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/test-helpers/PullPaymentMock.sol,"PullPaymentMock();callSend(address dest, uint amount)"
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/test-helpers/PullPaymentMock.sol,"PullPaymentMock();callSend(address dest, uint amount)"
michinbear/solidity,test/compilationTests/zeppelin/MultisigWallet.sol,"MultisigWallet(address[] _owners, uint256 _required, uint256 _daylimit);destroy(address _to);execute(address _to, uint256 _value, bytes _data);confirm(bytes32 _h);setDailyLimit(uint256 _newLimit);resetSpentToday();clearPending()"
elementrem/solidity,test/compilationTests/zeppelin/MultisigWallet.sol,"MultisigWallet(address[] _owners, uint256 _required, uint256 _daylimit);destroy(address _to);execute(address _to, uint256 _value, bytes _data);confirm(bytes32 _h);setDailyLimit(uint256 _newLimit);resetSpentToday();clearPending()"
silasdavis/eris-db,tests/jobs_fixtures/app05-deploy_query_contracts_and_testing_rendering_solc_int_type/storage.sol,set(int x);get()
silasdavis/burrow,tests/jobs_fixtures/app05-deploy_query_contracts_and_testing_rendering_solc_int_type/storage.sol,set(int x);get()
eris-ltd/eris-db,tests/jobs_fixtures/app57-bond-unbond/storage.sol,set(int x);get()
eris-ltd/eris-db,tests/jobs_fixtures/app05-deploy_query_contracts_and_testing_rendering_solc_int_type/storage.sol,set(int x);get()
ether-camp/ethereum-harmony,src/test/resources/contracts/Contract.sol,test(bytes32 str)
eris-ltd/eris-sqlsol,examples/EggTracker/contracts/stdlib/tracker.sol,"testCreateEvent(history storage hist, address actor, bytes32 secretHash);createEvent(history storage hist,  address actor, bytes32 secretHash);testTransferEvent(history storage hist, address actor, address newOwner);transferEvent(history storage hist, address actor, address newOwner);testClaimEvent(history storage hist, address actor, bytes32 secret, bytes32 newSecretHash);claimEvent(history storage hist, address actor, bytes32 secret, bytes32 newSecretHash)"
mixbytes/storiqa_ico,contracts/STQPreSale.sol,"STQPreSale(address token, address funds);buy();amIOwner()"
Storiqa/ico_smart_contract,contracts/STQPreSale.sol,"STQPreSale(address token, address funds);buy();amIOwner()"
montyly/manticore,tests/ethereum/contracts/consensys_benchmark/integer_overflow_bytes_param.sol,get(bytes key)
trailofbits/manticore,tests/ethereum_bench/consensys_benchmark/integer_overflow_bytes_param.sol,get(bytes key)
Dsummers91/Dist-Trade-2017,installed_contracts/tokens/contracts/HumanStandardTokenFactory.sol,"HumanStandardTokenFactory();verifyHumanStandardToken(address _tokenContract);codeAt(address _addr);createHumanStandardToken(uint256 _initialAmount, string _name, uint8 _decimals, string _symbol)"
papyrusglobal/smartcontracts,contracts/registry/VerifierRegistry.sol,"register(address owner, address root, string name, string website);update(uint64 verifierId, address owner, address root, string name, string website);registerValidator(uint64 verifierId, address validator);registerEndpoint(uint64 verifierId, string endpoint);approveEndpoint(uint64 verifierId, uint64 endpointId);removeEndpoint(uint64 verifierId, uint64 endpointId);findByOwnerAddress(address verifier);getOwnerAddress(uint64 verifierId);getPaymentsRootAddress(uint64 verifierId);getName(uint64 verifierId);getWebsite(uint64 verifierId);getValidatorCount(uint64 verifierId);getValidator(uint64 verifierId, uint64 validatorId);getEndpointCount(uint64 verifierId);getEndpoint(uint64 verifierId, uint64 endpointId);isEndpointApproved(uint64 verifierId, uint64 endpointId);isEndpointRemoved(uint64 verifierId, uint64 endpointId)"
slockit/smart-contract,SubUser.sol,"SubUser();isSubUser(address _addr);isAUser(address _addr);changeSubUser(address _from, address _to);addSubUser(address _subUser);removeSubUser(address _subUser);removeAllSubUsers();reorganizeSubUsers()"
RyuuGan/sol-merger,test/compiled/Struct.sol,""
lucywe/rootcore-crowdsale,solidity/contracts/SmartToken.sol,"SmartToken(string _name, string _symbol, uint8 _decimals);disableTransfers(bool _disable);issue(address _to, uint256 _amount);destroy(address _from, uint256 _amount);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value)"
bdjukic/monument,ReportManager.sol,"createReport(string ipfsHash, string title, string description, string tags, uint8 countryId);getReportCount();getReport(uint index);searchReport(string searchQuery)"
aragon/aragon-core,contracts/test/TestACLInterpreter.sol,"testEqualityUint();testEqualityAddr();testEqualityBytes();testInequalityUint();testInequalityBytes();testInequalityAddr();testGreatherThan();testLessThan();testGreatherThanOrEqual();testLessThanOrEqual();testTimestamp();testBlockNumber();testOracle();testReturn();testNot();testComplexCombination();testParamOutOfBoundsFail();testArgOutOfBoundsFail();testIfElse();testCombinators();assertEval(uint256[] memory args, uint8 argId, Op op, uint256 value, bool expected);assertEval(Param[] memory params, bool expected);assertEval(Param[] memory params, uint256[] memory args, bool expected);encodeAndSaveParams(Param[] memory params)"
pash7ka/zeppelin-solidity,contracts/crowdsale/Crowdsale.sol,"Crowdsale(uint256 _startTime, uint256 _endTime, uint256 _rate, address _wallet);createTokenContract();buyTokens(address beneficiary);forwardFunds();validPurchase();hasEnded()"
pipermerriam/populus,tests/fixtures/ImportTestC.sol,ImportTestC()
SafecontractDev/protocol,contracts/bancor_contracts/BancorFormula.sol,"BancorFormula();calculatePurchaseReturn(uint256 _supply, uint256 _reserveBalance, uint32 _reserveRatio, uint256 _depositAmount);calculateSaleReturn(uint256 _supply, uint256 _reserveBalance, uint32 _reserveRatio, uint256 _sellAmount);power(uint256 _baseN, uint256 _baseD, uint32 _expN, uint32 _expD);ln(uint256 _numerator, uint256 _denominator);findPositionInMaxExpArray(uint256 _x);fixedExp(uint256 _x, uint8 _precision)"
ethereum/remix,remix-tests/tests/examples_3/simple_string_test.sol,beforeAll();initialValueShouldBeHelloWorld();valueShouldNotBeHelloWordl()
eris-ltd/eris-db,js/src/test/flipper.sol,flip();get()
daukantas/cpp-ethereum,mix/stdc/std.sol,"owned();kill();register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service);getAddress(bytes32 _name);getName(address _owner);NameReg();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr);kill();register(bytes32 name);addressOf(bytes32 name);unregister();nameOf(address addr)"
BreemsEmporiumMensToiletriesFragrances/cpp-ethereum,mix/stdc/std.sol,"owned();kill();register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service);getAddress(bytes32 _name);getName(address _owner);NameReg();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr);kill();register(bytes32 name);addressOf(bytes32 name);unregister();nameOf(address addr)"
alexvandesande/cpp-ethereum,mix/stdc/std.sol,"owned();kill();register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service);getAddress(bytes32 _name);getName(address _owner);NameReg();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr);kill();register(bytes32 name);addressOf(bytes32 name);unregister();nameOf(address addr)"
anthony-cros/cpp-ethereum,mix/stdc/std.sol,"owned();kill();register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service);getAddress(bytes32 _name);getName(address _owner);NameReg();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr);kill();register(bytes32 name);addressOf(bytes32 name);unregister();nameOf(address addr)"
ethereum/mix,stdc/std.sol,"owned();kill();register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service);getAddress(bytes32 _name);getName(address _owner);NameReg();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr);kill();register(bytes32 name);addressOf(bytes32 name);unregister();nameOf(address addr)"
cyperx/cpp-ethereum,mix/stdc/std.sol,"owned();kill();register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service);getAddress(bytes32 _name);getName(address _owner);NameReg();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr);kill();register(bytes32 name);addressOf(bytes32 name);unregister();nameOf(address addr)"
yann300/mix,stdc/std.sol,"owned();kill();register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service);getAddress(bytes32 _name);getName(address _owner);NameReg();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr);kill();register(bytes32 name);addressOf(bytes32 name);unregister();nameOf(address addr)"
Sorceror32/.-git-clone-https-github.com-ethereum-cpp-ethereum,mix/stdc/std.sol,"owned();kill();register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service);getAddress(bytes32 _name);getName(address _owner);NameReg();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr);kill();register(bytes32 name);addressOf(bytes32 name);unregister();nameOf(address addr)"
PaulGrey30/go-get--u-github.com-tools-godep,mix/stdc/std.sol,"owned();kill();register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service);getAddress(bytes32 _name);getName(address _owner);NameReg();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr);kill();register(bytes32 name);addressOf(bytes32 name);unregister();nameOf(address addr)"
hanyoungpark/cpp-ethereum,mix/stdc/std.sol,"owned();kill();register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service);getAddress(bytes32 _name);getName(address _owner);NameReg();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr);kill();register(bytes32 name);addressOf(bytes32 name);unregister();nameOf(address addr)"
Sorceror32/go-get--u-github.com-tools-godep,mix/stdc/std.sol,"owned();kill();register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service);getAddress(bytes32 _name);getName(address _owner);NameReg();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr);kill();register(bytes32 name);addressOf(bytes32 name);unregister();nameOf(address addr)"
expanse-project/cpp-expanse,mix/stdc/std.sol,"owned();kill();register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service);getAddress(bytes32 _name);getName(address _owner);NameReg();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr);kill();register(bytes32 name);addressOf(bytes32 name);unregister();nameOf(address addr)"
imapp-pl/cpp-ethereum,mix/stdc/std.sol,"owned();kill();register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service);getAddress(bytes32 _name);getName(address _owner);NameReg();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr);kill();register(bytes32 name);addressOf(bytes32 name);unregister();nameOf(address addr)"
pompomJuice/cpp-ethereum,mix/stdc/std.sol,"owned();kill();register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service);getAddress(bytes32 _name);getName(address _owner);NameReg();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr);kill();register(bytes32 name);addressOf(bytes32 name);unregister();nameOf(address addr)"
tjade273/cpp-ethereum,mix/stdc/std.sol,"owned();kill();register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service);getAddress(bytes32 _name);getName(address _owner);NameReg();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr);kill();register(bytes32 name);addressOf(bytes32 name);unregister();nameOf(address addr)"
cinnamoncoin/cpp-ethereum,mix/stdc/std.sol,"owned();kill();register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service);getAddress(bytes32 _name);getName(address _owner);NameReg();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr);kill();register(bytes32 name);addressOf(bytes32 name);unregister();nameOf(address addr)"
vaporry/mix,stdc/std.sol,"owned();kill();register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service);getAddress(bytes32 _name);getName(address _owner);NameReg();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr);kill();register(bytes32 name);addressOf(bytes32 name);unregister();nameOf(address addr)"
kleetus/cpp-ethereum,mix/stdc/std.sol,"owned();kill();register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service);getAddress(bytes32 _name);getName(address _owner);NameReg();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr);kill();register(bytes32 name);addressOf(bytes32 name);unregister();nameOf(address addr)"
chriseth/cpp-ethereum,mix/stdc/std.sol,"owned();kill();register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service);getAddress(bytes32 _name);getName(address _owner);NameReg();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr);kill();register(bytes32 name);addressOf(bytes32 name);unregister();nameOf(address addr)"
subtly/cpp-ethereum-micro,mix/stdc/std.sol,"owned();kill();register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service);getAddress(bytes32 _name);getName(address _owner);NameReg();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr);kill();register(bytes32 name);addressOf(bytes32 name);unregister();nameOf(address addr)"
LefterisJP/mix,stdc/std.sol,"owned();kill();register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service);getAddress(bytes32 _name);getName(address _owner);NameReg();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr);kill();register(bytes32 name);addressOf(bytes32 name);unregister();nameOf(address addr)"
tpruvot/cpp-ethereum,mix/stdc/std.sol,"owned();kill();register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service);getAddress(bytes32 _name);getName(address _owner);NameReg();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr);kill();register(bytes32 name);addressOf(bytes32 name);unregister();nameOf(address addr)"
LianaHus/mix,stdc/std.sol,"owned();kill();register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service);getAddress(bytes32 _name);getName(address _owner);NameReg();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr);kill();register(bytes32 name);addressOf(bytes32 name);unregister();nameOf(address addr)"
vaporry/cpp-ethereum,mix/stdc/std.sol,"owned();kill();register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service);getAddress(bytes32 _name);getName(address _owner);NameReg();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr);kill();register(bytes32 name);addressOf(bytes32 name);unregister();nameOf(address addr)"
ashleyblackmore/cpp-ethereum,mix/stdc/std.sol,"owned();kill();register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service);getAddress(bytes32 _name);getName(address _owner);NameReg();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr);kill();register(bytes32 name);addressOf(bytes32 name);unregister();nameOf(address addr)"
tomthebuzz/mix,stdc/std.sol,"owned();kill();register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service);getAddress(bytes32 _name);getName(address _owner);NameReg();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr);kill();register(bytes32 name);addressOf(bytes32 name);unregister();nameOf(address addr)"
PaulGrey30/.-git-clone-https-github.com-ethereum-cpp-ethereum,mix/stdc/std.sol,"owned();kill();register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service);getAddress(bytes32 _name);getName(address _owner);NameReg();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr);kill();register(bytes32 name);addressOf(bytes32 name);unregister();nameOf(address addr)"
chriseth/mix,stdc/std.sol,"owned();kill();register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service);getAddress(bytes32 _name);getName(address _owner);NameReg();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr);kill();register(bytes32 name);addressOf(bytes32 name);unregister();nameOf(address addr)"
AmericanSundown/cpp-ethereum,mix/stdc/std.sol,"owned();kill();register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service);getAddress(bytes32 _name);getName(address _owner);NameReg();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr);kill();register(bytes32 name);addressOf(bytes32 name);unregister();nameOf(address addr)"
zeroqn/aa-apply,contracts/UsingDB.sol,UsingDB(address _db);setDB(address _db)
airalab/core,contracts/robonomics/XRT.sol,""
orbro/eth-enablers,ethereum-examples-master/solidity/DieselPricePeg.sol,"DieselPricePeg();__callback(bytes32 myid, string result, bytes proof);update(uint delay)"
rohithpr/cocoon,v0.0.1-do-not-use/contract/cocoon.sol,"storeInContract(address intermediary, address receiver);getValue(address initiator, address intermediary, address receiver);sendToTarget(address initiator, address intermediary, address receiver, address target, uint amount);sendToReceiver(address intermediary, address receiver, uint amount);moveToReceiver(address initiator, address receiver, uint amount);moveToInitiator(address initiator, address receiver, uint amount)"
redsquirrel/augur-core,src/factories/DisputeBondTokenFactory.sol,"createDisputeBondToken(Controller _controller, Market _market, address _bondHolder, uint256 _bondAmount, bytes32 _payoutDistributionHash)"
Vorxil/MarketStake,contracts/Ledger.sol,"addPending(address account, uint amount);removePending(address account, uint amount);addLocked(address account, uint amount);removeLocked(address account, uint amount);addGains(address account, uint amount);removeGains(address account, uint amount);balanceOf(address account);supplyOf(address account);freeSpaceOf(address account);invariant(address account)"
thekaleidoscope/Hello-Ethereum,contracts/hello2.sol,"getBalance(address usr);transfer(address to,uint val)"
Yann-Liang/browser-solidity,contracts/ballot.sol,Ballot(uint8 _numProposals);giveRightToVote(address voter);delegate(address to);vote(uint8 proposal);winningProposal()
serapath-contribution/browser-solidity,contracts/ballot.sol,Ballot(uint8 _numProposals);giveRightToVote(address voter);delegate(address to);vote(uint8 proposal);winningProposal()
SurBTC/etherlite,spec/test_contract/contracts/TestContract.sol,"testString(string _return);testUint(uint _return);testInt(int _return);testAddress(address _return);testIntFixedArray(int[3] _array);testIntDynArray(int[] _array);testEvent(int _intParam, uint _uintParam, string _stringParam);testEvents()"
WeiFund/WeiFund,contracts/WeiFundInterface.sol,"newCampaign(uint _campaignID, address _owner, uint _fundingGoal);contribute(uint _campaignID, address _contributor, address _beneficiary, uint _amountContributed);refund(uint _campaignID, address _contributor, uint _amountRefunded);payout(uint _campaignID, uint _amountPaid);newCampaign(string _name, address _beneficiary, uint _fundingGoal, uint _expiry, address _config);contribute(uint _campaignID, address _beneficiary);refund(uint _campaignID, uint _contribution);payout(uint _campaignID);operatorCampaignID(address _operator, uint _campaignIndex);totalCampaignsBy(address _operator);totalContributionsBy(uint _campaignID, address _contributor);totalCampaigns();contributionAt(uint _campaignID, uint _contributionID);createdAt(uint _campaignID);contributionID(uint _campaignID, address _contributor, uint _contributionIndex);ownerOf(uint _campaignID);beneficiaryOf(uint _campaignID);configOf(uint _campaignID);amountRaisedBy(uint _campaignID);fundingGoalOf(uint _campaignID);expiryOf(uint _campaignID);totalContributors(uint _campaignID);isContributor(uint _campaignID, address _contributor);isOwner(uint _campaignID, address _owner);hasFailed(uint _campaignID);isSuccess(uint _campaignID);isPaidOut(uint _campaignID);totalRefunded(uint _campaignID);isRefunded(uint _campaignID)"
boisde/Greed_Island,party/contracts/protocol/modules/TradeModule.sol,"removeModule();_validatePreTradeData(TradeInfo memory _tradeInfo, uint256 _sendQuantity);_validatePostTrade(TradeInfo memory _tradeInfo);_accrueProtocolFee(TradeInfo memory _tradeInfo, uint256 _exchangedQuantity);_updateSetTokenPositions(TradeInfo memory _tradeInfo)"
AleksandrLeonov/Baccara-Smart-Contract,baccara.sol,BacCara();getGameResults();setResults(uint[4] values);play(uint[3] bets);close()
Neurone/persians,contracts/SafeMath.sol,"safeMul(uint256 a, uint256 b);safeSub(uint256 a, uint256 b);safeAdd(uint256 a, uint256 b)"
Superdao-DAO/Superdao-Seed-Stage1,contracts/ConstitutionalDNA.sol,"ConstitutionalDNA();addArticle(bytes _article, bool _amendable);addArticleItem(uint _articleNum, bytes _itemText);amendArticleItem(uint _articleNum, uint _item, bytes _textChange);getArticleItem(uint _articleNum, uint _item);initializedRatify();setFoundingTeam(uint[] _founderRanks, address[] _founderAddrs);updateProfile(address _addr, bytes _profileName)"
OpenSTFoundation/SimpleTokenSale,contracts/TokenSale.sol,"TokenSale(SimpleToken _tokenContract, Trustee _trusteeContract, address _wallet);initialize();changeWallet(address _wallet);currentTime();hasSaleEnded();updateWhitelist(address _account, uint8 _phase);setTokensPerKEther(uint256 _tokensPerKEther);buyTokens();addPresale(address _account, uint256 _baseTokens, uint256 _bonusTokens);pause();unpause();reclaimTokens(uint256 _amount);burnUnsoldTokens();finalize();finalizeInternal()"
pipermerriam/populus,tests/fixtures/Math.sol,"increment();increment(uint amt);add(int a, int b)"
kowala-tech/kUSD,client/contracts/truffle/contracts/ownership/MultiSigWallet.sol,"MultiSigWallet(address[] _owners, uint _required);addOwner(address owner);removeOwner(address owner);replaceOwner(address owner, address newOwner);changeRequirement(uint _required);submitTransaction(address destination, uint value, bytes data);confirmTransaction(uint transactionId);revokeConfirmation(uint transactionId);executeTransaction(uint transactionId);external_call(address destination, uint value, uint dataLength, bytes data);isConfirmed(uint transactionId);addTransaction(address destination, uint value, bytes data);getConfirmationCount(uint transactionId);getTransactionCount(bool pending, bool executed);getOwners();getConfirmations(uint transactionId);getTransactionIds(uint from, uint to, bool pending, bool executed)"
readevalprint/aragon-core,test/helpers/ExecutionTarget.sol,execute();setCounter(uint x)
Project-WikiGit/WikiGit,dev/contracts/dao.sol,"invalidateVotingAtIndex(uint _index);vote(uint _votingId, bool _support);concludeVoting(uint _votingId);paySolutionReward(uint _taskId, uint _solId);paySolutionRewardGoodRep(address _submitter, uint _rewardGoodRep);getVotingListCount();vHasVoted(uint _votingId, address _addr)"
DramaticLiberty/GreenChain,contracts/GreenChain.sol,"GreenChain();addBlock(string name, uint quantity, string blk);fetchAllBlocks();fetchBlocks(address owner)"
manosamy/enslisting,contracts/ListingDB.sol,"ListingDB(uint64 _nextListingId, uint64 _nextBidId, address _registry);namehash(string name);updateService(address _listingService, address _escrowService);service();index();listings(uint64 listingId);withdraw(uint _amount);addListing(string _name, string _email, uint _listPrice, address _listingAgent);getBidInfo(uint64 bidId);setBidStatus(uint64 bidId, BidStatus status);addBid(string _name,string _email, uint _bidAmount, address _bidder);recordEscrowOnBid(uint64 _optionalBidId, uint64 _escrowId)"
manojpramesh/solidity-contracts,contracts/StorjTokenContract.sol,"balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value);safeMul(uint a, uint b);safeDiv(uint a, uint b);safeSub(uint a, uint b);safeAdd(uint a, uint b);assert(bool assertion);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);balanceOf(address _owner);approve(address _spender, uint _value);allowance(address _owner, address _spender);burn(uint burnAmount);isUpgradeAgent();upgradeFrom(address _from, uint256 _value);UpgradeableToken(address _upgradeMaster);upgrade(uint256 value);setUpgradeAgent(address agent);getUpgradeState();setUpgradeMaster(address master);canUpgrade();CentrallyIssuedToken(address _owner, string _name, string _symbol, uint _totalSupply, uint _decimals)"
openonelabs/graffiti,contracts/Message.sol,Message();changeFee(uint256 fee);changeOwner(address newOwner);post(bytes message);getPost(uint256 index)
ChronoBank/LX-SC,contracts/helpers/UserProxyTester.sol,"functionReturningValue(bytes32 _someInputValue);unsuccessfullFunction(bytes32);forward(address, bytes, uint, bool)"
kowala-tech/kUSD,client/contracts/bindings/consensus/testfiles/contracts/Incompatible.sol,""
credsign/credsign.github.io,contracts/indexes/ContentSeries.sol,ContentSeries(address contentContract);add(uint256 contentID);getSize()
SydEthereum/meetup-token,contracts/transferableToken.sol,"symbol();name();totalSupply();balanceOf(address holderAddress);allowance(address ownerAddress, address spenderAddress);transfer(address toAddress, uint256 amount);transferFrom(address fromAddress, address toAddress, uint256 amount);xfer(address fromAddress, address toAddress, uint amount);approve(address spender, uint256 value);TransferableMeetupToken(string tokenSymbol, string toeknName);issue(address toAddress, uint amount, string externalId, string reason);redeem(uint amount)"
WeTrustPlatform/rosca-contracts,contracts/test/TestReEntryAttack.sol,setRoscaAddress(address ROSCAContract_);withdrawTwice();contribute();bid(uint256 bid);startRound()
coder-forge/chain-forge,test/TestForge.sol,testSetOrganiserUsingDeployedContract();testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
redsquirrel/augur-core,src/extensions/OrderBook.sol,"getOrderIDs(uint256 _type, Market _market, uint256 _outcome, uint256 _startingOrderId, uint256 _numOrdersToLoad);getOrder(uint256 _orderId, uint256 _type, Market _market, uint256 _outcome);getOrderBook(uint256 _type, Market _market, uint256 _outcome, uint256 _startingOrderId, uint256 _numOrdersToLoad)"
descampsk/wavevote,WaveVote_Contracts/WaveVoteContractRegistery.sol,"WaveVoteContractRegistery();changeWaveVoteContract(address newAddress, string newAbi);changeLocalCryptoContract(address newAddress, string newAbi)"
SwapyNetwork/swapy-exchange-protocol,test/TestInvestmentAsset_investment.sol,"shouldThrow(bool result);testInvestorAddressMustBeValid();testUnavailableActionsWhenAvaiable();testUserCanInvest();testUnavailableActionsWhenPending();testOnlyInvestorCanCancelInvestment();testInvestorCanCancelInvestment();testOnlyOwnerCanRefuseInvestment();testOwnerCanRefuseInvestment();testOnlyOwnerCanWithdrawFunds();testOwnerCanWithdrawFunds();testUnavailableActionsWhenInvested();testOnlyOwnerCanReturnInvestment();testOwnerCanReturnInvestment();testUnavailableActionsWhenReturned();refuseInvestment(address _asset);withdrawFunds(address _asset);returnInvestment(address _asset, uint256 _value)"
oraclekit/smart_oracle,lib/assets/contracts/Oracle.sol,Oracle(bytes32 newCurrent);update(bytes32 newCurrent)
airalab/core,contracts/robonomics/interface/IValidator.sol,isValidator(address _validator)
aragon/aragon-core,contracts/lib/ens/PublicResolver.sol,"PublicResolver(AbstractENS ensAddr);supportsInterface(bytes4 interfaceID);addr(bytes32 node);setAddr(bytes32 node, address addr);content(bytes32 node);setContent(bytes32 node, bytes32 hash);name(bytes32 node);setName(bytes32 node, string name);ABI(bytes32 node, uint256 contentTypes);setABI(bytes32 node, uint256 contentType, bytes data);pubkey(bytes32 node);setPubkey(bytes32 node, bytes32 x, bytes32 y);text(bytes32 node, string key);setText(bytes32 node, string key, string value)"
lucywe/rootcore-crowdsale,solidity/contracts/helpers/TestERC20Token.sol,""
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/scenarios/cyclic_dependencies/Pong.sol,""
SafecontractDev/protocol,contracts/bancor_contracts/Owned.sol,Owned();transferOwnership(address _newOwner);acceptOwnership()
coder-forge/chain-forge,contracts/Foo.sol,createBar()
MarketProject/MarketProtocol,contracts/libraries/StringLib.sol,"memcpy(uint dest, uint src, uint len);toSlice(string memory self);toString(slice memory self);split(slice memory self, slice memory needle, slice memory token);split(slice memory self, slice memory needle);count(slice memory self, slice memory needle)"
bitcoinbrisbane/BitPoker,BitPoker.ETH.Contracts/TexasHoldem.sol,"TexasHoldem(string _url, uint8 _minPlayers, uint8 _maxPlayers);sit(uint8 seatNumber);addAction(string _action, uint256 _amount);awardPot(string _action, uint256 _amount)"
Pavel-DV/ChronoMint,old/Configurable.sol,"getVal(string name);setVal(string name, uint value);getStr(string name);setStr(string name, string value)"
bshevchenko/ChronoMint,old/Configurable.sol,"getVal(string name);setVal(string name, uint value);getStr(string name);setStr(string name, string value)"
DigixGlobal/ethereum-ruby,contracts/Testing.sol,"getAccountBalance(address accountAddress);deposit();deposit(address accountAddress);addFunds(uint value);addFunds(address accountAddress, uint value);withdraw(uint value);deductFunds(uint value);deductFunds(address accountAddress, uint value);setAccountBalance(uint value);setAccountBalance(address accountAddress, uint value)"
EthWorks/ethereum.rb,contracts/Testing.sol,"getAccountBalance(address accountAddress);deposit();deposit(address accountAddress);addFunds(uint value);addFunds(address accountAddress, uint value);withdraw(uint value);deductFunds(uint value);deductFunds(address accountAddress, uint value);setAccountBalance(uint value);setAccountBalance(address accountAddress, uint value)"
marekkirejczyk/ethereum.rb,contracts/Testing.sol,"getAccountBalance(address accountAddress);deposit();deposit(address accountAddress);addFunds(uint value);addFunds(address accountAddress, uint value);withdraw(uint value);deductFunds(uint value);deductFunds(address accountAddress, uint value);setAccountBalance(uint value);setAccountBalance(address accountAddress, uint value)"
livepeer/protocol,contracts/bonding/IBondingManager.sol,"setActiveTranscoders();updateTranscoderWithFees(address _transcoder, uint256 _fees, uint256 _round);slashTranscoder(address _transcoder, address _finder, uint256 _slashAmount, uint256 _finderFee);electActiveTranscoder(uint256 _maxPricePerSegment, bytes32 _blockHash, uint256 _round);transcoderTotalStake(address _transcoder);activeTranscoderTotalStake(address _transcoder, uint256 _round);isRegisteredTranscoder(address _transcoder);getTotalBonded()"
iam-dev/ERC23,contracts/token/Mintable23Token.sol,"mint(address _to, uint256 _amount);finishMinting()"
orbro/eth-enablers,solidity-baby-steps-master/contracts/48_msg_value_to_bytes20.sol,getInitialval();getFinalval()
Getline-Network/getline,dapp/contracts/tokens/ERC/IERC20Token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
duaraghav8/Solium,test/lib/rules/indentation/reject/multiline-array.sol,allItemsWrong();firstItemWrong();secondItemWrong();thirdItemWrong();wholeLineWrong()
DOkwufulueze/eth-vue,contracts/lib/utilities.sol,""
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721BasicToken.sol,"balanceOf(address _owner);ownerOf(uint256 _tokenId);exists(uint256 _tokenId);approve(address _to, uint256 _tokenId);getApproved(uint256 _tokenId);setApprovalForAll(address _to, bool _approved);_mint(address _to, uint256 _tokenId);_burn(address _owner, uint256 _tokenId);clearApproval(address _owner, uint256 _tokenId);addTokenTo(address _to, uint256 _tokenId);removeTokenFrom(address _from, uint256 _tokenId)"
readevalprint/aragon-core,contracts/common/EVMCallScript.sol,"runScript(bytes script);addressAt(bytes data, uint256 location);locationOf(bytes data, uint256 location);getScriptActionsCount(bytes script);getScriptAction(bytes script, uint256 i);memcpy(uint dest, uint src, uint len)"
Dsensor/resolutionwallet,src/server/smartcontracts/storageapi-contract.sol,"setSensorAddress(address adin);setToken(string x);getToken();setStorageOwner(address receiver, string x);setPermission(address receiver, uint x);getOwner(address addr);getPermissionLevel();getHistoryPermGranted()"
robertsdotpm/pay_for_private_keys,truffle/contracts/PayForPrivKey.sol,"PayForPrivKey(address _pub_key);refund();get_solution();get_commit_no();toBytes(address x);CommitSolutionHash(bytes32 _solution_hash);ProvePrivKey(bytes32 h1, uint8 v1, bytes32 r1, bytes32 s1, bytes32 h2, bytes32 s2, address destination, uint index)"
adklempner/solidity-license,contracts/zeppelin/ownership/Contactable.sol,setContactInformation(string info)
michinbear/solidity,test/compilationTests/zeppelin/ownership/Contactable.sol,setContactInformation(string info)
elementrem/solidity,test/compilationTests/zeppelin/ownership/Contactable.sol,setContactInformation(string info)
adamdossa/ProfitSharingContract,installed_contracts/zeppelin/contracts/ownership/Contactable.sol,setContactInformation(string info)
prashantpawar/DisputeResolution,contracts/stateMachine.sol,nextStage()
bloodstalker/scrypt-interactive,contracts/scryptFramework.sol,"hashState(State memory state);encodeState(State memory state);decodeState(bytes memory encoded);equal(bytes memory a, bytes memory b);inputToState(bytes memory input);finalStateToOutput(State memory state, bytes memory input);toBytes(bytes32[] memory b);toArray(bytes memory b);initMemory(State memory state);writeMemory(State memory state, uint index, uint[4] values, Proofs memory proofs);readMemory(State memory state, uint index, Proofs memory proofs);runStep(State memory state, uint step, Proofs memory proofs);quarter(uint32 y0, uint32 y1, uint32 y2, uint32 y3);get(uint data, uint word);put(uint x, uint word);rowround(uint first, uint second);columnround(uint first, uint second);round(uint[4] values)"
bokkypoobah/TokenTrader,testing/test_20170115_1619/TokenSellerFactory.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);approve(address _spender, uint _value);allowance(address _owner, address _spender);Owned();transferOwnership(address newOwner);makerWithdrawAsset(uint256 tokens);makerWithdrawEther(uint256 ethers);takerBuyAsset();verify(address tradeContract);TokenSeller(seller)"
batlinal/ftt,contracts/ServiceAgreement.sol,propose(bytes32 hashedHash);withdraw();accept(bytes32 _contentHash);reject()
flypme/flypme-contracts,test/TestMySale.sol,contractBaseTests(MySale meta);testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMySale()
aragon/aragon-core,contracts/test/helpers/ACLHelper.sol,"encodeOperator(uint256 param1, uint256 param2);encodeIfElse(uint256 condition, uint256 successParam, uint256 failureParam);canPerform(address, address, bytes32, uint256[]);canPerform(address, address, bytes32, uint256[]);canPerform(address, address, bytes32, uint256[]);canPerform(address, address, bytes32, uint256[]);canPerform(address, address, bytes32, uint256[]);canPerform(address, address, bytes32, uint256[] how)"
Neurone/persians,contracts/Timed.sol,"isInTime();isTimeExpired();Timed(uint256 _startTime, uint256 life, uint8 _avarageBlockTime)"
aragon/aragon-network-token,packages/sale/installed_contracts/zeppelin/contracts/SafeMath.sol,"safeMul(uint a, uint b);safeDiv(uint a, uint b);safeSub(uint a, uint b);safeAdd(uint a, uint b);assert(bool assertion)"
pooleja/SolidityPlayground,contracts/zeppelin/SafeMath.sol,"safeMul(uint a, uint b);safeDiv(uint a, uint b);safeSub(uint a, uint b);safeAdd(uint a, uint b);assert(bool assertion)"
maraoz/zeppelin-solidity,contracts/SafeMath.sol,"safeMul(uint a, uint b);safeDiv(uint a, uint b);safeSub(uint a, uint b);safeAdd(uint a, uint b);assert(bool assertion)"
energychain/StromDAO-BusinessObject,smart_contracts/StromDAO-Reading.sol,pingDelta(uint256 _delta);pingReading(uint256 _reading)
silasdavis/eris-db,tests/jobs_fixtures/app20-factory_contract_creates_two_types_of_get_set_contracts/GSFactory.sol,set(uint x);get();create();getLast()
silasdavis/burrow,tests/jobs_fixtures/app20-factory_contract_creates_two_types_of_get_set_contracts/GSFactory.sol,set(uint x);get();create();getLast()
eris-ltd/eris-db,tests/jobs_fixtures/app20-factory_contract_creates_two_types_of_get_set_contracts/GSFactory.sol,set(uint x);get();create();getLast()
Dicoiner/irianna-solidity,contracts/token/VestedToken.sol,"revokeTokenGrant(address _holder, uint256 _grantId);transferableTokens(address holder, uint64 time);tokenGrantsCount(address _holder);tokenGrant(address _holder, uint256 _grantId);vestedTokens(TokenGrant grant, uint64 time);nonVestedTokens(TokenGrant grant, uint64 time);lastTokenIsTransferableDate(address holder)"
iam-dev/ERC23,installed_contracts/zeppelin-solidity/test/mocks/BasicTokenMock.sol,"BasicTokenMock(address initialAccount, uint256 initialBalance)"
TruLtd/tru-reputation-token,contracts/supporting/Haltable.sol,halt();unhalt()
gnosis/gnosis-contracts,contracts/Oracles/SignedMessageOracleFactory.sol,"createSignedMessageOracle(bytes32 descriptionHash, uint8 v, bytes32 r, bytes32 s)"
SafecontractDev/protocol,contracts/Backdoor.sol,Backdoor();recoverFundsAndDestroy();removeBackdoor()
michinbear/solidity,test/compilationTests/gnosis/Oracles/DifficultyOracleFactory.sol,createDifficultyOracle(uint blockNumber)
elementrem/solidity,test/compilationTests/gnosis/Oracles/DifficultyOracleFactory.sol,createDifficultyOracle(uint blockNumber)
AragonOne/zeppelin-solidity,contracts/token/CrowdsaleToken.sol,createTokens(address recipient);getPrice()
orbro/eth-enablers,solidity-baby-steps-master/contracts/55_2D_array.sol,"TwoD();getValue(uint8 x, uint8 y);kill()"
dmx374/zeppelin-solidity,contracts/token/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
Neurone/persians,contracts/BattleOfThermopylae.sol,"BattleOfThermopylae(uint _startTime, uint _life, uint8 _avarageBlockTime, address _persians, address _immortals, address _spartans, address _athenians);setBattleTokenAddress(address _battleTokenAddress, address _battleTokenOwner);assignPersiansToBattle(uint _warriors);assignImmortalsToBattle(uint _warriors);assignSpartansToBattle(uint _warriors);assignAtheniansToBattle(uint _warriors);redeemWarriors();assignWarriorsToBattle(address _player, address _faction, uint _warriors, uint _maxWarriors);retrieveWarriors(address _player, address _faction, uint8 _deadPercentage);sendWarriors(address _player, address _faction, uint _warriors);sendBattleTokens(address _player, uint _value);getPersiansOnTheBattlefield(address _player);getImmortalsOnTheBattlefield(address _player);getSpartansOnTheBattlefield(address _player);getAtheniansOnTheBattlefield(address _player);getPersiansBattlePoints();getGreeksBattlePoints();getPersiansBattlePointsBy(address _player);getGreeksBattlePointsBy(address _player);computeSlaves(address _player, address _loosingMainTroops);getTotalSlaves(address _faction);isInProgress();isEnded();isDraw();getTemporaryWinningFaction();getWinningFaction();setTime(uint _startTime, uint life, uint8 _avarageBlockTime)"
rootprojectco/backend,contracts/PensionFundRelease.sol,"vote(bool approve, string justification);isReleaseApproved();isFundFreezePeriodEnded();isBurnApproved();getPaymentAmount();balance();releaseRoots();refundRoots()"
redsquirrel/augur-core,src/factories/BranchFactory.sol,"createBranch(Controller _controller, Branch _parentBranch, bytes32 _parentPayoutDistributionHash)"
ericvrp/SoliditySandbox,app/src/contracts/simpleNameserver.sol,"set(uint _name, address _addr);get(uint _name)"
melonproject/protocol,contracts/fund/vault/Vault.sol,"deposit(address _asset, uint256 _amount);disableAdapters(address[] calldata _adapters);enableAdapters(address[] calldata _adapters);getEnabledAdapters();withdraw(address _asset, uint256 _amount);getAssetBalances(address[] memory _assets);getOwnedAssets();__adapterIsEnabled(address _adapter);__addOwnedAsset(address _asset);__enableAdapters(address[] memory _adapters);__getAssetBalance(address _asset);__isReceivableAsset(address _asset);__removeOwnedAsset(address _asset);createInstance(address _hub, address[] calldata _adapters)"
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/proposals/ERC1046/TokenMetadata.sol,tokenURI();tokenURI()
rachel-ftw/solidity-intro-first-contract,HelloWorld.sol,displayMessage()
michinbear/solidity,test/compilationTests/zeppelin/LimitBalance.sol,LimitBalance(uint256 _limit)
elementrem/solidity,test/compilationTests/zeppelin/LimitBalance.sol,LimitBalance(uint256 _limit)
jacogr/dapp-voting,src/solidity/Voting.sol,setOwner(address _newOwner);drain()
darentuzi/aequalis,client/lib/contracts/TokenContract.sol,"TokenContract(uint supply);sendCoin(address receiver, uint amount)"
gmo-blockchain/solidity,contracts/DataObjectEvent_v1.sol,"create(address _sender, bytes32 _id);remove(address _sender, bytes32 _id);setAllowCnsContract(address _sender, bytes32 _id, address _cns, bytes32 _contractName, bool _isAdded);setOwner(address _sender, bytes32 _id, address _owner);setHash(address _sender, bytes32 _id, address _writer, bytes32 _hash, uint _targetIdx);setReaderId(address _sender, bytes32 _id, bytes32 _readerId);setWriterId(address _sender, bytes32 _id, bytes32 _writerId)"
Majoolr/ethereum-libraries,CrowdsaleLib/DirectCrowdsale/DirectCrowdsaleLib.sol,"receivePurchase(DirectCrowdsaleStorage storage self, uint256 _amount);setTokens(DirectCrowdsaleStorage storage self);withdrawTokens(DirectCrowdsaleStorage storage self);withdrawLeftoverWei(DirectCrowdsaleStorage storage self);withdrawOwnerEth(DirectCrowdsaleStorage storage self);getSaleData(DirectCrowdsaleStorage storage self, uint256 timestamp);getTokensSold(DirectCrowdsaleStorage storage self);crowdsaleActive(DirectCrowdsaleStorage storage self);crowdsaleEnded(DirectCrowdsaleStorage storage self)"
Majoolr/ethereum-libraries,CrowdsaleLib/DirectCrowdsale/truffle/contracts/DirectCrowdsaleLib.sol,"receivePurchase(DirectCrowdsaleStorage storage self, uint256 _amount);setTokens(DirectCrowdsaleStorage storage self);withdrawTokens(DirectCrowdsaleStorage storage self);withdrawLeftoverWei(DirectCrowdsaleStorage storage self);withdrawOwnerEth(DirectCrowdsaleStorage storage self);getSaleData(DirectCrowdsaleStorage storage self, uint256 timestamp);getTokensSold(DirectCrowdsaleStorage storage self);crowdsaleActive(DirectCrowdsaleStorage storage self);crowdsaleEnded(DirectCrowdsaleStorage storage self)"
AugustoL/LifToken,contracts/VestedPayment.sol,changeToken(address newToken);getAvailableTokens();claimTokens(uint256 amount)
windingtree/LifToken,contracts/VestedPayment.sol,changeToken(address newToken);getAvailableTokens();claimTokens(uint256 amount)
DigixGlobal/ethereum-ruby,contracts/Recaster.sol,""
EthWorks/ethereum.rb,contracts/Recaster.sol,""
marekkirejczyk/ethereum.rb,contracts/Recaster.sol,""
LykkeCity/EthereumApiDotNetCore,src/ContractBuilder/contracts/ethContract.sol,"EthCoin(address exchangeContractAddress);cashin(address receiver, uint amount);cashout(address client, address to, uint amount)"
TrueBitFoundation/webasm-solidity,contracts/vmmemory.sol,"toMemory(uint a, uint b);storeN(uint8[] mem, uint addr, uint n, uint v);loadN(uint8[] mem, uint addr, uint n);fromMemory(uint8[] mem);typeSize(uint ty);store(uint8[] mem, uint addr, uint v, uint ty, uint packing);storeX(uint8[] mem, uint addr, uint v, uint hint);load(uint8[] mem, uint addr, uint ty, uint packing, bool sign_extend);loadX(uint8[] mem, uint addr, uint hint);test(uint a, uint b)"
snclucas/ethereum-ipoi,contracts/ipoi.sol,"IPOI(uint feeParam);changeContractFee(uint newFee);createIdea(address ideaOwner, address[] partiesEntry, string descriptionEntry);getIdea(address ideaOwner);getIdeaDate(uint ideaId);getIdeaDescription(uint ideaId);getIdeaParties(uint ideaId);getOwner();ideaProofDocument(bytes IPOIProofHash, uint ideaId);destroy()"
daragao/FirstEthereumExperiment,contracts/Greeter.sol,Greeter(string _greeting);innerGreet();greet()
gleim/DAO,DAO.sol,"receiveEther();newContract(address _newContract);changeAllowedRecipients(address _recipient, bool _allowed);changeProposalDeposit(uint _proposalDeposit);retrieveDAOReward(bool _toMembers);getMyReward();withdrawRewardFor(address _account);transferWithoutReward(address _to, uint256 _amount);halveMinQuorum();numberOfProposals();getNewDAOAddress(uint _proposalID);isBlocked(address _account);unblockMe();receiveEther();closeProposal(uint _proposalID);newContract(address _newContract);retrieveDAOReward(bool _toMembers);getMyReward();withdrawRewardFor(address _account);transfer(address _to, uint256 _value);transferWithoutReward(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);changeProposalDeposit(uint _proposalDeposit);changeAllowedRecipients(address _recipient, bool _allowed);isRecipientAllowed(address _recipient);actualBalance();minQuorum(uint _value);halveMinQuorum();createNewDAO(address _newCurator);numberOfProposals();getNewDAOAddress(uint _proposalID);isBlocked(address _account);unblockMe()"
TheRougeProject/RougeTokens,contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
digitaldonkey/register_drupal_ethereum,contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
SafecontractDev/protocol,contracts/KnownTokens.sol,"KnownTokens(address _etherToken, address _safeToken, address _tokenChanger);recoverPrice(address _fromToken, address _toToken);assert(_fromToken != _toToken);addToken(address _newTokenAddr);containsToken(address _token)"
Great-Hill-Corporation/daodeepdive,assets/contracts/01-DAO.sol,"receiveEther();checkProposalCode(uint _proposalID, address _recipient, uint _amount, bytes _transactionData);vote(uint _proposalID, bool _supportsProposal);executeProposal(uint _proposalID, bytes _transactionData);closeProposal(uint _proposalID);splitDAO(uint _proposalID, address _newCurator);newContract(address _newContract);retrieveDAOReward(bool _toMembers);getMyReward();withdrawRewardFor(address _account);transfer(address _to, uint256 _value);transferWithoutReward(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);transferFromWithoutReward(address _from, address _to, uint256 _value);transferPaidOut(address _from, address _to, uint256 _value);changeProposalDeposit(uint _proposalDeposit);changeAllowedRecipients(address _recipient, bool _allowed);isRecipientAllowed(address _recipient);actualBalance();minQuorum(uint _value);halveMinQuorum();createNewDAO(address _newCurator);numberOfProposals();getNewDAOAddress(uint _proposalID);isBlocked(address _account);unblockMe()"
iam-dev/ERC23,installed_contracts/zeppelin-solidity/contracts/crowdsale/RefundVault.sol,RefundVault(address _wallet);deposit(address investor);close();enableRefunds();refund(address investor)
cgewecke/eth-gas-reporter,mock/contracts/MetaCoin.sol,"sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/external_compile/contracts/MetaCoin.sol,"sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
Quintor/angular-truffle-box,contracts/MetaCoin.sol,"sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
SilentCicero/wafr,src/tests/solidityTests/campaign/tests/test.StandardCampaign.sol,"newContribution(address _campaign, uint256 _value);User();setExpiry(uint _expiry);addTimeToExpiry(uint _timeToAdd);setFundingGoal(uint256 _fundingGoal);getNow();setSrc(address _src);setTrg(address _trg);payForward();test_userSetup();test_standardCampaignConstructionValuesFailsDueToNoParameterValidation();test_testableStandardCampaignAbsolvementAfterPayout();test_testablestandardcampaignDeploymentAndUse();test_testableStandardCampaignContribution();test_testableStandardCampaignPayoutToBeneficiary();test_testableStandardCampaignRefund();test_testableContributionCaseExpectFailure();testThrow_testablePayoutCaseShouldBeFailure();test_standardCampaignDeploymentAndUse()"
Patrick-W-McMahon/Ethereum-Contracts,Ticketing Systems/Ticket.sol,"mortal();Ticket(string _ticketName, uint _startingTickets);transfer(address _to, uint _value);kill();getTicketCount(address _user);consumeTicket(address _user, uint _count)"
Vorxil/MarketStake,contracts/UUID.sol,"setExists(bytes32 id, bool value);new_id();deleteItem(bytes32 id);deleteHelper(bytes32 id)"
ericvrp/SoliditySandbox,app/src/contracts/proof.sol,"proof(bytes32 _hashOfSecret, uint _nLots, uint256 _pricePerLot, uint _feePercentage);tellSecret(string _secret);isCorrectSecret()"
silasdavis/eris-db,tests/jobs_fixtures/app13-binding_abi_using_naming_pattern_and_explicit_abi_fields_single_file/GSFactory.sol,set(uint x);get();create();getLast()
silasdavis/burrow,tests/jobs_fixtures/app13-binding_abi_using_naming_pattern_and_explicit_abi_fields_single_file/GSFactory.sol,set(uint x);get();create();getLast()
eris-ltd/eris-db,tests/jobs_fixtures/app13-binding_abi_using_naming_pattern_and_explicit_abi_fields_single_file/GSFactory.sol,set(uint x);get();create();getLast()
eris-ltd/eris-db,tests/jobs_fixtures/app41-filename-too-long/test.sol,""
tokenai/tokenai-network-token,contracts/MiniMeToken.sol,"transfer(address _to, uint256 _amount);balanceOf(address _owner);approve(address _spender, uint256 _amount);totalSupply();balanceOfAt(address _owner, uint _blockNumber);totalSupplyAt(uint _blockNumber);enableTransfers(bool _transfersEnabled);isContract(address _addr);min(uint a, uint b);claimTokens(address _token, address _claimer)"
DCReum/dcreum.github.io,contracts/monolith/monolith-without-group-auth.sol,"getWorkflowActivity(uint256 workflowId, uint256 activityId);getWorkflowName(uint256 workflowId);getActivityCount(uint256 workflowId);getActivityName(uint256 workflowId, uint256 activityId);isIncluded(uint256 workflowId, uint256 activityId);isExecuted(uint256 workflowId, uint256 activityId);isPending(uint256 workflowId, uint256 activityId);getIncludes(uint256 workflowId, uint256 activityId);getExcludes(uint256 workflowId, uint256 activityId);getResponses(uint256 workflowId, uint256 activityId);getConditions(uint256 workflowId, uint256 activityId);getMilestones(uint256 workflowId, uint256 activityId);getAccountWhitelist(uint256 workflowId, uint256 activityId);isAuthDisabled(uint256 workflowId, uint256 activityId);canExecute(uint256 workflowId, uint256 activityId);execute(uint256 workflowId, uint256 activityId)"
furusiyya/Notary-Platform,contracts/Crowdfunding.sol,"Crowdfunding();buy(address receiver);forwardFunds();multiSigAddress();tokenContractAddress();tokenStoreAddress();fundingStartAt();fundingEndsAt();distinctInvestors();investments();investedAmoun(address _addr);fundingRaised();exchnageRate();isWhiteListed(address _address);getState();updateMultiSig(address _newAddress);updateTokenContractAddr(address _newAddress);updateTokenStore(address _newAddress);updateEndsAt(uint256 _endsAt);updateExchangeRate(uint256 _newRate);updateWhiteList(address _address,bool _status);isCrowdsale();earlyBirds();updateBonuses(address _address,bool _status);getBonus(address _address,uint256 _value);isEarlyBird(address _address);isTokenContract();transferFrom(address _from, address _to, uint256 _value)"
NTRYPlatform/ntry-solidity,contracts/Crowdfunding.sol,"Crowdfunding();buy(address receiver);forwardFunds();multiSigAddress();tokenContractAddress();tokenStoreAddress();fundingStartAt();fundingEndsAt();distinctInvestors();investments();investedAmoun(address _addr);fundingRaised();exchnageRate();isWhiteListed(address _address);getState();updateMultiSig(address _newAddress);updateTokenContractAddr(address _newAddress);updateTokenStore(address _newAddress);updateEndsAt(uint256 _endsAt);updateExchangeRate(uint256 _newRate);updateWhiteList(address _address,bool _status);isCrowdsale();earlyBirds();updateBonuses(address _address,bool _status);getBonus(address _address,uint256 _value);isEarlyBird(address _address);isTokenContract();transferFrom(address _from, address _to, uint256 _value)"
dltdojo/courses,ethereum/solidity/T116_Payable.sol,set(uint x);Foo();kill()
chriseth/dapp-bin,wallet/wallet2.sol,"multiowned();confirmed(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);reorganizeOwners();changeRequirement(uint _newRequired);isOwner(address _addr);daylimit();setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today();changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);Wallet();kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);confirmVerbose(bytes32 _h, address _to, uint _value, bytes _data)"
airalab/core,contracts/robonomics/Liability.sol,setup(XRT _xrt)
SafecontractDev/protocol,contracts/bancor_contracts/interfaces/IOwned.sol,owner();transferOwnership(address _newOwner);acceptOwnership()
SilentCicero/wafr,src/tests/solidityTests/gasUsage/examples/MetaRules.sol,"MetaRules(address _proposalTypeRegisty, address[] _rulesRegistry);hasWon(uint _proposalID);canVote(address _sender, uint _proposalID);canPropose(address _sender);votingWeightOf(address _sender, uint _proposalID)"
etherisc/flightDelay,contracts/FlightDelayControlledContract.sol,setController(address _controller);destruct();setContracts();getContract(bytes32 _id)
AdChain/AdChainRegistry,contracts/historical/StandardToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
kr8os/token-sale-contracts,contracts/StandardToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
Dsummers91/Dist-Trade-2017,installed_contracts/tokens/contracts/StandardToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
duaraghav8/Solium,test/lib/rules/blank-lines/accept/contract.sol,""
Speed-Mining/SMSCoin,token/SmsCoin.sol,"safeDiv(uint a, uint b);totalSupply();balanceOf(address who);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value);allowance(address owner, address spender);SMSCoin();setBonus(uint8 ratio1, uint8 ratio2, uint8 ratio3, uint8 ratio4);calcBonus(uint256 sendingSMSToken);startManualPeriod(uint _saleToken);endPhase();pausePhase();resumePhase();totalSupply();balanceOf(address sender);soldToken();sentBonus();saleCounterThisPhase();setTokenPrice(uint ethRate);setMembershipPrice(uint ethRate);transfer(address _to, uint256 _amount);transferFrom(address _from, address _to, uint256 _amount);approve(address _spender, uint256 _amount);allowance(address _owner, address _spender);transferTokens(address _to, uint256 _amount, uint256 _bonus);giveAways(address _to, uint256 _amount, uint256 _bonus);giveReward(uint256 _amount);checkAddress(address _addr);checkMinBalance(address _addr);addAddress(address _to);drainETH();drainSMS();hardBurnSMS(address _from, uint _amount);getAddress(uint i);getAddressSize()"
web3j/web3j,core/src/main/resources/solidity/ens/PublicResolver.sol,"PublicResolver(AbstractENS ensAddr);supportsInterface(bytes4 interfaceID);addr(bytes32 node);setAddr(bytes32 node, address addr);content(bytes32 node);setContent(bytes32 node, bytes32 hash);name(bytes32 node);setName(bytes32 node, string name);ABI(bytes32 node, uint256 contentTypes);setABI(bytes32 node, uint256 contentType, bytes data);pubkey(bytes32 node);setPubkey(bytes32 node, bytes32 x, bytes32 y);text(bytes32 node, string key);setText(bytes32 node, string key, string value)"
PeculiumPCL/Peculium,contracts/v1.2/PrivateSale.sol,PrivateSale();InitPeculiumAdress(address peculAdress);buyTokens(address beneficiary);forwardFunds();claimRefund();goalReached();finalize();finalization()
PeculiumPCL/Peculium,contracts/v1.1/PrivateSale.sol,PrivateSale();InitPeculiumAdress(address peculAdress);buyTokens(address beneficiary);forwardFunds();claimRefund();goalReached();finalize();finalization()
gmo-blockchain/solidity,contracts/VersionLogic.sol,""
daostack/daostack,contracts/test/ARCGenesisProtocolCallbacksMock.sol,"propose(bytes32 _proposalId, Avatar _avatar, address _votingMachine)"
besttests/ethereum,spec/contracts/exchange.sol,"nominate(address _keyholder, address _executive);open();nominate(address _keyholder, address _executive);open();close();deposit(hash _id);refill();withdraw(address _to, uint _value);drain(address _to, uint _value)"
asseth/dao1901,archive_hackaton_blockfest/truffle/contracts/Dao1901.sol,"getMemberSince(address addr);getMemberPayed(address addr);getMemberCanVote(address addr);getMemberRole(address addr);getMemberAdresse(uint id);getMembersLength();setBureau(address _secretary, address _president, address _treasurer);createMember(address _address, bool _payed, bool _vote);votePreProposal(uint _id);sendProposal(string _proposalContent)"
dbrainio/Soltsice,contracts/Storage.sol,"getUIntValue(bytes32 record);setUIntValue(bytes32 record, uint value);getStringValue(bytes32 record);setStringValue(bytes32 record, string memory value);getAddressValue(bytes32 record);setAddressValue(bytes32 record, address value);getBytesValue(bytes32 record);setBytesValue(bytes32 record, bytes memory value);getBooleanValue(bytes32 record);setBooleanValue(bytes32 record, bool value);getIntValue(bytes32 record);setIntValue(bytes32 record, int value);produce()"
DigixGlobal/ethereum-ruby,contracts/classic/QueueSample.sol,"length(Queue storage q);capacity(Queue storage q);push(Queue storage q, uint data);pop(Queue storage q);QueueUserMayBeDeliveryDroneCotnrol();addRequest(uint d);popRequest();queueLength()"
EthWorks/ethereum.rb,contracts/classic/QueueSample.sol,"length(Queue storage q);capacity(Queue storage q);push(Queue storage q, uint data);pop(Queue storage q);QueueUserMayBeDeliveryDroneCotnrol();addRequest(uint d);popRequest();queueLength()"
marekkirejczyk/ethereum.rb,contracts/classic/QueueSample.sol,"length(Queue storage q);capacity(Queue storage q);push(Queue storage q, uint data);pop(Queue storage q);QueueUserMayBeDeliveryDroneCotnrol();addRequest(uint d);popRequest();queueLength()"
rootprojectco/backend,contracts/reservation/IouRootsReservationToken.sol,"IouRootsReservationToken(string _name, string _symbol, uint8 _decimals);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value)"
jaakmusic/go-ethereum,swarm/services/chequebook/contract/chequebook.sol,""
protofire/solhint,e2e/03-no-empty-blocks/Foo.sol,""
Sjors/dao-challenge,contracts/dao-challenge-spec.sol,setUp();testStoresChallengeOwner();testInitialEtherBalanceShouldBeZero();setUp();setUp();setUp();setUp()
pipermerriam/ethereum-alarm-clock,contracts/TransactionRequestCore.sol,"execute();cancel();claim();requestData();callData();proxy(address _to, bytes _data);refundClaimDeposit();sendFee();sendBounty();sendOwnerEther();sendOwnerEther(address recipient)"
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs5.sol,"addThing(string description, string url, bytes32 filehash, string filename)"
eris-ltd/eris,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs5.sol,"addThing(string description, string url, bytes32 filehash, string filename)"
monax/monax,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs5.sol,"addThing(string description, string url, bytes32 filehash, string filename)"
eris-ltd/eris-cli,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs5.sol,"addThing(string description, string url, bytes32 filehash, string filename)"
monax/cli,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs5.sol,"addThing(string description, string url, bytes32 filehash, string filename)"
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs5.sol,"addThing(string description, string url, bytes32 filehash, string filename)"
frozeman/ethereum-smart-contracts,wallet/wallet.sol,"multiowned();revoke(bytes32 _operation);confirmed(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);reorganizeOwners();clearPending();changeRequirement(uint _newRequired);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);daylimit();setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today();changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);Wallet(bytes32 identifier);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);clearPending();confirmVerbose(bytes32 _h, address _to, uint _value, bytes _data)"
MarketProject/MarketProtocol,test/libraries/TestMathLib.sol,testSign();testIsSameSign();testAbs();testAbsMin();testAbsMax();failSubtractWhenALessThanB();testSubtract();failSafeAddWhenGreaterThanIntMax();testSafeAdd();failDivideFractionalByZero();testDivideFractional();testCalculateNeededCollateralLong();testCalculateNeededCollateralShort();testCalculateTotalCollateralSingleUnit();testCalculateTotalCollateralMultipleUnit();failCalculatingTotalCollateralWithAbnormalPrices();testCalculateTotalCollateralWithAbnormalPrices();testCalculateFeePerUnit()
web3j/web3j,codegen/src/test/resources/solidity/complexstorage/ComplexStorage.sol,"setFoo(Foo memory _toSet);setBar(Bar memory _toSet);setFuzz(Fuzz memory _toSet);setBaz(Baz memory _toSet);setBoz(Boz memory _toSet);setNuu(Nuu memory _toSet);setNaz(Naz memory _naz);setWiz(Wiz memory _toSet);getFoo();getBar();getFuzz();getNaz();getWiz();getFooBar();getFooBarNaz();getFooUint();getMultipleFoo();getStaticMultipleFoo();idNarBarFooArrays(Nar[3] memory a, Bar[3] memory b, Foo[] memory c, Nar[] memory d, Foo[3] memory e);getNarBarFooArrays()"
kieranelby/dapp-test-runner,contracts/DTRContracts.sol,"reject();DTRExpensiveWallet(uint256 eatGasAmount_);spend(address dst, uint256 val);spendWithGas(address dst, uint256 val, uint256 extraGasAmount);spendWithGasAndData(address dst, uint256 val,uint256 extraGasAmount, bytes callData);kill()"
o0ragman0o/ITT,ITT.sol,"spread(bool _side);getAmount(uint _price, address _trader);getPriceVolume(uint _price);getBook();withdraw(uint _ether);cancel(uint _price);setTrading(bool _trading);etherBalanceOf(address _addr);spread(bool _side);getAmount(uint _price, address _trader);sizeOf(uint l);getPriceVolume(uint _price);getBook();numOrdersOf(address _addr);getOpenOrdersOf(address _addr);getNode(uint _list, uint _node);withdraw(uint _ether);cancel(uint _price);setTrading(bool _trading);make(TradeMessage tmsg);cancelIntl(TradeMessage tmsg);closeOrder(uint _price, address _trader)"
dltdojo/courses,ethereum/service/oracle/T110_DailyPriceOracles.sol,update(bytes32 _newCurrent);current();update(bytes32 _newCurrent);current();oracleCurrentInt();update(uint _newCurrent);current();mbtcToUsd(uint _value)
promethe42/cocorico,contract/Vote.sol,Vote(uint8 _numProposals);registerVoter(address voterAddress);vote(uint8 proposal);cancelVote();getVoteResults();end()
WingsDao/contracts,contracts/MultiSigWallet/MultiSigWallet.sol,"MultiSigWallet(address[] _owners, uint _required);addOwner(address owner);removeOwner(address owner);replaceOwner(address owner, address newOwner);changeRequirement(uint _required);submitTransaction(address destination, uint value, bytes data);confirmTransaction(uint transactionId);revokeConfirmation(uint transactionId);executeTransaction(uint transactionId);isConfirmed(uint transactionId);addTransaction(address destination, uint value, bytes data);getConfirmationCount(uint transactionId);getTransactionCount(bool pending, bool executed);getOwners();getConfirmations(uint transactionId);getTransactionIds(uint from, uint to, bool pending, bool executed)"
RealEstateAssetLedger/real_contract,contracts/mocks/DevTokensHolderMock.sol,"DevTokensHolderMock(address _owner, address _contribution, address _real);getTime();setMockedTime(uint _t)"
keith24/eth-mixer,contracts/mixer.sol,"Mixer();showUserBalance(address user);deposit();withdraw(address output, uint amount)"
digitalthailand/course-blockchain-4-dev,examples/Bank.sol,Bank();deposit();withdraw(uint amount);remove()
SilentCicero/wafr,src/tests/solidityTests/gasUsage/BoardRoom.sol,"newProposal(string _name, address _proxy, uint _debatePeriod, address _destination, uint _value, bytes _calldata);vote(uint _proposalID, uint _position);execute(uint _proposalID, bytes _calldata);changeRules(address _rules);voterAddressOf(uint _proposalID, uint _voteID);numVoters(uint _proposalID);positionWeightOf(uint _proposalID, uint _position);voteOf(uint _proposalID, address _voter);hasVoted(uint _proposalID, address _voter);destinationOf(uint _proposalId);proxyOf(uint _proposalId);valueOf(uint _proposalId);hashOf(uint _proposalId);debatePeriodOf(uint _proposalId);createdOn(uint _proposalId);createdBy(uint _proposalId);BoardRoom(address _rules);newProposal(string _name, address _proxy, uint _debatePeriod, address _destination, uint _value, bytes _calldata);vote(uint _proposalID, uint _position);execute(uint _proposalID, bytes _calldata);changeRules(address _rules);destructSelf(address _destination);positionWeightOf(uint _proposalID, uint _position);voteOf(uint _proposalID, address _voter);voterAddressOf(uint _proposalID, uint _voteID);numVoters(uint _proposalID);numProposals();hasVoted(uint _proposalID, address _voter);destinationOf(uint _proposalId);proxyOf(uint _proposalId);valueOf(uint _proposalId);hashOf(uint _proposalId);debatePeriodOf(uint _proposalId);createdOn(uint _proposalId);createdBy(uint _proposalId)"
mertsev/blockchain-escrow,contracts/srpurchase.sol,Purchase();abort();confirmPurchase();confirmReceived()
flypme/flypme-contracts,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
PeculiumPCL/Peculium,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
TeamPeggle/pegglecoin,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
CoMakery/comakery-ethereum,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
kryptopy1/crowdsale,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
chrisdotn/jsmnSol,test/TestErrors.sol,testTooFewTokens()
InventionRegistry/buildingBloX,contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalance(address addr)"
mixbytes/storiqa_ico,contracts/token/CirculatingToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);enableCirculation()"
Storiqa/ico_smart_contract,contracts/token/CirculatingToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);enableCirculation()"
Neufund/Contracts,contracts/lib/IToken.sol,""
lightswarm124/ethereumjs-sandbox,contracts/sol/drugs.sol,approve(address physician)
melonproject/protocol,contracts/fund/hub/SpokeCallee.sol,__getFeeManager();__getHub();__getPolicyManager();__getPriceSource();__getRegistry();__getShares();__getValueInterpreter();__getVault()
tonymichaelhead/Legatum,LegatumClient/contracts/will.sol,"will();setWillContents(address owner, bytes uploadedText);getWillData()"
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/lifecycle/TokenDestructible.sol,destroy(address[] _tokens)
ixofoundation/tge-server,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Neurone/persians,contracts/Owned.sol,Owned()
Atzen2/hacking-law-proto,truffle/contracts/PLAgreements.sol,"PLAgreements(address _eAAdress, address _agencyWallet);addPA(string _plArgName, string _emplyrName, string _manuName, address _manuWalletAdress, address _manuAdress, uint32 _emplyeHWage, uint32 _emplyeHours, address _emplyeAdress, address _emplyeWalletAdress, uint32 _eAid, string _attachment);signPA(uint32 _id);removePA(uint32 _id);getPAAttributes(uint32 _id);isPASigned(uint32 _id)"
boisde/Greed_Island,party/contracts-crued/interfaces/external/IWETH.sol,deposit()
Fukunaga42/dether,contracts/DetherTx.sol,DetherTx()
chentschel/ethgames-contracts,contracts/Withdrawable.sol,withdraw()
mdmshf/Komhar,testingContracts2.sol,greet();getBlockNumber();setGreeting(string _newgreeting);kill()
e-nettet/CustomerConsentWallet,contracts/Greeter.sol,"Mortal();kill();greet(address to, string greeting)"
stanta/darfchain,ICO/contracts/FlatPricing.sol,"FlatPricing(uint _oneTokenInWei);calculatePrice(uint value, uint weiRaised, uint tokensSold, address msgSender, uint decimals)"
lepsalex/Mansplaining,Smart Contracts/contracts/MPGame.sol,"MPGame(uint8 initPoints);addPlayer(bytes32 playerEmail, bytes32 playerName, bytes6 playerColour);awardPoint(bytes32 playerEmail);getPlayerPoints(bytes32 playerEmail);getPointsBalance();startGame()"
kowala-tech/kUSD,client/contracts/bindings/consensus/testfiles/contracts/Compatible.sol,test()
finhaus/training,SydEth/public/truffleDemo/contracts/SydEth.sol,"getLength();findCertificate(bytes _beneficiaryName);getCertificate(uint index);changeName(bytes _beneficiaryName, bytes _newName);stringsEqual(bytes storage _a, bytes memory _b)"
Pavel-DV/ChronoMint,old/Owned.sol,"Owned();addContractOwner(address _to);claimContractOwnership();isOwner(address add);forwardCall(address _to, uint _value, bytes _data)"
bshevchenko/ChronoMint,old/Owned.sol,"Owned();addContractOwner(address _to);claimContractOwnership();isOwner(address add);forwardCall(address _to, uint _value, bytes _data)"
Yann-Liang/browser-solidity,contracts/src/leasing.sol,Vote(uint8 _numProposals);Vote(uint8 _numProposals)
serapath-contribution/browser-solidity,contracts/src/leasing.sol,Vote(uint8 _numProposals);Vote(uint8 _numProposals)
makerdao/keeper,tests/abi/OasisMockPriceOracle.sol,"setPrice(address, uint256 _price);getPriceFor(address, address, uint256)"
vanderheijden86/p2politics,test/TestVotes.sol,testVote();getVote();testHasRole();testChangeRole()
SafeContracts/TREX-token,AbstractCampaign.sol,name();contributeMethodABI();refundMethodABI();payoutMethodABI();beneficiary();expiry();fundingGoal();amountRaised()
OpenSTFoundation/SimpleTokenSale,contracts/TokenSaleMock.sol,"TokenSaleMock(SimpleToken _tokenContract, Trustee _trustee, address _wallet, uint256 _currentTime);currentTime();changeTime(uint256 _newTime)"
jellegerbrandy/daostack,contracts/zeppelin-solidity/Ownable.sol,Ownable();transfer(address newOwner)
DeerLi/EtherContracts,contracts/Bonus.sol,"Bonus(uint _totalToken, uint _payTime);kill();getOwner();register(address _member, uint _token);getMemberBonus(address _member);claimBonus()"
PeculiumPCL/Peculium,contracts/v0.6/Peculium.sol,"Peculium();receiveEtherFormOwner();sendEtherToOwner();buyTokens(address beneficiary, uint256 weiAmount);sendTokenUpdate(address toAddress, uint256 amountTo_Send);buyTokenPreIco(address toAddress, uint256 _vamounts);buyTokenIco(address toAddress, uint256 _vamounts);buyTokenPostIco(address toAddress, uint256 _vamounts);approveAndCall(address _spender, uint256 _value, bytes _extraData);getBlockTimestamp();teamPayment(address teamaddr);payBountyManager();airdropsTokens(address[] _vaddr, uint256[] _vamounts);payBounties(address[] _vaddr, uint256[] _vamounts);stopAssign();restartAssign();getOwnerInfos();finalize();getEtherBalance();killContract()"
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.4.24/structReentrant.sol,bla(address a);bla();bli(Voter storage x)
soad003/browser-solidity,test/staticanalysis/test-contracts/structReentrant.sol,bla(address a);bla();bli(Voter storage x)
ConsenSys/dapp-store-contracts,contracts/DeveloperModel.sol,"DeveloperModel(SimpleIndex _address_index);create(uint[101][] attributes);validate(address sender, uint id, uint[101][] attributes);add_rating(uint id, uint rating);id_for_address(address _address);replace(address replacement)"
boisde/Greed_Island,party/contracts/mocks/StandardTokenMock.sol,""
montyly/manticore,tests/ethereum/contracts/detectors/delegatecall_ok.sol,"set(Data storage self, uint new_val)"
trailofbits/manticore,tests/ethereum/contracts/detectors/delegatecall_ok.sol,"set(Data storage self, uint new_val)"
duaraghav8/Solium,test/lib/rules/imports-on-top/fixes/before-pragma.sol,""
pash7ka/zeppelin-solidity,contracts/crowdsale/RefundableCrowdsale.sol,RefundableCrowdsale(uint256 _goal);forwardFunds();claimRefund();finalization();goalReached()
readevalprint/aragon-core,contracts/zeppelin/crowdsale/RefundableCrowdsale.sol,RefundableCrowdsale(uint256 _goal);forwardFunds();claimRefund();finalization();goalReached()
pz7/liquet,node_modules/zeppelin-solidity/contracts/crowdsale/RefundableCrowdsale.sol,RefundableCrowdsale(uint256 _goal);forwardFunds();claimRefund();finalization();goalReached()
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/crowdsale/RefundableCrowdsale.sol,RefundableCrowdsale(uint256 _goal);forwardFunds();claimRefund();finalization();goalReached()
dmx374/zeppelin-solidity,contracts/crowdsale/RefundableCrowdsale.sol,RefundableCrowdsale(uint256 _goal);forwardFunds();claimRefund();finalization();goalReached()
cashpokerpro-dev/cash-smartcontracts,contracts/crowdsale/RefundableCrowdsale.sol,RefundableCrowdsale(uint256 _goal);forwardFunds();claimRefund();finalization();goalReached()
cinderblockchain/cindertoken,contracts/crowdsale/RefundableCrowdsale.sol,RefundableCrowdsale(uint256 _goal);forwardFunds();claimRefund();finalization();goalReached()
KudosProject/kudos-token,contracts/KudosTokenSale.sol,"KudosTokenSale(address _wallet, uint256 _startTime, address _tokenContractAddress);tokensAvailable();isActive();isAfterStartTime();isBeforeEndTime();tokensAreAvailable();buyTokens();getWeiValue();transferWeiToWallet(uint256 weiValue);issueTokensToBuyer(uint256 weiValue);getNumberOfTokensToIssue(uint256 weiValue);issueRefundIfNecessary(uint256 weiValue);unregisterUsers(address[] _users);setParticipationCap(address[] _users, uint256 _cap);endTokenSale()"
Communication-Systems-Group/solidity-examples,example3.sol,"get(uint nr);set(uint nr, string addr)"
wscoliver/ethpipeline,contracts/swap2.sol,""
GovernX/governx-contracts,src/contracts/utils/ControllerExtended.sol,"latestSenderOf(uint256 _proposalID);executionTimeOf(uint256 _proposalID);executionBlockOf(uint256 _proposalID);destinationOf(uint256 _proposalID, uint256 _startPosition);valueOf(uint256 _proposalID, uint256 _startPosition);lengthOf(uint256 _proposalID, uint256 _startPosition);dataOf(uint256 _proposalID, uint256 _startPosition);signatureOf(uint256 _proposalID, uint256 _startPosition)"
TrueBitFoundation/webasm-solidity,contracts/interactive.sol,"judgeCustom(bytes32 state1, bytes32 state2, bytes32 ex_state, uint ex_reg, bytes32 op, uint[4] regs, bytes32[10] roots, uint[4] pointers, bytes32[] proof);checkFileProof(bytes32 state, bytes32[10] roots, uint[4] pointers, bytes32[] proof, uint loc);checkProof(bytes32 hash, bytes32 root, bytes32[] proof, uint loc);calcStateHash(bytes32[10] roots, uint[4] pointers);calcIOHash(bytes32[10] roots);init(bytes32 state, uint state_size, uint r3, address solver, address verifier);clock(bytes32 id);resolved(bytes32 id, bytes32 state, uint size);registerJudge(uint64 id, address addr);make(uint taskID, address solver, address verifier, bytes32 startStateHash, bytes32 endStateHash, uint256 size, uint timeout);status(bytes32 gameID);ccStateHash(bytes32[10] roots, uint[4] pointers);initialize(bytes32 gameID, bytes32[10] s_roots, uint[4] s_pointers, uint _steps, bytes32[10] e_roots, uint[4] e_pointers);getDescription(bytes32 gameID);getChallenger(bytes32 gameID);getProver(bytes32 gameID);getIndices(bytes32 gameID);getTask(bytes32 gameID);deleteChallenge(bytes32 id);checkTimeout(bytes32 gameID);gameOver(bytes32 gameID);clock(bytes32 gameID);isRejected(uint gameID);blockedTime(uint gameID);getIter(bytes32 gameID);report(bytes32 gameID, uint i1, uint i2, bytes32[] arr);getStateAt(bytes32 gameID, uint loc);query(bytes32 gameID, uint i1, uint i2, uint num);getStep(bytes32 gameID, uint idx);postPhases(bytes32 gameID, uint i1, bytes32[13] arr);getResult(bytes32 gameID);selectPhase(bytes32 gameID, uint i1, bytes32 st, uint q);getState(bytes32 gameID);getPhase(bytes32 gameID);getWinner(bytes32 gameID);callJudge(bytes32 gameID, uint i1, uint q, bytes32[] proof, bytes32[] proof2, bytes32 vmHash, bytes32 op, uint[4] regs, bytes32[10] roots, uint[4] pointers);resolveCustom(bytes32 gameID);callCustomJudge(bytes32 gameID, uint i1, bytes32 op, uint[4] regs, bytes32 custom_result, uint custom_size, bytes32[] custom_proof, bytes32[10] roots, uint[4] pointers);checkFileProof(bytes32 state, bytes32[10] roots, uint[4] pointers, bytes32[] proof, uint loc);checkProof(bytes32 hash, bytes32 root, bytes32[] proof, uint loc);calcStateHash(bytes32[10] roots, uint[4] pointers)"
iam-dev/ERC23,contracts/example/ExampleReceiver.sol,foo(/*uint i*/);supportsToken()
TruLtd/tru-reputation-token,contracts/test-helpers/MockSale.sol,mockBuy();mockWhiteList()
lifechange-io/christ-coin,contracts/ChristCoin.sol,"setController(address _address);balanceOf(address _owner);totalSupply();transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);approve(address _spender, uint _value);allowance(address _owner, address _spender);burn(uint _amount);controllerTransfer(address _from, address _to, uint _value);controllerApproval(address _from, address _spender, uint _value)"
redsquirrel/augur-core,src/legacy_reputation/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
WeiFund/WeiFund,contracts/MultiServiceFactory.sol,"newCampaign(uint _campaignID, address _owner, uint _fundingGoal);contribute(uint _campaignID, address _contributor, address _beneficiary, uint _amountContributed);refund(uint _campaignID, address _contributor, uint _amountRefunded);payout(uint _campaignID, uint _amountPaid);newCampaign(string _name, address _beneficiary, uint _fundingGoal, uint _expiry, address _config);contribute(uint _campaignID, address _beneficiary);refund(uint _campaignID, uint _contribution);payout(uint _campaignID);operatorCampaignID(address _operator, uint _campaignIndex);totalCampaignsBy(address _operator);totalContributionsBy(uint _campaignID, address _contributor);totalCampaigns();contributionAt(uint _campaignID, uint _contributionID);createdAt(uint _campaignID);contributionID(uint _campaignID, address _contributor, uint _contributionIndex);ownerOf(uint _campaignID);beneficiaryOf(uint _campaignID);configOf(uint _campaignID);amountRaisedBy(uint _campaignID);fundingGoalOf(uint _campaignID);expiryOf(uint _campaignID);totalContributors(uint _campaignID);isContributor(uint _campaignID, address _contributor);isOwner(uint _campaignID, address _owner);hasFailed(uint _campaignID);isSuccess(uint _campaignID);isPaidOut(uint _campaignID);totalRefunded(uint _campaignID);isRefunded(uint _campaignID);MultiService(address _weifund, address[] _services);newCampaign(uint _campaignID, address _owner, uint _fundingGoal);contribute(uint _campaignID, address _contributor, address _beneficiary, uint _amountContributed);refund(uint _campaignID, address _contributor, uint _amountRefunded);payout(uint _campaignID, uint _amountPaid);addService(address _service);ownerOf(address _service);isService(address _service);MultiServiceFactory(address _weifund);newMultiService(address[] _services)"
kowala-tech/kUSD,client/contracts/truffle/contracts/utils/Strings.sol,"memcpy(uint dest, uint src, uint len);toSlice(string self);len(bytes32 self);copy(slice self);toString(slice self);len(slice self);empty(slice self);compare(slice self, slice other);equals(slice self, slice other);nextRune(slice self, slice rune);nextRune(slice self);ord(slice self);keccak(slice self);startsWith(slice self, slice needle);beyond(slice self, slice needle);endsWith(slice self, slice needle);until(slice self, slice needle);findPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);rfindPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);find(slice self, slice needle);rfind(slice self, slice needle);split(slice self, slice needle, slice token);split(slice self, slice needle);rsplit(slice self, slice needle, slice token);rsplit(slice self, slice needle);count(slice self, slice needle);contains(slice self, slice needle);concat(slice self, slice other);join(slice self, slice[] parts)"
ethers/pyepm,test/fixtures/config.sol,"owned();kill();register(uint id, address service);unregister(uint id);lookup(uint service)"
pipermerriam/populus,tests/fixtures/ThrowsInConstructor.sol,ThrowsInConstructor(bool shouldThrow)
zchn/ethereum-analyzer,examples/co2.unica.it/ethereum/SimpleDAO_0.4.2.sol,donate(address to);withdraw(uint amount);queryCredit(address to);Mallory(SimpleDAO addr);getJackpot();attack();getJackpot()
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/MultisigWallet.sol,"MultisigWallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);setDailyLimit(uint _newLimit);resetSpentToday();clearPending()"
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/MultisigWallet.sol,"MultisigWallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);setDailyLimit(uint _newLimit);resetSpentToday();clearPending()"
silasdavis/eris-db,tests/jobs_fixtures/app28-multiple_imports_single_contract/storage.sol,"setString(string memory x1, string memory x2)"
silasdavis/burrow,tests/jobs_fixtures/app28-multiple_imports_single_contract/storage.sol,"setString(string memory x1, string memory x2)"
eris-ltd/eris-db,tests/jobs_fixtures/app28-multiple_imports_single_contract/storage.sol,"setString(string memory x1, string memory x2)"
aragon/aragon-core,contracts/evmscript/executors/BaseEVMScriptExecutor.sol,""
aragon/aragon-core,contracts/apps/AppStorage.sol,kernel();appId();setKernel(IKernel _kernel);setAppId(bytes32 _appId)
Dicoiner/irianna-solidity,contracts/crowdsale/CappedCrowdsale.sol,CappedCrowdsale(uint256 _cap);validPurchase();hasEnded()
aragon/aragon-core,contracts/test/mocks/UpgradedKernel.sol,isUpgraded()
raineorshine/solgraph,test/in/Emit.sol,deposit(bytes32 _id)
melonproject/protocol,contracts/fund/fees/PerformanceFee.sol,addFundSettings(bytes calldata _encodedSettings);identifier();payoutSharesOutstanding();settle(bytes calldata);payoutAllowed(address _feeManager)
aragon/aragon-core,contracts/test/mocks/EVMScriptExecutorMock.sol,"execScript(bytes, bytes, address[]);executorType()"
Souptacular/motivate-dapp,contracts/libraries/oraclizeAPI.sol,"query(uint _timestamp, string _datasource, string _arg);query_withGasLimit(uint _timestamp, string _datasource, string _arg, uint _gaslimit);getPrice(string _datasource);getPrice(string _datasource, uint gaslimit);useCoupon(string _coupon);setProofType(byte _proofType);getAddress();oraclize_query(string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2, uint gaslimit);oraclize_cbAddress();oraclize_setProof(byte proofP);parseAddr(string _a);strCompare(string _a, string _b);indexOf(string _haystack, string _needle);strConcat(string _a, string _b);parseInt(string _a);parseInt(string _a, uint _b)"
iivvoo/ethic,minimal2.sol,get()
etherisc/flightDelay,test-available/Test_FlightDelayLedger.sol,testControllerShouldBeSet();testAccessPermissions();testSetPermissions()
pipermerriam/populus,tests/fixtures/immortal.sol,kill()
cryptape/cita,scripts/contracts/src/user_management/GroupCreator.sol,"createGroup(address _parent, bytes32 _name, address[] _accounts)"
Cryptonomica/cryptonomica,src/main/webapp/cryptoshares/contracts/CryptonomicaVerificationMockUp.sol,verification(address);keyCertificateValidUntil(address _address);revokedOn(address _address)
Cryptonomica/cryptonomica,src/main/webapp/bills-of-exchange/contracts/CryptonomicaVerificationMockUp.sol,verification(address);keyCertificateValidUntil(address _address);revokedOn(address _address)
anzheng67/rosca-contracts,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
WeTrustPlatform/rosca-contracts,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Majoolr/ethereum-libraries,CrowdsaleLib/IICOLib/truffle/contracts/CrowdsaleLib.sol,"crowdsaleActive(CrowdsaleStorage storage self);crowdsaleEnded(CrowdsaleStorage storage self);validPurchase(CrowdsaleStorage storage self);withdrawTokens(CrowdsaleStorage storage self);withdrawLeftoverWei(CrowdsaleStorage storage self);withdrawOwnerEth(CrowdsaleStorage storage self);setTokens(CrowdsaleStorage storage self);getSaleData(CrowdsaleStorage storage self, uint256 timestamp);getTokensSold(CrowdsaleStorage storage self)"
Majoolr/ethereum-libraries,CrowdsaleLib/DirectCrowdsale/truffle/contracts/CrowdsaleLib.sol,"crowdsaleActive(CrowdsaleStorage storage self);crowdsaleEnded(CrowdsaleStorage storage self);validPurchase(CrowdsaleStorage storage self);withdrawTokens(CrowdsaleStorage storage self);withdrawLeftoverWei(CrowdsaleStorage storage self);withdrawOwnerEth(CrowdsaleStorage storage self);setTokens(CrowdsaleStorage storage self);getSaleData(CrowdsaleStorage storage self, uint256 timestamp);getTokensSold(CrowdsaleStorage storage self)"
Majoolr/ethereum-libraries,CrowdsaleLib/CrowdsaleLib.sol,"crowdsaleActive(CrowdsaleStorage storage self);crowdsaleEnded(CrowdsaleStorage storage self);validPurchase(CrowdsaleStorage storage self);withdrawTokens(CrowdsaleStorage storage self);withdrawLeftoverWei(CrowdsaleStorage storage self);withdrawOwnerEth(CrowdsaleStorage storage self);setTokens(CrowdsaleStorage storage self);getSaleData(CrowdsaleStorage storage self, uint256 timestamp);getTokensSold(CrowdsaleStorage storage self)"
Majoolr/ethereum-libraries,CrowdsaleLib/EvenDistroCrowdsale/truffle/contracts/CrowdsaleLib.sol,"crowdsaleActive(CrowdsaleStorage storage self);crowdsaleEnded(CrowdsaleStorage storage self);validPurchase(CrowdsaleStorage storage self);withdrawTokens(CrowdsaleStorage storage self);withdrawLeftoverWei(CrowdsaleStorage storage self);withdrawOwnerEth(CrowdsaleStorage storage self);setTokens(CrowdsaleStorage storage self);getSaleData(CrowdsaleStorage storage self, uint256 timestamp);getTokensSold(CrowdsaleStorage storage self)"
ethereum/dapp-bin,registrar/ICAPRegistrar.sol,"reserve(bytes32 _name);disown(bytes32 _name, address _refund);setOwner(bytes32 _name, address _newOwner);setAddr(bytes32 _name, address _a);addr(bytes32 _name);owner(bytes32 _name)"
MarketProject/MarketProtocol,contracts/MarketCollateralPool.sol,"withdrawFees(address feeTokenAddress, address feeRecipient);setMKTTokenAddress(address mktTokenAddress);setMarketContractRegistryAddress(address marketContractRegistryAddress)"
erooijak/ethlance,resources/public/contracts/src/mortal.sol,kill()
daostack/daostack,contracts/universalSchemes/OrganizationRegister.sol,"setParameters(IERC20 _token, uint256 _fee, address _beneficiary);addOrPromoteAddress(Avatar _avatar, address _record, uint256 _amount);getParametersHash(IERC20 _token, uint256 _fee, address _beneficiary)"
DonorToken/DonorToken,contracts/MDTCrowdsale.sol,MDTCrowdsale(address _tokenAddr);createTokenContract()
mixbytes/storiqa_ico,contracts/ownership/SimpleMultiSigWallet.sol,"SimpleMultiSigWallet(address[] _owners, uint _signaturesRequired);sendEther(address to, uint value)"
Storiqa/ico_smart_contract,contracts/ownership/SimpleMultiSigWallet.sol,"SimpleMultiSigWallet(address[] _owners, uint _signaturesRequired);sendEther(address to, uint value)"
stanta/darfchain,ICO/contracts/UpgradeableToken.sol,UpgradeableToken(address _upgradeMaster);upgrade(uint256 value);setUpgradeAgent(address agent);getUpgradeState();setUpgradeMaster(address master);canUpgrade()
DRI-project/RICO,contracts/PoDs/PublicSalePoD.sol,PublicSalePoD();processDonate(address _user);finalize();getBalanceOfToken(address _user)
cgewecke/solcover,test/sources/statements/library.sol,flip(Value storage self);not()
JoinColony/solcover,test/sources/statements/library.sol,flip(Value storage self);not()
KudosProject/kudos-token,contracts/TokenHolder.sol,""
TrueBitFoundation/webasm-solidity,contracts/ipfs.sol,"submitBlock(bytes32 file_id);solved(uint id, bytes32[] files);load(string ipfshash);clock(bytes32 root);init(bytes32 state, uint state_size, uint /* r3 */, address solver, address verifier);clock(bytes32 id);arrange(bytes str);resolveName(bytes32 id, string ipfs_hash, uint sz);resolveBlock(bytes32 id, bytes32 block_hash, uint block_size);resolved(bytes32 id, bytes32 state, uint size);fileMerkle(bytes32[] arr, uint idx, uint level)"
BeBlockTech/Anemoi,BeBlockTech/crowdsale.sol,"owned();transferOwnership(address newOwner);receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);transferFrom(address _from, address _to, uint256 _value);Association(Token sharesAddress, uint minimumSharesToPassAVote, uint minutesForDebate);changeVotingRules(Token sharesAddress, uint minimumSharesToPassAVote, uint minutesForDebate);executeProposal(uint proposalNumber, bytes transactionBytecode)"
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/Claimable.sol,transferOwnership(address newOwner);claimOwnership()
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/Claimable.sol,transferOwnership(address newOwner);claimOwnership()
AragonOne/zeppelin-solidity,contracts/ownership/Claimable.sol,transferOwnership(address newOwner);claimOwnership()
rootprojectco/backend,contracts/ProjectValidation.sol,"sign();checkerSign(bool signature);stopCollectSignatures();getWorkerBalance(address worker);tryToCompleteProject();tryToCloseProject();sendTokensToWorkers(uint8 _start, uint8 _end);sendTokensBack();changeWorkerBalance(address worker, uint amount)"
ryepdx/etherlab,lib/base/protectedApi.sol,"ProtectedApi(address permissionsProvider);getPermissionsProvider();setPermissionsProvider(address provider);addContract(string32 name, address newContract);removeContract(string32 name);remove();_permitted()"
daostack/daostack,contracts/test/ActionMock.sol,"test(uint256 _a, address _b, bytes32 _c);withoutReturnValue(address _addr);setActivationTime(uint _activationTime)"
FedCoup/FedCoup,installed_contracts/ds-auth/contracts/DSAuthEvents.sol,""
Cryptonomica/cryptonomica,src/main/webapp/app/ethidtokens/EthID2.sol,"add(uint256 a, uint256 b);sub(uint256 a, uint256 b);mul(uint256 a, uint256 b);div(uint256 a, uint256 b);mod(uint256 a, uint256 b);onTokenTransfer(address from, uint256 amount, bytes calldata data);tokenFallback(address _from, uint _value, bytes calldata _data);changeOwnerStart(address payable _newOwner);changeOwnerAccept();takeIncomeShare(uint256 valueInTokens);withdrawAllByOwner();transferFrom(address _from, address _to, uint256 _value);transfer(address _to, uint256 _value);transfer(address _to, uint _value, bytes calldata _data);transferAndCall(address _to, uint256 _value, bytes memory _extraData);transferAllAndCall(address _to, bytes calldata _extraData);approve(address _spender, uint256 _value);approve(address _spender, uint256 _currentValue, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes memory _extraData);approveAllAndCall(address _spender, bytes calldata _extraData)"
chfast/cpp-ethereum,test/performance/mul256.sol,""
SwapyNetwork/swapy-exchange-protocol,test/TestInvestmentAsset_marketplace.sol,shouldThrow(bool result);testUnavailableActionsWhenInvested();testOnlyInvestorCanPutOnSale();testInvestorCanPutOnSale();testUnavailableActionsWhenOnSale();testOnlyInvestorCanRemoveOnSale();testInvestorCanRemoveOnSale();testBuyerAddressMustBeValid();testUserCanBuyAsset();testUnavailableActionsWhenPendingSale();testOnlyBuyerCanCancelPurchase();testBuyerCanCancelPurchase();testOnlyInvestorCanRefusePurchase();testInvestorCanRefusePurchase();testOnlyInvestorCanAcceptSale();testInvestorCanAcceptSale();withdrawFunds(address _asset)
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/scenarios/solidity_testing/TestWithBalance.sol,testInitialBalance()
asseth/dao1901,customModules/protocol/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
status-im/status-network-token,contracts/test/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
AdChain/AdChainRegistry,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
FedCoup/FedCoup,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Henri93/PennBlockchain-Smart-Contracts,ERC20 Token/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
district0x/name-bazaar,resources/public/contracts/src/AuctionOfferingFactory.sol,""
orbro/eth-enablers,DAO-develop/DAO.sol,"receiveEther();vote(uint _proposalID, bool _supportsProposal);newContract(address _newContract);changeAllowedRecipients(address _recipient, bool _allowed);changeProposalDeposit(uint _proposalDeposit);retrieveDAOReward(bool _toMembers);getMyReward();withdrawRewardFor(address _account);transferWithoutReward(address _to, uint256 _amount);halveMinQuorum();numberOfProposals();getNewDAOAddress(uint _proposalID);isBlocked(address _account);unblockMe();receiveEther();vote(uint _proposalID, bool _supportsProposal);closeProposal(uint _proposalID);newContract(address _newContract);retrieveDAOReward(bool _toMembers);getMyReward();withdrawRewardFor(address _account);transfer(address _to, uint256 _value);transferWithoutReward(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);changeProposalDeposit(uint _proposalDeposit);changeAllowedRecipients(address _recipient, bool _allowed);isRecipientAllowed(address _recipient);actualBalance();minQuorum(uint _value);halveMinQuorum();createNewDAO(address _newCurator);numberOfProposals();getNewDAOAddress(uint _proposalID);isBlocked(address _account);unblockMe()"
orbro/eth-enablers,solidity-baby-steps-master/contracts/46_pong_via_send.sol,Pong();getBalance();getConstructorTouches();getNamelessTouches();getAddress();kill()
manishbisht/Udacity,Blockchain Developer Nanodegree/P8 - Capstone - Real Estate Marketplace/zokrates/code/square/Verifier.sol,"GetFieldModulus();submod(uint256 a, uint256 b, uint256 n);_modInv(uint256 a, uint256 n);negate(G1Point memory p);addition(G1Point memory p1, G1Point memory p2);addition(G2Point memory p1, G2Point memory p2);scalar_mul(G1Point memory p, uint s);pairing(G1Point[] memory p1, G2Point[] memory p2);verifyingKey();verify(uint[] memory input, Proof memory proof)"
livepeer/protocol,contracts/test/SortedDoublyLLFixture.sol,"setMaxSize(uint256 _size);insert(address _id, uint256 _key, address _prevId, address _nextId);remove(address _id);updateKey(address _id, uint256 _newKey, address _prevId, address _nextId);contains(address _id);getSize();getMaxSize();getKey(address _id);getFirst();getLast();getNext(address _id);getPrev(address _id)"
mixbytes/storiqa_ico,contracts/test_helpers/crowdsale/InvestmentAnalyticsTestHelper.sol,createMorePaymentChannels(uint limit)
Storiqa/ico_smart_contract,contracts/test_helpers/crowdsale/InvestmentAnalyticsTestHelper.sol,createMorePaymentChannels(uint limit)
michinbear/solidity,test/compilationTests/corion/owned.sol,replaceOwner(address newOwner);isOwner()
airalab/DAO-IPCI,contracts/builder/BuilderIssuerLedger.sol,"create(string _name, string _symbol, uint8 _decimals, address _operator_core, string _group, address _client)"
nikita-fuchs/PLToken,contracts/PLToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);createTokens();getCurrentTokenPrice();redeemTokens(string leoAddress);retrieveEth(uint256 _value, address _safe);finalize(address _safe);startRedeeming();pause();proceed();refund()"
aragon/aragon-network-token,packages/sale/test/helpers/ThrowProxy.sol,ThrowProxy(address _target);assertThrows(string msg);assertItDoesntThrow(string msg);execute()
robmyers/artworld-ethereum,dapps/drawing-transactions/contracts/DrawingTransactions.sol,""
DigixGlobal/ethereum-ruby,contracts/VendorInterface.sol,"VendorInterface(address _config);registerGold(address _asset, address _owner, bytes32 _doc);delegateCustodian(address _asset, address _cstdn);append(bytes32 _data);createOrder(bytes32 _orderId, bytes32 _sku, address _buyer);start();getOrder(uint80 _idx);next(uint80 _idx);valid(uint80 _idx);prev(uint80 _idx);processOrder(bytes32 _orderId)"
EthWorks/ethereum.rb,contracts/VendorInterface.sol,"VendorInterface(address _config);registerGold(address _asset, address _owner, bytes32 _doc);delegateCustodian(address _asset, address _cstdn);append(bytes32 _data);createOrder(bytes32 _orderId, bytes32 _sku, address _buyer);start();getOrder(uint80 _idx);next(uint80 _idx);valid(uint80 _idx);prev(uint80 _idx);processOrder(bytes32 _orderId)"
marekkirejczyk/ethereum.rb,contracts/VendorInterface.sol,"VendorInterface(address _config);registerGold(address _asset, address _owner, bytes32 _doc);delegateCustodian(address _asset, address _cstdn);append(bytes32 _data);createOrder(bytes32 _orderId, bytes32 _sku, address _buyer);start();getOrder(uint80 _idx);next(uint80 _idx);valid(uint80 _idx);prev(uint80 _idx);processOrder(bytes32 _orderId)"
QTBlockchain/SolidityNWeb3,SmartContracts/Math/contracts/VisitCount.sol,VisitCount();visit();getVisitorCount();addFakeVisitors()
anzheng67/rosca-contracts,contracts/ROSCA.sol,addMember(address newMember);startRound();cleanUpPreviousRound();removeFees(uint256 amount);contribute();bid(uint256 bidInWei);withdraw();getParticipantBalance(address user);getContractNetBalance();endOfROSCARetrieveSurplus();endOfROSCARetrieveFees();enableEscapeHatch();activateEscapeHatch();emergencyWithdrawal()
michinbear/solidity,test/compilationTests/MultiSigWallet/MultiSigWalletFactory.sol,"create(address[] _owners, uint _required)"
elementrem/solidity,test/compilationTests/MultiSigWallet/MultiSigWalletFactory.sol,"create(address[] _owners, uint _required)"
sonm-io/core,blockchain/source/contracts/DeployList.sol,addDeployer(address _deployer);removeDeployer(address _deployer);getDeployers()
makoto/blockparty,contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
qjflores/singularity,contracts/Internet.sol,"Internet(string _name, string _description)"
FractalFlows/DAOResearch,ethereum/contracts/Emergence.sol,"Emergence();setURL(string x);getURL();set(uint256 x);get();mint(address receiver, uint256 amount);send(address receiver, uint256 amount)"
papyrusglobal/smartcontracts,contracts/registry/BaseRegistry.sol,destroy()
alice-si/contracts,contracts/alice/ClaimsRegistry.sol,"setClaim(address subject, bytes32 key, bytes32 value);setSelfClaim(bytes32 key, bytes32 value);getClaim(address issuer, address subject, bytes32 key);removeClaim(address subject, bytes32 key);approveClaim(address issuer, address subject, bytes32 key);isApproved(address approver, address issuer, address subject, bytes32 key)"
RyuuGan/sol-merger,test/compiled/RenamedImports.sol,Ownable();transferOwnership(address newOwner);MyOwned()
RealEstateAssetLedger/real_contract,contracts/mocks/REALCrowdsaleMock.sol,REALCrowdsaleMock();getBlockNumber();setMockedBlockNumber(uint _b)
Soma-co/soma-community-token,contracts/SomaIco.sol,"forwardFundsToWallet();assignTokens(address recipient, uint256 amount);setIcoDates(uint256 newIcoStartTimestamp, uint256 newIcoEndTimestamp);setRate(uint256 _rate);haltFundraising();unhaltFundraising();isIcoFinished();prepareLiquidityReserve();manuallyAssignTokens(address recipient, uint256 amount);burn(uint256 _value)"
Fermion-Project/Light-Wallet,source_gnosis/contracts/MultiSigWallet.sol,"MultiSigWallet(address[] _owners, uint _required);addOwner(address owner);removeOwner(address owner);replaceOwner(address owner, address newOwner);changeRequirement(uint _required);submitTransaction(address destination, uint value, bytes data);confirmTransaction(uint transactionId);revokeConfirmation(uint transactionId);executeTransaction(uint transactionId);isConfirmed(uint transactionId);addTransaction(address destination, uint value, bytes data);getConfirmationCount(uint transactionId);getTransactionCount(bool pending, bool executed);getOwners();getConfirmations(uint transactionId);getTransactionIds(uint from, uint to, bool pending, bool executed)"
aragon/aragon-network-token,packages/sale/installed_contracts/zeppelin/contracts/token/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint value)"
FedCoup/FedCoup,installed_contracts/zeppelin/contracts/token/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint value)"
pooleja/SolidityPlayground,contracts/zeppelin/token/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint value)"
maraoz/zeppelin-solidity,contracts/token/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint value)"
locals-world/locals-app,truffle/contracts/localsUser.sol,localsUser();setProfileHash(string _hash);getProfileHash(address useraddress);changeOwner(address newowner);kill()
Bunjin/Rouleth,rouleth.sol,"Rouleth();changeDeveloper_only_Dev(address new_dev);disableBetting_only_Dev();enableBetting_only_Dev();changeSettings_only_Dev(uint newCasinoStatLimit, uint newMaxBetsBlock, uint256 newMinGamble, uint256 newMaxGamble, uint16 newMaxInvestor, uint256 newMinInvestment,uint256 newMaxInvestment, uint256 newLockPeriod, uint8 newBlockDelay, uint8 newBlockExpiration);setNickname(string name);getNickname(address _address);updateMaxBet();checkBetValue();placeBet(BetTypes betType_, uint8 input_);betOnNumber(uint8 numberChosen);betOnColor(bool Red, bool Black);betOnLowHigh(bool Low, bool High);betOnOddEven(bool Odd, bool Even);betOnDozen(bool First, bool Second, bool Third);betOnColumn(bool First, bool Second, bool Third);betOnColumnOrDozen(bool First, bool Second, bool Third, BetTypes bet);spinTheWheel(address spin_for_player);SpinTheWheel(address playerSpinned);checkBetResult(uint8 result, address player, bytes32 blockHash, bytes32 shaPlayer);solveBet(address player, uint8 result, bool win, uint8 multiplier, bytes32 blockHash, bytes32 shaPlayer);checkBetNumber(uint8 result, address player, bytes32 blockHash, bytes32 shaPlayer);checkBetParity(uint8 result, address player, bytes32 blockHash, bytes32 shaPlayer);checkBetLowhigh(uint8 result, address player, bytes32 blockHash, bytes32 shaPlayer);checkBetColor(uint8 result, address player, bytes32 blockHash, bytes32 shaPlayer);checkBetDozen(uint8 result, address player, bytes32 blockHash, bytes32 shaPlayer);checkBetColumn(uint8 result, address player, bytes32 blockHash, bytes32 shaPlayer);invest();transferInvestorAccount(address newInvestorAccountOwner, address newInvestorAccountOwner_confirm);withdrawInvestment(uint256 amountToWithdrawInWei);manualUpdateBalances_only_Dev();updateBalances();voteOnNewEntryFees_only_VIP(uint8 extraInvestFeesRate_0_to_99);computeResultVoteExtraInvestFeesRate();splitProfitVIP_only_Dev();checkProfitLossSinceInvestorChange();checkInvestorBalance(address investor);getInvestorList(uint index);investmentEntryInfos();getSettings();getTotalGambles();getPayroll();checkMyBet(address player);getGamblesList(uint256 index)"
rfikki/demo-solidity,simpleauction.sol,bid();withdraw();auctionEnd()
Neufund/Contracts,contracts/neukey/NeukeyNotary.sol,"set_faucet(Faucet faucet_);set_notary(address notary_);register(address nanoPubKey, uint32 device_id);send_to_owner(address nanoPubKey, uint device_id, uint32 owner_id);deprecate(address nanoPubKey);is_registered(address);device_id(address)"
lionell/labs,infosec/contracts/Pwn.sol,setBank(address _bank);steal();getJackpot()
lionell/university-labs,infosec/contracts/Pwn.sol,setBank(address _bank);steal();getJackpot()
lionell/laboratories,infosec/contracts/Pwn.sol,setBank(address _bank);steal();getJackpot()
silasdavis/eris-db,tests/jobs_fixtures/app07-query_and_basic_deploy_contracts_from_directory/contracts/storage.sol,set(uint x);get()
silasdavis/burrow,tests/jobs_fixtures/app07-query_and_basic_deploy_contracts_from_directory/contracts/storage.sol,set(uint x);get()
eris-ltd/eris-db,tests/jobs_fixtures/app07-query_and_basic_deploy_contracts_from_directory/contracts/storage.sol,set(uint x);get()
aragon/aragon-network-token,packages/sale/installed_contracts/zeppelin/contracts/LimitBalance.sol,LimitBalance(uint _limit)
FedCoup/FedCoup,installed_contracts/zeppelin/contracts/LimitBalance.sol,LimitBalance(uint _limit)
pooleja/SolidityPlayground,contracts/zeppelin/LimitBalance.sol,LimitBalance(uint _limit)
maraoz/zeppelin-solidity,contracts/LimitBalance.sol,LimitBalance(uint _limit)
readevalprint/aragon-core,contracts/misc/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address newAddress)
aragon/aragon-core,contracts/apm/APMRegistry.sol,"initialize(ENSSubdomainRegistrar _registrar);newRepo(string _name, address _dev);_newRepo(string _name, address _dev);newClonedRepo();repoAppId()"
montyly/manticore,tests/ethereum/contracts/detectors/balance_ok.sol,foo()
trailofbits/manticore,tests/ethereum/contracts/detectors/balance_ok.sol,foo()
openanx/OpenANXToken,contracts/ERC20Interface.sol,"balanceOf(address _owner);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);approve(address _spender, uint _value);allowance(address _owner, address _spender)"
openanx/OpenANXToken,test/ERC20Interface.sol,"balanceOf(address _owner);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);approve(address _spender, uint _value);allowance(address _owner, address _spender)"
ethereum/frontier-release,views/content/dao-association.sol,"owned();transferOwnership(address newOwner);receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);transferFrom(address _from, address _to, uint256 _value);Association(Token sharesAddress, uint minimumSharesToPassAVote, uint minutesForDebate);changeVotingRules(address sharesAddress, uint minimumSharesToPassAVote, uint minutesForDebate);executeProposal(uint proposalNumber, bytes transactionBytecode)"
ethereum/ethereum-org,views/content/dao-association.sol,"owned();transferOwnership(address newOwner);receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);transferFrom(address _from, address _to, uint256 _value);Association(Token sharesAddress, uint minimumSharesToPassAVote, uint minutesForDebate);changeVotingRules(address sharesAddress, uint minimumSharesToPassAVote, uint minutesForDebate);executeProposal(uint proposalNumber, bytes transactionBytecode)"
syigzaw/ethjournal,contracts/EthJournal.sol,"authorSignUp(address user);editorSignUp(address user);createPaper(string _title, uint _paperUID, uint _price);addPaper(address _paper)"
iurimatias/embark-framework,dapps/tests/contracts/test/ownable_test.sol,beforeAll();beforeEach();shouldnotbezeroAddress()
ksteigerwald/event-logger-dapp,contracts/Logger.sol,"getLastHash();logEvent(string _ipfsHash, bool isValid);Logger(string _ipfsHash, bool isValid);disable()"
Komhar/CreditCoin,CreditCoin.sol,"kill();createCredit(uint amount, address to, uint ts);runCredits();getCredit(address from, address to);getCreditLedger(uint i)"
LykkeCity/EthereumApiDotNetCore,src/ContractBuilder/contracts/coin.sol,"Coin(address exchangeContractAddress);changeExchangeContract(address newContractAddress);transferMultisig(address from, address to, uint amount);cashin(address receiver, uint amount);cashout(address from, address to, uint amount);balanceOf(address owner);getTransferAddressUser(address transferAddress);setTransferAddressUser(address userAddress, address transferAddress)"
coincrowd-it/ico,contracts/Constants.sol,""
kryptopy1/crowdsale,contracts/KryptopyCrowdsale.sol,buyTokens(address beneficiary);createTokenContract();startPreICO();kpyGoalReached()
Vourhey/learning-center,sol/Lesson_0.sol,ping()
adklempner/automte-exchange-contracts,contracts/EZEtherMarketplace.sol,"EZEtherMarketplace();addOrder(string uid, address buyer, uint _amount, uint price, string currency, address advertiser);completeOrder(string uid);setDisputed(address seller, string uid);resolveDisputeBuyer(address seller, string uid);resolveDisputeSeller(address seller, string uid);setDisputeInterface(address _disputeInterface);setDisputeResolver(address _disputeResolver);setFeeRecipient(address _feeRecipient);setFeePercent(uint _feePercent);setSpecialFeePercent(address seller, uint _feePercent);setSpecialLimits(address seller, uint min, uint max);setLimits(uint min, uint max);getFeeRecipient(address seller);getFeePercent(address seller);getFeePercent();getMinAmount();getMaxAmount();getMinAmount(address seller);getMaxAmount(address seller);calculateFee(uint amount, address seller);isContract(address addr)"
aragon/aragon-network-token,packages/sale/test/helpers/NetworkMock.sol,"proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount)"
program017/Komhar,Greet.sol,Greeter(string _greeting);greet();getBlockNumber();setGreeting(string _newgreeting);kill()
CoinOffering/CoinOffering.Dapp,contracts.dev/TokenExchange.001.sol,"TokenExchange();weiToEther(uint _wei);etherToWei(uint _ether);allowTokenContract(address _tokenContractAddress);createSellingProposition(address _tokenContractAddress, uint _quantity, uint _pricePerToken, uint _validForMinutes)"
GovernX/governx-contracts,src/contracts/utils/tests/test.MiniMeToken.sol,"TokenUser(address _token);transfer(address _to, uint256 _value);setup()"
zchn/ethereum-analyzer,examples/solidity.readthedocs.io/solidity-by-example/voting.sol,Ballot(bytes32[] proposalNames);giveRightToVote(address voter);delegate(address to);vote(uint proposal);winningProposal();winnerName()
GovernX/governx-contracts,src/contracts/utils/IController.sol,"newProposal(string _metadata, bytes _data);vote(uint256 _proposalID, uint256 _position, uint256 _weight);execute(uint256 _proposalID)"
chenlian2015/eosEthMarketSample,contracts/OLLotteryContract.sol,setOneGroupJoinersCount(uint nCount);OCLotteryContract();getCurrentLotteryJoiners();getBalance();joinOneLottery();callBackForRequestRandom(bytes32 randomValue);getLotteryResultTotal(address joiner);withDrawMyBalance()
redsquirrel/augur-core,src/trading/Orders.sol,"getOrders(bytes32 _orderId, Trading.TradeTypes, Market, uint8);getBestOrders(Trading.TradeTypes _type, Market _market, uint8 _outcome);getWorstOrders(Trading.TradeTypes _type, Market _market, uint8 _outcome);getAmount(bytes32 _orderId, Trading.TradeTypes, Market, uint8);getPrice(bytes32 _orderId, Trading.TradeTypes, Market, uint8);getOrderOwner(bytes32 _orderId, Trading.TradeTypes, Market, uint8);getOrderSharesEscrowed(bytes32 _orderId, Trading.TradeTypes, Market, uint8);getOrderMoneyEscrowed(bytes32 _orderId, Trading.TradeTypes, Market, uint8);getVolume(Market _market);getLastOutcomePrice(Market _market, uint8 _outcome);getBetterOrderId(bytes32 _orderId, Trading.TradeTypes, Market, uint8);getWorseOrderId(bytes32 _orderId, Trading.TradeTypes, Market, uint8);getBestOrderId(Trading.TradeTypes _type, Market _market, uint8 _outcome);getWorstOrderId(Trading.TradeTypes _type, Market _market, uint8 _outcome);getOrderId(Trading.TradeTypes _type, Market _market, uint256 _fxpAmount, int256 _fxpPrice, address _sender, uint256 _blockNumber, uint8 _outcome, uint256 _fxpMoneyEscrowed, uint256 _fxpSharesEscrowed);isBetterPrice(Trading.TradeTypes _type, Market, uint8, int256 _fxpPrice, bytes32 _orderId);isWorsePrice(Trading.TradeTypes _type, Market, uint8, int256 _fxpPrice, bytes32 _orderId);assertIsNotBetterPrice(Trading.TradeTypes _type, Market _market, uint8 _outcome, int256 _fxpPrice, bytes32 _betterOrderId);assertIsNotWorsePrice(Trading.TradeTypes _type, Market _market, uint8 _outcome, int256 _fxpPrice, bytes32 _worseOrderId);insertOrderIntoList(bytes32 _orderId, Trading.TradeTypes _type, Market _market, uint8 _outcome, int256 _fxpPrice, bytes32 _betterOrderId, bytes32 _worseOrderId);saveOrder(bytes32, Trading.TradeTypes _type, Market _market, uint256 _fxpAmount, int256 _fxpPrice, address _sender, uint8 _outcome, uint256 _fxpMoneyEscrowed, uint256 _fxpSharesEscrowed, bytes32 _betterOrderId, bytes32 _worseOrderId, uint256 _tradeGroupId, uint256);removeOrder(bytes32 _orderId, Trading.TradeTypes _type, Market _market, uint8 _outcome);fillOrder(bytes32 _orderId, Trading.TradeTypes _orderType, Market _market, uint8 _orderOutcome, uint256 _sharesFilled, uint256 _tokensFilled);takeOrderLog(Market _market, uint8 _orderOutcome, Trading.TradeTypes _orderType, bytes32 _orderId, address _taker, uint256 _makerSharesFilled, int256 _makerTokensFilled, uint256 _takerSharesFilled, int256 _takerTokensFilled, uint256 _tradeGroupId);completeSetsLog(address _sender, Market _market, Trading.TradeTypes _type, uint256 _fxpAmount, uint256 _numOutcomes, uint256 _marketCreatorFee, uint256 _reportingFee);cancelOrderLog(Market _market, address _sender, int256 _fxpPrice, uint256 _fxpAmount, bytes32 _orderId, uint8 _outcome, Trading.TradeTypes _type, uint256 _fxpMoneyEscrowed, uint256 _fxpSharesEscrowed);modifyMarketVolume(Market _market, uint256 _fxpAmount);setPrice(Market _market, uint8 _outcome, int256 _fxpPrice);removeOrderFromList(bytes32 _orderId, Trading.TradeTypes _type, Market _market, uint8 _outcome);updateBestBidOrder(bytes32 _orderId, Market _market, int256 _fxpPrice, uint8 _outcome);updateWorstBidOrder(bytes32 _orderId, Market _market, int256 _fxpPrice, uint8 _outcome);updateBestAskOrder(bytes32 _orderId, Market _market, int256 _fxpPrice, uint8 _outcome);updateWorstAskOrder(bytes32 _orderId, Market _market, int256 _fxpPrice, uint8 _outcome);getBestOrderWorstOrderHash(Market _market, uint8 _outcome, Trading.TradeTypes _type)"
SilentCicero/wafr,src/tests/solidityTests/gasUsage/examples/Campaign.sol,owner();version();name();contributeMethodABI();refundMethodABI();payoutMethodABI();beneficiary();expiry();fundingGoal();amountRaised()
aragon/aragon-core,contracts/kernel/Kernel.sol,"initialize(IACL _baseAcl, address _permissionsCreator);newAppInstance(bytes32 _appId, address _appBase);newAppInstance(bytes32 _appId, address _appBase, bytes _initializePayload, bool _setDefault);newPinnedAppInstance(bytes32 _appId, address _appBase);newPinnedAppInstance(bytes32 _appId, address _appBase, bytes _initializePayload, bool _setDefault);setApp(bytes32 _namespace, bytes32 _appId, address _app);setRecoveryVaultAppId(bytes32 _recoveryVaultAppId);CORE_NAMESPACE();APP_BASES_NAMESPACE();APP_ADDR_NAMESPACE();KERNEL_APP_ID();DEFAULT_ACL_APP_ID();getApp(bytes32 _namespace, bytes32 _appId);getRecoveryVault();acl();hasPermission(address _who, address _where, bytes32 _what, bytes _how);_setApp(bytes32 _namespace, bytes32 _appId, address _app);_setAppIfNew(bytes32 _namespace, bytes32 _appId, address _app)"
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/scenarios/cyclic_dependencies/Ping.sol,""
Great-Hill-Corporation/daodeepdive,assets/contracts/00-SampleOffer.sol,"SampleOffer(address _contractor, bytes32 _hashOfTheTerms, uint _totalCosts, uint _oneTimeCosts, uint _minDailyCosts);sign();setDailyCosts(uint _dailyCosts);returnRemainingMoney();getDailyPayment();setRewardDivisor(uint _rewardDivisor);setDeploymentFee(uint _deploymentReward);updateClientAddress(DAO _newClient);payOneTimeReward();payReward()"
b-mueller/mythril,tests/truffle_project/contracts/ether_send.sol,crowdfunding();withdrawfunds();invest();getBalance()
dmx374/zeppelin-solidity,contracts/ownership/CanReclaimToken.sol,reclaimToken(ERC20Basic token)
MarketProject/MarketProtocol,test/tokens/TestUpgradeableToken.sol,beforeEachCreateMarketToken();beforeEachCreateUpgradeableTokenMock();testUpgradeableToken()
manosamy/enslisting,contracts/ListingService.sol,"entries(bytes32 _hash);transfer(bytes32 _hash, address newOwner);addListing(string _name, string _email, uint _listPrice, address _listingAgent);getBidInfo(uint64 bidId);listings(uint64 listingId);setBidStatus(uint64 _bidId, BidStatus _status);addBid(string _name,string _email, uint _bidAmount, address _bidder);namehash(string name);abandon();ListingService(address registrar, address _registry, AbstractListingDB _listingDB);payTip();addListing(string name,string email, uint listPrice);bid(string name,string email, uint bidAmount);acceptBid(string name, uint64 bidId);declineBid(string name, uint64 bidId)"
maraoz/zeppelin-solidity,test/helpers/DayLimitMock.sol,DayLimitMock(uint _value);attemptSpend(uint _value);setDailyLimit(uint _newLimit);resetSpentToday()
Spreadway/core,eth/test.sol,mortal();kill();greeter(string _greeting);greet()
immesys/bw2,contracts/affinity.sol,"OfferRouting(bytes32 drvk, bytes32 nsvk, uint drnonce, bytes sig);AcceptRouting(bytes32 nsvk, bytes32 drvk, uint nsnonce, bytes sig);RetractRoutingDR(bytes32 drvk, bytes32 nsvk, uint drnonce, bytes sig);RetractRoutingNS(bytes32 nsvk, bytes32 drvk, uint nsnonce, bytes sig);SetDesignatedRouterSRV(bytes32 drvk, uint drnonce, bytes srv, bytes sig);UnpackDOT(bytes dot);GetDOTDelegatedRevoker(bytes32 dothash, uint8 index);UnpackEntity(bytes entity);GetEntityDelegatedRevoker(bytes32 vk, uint8 index);UnpackAccessDChain(bytes obj);GetDChainDOTHash(bytes32 chainhash, uint8 index);UnpackRevocation(bytes blob);ADChainGrants(bytes32 chainhash, bytes8 adps, bytes32 mvk, bytes urisuffix);GetDOTNumRevokableHashes(bytes32 dothash);GetDOTRevokableHash(bytes32 dothash, uint32 index);GetDChainNumRevokableHashes(bytes32 chainhash);GetDChainRevokableHash(bytes32 chainhash, uint32 index)"
cgewecke/eth-gas-reporter,mock/contracts/VariableConstructor.sol,""
EMAXio/cosigner,cosigner-ethereum-token-storage/SolidityContracts/V4/dappsys/ds-auth/auth.sol,"DSAuth();setOwner(address owner_);setAuthority(DSAuthority authority_);isAuthorized(address src, bytes4 sig)"
Braveno/cosigner,cosigner-ethereum-token-storage/SolidityContracts/V4/dappsys/ds-auth/auth.sol,"DSAuth();setOwner(address owner_);setAuthority(DSAuthority authority_);isAuthorized(address src, bytes4 sig)"
EMAXio/heimdal,cosigner-ethereum-token-storage/SolidityContracts/V4/dappsys/ds-auth/auth.sol,"DSAuth();setOwner(address owner_);setAuthority(DSAuthority authority_);isAuthorized(address src, bytes4 sig)"
status-im/status-network-token,contracts/StatusContribution.sol,"StatusContribution();setGuaranteedAddress(address _th, uint256 _limit);proxyPayment(address _th);onTransfer(address, address, uint256);onApprove(address, address, uint256);buyNormal(address _th);buyGuaranteed(address _th);doBuy(address _th, uint256 _toFund, bool _guaranteed);finalize();percent(uint256 p);isContract(address _addr);tokensIssued();totalCollected();getBlockNumber();claimTokens(address _token);pauseContribution();resumeContribution()"
SilentCicero/wafr,src/tests/solidityTests/excludeTest/another/Another.sol,""
TrueBitFoundation/webasm-solidity,contracts/match.sol,addAgree(bytes32 cur);addDisagree(bytes32 v)
Storiqa/ico_smart_contract,contracts/STQCrowdsale.sol,"STQCrowdsale(address[] _owners, address _token, address _funds, address _teamTokens);buy();iaOnInvested(address investor, uint payment, bool usingPaymentChannel);pause();unpause();fail();setToken(address _token);setFundsRegistry(address _funds);checkTime();distributeBonuses(uint investorsLimit);createMorePaymentChannels(uint limit);finishICO();changeState(IcoState _newState);onSuccess();onFailure();getLargePaymentBonus(uint payment);calcSTQAmount(uint _wei, uint extraBonus);recordInvestment(address investor, uint payment, uint timeBonus);getStartTime();getEndTime();getCurrentTime();getMinFunds();getMaximumFunds();getTotalInvested();getLastMaxInvestments()"
FedCoup/FedCoup,installed_contracts/ds-auth/contracts/DSAuth.sol,setAuthority(DSIAuthority newAuthority);release(DSIAuth what);DSAuth();setAuthority(DSIAuthority newAuthority);isAuthorized()
daxxcoin/daxxcore,contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
web3j/web3j,codegen/src/test/resources/solidity/simplestorage/SimpleStorage.sol,set(uint x);get()
vanderheijden86/p2politics,tmp_contracts/Votes.sol,""
akhilss/embark-framework,test_app/app/contracts/ownable.sol,Ownable();transferOwnership(address newOwner)
tomashaber/raiden,raiden/smart_contracts/ChannelManagerLibrary.sol,"getChannelWith(Data storage self, address partner);newChannel(Data storage self, address partner, uint settle_timeout);partyHash(address address_one, address address_two);contractExists(address channel)"
onewed/unitycoin,contracts/IRefundHandler.sol,handleRefundRequest(address _contributor)
kabl/sol-dns,src/main/resources/contracts/CmcEnabled.sol,"init(address _cmcAddress, bytes32 _seniorContractName);remove();getCmcAddress();getSeniorContract();getContract(bytes32 name)"
zeroqn/aa-apply,contracts/EscapeHatch.sol,EscapeHatch();setPayment(address _payment);pausePayment();withdraw();emergencyWithdraw()
Ethbet/ethbet,contracts/EthbetToken.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);balanceOf(address who);transfer(address to, uint256 value);transfer(address _to, uint256 _value);balanceOf(address _owner);allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);EthbetToken()"
Ethbet/ethbet,alpha/contracts/EthbetToken.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);balanceOf(address who);transfer(address to, uint256 value);transfer(address _to, uint256 _value);balanceOf(address _owner);allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);EthbetToken()"
lucywe/rootcore-crowdsale,solidity/contracts/CrowdsaleController.sol,"CrowdsaleController(uint256 _startTime, address _beneficiary);computeReturn(uint256 _contribution);upadateContributorsCount(uint256 _tokenAmount);addToWhitelist(address _address);removeFromWhitelist(address _address);contributeETH();contributePreSale();contributeFiat(address _contributor, uint256 _amount);processContribution()"
bluedroplet/smartbadges,smart_badges.sol,"createBadge(string title, string description, string url);getBadge(bytes32 badgeHash);setBadgeLevel(bytes32 badgeHash, uint level, string title, string description, bytes image);getBadgeLevel(bytes32 badgeHash, uint i);award(bytes32 badgeHash, uint level, address recipient, bool revokable, uint expiration);getAwarding(address recipient, bytes32 badgeHash);revoke(address recipient, bytes32 badgeHash)"
GovernX/governx-contracts,src/contracts/MultiSigControllerFactory.sol,"createProxy(address[] _members, uint256 _required);createController(address _proxy, address[] _members, uint256 _required)"
dadaista/GorillaSale,contracts/OranguSale.sol,createTokenContract();setRate(uint256 _rate);buyTokens(address beneficiary);takeTokenContractOwnership()
acebusters/safe-token-sale,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Neufund/Contracts,contracts/watchdog/WhitelistInterface.sol,"is_white_listed(address _to, uint _value, bytes _data)"
daxxcoin/daxxcore,contracts/ens/contract/ens.sol,"ENS(address owner);owner(bytes32 node);resolver(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);FIFSRegistrar(address ensAddr, bytes32 node);register(bytes32 subnode, address owner);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);PublicResolver(address ensAddr);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash)"
montyly/manticore,tests/ethereum/contracts/807.sol,f(address z);C()
trailofbits/manticore,tests/ethereum/contracts/807.sol,f(address z);C()
Pavel-DV/ChronoMint,old/ChronoBankAssetInterface.sol,"__transferWithReference(address _to, uint _value, string _reference, address _sender);__transferFromWithReference(address _from, address _to, uint _value, string _reference, address _sender);__approve(address _spender, uint _value, address _sender);__process(bytes _data, address _sender)"
bshevchenko/ChronoMint,old/ChronoBankAssetInterface.sol,"__transferWithReference(address _to, uint _value, string _reference, address _sender);__transferFromWithReference(address _from, address _to, uint _value, string _reference, address _sender);__approve(address _spender, uint _value, address _sender);__process(bytes _data, address _sender)"
cgewecke/eth-gas-reporter,mock/contracts/EncoderV2.sol,getAsset()
gmo-blockchain/solidity,contracts/VersionField.sol,"VersionField(ContractNameService _cns, bytes32 _contractName);setPrevVersion(VersionField _prevVersion);setNextVersion(VersionField _nextVersions);exist(bytes32 _id);existIdAfterVersion(bytes32 _id);existIdBeforeVersion(bytes32 _id);prepare(bytes32 _id);shouldReturnDefault(bytes32 _id);setDefault(bytes32 _id);existIdAtCurrentVersion(bytes32 _id)"
energychain/stromdao-solidity,assets/SpecialPurposeVehicle/spv.sol,"owned();transferOwnership(address newOwner);receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);transfer(address _to, uint256 _value);balanceOf(address _owner);addTx(address _to, uint256 _value,string _txt);transfer(address _to, uint256 _value);balanceHaben(address _owner);balanceSoll(address _owner);addTx(address _from,address _to, uint256 _value,string _txt);BalancerOracle();setBalancer(Stromkonto _balancer);balanceHaben(address _owner);balanceSoll(address _owner);addTx(address _from,address _to, uint256 _value,string _txt);transferOracleOwnership(address _owner);addOracle(address _oracle);removeOracle(address _oracle);setValue(string _value);setValue(address key,string _value);setValue(address key,uint256 amount,uint256 repeatMinutes,uint256 repeatTimes);transfer(address _to, uint256 _value);setOracle(address _oracle);transferSupervisor(address _new_supervisor);setBufferAmount(uint256 _value);addTx(uint256 amount);addShareholder(address _shareholder)"
TruLtd/tru-reputation-token,src/current/TruCrowdSaleFull.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);transferOwnership(address newOwner);balanceOf(address who);transfer(address to, uint256 value);transfer(address _to, uint256 _value);balanceOf(address _owner);allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);increaseApproval(address _spender, uint _addedValue);decreaseApproval(address _spender, uint _subtractedValue);setReleaseAgent(address addr);setTransferAgent(address addr, bool state);releaseTokenTransfer();mint(address _to, uint256 _amount);finishMinting(bool _presale, bool _sale);isUpgradeAgent();upgradeFrom(address _from, uint256 _value);upgrade(uint256 _value);setUpgradeAgent(address _agent);getUpgradeState();setUpgradeMaster(address _master);canUpgrade();changeBoardAddress(address _newAddress);canUpgrade();setUpgradeMaster(address _master);halt();unhalt();buy();updateWhitelist(address _purchaser, uint _status);changeEndTime(uint256 _endTime);hasEnded();checkSaleValid();validatePurchase(address _purchaser);forwardFunds();buyTokens(address _purchaser);finalise();completion()"
TruLtd/tru-reputation-token,src/0.1.12/TruCrowdSaleFull.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);transferOwnership(address newOwner);balanceOf(address who);transfer(address to, uint256 value);transfer(address _to, uint256 _value);balanceOf(address _owner);allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);increaseApproval(address _spender, uint _addedValue);decreaseApproval(address _spender, uint _subtractedValue);setReleaseAgent(address addr);setTransferAgent(address addr, bool state);releaseTokenTransfer();mint(address _to, uint256 _amount);finishMinting(bool _presale, bool _sale);isUpgradeAgent();upgradeFrom(address _from, uint256 _value);upgrade(uint256 _value);setUpgradeAgent(address _agent);getUpgradeState();setUpgradeMaster(address _master);canUpgrade();changeBoardAddress(address _newAddress);canUpgrade();setUpgradeMaster(address _master);halt();unhalt();buy();updateWhitelist(address _purchaser, uint _status);changeEndTime(uint256 _endTime);hasEnded();checkSaleValid();validatePurchase(address _purchaser);forwardFunds();buyTokens(address _purchaser);finalise();completion()"
rsksmart/rskj,rskj-core/src/test/resources/dsl/creator.sol,Counter();increment();getValue();Creator()
AIAlan/News,contracts/Adoption.sol,adopt(uint petId);getAdopters()
BeBlockTech/Anemoi,BeBlock-Master/WePowerPresaleContractAudit-master/contracts/MiniMeToken.sol,"proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);Controlled();changeController(address _newController);receiveApproval(address from, uint256 _amount, address _token, bytes _data);transfer(address _to, uint256 _amount);balanceOf(address _owner);approve(address _spender, uint256 _amount);totalSupply();balanceOfAt(address _owner, uint _blockNumber);totalSupplyAt(uint _blockNumber);enableTransfers(bool _transfersEnabled);isContract(address _addr);min(uint a, uint b);claimTokens(address _token)"
stevejaxon/ethereum-tutorials,contracts/cryptozombies/KittyInterface.sol,getKitty(uint256 _id)
GX-Coin/SmartContract,GxCoinTotals.sol,GxCoinTotals(address gxDeploymentAdminsAddress);setCoinLimit(uint32 limit);adjustTotalCoins(int32 coins);setTotalCoins(uint32 coins)
GX-Coin/SmartContract,GxOrderList.sol,"GxOrderList(address deploymentAdminsAddress);get(uint80 orderId);getPricePerCoin(uint80 orderId);remove(uint80 orderId);move(uint80 orderId, uint80 previousOrderId);consumeNextOrderId();setNextOrderId(uint80 _nextOrderId);unlink(Order order);link(uint80 previousOrderId, Order storage order);upgradeDeploymentAdmins(address newDeploymentAdmins)"
matiasinsaurralde/etherforum,contracts/forum.sol,"createForum( string name );createTopic( string name, string content, uint forum );createPost( string name, string content, bytes32 topic )"
jamiehale/dao_partnership,contracts/Partnership.sol,"proposeTransaction(address _to, uint _value, bytes _data, string _description);cancelTransaction(bytes32 _id);confirmTransaction(bytes32 _id);executeTransaction(bytes32 _id);distribute(address _recipient, uint _amount);distributeEvenly(uint _amount);repayLoan(address _recipient, uint _amount);withdraw(uint _amount);dissolve(address _beneficiary);isPartner(address _address)"
Dicoiner/irianna-solidity,contracts/DayLimit.sol,DayLimit(uint256 _limit);_setDailyLimit(uint256 _newLimit);_resetSpentToday();underLimit(uint256 _value);today()
js0p/sprouts,simple examples/ipfs/NotSoSimpleStorage.sol,set(string x);get()
iurimatias/embark-framework,packages/embark/src/test/fixtures/cont.sol,"g(int _number);f(int _foo, int _bar);h(int _bar)"
pacifics/Dao,PassDao.sol,ActualCommitteeRoom();MetaProject();ActualShareManager();ActualTokenManager();PassDao();addMetaProject(address _projectAddress);addProject(address _projectAddress)
Majoolr/ethereum-libraries,ArrayUtilsLib/truffle/contracts/Array16Lib.sol,"sumElements(uint16[] storage self);getMax(uint16[] storage self);getMin(uint16[] storage self);indexOf(uint16[] storage self, uint16 value, bool isSorted);getParentI(uint256 index);getLeftChildI(uint256 index);heapSort(uint16[] storage self);uniq(uint16[] storage self)"
ethbets/ebets,contracts/bet.sol,"__resolve(uint outcome);updateResult();toggleFeatured();bet(bool forTeam);withdraw(address[] tokens);collectOriginalBet();collectProfit();computeProfit(uint betAmount, uint sum, uint profit);close();terminate()"
pash7ka/zeppelin-solidity,contracts/crowdsale/RefundVault.sol,RefundVault(address _wallet);deposit(address investor);close();enableRefunds();refund(address investor)
melonproject/protocol,contracts/prices/ValueInterpreter.sol,""
maraoz/zeppelin-solidity,test/helpers/PausableMock.sol,PausableMock();normalProcess();drasticMeasure()
SilentCicero/wafr,src/tests/solidityTests/campaign/Owner.sol,""
Juzix/BlockChain-Demo,contracts/utillib/LibString.sol,"memcpy(uint dest, uint src, uint len);findPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);length(string _self);compare(string _self, string _str);compareNoCase(string _self, string _str);equals(string _self, string _str);equalsNoCase(string _self, string _str);substr(string _self, uint _start, uint _len);concat(string _self, string _str);concat(string _self, string _str1, string _str2);concat(string _self, string _str1, string _str2, string _str3);trim(string _self);trim(string _self, string _chars);split(string _self, string _delim, string[] storage _array);indexOf(string _self, string _str);indexOf(string _self, string _str, uint pos);toInt(string _self);fromHexChar(bytes1 _i);toHex(string _self);toAddress(string _self);toKeyValue(string _self, string _key);toKeyValue(string[] storage _self, string _key);getStringValueByKey(string _self, string _key);getIntValueByKey(string _self, string _key);getArrayValueByKey(string _self, string _key);getArrayValueByKey(string _self, string _key, string[] storage _array);keyExists(string _self, string _key);storageToUint(string _self);inArray(string _self, string[] storage _array);inArrayNoCase(string _self, string[] storage _array);addrToAsciiString(address x);toChar(byte b);toUpper(string _self);toLower(string _self);toUint(string _self)"
bionexus/SportsBlockDapp,contracts/Bet.sol,"Bet(address owner, string description, uint gameStart);addEmployee(address employeeAddress);setOwner(address newOwner);makeBet(uint estimatedOutcome);submitGameResults(uint result);payout();submitGameResultAndTriggerPayout(uint result)"
silasdavis/eris-db,tests/jobs_fixtures/app24-multiple_inheritance_and_intermingling_contracts/two.sol,ii()
silasdavis/burrow,tests/jobs_fixtures/app24-multiple_inheritance_and_intermingling_contracts/two.sol,ii()
eris-ltd/eris-db,tests/jobs_fixtures/app24-multiple_inheritance_and_intermingling_contracts/two.sol,ii()
hankshz/dockers,ethereum/workspace/test/TestBetting.sol,testBetId();testBetAmount();testMakeBet();testResetBet();testSettle()
SilentCicero/wafr,src/tests/solidityTests/assertEq/test.assertEq.bytes32.sol,setup()
adbleu0/etherflow,src/test/resources/Hello.sol,""
GX-Coin/SmartContract,GxEvents.sol,"GxEvents(address deploymentAdminsAddress);raiseTraderRegistered(address traderAccount);raiseTraderUnregistered(address traderAccount);raiseCoinsSeeded(address to, uint32 amountCoins, uint balanceCoins, uint pricePerCoin);raiseCoinsDeducted(address to, uint32 amountCoins, uint balanceCoins);raiseCoinsAdded(address to, uint32 amountCoins, uint balanceCoins);raiseDollarsFunded(address to, uint160 amountDollars, int160 balanceDollars);raiseDollarsWithdrew(address to, uint160 amountDollars, int160 balanceDollars);raiseDollarsDeducted(address to, uint160 amountDollars, int160 balanceDollars);raiseDollarsAdded(address to, uint160 amountDollars, int160 balanceDollars);raiseDollarsWithdrawalCancelled(address to, uint160 amountDollars, int160 balanceDollars)"
aragon/aragon-network-token,packages/v2/contracts/ANTv2MultiMinter.sol,"mint(address to, uint256 value);addMinter(address minter);removeMinter(address minter);changeMinter(address newMinter);changeOwner(address newOwner);_changeOwner(address newOwner)"
DavdRoman/Payroll,contracts/Exchange/IExchange.sol,"exchange(address token, uint amount, uint rate);setExchangeRate(address token, uint exchangeRate)"
FedCoup/FedCoup,installed_contracts/zeppelin/contracts/ReentrancyGuard.sol,""
kryptopy1/crowdsale,test/helpers/KryptopyTokenMock.sol,"KryptopyTokenMock();balanceOfWithoutUpdate(address _adr);setBalance(address _adr, uint balance);getCurrentBlockTime()"
boisde/Greed_Island,party/contracts/mocks/integrations/ClaimAdapterMock.sol,"setRewards(uint256 _rewards);mint();getRewards(address _holder, address _rewardPool);getTokenAddress(address _rewardPool)"
michinbear/solidity,test/compilationTests/corion/token.sol,"receiveCorionToken(address, uint256, bytes);approvedCorionToken(address, uint256, bytes);replaceModule(address addr);token(bool forReplace, address moduleHandler, address dbAddr, address icoContractAddr, address exchangeContractAddress, address[] genesisAddr, uint256[] genesisValue);closeIco();approve(address spender, uint256 amount, uint256 nonce);approveAndCall(address spender, uint256 amount, uint256 nonce, bytes extraData);_approve(address spender, uint256 amount, uint256 nonce);allowance(address owner, address spender);transfer(address to, uint256 amount);transferFrom(address from, address to, uint256 amount);transferFromByModule(address from, address to, uint256 amount, bool fee);transfer(address to, uint256 amount, bytes extraData);_transferToContract(address from, address to, uint256 amount, bytes extraData);_transfer(address from, address to, uint256 amount, bool fee);processTransactionFee(address owner, uint256 value);_processTransactionFee(address owner, uint256 value);getTransactionFee(uint256 value);mint(address owner, uint256 value);_mint(address owner, uint256 value);burn(address owner, uint256 value);_burn(address owner, uint256 value);isContract(address addr);balanceOf(address owner);totalSupply();configure(announcementType aType, uint256 value)"
b-mueller/mythril,solidity_examples/origin.sol,transferOwnership(address newOwner)
b-mueller/mythril,tests/testdata/input_contracts/origin.sol,transferOwnership(address newOwner)
kowala-tech/kUSD,client/contracts/truffle/contracts/kns/KNSRegistry.sol,"initialize(address _owner);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);setTTL(bytes32 node, uint64 ttl);owner(bytes32 node);resolver(bytes32 node);ttl(bytes32 node)"
kinfoundation/kin-token,contracts/KinTokenSale.sol,"KinTokenSale(address _fundingRecipient, uint256 _startTime);initTokenGrants();addTokenGrant(address _grantee, uint256 _value);deleteTokenGrant(address _grantee);setParticipationCap(address[] _participants, uint256 _cap);setHardParticipationCap(uint256 _cap);create(address _recipient);finalize();grantTokens();issueTokens(address _recipient, uint256 _tokens);saleEnded();requestKinTokenOwnershipTransfer(address _newOwnerCandidate);acceptKinTokenOwnership();requestVestingTrusteeOwnershipTransfer(address _newOwnerCandidate);acceptVestingTrusteeOwnership()"
montyly/manticore,tests/ethereum/contracts/consensys_benchmark/integer_overflow_add.sol,run(uint256 input)
trailofbits/manticore,tests/ethereum_bench/consensys_benchmark/integer_overflow_add.sol,run(uint256 input)
bitcoinmeetups/dapp-bin,namereg/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
chriseth/dapp-bin,namereg/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
shahankhatch/dapp-bin,namereg/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
LianaHus/dapp-bin,namereg/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
RepublicMaster/dapp-bin,namereg/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
frozeman/ethereum-smart-contracts,namereg/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
ethereum/dapp-bin,namereg/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
vaporry/dapp-bin,namereg/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
iudex/iudex,contracts/escrow.sol,"getMinConfirmationsByAddr(address _ethAddr);__callback(bytes32 myid, string result)"
cryptape/cita,tests/chain-performance-by-mq/Test.sol,add()
cryptape/cita,scripts/contracts/src/common/EconomicalType.sol,""
UrsZeidler/licensemanager,licencemanager1/src/main/resources/contracts/contracts.sol,"LicenseManager(address _paymentAddress,string _name);changePaymentAddress(address _newPaymentAdress);createIssuerContract(string itemName,string textHash,string url,uint lifeTime,uint price);stopIssuing(uint licenseId);changePaymentAddress(address _newPaymentAddress,uint licenseId);changeOwner(address _newOwner);LicenseIssuer(string itemName,string textHash,string url,uint lifeTime,uint price,address _pa);checkLicense(bytes32 factHash,uint8 v,bytes32 sig_r,bytes32 sig_s);checkLicense(address _address);changePaymentAddress(address _newPaymentAddress);stopIssuing();buyLicense(address _address,string _name);getIssuable()"
michinbear/solidity,test/compilationTests/corion/ico.sol,"ico(address foundation, address priceSet, uint256 exchangeRate, uint256 startBlockNum, address[] genesisAddr, uint256[] genesisValue);ICObonus();setInterestDB(address addr, uint256 balance);checkInterest(address addr);getInterest(address beneficiary);setICOEthPrice(uint256 value);extendICO();closeICO();abortICO();connectTokens(address tokenContractAddr, address premiumContractAddr);receiveFunds();buy(address beneficiaryAddress, address affilateAddress);checkPremium(address owner);getIcoReward(uint256 value);isICO()"
blockchain-IoT/blockchain-IoT-core,contracts/Machine.sol,"Machine(ERC20Basic _token, string _model, string _make, bytes32 _id);rentMachine(address _pendingRenter, uint256 _startTime, uint256 _endTime, uint256 _price);claimRental();returnMachine();confirmReturn();_validateId(bytes32 _id)"
stevejaxon/ethereum-tutorials,contracts/exploitative/HoneyBadger.sol,HoneyBadger(address _honeyPotLocation);setTrap(uint _amountOfHoneyInPot);swipeHoney();relent()
dukoolio/d3health_code,contracts/D3AssetRequest.sol,setGeneralInfo(bool x);getGeneralInfo();setAllergies(bool x);getAllergies();setMedications(bool x);getMedications()
holiman/cpp-ethereum,test/unittests/performance/pop.sol,pop()
ethereum/cpp-ethereum,test/unittests/performance/pop.sol,pop()
winsvega/cpp-ethereum,test/unittests/performance/pop.sol,pop()
ethereum/remix,remix-tests/tests/examples_5/test/simple_storage_test.sol,beforeAll();checkIfEven();checkIfOdd()
aragon/aragon-network-token,packages/v2/contracts/interfaces/ApproveAndCallReceiver.sol,"receiveApproval(address _from, uint256 _amount, address _token, bytes calldata _data)"
hainesc/daochain,contract/contracts/DaoHubVerify.sol,"DaoHubVerify();queryImage(address owner, bytes repoTag)"
DaoCloud/dao-chain,contract/contracts/DaoHubVerify.sol,"DaoHubVerify();queryImage(address owner, bytes repoTag)"
Revolution1/daochain,contract/contracts/DaoHubVerify.sol,"DaoHubVerify();queryImage(address owner, bytes repoTag)"
DaoCloud/daochain,contract/contracts/DaoHubVerify.sol,"DaoHubVerify();queryImage(address owner, bytes repoTag)"
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/WIP12-check_package_dot_json_presence/storage.sol,set(int x);get()
eris-ltd/eris,tests/jobs_fixtures/WIP12-check_package_dot_json_presence/storage.sol,set(int x);get()
monax/monax,tests/jobs_fixtures/WIP12-check_package_dot_json_presence/storage.sol,set(int x);get()
eris-ltd/eris-cli,tests/jobs_fixtures/WIP12-check_package_dot_json_presence/storage.sol,set(int x);get()
monax/cli,tests/jobs_fixtures/WIP12-check_package_dot_json_presence/storage.sol,set(int x);get()
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/WIP12-check_package_dot_json_presence/storage.sol,set(int x);get()
DonorToken/DonorToken,test/helpers/BurnableTokenMock.sol,"BurnableTokenMock(address initialAccount, uint initialBalance)"
tarsoqueiroz/NodeJS,Blockchain/Ethereum/web3App/smartContract/src/Greeter.sol,kill();greet()
hoxxep/Ethereum-2FA,contracts/TwoFactorAuth.sol,"TwoFactorAuth(string _url, string _service);authenticate()"
lucywe/rootcore-crowdsale,solidity/contracts/Pausable.sol,pause();unpause()
boisde/Greed_Island,party/contracts/protocol/modules/AmmModule.sol,"initialize(ISetToken _setToken);removeModule();_validateAddLiquidity(ActionInfo memory _actionInfo);_validateRemoveLiquidity(ActionInfo memory _actionInfo);_validateCommon(ActionInfo memory _actionInfo);_executeApprovals(ActionInfo memory _actionInfo);_executeAddLiquidity(ActionInfo memory _actionInfo);_executeAddLiquiditySingleAsset(ActionInfo memory _actionInfo);_executeRemoveLiquidity(ActionInfo memory _actionInfo);_executeRemoveLiquiditySingleAsset(ActionInfo memory _actionInfo);_validateMinimumLiquidityReceived(ActionInfo memory _actionInfo);_validateMinimumUnderlyingReceived(ActionInfo memory _actionInfo);_updateComponentPositions(ActionInfo memory _actionInfo);_updateLiquidityTokenPositions(ActionInfo memory _actionInfo);_getTokenBalances(address _owner, address[] memory _tokens)"
jdetychey/ArtCertificate,ArtCertificatel.sol,ArtGallery();transferOwnership(address _newOwner);transferOwnership(address _newOwner);changeIPFS(string _newIPFSmetadata)
michinbear/solidity,test/compilationTests/MultiSigWallet/MultiSigWalletWithDailyLimit.sol,"MultiSigWalletWithDailyLimit(address[] _owners, uint _required, uint _dailyLimit);changeDailyLimit(uint _dailyLimit);executeTransaction(uint transactionId);isUnderLimit(uint amount);calcMaxWithdraw()"
yoLUkAsss/DEscrutinio,contracts/Election.sol,"createElectionVerify(bytes32 email, bytes32[] newCandidates);createElection(bytes32 email, bytes32[] newCandidates);setElectionInfo(uint cantidadDistritos, uint cantidadEscuelas, uint cantidadMesas);getElectionInfo();verifyAutoridadElectoral(bytes32 email);getCandidates();isValidCandidate(bytes32 candidate);setApoderadoVerify(bytes32 autoridadElectoral, bytes32 apoderado, bytes32 candidato);setApoderado(bytes32 autoridadElectoral, bytes32 apoderado, bytes32 candidato);setDelegadoDeDistritoVerify(bytes32 autoridadElectoral, bytes32 delegadoDistrito, uint8 idDistrito);setDelegadoDeDistrito(bytes32 autoridadElectoral, bytes32 delegadoDistrito, uint8 idDistrito);setDelegadoDeEscuelaVerify(bytes32 delegadoDistrito, bytes32 delegadoEscuela, uint8 idDistrito, uint8 idEscuela);setDelegadoDeEscuela(bytes32 delegadoDistrito, bytes32 delegadoEscuela, uint8 idDistrito, uint8 idEscuela);setPresidenteDeMesaVerify(bytes32 delegadoEscuela, uint distritoId, uint escuelaId, uint mesaId, bytes32 presidenteDeMesaEmail);setPresidenteDeMesa(bytes32 delegadoEscuela, uint distritoId, uint escuelaId, uint mesaId, bytes32 presidenteDeMesaEmail);setVicepresidenteDeMesa(bytes32 delegadoEscuela, uint distritoId, uint escuelaId, uint mesaId, bytes32 presidenteDeMesaEmail);setFiscalVerify(bytes32 apoderadoDePartido, bytes32 candidato, bytes32 fiscalEmail, uint distritoId, uint escuelaId, uint mesaId);setFiscal(bytes32 apoderadoDePartido, bytes32 candidato, bytes32 fiscalEmail, uint distritoId, uint escuelaId, uint mesaId);getDistrito(uint id);getEscuela(uint distritoId, uint escuelaId);getMesa(uint distritoId, uint escuelaId, uint mesaId)"
Blocksure/kimchi,test/contracts/OverloadContract.sol,"overloadedMethod(address arg1);overloadedMethod(address arg1, uint arg2);overloadedMethod(address arg1, uint arg2, string arg3)"
charles-cooper/raiden,raiden/smart_contracts/NettingChannelLibrary.sol,"isValidNonce(Data storage self, uint64 nonce);deposit(Data storage self, uint256 amount);close(Data storage self, bytes their_transfer);updateTransfer(Data storage self, bytes their_transfer);withdraw(Data storage self, bytes locked_encoded, bytes merkle_proof, bytes32 secret);computeMerkleRoot(bytes lock, bytes merkle_proof);settle(Data storage self);getTransferRawAddress(bytes memory signed_transfer);decodeTransfer(bytes transfer_raw);decodeDirectTransfer(bytes memory message);decodeMediatedTransfer(bytes memory message);decodeRefundTransfer(bytes memory message);decodeLock(bytes lock);signatureSplit(bytes signature);slice(bytes a, uint start, uint end);index_or_throw(Data storage self, address participant_address);min(uint a, uint b);max(uint a, uint b);kill(Data storage self)"
silasdavis/eris-db,tests/jobs_fixtures/app49-return-array-with-RETURNDATACOPY/returnArray.sol,singleDigitPrimes()
silasdavis/burrow,tests/jobs_fixtures/app49-return-array-with-RETURNDATACOPY/returnArray.sol,singleDigitPrimes()
WishFinanceCom/WF-contracts,contracts/core/event/MultiEventsHistory.sol,authorize(address _caller);reject(address _caller)
xas/ico-regroup,BaseIcos.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner);transferOwnership(address newOwner)"
blocktix/blocktix,contracts/Blocktix.sol,destroy()
dehydr8/oracle-service,contracts/TestContract.sol,"TestContract(address oraclize);result();update();__callback(bytes32 myid, string result)"
dltdojo/courses,ethereum/service/explorer/mycoin.sol,"Coin();mint(address receiver, uint amount);send(address receiver, uint amount);transfer(address to)"
motionwerkGmbH/ethermint,tests/integration/truffle/gasLimit/test.sol,Test()
ramilexe/ethermint,tests/integration/truffle/gasLimit/test.sol,Test()
montyly/manticore,tests/ethereum/contracts/consensys_benchmark/integer_overflow_multitx_multifunc_feasible.sol,init();run(uint256 input)
trailofbits/manticore,tests/ethereum_bench/consensys_benchmark/integer_overflow_multitx_multifunc_feasible.sol,init();run(uint256 input)
hesusruiz/fabricaudit,requires/san-lab/banketh-quorum/solidity/cryptobank.sol,"cryptobank(bytes32 _bankCode, bytes32 _currency);totalSupply();balanceOf(address owner);transfer(address to, uint256 value);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);allowance(address owner, address spender);openAccount();makeTransfer(uint256 sender, uint256 amount, uint256 receiver, bytes32 message);setBankName(bytes32 _bankName);setFees(uint256 _feePerMillion, uint256 _maxFee);addFunds(uint256 account, uint256 funds);removeFunds(uint256 account, uint256 funds, uint256 redemptionHash, uint256 errorCode);setOverdraft(uint256 account, uint256 limit);blockAccount(uint256 account);unblockAccount(uint256 account);pause_for_maintenance();resume();set_payments_processor(address paymentsProcessorAddress);cancel_payment(uint256 paymentID);committ_payment(uint256 paymentID, uint256 to_account);return_rejected_payment(uint256 paymentID);getAccountNumber(address user);numberOfAccounts();closeDown();changeBankAddress(address newAddress)"
michinbear/solidity,test/compilationTests/gnosis/Events/CategoricalEvent.sol,redeemWinnings();getEventHash()
elementrem/solidity,test/compilationTests/gnosis/Events/CategoricalEvent.sol,redeemWinnings();getEventHash()
TITandil/blockchain-workshop,contracts/Workshop.sol,Workshop();addAttendant(string name);increaseAttendants(uint256);start();stop()
erkmos/moeda,contracts/test/TestMintingToken.sol,"create(address recipient, uint256 amount);issueTokens()"
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol,""
SilentCicero/wafr,src/tests/solidityTests/boardroom/boardroom/OwnedProxy.sol,"OwnedProxy(address _owner);forward_transaction(address _destination, uint _value, bytes _calldata);transfer_ownership(address _owner)"
radmen/eth-split,contracts/EthSplit.sol,"EthSplit(address[] shareholdersList, address donateTo);payout()"
dltdojo/courses,ethereum/truffle/mytoken/test/TestMyToken.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNew()
ChronoBank/LX-SC,contracts/IPFSLibrary.sol,"setupEventsHistory(address _eventsHistory);getHash(address _from, bytes32 _itemName);setHash(bytes32 _itemName, bytes32 _itemHash);emitHashSet(address _from, bytes32 _itemName, bytes32 _itemHash);_emitHashSet(address _from, bytes32 _itemName, bytes32 _itemHash)"
montyly/manticore,tests/ethereum/contracts/consensys_benchmark/integer_overflow_staticarray.sol,get(uint256 i)
trailofbits/manticore,tests/ethereum_bench/consensys_benchmark/integer_overflow_staticarray.sol,get(uint256 i)
mingocoin/contracts,contracts/MultiOwnable.sol,MultiOwnable();addOwner(address newOwner);removeOwner(address ownerToRemove);isOwner(address possibleOwner)
Neurone/persians,contracts/SimpleToken.sol,"SimpleToken(string _name, string _symbol, uint256 _decimals, uint256 _totalSupply);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);balanceOf(address _owner);allowance(address _owner, address _spender)"
silasdavis/eris-db,tests/compilers_fixtures/simpleContract.sol,f()
silasdavis/burrow,tests/compilers_fixtures/simpleContract.sol,f()
shahankhatch/dapp-bin,witness/contract.sol,Witness();participate(byte[64] _pub);submit(bytes32 _evidence)
LianaHus/dapp-bin,witness/contract.sol,Witness();participate(byte[64] _pub);submit(bytes32 _evidence)
ethereum/dapp-bin,witness/contract.sol,Witness();participate(byte[64] _pub);submit(bytes32 _evidence)
vaporry/dapp-bin,witness/contract.sol,Witness();participate(byte[64] _pub);submit(bytes32 _evidence)
BattleDrome/token_and_ico,BattleDromeICO.sol,BattleDromeICO();contribute();tokenBalance();isStarted();isComplete();isSuccessful();checkEthBalance(address _contributor);checkSavedEthBalance(address _contributor);checkTokBalance(address _contributor);checkTokSold();checkTokDev();checkTokTotal();percentOfGoal();payMe();payBack();payTokens();payCreator()
slockit/DAO,simpleWithdrawTrustee.sol,"balanceOf(address addr);transferFrom(address from, address to, uint balance);withdraw();trusteeWithdraw()"
Spreadway/core,DAO-develop/simpleWithdrawTrustee.sol,"balanceOf(address addr);transferFrom(address from, address to, uint balance);withdraw();trusteeWithdraw()"
ashellwig/Ethereum-Mutual-Fund,simpleWithdrawTrustee.sol,"balanceOf(address addr);transferFrom(address from, address to, uint balance);withdraw();trusteeWithdraw()"
chainpoint/chainpoint-services,node-eth-contracts/contracts/zeppelin-solidity/contracts/token/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
adklempner/solidity-license,contracts/zeppelin/token/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
onyb/ethane,core/contracts/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
adamdossa/ProfitSharingContract,installed_contracts/zeppelin/contracts/token/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
erkmos/moeda,contracts/vendored/openzeppelin/token/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
rsksmart/rskj,rskj-core/src/test/resources/dsl/codeSizeAfterSuicide/CheckCodeSizeOfSuicidedContract.sol,""
stanta/darfchain,ICO/contracts/CentrallyIssuedToken.sol,"CentrallyIssuedToken(address _owner, string _name, string _symbol, uint _totalSupply, uint _decimals)"
NahimNasser/ethwaterloo2017,contracts/GitBounty.sol,"createBounty(string issueUrl, address[] voters,uint256  expiresIn );getAllBounties();getAllTheThings();GitBounty(string issueUrl, address[] voters,uint256  expiresIn, GitBountyCreator parentAddress );addToBounty();vote(address addr);doCount(address addr);addVotePair(address voter, address hunter);hasVoted(address voter, address hunter);getAllPRS()"
ownage-ltd/ether-router,contracts/test/Multiplier.sol,"multiply(uint x, uint y)"
dltdojo/courses,ethereum/dapps/token/T01_ZeppelinToken.sol,FooStdToken();FooMintableToken();FooBurnableToken();testMintableToken();testMintInvalid()
eris-ltd/eris-db,execution/solidity/evm.sol,get_vm();get_number();get_vm();get_number();call_get_vm(E e);call_get_number(E e)
montyly/manticore,tests/ethereum/contracts/consensys_benchmark/assert_sym.sol,run(uint256 param)
trailofbits/manticore,tests/ethereum_bench/consensys_benchmark/assert_sym.sol,run(uint256 param)
jmeis/solidity-examples,contracts/coin.sol,"Coin();mint(address receiver, uint amount)"
jmeis/solidity,contracts/coin.sol,"Coin();mint(address receiver, uint amount)"
PeculiumPCL/Peculium,contracts/v1.1/BountyManager.sol,BountyManager();InitPeculiumAdress(address peculAdress);transferManager()
PeculiumPCL/Peculium,contracts/v2/BountyManager.sol,BountyManager();InitPeculiumAdress(address peculAdress);transferManager()
PeculiumPCL/Peculium,contracts/v1.0/BountyManager.sol,BountyManager();InitPeculiumAdress(address peculAdress);transferManager()
PeculiumPCL/Peculium,contracts/v1.2/BountyManager.sol,BountyManager();InitPeculiumAdress(address peculAdress);transferManager()
DennisBPeterson/Fairsale,fairsale.sol,"Fairsale(uint _blocks, uint _target);_deposit();deposit();withdrawRefund();fundOwner()"
nolash/go-ethereum-p2p-demo,solidity/escrow/escrow.sol,"createEscrow(bytes8 _name);addParticipant(uint256 _seq, uint80 _amount, address _who, address _beneficiary);participantPut(uint256 _id);participantRelease(uint256 _id);participantPayout(uint256 _id);participantCancel(uint256 _id)"
triage/KPCSEthereum,contracts/Administrator.sol,"Administrator(string _name, address _administrator);getType()"
lzxm160/test-dapp,contracts/Tenancy.sol,"rate(uint rating);Person(string n, address a);getAccountAddress();Locality(string n);EjariRulesC();addEjariRule(Locality locality, uint incrementPercentage, uint maxRent);isValidCondition(Locality locality, uint rent, uint incrementPercentage);PropertyC(string lt, string ln, Locality loc);getLocality();Registry(EjariRulesC ejariRule);assignOwnership(Person owner, address property);isValidTenancy(PropertyC property, uint rent, uint incrementPercentage);Tenancy(Registry registry, Person person, PropertyC property, uint rent, uint security, uint start, uint end);updateCondition(uint rent, uint security, uint start, uint end);negotiate(Person person, uint rent, uint security, uint start, uint end);withdraw();rejectNegotiation(address prospectiveTenant);acceptNegotiationOwner(address prospectiveTenant);acceptNegotiationTenant();terminate()"
raviupreti85/tenancy-dapp,contracts/Tenancy.sol,"rate(uint rating);Person(string n, address a);getAccountAddress();Locality(string n);EjariRulesC();addEjariRule(Locality locality, uint incrementPercentage, uint maxRent);isValidCondition(Locality locality, uint rent, uint incrementPercentage);PropertyC(string lt, string ln, Locality loc);getLocality();Registry(EjariRulesC ejariRule);assignOwnership(Person owner, address property);isValidTenancy(PropertyC property, uint rent, uint incrementPercentage);Tenancy(Registry registry, Person person, PropertyC property, uint rent, uint security, uint start, uint end);updateCondition(uint rent, uint security, uint start, uint end);negotiate(Person person, uint rent, uint security, uint start, uint end);withdraw();rejectNegotiation(address prospectiveTenant);acceptNegotiationOwner(address prospectiveTenant);acceptNegotiationTenant();terminate()"
redsquirrel/augur-core,src/reporting/Branch.sol,"initialize(Branch _parentBranch, bytes32 _parentPayoutDistributionHash);fork();getTypeName();getParentBranch();getParentPayoutDistributionHash();getReputationToken();getTopics();getForkingMarket();getForkEndTime();getReportingWindow(uint256 _reportingWindowId);getChildBranch(bytes32 _parentPayoutDistributionHash);getReportingWindowId(uint256 _timestamp);getReportingPeriodDurationInSeconds();getReportingWindowByTimestamp(uint256 _timestamp);getReportingWindowByMarketEndTime(uint256 _endTime, bool _hasAutomatedReporter);getPreviousReportingWindow();getCurrentReportingWindow();getNextReportingWindow();getChildBranch(bytes32 _parentPayoutDistributionHash);isContainerForReportingWindow(Typed _shadyTarget);isContainerForDisputeBondToken(Typed _shadyTarget);isContainerForRegistrationToken(Typed _shadyTarget);isContainerForMarket(Typed _shadyTarget);isContainerForReportingToken(Typed _shadyTarget);isContainerForShareToken(Typed _shadyTarget);isParentOf(Branch _shadyChild);getReportingWindowForForkEndTime()"
trailofbits/greenhorn,csaw-2017/ethersplay/ethersplay.sol,"ethersplay(uint8 _numPlayers);giveTurnToPlay(address current);go(uint8 card);winningCard();stringToBytes(string memory source);supercustomhash(bytes message);strConcat(bytes _a, string _b, bytes _c);addPlayerName(string name)"
web3j/web3j,codegen/src/test/resources/solidity/revert/Revert.sol,set(uint _number);get()
AleksandrLeonov/Baccara-Smart-Contract,cardmanager.sol,CardManger();getValueByNumber(uint number);getNameByNumber(uint number);getTypeByNumber(uint number);close()
stanta/darfchain,ICO/contracts/UpgradeAgent.sol,"isUpgradeAgent();upgradeFrom(address _from, uint256 _value)"
redengin/etherriche,contracts/EtherRiche.sol,"buySeat( string _avatarUrl, string _message, string _messageUrl );getSeatClaim( uint _index );getSeatAddress( uint _index );getSeatAvatarUrl( uint _index );getSeatMessageUrl( uint _index );getSeatMessage( uint _index );_presentValue( uint _value );_updateClaims( string _avatarUrl, string _message, string _messageUrl  );_updateBurnRate()"
anniemwu/chainge,contracts/User1.sol,storeProof(bytes32 proof);notarize(string descriptor);proofFor(string descriptor);checkString(string descriptor);findString(bytes32 proof);hasProof(bytes32 proof)
redsquirrel/augur-core,src/factories/ReportingTokenFactory.sol,"createReportingToken(Controller _controller, Market _market, uint256[] _payoutNumerators)"
pipermerriam/populus,tests/fixtures/ImportTestA.sol,ImportTestA()
globaljobcoin/GJC,contracts/SLMToken.sol,SLMToken()
dltdojo/courses,ethereum/solidity/T999_PrecompiledContracts.sol,""
DOkwufulueze/eth-vue,contracts/Setup.sol,""
SilentCicero/wafr,src/tests/solidityTests/gasUsage/examples/OpenRegistryRules.sol,"OpenRegistryRules(address _registry);hasWon(uint _proposalID);canVote(address _sender, uint _proposalID);canPropose(address _sender);votingWeightOf(address _sender, uint _proposalID)"
montyly/manticore,tests/ethereum/contracts/detectors/etherleak_true_pos_argument.sol,fakeconstructor();withdrawfunds(address attacker)
trailofbits/manticore,tests/ethereum/contracts/detectors/etherleak_true_pos_argument.sol,fakeconstructor();withdrawfunds(address attacker)
EtherBattle/Ether-Battle-Token-Contract,EtherBattleCoin.sol,"safeSub(uint256 a, uint256 b);EtherBattleCoin();name();symbol();decimals();totalSupply();balanceOf(address _owner);allowance(address _owner, address _spender);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);transfer(address _to, uint256 _value);isContract(address _address);transfer(address _to, uint256 _value, bytes _data);transferToAddress(address _to, uint256 _value, bytes _data);transferToContract(address _to, uint256 _value, bytes _data);tokenFallback(address _sender, uint256 _value, bytes _data);claimTokens(address _token);tokenMultiplier();burnLeftovers();convertToATK(uint256 _value);convertToDEF(uint256 _value);logIn();logOut();claimCooldowns();getPlayerStats();attack(address _target);retaliate();randomAttack();randomTargetAssign();raiseLimit()"
AragonOne/zeppelin-solidity,contracts/DayLimit.sol,DayLimit(uint _limit);_setDailyLimit(uint _newLimit);_resetSpentToday();underLimit(uint _value);today()
zchn/ethereum-analyzer,examples/etherscan.io/CryptoKittiesSalesAuction.sol,"Ownable();transferOwnership(address newOwner);totalSupply();balanceOf(address _owner);ownerOf(uint256 _tokenId);approve(address _to, uint256 _tokenId);transfer(address _to, uint256 _tokenId);transferFrom(address _from, address _to, uint256 _tokenId);name();symbol();tokensOfOwner(address _owner);tokenMetadata(uint256 _tokenId, string _preferredTransport);supportsInterface(bytes4 _interfaceID);_owns(address _claimant, uint256 _tokenId);_escrow(address _owner, uint256 _tokenId);_transfer(address _receiver, uint256 _tokenId);_addAuction(uint256 _tokenId, Auction _auction);_cancelAuction(uint256 _tokenId, address _seller);_bid(uint256 _tokenId, uint256 _bidAmount);_removeAuction(uint256 _tokenId);_isOnAuction(Auction storage _auction);_currentPrice(Auction storage _auction);_computeCut(uint256 _price);pause();unpause();ClockAuction(address _nftAddress, uint256 _cut);withdrawBalance();bid(uint256 _tokenId);cancelAuction(uint256 _tokenId);cancelAuctionWhenPaused(uint256 _tokenId);getAuction(uint256 _tokenId);getCurrentPrice(uint256 _tokenId);SaleClockAuction(address _nftAddr, uint256 _cut);bid(uint256 _tokenId)"
paulhauner/token-syndicate,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
dltdojo/courses,ethereum/solidity/T123_Privacy.sol,set(uint _b);testPrivacy();set()
Davidyuk/Hackathon2017,app/public/solidity/Car.sol,"Auto(address r, string _id);makeOperation(uint32 id, string notes);changeOwner(address newOwner);getOperationsLength();getOperation(uint32 i);setRegistry(address r);makePrivate();makePublic();touch()"
stevejaxon/ethereum-tutorials,contracts/stackexchange/abi.sol,""
melonproject/protocol,contracts/integrations/adapters/ChaiAdapter.sol,"identifier();parseAssetsForMethod(bytes4 _selector, bytes calldata _encodedCallArgs);lend(bytes calldata _encodedCallArgs, bytes calldata _encodedAssetTransferArgs);redeem(bytes calldata _encodedCallArgs, bytes calldata _encodedAssetTransferArgs);__decodeCallArgs(bytes memory _encodedCallArgs)"
silasdavis/eris-db,tests/jobs_fixtures/app35-library_handling/consuming-contract.sol,"append(uint value);replace(uint _old, uint _new)"
silasdavis/burrow,tests/jobs_fixtures/app35-library_handling/consuming-contract.sol,"append(uint value);replace(uint _old, uint _new)"
eris-ltd/eris-db,tests/jobs_fixtures/app35-library_handling/consuming-contract.sol,"append(uint value);replace(uint _old, uint _new)"
SilentCicero/wafr,src/tests/solidityTests/excludeTest/another/tests/test.Another.sol,""
SmartChainX/ChainBlockchain,Contracts/ICO/CentrallyIssuedToken.sol,"CentrallyIssuedToken(address _owner, string _name, string _symbol, uint _totalSupply, uint _decimals)"
LykkeCity/EthereumApiDotNetCore,src/ContractBuilder/contracts/token/erc20Contract.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
ryepdx/gulp-ethertest,loggable.sol,log(string message);logBytes(bytes32 message);logUint(uint256 message);logStr(string message);Loggable();setLogger(address _logger)
ryepdx/welcometothejungle,src/contracts/loggable.sol,log(string message);logBytes(bytes32 message);logUint(uint256 message);logStr(string message);Loggable();setLogger(address _logger)
iam-dev/ERC23,installed_contracts/zeppelin-solidity/contracts/lifecycle/Destructible.sol,Destructible();destroy();destroyAndSend(address _recipient)
TruLtd/tru-reputation-token,src/0.1.9/TruCrowdSaleFull.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);Ownable();transferOwnership(address newOwner);balanceOf(address who);transfer(address to, uint256 value);transfer(address _to, uint256 _value);balanceOf(address _owner);allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);increaseApproval(address _spender, uint _addedValue);decreaseApproval(address _spender, uint _subtractedValue);setReleaseAgent(address addr);setTransferAgent(address addr, bool state);releaseTokenTransfer();mint(address _to, uint256 _amount);finishMinting(bool _presale, bool _sale);isUpgradeAgent();upgradeFrom(address _from, uint256 _value);TruUpgradeableToken(address _upgradeMaster);upgrade(uint256 _value);setUpgradeAgent(address _agent);getUpgradeState();setUpgradeMaster(address _master);canUpgrade();TruReputationToken();changeBoardAddress(address _newAddress);canUpgrade();setUpgradeMaster(address _master);halt();unhalt();buy();updateWhitelist(address _purchaser, uint _status);changeEndTime(uint256 _endTime);hasEnded();checkSaleValid();validatePurchase(address _purchaser);forwardFunds();buyTokens(address _purchaser);finalise();completion()"
TruLtd/tru-reputation-token,src/0.1.10/TruCrowdSaleFull.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);Ownable();transferOwnership(address newOwner);balanceOf(address who);transfer(address to, uint256 value);transfer(address _to, uint256 _value);balanceOf(address _owner);allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);increaseApproval(address _spender, uint _addedValue);decreaseApproval(address _spender, uint _subtractedValue);setReleaseAgent(address addr);setTransferAgent(address addr, bool state);releaseTokenTransfer();mint(address _to, uint256 _amount);finishMinting(bool _presale, bool _sale);isUpgradeAgent();upgradeFrom(address _from, uint256 _value);TruUpgradeableToken(address _upgradeMaster);upgrade(uint256 _value);setUpgradeAgent(address _agent);getUpgradeState();setUpgradeMaster(address _master);canUpgrade();TruReputationToken();changeBoardAddress(address _newAddress);canUpgrade();setUpgradeMaster(address _master);halt();unhalt();buy();updateWhitelist(address _purchaser, uint _status);changeEndTime(uint256 _endTime);hasEnded();checkSaleValid();validatePurchase(address _purchaser);forwardFunds();buyTokens(address _purchaser);finalise();completion()"
melonproject/protocol,contracts/integrations/interfaces/IChai.sol,"exit(address, uint256);join(address, uint256)"
Niky4000/UsefulUtils,projects/tutorials-master/tutorials-master/libraries/src/main/resources/Greeting.sol,Greeting(string _message);greet();setGreeting(string _message)
stevejaxon/ethereum-tutorials,test/TestToken_Transfer.sol,testInitialBalanceUsingDeployedContract();testDeployNewTokenWithTheTestContractAsOwner();testTransferCorrectlySendsTokens();testTransferHandlesTooLargeRequest();testTransferHandlesNegativeAmountRequest();testTransferTokensUsingRawCall()
robmyers/artworld-ethereum,dapps/colours-in-my-studio/contracts/TheColoursInMyStudio.sol,owned();currentColours()
cgewecke/solcover,test/sources/function/abstract.sol,abstractFn(uint x)
JoinColony/solcover,test/sources/function/abstract.sol,abstractFn(uint x)
bluedroplet/blobstore-ethereum,src/MixItemStoreShortId.sol,createShortId(bytes32 itemId);getItemId(bytes4 shortId);getShortId(bytes32 itemId)
link-blockchain/blobstore,src/MixItemStoreShortId.sol,createShortId(bytes32 itemId);getItemId(bytes4 shortId);getShortId(bytes32 itemId)
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.4.24/modifier2.sol,a()
soad003/browser-solidity,test/staticanalysis/test-contracts/modifier2.sol,a()
hundsun/blockchain,eth-wallet/app/coin/ScoreToken.sol,"owned();transferOwnership(address newOwner);receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);earn(address _to, uint256 _value);deduct(address _to, uint256 _value);transfer(address _to, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);transferFrom(address _from, address _to, uint256 _value);freezeAccount(address target, bool freeze);setPrices(uint256 newSellPrice, uint256 newBuyPrice);buy();sell(uint256 amount);kill()"
bradyo/ark-java-smart-bridge-listener,data/sample.sol,mortal();kill();greeter(string _greeting);greet()
hackatonIVCIMSC/Ethereum_Ricardian_Token,RC.sol,"transfer(address _to, uint _amount);transferFrom(address _from, address _to, uint _amount);getAllowance(address _owner, address _spender)"
prashantpawar/truffle-test,contracts/SimpleStorage.sol,SimpleStorage();set(uint x);get()
stanta/darfchain,ICO/contracts/GnosisWallet.sol,"MultiSigWallet(address[] _owners, uint _required);addOwner(address owner);removeOwner(address owner);replaceOwner(address owner, address newOwner);changeRequirement(uint _required);submitTransaction(address destination, uint value, bytes data);confirmTransaction(uint transactionId);revokeConfirmation(uint transactionId);executeTransaction(uint transactionId);isConfirmed(uint transactionId);addTransaction(address destination, uint value, bytes data);getConfirmationCount(uint transactionId);getTransactionCount(bool pending, bool executed);getOwners();getConfirmations(uint transactionId);getTransactionIds(uint from, uint to, bool pending, bool executed)"
cryptomatica/RealEstate,contracts/RealEstate.sol,"RealEstate(uint initial);getpersonCount();getPropertyCount();addPerson(bytes32 NationalID, bytes32 FirstName, bytes32 LastName, bytes32 Gender, uint DateOfBirth, bytes32 ImageLink, address PersonAddress);removePerson(bytes32 NationalID);getPerson(bytes32 NationalID);listPersons();addProperty(bytes32 NationalID, bytes32 PropertyID, bytes32 PropertyType, bytes32 Address, bytes32 City, uint ZipCode, bytes32 Country, bytes32 ImageLink, uint SaleValue);removeProperty(bytes32 PropertyID);getProperty(bytes32 PropertyID);listProperty()"
readevalprint/aragon-core,contracts/apps/AppProxy.sol,"AppProxy(Kernel _kernel, bytes32 _appId)"
Majoolr/ethereum-libraries,ArrayUtilsLib/truffle/contracts/Array32Lib.sol,"sumElements(uint32[] storage self);getMax(uint32[] storage self);getMin(uint32[] storage self);indexOf(uint32[] storage self, uint32 value, bool isSorted);getParentI(uint256 index);getLeftChildI(uint256 index);heapSort(uint32[] storage self);uniq(uint32[] storage self)"
melonproject/protocol,contracts/utils/MathHelpers.sol,""
iam-dev/ERC23,installed_contracts/zeppelin-solidity/contracts/token/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
ganchix/ETH_16_Ethereum,UNIT-4/splitterProject/contracts/Splitter.sol,"split(address friendOne, address friendTwo);withdraw()"
DonorToken/DonorToken,test/helpers/FinalizableCrowdsaleImpl.sol,""
jensenbox/singnet,dao/contracts/market/MarketJobInterface.sol,withdraw();setJobCompleted(bytes lastPacket);setJobAccepted();deposit(uint256 amount)
AragonOne/zeppelin-solidity,contracts/test-helpers/StoppableMock.sol,StoppableMock();normalProcess();drasticMeasure()
TrueBitFoundation/webasm-solidity,contracts/judge.sol,"checkProof(bytes32[] pr, bytes32[] pr2);judgeCustom(bytes32 start, bytes32 next, bytes32 ex_state, uint ex_size, bytes32 op, uint[4] regs, bytes32[10] roots, uint[4] pointers, bytes32[] _proof);checkFileProof(bytes32 state, bytes32[10] roots, uint[4] pointers, bytes32[] _proof, uint loc);checkProof(bytes32 hash, bytes32 root, bytes32[] _proof, uint loc);calcStateHash(bytes32[10] roots, uint[4] pointers);calcIOHash(bytes32[10] roots)"
pipermerriam/populus,tests/fixtures/WithConstructorArguments.sol,"WithConstructorArguments(uint a, bytes32 b)"
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/contracts/token/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
pash7ka/zeppelin-solidity,contracts/token/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
iswarm/p2pCny,contracts/token/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
readevalprint/aragon-core,contracts/zeppelin/token/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
pz7/liquet,node_modules/zeppelin-solidity/contracts/token/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/token/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
dmx374/zeppelin-solidity,contracts/token/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
cashpokerpro-dev/cash-smartcontracts,contracts/token/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
cinderblockchain/cindertoken,contracts/token/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
zchn/ethereum-analyzer,examples/solidity.readthedocs.io/control-structures/loops.sol,ControlStructure(uint input1)
besttests/ethereum,spec/contracts/sample.sol,"deposit(uint _id);refill();withdraw(address _to, uint _value);drain(address _to, uint _value)"
Neufund/Contracts,contracts/lib/IERC20CallContract.sol,""
BiathlonHelsinki/BiathlonContract,contracts/BiathlonNode.sol,"BiathlonNode(address _nodelist, string _name, string _location, string _url);get_config();token_is_active(address _addr);count_tokens();register_user(address _user);register_token(address _addr, string _name);change_nodelist(address _to);require(msg.sender == nodelist_address);upgrade_token(address _from, address _to, string _name);transfer_token_ownership(address _new);register_minting(address _addr);connect_to_nodelist()"
wealdtech/domainsale,contracts/DomainSale.sol,"owner(bytes32 _hash);transfer(bytes32 _hash, address newOwner);entries(bytes32 _hash);DomainSale(address _registry);sale(string _name);isAuction(string _name);isBuyable(string _name);auctionStarted(string _name);auctionEnds(string _name);minimumBid(string _name);price(string _name);balance(address addr);offer(string _name, uint256 _price, uint256 reserve, address referrer);cancel(string _name);buy(string _name, address bidReferrer);bid(string _name, address bidReferrer);finish(string _name);withdraw();invalidate(string _name);distributeFunds(uint256 amount, address seller, address startReferrer, address bidReferrer)"
Quiark/populus,tests/command_line_interface/projects/test-01/contracts/mortal.sol,kill();kill()
Majoolr/ethereum-libraries,TokenLib/v1.0.0/TokenLib.sol,"transfer(TokenStorage storage self, address _to, uint256 _value);balanceOf(TokenStorage storage self, address _owner);approve(TokenStorage storage self, address _spender, uint256 _value);allowance(TokenStorage storage self, address _owner, address _spender);changeOwner(TokenStorage storage self, address _newOwner);mintToken(TokenStorage storage self, uint256 _amount);closeMint(TokenStorage storage self);burnToken(TokenStorage storage self, uint256 _amount)"
Bmillidgework/Misc-Maths,ethereum/Voting.sol,Voting(bytes32[] candidateNames);totalVotesFor(bytes32 candidate);voteForCandidate(bytes32 candidate);validCandidate(bytes32 candidate)
elementrem/solidity,test/compilationTests/corion/tokenDB.sol,"increase(address owner, uint256 value);decrease(address owner, uint256 value);setAllowance(address owner, address spender, uint256 amount, uint256 nonce);getAllowance(address owner, address spender)"
Qipingsmile006/TianLianCoin,contracts/ERC20Token.sol,"transfer(address _to, uint256 _amount);transferFrom(address _from, address _to, uint256 _amount);approve(address _spender, uint256 _amount);totalSupply();balanceOf(address _owner);allowance(address _owner, address _spender)"
MzansiRe/iMali,contracts/TokenController.sol,"proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount)"
dltdojo/courses,eth-201709/coin.sol,"Coin();mint(address receiver, uint amount);send(address receiver, uint amount)"
Crypto-Apartments/CRA-ICO-TOKEN,contract/CRATokenConfig.sol,""
SilentCicero/wafr,src/tests/solidityDepTest/anotherThing.sol,""
DonorToken/DonorToken,contracts/token/ERC677Token.sol,"approveAndCall(address _spender, uint256 _value, bytes _data);transferAndCall(address _to, uint256 _value, bytes _data)"
LOOMIA/loomia,ethereum/contracts/StandardToken.sol,"isToken();transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);balanceOf(address _owner);approve(address _spender, uint _value);allowance(address _owner, address _spender)"
anniemwu/chainge,contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
Dsensor/resolutionwallet,src/server/smartcontracts/dmap-contract.sol,DmapContract();getDmapDetail();getDmapDetailchash();getDmapDapp();getDataModel();getDsampling();getDpeerlist();getDsamplingCount();getDinviteCount();getPredpath();getDscoring();remove()
RyuuGan/sol-merger,test/contracts/circular/Circular2.sol,""
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.5/transfer.sol,f(address payable r)
dbrainio/Soltsice,contracts/BotManageable.sol,"enableBot(address _botAddress);disableBot(address _botAddress, uint64 _fromTimeStampSeconds);isBot(address _botAddress);isBotAt(address _botAddress, uint64 _atTimeStampSeconds)"
RosEvroBank/IDChain,contracts/Administrator.sol,"SetIDChain(address _address);AddParticipant(address _address, string _name, uint8 _role, string _url, string _uri, bytes32 _agreementHash);RemoveParticipant(address _address);GetParticipantRole(address _address);SetParticipantName(address _address, string _name);SetParticipantRole(address _address, uint8 _role);SetParticipantURL(address _address, string _url);SetParticipantURI(address _address, string _uri);SetParticipantAgrHash(address _address, bytes32 _agreementHash);GetParticipant(address _address);List();changeOwner(address _newOwner)"
drupalnomad/ethereum-contracts,versioned_blob.sol,"VersionedBlob();setOwner(address newOwner);addMember(address member);removeMember(address member);getMembers();commit(bytes blob, string message);checkOut(int i);tag(uint commitId, string tag);findTag(string tag);untag(string tag);checkOutTag(string tag)"
dcntrlzd/helios,test/contracts/lib/Owned.sol,addOwner(address ownerToAdd);removeOwner(address ownerToRemove)
jensenbox/singnet,dao/contracts/tokens/SingularityNetToken.sol,"SingularityNetToken();setOwnership(address _owner);transferTokens(address beneficiary, uint256 amount)"
livepeer/protocol,contracts/Manager.sol,Manager(address _controller);setController(address _controller)
redsquirrel/augur-core,src/factories/MarketFactory.sol,"createMarket(Controller _controller, ReportingWindow _reportingWindow, uint256 _endTime, uint8 _numOutcomes, uint256 _payoutDenominator, uint256 _feePerEthInWei, Cash _denominationToken, address _creator, int256 _minDisplayPrice, int256 _maxDisplayPrice, address _automatedReporterAddress, bytes32 _topic)"
ganchix/ETH_16_Ethereum,UNIT-4/splitterProject/contracts/Owned.sol,Owned();getOwner();setOwner(address newOwner)
ganchix/ETH_16_Ethereum,UNIT-5/shopfrontProject/contracts/Owned.sol,Owned();getOwner();setOwner(address newOwner)
ganchix/ETH_16_Ethereum,UNIT-4/remittanceProject/contracts/Owned.sol,Owned();getOwner();setOwner(address newOwner)
alice-si/contracts,contracts/alice/AliceToken.sol,"mint(address _to, uint256 _value);destroy(address _from, uint256 _value)"
ThatOtherZach/Ebola-on-Ethereum,EbolaContract.sol,getInfo();getEbola();tipCreator();kill()
tokenai/tokenai-network-token,contracts/HasNoTokens.sol,"tokenFallback(address from_, uint256 value_, bytes data_);isTokenSaleToken(address tokenAddr);reclaimToken(address tokenAddr)"
Atzen2/hacking-law-proto,truffle/contracts/EmployeeWallet.sol,"EmployeeWallet(string _name);resetWallet();allowWorking(uint32 _workHours);sendMoney(uint32 amount);validContract(address _agencyAddress, uint32 _hWage)"
CMLTeam/ICOsurance,truffle/contracts/Verifiable.sol,verify(address icoTokenAddr)
DroneEmployee/contracts,interface/AirTrafficControllerInterface.sol,pay(address _drone);release(address _drone);setROSInterface(RouteController _ros)
pipermerriam/ethereum-grove,contracts/Grove.sol,"computeIndexId(address owner, bytes32 indexName);computeNodeId(bytes32 indexId, bytes32 id);getIndexRoot(bytes32 indexId);getNodeIndexId(bytes32 nodeId);getNodeValue(bytes32 nodeId);getNodeHeight(bytes32 nodeId);getNodeParent(bytes32 nodeId);getNodeLeftChild(bytes32 nodeId);getNodeRightChild(bytes32 nodeId);getPreviousNode(bytes32 nodeId);getNextNode(bytes32 nodeId);insert(bytes32 indexName, bytes32 id, int value);exists(bytes32 indexId, bytes32 id);remove(bytes32 indexName, bytes32 id);query(bytes32 indexId, bytes2 operator, int value)"
stanta/darfchain,ICO/contracts/TimeVault.sol,"TimeVault(address _teamMultisig, StandardToken _token, uint _unlockedAt);getTokenBalance();unlock()"
mhhf/dapple,test/_fixtures/linker_test_package/src/sol/pkg/contract.sol,""
nexusdev/dapple,test/_fixtures/linker_test_package/src/sol/pkg/contract.sol,""
mothershipcx/contracts,contracts/Contribution.sol,"Contribution();proxyPayment(address _th);onTransfer(address, address, uint256);onApprove(address, address, uint256);doBuy(address _th);isContract(address _addr);refund();finalize();percent(uint256 p);tokensIssued();tokensForSale();getBlockNumber();claimTokens(address _token);pauseContribution();resumeContribution()"
bcosorg/bcos,tool/Testout.sol,put();test();write(string _data)
CORIONplatform/solidity,multiOwner.sol,"moduleMultiOwner(address _multiOwnerAddress);insertAndCheckDo(bytes32 doHash);ownersForChange();calcDoHash(string job, bytes32 data);owners(address addr);multiOwner(address[] newOwners);insertOwner(address addr);dropOwner(address addr);cancelDo(bytes32 doHash);insertAndCheckDo(bytes32 doHash);ownersForChange();calcDoHash(string job, bytes32 data);validDoHash(bytes32 doHash);hashAddress(address addr);_addOwner(address addr);_delOwner(address addr)"
vanderheijden86/p2politics,contracts/Users.sol,"Users();hasRole(address addr, bytes32 domain, bytes32 role);setRole(address addr, bytes32 domain, bytes32 role, uint state)"
daostack/daostack,contracts/schemes/Auction4Reputation.sol,"redeem(address _beneficiary, uint256 _auctionId);bid(uint256 _amount, uint256 _auctionId, bytes32 _agreementHash);transferToWallet();getBid(address _bidder, uint256 _auctionId)"
mixbytes/storiqa_ico,contracts/test_helpers/STQPreICO3TestHelper.sol,getCurrentTime();setTime(uint time);getMinimumFunds();getMaximumFunds()
GovernX/governx-contracts,src/contracts/utils/IHumanStandardToken.sol,"name();decimals();symbol();version();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
ChicoBitcoinJoe/MeDao,contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
eris-ltd/eris-compilers,vendor/github.com/monax/cli/docs/contracts_simple_idi/idi.sol,set(uint x);get()
eris-ltd/lllc-server,vendor/github.com/monax/cli/docs/contracts_simple_idi/idi.sol,set(uint x);get()
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app28-multiple_imports_single_contract/storage.sol,"setString(string x1, string x2)"
eris-ltd/eris,tests/jobs_fixtures/app28-multiple_imports_single_contract/storage.sol,"setString(string x1, string x2)"
monax/monax,tests/jobs_fixtures/app28-multiple_imports_single_contract/storage.sol,"setString(string x1, string x2)"
eris-ltd/eris-cli,tests/jobs_fixtures/app28-multiple_imports_single_contract/storage.sol,"setString(string x1, string x2)"
monax/cli,tests/jobs_fixtures/app28-multiple_imports_single_contract/storage.sol,"setString(string x1, string x2)"
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app28-multiple_imports_single_contract/storage.sol,"setString(string x1, string x2)"
acebusters/safe-token-sale,contracts/satelites/PullPayment.sol,"balanceOf(address _owner);paymentOf(address _owner);changeDailyLimit(uint _dailyLimit);changeWithdrawalDate(address _owner, uint256 _newDate);asyncSend(address _dest);withdraw();isUnderLimit(uint amount)"
kowala-tech/kUSD,client/core/state/test_contracts/SmallInts.sol,SmallInts()
AragonOne/zeppelin-solidity,contracts/lifecycle/Migrations.sol,setCompleted(uint completed);upgrade(address newAddress)
DOkwufulueze/eth-vue,contracts/zeppelin/ownership/Ownable.sol,owner();isOwner();renounceOwnership();transferOwnership(address payable newOwner);_transferOwnership(address payable newOwner)
RyuuGan/sol-merger,test/compiled/ImportStruct.sol,foo()
Blocklancer/Blocklancer-Contracts,solidity/TokenHolderTribunal(THT).sol,"balanceOf(address _owner);getLastTransferred(address owner);getTokenHolderTribunal();getBlocklancerContractHolder();getBlocklancerToken();createDispute(address disputeContract);HowLongIsDisputeStillRunning(uint IDDispute);HowLongIsDisputeRevealStillRunning(uint IDDispute);GetDisputesAtTheMoment();generateVoteSecret(string salt, uint optionId);storeSecretVote(bytes32 secret,uint IDDispute);returnSecretVoteHash(uint IDDispute);revealVote(string salt, uint optionID,uint IDDispute);fundsOf();FinalizeDispute(address disputeContract);if(msg.sender != BlocklancerDataHolder(aBlocklancerDataHolder);getResult(uint IDDispute, uint optionID)"
Communication-Systems-Group/solidity-examples,example6.sol,"store(bytes32 hash);verify(address recipient, string data)"
WingsDao/contracts,contracts/MultiSigWallet/Factory.sol,getInstantiationCount(address creator);register(address instantiation)
spdz/ethereum_class_01,simple.sol,"arithmetics(uint _a, uint _b);multiply(uint _a, uint _b)"
silasdavis/eris-db,tests/jobs_fixtures/app21-string_edge_cases/storage.sol,setString(string memory x);getString()
silasdavis/burrow,tests/jobs_fixtures/app21-string_edge_cases/storage.sol,setString(string memory x);getString()
eris-ltd/eris-db,tests/jobs_fixtures/app21-string_edge_cases/storage.sol,setString(string memory x);getString()
ethermarket/democracy,src/base/owned.sol,Owned();setOwner(address newOwner)
redsquirrel/augur-core,src/factories/SetFactory.sol,"initialize(address owner);addSetItem(address);remove(address);contains(address);count();createSet(Controller _controller, address owner)"
prashantpawar/DisputeResolution,contracts/BrehonContract.sol,"acceptContract();deposit();startContract();raiseDispute();adjudicate(uint _awardPartyA, uint _awardPartyB);getActiveJudgmentByParty(address _partyAddress);claimFunds();raiseAppeal();proposeSettlement(uint _awardPartyA, uint _awardPartyB);acceptSettlement(uint _awardPartyA, uint _awardPartyB)"
chenlian2015/eosEthMarketSample,contracts/OracleChainToken.sol,""
tokenai/tokenai-network-token,contracts/interface/ApproveAndCallFallback.sol,"receiveApproval(address from, uint256 _amount, address _token, bytes _data)"
pipermerriam/populus,populus/assets/Greeter.sol,Greeter();setGreeting(string _greeting);greet()
pipermerriam/populus,docs/assets/Greeter.sol,Greeter();setGreeting(string _greeting);greet()
bluedroplet/blobstore-ethereum,src/MixItemStoreInterface.sol,"getNewItemId(address owner, bytes32 nonce);retractLatestRevision(bytes32 itemId);retract(bytes32 itemId);transferEnable(bytes32 itemId);transferDisable(bytes32 itemId);transfer(bytes32 itemId, address recipient);disown(bytes32 itemId);setNotUpdatable(bytes32 itemId);setEnforceRevisions(bytes32 itemId);setNotRetractable(bytes32 itemId);setNotTransferable(bytes32 itemId);getAbiVersion();getContractId();getInUse(bytes32 itemId);getFlags(bytes32 itemId);getUpdatable(bytes32 itemId);getEnforceRevisions(bytes32 itemId);getRetractable(bytes32 itemId);getTransferable(bytes32 itemId);getOwner(bytes32 itemId);getRevisionCount(bytes32 itemId);getRevisionTimestamp(bytes32 itemId, uint revisionId);getAllRevisionTimestamps(bytes32 itemId)"
link-blockchain/blobstore,src/MixItemStoreInterface.sol,"getNewItemId(address owner, bytes32 nonce);retractLatestRevision(bytes32 itemId);retract(bytes32 itemId);transferEnable(bytes32 itemId);transferDisable(bytes32 itemId);transfer(bytes32 itemId, address recipient);disown(bytes32 itemId);setNotUpdatable(bytes32 itemId);setEnforceRevisions(bytes32 itemId);setNotRetractable(bytes32 itemId);setNotTransferable(bytes32 itemId);getAbiVersion();getContractId();getInUse(bytes32 itemId);getFlags(bytes32 itemId);getUpdatable(bytes32 itemId);getEnforceRevisions(bytes32 itemId);getRetractable(bytes32 itemId);getTransferable(bytes32 itemId);getOwner(bytes32 itemId);getRevisionCount(bytes32 itemId);getRevisionTimestamp(bytes32 itemId, uint revisionId);getAllRevisionTimestamps(bytes32 itemId)"
robmyers/artworld-ethereum,dapps/pay-previous-path/contracts/PayPreviousPath.sol,getPath()
osmode/ddash,ddash/source/RecordManager.sol,"isRecord(string ipfs_hash);getRecordCount();newRecord(string ipfs_hash, string fname, string desc);addRecord(string ipfs_hash, string fname, string desc);updateRecord(string ipfs_hash, string fname, string desc);RecordManager();getRecordByRow(uint row);randomGen(uint seed);greet_omar(uint _i);die()"
santhosh-ktec/blockchain,smartWallet.sol,"smartWallet();transferAmount(address receiver, uint amount);getBalance()"
disruptivewidgets/pay2play-react,src/smart-contract/pay2play.sol,"setRegistrar(address _registrar);withdraw(address winner);getActiveState();state(uint index);isModerator(address moderator);getWager(uint index);getWinCount(address player);getLossCount(address player);getWagerCount();createWager(bytes32 rulesHash);newDeposit(uint index, address player);createWagerAndDeposit(bytes32 rulesHash, address player);counterWagerAndDeposit(uint index, address player);challengeWagerAndDeposit(uint index);setWagerWinner(uint index, address winner);withdrawWinnings(uint index);addModerator(address moderator);setSecret(bytes32 _value);hashValue(bytes32 _value);getTokenBalance(address _address, bytes32 _value)"
coinstruct/coinstruct,AddressRegistry.sol,register(address _user);deregister(address _user);isRegistered(address _user)
silasdavis/eris-db,tests/jobs_fixtures/app26-factories_single_constructor_and_overwriting_testing/GSContract.sol,set(uint x);get()
silasdavis/burrow,tests/jobs_fixtures/app26-factories_single_constructor_and_overwriting_testing/GSContract.sol,set(uint x);get()
eris-ltd/eris-db,tests/jobs_fixtures/app26-factories_single_constructor_and_overwriting_testing/GSContract.sol,set(uint x);get()
erooijak/ethlance,resources/public/contracts/src/sponsorRelated.sol,setEthlanceSponsorWalletContract(address _ethlanceSponsorWallet)
DavdRoman/Payroll,contracts/Tokens/ERC20TokenFactory.sol,"create(uint256 _initialAmount, string _tokenName, uint8 _decimalUnits, string _tokenSymbol)"
orbro/eth-enablers,solidity-stringutils-master/strings_test.sol,"abs(int x);sign(int x);assertEq(strings.slice a, strings.slice b);assertEq(strings.slice a, string b);testSliceToString();testCopy();testLen();testEmpty();testEquals();testNextRune();testOrd();testCompare();testStartsWith();testBeyond();testEndsWith();testUntil();testFind();testRfind();testSplit();testRsplit();testCount();testContains();testConcat();testJoin()"
orbro/eth-enablers,eth-tweet-master/TweetRegistry.sol,"TweetRegistry();register(string name, address accountAddress);getNumberOfAccounts();getAddressOfName(string name);getNameOfAddress(address addr);getAddressOfId(uint id);unregister();adminUnregister(string name);adminSetRegistrationDisabled(bool registrationDisabled);adminSetAccountAdministrator(address accountAdmin);adminRetrieveDonations();adminDeleteRegistry()"
yep/eth-tweet,TweetRegistry.sol,"TweetRegistry();register(string name, address accountAddress);getNumberOfAccounts();getAddressOfName(string name);getNameOfAddress(address addr);getAddressOfId(uint id);unregister();adminUnregister(string name);adminSetRegistrationDisabled(bool registrationDisabled);adminSetAccountAdministrator(address accountAdmin);adminRetrieveDonations();adminDeleteRegistry()"
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.5/notReentrant.sol,withdraw()
dubaicoin-dbix/go-dubaicoin,contracts/chequebook/contract/chequebook.sol,""
Dsensor/resolutionwallet,src/server/smartcontracts/cpuapi-contract.sol,CPUcontract();getCPUhistory(address dmapscidIN);remove()
blockgeeks/workshop,src/auction/baseauction.sol,BaseAuction()
gmo-blockchain/solidity,contracts/AddressGroupLogic_v1.sol,"create(address _sender, bytes32 _id, address _owner, address[] _members, address _cns, bytes32 _contractName);remove(address _sender, bytes32 _id);exist(bytes32 _id);isActive(bytes32 _id);addAllowCnsContract(address _sender, bytes32 _id, address _cns, bytes32 _contractName);removeAllowCnsContract(address _sender, bytes32 _id, address _cns, bytes32 _contractName);isAllowCnsContract(address _cns, bytes32 _contractName, bytes32 _id);setOwner(address _sender, bytes32 _id, address _owner);getOwner(bytes32 _id);addMembers(address _sender, bytes32 _id, address[] _members);removeMembers(address _sender, bytes32 _id, address[] _members);isMember(address _account, bytes32 _id);addChild(address _sender, bytes32 _id, bytes32 _child);removeChild(address _sender, bytes32 _id, bytes32 _child);getChild(bytes32 _id, uint _idx);getChildrenLength(bytes32 _id);setAllowCnsContract(address _sender, bytes32 _id, address _cns, bytes32 _contractName, bool _isAdded);isMemberInDescendant(address _account, bytes32 _id)"
segovro/Community-Currency,contract.sol,"getParameters();getMoneyTotals();getBudget();credit(address _borrower, uint _credit, uint _daysAfter);monitorWallet(address _monitored)"
bcosorg/bcos,systemcontractv2/StringTool.sol,"compare(string _a, string _b);equal(string _a, string _b)"
ethereum/frontier-release,views/content/dao-liquid-democracy.sol,"vote(address nominatedAddress);execute(address target, uint valueInWei, bytes32 bytecode);calculateVotes()"
ethereum/ethereum-org,views/content/dao-liquid-democracy.sol,"vote(address nominatedAddress);execute(address target, uint valueInWei, bytes32 bytecode);calculateVotes()"
orbro/eth-enablers,solidity-baby-steps-master/contracts/70_contract_detector.sol,ContractDetector();testContractOrNormal(address inc_addr);getContractOrNormal(address inc_addr);kill()
bitcoinmeetups/dapp-bin,wallet/wallet2.sol,"multiowned();confirmed(hash _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);isOwner(address _addr);daylimit();setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today();changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(hash _h);Wallet();kill(address _to);execute(address _to, uint _value, bytes _data);confirm(hash _h);confirmVerbose(hash _h, address _to, uint _value, bytes _data)"
CoinOffering/CoinOffering.Dapp,contracts.dev/Corporation.New.01.sol,"getCurrentShareholders();getBalanceByAdress(address _address);getMyShareholderID();getShareholderAdressByID(uint256 _id);getMyShares();transfer(address _to, uint256 _value);getMyProposals();voteForProposal(uint256 _proposalID);countVotes(uint256 _proposalID)"
prashantpawar/DisputeResolution,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
customizablebasicincome/cbi-tokensale,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
keith24/eth-mixer,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
ArnaudBrousseau/blockbin,dapp/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
whachoe/eth_tutorial_game,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
ajagesser/contracts,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
gnidan/interval-trees-solidity,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Pavel-DV/ChronoMint,old/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
anniemwu/chainge,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Jake-Gillberg/git-vote,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
AdChain/AdChainRegistry,contracts/historical/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
adklempner/solidity-license,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
dsperac/consensys-remittance,src/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
jshacks/blockchain-Evote,smart-contracts/cryptovote/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
motionwerkGmbH/ethermint,pegzone/solidity/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
robmyers/artworld-ethereum,dapps/lottery-symbol/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
adklempner/automte-exchange-contracts,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
leopoldjoy/react-ethereum-dapp-example,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
marvinfy/ConsentDirectives,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
unb-ppca-construcao-de-software-2017/ouvidorias-catalogo,catalogo-project/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
xathena/AthenaLabsICO,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
attrox/automi,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
akalinkin/ethsmartcvv,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
assafmo/PotOfEther,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Jonathan56/mosasik_ethereum_demo,ethereum/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
ethplay/ethplay,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
mixbytes/storiqa_ico,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
OT-Future/ethereum-resource,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Veterapreneur/VeteranCoin,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
onewed/unitycoin,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
tls-n/BTCPriceFeed,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
phi-nomenal/phi-nomenal,local_modules/phi-nomenal-contracts/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
chai2/Midterm,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Stennuts66/gamma,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
manosamy/enslisting,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Lawlez/solidity-contracts,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
jbaylina/EIP165Cache,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
charlieknoll/dgpv2,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
stevejaxon/ethereum-tutorials,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
wealdtech/domainsale,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
BeBlockTech/Anemoi,BeBlock-Master/WePowerPresaleContractAudit-master/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Capillar/capillar-solidity,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
DavidBurela/truffledevops,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
robertsdotpm/pay_for_private_keys,truffle/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
onyb/ethane,core/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
coincrowd-it/ico,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
michinbear/solidity,test/compilationTests/gnosis/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Vorxil/MarketStake,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
lserafin/Tic-tac-toe,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
willdavidc/prometh,truffle/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
RealEstateAssetLedger/real_contract,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
gpirescampos/hackforgood,truffle/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
ganchix/ETH_16_Ethereum,UNIT-4/splitterProject/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
ganchix/ETH_16_Ethereum,UNIT-4/remittanceProject/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
ganchix/ETH_16_Ethereum,UNIT-4/frist_project/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
ganchix/ETH_16_Ethereum,UNIT-5/shopfrontProject/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
y12studio/dltdojo,contracts/ddjat/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
lepsalex/Mansplaining,Smart Contracts/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
youvegoteth/youvegoteth.github.io,contracts/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
eodgooch/cryptofund,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
vanderheijden86/p2politics,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
dadaista/GorillaSale,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
BlockchainLabsNZ/Unconf-DApp,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
rmi7/topscifivoter,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
ramilexe/ethermint,pegzone/solidity/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
gichiba/Mattereum_Hackday_Moon,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Majoolr/ethereum-libraries,BasicMathLib/truffle/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Majoolr/ethereum-libraries,StringUtilsLib/truffle/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Majoolr/ethereum-libraries,ArrayUtilsLib/truffle/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
mothershipcx/contracts,contracts/misc/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
vanderthiel/techdays-2017-demo,identity/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
zeroqn/aa-apply,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
radmen/eth-split,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
naddison36/digital-dollar-ethereum,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
bshevchenko/ChronoMint,old/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
D-Transport/smart-contract,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
SenthuranSivananthan/devops-blockchain-jenkins,ethereum/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
mkorpela/randomized,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Dsummers91/Dist-Trade-2017,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
shubhamaggarwal/smart-cart,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
ChristopheDemangeot/SupplyChainBC,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
rakevsul/rtc2017,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Spreadway/core,Prophets/my-ico/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Spreadway/core,eth/login/ethereum-login-sample-master/solidity/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
thousandetherhomepage/ketherhomepage,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
cruskit/truffle-voting-example,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
thekaleidoscope/Hello-Ethereum,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
GenesysLabs/TheKiwi,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
sirasistant/market_consensys_academy,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
ksteigerwald/event-logger-dapp,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
thanhson1085/DemoCoin,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
tiendatiowa/punch-clock,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
elementrem/solidity,test/compilationTests/gnosis/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
validitylabs/LuckyDAO,app/private/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
infwonder/b9lab-course-splitsend,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
wishcoinio/wishcoin-contract,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
NoteGio/openrelay,js/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
dltdojo/courses,ethereum/truffle/multisig/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Storiqa/ico_smart_contract,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
cslarson/exchange,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
cinderblockchain/cindertoken,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
evoluchain/meetup-sc-testing,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
kleroterion/dapp,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
quanticpanda/TCI_truffle,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
quanticpanda/TCI_truffle,tmp/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
nandakishore2009/smart-will,solidity/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
AbhishekShah212/learningspace,ethereum/solidity/truffle/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
QTBlockchain/SolidityNWeb3,SmartContracts/mynewcontract/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
QTBlockchain/SolidityNWeb3,SmartContracts/helloworld/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
QTBlockchain/SolidityNWeb3,patterns/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
QTBlockchain/SolidityNWeb3,SmartContracts/revisit/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
vechain-team/crowdsale-contracts,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
jpoon/EthRelay,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Henri93/PennBlockchain-Smart-Contracts,Token EX/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
imRishabhGupta/smart-kart,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
borboss366/b9lab-splitter,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Qipingsmile006/TianLianCoin,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
adamdossa/ProfitSharingContract,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
adibas03/solidity-data-tree,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Fluid-AI/ICO,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
OpenMoneyDigital/OpenMoneyToken,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
cosmos/fundraiser-lib,src/truffle/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
merlox/dapp-transactions,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
batlinal/ftt,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
aletheia-foundation/aletheia-app,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
francesco-strazzullo/ethereum-dapps-examples,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
erkmos/moeda,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
aquiladev/browniecoin,contracts/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
prashantpawar/truffle-octo-robot,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
cryptomatica/RealEstate,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
corbinpage/ethereum-play,contracts/WasHere.sol,"WasHere();getName();MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
y12studio/dltdojo,contracts/ddjat/contracts/DDJDTCoin.sol,DDJDTCoin()
saikyerubandi/smart-contract-beginner,contracts/Counter.sol,Counter();increase();decrease()
eris-ltd/eris-compilers,tests/simpleContract.sol,f()
eris-ltd/lllc-server,tests/simpleContract.sol,f()
phi-nomenal/phi-nomenal,local_modules/phi-nomenal-contracts/contracts/RFQRegistry.sol,register(RFQ rfq);amountOfOpenRFQs()
Patrick-W-McMahon/Ethereum-Contracts,Games/lottery.sol,"mortal();Lottery(string _lotteryName, uint _potPayoutPercentage, uint _ticketPrice);kill();buy(address _to, uint _count);transfer(address _to, uint _value);getTicketCount(address _user);setWinner(address _user);getWinnerPayout();getHousePayout()"
digitalthailand/course-blockchain-4-dev,examples/DoublyLinkedList.sol,"getData(address key);getElement(address key);addElement(address key, bytes32 data);removeElement(address key)"
daostack/daostack,contracts/universalSchemes/VoteInOrganizationScheme.sol,"executeProposal(bytes32 _proposalId, int256 _param)"
rsksmart/rskj,rskj-core/src/test/resources/dsl/codeSizeAfterSuicide/CreateCreator.sol,""
rsksmart/rskj,rskj-core/src/test/resources/dsl/createAfterSuicide/CreateCreator.sol,""
channel/channel.github.io,contracts/Post.sol,"Post(address feedContract);publish(string headers, string document, address token, uint256 parentID);toContentID(address publisher, string headers, string document, address token, uint256 parentID)"
pash7ka/zeppelin-solidity,test/helpers/SplitPaymentMock.sol,"SplitPaymentMock(address[] _payees, uint256[] _shares)"
tomaaron/raiden,raiden/tests/smart_contracts/SimpleApproveTransfer.sol,"SimpleApproveTransfer(address assetAddress);transfer(address to, uint256 amount)"
prashantpawar/DisputeResolution,contracts/priced.sol,""
montyly/manticore,tests/ethereum/contracts/795.sol,f(uint a)
trailofbits/manticore,tests/ethereum/contracts/795.sol,f(uint a)
michinbear/solidity,test/compilationTests/gnosis/Markets/CampaignFactory.sol,""
elementrem/solidity,test/compilationTests/gnosis/Markets/CampaignFactory.sol,""
michinbear/solidity,test/compilationTests/gnosis/Events/EventFactory.sol,""
elementrem/solidity,test/compilationTests/gnosis/Events/EventFactory.sol,""
slockit/DAO,withdraw.sol,Withdraw();withdrawFromChildDAO(DAO _child);withdraw();withdraw(DAO _dao)
orbro/eth-enablers,DAO-develop/withdraw.sol,Withdraw();withdrawFromChildDAO(DAO _child);withdraw();withdraw(DAO _dao)
Spreadway/core,DAO-develop/withdraw.sol,Withdraw();withdrawFromChildDAO(DAO _child);withdraw();withdraw(DAO _dao)
ashellwig/Ethereum-Mutual-Fund,withdraw.sol,Withdraw();withdrawFromChildDAO(DAO _child);withdraw();withdraw(DAO _dao)
Capillar/capillar-solidity,tools/ThrowProxy.sol,ThrowProxy(address _target);execute();remove()
airalab/core,contracts/robonomics/Factory.sol,"smma(uint256 _prePrice, uint256 _price);wnFromGas(uint256 _gas)"
montyly/manticore,tests/ethereum/contracts/consensys_benchmark/assert_require.sol,run(uint256 _param)
trailofbits/manticore,tests/ethereum_bench/consensys_benchmark/assert_require.sol,run(uint256 _param)
livepeer/protocol,contracts/test/TokenDistributionMock.sol,TokenDistributionMock(uint256 _timeToEnd);finalize();isOver();getEndTime()
suntechsoft/dmarket-smartcontract,contracts/v0.1/DMTokenContract.sol,"DMarketToken(address _wallet, uint _startF, uint _endF, uint _startS, uint _endS);setupPeriodForFirstStep(uint _start, uint _end);setupPeriodForSecondStep(uint _start, uint _end);buyTokens(address _sender);forwardFunds();getBonus(uint256 _tokens);getCurrentPeriod();tokenReserve(address _to, uint256 _value)"
RyuuGan/sol-merger,test/contracts/Struct.sol,""
TheRougeProject/RougeTokens,contracts/RGEToken.sol,"endCrowdsale();setFactory(address _factory);newCampaign(uint32 _issuance, uint256 _value);burn(uint256 _value)"
sonm-io/core,blockchain/source/contracts/MultiSigWallet.sol,"MultiSigWallet(address[] _owners, uint _required);addOwner(address owner);removeOwner(address owner);replaceOwner(address owner, address newOwner);changeRequirement(uint _required);submitTransaction(address destination, uint value, bytes data);confirmTransaction(uint transactionId);revokeConfirmation(uint transactionId);executeTransaction(uint transactionId);external_call(address destination, uint value, uint dataLength, bytes data);isConfirmed(uint transactionId);addTransaction(address destination, uint value, bytes data);getConfirmationCount(uint transactionId);getTransactionCount(bool pending, bool executed);getOwners();getConfirmations(uint transactionId);getTransactionIds(uint from, uint to, bool pending, bool executed)"
ajagesser/contracts,contracts/StembiljetBeheerder.sol,"registerVoteToken(bytes32 receiptIn, bytes32 voteTokenIn);getReceipt(bytes32 voteToken);getVoteTokens()"
b-mueller/mythril,tests/testdata/input_contracts/constructor_assert.sol,""
pipermerriam/ethereum-alarm-clock,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
OpenSTFoundation/SimpleTokenSale,contracts/SimpleToken.sol,"SimpleToken();transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);checkTransferAllowed(address _sender, address _to);burn(uint256 _value);finalize()"
smartexio/smartex-contracts,SmartexFundManager.sol,"SmartexFundsManager();addShareholder(address payoutAccount, uint shares);payDividends(uint startOffset, uint stopOffset, uint value);payDividend(uint shareholderId, uint value);sweep(address _to);advSend(address _to, uint _value, bytes _data)"
dltdojo/courses,ethereum/solidity/T122_External.sol,testPublic(uint[20] a);testPrivate(uint a);testInternal(uint a);testExternal(uint[20] a);testPublic();testExternal();testPrivate()
InventionRegistry/buildingBloX,contracts/copyright.sol,"createCopyright(string Name, address Expression, uint Publication, uint Expiration,string Reservations, string Contact, string Trademark, uint Edition, uint Printings);getName();register(address addr);assign(address a);grantPermission(address a);revokePermission(address a);kill(address a);setBirthDate(address addr);setExpirationDate(address addr)"
SilentCicero/wafr,src/lib/Test.sol,"setup();beforeEach();afterEach();assertTrue(bool _testValue, string _message);assertTrue(bool _testValue);assertFalse(bool _testValue, string _message);assertFalse(bool _testValue);assertEq(uint _actual, uint _expected);assertEq(bytes32 _actual, bytes32 _expected);assertEq(bytes32 _actual, bytes32 _expected, string _message);assertEq(int _actual, int _expected);assertEq(int _actual, int _expected, string _message);assertEq(address _actual, address _expected);assertEq(bool _actual, bool _expected);assertEq(uint _actual, uint _expected, string _message);assertEq(address _actual, address _expected, string _message);assertEq(bool _actual, bool _expected, string _message);assertEq(string _actual, string _expected);assertEq(string _actual, string _expected, string _message);assertEq(bytes _actual, bytes _expected);assertEq(bytes _actual, bytes _expected, string _message)"
LykkeCity/EthereumApiDotNetCore,src/ContractBuilder/contracts/debugContract.sol,DebugContract()
reiven/nerdearla17---solidity,contracts/mortal_hello.sol,mortal();kill();Mortal_HelloWorld();set_foo(string new_foo);get_foo()
Spreadway/core,eth/OpenLongevityPresale.sol,"owned();changeOwner(address _owner);confirmOwner();balanceOf(address who);transfer(address to, uint value);allowance(address owner, address spender);transferFrom(address from, address to, uint value);approve(address spender, uint value);setConfirmer(address _confirmer);setToKnown(address _who);startPresale(address _presaleOwner, uint _etherPrice);timeToFinishPresale();finishPresale();withdraw();PresaleToken();balanceOf(address _who);transfer(address, uint256);transferFrom(address, address, uint256);approve(address, uint256);allowance(address, address);OpenLongevityPresale();killMe()"
cpetty-Novetta/raffle-dapp,imports/smart-contracts/contracts/RaffleInternetBook.sol,"RaffleInternetBook(string _prizeName, uint _numPrizes);nextStage();closeRegistration();generateNewTicket(address userAddress);remove(uint index);generate_random(uint maxNum, string salt);randomChoiceFromticketPool();distributePrizes();getNumUsers();getNumTickets();getStage()"
DonorToken/DonorToken,test/helpers/PausableTokenMock.sol,"PausableTokenMock(address initialAccount, uint initialBalance)"
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.5/ballot_reentrant.sol,"info();giveRightToVote(address voter, address b);delegate(address to);vote(uint8 proposal);winningProposal()"
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.5/ballot_withoutWarnings.sol,winningProposal();winnerName()
dltdojo/courses,ethereum/dapps/ens/T02_FIFSRegistrar.sol,testEns();testEnsFail();initEnsRigistrar();testRegisterSwarmEth();testRegisterNickWalletEth()
Ethbet/ethbet,alpha/contracts/EthbetOraclize.sol,"EthbetOraclize(address _relay, address _tokenAddress, uint _oraclizeGasLimit, uint _oraclizeGasPrice, bool _isDevelopment);setupOraclize(uint _oraclizeGasLimit, uint _oraclizeGasPrice, bool _isDevelopment);setRelay(address _relay);deposit(uint _amount);withdraw(uint _amount);depositEth();withdrawEth(uint _amount);chargeFeeAndLockEthBalance(address _userAddress, uint _amount);chargeFee(address _userAddress);lockEthBalance(address _userAddress, uint _amount);unlockEthBalance(address _userAddress, uint _amount);initBet(uint _betId, address _maker, address _caller, uint _amount, uint _rollUnder);__callback(bytes32 _queryId, string _result, bytes _proof);getOraclizePrice();setOraclizeGasLimit(uint _gasLimit);setOraclizeGasPrice(uint _gasPrice);balanceOf(address _userAddress);ethBalanceOf(address _userAddress);lockedEthBalanceOf(address _userAddress);getBetById(uint _betId);isBetInitialized(uint _betId)"
Ethbet/ethbet,contracts/EthbetOraclize.sol,"EthbetOraclize(address _relay, address _tokenAddress, uint _oraclizeGasLimit, uint _oraclizeGasPrice, bool _isDevelopment);setupOraclize(uint _oraclizeGasLimit, uint _oraclizeGasPrice, bool _isDevelopment);setRelay(address _relay);deposit(uint _amount);withdraw(uint _amount);depositEth();withdrawEth(uint _amount);chargeFeeAndLockEthBalance(address _userAddress, uint _amount);chargeFee(address _userAddress);lockEthBalance(address _userAddress, uint _amount);unlockEthBalance(address _userAddress, uint _amount);initBet(uint _betId, address _maker, address _caller, uint _amount, uint _rollUnder);__callback(bytes32 _queryId, string _result, bytes _proof);getOraclizePrice();setOraclizeGasLimit(uint _gasLimit);setOraclizeGasPrice(uint _gasPrice);balanceOf(address _userAddress);ethBalanceOf(address _userAddress);lockedEthBalanceOf(address _userAddress);getBetById(uint _betId);isBetInitialized(uint _betId)"
vsimetka/MVP,wallet_deployed.sol,"multiowned(address[] _owners, uint _required);revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);getOwner(uint ownerIndex);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);reorganizeOwners();clearPending();daylimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today();changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);Wallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);clearPending()"
daostack/daostack,contracts/schemes/DxDaoSchemeConstraints.sol,updatePeriodLimitWei(uint256 _periodLimitWei);observationIndex()
creditbit-dev/credit2.0,Games/LuckyTree.sol,"isGameApproved(address _gameAddress);createLock(address _winner, uint _totalParticipationAmount, uint _tokenLockDuration);removeLock();cleanUp();checkIfLockCanBeRemoved(address _gameAddress);random();setTokenAddress(address _tokenAddress);setCreditGameAddress(address _creditGameAddress);pickWinner();lockFunds(address _winner);manualLockFunds();closeGame();unlockFunds();checkInternalBalance();receiveApproval(address _from, uint256 _value, address _to, bytes _extraData);processTransaction(address _from, uint _value);manuallyProcessTransaction(address _from, uint _value);salvageTokensFromContract(address _tokenAddress, address _to, uint _amount)"
dacplayproject/play-dapp,src/StandardGame.sol,StandardGame()
Qipingsmile006/TianLianCoin,contracts/Destruction.sol,distory();distoryAndSend(address _recipient)
DroneEmployee/contracts,builder/BuilderSatFix.sol,""
shubhamaggarwal/smart-cart,contracts/Transaction.sol,confirmPurchase();confirmReceived();refundBuyer();killContract()
imRishabhGupta/smart-kart,contracts/Transaction.sol,confirmPurchase();confirmReceived();refundBuyer();killContract()
blockchain-IoT/blockchain-IoT-core,contracts/StakeObjects.sol,"StakeObjects();createAsset(address owner, uint256 price);buyStakes(address asset, address funder);checkFunderAccount(address asset, address funder);sellStakes(address assetAddress, address buyer, uint256 stakeAmount, uint256 price);buyOfferedStakes(address assetAddress, address funderAddress)"
EthTrader/dappening,old/Registry.sol,"Registry(bytes32 _root, uint16 _endowDuration);addRoot(bytes32 _root);enableTransfers();addProp(string _name, string _symbol, ActionLib _actionLib);resolveProp(uint _propIdx);vote(uint _propIdx, uint _prefIdx)"
crypto-coder/Tokens,Token_Contracts/contracts/DecayingTokenBoundary.sol,findActiveRange(address _environment);addRange(address _range);removeRange(uint256 _rangeIndex)
mixbytes/storiqa_ico,test/helpers/ThrowProxy.sol,ThrowProxy(address _target)
Storiqa/ico_smart_contract,test/helpers/ThrowProxy.sol,ThrowProxy(address _target)
ethereum/cpp-ethereum,test/unittests/performance/loop.sol,loop()
winsvega/cpp-ethereum,test/unittests/performance/loop.sol,loop()
montyly/manticore,tests/ethereum/contracts/consensys_benchmark/integer_overflow_benign_2.sol,"run(uint256 input);minus(uint256 a, uint256 b)"
trailofbits/manticore,tests/ethereum_bench/consensys_benchmark/integer_overflow_benign_2.sol,"run(uint256 input);minus(uint256 a, uint256 b)"
DigixGlobal/ethereum-ruby,contracts/Minter.sol,""
EthWorks/ethereum.rb,contracts/Minter.sol,""
marekkirejczyk/ethereum.rb,contracts/Minter.sol,""
jellegerbrandy/daostack,contracts/zeppelin-solidity/token/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint value)"
cgewecke/solcover,test/sources/zeppelin/token/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint value)"
WingsDao/contracts,contracts/zeppelin/token/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint value)"
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/token/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint value)"
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/token/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint value)"
AragonOne/zeppelin-solidity,contracts/token/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint value)"
JoinColony/solcover,test/sources/zeppelin/token/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint value)"
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/migrations/error/contracts/UsesExample.sol,""
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/migrations/success/contracts/UsesExample.sol,""
robmyers/artworld-ethereum,dapps/art-is/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
melonproject/protocol,contracts/fund/fees/utils/ContinuousFeeBase.sol,"feeHook();__calcSharesDueWithInflation(int256 _rawSharesDue, int256 _sharesSupply);__calcSharesDueWithInflation(uint256 _rawSharesDue, uint256 _sharesSupply)"
d-jo/cycle,src/token.test.sol,"TokenActor(AIToken token_);doApprove(address spender, uint256 amount);doTransfer(address to, uint256 amount);doTransferFrom(address from, address to, uint256 amount);doBalance(address owner);setUp();testTotalSupply();testBalanceOf();testTransfer();testFailBadTransfer();testApprove();testTransferFrom();testFailTransferFrom();testAllowance()"
Jake-Gillberg/git-vote,contracts/ERC20Voting.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);approve(address _spender, uint _value);allowance(address _owner, address _spender);totalVotesFor(bytes32 candidate);vote(bytes32 candidate, uint numTokens)"
CMLTeam/ICOsurance,truffle/contracts/NamedEntity.sol,symbol();name()
crypto-coder/Tokens,Token_Contracts/contracts/ExponentialDecayingTokenFunction.sol,"ExponentialDecayingTokenFunction();getFunctionType();executeDecayFunction(uint256 _amount, int256 _rangeLength, int256 _distanceInRange, uint256 _startPercent, uint256 _endPercent);oldExecuteDecayFunction(uint256 _amount, int256 _rangeLength, int256 _distanceInRange, uint256 _startPercent, uint256 _endPercent)"
GovernX/governx-contracts,src/contracts/utils/tests/test.PrivateServiceRegsitry.sol,newService();setup()
furusiyya/Notary-Platform,contracts/Pausable.sol,Paused();tweakState()
NTRYPlatform/ntry-solidity,contracts/Pausable.sol,Paused();tweakState()
livepeer/protocol,contracts/jobs/JobsManager.sol,"JobsManager(address _controller);migrateFunds(address _refunder, uint256 _amount);setVerificationRate(uint64 _verificationRate);setVerificationPeriod(uint256 _verificationPeriod);setVerificationSlashingPeriod(uint256 _verificationSlashingPeriod);setFailedVerificationSlashAmount(uint256 _failedVerificationSlashAmount);setMissedVerificationSlashAmount(uint256 _missedVerificationSlashAmount);setDoubleClaimSegmentSlashAmount(uint256 _doubleClaimSegmentSlashAmount);setFinderFee(uint256 _finderFee);deposit();withdraw();job(string _streamId, string _transcodingOptions, uint256 _maxPricePerSegment, uint256 _endBlock);claimWork(uint256 _jobId, uint256[2] _segmentRange, bytes32 _claimRoot);receiveVerification(uint256 _jobId, uint256 _claimId, uint256 _segmentNumber, bool _result);batchDistributeFees(uint256 _jobId, uint256[] _claimIds);missedVerificationSlash(uint256 _jobId, uint256 _claimId, uint256 _segmentNumber);distributeFees(uint256 _jobId, uint256 _claimId);jobStatus(uint256 _jobId);refundBroadcaster(uint256 _jobId);minter();bondingManager();roundsManager();verifier()"
bluedroplet/glofile-ethereum,glofile.sol,"setDontIndex(bool dontIndex);setGlofileType(GlofileType glofileType);setSafetyLevel(SafetyLevel safetyLevel);setFullName(string fullName);setLocation(string location);setForegroundColors(bytes3[] colors);setBackgroundColors(bytes3[] colors);setLanguages(bytes3[] languages);getBasicInfo(address account);setBio(bytes3 language, bytes translation);deleteBio(bytes3 language);deleteAllBioTranslations();getBioLanguages(address account);getBio(address account, bytes3 language);setAvatar(uint i, bytes ipfsHash);deleteAvatar(uint i);deleteAllAvatars();getAvatarCount(address account);getAvatar(address account, uint i);setCoverImage(uint i, bytes ipfsHash);deleteCoverImage(uint i);deleteAllCoverImages();getCoverImageCount(address account);getCoverImage(address account, uint i);setBackgroundImage(uint i, bytes ipfsHash);deleteBackgroundImage(uint i);deleteAllBackgroundImages();getBackgroundImageCount(address account);getBackgroundImage(address account, uint i);setTopic(uint i, string topic);deleteTopic(uint i);deleteAllTopics();getTopicCount(address account);getTopic(address account, uint i);setParent(uint i, string parent);deleteParent(uint i);deleteAllParents();getParentCount(address account);getParent(address account, uint i);setChild(uint i, string child);deleteChild(uint i);deleteAllChildren();getChildCount(address account);getChild(address account, uint i);setUri(uint i, string uri);deleteUri(uint i);deleteAllUris();getUriCount(address account);getUri(address account, uint i);copyEntireGlofile(address source);deleteEntireGlofile()"
uzyn/ERC20-TST,TST.sol,"showMeTheMoney(address _to, uint256 _value)"
EMAXio/cosigner,cosigner-ethereum-token-storage/SolidityContracts/V4/dappsys/ds-math/math.sol,"add(uint256 x, uint256 y);sub(uint256 x, uint256 y);mul(uint256 x, uint256 y);div(uint256 x, uint256 y);min(uint256 x, uint256 y);max(uint256 x, uint256 y);hadd(uint128 x, uint128 y);hsub(uint128 x, uint128 y);hmul(uint128 x, uint128 y);hdiv(uint128 x, uint128 y);hmin(uint128 x, uint128 y);hmax(uint128 x, uint128 y);imin(int256 x, int256 y);imax(int256 x, int256 y);wadd(uint128 x, uint128 y);wsub(uint128 x, uint128 y);wmul(uint128 x, uint128 y);wdiv(uint128 x, uint128 y);wmin(uint128 x, uint128 y);wmax(uint128 x, uint128 y);radd(uint128 x, uint128 y);rsub(uint128 x, uint128 y);rmul(uint128 x, uint128 y);rdiv(uint128 x, uint128 y);rpow(uint128 x, uint64 n);rmin(uint128 x, uint128 y);rmax(uint128 x, uint128 y);cast(uint256 x)"
Braveno/cosigner,cosigner-ethereum-token-storage/SolidityContracts/V4/dappsys/ds-math/math.sol,"add(uint256 x, uint256 y);sub(uint256 x, uint256 y);mul(uint256 x, uint256 y);div(uint256 x, uint256 y);min(uint256 x, uint256 y);max(uint256 x, uint256 y);hadd(uint128 x, uint128 y);hsub(uint128 x, uint128 y);hmul(uint128 x, uint128 y);hdiv(uint128 x, uint128 y);hmin(uint128 x, uint128 y);hmax(uint128 x, uint128 y);imin(int256 x, int256 y);imax(int256 x, int256 y);wadd(uint128 x, uint128 y);wsub(uint128 x, uint128 y);wmul(uint128 x, uint128 y);wdiv(uint128 x, uint128 y);wmin(uint128 x, uint128 y);wmax(uint128 x, uint128 y);radd(uint128 x, uint128 y);rsub(uint128 x, uint128 y);rmul(uint128 x, uint128 y);rdiv(uint128 x, uint128 y);rpow(uint128 x, uint64 n);rmin(uint128 x, uint128 y);rmax(uint128 x, uint128 y);cast(uint256 x)"
EMAXio/heimdal,cosigner-ethereum-token-storage/SolidityContracts/V4/dappsys/ds-math/math.sol,"add(uint256 x, uint256 y);sub(uint256 x, uint256 y);mul(uint256 x, uint256 y);div(uint256 x, uint256 y);min(uint256 x, uint256 y);max(uint256 x, uint256 y);hadd(uint128 x, uint128 y);hsub(uint128 x, uint128 y);hmul(uint128 x, uint128 y);hdiv(uint128 x, uint128 y);hmin(uint128 x, uint128 y);hmax(uint128 x, uint128 y);imin(int256 x, int256 y);imax(int256 x, int256 y);wadd(uint128 x, uint128 y);wsub(uint128 x, uint128 y);wmul(uint128 x, uint128 y);wdiv(uint128 x, uint128 y);wmin(uint128 x, uint128 y);wmax(uint128 x, uint128 y);radd(uint128 x, uint128 y);rsub(uint128 x, uint128 y);rmul(uint128 x, uint128 y);rdiv(uint128 x, uint128 y);rpow(uint128 x, uint64 n);rmin(uint128 x, uint128 y);rmax(uint128 x, uint128 y);cast(uint256 x)"
ryepdx/welcometothejungle,src/contracts/simpleTest.sol,shouldPass()
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol,hasClosed()
SilentCicero/wafr,src/tests/solidityTests/gasUsage/examples/tests/MultiSigRules_test.sol,"newProposal(address _board, string _name, address _proxy, uint _debatePeriod, address _destination, uint _value, bytes _calldata);vote(address _board, uint _proposalID, uint _position);execute(address _board, uint _proposalID, bytes _calldata);test_ConsensysReached();test_ConsensysNotReached()"
redsquirrel/augur-core,src/Mutex.sol,acquire();release()
kinfoundation/kin-token,test/helpers/KinFoundationVestingTrusteeMock.sol,"KinFoundationVestingTrusteeMock(KinToken _kin, address _kinFoundation);getAnnualGrantsLength()"
ethereum/frontier-release,views/content/dao-congress.sol,"owned();transferOwnership(address newOwner);receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);transferFrom(address _from, address _to, uint256 _value);addMember(address targetMember, string memberName);removeMember(address targetMember);executeProposal(uint proposalNumber, bytes transactionBytecode)"
ethereum/ethereum-org,views/content/dao-congress.sol,"owned();transferOwnership(address newOwner);receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);transferFrom(address _from, address _to, uint256 _value);addMember(address targetMember, string memberName);removeMember(address targetMember);executeProposal(uint proposalNumber, bytes transactionBytecode)"
daostack/daostack,contracts/Migrations.sol,setCompleted(uint256 completed);upgrade(address newAddress)
Opus-foundation/contracts,contracts/ERC23StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
nud3l/verifying-computation-solidity,contracts/AbstractArbiter.sol,"enableService();disableService();requestComputation(string _input1, string _input2, uint _operation, uint _numVerifiers);executeComputation();receiveResults(string _result, uint256 _computationId);compareResults();requestIndex();receiveIndex(uint _index1, uint _index2, uint _operation, uint256 _computationId, bool _end);setJudge(address _judge);getStatus();getCurrentSolver(address _requester);stringToUint(string s);stringsEqual(string _a, string _b);rand(uint min, uint max)"
SmartChainX/ChainBlockchain,Contracts/ChainX Token/Tokens.sol,ProtocolToken()
gnosis/gnosis-contracts,contracts/Oracles/CentralizedOracleFactory.sol,createCentralizedOracle(bytes memory ipfsHash)
cinderblockchain/cindertoken,contracts/MultiSigWallet.sol,""
michinbear/solidity,test/compilationTests/zeppelin/ownership/Claimable.sol,transferOwnership(address newOwner);claimOwnership()
elementrem/solidity,test/compilationTests/zeppelin/ownership/Claimable.sol,transferOwnership(address newOwner);claimOwnership()
boisde/Greed_Island,party/contracts/interfaces/IOracle.sol,read()
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.4.24/intDivisionTruncate.sol,"CharityCampaign(address _beneficiary, int128 _feePercentage);contribute();endCampaign();endAmbiguous()"
TrueFlip/trueflip-contracts,contracts/SafeMath.sol,"mul(uint a, uint b);div(uint a, uint b);sub(uint a, uint b);add(uint a, uint b)"
Nethereum/Nethereum,src/Nethereum.StandardTokenEIP20.IntegrationTests/StandardToken.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
kleroterion/dapp,contracts/BuyableCourt.sol,"BuyableCourt(address[] accounts, uint256[] tokens);buyTokens()"
cryptape/cita,scripts/contracts/src/system/AutoExec.sol,register(address _contAddr);autoExec()
Itshalffull/eth-quadratic_voting,metacoin.sol,"metaCoin();sendCoin(address receiver, uint amount)"
evoluchain/meetup-sc-testing,contracts/TestToken.sol,"approveAndCall(address _spender, uint256 _value, bytes _extraData);mint(uint256 _value);isAlive()"
elementrem/solidity,test/compilationTests/zeppelin/ownership/NoOwner.sol,""
montyly/manticore,tests/ethereum/contracts/detectors/etherleak_true_neg1.sol,withdrawfunds()
trailofbits/manticore,tests/ethereum/contracts/detectors/etherleak_true_neg1.sol,withdrawfunds()
montyly/manticore,tests/ethereum/contracts/consensys_benchmark/integer_overflow_benign_1.sol,run(uint256 input)
trailofbits/manticore,tests/ethereum_bench/consensys_benchmark/integer_overflow_benign_1.sol,run(uint256 input)
MarketProject/MarketProtocol,contracts/tokens/PositionToken.sol,""
status-im/status-network-token,contracts/test/DevTokensHolderMock.sol,"DevTokensHolderMock(address _owner, address _contribution, address _snt);getTime();setMockedTime(uint _t)"
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.4.24/ctor.sol,"c(uint _x, uint _abc)"
soad003/browser-solidity,test/staticanalysis/test-contracts/ctor.sol,"c(uint _x, uint _abc)"
GX-Coin/SmartContract,GxDeploymentAdmins.sol,GxDeploymentAdmins();add(address newAddress);remove(address removedAddress)
bcosorg/bcos,tool/Ok.sol,Ok();get();trans(uint num)
stanta/darfchain,ICO/contracts/SafeMathLib.sol,"times(uint a, uint b);minus(uint a, uint b);plus(uint a, uint b);assert(bool assertion)"
aragon/aragon-network-token,packages/sale/contracts/MiniMeIrrevocableVestedToken.sol,"transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);spendableBalanceOf(address _holder);setCanCreateGrants(address _addr, bool _allowed);doSetCanCreateGrants(address _addr, bool _allowed);changeVestingWhitelister(address _newWhitelister);revokeTokenGrant(address _holder, uint _grantId);tokenGrantsCount(address _holder);tokenGrant(address _holder, uint _grantId);vestedTokens(TokenGrant grant, uint64 time);nonVestedTokens(TokenGrant grant, uint64 time);lastTokenIsTransferableDate(address holder);transferableTokens(address holder, uint64 time)"
airalab/DAO-IPCI,contracts/builder/BuilderTokenWithValidityPeriod.sol,""
SwapyNetwork/swapy-exchange-protocol,contracts/investment/InvestmentAsset.sol,getAsset()
orbro/eth-enablers,solidity-baby-steps-master/contracts/47_bytes32_passer.sol,getDescription();getDescription();getSavedVar();getSavedBytes();getSavedString();kill()
CubicContracts/ice,Cube.sol,"Cube(address _destination, uint _unlockedAfter, Cubic _cubicContract);setId(uint _id);deliver()"
alcuadrado/truffle-flattener,tests/contracts/parent.sol,""
adklempner/solidity-license,contracts/zeppelin/payment/PullPayment.sol,"asyncSend(address dest, uint256 amount);withdrawPayments()"
adamdossa/ProfitSharingContract,installed_contracts/zeppelin/contracts/payment/PullPayment.sol,"asyncSend(address dest, uint256 amount);withdrawPayments()"
Majoolr/ethereum-libraries,WalletLib/truffle/contracts/Array256Lib.sol,"sumElements(uint256[] storage self);getMax(uint256[] storage self);getMin(uint256[] storage self);indexOf(uint256[] storage self, uint256 value, bool isSorted);getParentI(uint256 index);getLeftChildI(uint256 index);heapSort(uint256[] storage self);uniq(uint256[] storage self)"
Majoolr/ethereum-libraries,ArrayUtilsLib/Array256Lib.sol,"sumElements(uint256[] storage self);getMax(uint256[] storage self);getMin(uint256[] storage self);indexOf(uint256[] storage self, uint256 value, bool isSorted);getParentI(uint256 index);getLeftChildI(uint256 index);heapSort(uint256[] storage self);uniq(uint256[] storage self)"
Majoolr/ethereum-libraries,CrowdsaleLib/EvenDistroCrowdsale/truffle/contracts/Array256Lib.sol,"sumElements(uint256[] storage self);getMax(uint256[] storage self);getMin(uint256[] storage self);indexOf(uint256[] storage self, uint256 value, bool isSorted);getParentI(uint256 index);getLeftChildI(uint256 index);heapSort(uint256[] storage self);uniq(uint256[] storage self)"
Majoolr/ethereum-libraries,CrowdsaleLib/DirectCrowdsale/truffle/contracts/Array256Lib.sol,"sumElements(uint256[] storage self);getMax(uint256[] storage self);getMin(uint256[] storage self);indexOf(uint256[] storage self, uint256 value, bool isSorted);getParentI(uint256 index);getLeftChildI(uint256 index);heapSort(uint256[] storage self);uniq(uint256[] storage self)"
Majoolr/ethereum-libraries,CrowdsaleLib/IICOLib/truffle/contracts/Array256Lib.sol,"sumElements(uint256[] storage self);getMax(uint256[] storage self);getMin(uint256[] storage self);indexOf(uint256[] storage self, uint256 value, bool isSorted);getParentI(uint256 index);getLeftChildI(uint256 index);heapSort(uint256[] storage self);uniq(uint256[] storage self)"
etherisc/flightDelay,contracts/FlightDelayDatabaseInterface.sol,"setAccessControl(address _contract, address _caller, uint8 _perm);getAccessControl(address _contract, address _caller, uint8 _perm);setLedger(uint8 _index, int _value);getLedger(uint8 _index);getCustomerPremium(uint _policyId);getPolicyData(uint _policyId);getPolicyState(uint _policyId);getRiskId(uint _policyId);createPolicy(address _customer, uint _premium, Currency _currency, bytes32 _customerExternalId, bytes32 _riskId);setWeight(uint _policyId, uint _weight, bytes _proof);setPayouts(uint _policyId, uint _calculatedPayout, uint _actualPayout);setDelay(uint _policyId, uint8 _delay, uint _delayInMinutes);getRiskParameters(bytes32 _riskId);getPremiumFactors(bytes32 _riskId);createUpdateRisk(bytes32 _carrierFlightNumber, bytes32 _departureYearMonthDay, uint _arrivalTime);setPremiumFactors(bytes32 _riskId, uint _cumulatedWeightedPremium, uint _premiumMultiplier);getOraclizeCallback(bytes32 _queryId);getOraclizePolicyId(bytes32 _queryId);checkTime(bytes32 _queryId, bytes32 _riskId, uint _offset)"
SilentCicero/wafr,src/tests/solidityTests/methodOrdering/test.methodOrdering.sol,""
wscoliver/ethpipeline,src/fixtures/one.sol,""
asseth/dao1901,customModules/protocol/contracts/Dao1901Members.sol,"isMember(address _member);subscribe(address _member, uint _yearsDuration)"
Atzen2/hacking-law-proto,truffle/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Dicoiner/irianna-solidity,contracts/Findel/GatewayInteger.sol,newProof();newValue()
melonproject/protocol,contracts/fund/policies/risk-management/AssetWhitelist.sol,addFundSettings(bytes calldata _encodedSettings);identifier();validateRule(bytes calldata _encodedArgs)
ConsenSys/dapp-store-contracts,contracts/Model.sol,"Model();get_keys();get_read_only_keys();get_associations();get_default_keys();set_db(EternalDB _db);set_coordinator(ModelCoordinator _coordinator);create(uint[101][] attributes);update(uint id, uint[101][] attributes);has_owners(uint id);is_owner(uint id, address to_check);add_owner(uint id, address owner);destroy(uint id);is_destroyed(uint id);validate(address sender, uint id, uint[101][] attributes);get_blocks_for(uint id);add_to_association(uint id, uint association_name, uint association_id);set_reference(uint id, uint reference_name, uint reference_id);paged(uint start_id, uint page_size);replace(address replacement)"
QTBlockchain/SolidityNWeb3,SmartContracts/March2018/StringDemo/contracts/strings.sol,"memcpy(uint dest, uint src, uint len);toSlice(string self);len(bytes32 self);copy(slice self);toString(slice self);len(slice self);empty(slice self);compare(slice self, slice other);equals(slice self, slice other);nextRune(slice self, slice rune);nextRune(slice self);ord(slice self);keccak(slice self);startsWith(slice self, slice needle);beyond(slice self, slice needle);endsWith(slice self, slice needle);until(slice self, slice needle);findPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);rfindPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);find(slice self, slice needle);rfind(slice self, slice needle);split(slice self, slice needle, slice token);split(slice self, slice needle);rsplit(slice self, slice needle, slice token);rsplit(slice self, slice needle);count(slice self, slice needle);contains(slice self, slice needle);concat(slice self, slice other);join(slice self, slice[] parts)"
BeBlockTech/Anemoi,BeBlockTech/token.sol,"owned();transferOwnership(address newOwner);receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);_transfer(address _from, address _to, uint _value);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);burn(uint256 _value);burnFrom(address _from, uint256 _value);_transfer(address _from, address _to, uint _value);mintToken(address target, uint256 mintedAmount);freezeAccount(address target, bool freeze);setPrices(uint256 newSellPrice, uint256 newBuyPrice);buy();sell(uint256 amount)"
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/src/contracts/Roll4Win.sol,createPost(string memory _content)
maraoz/zeppelin-solidity,test/helpers/LimitBalanceMock.sol,limitedDeposit()
zetherz/eth-match,flattened/flat-EthMatch.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);Ownable();transferOwnership(address newOwner);tokenFallback(address _from, uint256 _value, bytes _data);tokenFallback(address /*_from*/, uint256 /*_value*/, bytes /*_data*/);EthMatch(uint256 _startTime);maker(address _addr);pay(address _addr, uint256 _amount);mastery();mastery(address _addr);setGasReq(uint256 _gasReq);fund();getBalance();isContract(address addr)"
0xASSET/SHIP,contracts/SHIP.sol,"SHIP(uint256 _incubationDays, uint256 _initialDonation, uint256 _finalDonation);start();pause();currentDonation();pledge();withdrawDonations();setPresale(uint256 _presaleDays, address _target, uint256[] _caps);changePresale(address _target, uint256[] _caps);commit();commit(uint256 rounds);startPresale();process(uint256 count);refund()"
DRI-project/RICO,contracts/Ownable.sol,Ownable();transferOwnership(address newOwner)
mothershipcx/contracts,etherscan/SIT.sol,"totalSupply();totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);Controlled();changeController(address _newController);Burnable();changeBurner(address _newBurner);totalSupplyAt(uint _blockNumber);generateTokens(address _owner, uint _amount);destroyTokens(address _owner, uint _amount);enableTransfers(bool _transfersEnabled);claimTokens(address _token);proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);receiveApproval(address _from, uint256 _amount, address _token, bytes _data);transfer(address _to, uint256 _amount);balanceOf(address _owner);approve(address _spender, uint256 _amount);totalSupply();balanceOfAt(address _owner, uint _blockNumber);totalSupplyAt(uint _blockNumber);enableTransfers(bool _transfersEnabled);isContract(address _addr);min(uint a, uint b);getBlockNumber();claimTokens(address _token);SIT(address _tokenFactory)"
github/linguist,test/fixtures/Generic/sol/nil/ignored2.sol,""
iurimatias/embark-framework,packages/plugins/coverage/src/test/fixtures/contracts/GnosisStandardToken.sol,"transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value);allowance(address owner, address spender);balanceOf(address owner);totalSupply()"
DeerLi/EtherContracts,contracts/CypressOrganization.sol,"Owned();changeOwnship(address _to);kill();CypressOrganization(bytes _name, uint _amount);isRegistered(address _account);registerMember(address _member, bytes _name, uint _token);distributeEther()"
SilentCicero/wafr,src/tests/solidityTests/gasUsage/Proxy.sol,"forward_transaction(address _destination, uint _value, bytes _calldata)"
SilentCicero/wafr,src/tests/solidityTests/boardroom/boardroom/Proxy.sol,"forward_transaction(address _destination, uint _value, bytes _calldata)"
kr8os/token-sale-contracts,contracts/Sales.sol,"purchaseTokens();changeBlocks(uint _newStartBlock, uint _newFreezeBlock);changePrice(uint _newPrice);changeCap(uint256 _newCap);unlockEscrow();toggleFreeze()"
TruLtd/tru-reputation-token,src/0.1.5/TruReputationTokenFull.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);Ownable();transferOwnership(address newOwner);balanceOf(address who);transfer(address to, uint256 value);transfer(address _to, uint256 _value);balanceOf(address _owner);allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);increaseApproval(address _spender, uint _addedValue);decreaseApproval(address _spender, uint _subtractedValue);setReleaseAgent(address addr);setTransferAgent(address addr, bool state);releaseTokenTransfer();mint(address _to, uint256 _amount);finishMinting(bool _presale, bool _sale);isUpgradeAgent();upgradeFrom(address _from, uint256 _value);TruUpgradeableToken(address _upgradeMaster);upgrade(uint256 _value);setUpgradeAgent(address _agent);getUpgradeState();setUpgradeMaster(address _master);canUpgrade();TruReputationToken();changeBoardAddress(address _newAddress);canUpgrade();setUpgradeMaster(address _master)"
SilentCicero/wafr,src/tests/solidityDepTest/tests/test.something.sol,""
hsavit1/gosofi_webpage,node_modules/truffle-contract/test/Example.sol,Example(uint val);setValue(uint val);getValue();parrot(uint val);triggerEvent()
CORIONplatform/solidity,exchangeLight.sol,"exchange(address _CORAddress, address _exchangeRateManager, uint256 _exchangeRate, uint256 _exchangeRateShift);receiveToken(address sender, uint256 amount, bytes data);approvedToken(address addr, uint256 amount, bytes data);getEther();getCOR();destroy();setCORAddress(address newCORAddress);setMaxReceiveEther(uint256 amount);setFoundationAddress(address addr);setExchangeRateShift(uint256 value);setExchangeRate(uint256 newExchangeRate);calcCORtoETC(uint256 cor);calcETCtoCOR(uint256 etc)"
orbro/eth-enablers,solidity-baby-steps-master/contracts/57_fixedbytearray_to_byte_array.sol,getDigit();getFinalBytes();kill()
erooijak/ethlance,resources/public/contracts/src/invoiceLibrary.sol,"getContract(address db, uint invoiceId);getAmount(address db, uint invoiceId);getFreelancer(address db, uint invoiceId);setInvoiceCancelled(address db, address senderId, uint invoiceId);getStatus(address db, uint invoiceId);statusPred(address db, uint[] args, uint jobId)"
PeculiumPCL/Peculium,contracts/v1.0/Delivery.sol,"Delivery();InitPeculiumAdress(address peculAdress);airdropsTokens(address[] _vaddr, uint256[] _vamounts)"
silasdavis/eris-db,tests/jobs_fixtures/app49-return-array-with-RETURNDATACOPY/consumeArray.sol,""
silasdavis/burrow,tests/jobs_fixtures/app49-return-array-with-RETURNDATACOPY/consumeArray.sol,""
blockchain-hacklab/meteor-truffle,imports/lib/smart-contracts/contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
boisde/Greed_Island,party/contracts/mocks/protocol/module/ModuleIssuanceHookMock.sol,initialize(ISetToken _setToken)
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app22-bytes_edge_cases/storage.sol,setString(bytes x);getString()
eris-ltd/eris,tests/jobs_fixtures/app22-bytes_edge_cases/storage.sol,setString(bytes x);getString()
monax/monax,tests/jobs_fixtures/app22-bytes_edge_cases/storage.sol,setString(bytes x);getString()
eris-ltd/eris-cli,tests/jobs_fixtures/app22-bytes_edge_cases/storage.sol,setString(bytes x);getString()
monax/cli,tests/jobs_fixtures/app22-bytes_edge_cases/storage.sol,setString(bytes x);getString()
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app22-bytes_edge_cases/storage.sol,setString(bytes x);getString()
PlutusIt/PlutusDEX,contracts/PlutusDex.sol,"PlutusDex();depositFiat(address trader, uint fiatDeposited, CurrencySymbol fiatSymbol, uint btcAsked, bytes20 btcAddress);offerBtc(address trader, uint btcOffered, bytes32 userVdcIban)"
LindaHealthcareICO/linda-crowdsale,contracts/LindaCrowdsale.sol,"LindaCrowdsale(uint256 _startTime, uint256 _endTime, uint256 _rate, uint256 _goal, uint256 _cap, address _wallet, address _teamWallet, address _tokenAddress, address _tokenOwner, uint64 _teamLockTime, uint64 _unsoldLockTime);createTokenContract(address tokenAddress);finalization();buyTokens(address beneficiary);hasStarted()"
DavdRoman/Payroll,test/mocks/ERC20TokenMock.sol,"mock_setShouldSucceedTransfers(bool _shouldSucceedTransfers);transfer(address _to, uint256 _value)"
boisde/Greed_Island,party/contracts/protocol/SetTokenCreator.sol,""
etherisc/flightDelay,contracts/FlightDelayControllerInterface.sol,isOwner(address _addr);selfRegister(bytes32 _id);getContract(bytes32 _id)
AugustoL/LifToken,contracts/LifChannels.sol,"closeChannel(address receiver, uint8 nonce)"
windingtree/LifToken,contracts/LifChannels.sol,"closeChannel(address receiver, uint8 nonce)"
duaraghav8/Solium,test/lib/rules/double-quotes/accept/double-quoted.sol,""
Souptacular/constructblockchainscavengerhunt,scavenger_hunt/ConstructBitcoinClue.sol,"ConstructBitcoinClue(bytes32 answer1, bytes32 answer2, bytes32 answer3, bytes32 answer4);checkPassed(address participant)"
akalinkin/ethsmartcvv,contracts/OwnedMortal.sol,OwnedMortal();kill()
paulyc/sol_machine,contracts/transaction.sol,"Transaction(uint256 gasPrice, uint256 gasLimit, address to, uint256 value, uint8 v, uint256 r, uint256 s, bytes initOrInput);verifyTransaction();getInitOrInput();ContractCreationTransaction(bytes init, uint256 gasPrice, uint256 gasLimit, address to, uint256 value, uint8 v, uint256 r, uint256 s);getProgram();MessageCallTransaction(bytes init, uint256 gasPrice, uint256 gasLimit, address to, uint256 value, uint8 v, uint256 r, uint256 s)"
chentschel/ethgames-contracts,contracts/Ownable.sol,Ownable();changeOwner(address newOwner)
iurimatias/embark-framework,packages/embark/src/test/contracts/recursive_test_2.sol,set(uint x);get()
SerCeMan/intellij-solidity,src/test/resources/fixtures/parser/mappings.sol,""
pash7ka/zeppelin-solidity,contracts/token/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
ethbets/ebets,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
pipermerriam/populus,tests/fixtures/MathV2.sol,"increment();increment(uint amt);decrement();decrement(uint amt);add(int a, int b)"
abel1337/Ethereum-Lottery,Lottery.sol,WEI();USD();currentRate();currentJackPot()
alice-si/contracts,contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
Ethbet/ethbet,contracts/Ethbet.sol,"Ethbet(address _relay, address _tokenAddress);setRelay(address _relay);deposit(uint _amount);withdraw(uint _amount);depositEth();withdrawEth(uint _amount);lockBalance(address _userAddress, uint _amount, uint _fee);chargeGasFee(address _userAddress, uint _fee);unlockBalance(address _userAddress, uint _amount, uint _fee);balanceOf(address _userAddress);ethBalanceOf(address _userAddress);lockedBalanceOf(address _userAddress);executeBet(address _maker, address _caller, bool _makerWon, uint _amount)"
Ethbet/ethbet,alpha/contracts/Ethbet.sol,"Ethbet(address _relay, address _tokenAddress);setRelay(address _relay);deposit(uint _amount);withdraw(uint _amount);depositEth();withdrawEth(uint _amount);lockBalance(address _userAddress, uint _amount, uint _fee);chargeGasFee(address _userAddress, uint _fee);unlockBalance(address _userAddress, uint _amount, uint _fee);balanceOf(address _userAddress);ethBalanceOf(address _userAddress);lockedBalanceOf(address _userAddress);executeBet(address _maker, address _caller, bool _makerWon, uint _amount)"
duaraghav8/Solium,test/lib/rules/indentation/accept/multiline-call-declaration.sol,Counter();inc();incByTwo()
KudosProject/kudos-token,contracts/KudosToken.sol,KudosToken()
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs2.sol,"addThing(string description, bytes32 url, bytes32 filehash, string filename)"
eris-ltd/eris,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs2.sol,"addThing(string description, bytes32 url, bytes32 filehash, string filename)"
monax/monax,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs2.sol,"addThing(string description, bytes32 url, bytes32 filehash, string filename)"
eris-ltd/eris-cli,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs2.sol,"addThing(string description, bytes32 url, bytes32 filehash, string filename)"
monax/cli,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs2.sol,"addThing(string description, bytes32 url, bytes32 filehash, string filename)"
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs2.sol,"addThing(string description, bytes32 url, bytes32 filehash, string filename)"
tomashaber/raiden,raiden/tests/integration/rpc/RpcTest.sol,fail();ret();loop(uint reps)
dltdojo/courses,ethereum/solidity/T210_ERC20.sol,"balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);FooToken();transferFrom(FooToken ft, address _from, address _to, uint256 _value);testTransfer();testTransferFrom()"
orbro/eth-enablers,ethereum-examples-master/solidity/Slockit.sol,"open();close();DoorLock();__callback(bytes32 myid, string result);checkWeather()"
SwapyNetwork/swapy-exchange-protocol,contracts/investment/AssetLibrary.sol,"supplyFuel(uint256 _amount);invest(address _investor);cancelInvestment();refuseInvestment();withdrawFunds();sell(uint256 _sellValue);cancelSellOrder();buy(address _buyer);cancelSale();refuseSale();acceptSale();requireTokenFuel();returnInvestment();makeAvailable();withdrawTokens(address _recipient, uint256 _amount);isDelayed()"
EarthDollar/farmer,mix/stdc/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
aragon/aragon-network-token,packages/sale/contracts/ANT.sol,""
Neurone/persians,contracts/BattleToken.sol,"BattleToken(address _battleAddress);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);balanceOf(address _owner);allowance(address _owner, address _spender)"
Neurone/persians,contracts/ImmortalToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);balanceOf(address _owner);allowance(address _owner, address _spender)"
TOMOAKI12345/Intee,app/client/templates/contracts/blacklists.sol,"Coin();mint(address owner, uint amount);send(address receiver, uint amount);queryBalance(address addr)"
cgewecke/solcover,test/sources/if/if-no-brackets.sol,a(uint x)
JoinColony/solcover,test/sources/if/if-no-brackets.sol,a(uint x)
jscottmiller/patronage,contracts/PatronageRegistry.sol,"PatronageRegistry(address _shareholders);registerUsername(string username, address payoutAddress);patronageContractForUsername(string username);updateRegistrar(address newRegistrar)"
blockgeeks/workshop,src/contracts/election.sol,addCandidate(string name);authorize(address person);vote(uint voteIndex);end()
montyly/manticore,tests/ethereum/contracts/detectors/etherleak_true_pos_msgsender.sol,fakeconstructor();withdrawfunds()
trailofbits/manticore,tests/ethereum/contracts/detectors/etherleak_true_pos_msgsender.sol,fakeconstructor();withdrawfunds()
acebusters/safe-token-sale,contracts/ERC20.sol,"activeSupply();allowance(address _owner, address _spender);transferFrom(address _from, address _to, uint _value);approve(address _spender, uint256 _value)"
stevejaxon/ethereum-tutorials,contracts/stackexchange/Lockers.sol,"store(uint holdTime);withdrawAll();getNumLockers(address owner);getLockerDetails(address owner, uint index)"
enjin/contracts,solidity/contracts/TokenHolder.sol,"TokenHolder();withdrawTokens(IERC20Token _token, address _to, uint256 _amount)"
status-im/status-network-token,contracts/DynamicCeiling.sol,"DynamicCeiling(address _owner, address _contribution);setHiddenCurves(bytes32[] _curveHashes);moveTo(uint256 _index);toCollect(uint256 collected);nCurves()"
orbro/eth-enablers,kingOfEtherThrone.sol,KingOfTheEtherThrone();numberOfMonarchs();claimThrone(string name);sweepCommission(uint amount);transferOwnership(address newOwner)
madhav1234/solidity-examples,buyer-seller.sol,"BuyerSeller();listProducts(address seller);getProductById(uint productId);getProductStructById(uint productId);addProduct(string name, uint8 price);addProductAtId(uint id, string name, uint8 price);kill()"
pash7ka/zeppelin-solidity,contracts/token/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
iswarm/p2pCny,contracts/token/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
cashpokerpro-dev/cash-smartcontracts,contracts/token/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
cinderblockchain/cindertoken,contracts/token/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
prashantpawar/truffle,test/scenarios/cyclic_dependencies/Ping.sol,""
anniemwu/chainge,node_modules/truffle/test/scenarios/cyclic_dependencies/Ping.sol,""
hsavit1/gosofi_webpage,node_modules/truffle/test/scenarios/cyclic_dependencies/Ping.sol,""
DigixGlobal/truffle,test/scenarios/cyclic_dependencies/Ping.sol,""
disruptivewidgets/pay2play-react,src/smart-contract/league.sol,"start(uint _numberOfParticipants);getLeague(uint _index);getLeagueContractAddress(uint _index);getLeagueCount();getLeagueParticipantCount(uint _index);activate();getNumberOfMembers();getMembers();joinLeague();startLeague();calculateMatchCount(uint _length);startRound(address[] participants);nextRound();schedule(uint _roundIndex);closeMatch(uint _roundIndex, uint _matchIndex, uint _points_SideA, uint _points_SideB);closeRound(uint _roundIndex);getRoundOpponents(uint _roundIndex);getRoundPoints(uint _roundIndex);getRoundLosers(uint _roundIndex);getMatches(uint _roundIndex);getMatch(uint _roundIndex, uint _matchIndex);getRoundCount();getMatchCount(uint _roundIndex)"
silasdavis/burrow,tests/js/random.sol,getRandomNumber()
drupalnomad/runkeeper-oracle,runkeeper.sol,"makeCommitment(uint factId, bytes32 factHash, address defaultAccount, address oracle);settle(bytes32 hash, bytes32 resultHex, uint8 v, bytes32 r, bytes32 s);getMyCommitmentCount();getMyCommitmentHash(uint i);getCommitment(bytes32 hash)"
BeBlockTech/Anemoi,Test/TokenSale/crowdsale.sol,"transfer(address receiver, uint amount);checkGoalReached();safeWithdrawal()"
SilentCicero/wafr,src/tests/solidityTests/boardroom/boardroom/owned.sol,owned()
SilentCicero/wafr,src/tests/solidityTests/gasUsage/owned.sol,owned()
rfikki/demo-solidity,purchase.sol,Purchase();abort();confirmPurchase();confirmReceived()
bitsanity/gungadin,ethereum/votes/Votes.sol,"isMember( address who );transfer( address to, uint amount );transferFrom( address from, address to, uint amount );changeOwner( address payable newOwner );setMembership( address _contract );setTreasury( address payable _treasury );setToken( address _token );setFee( uint _newfee );setTokenFee( uint256 _fee );setDao( uint _dao );vote( uint _blocknum, string memory _hash );vote_t( uint _blocknum, string memory _hash );vote_int( uint _blocknum, string memory _hash );withdraw( uint amt );sendTok( address _tok, address _to, uint _qty )"
pz7/liquet,contracts/Liquet.sol,Liquet()
iurimatias/embark-framework,packages/embark/src/test/contracts/recursive_test_1.sol,set(uint x);get()
juchiyama/cmkt,contracts/reddit.sol,"Reddit(uint _maxUsers,uint _price,bytes _publicKey,bytes _ipfsHash);payServiceProvider();collectPayments();sumPayments();getPaymentsFor(address user);getUsers();getUsersLength();enrollUser(address user)"
silasdavis/eris-db,execution/solidity/event_emitter.sol,EmitOne()
daostack/daostack,contracts/test/AgreementMock.sol,setAgreementHashTest(bytes32 _agreementHash);test(bytes32 _agreementHash)
taoteh1221/DFD_Geth_JSON,sol/democracy-dao-default.sol,"token();sendCoin(address receiver, uint amount);Democracy(token _voterShareAddress, uint _minimumQuorum, uint _debatingPeriod);newProposal(address _recipient, uint _amount, bytes32 _data, string _description);vote(uint _proposalID, int _position);executeProposal(uint _proposalID)"
fkbenjamin/pc-firebase-starter,contracts/examples/safeRemotePurchase.sol,Purchase();abort();confirmPurchase();confirmReceived()
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/test/helpers/BurnableTokenMock.sol,"BurnableTokenMock(address initialAccount, uint initialBalance)"
pash7ka/zeppelin-solidity,test/helpers/BurnableTokenMock.sol,"BurnableTokenMock(address initialAccount, uint initialBalance)"
pz7/liquet,node_modules/zeppelin-solidity/test/helpers/BurnableTokenMock.sol,"BurnableTokenMock(address initialAccount, uint initialBalance)"
dmx374/zeppelin-solidity,test/helpers/BurnableTokenMock.sol,"BurnableTokenMock(address initialAccount, uint initialBalance)"
cashpokerpro-dev/cash-smartcontracts,test/helpers/BurnableTokenMock.sol,"BurnableTokenMock(address initialAccount, uint initialBalance)"
dltdojo/courses,ethereum/solidity/T232_Time_MiFID_II.sol,"orderExecution(bytes32 orderData, uint utcSync);orderExecutionBlockTime(bytes32 orderData)"
dacplayproject/play-dapp,src/PLS.sol,"proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);Controlled();changeController(address _newController);receiveApproval(address from, uint256 _amount, address _token, bytes _data);PLS();transfer(address _to, uint256 _value, bytes _data);approve(address _spender, uint256 _amount);mint(address _guy, uint _wad);burn(address _guy, uint _wad);isContract(address _addr);claimTokens(address _token)"
xenioplatform/go-xenio,contracts/xnogames/XNOGames.sol,"XNOGames();registerNewGame(string _name, string _publisher, string _developer, bytes32 _country, bytes32 _state);addLogo(string imageURL, bytes32 SHA256notaryHash);removeUser(address gameAddress);removeImage(bytes32 imgHash);getGamesAddresses();getGame(address gameAddress);getGames();getAllImages();getGameImages(address userAddress);getImage(bytes32 SHA256notaryHash)"
reverendus/tx-manager,src/tx.sol,"execute(address[] tokens, bytes script);invokeContracts(bytes script);addressAt(bytes data, uint256 location);locationOf(bytes data, uint256 location)"
coder-forge/chain-forge,contracts/CoderForge.sol,"CoderForge();getForge(uint256 index);newForge(bytes32 name, bytes32 url, address orgWallet);kill()"
zetherz/eth-match,test/helpers/HasNoEtherTest.sol,HasNoEtherTest()
Spreadway/core,flow_auth/contracts/C.sol,"ff(string s);f(uint a, uint b)"
Spreadway/core,flow_manage/contracts/C.sol,"ff(string s);f(uint a, uint b)"
jellegerbrandy/daostack,contracts/zeppelin-solidity/test-helpers/BasicTokenMock.sol,"BasicTokenMock(address initialAccount, uint initialBalance)"
WingsDao/contracts,contracts/zeppelin/test-helpers/BasicTokenMock.sol,"BasicTokenMock(address initialAccount, uint initialBalance)"
Nethereum/Nethereum,src/Nethereum.ENS/oldcontracts/ENSRegistry.sol,"ENSRegistry();setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);setTTL(bytes32 node, uint64 ttl);owner(bytes32 node);resolver(bytes32 node);ttl(bytes32 node)"
boisde/Greed_Island,party-hardhat/contracts/provableAPI_0.7.sol,"f(bytes calldata x);cbAddress();setProofType(byte _proofType);setCustomGasPrice(uint _gasPrice);getPrice(string calldata _datasource);randomDS_getSessionPubKeyHash();getPrice(string calldata _datasource, uint _gasLimit);queryN(uint _timestamp, string calldata _datasource, bytes calldata _argN);query(uint _timestamp, string calldata _datasource, string calldata _arg);query_withGasLimit(uint _timestamp, string calldata _datasource, string calldata _arg, uint _gasLimit);queryN_withGasLimit(uint _timestamp, string calldata _datasource, bytes calldata _argN, uint _gasLimit);getAddress();init(buffer memory _buf, uint _capacity);resize(buffer memory _buf, uint _capacity);max(uint _a, uint _b);append(buffer memory _buf, bytes memory _data);append(buffer memory _buf, uint8 _data);appendInt(buffer memory _buf, uint _data, uint _len);encodeType(Buffer.buffer memory _buf, uint8 _major, uint _value);encodeIndefiniteLengthType(Buffer.buffer memory _buf, uint8 _major);encodeUInt(Buffer.buffer memory _buf, uint _value);encodeInt(Buffer.buffer memory _buf, int _value);encodeBytes(Buffer.buffer memory _buf, bytes memory _value);encodeString(Buffer.buffer memory _buf, string memory _value);startArray(Buffer.buffer memory _buf);startMap(Buffer.buffer memory _buf);endSequence(Buffer.buffer memory _buf);provable_setNetwork(uint8 _networkID);provable_setNetworkName(string memory _network_name);provable_getNetworkName();provable_setNetwork();__callback(bytes32 _myid, string memory _result);__callback(bytes32 _myid, string memory _result, bytes memory _proof);provable_getPrice(string memory _datasource);provable_getPrice(string memory _datasource, uint _gasLimit);provable_query(string memory _datasource, string memory _arg);provable_query(uint _timestamp, string memory _datasource, string memory _arg);provable_query(uint _timestamp, string memory _datasource, string memory _arg, uint _gasLimit);provable_query(string memory _datasource, string memory _arg, uint _gasLimit);provable_query(string memory _datasource, string memory _arg1, string memory _arg2);provable_query(uint _timestamp, string memory _datasource, string memory _arg1, string memory _arg2);provable_query(uint _timestamp, string memory _datasource, string memory _arg1, string memory _arg2, uint _gasLimit);provable_query(string memory _datasource, string memory _arg1, string memory _arg2, uint _gasLimit);provable_query(string memory _datasource, string[] memory _argN);provable_query(uint _timestamp, string memory _datasource, string[] memory _argN);provable_query(uint _timestamp, string memory _datasource, string[] memory _argN, uint _gasLimit);provable_query(string memory _datasource, string[] memory _argN, uint _gasLimit);provable_query(string memory _datasource, string[1] memory _args);provable_query(uint _timestamp, string memory _datasource, string[1] memory _args);provable_query(uint _timestamp, string memory _datasource, string[1] memory _args, uint _gasLimit);provable_query(string memory _datasource, string[1] memory _args, uint _gasLimit);provable_query(string memory _datasource, string[2] memory _args);provable_query(uint _timestamp, string memory _datasource, string[2] memory _args);provable_query(uint _timestamp, string memory _datasource, string[2] memory _args, uint _gasLimit);provable_query(string memory _datasource, string[2] memory _args, uint _gasLimit);provable_query(string memory _datasource, string[3] memory _args);provable_query(uint _timestamp, string memory _datasource, string[3] memory _args);provable_query(uint _timestamp, string memory _datasource, string[3] memory _args, uint _gasLimit);provable_query(string memory _datasource, string[3] memory _args, uint _gasLimit);provable_query(string memory _datasource, string[4] memory _args);provable_query(uint _timestamp, string memory _datasource, string[4] memory _args);provable_query(uint _timestamp, string memory _datasource, string[4] memory _args, uint _gasLimit);provable_query(string memory _datasource, string[4] memory _args, uint _gasLimit);provable_query(string memory _datasource, string[5] memory _args);provable_query(uint _timestamp, string memory _datasource, string[5] memory _args);provable_query(uint _timestamp, string memory _datasource, string[5] memory _args, uint _gasLimit);provable_query(string memory _datasource, string[5] memory _args, uint _gasLimit);provable_query(string memory _datasource, bytes[] memory _argN);provable_query(uint _timestamp, string memory _datasource, bytes[] memory _argN);provable_query(uint _timestamp, string memory _datasource, bytes[] memory _argN, uint _gasLimit);provable_query(string memory _datasource, bytes[] memory _argN, uint _gasLimit);provable_query(string memory _datasource, bytes[1] memory _args);provable_query(uint _timestamp, string memory _datasource, bytes[1] memory _args);provable_query(uint _timestamp, string memory _datasource, bytes[1] memory _args, uint _gasLimit);provable_query(string memory _datasource, bytes[1] memory _args, uint _gasLimit);provable_query(string memory _datasource, bytes[2] memory _args);provable_query(uint _timestamp, string memory _datasource, bytes[2] memory _args);provable_query(uint _timestamp, string memory _datasource, bytes[2] memory _args, uint _gasLimit);provable_query(string memory _datasource, bytes[2] memory _args, uint _gasLimit);provable_query(string memory _datasource, bytes[3] memory _args);provable_query(uint _timestamp, string memory _datasource, bytes[3] memory _args);provable_query(uint _timestamp, string memory _datasource, bytes[3] memory _args, uint _gasLimit);provable_query(string memory _datasource, bytes[3] memory _args, uint _gasLimit);provable_query(string memory _datasource, bytes[4] memory _args);provable_query(uint _timestamp, string memory _datasource, bytes[4] memory _args);provable_query(uint _timestamp, string memory _datasource, bytes[4] memory _args, uint _gasLimit);provable_query(string memory _datasource, bytes[4] memory _args, uint _gasLimit);provable_query(string memory _datasource, bytes[5] memory _args);provable_query(uint _timestamp, string memory _datasource, bytes[5] memory _args);provable_query(uint _timestamp, string memory _datasource, bytes[5] memory _args, uint _gasLimit);provable_query(string memory _datasource, bytes[5] memory _args, uint _gasLimit);provable_setProof(byte _proofP);provable_cbAddress();getCodeSize(address _addr);provable_setCustomGasPrice(uint _gasPrice);provable_randomDS_getSessionPubKeyHash();parseAddr(string memory _a);strCompare(string memory _a, string memory _b);indexOf(string memory _haystack, string memory _needle);strConcat(string memory _a, string memory _b);strConcat(string memory _a, string memory _b, string memory _c);strConcat(string memory _a, string memory _b, string memory _c, string memory _d);strConcat(string memory _a, string memory _b, string memory _c, string memory _d, string memory _e);safeParseInt(string memory _a);safeParseInt(string memory _a, uint _b);parseInt(string memory _a);parseInt(string memory _a, uint _b);provable_newRandomDSQuery(uint _delay, uint _nbytes, uint _customGasLimit);provable_randomDS_setCommitment(bytes32 _queryId, bytes32 _commitment);verifySig(bytes32 _tosignh, bytes memory _dersig, bytes memory _pubkey);provable_randomDS_proofVerify__sessionKeyValidity(bytes memory _proof, uint _sig2offset);provable_randomDS_proofVerify__returnCode(bytes32 _queryId, string memory _result, bytes memory _proof);provable_randomDS_proofVerify__main(bytes memory _proof, bytes32 _queryId, bytes memory _result, string memory _contextName);copyBytes(bytes memory _from, uint _fromOffset, uint _length, bytes memory _to, uint _toOffset);safer_ecrecover(bytes32 _hash, uint8 _v, bytes32 _r, bytes32 _s);ecrecovery(bytes32 _hash, bytes memory _sig);safeMemoryCleaner()"
holiman/cpp-ethereum,test/unittests/performance/rc5.sol,"shift_left(uint32 v, uint32 n);shift_right(uint32 v, uint32 n);rotate_left(uint32 v, uint32 n);rotate_right(uint32 v, uint32 n);encrypt(uint32[26] S, uint32[4] inout);decrypt(uint32[26] S, uint32[4] inout);expand(uint32[4] L, uint32[26] S);test(uint32[26] S, uint32[4] msg)"
Charterhouse/NextBuild2017,contracts/Migrations.sol,setCompleted(uint256 completed);upgrade(address new_address)
aragon/aragon-core,contracts/test/mocks/APMNamehashMock.sol,getAPMNode();getAPMNamehash(string name)
ChicoBitcoinJoe/Matriarch,contracts/Congress.sol,"getWeight(address _voter);passed(uint _proposal_id);Congress(address _curator);vote(uint _proposal_id, bool _support);unvote(address _voter, uint _proposal_id);pass(uint _proposal_id);isVoterLocked(address _voter);getProposalAction(uint _proposal_id);getProposalAddress(uint _proposal_id);getProposalUint(uint _proposal_id)"
GuigsEvt/CrowdsaleEthereum,contracts/Crowdsale.sol,"Crowdsale(uint256 _startTime, uint256 _endTime, uint256 _rate, address _wallet);createTokenContract();buyTokens(address beneficiary);forwardFunds();validPurchase();hasEnded()"
Majoolr/ethereum-libraries,LinkedListLib/truffle/contracts/LinkedListLib.sol,"listExists(LinkedList storage self);nodeExists(LinkedList storage self, uint256 _node);sizeOf(LinkedList storage self);getNode(LinkedList storage self, uint256 _node);getAdjacent(LinkedList storage self, uint256 _node, bool _direction);getSortedSpot(LinkedList storage self, uint256 _node, uint256 _value, bool _direction);createLink(LinkedList storage self, uint256 _node, uint256 _link, bool _direction);insert(LinkedList storage self, uint256 _node, uint256 _new, bool _direction);remove(LinkedList storage self, uint256 _node);push(LinkedList storage self, uint256 _node, bool _direction);pop(LinkedList storage self, bool _direction)"
artemistomaras/django-ethereum-events,example/contracts/contracts/Echo.sol,echo(string message)
GovernX/governx-contracts,src/contracts/LiquidDemocracyControllerFactory.sol,LiquidDemocracyControllerFactory(address _tokenFactory)
LianaHus/dapp-bin,registrar/GlobalRegistrar.sol,"addr(string _name);name(address _owner);owner(string _name);addr(string _name);subRegistrar(string _name);content(string _name);name(address _owner);onAuctionEnd(string _name);bid(string _name, address _bidder, uint _value);Registrar();onAuctionEnd(string _name);reserve(string _name);requiresAuction(string _name);transfer(string _name, address _newOwner);disown(string _name);setAddress(string _name, address _a, bool _primary);setSubRegistrar(string _name, address _registrar);setContent(string _name, bytes32 _content);stringsEqual(string storage _a, string memory _b);owner(string _name);addr(string _name);subRegistrar(string _name);content(string _name);name(address _addr);__throw()"
vaporry/dapp-bin,registrar/GlobalRegistrar.sol,"addr(string _name);name(address _owner);owner(string _name);addr(string _name);subRegistrar(string _name);content(string _name);name(address _owner);onAuctionEnd(string _name);bid(string _name, address _bidder, uint _value);Registrar();onAuctionEnd(string _name);reserve(string _name);requiresAuction(string _name);transfer(string _name, address _newOwner);disown(string _name);setAddress(string _name, address _a, bool _primary);setSubRegistrar(string _name, address _registrar);setContent(string _name, bytes32 _content);stringsEqual(string storage _a, string memory _b);owner(string _name);addr(string _name);subRegistrar(string _name);content(string _name);name(address _addr);__throw()"
ethereum/remix,remix-tests/tests/examples_2/simple_storage_test.sol,beforeEach()
coder-forge/chain-forge,contracts/Bar.sol,""
Opus-foundation/contracts,Lockup.sol,"Lockup(address _multisig);tokenFallback(address _from, uint256 _value, bytes  _data);withdraw(uint256 value);setMultisig(address addr);proposeFoundationTransfer(address newFoundation);cancelFoundationTransfer();acceptFoundationTransfer()"
ranneyd/eth-faucet,contracts/FaucetFactory.sol,createFaucet()
orbro/eth-enablers,solidity-baby-steps-master/contracts/30_endowment_retriever.sol,EndowmentRetriever();getContractCreationValue();sendOneEtherHome();kill()
michinbear/solidity,test/compilationTests/gnosis/Oracles/SignedMessageOracleFactory.sol,"createSignedMessageOracle(bytes32 descriptionHash, uint8 v, bytes32 r, bytes32 s)"
elementrem/solidity,test/compilationTests/gnosis/Oracles/SignedMessageOracleFactory.sol,"createSignedMessageOracle(bytes32 descriptionHash, uint8 v, bytes32 r, bytes32 s)"
web3j/web3j,codegen/src/test/resources/solidity/duplicate/DuplicateField.sol,name();decimals()
SafecontractDev/protocol,contracts/interfaces/IERC23.sol,"transfer(address to, uint value, bytes data);transferFrom(address from, address to, uint value, bytes data)"
elementrem/solidity,test/compilationTests/zeppelin/crowdsale/RefundVault.sol,RefundVault(address _wallet);deposit(address investor);close();enableRefunds();refund(address investor)
quanticpanda/TCI_truffle,contracts/contract.sol,"TCI_admin();getAccount(Client[]  lc, bytes32  Name);manualEntry(bytes32 you, bytes32 other, uint256 entry, uint256 exp, address t);wantsBusiness(bytes32 you, bytes32 other, address t);whoIsConcerned(address origin);paiementConfirmation(bytes32 fro, bytes32 t);checkFunction(bytes32 client, uint r);getNew(address enter, bytes32 Name);TCI_client(bytes32 name, address client, address _admin);resetEvents();getEventSize();localManualEntry(bytes32 you, bytes32 other, uint256 entry, uint256 exp, address t);localPaiementConfirmation(bytes32 fro, bytes32 t);localCheck(uint _time, string _messageFor, bytes32 _client, bytes32 _who1, string _paid, bytes32 _who2);addEvent(uint _time, string _messageFor, bytes32 _client, bytes32 _who1, string _paid, bytes32 _who2)"
Neufund/Contracts,contracts/lib/IERC20CallToken.sol,"approveAndCall(address _spender, uint256 _value, bytes _extraData)"
cgewecke/eth-gas-reporter,mock/contracts/VariableCosts.sol,pureFn(uint x);viewFn(uint x);constantFn(uint x);addToMap(uint[] memory adds);removeFromMap(uint[] memory dels);unusedMethod(address a);setString(string memory _someString);methodThatThrows(bool err);otherContractMethod()
chrisdotn/ethdemocracy,test/TestVoters.sol,beforeEach();testInitialNumberOfVoters();testAddVoter();testDeleteVoter();testAddExistingVoter();testAddVoters()
cmditch/elm-web3,examples/complex/src/solidity/WidgetFactory.sol,"newWidget(uint size_, uint cost_, address owner_);sellWidget(uint id_);widgetCount()"
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/ownership/Contactable.sol,setContactInformation(string _info)
Dsummers91/Dist-Trade-2017,contracts/Depot.sol,"Depot();addWarehouse(uint256 _cubicFeet, uint pricePerCubicFootPerHour, bytes32 startingPosition);addVehicle(uint256 _cubicFeet, uint pricePerCubicFootPerHour, bytes32 startingPosition, bytes32 endingPosition, uint beginDate, uint endDate);purchaseWarehouseSpace(address addr, uint cubicFeet, uint amountOfHours);purchaseVehicleSpace(address addr, uint cubicFeet, uint amountOfHours);warehouses();vehicleDates();vehicles();vehiclesByCity(bytes32 city);vehicleDatesByCity(bytes32 city);getVehicleByAddress(address addr);getWarehouseByAddress(address addr)"
merlox/dapp-transactions,contracts/workingBackup/Transaction.sol,extractEther();getInitialData();getHashAddresses();releaseFundsWhenBothSigned();storeLedgersInIpfs();kill()
airalab/DAO-IPCI,contracts/builder/BuilderComplier.sol,create(address _client)
Neufund/Contracts,contracts/neubank/NeubankGovernance.sol,""
OpenSTFoundation/SimpleTokenSale,contracts/Presales.sol,"setAdminAddress(address _adminAddress);adminAddress();addPresale(address _account, uint256 _baseTokens, uint256 _bonusTokens);Presales(TokenSaleInterface _tokenSale);addPresale(address _account, uint256 _baseTokens, uint256 _bonusTokens);getAccounts();getAccountsSize();lock();process()"
wpypeiyao/Identity-On-Blockchain,app/contracts/DateTime.sol,"getReadableTime(uint time);isLeapYear(uint16 year);leapYearsBefore(uint year);getDaysInMonth(uint8 month, uint16 year);parseTimestamp(uint timestamp);getYear(uint timestamp);getMonth(uint timestamp);getDay(uint timestamp);getHour(uint timestamp);getMinute(uint timestamp);getSecond(uint timestamp);getWeekday(uint timestamp);toTimestamp(uint16 year, uint8 month, uint8 day);toTimestamp(uint16 year, uint8 month, uint8 day, uint8 hour);toTimestamp(uint16 year, uint8 month, uint8 day, uint8 hour, uint8 minute);toTimestamp(uint16 year, uint8 month, uint8 day, uint8 hour, uint8 minute, uint8 second)"
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/token/ERC721/DeprecatedERC721.sol,"takeOwnership(uint256 _tokenId);transfer(address _to, uint256 _tokenId);tokensOf(address _owner)"
Fluid-AI/ICO,contracts/Crowdsale.sol,"buyICOTokens();setRates(uint256 _pricePerEtherWithoutDecimals);updateState();calculateExcessBalance();calculateTokensTier(uint256 weiPaid, uint256 tierSelected);getStates();validICOPurchase();emergencyExtract()"
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/access/SignatureBouncer.sol,"addBouncer(address _bouncer);removeBouncer(address _bouncer);isValidSignature(address _address, bytes _sig);isValidSignatureAndMethod(address _address, bytes _sig);isValidSignatureAndData(address _address, bytes _sig);isValidDataHash(bytes32 _hash, bytes _sig)"
b-mueller/mythril,tests/testdata/input_contracts/environments.sol,"batchTransfer(address[] memory _receivers, uint256 _value)"
dltdojo/courses,ethereum/solidity/T150_StateMachine.sol,nextStage();bid();reveal();g();h();i()
FedCoup/FedCoup,installed_contracts/zeppelin/contracts/lifecycle/TokenDestructible.sol,destroy(address[] tokens)
vldmkr/erc20-token-boilerplate,contracts/BaseToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
cgewecke/solcover,test/sources/if/if-with-brackets-multiline.sol,a(uint x)
JoinColony/solcover,test/sources/if/if-with-brackets-multiline.sol,a(uint x)
eris-ltd/eris,tests/jobs_fixtures/app33-evm_connection_edb_permissions_and_roles_layer/permissions.sol,"addRole(address _account, bytes32 _role);removeRole(address _account, bytes32 _role);hasRole(address _account, bytes32 _role);setBase(address _account, uint64 _permission, bool _set);unsetBase(address _account, uint64 _permission);hasBase(address _account, uint64 _permission);setGlobal(uint64 _permission, bool _set);hasBase(address addr, uint64 permFlag);setBase(address addr, uint64 permFlag, bool value);unsetBase(address addr, uint64 permFlag);setGlobal(uint64 permFlag, bool value);hasRole(address addr, bytes32 role);addRole(address addr, bytes32 role);removeRole(address addr, bytes32 role)"
monax/monax,tests/jobs_fixtures/app33-evm_connection_edb_permissions_and_roles_layer/permissions.sol,"addRole(address _account, bytes32 _role);removeRole(address _account, bytes32 _role);hasRole(address _account, bytes32 _role);setBase(address _account, uint64 _permission, bool _set);unsetBase(address _account, uint64 _permission);hasBase(address _account, uint64 _permission);setGlobal(uint64 _permission, bool _set);hasBase(address addr, uint64 permFlag);setBase(address addr, uint64 permFlag, bool value);unsetBase(address addr, uint64 permFlag);setGlobal(uint64 permFlag, bool value);hasRole(address addr, bytes32 role);addRole(address addr, bytes32 role);removeRole(address addr, bytes32 role)"
eris-ltd/eris-cli,tests/jobs_fixtures/app33-evm_connection_edb_permissions_and_roles_layer/permissions.sol,"addRole(address _account, bytes32 _role);removeRole(address _account, bytes32 _role);hasRole(address _account, bytes32 _role);setBase(address _account, uint64 _permission, bool _set);unsetBase(address _account, uint64 _permission);hasBase(address _account, uint64 _permission);setGlobal(uint64 _permission, bool _set);hasBase(address addr, uint64 permFlag);setBase(address addr, uint64 permFlag, bool value);unsetBase(address addr, uint64 permFlag);setGlobal(uint64 permFlag, bool value);hasRole(address addr, bytes32 role);addRole(address addr, bytes32 role);removeRole(address addr, bytes32 role)"
monax/cli,tests/jobs_fixtures/app33-evm_connection_edb_permissions_and_roles_layer/permissions.sol,"addRole(address _account, bytes32 _role);removeRole(address _account, bytes32 _role);hasRole(address _account, bytes32 _role);setBase(address _account, uint64 _permission, bool _set);unsetBase(address _account, uint64 _permission);hasBase(address _account, uint64 _permission);setGlobal(uint64 _permission, bool _set);hasBase(address addr, uint64 permFlag);setBase(address addr, uint64 permFlag, bool value);unsetBase(address addr, uint64 permFlag);setGlobal(uint64 permFlag, bool value);hasRole(address addr, bytes32 role);addRole(address addr, bytes32 role);removeRole(address addr, bytes32 role)"
Nermannen/eth-e-voting-project,contracts/Ballot.sol,"Ballot(bytes32[] partyNames, bytes32[] candidateNames);startElection(uint duration);totalVotesForParty(uint party);totalVotesForCandidate(uint candidate);giveRightToVote(address voter);vote(uint party, uint candidate);getVotersPartyVote();getVotersCandidateVote();removeVotersVote(address voter)"
OpenSTFoundation/SimpleTokenSale,contracts/FutureTokenSaleLockBoxMock.sol,"FutureTokenSaleLockBoxMock(ERC20Interface _simpleToken, TokenSaleInterface _tokenSale, uint256 _currentTime);currentTime();changeTime(uint256 _newTime)"
b-mueller/mythril,tests/native_tests.sol,thisisfine();ripemdTest();ecrecoverTest();needIdentityInvoke(uint sea);identityFunction(int input)
chfast/cpp-ethereum,test/performance/mul0.sol,""
AriseID/ariseid-core,contracts/ens/contract/ens.sol,"ENS(address owner);owner(bytes32 node);resolver(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);FIFSRegistrar(address ensAddr, bytes32 node);register(bytes32 subnode, address owner);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);PublicResolver(address ensAddr);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash)"
trixyrabbit/Exile,contracts/CanvasFrag.sol,"CanvasFrag();wipe();set(bytes4 color, uint8 x, uint8 y)"
sirasistant/market_consensys_academy,contracts/MarketHub.sol,"MarketHub(uint _fee);deployShop(address seller);setShopRunning(address shopAddress,bool status);registerBuy();receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);tokenFallback(address _from, uint _value, bytes _data);isTrustedShop(address shop);addAllowedToken(address account);getTrustedShopCount()"
orbro/eth-enablers,solidity-baby-steps-master/contracts/45_pong.sol,getPongvalTransactional();Pong(int8 _pongval);getPongvalTransactional();getPongvalConstant();setPongval(int8 _pongval);getPongvalTxRetrievalAttempted();getAddress();kill()
Speed-Mining/SMSCoin,token/SmsReward.sol,"SMSReward(address smsCoinAddress);addWhiteListAddress(address[] addresses);removeWhiteListAddress(address[] addresses);checkWhitelistExist(address addr);sendEthToContract();checkProfit(address addr);requestDividends();drainETH();getRewardStatus(address addr);setRewardStatus(address addr, bool status)"
livepeer/protocol,contracts/previous/bonding/BondingManagerV3.sol,"setUnbondingPeriod(uint64 _unbondingPeriod);setNumTranscoders(uint256 _numTranscoders);setNumActiveTranscoders(uint256 _numActiveTranscoders);setMaxEarningsClaimsRounds(uint256 _maxEarningsClaimsRounds);transcoder(uint256 _rewardCut, uint256 _feeShare, uint256 _pricePerSegment);unbond(uint256 _amount);withdrawStake(uint256 _unbondingLockId);withdrawFees();setActiveTranscoders();reward();electActiveTranscoder(uint256 _maxPricePerSegment, bytes32 _blockHash, uint256 _round);claimEarnings(uint256 _endRound);pendingStake(address _delegator, uint256 _endRound);pendingFees(address _delegator, uint256 _endRound);activeTranscoderTotalStake(address _transcoder, uint256 _round);transcoderTotalStake(address _transcoder);transcoderStatus(address _transcoder);delegatorStatus(address _delegator);getTranscoderPoolMaxSize();getTranscoderPoolSize();getFirstTranscoderInPool();getNextTranscoderInPool(address _transcoder);getTotalBonded();getTotalActiveStake(uint256 _round);isActiveTranscoder(address _transcoder, uint256 _round);isRegisteredTranscoder(address _transcoder);isValidUnbondingLock(address _delegator, uint256 _unbondingLockId);resignTranscoder(address _transcoder);updateTranscoderWithRewards(address _transcoder, uint256 _rewards, uint256 _round);updateDelegatorWithEarnings(address _delegator, uint256 _endRound);processRebond(address _delegator, uint256 _unbondingLockId);livepeerToken();minter();roundsManager()"
daostack/daostack,contracts/universalSchemes/UpgradeScheme.sol,"executeProposal(bytes32 _proposalId, int256 _param);proposeUpgrade(Avatar _avatar, address _newController, string memory _descriptionHash)"
kinfoundation/kin-token,test/helpers/MultiSigWalletMock.sol,"MultiSigWalletMock(address[] _owners, uint _required);submitTransaction(address _destination, uint _value, bytes _data)"
oraclekit/smart_oracle,lib/assets/contracts/Uint256Oracle.sol,update(uint256 newCurrent)
SilentCicero/wafr,src/tests/solidityTests/gasUsage/examples/BondRules.sol,"hasWon(uint _proposalID);canVote(address _sender, uint _proposalID);canPropose(address _sender);votingWeightOf(address _sender, uint _proposalID);depositBond(uint _proposalID)"
commodityadnetwork/CDX,contracts/Owned.sol,Owned();setOwner(address owner_)
anniemwu/chainge,node_modules/truffle/build/Assert.sol,"addMod(uint a, uint b, uint modulus);testAdd();testAdd();fail(string message);equal(string A, string B, string message);notEqual(string A, string B, string message);isEmpty(string str, string message);isNotEmpty(string str, string message);equal(bytes32 A, bytes32 B, string message);notEqual(bytes32 A, bytes32 B, string message);isZero(bytes32 bts, string message);isNotZero(bytes32 bts, string message);equal(address A, address B, string message);notEqual(address A, address B, string message);isZero(address addr, string message);isNotZero(address addr, string message);isTrue(bool b, string message);isFalse(bool b, string message);equal(bool A, bool B, string message);notEqual(bool A, bool B, string message);equal(uint A, uint B, string message);notEqual(uint A, uint B, string message);isAbove(uint A, uint B, string message);isAtLeast(uint A, uint B, string message);isBelow(uint A, uint B, string message);isAtMost(uint A, uint B, string message);isZero(uint number, string message);isNotZero(uint number, string message);equal(int A, int B, string message);notEqual(int A, int B, string message);isAbove(int A, int B, string message);isAtLeast(int A, int B, string message);isBelow(int A, int B, string message);isAtMost(int A, int B, string message);isZero(int number, string message);isNotZero(int number, string message);equal(uint[] arrA, uint[] arrB, string message);notEqual(uint[] arrA, uint[] arrB, string message);lengthEqual(uint[] arr, uint length, string message);lengthNotEqual(uint[] arr, uint length, string message);equal(int[] arrA, int[] arrB, string message);notEqual(int[] arrA, int[] arrB, string message);lengthEqual(int[] arr, uint length, string message);lengthNotEqual(int[] arr, uint length, string message);equal(address[] arrA, address[] arrB, string message);notEqual(address[] arrA, address[] arrB, string message);lengthEqual(address[] arr, uint length, string message);lengthNotEqual(address[] arr, uint length, string message);equal(bytes32[] arrA, bytes32[] arrB, string message);notEqual(bytes32[] arrA, bytes32[] arrB, string message);lengthEqual(bytes32[] arr, uint length, string message);lengthNotEqual(bytes32[] arr, uint length, string message);balanceEqual(address A, uint b, string message);balanceNotEqual(address A, uint b, string message);balanceIsZero(address A, string message);balanceIsNotZero(address A, string message);_report(bool result, string message);_stringsEqual(string a, string b);_itoa(int n, uint8 radix);_utoa(uint n, uint8 radix);_utoa(uint8 u);_ltoa(bool val);htoa(address addr);_tag(string value, string tag);_tag(int value, string tag);_tag(uint value, string tag);_tag(bool value, string tag);_appendTagged(string tagged, string str);_appendTagged(string tagged0, string tagged1, string str)"
hsavit1/gosofi_webpage,node_modules/truffle/build/Assert.sol,"addMod(uint a, uint b, uint modulus);testAdd();testAdd();fail(string message);equal(string A, string B, string message);notEqual(string A, string B, string message);isEmpty(string str, string message);isNotEmpty(string str, string message);equal(bytes32 A, bytes32 B, string message);notEqual(bytes32 A, bytes32 B, string message);isZero(bytes32 bts, string message);isNotZero(bytes32 bts, string message);equal(address A, address B, string message);notEqual(address A, address B, string message);isZero(address addr, string message);isNotZero(address addr, string message);isTrue(bool b, string message);isFalse(bool b, string message);equal(bool A, bool B, string message);notEqual(bool A, bool B, string message);equal(uint A, uint B, string message);notEqual(uint A, uint B, string message);isAbove(uint A, uint B, string message);isAtLeast(uint A, uint B, string message);isBelow(uint A, uint B, string message);isAtMost(uint A, uint B, string message);isZero(uint number, string message);isNotZero(uint number, string message);equal(int A, int B, string message);notEqual(int A, int B, string message);isAbove(int A, int B, string message);isAtLeast(int A, int B, string message);isBelow(int A, int B, string message);isAtMost(int A, int B, string message);isZero(int number, string message);isNotZero(int number, string message);equal(uint[] arrA, uint[] arrB, string message);notEqual(uint[] arrA, uint[] arrB, string message);lengthEqual(uint[] arr, uint length, string message);lengthNotEqual(uint[] arr, uint length, string message);equal(int[] arrA, int[] arrB, string message);notEqual(int[] arrA, int[] arrB, string message);lengthEqual(int[] arr, uint length, string message);lengthNotEqual(int[] arr, uint length, string message);equal(address[] arrA, address[] arrB, string message);notEqual(address[] arrA, address[] arrB, string message);lengthEqual(address[] arr, uint length, string message);lengthNotEqual(address[] arr, uint length, string message);equal(bytes32[] arrA, bytes32[] arrB, string message);notEqual(bytes32[] arrA, bytes32[] arrB, string message);lengthEqual(bytes32[] arr, uint length, string message);lengthNotEqual(bytes32[] arr, uint length, string message);balanceEqual(address A, uint b, string message);balanceNotEqual(address A, uint b, string message);balanceIsZero(address A, string message);balanceIsNotZero(address A, string message);_report(bool result, string message);_stringsEqual(string a, string b);_itoa(int n, uint8 radix);_utoa(uint n, uint8 radix);_utoa(uint8 u);_ltoa(bool val);htoa(address addr);_tag(string value, string tag);_tag(int value, string tag);_tag(uint value, string tag);_tag(bool value, string tag);_appendTagged(string tagged, string str);_appendTagged(string tagged0, string tagged1, string str)"
montyly/manticore,tests/ethereum/contracts/imp.sol,""
trailofbits/manticore,tests/ethereum/contracts/imp.sol,""
tomaaron/raiden,raiden/smart_contracts/ChannelManagerLibrary.sol,"getChannelWith(Data storage self, address caller_address, address partner);partyHash(address address_one, address address_two);contractExists(Data storage self, address _addr)"
triage/KPCSEthereum,contracts/User.sol,"User(string _name, address _administrator);getOwner();setState(uint _state);getAdministrator();getNameHash();getName();getType();getState();accept();reject();suspend();kill()"
gacktomo/ethereum-webServer,webServer.sol,"set(bytes32 time, bytes32 domain, bytes32 name, bytes data);get(bytes32 domain, bytes32 name, uint index);deletePage(bytes32 domain, bytes32 name);getlen(bytes32 domain, bytes32 name)"
ranneyd/eth-faucet,contracts/Faucet.sol,getBalance();getWei();sendWei(address recp);getRemainingBlocks();getBlockLimit();setBlockLimit(uint limit);setSendAmount(uint256 val);getSendAmount();killMe()
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/monorepo/truffleproject/contracts/Importer.sol,""
jeje/solidity-code-quality,cli/src/test/resources/contracts/MultipleErrorsContract.sol,"MultipleErrorsContract();useSuperPowers();transferTo(address dest, uint amount)"
jeje/solidity-code-quality,sonar-solidity-plugin/src/test/resources/contracts/MultipleErrorsContract.sol,"MultipleErrorsContract();useSuperPowers();transferTo(address dest, uint amount)"
jeje/solidity-code-quality,core/src/test/antlr/MultipleErrorsContract.sol,"MultipleErrorsContract();useSuperPowers();transferTo(address dest, uint amount)"
Soma-co/soma-community-token,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address newAddress)
GreenMed/Token,Contract/GreenMedToken.sol,"owned();changeOwner(address _owner);confirmOwner();sub(uint256 a, uint256 b);add(uint256 a, uint256 b);balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint256 value);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);balanceOf(address _who);allowance(address _owner, address _spender);GreenMed();transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);freezeAccount(address target, bool freeze);burn(uint256 _value)"
Neurone/persians,contracts/Upgradable.sol,"Upgradable(string _version);setDeprecated(string _newVersion, address _newAddress)"
iurimatias/TransactionRelay,app/contracts/deployer.sol,"transfer( address to, uint value);transferFrom( address from, address to, uint value);allowance(address owner, address spender);DeployRelay();reserveDeployment(address requesterAddress, bytes32 codeHash, address tokenAddress, uint tokenNum, uint8 v, bytes32 r, bytes32 s);confirmDeployment(uint256 deploymentId, address deployedAddress, bytes32 codeHash);verifyDeployment(address addr, bytes32 expectedHash);verifySignature(address from, uint num, bytes32 code);recoverAddress(bytes32 hash2, uint8 v, bytes32 r, bytes32 s)"
silasdavis/eris-db,tests/jobs_fixtures/app11-negative_numbers/storage.sol,"setX(int a);setNegativeArray(int a, int b);getNegativeArray()"
silasdavis/burrow,tests/jobs_fixtures/app11-negative_numbers/storage.sol,"setX(int a);setNegativeArray(int a, int b);getNegativeArray()"
eris-ltd/eris-db,tests/jobs_fixtures/app11-negative_numbers/storage.sol,"setX(int a);setNegativeArray(int a, int b);getNegativeArray()"
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/contracts/token/SafeERC20.sol,"safeTransfer(ERC20Basic token, address to, uint256 value);safeTransferFrom(ERC20 token, address from, address to, uint256 value);safeApprove(ERC20 token, address spender, uint256 value)"
pash7ka/zeppelin-solidity,contracts/token/SafeERC20.sol,"safeTransfer(ERC20Basic token, address to, uint256 value);safeTransferFrom(ERC20 token, address from, address to, uint256 value);safeApprove(ERC20 token, address spender, uint256 value)"
iswarm/p2pCny,contracts/token/SafeERC20.sol,"safeTransfer(ERC20Basic token, address to, uint256 value);safeTransferFrom(ERC20 token, address from, address to, uint256 value);safeApprove(ERC20 token, address spender, uint256 value)"
readevalprint/aragon-core,contracts/zeppelin/token/SafeERC20.sol,"safeTransfer(ERC20Basic token, address to, uint256 value);safeTransferFrom(ERC20 token, address from, address to, uint256 value);safeApprove(ERC20 token, address spender, uint256 value)"
PeculiumPCL/Peculium,contracts/v0.7/SafeERC20.sol,"safeTransfer(ERC20Basic token, address to, uint256 value);safeTransferFrom(ERC20 token, address from, address to, uint256 value);safeApprove(ERC20 token, address spender, uint256 value)"
PeculiumPCL/Peculium,contracts/v1.1/SafeERC20.sol,"safeTransfer(ERC20Basic token, address to, uint256 value);safeTransferFrom(ERC20 token, address from, address to, uint256 value);safeApprove(ERC20 token, address spender, uint256 value)"
PeculiumPCL/Peculium,contracts/v1.0/SafeERC20.sol,"safeTransfer(ERC20Basic token, address to, uint256 value);safeTransferFrom(ERC20 token, address from, address to, uint256 value);safeApprove(ERC20 token, address spender, uint256 value)"
PeculiumPCL/Peculium,contracts/v1.2/SafeERC20.sol,"safeTransfer(ERC20Basic token, address to, uint256 value);safeTransferFrom(ERC20 token, address from, address to, uint256 value);safeApprove(ERC20 token, address spender, uint256 value)"
PeculiumPCL/Peculium,contracts/v2/SafeERC20.sol,"safeTransfer(ERC20Basic token, address to, uint256 value);safeTransferFrom(ERC20 token, address from, address to, uint256 value);safeApprove(ERC20 token, address spender, uint256 value)"
pz7/liquet,node_modules/zeppelin-solidity/contracts/token/SafeERC20.sol,"safeTransfer(ERC20Basic token, address to, uint256 value);safeTransferFrom(ERC20 token, address from, address to, uint256 value);safeApprove(ERC20 token, address spender, uint256 value)"
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/token/SafeERC20.sol,"safeTransfer(ERC20Basic token, address to, uint256 value);safeTransferFrom(ERC20 token, address from, address to, uint256 value);safeApprove(ERC20 token, address spender, uint256 value)"
dmx374/zeppelin-solidity,contracts/token/SafeERC20.sol,"safeTransfer(ERC20Basic token, address to, uint256 value);safeTransferFrom(ERC20 token, address from, address to, uint256 value);safeApprove(ERC20 token, address spender, uint256 value)"
cashpokerpro-dev/cash-smartcontracts,contracts/token/SafeERC20.sol,"safeTransfer(ERC20Basic token, address to, uint256 value);safeTransferFrom(ERC20 token, address from, address to, uint256 value);safeApprove(ERC20 token, address spender, uint256 value)"
cinderblockchain/cindertoken,contracts/token/SafeERC20.sol,"safeTransfer(ERC20Basic token, address to, uint256 value);safeTransferFrom(ERC20 token, address from, address to, uint256 value);safeApprove(ERC20 token, address spender, uint256 value)"
Dsummers91/Dist-Trade-2017,installed_contracts/tokens/contracts/SampleRecipientThrow.sol,""
raineorshine/solgraph,test/in/imports/issue14_parent.sol,""
stanta/darfchain,ICO/contracts/FinalizeAgent.sol,isFinalizeAgent();isSane();finalizeCrowdsale()
jgm-learn/SmartContract,ID.sol,getConID();getNegID()
montyly/manticore,examples/evm/simple_int_overflow.sol,add(uint value)
trailofbits/manticore,examples/evm/simple_int_overflow.sol,add(uint value)
montyly/manticore,tests/ethereum/contracts/consensys_benchmark/integer_overflow_mapping_mapping.sol,init(uint256 k)
trailofbits/manticore,tests/ethereum_bench/consensys_benchmark/integer_overflow_mapping_mapping.sol,init(uint256 k)
bithouse/fluid-equity-dapp,contracts/FluidEquity.sol,""
juliusbenson/republickey,republickey.sol,RepublicKey(address[] voterList);Set(bytes32 proposalVotedOn);Get();Count()
CORIONplatform/solidity,owned.sol,replaceOwner(address newOwner);isOwner()
manishbisht/Udacity,Blockchain Developer Nanodegree/P5 - Decentralized Star Notary/smart_contracts/contracts/StarNotary.sol,"createStar(string _name, string _story, string _ra, string _dec, string _mag, uint256 _tokenId);checkIfStarExists(string _ra, string _dec, string _mag);tokenIdToStarInfo(uint256 _tokenId);putStarUpForSale(uint256 _tokenId, uint256 _price);buyStar(uint256 _tokenId);concatTwoStrings(string _string1, string _string2);concatThreeStrings(string _string1, string _string2, string _string3)"
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.4.24/transfer.sol,f(address r)
soad003/browser-solidity,test/staticanalysis/test-contracts/transfer.sol,f(address r)
hsavit1/gosofi_webpage,contracts/Voting.sol,Voting(bytes32[] candidateNames);totalVotesFor(bytes32 candidate);voteForCandidate(bytes32 candidate);validCandidate(bytes32 candidate)
Majoolr/ethereum-libraries,WalletLib/truffle/contracts/TestToken.sol,"totalSupply();balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value)"
fractalPlatform/Fractal,processor/vm/runtime/contract/crypto/crypto.sol,myencode();mydecode()
melonproject/protocol,contracts/fund/policies/risk-management/AssetBlacklist.sol,addFundSettings(bytes calldata _encodedSettings);identifier();validateRule(bytes calldata _encodedArgs)
SilentCicero/wafr,src/tests/solidityTests/assertTrue/test.assertTrue.sol,test_oneFalseAssert();test_oneTrueAssert();test_twoFalseAsserts();test_twoTrueAsserts();test_oneTrueAndFalseAssert()
OpenSTFoundation/SimpleTokenSale,contracts/SafeMath.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b)"
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/migrations/success/contracts/PayableExample.sol,""
LykkeCity/EthereumApiDotNetCore,src/ContractBuilder/contracts/transferBaseContract.sol,TransferBaseContract(address coinAdapterAddress)
livepeer/protocol,contracts/jobs/PreMigrationJobsManager.sol,"PreMigrationJobsManager(address _controller);setVerificationRate(uint64 _verificationRate);setVerificationPeriod(uint256 _verificationPeriod);setVerificationSlashingPeriod(uint256 _verificationSlashingPeriod);setFailedVerificationSlashAmount(uint256 _failedVerificationSlashAmount);setMissedVerificationSlashAmount(uint256 _missedVerificationSlashAmount);setDoubleClaimSegmentSlashAmount(uint256 _doubleClaimSegmentSlashAmount);setFinderFee(uint256 _finderFee);deposit();withdraw();job(string _streamId, string _transcodingOptions, uint256 _maxPricePerSegment, uint256 _endBlock);claimWork(uint256 _jobId, uint256[2] _segmentRange, bytes32 _claimRoot);receiveVerification(uint256 _jobId, uint256 _claimId, uint256 _segmentNumber, bool _result);batchDistributeFees(uint256 _jobId, uint256[] _claimIds);missedVerificationSlash(uint256 _jobId, uint256 _claimId, uint256 _segmentNumber);distributeFees(uint256 _jobId, uint256 _claimId);jobStatus(uint256 _jobId);refundBroadcaster(uint256 _jobId);minter();bondingManager();roundsManager();verifier()"
maxweng/oracleit-examples,contracts/Timer.sol,"Timer();setInterval(uint _interval);startTimer();__callback(uint id, string result)"
livepeer/protocol,contracts/verification/IVerifier.sol,getPrice()
WishFinanceCom/WF-contracts,contracts/core/platform/WFAssetInterface.sol,"__transferWithReference(address _to, uint _value, string _reference, address _sender);__transferFromWithReference(address _from, address _to, uint _value, string _reference, address _sender);__approve(address _spender, uint _value, address _sender);__process(bytes _data, address _sender)"
rsksmart/rskj,rskj-core/src/test/resources/dsl/createAfterSuicide/TestChild.sol,destroy()
rsksmart/rskj,rskj-core/src/test/resources/dsl/codeSizeAfterSuicide/TestChild.sol,destroy()
boisde/Greed_Island,party/contracts/protocol/modules/SingleIndexModule.sol,"trade(address _component);tradeRemainingWETH(address _component);raiseAssetTargets();updateTraderStatus(address[] calldata _traders, bool[] calldata _statuses);updateAnyoneTrade(bool _status);initialize(ISetToken _index);removeModule();getTargetUnits(address[] calldata _components);getRebalanceComponents();_validateTradeParameters(address _component);_calculateTradeSizeAndDirection(address _component);_buyUnderweight(address _component, uint256 _amount);_sellOverweight(address _component, uint256 _amount);_noTokensToSell();_allTargetsMet();_normalizeTargetUnit(address _component, uint256 _currentPositionMultiplier);_isAllowedTrader(address _caller);_validateArrays(address[] calldata _components, uint256[] calldata _data)"
AragonOne/zeppelin-solidity,contracts/test-helpers/ShareableMock.sol,"ShareableMock(address[] _owners, uint _required);increaseCount(bytes32 action)"
InsidersByte/solc-cli,example-contracts/cont.sol,g()
RyuuGan/sol-merger,test/contracts/NamedImports.sol,MyOwned()
ffabrizio/langawallet,app/client/contracts/Token.sol,"Token(uint256 initialSupply, string tokenName, uint8 decimalUnits, string tokenSymbol, address centralMinter);transfer(address recipient, uint256 amount);mintToken(address target, uint256 mintedAmount);freezeAccount(address target, bool freeze)"
iam-dev/ERC23,contracts/ownership/Whitelist.sol,"Whitelist(address[] _whitelists, uint256 _maxAddresses);getWhitelists();checkWhitelisted(address _whitelist);setMaxAddresses(uint256 _maxAddresses);addAddressToWhitelist(address _whitelist);removeAddressFromWhitelist(address _whitelist)"
dltdojo/courses,ethereum/evm/T02_Function.sol,get();get();get(uint a);getMul(uint a);getAdd(uint a)
axic/ethereum-tokenescrow,tokenescrow.sol,"balanceOf(address _address);transfer(address _to, uint _value);setOwner(address _owner);TokenEscrow();create(address token, uint tokenAmount, uint price, address seller, address buyer, address recipient);create(address token, uint tokenAmount, uint price, address seller, address buyer);kill()"
ChronoBank/LX-SC,contracts/JobsDataProvider.sol,"getJobsBoard(uint _jobId);getJobForClientCount(address _client);getJobForWorkerCount(address _worker);_toBool(uint _value);getJobsCount();getJobsByIds(uint[] _jobIds);getJobOffersCount(uint _jobId);getJobOffers(uint _jobId, uint _fromIdx, uint _maxLen);getJobClient(uint _jobId);getJobWorker(uint _jobId);isActivatedState(uint _jobId, uint _jobState);getJobSkillsArea(uint _jobId);getJobSkillsCategory(uint _jobId);getJobSkills(uint _jobId);getJobDetailsIPFSHash(uint _jobId);getJobDefaultPay(uint _jobId);getJobState(uint _jobId);getFinalState(uint _jobId)"
iam-dev/ERC23,installed_contracts/zeppelin-solidity/test/mocks/DayLimitMock.sol,DayLimitMock(uint256 _value);attemptSpend(uint256 _value);setDailyLimit(uint256 _newLimit);resetSpentToday()
SilentCicero/wafr,src/tests/solidityTests/beforeAfterEach/test.before_.sol,setup();beforeEach();before_test_method();test_method()
Henri93/PennBlockchain-Smart-Contracts,ERC20 Token/contracts/ERCToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
zetherz/eth-match,test/helpers/CappedCrowdsaleImpl.sol,""
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol,"totalSupply();balanceOf(address _who);transfer(address _to, uint256 _value)"
dacplayproject/play-dapp,src/PLS.t.sol,setUp();testFail_basic_sanity();test_basic_sanity();test_transfer_to_contract_with_fallback();test_transfer_to_contract_without_fallback()
ultra-koder/JobMarket,.c9/metadata/workspace/dapp/contracts/contract.sol,""
ResourceHog/futarchy,contracts/PredictionMarket.sol,"PredictionMarket(uint _endTime);ordersLength();sellOrder(uint odds);buyOrder(uint odds);cancelOrder(uint odds, uint quantity);cancelIncompleteOrders();evaluateOdds();awardBuyers();awardSellers();revert()"
josiahwood/futarchy,contracts/PredictionMarket.sol,"PredictionMarket(uint _endTime);ordersLength();sellOrder(uint odds);buyOrder(uint odds);cancelOrder(uint odds, uint quantity);cancelIncompleteOrders();evaluateOdds();awardBuyers();awardSellers();revert()"
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/contracts/crowdsale/Crowdsale.sol,"Crowdsale(uint256 _startTime, uint256 _endTime, uint256 _rate, address _wallet);createTokenContract();buyTokens(address beneficiary);forwardFunds();validPurchase();hasEnded()"
readevalprint/aragon-core,contracts/zeppelin/crowdsale/Crowdsale.sol,"Crowdsale(uint256 _startTime, uint256 _endTime, uint256 _rate, address _wallet);createTokenContract();buyTokens(address beneficiary);forwardFunds();validPurchase();hasEnded()"
pz7/liquet,node_modules/zeppelin-solidity/contracts/crowdsale/Crowdsale.sol,"Crowdsale(uint256 _startTime, uint256 _endTime, uint256 _rate, address _wallet);createTokenContract();buyTokens(address beneficiary);forwardFunds();validPurchase();hasEnded()"
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/crowdsale/Crowdsale.sol,"Crowdsale(uint256 _startTime, uint256 _endTime, uint256 _rate, address _wallet);createTokenContract();buyTokens(address beneficiary);forwardFunds();validPurchase();hasEnded()"
dmx374/zeppelin-solidity,contracts/crowdsale/Crowdsale.sol,"Crowdsale(uint256 _startTime, uint256 _endTime, uint256 _rate, address _wallet);createTokenContract();buyTokens(address beneficiary);forwardFunds();validPurchase();hasEnded()"
cashpokerpro-dev/cash-smartcontracts,contracts/crowdsale/Crowdsale.sol,"Crowdsale(uint256 _startTime, uint256 _endTime, uint256 _rate, address _wallet);createTokenContract();buyTokens(address beneficiary);forwardFunds();validPurchase();hasEnded()"
cinderblockchain/cindertoken,contracts/crowdsale/Crowdsale.sol,"Crowdsale(uint256 _startTime, uint256 _endTime, uint256 _rate, address _wallet);createTokenContract();buyTokens(address beneficiary);forwardFunds();validPurchase();hasEnded()"
Dicoiner/irianna-solidity,contracts/crowdsale/FinalizableCrowdsale.sol,finalize();finalization()
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/token/ERC20/BurnableToken.sol,"burn(uint256 _value);_burn(address _who, uint256 _value)"
mwensveen-nl/solidity-testing,src/test/resources/MainContract.sol,MainContract();setDelegate(address _delegate);bumpCounter(uint a);getCounter()
maxweng/oracleit-examples,contracts/api/OracleItAPI.sol,"query(uint timestamp, bytes32 dataSource, string arg1, string arg2, uint gasLimit, uint gasPrice);getPrice(bytes32 dataSource);getAddress();oracleItSetNetwork();oracleItQuery(string dataSource, string arg1);oracleItQuery(uint timestamp, string dataSource, string arg1);oracleItQuery(string dataSource, string arg1, uint gasLimit, uint gasPrice);oracleItQuery(uint timestamp, string dataSource, string arg1, uint gasLimit, uint gasPrice);oracleItQuery(string dataSource, string arg1, string arg2);oracleItQuery(uint timestamp, string dataSource, string arg1, string arg2);oracleItQuery(string dataSource, string arg1, string arg2, uint gasLimit, uint gasPrice);oracleItQuery(uint timestamp, string _dataSource, string arg1, string arg2, uint gasLimit, uint gasPrice);oracleItCallbackAddress();getCodeSize(address _addr)"
gnosis/gnosis-contracts,contracts/Oracles/MajorityOracle.sol,getStatusAndOutcome();isOutcomeSet();getOutcome()
y12studio/dltdojo,contracts/ddjat/contracts/DDJETH.sol,DDJETH()
aletheia-foundation/aletheia-app,contracts/ManuscriptFactory.sol,"ManuscriptFactory(address _libraryAddress);onlyCreate();createManuscript(bytes32 _dataAddress, string title)"
sirasistant/market_consensys_academy,contracts/Shop.sol,"Shop(uint _fee,address _seller);isAllowedToken(address tokenAddress);addProductInternal(Product newProduct);deleteProductInternal(bytes32 id);__callback(bytes32 requestId, string result);__callback(bytes32 requestId, string result,bytes proof);addProductInUsd(uint cents,uint amount,bytes32 name);addProduct(uint price,uint amount,bytes32 name,address tokenAddress);deleteProduct(bytes32 id);setProductStock(bytes32 id,uint amount);buyWithTokens(bytes32 id);buy(bytes32 id);setRunning(bool running);getProductsCount();getProduct(bytes32 id);receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);tokenFallback(address _from, uint _value, bytes _data);getPrice(bytes32 productId);getSeller();stringToUint(string s)"
SafeContracts/TREX-token,SafecontractsTREXWeifund.sol,beneficiary();expiry();fundingGoal();amountRaised()
iam-dev/ERC23,contracts/token/UpgradeableStandard23Token.sol,setName(bytes32 _name);setSymbol(bytes32 _symbol);setDecimals(uint256 _decimals);addSupply(uint256 _amount);subSupply(uint256 _amount)
aletheia-foundation/aletheia-app,contracts/Aletheia.sol,"remove();newManuscript(bytes32 _hash, string title, address[] authors);communityVote(bytes32 _hash, bool _vote)"
Juzix/BlockChain-Demo,contracts/interfaces/IRegisterManager.sol,"register(string _moduleName, string _moduleVersion);register(string _moduleName, string _moduleVersion, string _contractName, string _contractVersion);unRegister();getModuleAddress(string _moduleName, string _moduleVersion);getContractAddress(string _moduleName, string _moduleVersion, string _contractName, string _contractVersion);IfModuleRegist(address _moduleAddr);IfModuleRegist(string _moduleName, string _moduleVersion);IfContractRegist(address _contractAddr);IfContractRegist(string _moduleName, string _moduleVersion, string _contractName, string _contractVersion);findResNameByAddress(address _addr);findContractVersionByAddress(address _addr);findModuleNameByAddress(address _addr);findModuleVersionByAddress(address _addr);getRegisteredContract(uint _pageNum, uint _pageSize);changeModuleRegisterOwner(string _moduleName, string _moduleVersion, address _newOwner);changeContractRegisterOwner(string _moduleName, string _moduleVersion, string _contractName, string _contractVersion, address _newOwner)"
TruLtd/tru-reputation-token,contracts/test-helpers/MockUpgradeAgent.sol,"isUpgradeAgent();upgradeFrom(address _from, uint256 _value)"
bcosorg/bcos,systemcontractv2/FileInfoManager.sol,"FileInfoManager();insert(string _fileJson);deleteById(string _fileId);update(string _fileJson);find(string _fileId);getCount();listAll();listByGroup(string _group);pageFiles(uint _pageNo, uint256 _pageSize);pageByGroup(string _group, uint256 _pageNo);getGroupPageCount(string _group);getGroupFileCount(string _group);getCurrentPageSize();getCurrentPageCount();generateFileID(string _salt, string _groupID, string _serverId, string _filename)"
coinstruct/coinstruct,Token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
Communication-Systems-Group/solidity-examples,example5.sol,deposit();withdraw(uint amount)
district0x/name-bazaar,resources/public/contracts/src/OfferingRegistry.sol,"addOffering(address offering, bytes32 node, address owner, uint version);fireOnOfferingChanged(uint version, bytes32 eventType, uint[] calldata extraData);emergencyPause();emergencyRelease()"
orbro/eth-enablers,pyramidScheme.sol,"Pyramid(address _bitcoinBridge);enter(bytes desc, bytes bitcoinAddress);getNumberOfParticipants();collectFees(address recipient);setBitcoinBridge(address _bitcoinBridge);setOwner(address _owner);queuePayment(bytes bitcoinAddress)"
zeroqn/aa-apply,contracts/EmployeeServ.sol,"EmployeeServ(address _db);isEmployee(address account);getEmployeeCount();getEmployeeId(address account);getEmployee(uint256 employeeId);setEmployeeSalary(uint256 employeeId, uint256 yearlyUSDSalary);removeEmployee(uint256 employeeId)"
pipermerriam/populus,tests/fixtures/ImportTestB.sol,ImportTestB()
axic/tinyoracle,contracts/sample-client.sol,"__tinyOracleCallback(uint256 id, bytes _response);query();query(bytes query)"
bitsanity/gungadin,ethereum/votes/MembershipMock.sol,"approvals( address who );isMember( address who );setReturn( bool mbr, bool approved )"
EMAXio/cosigner,cosigner-ethereum-token-storage/SolidityContracts/V4/dappsys/ds-note/note.sol,""
Braveno/cosigner,cosigner-ethereum-token-storage/SolidityContracts/V4/dappsys/ds-note/note.sol,""
EMAXio/heimdal,cosigner-ethereum-token-storage/SolidityContracts/V4/dappsys/ds-note/note.sol,""
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/contracts/LimitBalance.sol,LimitBalance(uint256 _limit)
pash7ka/zeppelin-solidity,contracts/LimitBalance.sol,LimitBalance(uint256 _limit)
iswarm/p2pCny,contracts/LimitBalance.sol,LimitBalance(uint256 _limit)
adklempner/solidity-license,contracts/zeppelin/LimitBalance.sol,LimitBalance(uint256 _limit)
readevalprint/aragon-core,contracts/zeppelin/LimitBalance.sol,LimitBalance(uint256 _limit)
pz7/liquet,node_modules/zeppelin-solidity/contracts/LimitBalance.sol,LimitBalance(uint256 _limit)
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/LimitBalance.sol,LimitBalance(uint256 _limit)
dmx374/zeppelin-solidity,contracts/LimitBalance.sol,LimitBalance(uint256 _limit)
cashpokerpro-dev/cash-smartcontracts,contracts/LimitBalance.sol,LimitBalance(uint256 _limit)
cinderblockchain/cindertoken,contracts/LimitBalance.sol,LimitBalance(uint256 _limit)
adamdossa/ProfitSharingContract,installed_contracts/zeppelin/contracts/LimitBalance.sol,LimitBalance(uint256 _limit)
boisde/Greed_Island,party/contracts/protocol-viewers/StreamingFeeModuleViewer.sol,""
iam-dev/ERC23,installed_contracts/zeppelin-solidity/test/mocks/DetailedERC20Mock.sol,""
DRI-project/RICO,contracts/EIP20Token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
cryptape/cita,scripts/contracts/src/lib/ContractCheck.sol,isContract(address _target)
GovernX/governx-contracts,src/contracts/OwnedController.sol,"OwnedController(address _proxy, address _owner);canPropose(address _sender, uint256 _proposalID);canVote(address _sender, uint256 _proposalID);canExecute(address _sender, uint256 _proposalID);votingWeightOf(address _sender, uint256 _proposalID, uint256 _index, uint256 _data)"
Getline-Network/getline,dapp/contracts/loans/InvestorLedger.sol,"legalTransition(State from, State to);newState(Ledger storage ledger, State next);amountInvested(Ledger storage ledger, address investor);paybackRequired(Ledger storage ledger);calculateInterest(Ledger storage ledger, uint256 investment);currentState(Ledger storage ledger);collateralCollectionProcess(Ledger storage ledger, address caller);fundraisingProcess(Ledger storage ledger, address caller);paybackProcess(Ledger storage ledger, address caller);canWithdrawLoanToken(Ledger storage ledger, address caller);canWithdrawCollateralToken(Ledger storage ledger, address caller);withdraw(Ledger storage ledger, address caller)"
orbro/eth-enablers,Doubler.sol,Doubler();enter();collectFees();setOwner(address _owner)
Superdao-DAO/Superdao-Seed-Stage1,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
adridadou/eth-propeller-core,src/test/resources/contractConstructor.sol,""
qjflores/singularity,contracts/Course.sol,"Course(string _name, string _description ,uint256 _rate);updateRate(uint256 _rate);getStudentCount();registerStudent(address _userAddress)"
SmartChainX/ChainBlockchain,Contracts/Base/SimpleCrowdsale.sol,"setTokenAllowance(address _token, uint _allowance);getOrderHash(address[5] orderAddresses, uint[6] orderValues);min(uint a, uint b)"
Ethbet/ethbet,contracts/SafeMath.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b)"
Ethbet/ethbet,alpha/contracts/SafeMath.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b)"
adklempner/solidity-license,contracts/zeppelin/ownership/HasNoTokens.sol,"tokenFallback(address from_, uint256 value_, bytes data_);reclaimToken(address tokenAddr)"
adamdossa/ProfitSharingContract,installed_contracts/zeppelin/contracts/ownership/HasNoTokens.sol,"tokenFallback(address from_, uint256 value_, bytes data_);reclaimToken(address tokenAddr)"
erkmos/moeda,contracts/vendored/openzeppelin/ownership/HasNoTokens.sol,"tokenFallback(address from_, uint256 value_, bytes data_);reclaimToken(address tokenAddr)"
silasdavis/eris-db,tests/jobs_fixtures/app27-multiple_imports_and_multiple_constructor_different_factory_types/contracts/GSFactory.sol,"createSingle(uint initialValueSingle);getLastSingle();createMulti(uint initialValueFirst, uint initialValueSecond);getLastMulti()"
silasdavis/burrow,tests/jobs_fixtures/app27-multiple_imports_and_multiple_constructor_different_factory_types/contracts/GSFactory.sol,"createSingle(uint initialValueSingle);getLastSingle();createMulti(uint initialValueFirst, uint initialValueSecond);getLastMulti()"
eris-ltd/eris-db,tests/jobs_fixtures/app27-multiple_imports_and_multiple_constructor_different_factory_types/contracts/GSFactory.sol,"createSingle(uint initialValueSingle);getLastSingle();createMulti(uint initialValueFirst, uint initialValueSecond);getLastMulti()"
aragon/aragon-network-token,packages/sale/installed_contracts/zeppelin/contracts/token/StandardToken.sol,"transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);balanceOf(address _owner);approve(address _spender, uint _value);allowance(address _owner, address _spender)"
pooleja/SolidityPlayground,contracts/zeppelin/token/StandardToken.sol,"transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);balanceOf(address _owner);approve(address _spender, uint _value);allowance(address _owner, address _spender)"
maraoz/zeppelin-solidity,contracts/token/StandardToken.sol,"transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);balanceOf(address _owner);approve(address _spender, uint _value);allowance(address _owner, address _spender)"
miller46/digital-identity,contracts/PersonaRegistry.sol,"setClaim(address subject, bytes32 key, bytes value);setSelfClaim(bytes32 key, bytes value);getClaim(address issuer, address subject, bytes32 key);removeClaim(address issuer, address subject, bytes32 key)"
maciekf/etherchannels,etherchannels/contract.sol,"MicropaymentsNetwork();isAvailable(uint _cid);assertAvailable(uint _cid);assertOnlyFrom(uint _cid);assertOnlyTo(uint _cid);assertOnlyParticipants(uint _cid);assertAtStage(uint _cid, ChannelStage _stage);assertAtOneOfStages(uint _cid, ChannelStage _stage1, ChannelStage _stage2);assertReadyToClose(uint _cid);assertYoungerBalance(uint _cid, uint _balanceTimestamp);assertMatchingBalance(uint _cid, uint _balanceTimestamp);assertSaneBalance(uint _cid, uint _fromBalance, uint _toBalance);assertStillValid(uint _timeout);assertSaneHTLC(uint _cid, int _fromToDelta);assertHash(bytes32 _data, bytes32 _hash);assertNotSpent(uint _cid, int _fromToDelta, bytes32 _data, bytes32 _hash);getHTLCInvalidationTimeoutExtension(uint _cid, int _fromToDelta, bytes32 _data, bytes32 _hash);getHTLCSpendingData(uint _cid, int _fromToDelta, bytes32 _hash);getHTLCSpendingHash(int _fromToDelta, bytes32 _hash);getHash(bytes32 _data);getTimestampInSeconds();createChannel(uint _cid, address _from, address _to);getStage(uint _cid);getFrom(uint _cid);getFromBalance(uint _cid);getTo(uint _cid);getToBalance(uint _cid);getBalanceTimestamp(uint _cid);getClosingBlockNumber(uint _cid);openChannel(uint _cid);confirmChannel(uint _cid);requestClosingChannel(uint _cid);closeChannel(uint _cid);withdrawFrom(uint _cid);withdrawTo(uint _cid)"
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/contracts/lifecycle/Migrations.sol,setCompleted(uint256 completed);upgrade(address newAddress)
pash7ka/zeppelin-solidity,contracts/lifecycle/Migrations.sol,setCompleted(uint256 completed);upgrade(address newAddress)
readevalprint/aragon-core,contracts/zeppelin/lifecycle/Migrations.sol,setCompleted(uint256 completed);upgrade(address newAddress)
pz7/liquet,node_modules/zeppelin-solidity/contracts/lifecycle/Migrations.sol,setCompleted(uint256 completed);upgrade(address newAddress)
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/lifecycle/Migrations.sol,setCompleted(uint256 completed);upgrade(address newAddress)
dmx374/zeppelin-solidity,contracts/lifecycle/Migrations.sol,setCompleted(uint256 completed);upgrade(address newAddress)
cashpokerpro-dev/cash-smartcontracts,contracts/lifecycle/Migrations.sol,setCompleted(uint256 completed);upgrade(address newAddress)
cinderblockchain/cindertoken,contracts/lifecycle/Migrations.sol,setCompleted(uint256 completed);upgrade(address newAddress)
jscottmiller/patronage,contracts/SimpleCustodian.sol,"SimpleCustodian();give(address owner, uint amount);getAvailableBalance(address owner);getReservedBalance(address owner);reserve(address owner, uint amount);unreserve(address owner, uint amount);transfer(address oldOwner, address newOwner, uint shares)"
BeBlockTech/Anemoi,Master/contracts/ANMInflationVesting.sol,"balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value);safeAdd(uint256 x, uint256 y);safeSubtract(uint256 x, uint256 y);safeMult(uint256 x, uint256 y);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);balanceOf(address _owner);approve(address _spender, uint _value);allowance(address _owner, address _spender);Ownable();transferOwnership(address newOwner);pause();unpause();IndorseToken();transfer(address _to, uint _value);approve(address _spender, uint _value);ANMInflationVesting();unlock()"
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/token/ERC20/CappedToken.sol,""
benkico/pre-ico,AbstractBenkiToken.sol,"issueTokens(address _for, uint tokenCount);changeEmissionContractAddress(address newAddress)"
drgorb/insurechain,contracts/Epam.sol,"getPrice(string manufacturer, string productType, uint price);Epam();updateCalculator(address contractAddress);requestWarranty(string serial, address customer, uint endDate, uint price);claimWarranty(string serial, uint amount, string claimType);isWarrantyValid(string serial);getEndDate(string serial);getCustomer(string serial);getClaimCount();getClaim(uint id);getRequestCount();getProduct(string serial);getRequest(uint id)"
drgorb/hackathon-2016-11,contracts/Epam.sol,"getPrice(string manufacturer, string productType, uint price);Epam();updateCalculator(address contractAddress);requestWarranty(string serial, address customer, uint endDate, uint price);claimWarranty(string serial, uint amount, string claimType);isWarrantyValid(string serial);getEndDate(string serial);getCustomer(string serial);getClaimCount();getClaim(uint id);getRequestCount();getProduct(string serial);getRequest(uint id)"
mesh-market/mesh-market.github.io,mesh-market/node_modules/embark/test/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
DavdRoman/Payroll,contracts/Exchange/USDExchange.sol,"USDExchange(address usdExchangeRateOracle);setExchangeRateOracle(address newOracle);exchange(address token, uint amount, uint rate);getAvailableTokens();setExchangeRate(address token, uint exchangeRate)"
bkrem/educhain,chain/contracts/Task.sol,associateWithFile(bytes32 fileHash);markComplete(bytes32 _status)
bdbi/ERC20-simple-marketplace,contracts/marketplace/SimpleMarketplace.sol,"createNewTrade(address _token, uint256 _amount, uint256 _price);withdraw();tokenRecovery(address _token, address _recipient, uint256 _amount);tokenRecoveryFromTrade(address _trade, address _token, address _recipient, uint256 _amount)"
ineiti/cothorities,bevm/testdata/LoanContract/LoanContract.sol,""
DeDiS/cothority,bevm/testdata/LoanContract/LoanContract.sol,""
mrsmkl/eth-rock-paper-scissors,rock.sol,"RockPaperScissors();collect();cleanLog();getLog();poll(uint32 i);start(uint256 commit);cancel(uint256 commit);reply(uint256 commit, uint8 rep);timeout(uint256 commit);show(uint256 commit, uint256 value)"
Getline-Network/getline,dapp/contracts/tokens/IToken.sol,""
RealEstateAssetLedger/real_contract,contracts/mocks/REALMock.sol,REALMock(address _tokenFactory);getBlockNumber();setMockedBlockNumber(uint _b)
jgm-learn/SmartContract,User.sol,"User(address id_addr, address quo_addr, address user_list_addr);getReceiptAmount(uint receipt_id);getAvailableAmount(uint receipt_id);freeze(uint receipt_id, uint amount);listRequire(string user_id, uint receipt_id, uint price, uint quo_qty);updateListReq(uint quo_id, uint deal_qty);delListReq(string user_id, uint quo_id, uint deal_qty);agreeNeg(string user_buy_id, uint neg_id)"
web3j/web3j,contracts/src/main/resources/eip20/solidity/ERC20.sol,"name();symbol();decimals();totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
kr8os/token-sale-contracts,contracts/Owned.sol,Owned()
euri10/populus,populus/migrations/RegistrarV4.sol,"Registrar();transferOwner(address newOwner);setParent(address parentAddress);set(string key, bytes32 value);get(string key);exists(string key);setAddress(string key, address value);getAddress(string key);setUInt(string key, uint value);getUInt(string key);setInt(string key, int value);getInt(string key);setBool(string key, bool value);getBool(string key);setString(string key, string value);getString(string key)"
lepsalex/Mansplaining,Smart Contracts/contracts/Mansplaining.sol,createGame(uint8 initPoints);endGame(address instance)
papyrusglobal/smartcontracts,contracts/registry/DSPRegistry.sol,"register(address owner, address root, string name, string website);update(uint64 dspId, address owner, address root, string name, string website);registerValidator(uint64 dspId, address validator);registerEndpoint(uint64 dspId, string endpoint);approveEndpoint(uint64 dspId, uint64 endpointId);removeEndpoint(uint64 dspId, uint64 endpointId);findByOwnerAddress(address verifier);getOwnerAddress(uint64 dspId);getPaymentsRootAddress(uint64 dspId);getName(uint64 dspId);getWebsite(uint64 dspId);getValidatorCount(uint64 dspId);getValidator(uint64 dspId, uint64 validatorId);getEndpointCount(uint64 dspId);getEndpoint(uint64 dspId, uint64 endpointId);isEndpointApproved(uint64 dspId, uint64 endpointId);isEndpointRemoved(uint64 dspId, uint64 endpointId)"
smartexio/smartex-contracts,SmartexInvoice.sol,"SmartexInvoice(address target, address owner);refund(address recipient);sweep(address _to);advSend(address _to, uint _value, bytes _data)"
etherisc/flightDelay,test-available/_Test_Oraclize.sol,"test_callIt();__callback(bytes32 _queryId, string _result, bytes _proof)"
exchange-prototype/mozi,contract/smartcontract.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);approve(address _spender, uint _value);allowance(address _owner, address _spender)"
youvegoteth/youvegoteth.github.io,contracts/contracts/StrawManToken.sol,"mint(address addy, uint256 _value)"
Spreadway/core,eth/token.sol,"transfer(address _to, uint256 _value)"
kowala-tech/kUSD,client/contracts/truffle/contracts/oracle/Consensus.sol,isSuperNode(address identity)
jvah/spicehours,contracts/SpicePayroll.sol,"SpicePayroll(address _members);addMarking(bytes32 _info, bytes32 _description, int _duration);processMarkings(address _calculator, uint _maxDuration);modifyMarking(bytes32 _info, uint _duration);lock();unlock();processed();duration(bytes32 _info);payout(bytes32 _info);entryInfo(uint _index);entryCount()"
TrustyChain/ibhbr,project/contracts/CommunityContract.sol,"createComunity( bytes32 _name, bytes32 _description );addMember(uint communityId, address _member, bytes32 _name);getMemberName(uint communityId, address _member)"
Juzix/BlockChain-Demo,contracts/sysbase/SystemTest.sol,SystemTest();count();resetCounter();getCounter()
Neufund/Contracts,contracts/neubank/IClientRegistery.sol,isClient(address)
eris-ltd/eris-db,execution/solidity/strange_loop.sol,UpsieDownsie()
aragon/aragon-network-token,packages/sale/installed_contracts/zeppelin/contracts/token/VestedToken.sol,"transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);revokeTokenGrant(address _holder, uint _grantId);tokenGrantsCount(address _holder);tokenGrant(address _holder, uint _grantId);vestedTokens(TokenGrant grant, uint64 time);nonVestedTokens(TokenGrant grant, uint64 time);lastTokenIsTransferableDate(address holder);transferableTokens(address holder, uint64 time)"
pooleja/SolidityPlayground,contracts/zeppelin/token/VestedToken.sol,"transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);revokeTokenGrant(address _holder, uint _grantId);tokenGrantsCount(address _holder);tokenGrant(address _holder, uint _grantId);vestedTokens(TokenGrant grant, uint64 time);nonVestedTokens(TokenGrant grant, uint64 time);lastTokenIsTransferableDate(address holder);transferableTokens(address holder, uint64 time)"
maraoz/zeppelin-solidity,contracts/token/VestedToken.sol,"transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);revokeTokenGrant(address _holder, uint _grantId);tokenGrantsCount(address _holder);tokenGrant(address _holder, uint _grantId);vestedTokens(TokenGrant grant, uint64 time);nonVestedTokens(TokenGrant grant, uint64 time);lastTokenIsTransferableDate(address holder);transferableTokens(address holder, uint64 time)"
maxxflyer/FLOOD,Dsocial.sol,"receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);Companion();acceptTOS(address a,bool b);ControllerManager();getController(uint contr);addController(address a,bool b);etherscapeCommunity(DSocial ds);subscribeIndividual(bool b);miniDapp(DSocial ds);addAddressListItem(uint index,address addr2);setaddAddressListItemSet(bool b);Dsocial();init();addInfo(address d,address addr,uint index,string info);addQuantity(address d,address addr,uint index,uint quant);addCheck(address d,address addr,uint index,bool check);addAddress(address d,address addr,uint index,address addr2);addInfoListItem(bool social,address d,address addr,uint index,string info);addBoolListItem(bool social,address d,address addr,uint index,bool check);addAddressListItem(bool social,address d,address addr,uint index,address addr2);addQuantityListItem(bool social,address d,address addr,uint index,uint u);readInfo(address addr,uint index);readQuantity(address addr,uint index);readCheck(address addr,uint index);readAddress(address addr,uint index);readInfoList(address addr,uint index,uint item);readQuantityList(address addr,uint index,uint item);readCheckList(address addr,uint index,uint item);readAddressList(address addr,uint index,uint item);allow(address a,bool b);readPermissions(address a,uint u)"
MarketProject/MarketProtocol,contracts/mpx/MarketContractFactoryMPX.sol,setRegistryAddress(address registryAddress);setOracleHubAddress(address oracleHubAddress)
eodgooch/cryptofund,contracts/Crowdfund.sol,"newCampaign(address beneficiary, uint fundingGoal, uint endDate);contribute(uint campaignID);payout(uint campaignID, address admin);deleteCampaign(Campaign c)"
iudex/iudex,contracts/storage.sol,"setOwner(address addr);Storage();setLookup(address addr);bindEthereumAddress(address addr, bytes32 id);unbindEthereumAddress(address addr, bytes32 id);register();linkAddress(address addr);unlinkAddress(address addr);linkAccount(uint8 accountProvider, string userId, string proofLocation);updateAccount(uint8 accountProvider, bytes32 id, bool result, bytes32 ipfsProof);getScore(uint8 accountProvider, bytes32 id);updateScore(uint8 accountProvider, bytes32 id, uint24 score);refreshScore(uint8 accountProvider, bytes32 id)"
Nethereum/Nethereum,src/Nethereum.ENS/oldcontracts/DNSResolver.sol,"DNSResolver();setDnsrr(bytes32 node, bytes data);dnsrr(bytes32 node);supportsInterface(bytes4 interfaceID)"
Nethereum/Nethereum,src/Nethereum.Uport/contracts/UportRegistry.sol,"UportRegistry(address _previousPublishedVersion);set(bytes32 registrationIdentifier, address subject, bytes32 value);get(bytes32 registrationIdentifier, address issuer, address subject)"
careerxon/code,Ownable.sol,Ownable();transferOwnership(address newOwner)
michinbear/solidity,test/compilationTests/zeppelin/payment/PullPayment.sol,"asyncSend(address dest, uint256 amount);withdrawPayments()"
elementrem/solidity,test/compilationTests/zeppelin/payment/PullPayment.sol,"asyncSend(address dest, uint256 amount);withdrawPayments()"
rfikki/demo-solidity,transfer.sol,"send(address receiver, uint amount)"
dltdojo/courses,eth-hlf-201708/coin.sol,"Coin();mint(address receiver, uint amount);send(address receiver, uint amount)"
boisde/Greed_Island,party/contracts-crued/interfaces/ISetToken.sol,"addComponent(address _component);removeComponent(address _component);editDefaultPositionUnit(address _component, int256 _realUnit);addExternalPositionModule(address _component, address _positionModule);removeExternalPositionModule(address _component, address _positionModule);editExternalPositionUnit(address _component, address _positionModule, int256 _realUnit);editExternalPositionData(address _component, address _positionModule, bytes calldata _data);invoke(address _target, uint256 _value, bytes calldata _data);editPositionMultiplier(int256 _newMultiplier);mint(address _account, uint256 _quantity);burn(address _account, uint256 _quantity);lock();unlock();addModule(address _module);removeModule(address _module);initializeModule();setManager(address _manager);manager();moduleStates(address _module);getModules();getDefaultPositionRealUnit(address _component);getExternalPositionRealUnit(address _component, address _positionModule);getComponents();getExternalPositionModules(address _component);getExternalPositionData(address _component, address _positionModule);isExternalPositionModule(address _component, address _module);isComponent(address _component);positionMultiplier();getPositions();getTotalComponentRealUnits(address _component);isInitializedModule(address _module);isPendingModule(address _module);isLocked()"
asseth/dao1901,customModules/protocol/contracts/Owned.sol,changeOwner(address _newOwner)
mycspring/ClaveChain,Chain/Lottery/Lottery.sol,Lottery(ILotteryClaveChain _lotteryClaveChain);Buy(uint64 number);Pay();GetNumber();SetNumber(uint64 number)
daostack/daostack,contracts/schemes/ExternalLocking4Reputation.sol,"claim(address _beneficiary, bytes32 _agreementHash);register(bytes32 _agreementHash)"
ajagesser/contracts,contracts/Stempas.sol,"requestStempas(bytes32 signedRequest, address target)"
orbro/eth-enablers,ethereum-examples-master/solidity/YoutubeViews.sol,"YoutubeViews();__callback(bytes32 myid, string result);update(uint delay)"
vechain-team/crowdsale-contracts,contracts/Exchange.sol,"Exchange();withdrawEther(address _address,uint256 _amount);withdrawToken(address _address, uint256 _amount);quotaUsed(address _account);setRate(uint256 _rate);setTokenQuota(uint256 _quota);setEtherQuota(uint256 _quota);setTokenToEtherAllowed(bool _allowed);setEtherToTokenAllowed(bool _allowed);receiveApproval(address _from, uint256 _value, address /*_tokenContract*/, bytes /*_extraData*/);exchangeTokenToEther(address _from, uint256 _tokenAmount);exchangeEtherToToken();isContract(address _addr)"
Dicoiner/irianna-solidity,contracts/token/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
gmo-blockchain/solidity,contracts/VersionEvent.sol,""
QTBlockchain/SolidityNWeb3,SmartContracts/March2018/StringDemo/contracts/TupleDemo.sol,TupleDemo();getNameAndAge()
GX-Coin/SmartContract,GxOrderListInterface.sol,"get(uint80 orderId);getPricePerCoin(uint80 orderId);remove(uint80 orderId);move(uint80 orderId, uint80 previousOrderId);consumeNextOrderId();setNextOrderId(uint80 nextOrderId)"
alice-si/contracts,contracts/alice/DonationWallet.sol,"donate(uint _amount, string _projectName);refund(ERC20 _token, uint _amount);balance(ERC20 _token)"
redsquirrel/augur-core,src/legacy_reputation/Pausable.sol,pause();unpause()
adklempner/solidity-license,contracts/LicensingToken.sol,LicensingToken();getTokens()
y12studio/y12eth,ybc2016/ybc2016.sol,"query(uint _timestamp, string _datasource, string _arg);query_withGasLimit(uint _timestamp, string _datasource, string _arg, uint _gaslimit);getPrice(string _datasource);getPrice(string _datasource, uint gaslimit);useCoupon(string _coupon);setProofType(byte _proofType);getAddress();oraclize_setNetwork(uint8 networkID);oraclize_query(string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2, uint gaslimit);oraclize_cbAddress();oraclize_setProof(byte proofP);parseAddr(string _a);strCompare(string _a, string _b);indexOf(string _haystack, string _needle);strConcat(string _a, string _b, string _c, string _d, string _e);strConcat(string _a, string _b, string _c, string _d);strConcat(string _a, string _b, string _c);strConcat(string _a, string _b);parseInt(string _a);parseInt(string _a, uint _b);YBananaCoin();__callback(bytes32 myid, string result, bytes proof);update(uint delay);kill()"
web3j/web3j-maven-plugin,src/test/resources/issue-17/Issue17relative2.sol,""
ConsenSys/dapp-store-contracts,contracts/ModelCoordinator.sol,"set_db(EternalDB _db);replace(address replacement);ModelCoordinator();register(uint name, AbstractModel model, EternalDB db)"
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs0.sol,"addThing(bytes32 description, bytes32 url, bytes32 filehash, bytes32 filename);getDesc();getUrl();getHash();getName()"
eris-ltd/eris,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs0.sol,"addThing(bytes32 description, bytes32 url, bytes32 filehash, bytes32 filename);getDesc();getUrl();getHash();getName()"
monax/monax,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs0.sol,"addThing(bytes32 description, bytes32 url, bytes32 filehash, bytes32 filename);getDesc();getUrl();getHash();getName()"
eris-ltd/eris-cli,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs0.sol,"addThing(bytes32 description, bytes32 url, bytes32 filehash, bytes32 filename);getDesc();getUrl();getHash();getName()"
monax/cli,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs0.sol,"addThing(bytes32 description, bytes32 url, bytes32 filehash, bytes32 filename);getDesc();getUrl();getHash();getName()"
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs0.sol,"addThing(bytes32 description, bytes32 url, bytes32 filehash, bytes32 filename);getDesc();getUrl();getHash();getName()"
silasdavis/eris-db,tests/jobs_fixtures/app27-multiple_imports_and_multiple_constructor_different_factory_types/contracts/GSSingle.sol,set(uint x);get()
silasdavis/burrow,tests/jobs_fixtures/app27-multiple_imports_and_multiple_constructor_different_factory_types/contracts/GSSingle.sol,set(uint x);get()
eris-ltd/eris-db,tests/jobs_fixtures/app27-multiple_imports_and_multiple_constructor_different_factory_types/contracts/GSSingle.sol,set(uint x);get()
ResourceHog/meteor-dapp-wallet,wallet.sol,"multiowned(address[] _owners, uint _required);revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);reorganizeOwners();clearPending();daylimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today();changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);Wallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);clearPending()"
vaporry/meteor-dapp-wallet,wallet.sol,"multiowned(address[] _owners, uint _required);revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);reorganizeOwners();clearPending();daylimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today();changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);Wallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);clearPending()"
Kottackal-Business/JacobNinan,wallet.sol,"multiowned(address[] _owners, uint _required);revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);reorganizeOwners();clearPending();daylimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today();changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);Wallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);clearPending()"
xiaopow/meteor-dapp-wallet,wallet.sol,"multiowned(address[] _owners, uint _required);revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);reorganizeOwners();clearPending();daylimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today();changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);Wallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);clearPending()"
destenson/ethereum--meteor-dapp-wallet,Wallet.sol,"multiowned(address[] _owners, uint _required);revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);reorganizeOwners();clearPending();daylimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today();changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);Wallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);clearPending()"
rllola/meteor-dapp-wallet,wallet.sol,"multiowned(address[] _owners, uint _required);revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);reorganizeOwners();clearPending();daylimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today();changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);Wallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);clearPending()"
RealEstateAssetLedger/real_contract,contracts/mocks/REALPlaceHolderMock.sol,"REALPlaceHolderMock(address _owner, address _real, address _contribution);getTime();setMockedTime(uint _t)"
montyly/manticore,tests/ethereum/contracts/consensys_benchmark/integer_overflow_storageinvariant.sol,withdrawAll();deposit()
trailofbits/manticore,tests/ethereum_bench/consensys_benchmark/integer_overflow_storageinvariant.sol,withdrawAll();deposit()
ineiti/cothorities,bevm/testdata/ModifiedToken/ModifiedToken.sol,"send(address _from, address _to, uint64 _amount);transfer(address _from, address _to, uint64 _value);getBalance(address account)"
DeDiS/cothority,bevm/testdata/ModifiedToken/ModifiedToken.sol,"send(address _from, address _to, uint64 _amount);transfer(address _from, address _to, uint64 _value);getBalance(address account)"
victorsintnicolaas/RVR,contracts/RVRCoin.sol,"RVRCoin();defaultWallet(address lawyer);deductCoin(address lawyer, uint amount);getBalance(address lawyer);getTotalBalance()"
thousandetherhomepage/ketherhomepage,contracts/KetherHomepage.sol,"KetherHomepage(address _contractOwner, address _withdrawWallet);getAdsLength();buy(uint _x, uint _y, uint _width, uint _height);publish(uint _idx, string _link, string _image, string _title, bool _NSFW);setAdOwner(uint _idx, address _newOwner);forceNSFW(uint _idx, bool _NSFW);withdraw()"
manuhalo/iothackffm,contracts/PePaDe.sol,"PePaDe();selfDestruct();getData();getBalance();deliverCandidate(uint _proposedFee, uint _offerExpiration);selectDeliverer(uint index);confirmCollection();confirmReception();withdrawPayment();notifyTempBreach(int temperature);garbageCollect()"
bitcoinmeetups/dapp-bin,config/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
chriseth/dapp-bin,config/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
shahankhatch/dapp-bin,config/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
LianaHus/dapp-bin,config/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
RepublicMaster/dapp-bin,config/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
frozeman/ethereum-smart-contracts,config/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
ethereum/dapp-bin,config/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
vaporry/dapp-bin,config/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
centaurustech/WeiFund,WeiFund.sol,"onNewCampaign(uint cid, address addr, uint goal);onContribute(uint cid, address addr, uint amount);onRefund(uint cid, address addr, uint amount);onPayout(uint cid, uint amount);contribute(uint _cid, address _addr);refund(uint _cid);payout(uint _cid);userCampaigns(address _addr, uint _u_cid)"
daostack/daostack,contracts/schemes/LockingToken4Reputation.sol,"release(address _beneficiary, bytes32 _lockingId)"
LOOMIA/loomia,ethereum/contracts/TokenChangerBNT.sol,sellTile(uint quantity)
zetherz/eth-match,test/helpers/FinalizableCrowdsaleImpl.sol,""
redsquirrel/augur-core,src/trading/ClaimProceeds.sol,"claimProceeds(Market _market);divideUpWinnings(Market _market, ReportingToken _winningReportingToken, uint8 _outcome, uint256 _numberOfShares);calculateProceeds(Market _market, ReportingToken _winningReportingToken, uint8 _outcome, uint256 _numberOfShares);calculateReportingFee(Market _market, uint256 _amount);calculateMarketCreatorFee(Market _market, uint256 _amount)"
infwonder/b9lab-course-splitsend,contracts/SplitSend.sol,"SplitSend(address toWhom1, address toWhom2);sendWei();killMe()"
dacplayproject/play-dapp,src/MintAuthority.sol,MintAuthority(address _miner)
ageyev/Solidity.Examples,Vulnerable.sol,"initialization();changeTokenHolder(address _oldHolder, address _newHolder);transferTokens(address _from, address _to, uint _value);transfer(address _to, uint _value)"
ElcoinCurrency/ElcoinContract,contracts/ElcoinDb.sol,"ElcoinDb(address pCaller);getOwner();getCaller();setCaller(address pCaller);setOwner(address pOwner);getBalance(address addr);deposit(address addr, uint amount, bytes32 hash, uint time);withdraw(address addr, uint amount, bytes32 hash, uint time)"
zeroqn/aa-apply,contracts/EmployeeServLibrary.sol,"isEmployee(address _db, address account);getEmployeeCount(address db);getEmployeeId(address db, address account);getEmployee(address _db, uint256 employeeId);removeEmployee(address _db, uint256 employeeId);nextId(address db)"
FiatCentralBank/fiatcoin,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
disruptivewidgets/pay2play-react,src/smart-contract/ERC20.sol,"safeAdd(uint a, uint b);safeSub(uint a, uint b);safeMul(uint a, uint b);safeDiv(uint a, uint b);totalSupply();balanceOf(address tokenOwner);allowance(address tokenOwner, address spender);transfer(address to, uint tokens);approve(address spender, uint tokens);transferFrom(address from, address to, uint tokens);receiveApproval(address from, uint256 tokens, address token, bytes data);TokenDeed();transferOwnership(address _newOwner);acceptOwnership();PlayToken();totalSupply();balanceOf(address tokenOwner);transfer(address to, uint tokens);approve(address spender, uint tokens);transferFrom(address from, address to, uint tokens);allowance(address tokenOwner, address spender);approveAndCall(address spender, uint tokens, bytes data)"
RyuuGan/sol-merger,test/contracts/ReservedWordsInString.sol,"mintSupply(address src20, address swmAccount, uint256 swmValue, uint256 src20Value);incStake(address src20, address swmAccount, uint256 swmValue)"
chenlian2015/eosEthMarketSample,contracts/ThirdPartyVoter.sol,ThirdPartyVoter();testEqual();sendOnlyHash(string seed);sendSeedAndHash(string seed)
crypto-coder/Tokens,Token_Contracts/contracts/TimeDecayingTokenBoundaryRange.sol,calculateRangeLength();calculateCurrentDistanceInRange(address _environment)
globaljobcoin/GJC,contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.5/stringBytesLength.sol,length(string memory a)
SerCeMan/intellij-solidity,src/test/resources/fixtures/parser/assignments.sol,g()
AndriianChestnykh/DebtManager,contracts/Migration.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
AlphaDinoRC/rockchain,contracts/PullPayment.sol,"asyncSend(address dest, uint256 amount);withdrawPayments()"
bokkypoobah/TokenTrader,contracts/TestERC20Token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _amount);allowance(address _owner, address _spender);withdrawEthers(uint256 ethers)"
mattdf/PayToMany,paytomany-paranoid.sol,"PayXToList(address[] list, uint value);PayValsToList(address[] list, uint[] values)"
Majoolr/ethereum-libraries,TokenLib/truffle/contracts/TokenLibTestSpender.sol,"TokenLibTestSpender(address testContract);spend(address owner, uint256 amount);changeOwnerBack(address newOwner)"
SilentCicero/wafr,src/tests/solidityTests/campaign/tests/MyTestFramework.sol,"logs(bytes b);assert(bool what, bytes error);fail(bytes error);log(bytes msg);log(bytes msg, uint i)"
DRI-project/RICO,contracts/ContractManager.sol,ContractManager()
crypto-coder/Tokens,Token_Contracts/contracts/TimeDecayingToken.sol,""
jeje/solidity-code-quality,core/src/test/antlr/ReEntrancyContract.sol,withdraw()
aragon/aragon-core,contracts/test/mocks/ExecutionTarget.sol,execute();failExecute();setCounter(uint x)
chfast/cpp-ethereum,test/performance/mix.sol,"G(uint64[16] v, uint a, uint b, uint c, uint d, uint64 x, uint64 y);mix()"
justmake/smart_contract,interfaces/ITokenHolder.sol,"withdrawTokens(IERC20Token _token, address _to, uint256 _amount)"
WeiLend/WeiLend,NameReg.sol,register(bytes32 name);unregister()
centaurustech/WeiFund,NameReg.sol,register(bytes32 name);unregister()
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app09-basic_solidity_imports/contracts/storage.sol,test()
eris-ltd/eris,tests/jobs_fixtures/app09-basic_solidity_imports/contracts/storage.sol,test()
monax/monax,tests/jobs_fixtures/app09-basic_solidity_imports/contracts/storage.sol,test()
eris-ltd/eris-cli,tests/jobs_fixtures/app09-basic_solidity_imports/contracts/storage.sol,test()
monax/cli,tests/jobs_fixtures/app09-basic_solidity_imports/contracts/storage.sol,test()
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app09-basic_solidity_imports/contracts/storage.sol,test()
GX-Coin/SmartContract,GxUsesCoinTotals.sol,setCoinTotalsContract(address coinTotalsAddress)
SafeContracts/TREX-token,MistWallet.sol,"multiowned(address[] _owners, uint _required);revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);reorganizeOwners();clearPending();daylimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today();changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);Wallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);clearPending()"
wilmveel/praetorian-contracts,contracts/Factory.sol,"getParties();createParty();createPasswordChallenge(bytes20 response, bytes32 salt);findAccess(address wallet)"
montyly/manticore,tests/ethereum/contracts/678.sol,f()
trailofbits/manticore,tests/ethereum/contracts/678.sol,f()
qjflores/singularity,contracts/Shelter.sol,"Shelter(string _name, string _description)"
airalab/DAO-IPCI,contracts/creator/CreatorCommitment.sol,"create(address _operator, address _token, address _holder);version();abi()"
ryepdx/welcometothejungle,src/contracts/anotherTest.sol,shouldFail();shouldPass()
GovernX/governx-contracts,src/contracts/utils/StandardToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
daostack/daostack,contracts/utils/DAOTracker.sol,"track(Avatar _avatar, Controller _controller, string memory _arcVersion);blacklist(Avatar _avatar, string memory _explanationHash);reset(Avatar _avatar, string memory _explanationHash)"
GX-Coin/SmartContract,GxManagedWallet.sol,"GxManagedWallet(address deploymentAdminsAddress);pay(address _recipient, uint _amount)"
raineorshine/solgraph,test/in/Internal.sol,Foo()
web3j/web3j,codegen/src/test/resources/solidity/misc/Misc.sol,double(uint a)
WeiFund/WeiFund,contracts/WeiFund.sol,"newCampaign(uint _campaignID, address _owner, uint _fundingGoal);contribute(uint _campaignID, address _contributor, address _beneficiary, uint _amountContributed);refund(uint _campaignID, address _contributor, uint _amountRefunded);payout(uint _campaignID, uint _amountPaid);newCampaign(string _name, address _beneficiary, uint _fundingGoal, uint _expiry, address _config);contribute(uint _campaignID, address _beneficiary);refund(uint _campaignID, uint _contribution);payout(uint _campaignID);operatorCampaignID(address _operator, uint _campaignIndex);totalCampaignsBy(address _operator);totalContributionsBy(uint _campaignID, address _contributor);totalCampaigns();contributionAt(uint _campaignID, uint _contributionID);createdAt(uint _campaignID);contributionID(uint _campaignID, address _contributor, uint _contributionIndex);ownerOf(uint _campaignID);beneficiaryOf(uint _campaignID);configOf(uint _campaignID);amountRaisedBy(uint _campaignID);fundingGoalOf(uint _campaignID);expiryOf(uint _campaignID);totalContributors(uint _campaignID);isContributor(uint _campaignID, address _contributor);isOwner(uint _campaignID, address _owner);hasFailed(uint _campaignID);isSuccess(uint _campaignID);isActive(uint _campaignID);isPaidOut(uint _campaignID);totalRefunded(uint _campaignID);isRefunded(uint _campaignID);newCampaign(string _name, address _beneficiary, uint _fundingGoal, uint _expiry, address _config);contribute(uint _campaignID, address _beneficiary);refund(uint _campaignID, uint contributionID);payout(uint _campaignID);operatorCampaignID(address _operator, uint _campaignIndex);totalCampaignsBy(address _operator);totalCampaigns();contributionAt(uint _campaignID, uint _contributionID);contributionID(uint _campaignID, address _contributor, uint _contributionIndex);totalContributionsBy(uint _campaignID, address _contributor);isContributor(uint _campaignID, address _contributor);ownerOf(uint _campaignID);beneficiaryOf(uint _campaignID);configOf(uint _campaignID);amountRaisedBy(uint _campaignID);fundingGoalOf(uint _campaignID);expiryOf(uint _campaignID);createdAt(uint _campaignID);totalContributions(uint _campaignID);isOwner(uint _campaignID, address _owner);hasFailed(uint _campaignID);isSuccess(uint _campaignID);isPaidOut(uint _campaignID);isActive(uint _campaignID);totalRefunded(uint _campaignID);isRefunded(uint _campaignID)"
ethersphere/go-ethereum,contracts/ens/contract/FIFSRegistrar.sol,"register(bytes32 label, address owner)"
drgorb/insurechain,contracts/ContractDefinitions.sol,"owned();getOwner();kill();getWarrantyPrice(string productId, uint startDate, uint endDate, uint productPrice);isInsurance(address insurance);createInsurance(string name, address priceCalculator);setInsuranceState(address insuranceAddress, InsuranceStatus status);getInsurance(uint index);getInsuranceByAddress(address insuranceAddress);getInsuranceStatus(address insuranceAddress);getWarrantyPrice(address insuranceAddress, string productId, uint startDate, uint endDate, uint productPrice);getInsuranceBalance(address insuranceAddress);increaseSalesBalance(address insurance, uint amount);decreaseSalesBalance(address insurance, uint amount);increasePaymentsBalance(address insurance, uint amount);decreasePaymentsBalance(address insurance, uint amount);increaseClaimsBalance(address insurance, uint amount);decreaseClaimsBalance(address insurance, uint amount);RetailerManager(address _insuranceManager);isInsurance(address insurance);requestRegistration(string companyName, address insurance);getInsurance(address retailer, uint idx);getRequestState(address retailer, address insurance);setRequestState(address retailer, RetailerStatus status);getRetailerStatus(address retailer, address insurance);getRetailerStatus(address retailer);getRetailer(uint index, address insuranceAddress);getRetailerByAddress(address retailerAddress, address insuranceAddress);getRetailerBalances(address retailer, address insurance);getRetailerTotalBalances(address retailerAddress);increaseSalesBalance(address retailer, address insurance, uint price);decreaseSalesBalance(address retailer, address insurance, uint price);increasePaymentsBalance(address retailer, address insurance, uint amount);decreasePaymentsBalance(address retailer, address insurance, uint amount);increaseClaimsBalance(address retailer, address insurance, uint amount);decreaseClaimsBalance(address retailer, address insurance, uint amount);Insurechain(address _insuranceManager, address _retailerManager);isInsurance(address insurance);isRegisteredRetailer(address insurance, address retailer);getRole(address user);getWarrantyQuote(string productId, address insurance, uint startDate, uint endDate, uint productPrice);createWarranty(string productId, string serialNumber, address insurance, uint startDate, uint endDate, uint productPrice);confirmWarranty(string productId, string serialNumber, string policyNumber);cancelWarranty(string productId, string serialNumber, address insuranceAddress);getWarranty(string productId, string serialNumber, address insurance);getWarrantyByIndex(uint idx);isWarrantyValid(address insurance, string productId, string serialNumber);createClaim(string productId, string serialNumber, address insurance, uint amount, string description);getClaim(string productId, string serialNumber, address insurance, uint idx)"
drgorb/hackathon-2016-11,contracts/ContractDefinitions.sol,"owned();getOwner();kill();getWarrantyPrice(string productId, uint startDate, uint endDate, uint productPrice);isInsurance(address insurance);createInsurance(string name, address priceCalculator);setInsuranceState(address insuranceAddress, InsuranceStatus status);getInsurance(uint index);getInsuranceByAddress(address insuranceAddress);getInsuranceStatus(address insuranceAddress);getWarrantyPrice(address insuranceAddress, string productId, uint startDate, uint endDate, uint productPrice);getInsuranceBalance(address insuranceAddress);increaseSalesBalance(address insurance, uint amount);decreaseSalesBalance(address insurance, uint amount);increasePaymentsBalance(address insurance, uint amount);decreasePaymentsBalance(address insurance, uint amount);increaseClaimsBalance(address insurance, uint amount);decreaseClaimsBalance(address insurance, uint amount);RetailerManager(address _insuranceManager);isInsurance(address insurance);requestRegistration(string companyName, address insurance);getInsurance(address retailer, uint idx);getRequestState(address retailer, address insurance);setRequestState(address retailer, RetailerStatus status);getRetailerStatus(address retailer, address insurance);getRetailerStatus(address retailer);getRetailer(uint index, address insuranceAddress);getRetailerByAddress(address retailerAddress, address insuranceAddress);getRetailerBalances(address retailer, address insurance);getRetailerTotalBalances(address retailerAddress);increaseSalesBalance(address retailer, address insurance, uint price);decreaseSalesBalance(address retailer, address insurance, uint price);increasePaymentsBalance(address retailer, address insurance, uint amount);decreasePaymentsBalance(address retailer, address insurance, uint amount);increaseClaimsBalance(address retailer, address insurance, uint amount);decreaseClaimsBalance(address retailer, address insurance, uint amount);Insurechain(address _insuranceManager, address _retailerManager);isInsurance(address insurance);isRegisteredRetailer(address insurance, address retailer);getRole(address user);getWarrantyQuote(string productId, address insurance, uint startDate, uint endDate, uint productPrice);createWarranty(string productId, string serialNumber, address insurance, uint startDate, uint endDate, uint productPrice);confirmWarranty(string productId, string serialNumber, string policyNumber);cancelWarranty(string productId, string serialNumber, address insuranceAddress);getWarranty(string productId, string serialNumber, address insurance);getWarrantyByIndex(uint idx);isWarrantyValid(address insurance, string productId, string serialNumber);createClaim(string productId, string serialNumber, address insurance, uint amount, string description);getClaim(string productId, string serialNumber, address insurance, uint idx)"
PeterBorah/smart-contract-security-examples,contracts/EvilRecipient.sol,callWithdraw(TokenWithInvariants token)
victorsintnicolaas/RVR,contracts/Lawyer.sol,"insertLawyer(address lawyerAddress, uint lawyerId);deleteLawyer(address lawyerAddress);getLawyer(address lawyerAddress);isLawyer(address lawyerAddress);updateCase(address lawyerAddress, uint caseId);getLawyerCount();getLawyerAtIndex(uint index);getAllLawyers()"
lucywe/rootcore-crowdsale,solidity/contracts/helpers/TestCrowdsaleController.sol,""
fccoelho/Curso_Blockchain,contracts/Intro-to-Solidity/purchase.sol,abort();confirmPurchase();confirmReceived()
gmo-blockchain/solidity,contracts/BulkContract.sol,"BulkContract(DataObject_v1 _dataObject_v1, DataObject_v2 _dataObject_v2);getHashInDataObject(bytes32[] _ids);canReadInDataObject(address _account, bytes32[] _ids);getExists(bytes32[] _ids);getWriteTimestamps(bytes32[] _ids)"
BlockTube/blocktube-client.0.3,app/contracts/blocktubeClip.sol,"transfer(address receiver, uint amount);tag(address _tag,uint _stake);blocktubeClip(string _ipfsclipobject, uint _treshold, uint _percentageforowner,address _tokenaddr);publish();unpublish();blocktubeTransfer(address _liker, uint _likeamount);kill()"
cgewecke/solcover,test/sources/loops/while-no-brackets.sol,a()
JoinColony/solcover,test/sources/loops/while-no-brackets.sol,a()
SafecontractDev/protocol,contracts/bancor_contracts/helpers/TestCrowdsaleController.sol,""
Souptacular/motivate-dapp,contracts/validators/wordCounter.sol,"wordCounter();toggleKey(address server, bool valid);validate(uint ID, bytes data)"
paulhauner/token-syndicate,contracts/TokenSyndicate.sol,buyTokens();invest();donate();balanceOf(address _owner);withdrawTokens();withdrawBounty();refund()
etherfundme/dapp,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address newAddress)
aragon/aragon-network-token,packages/sale/contracts/misc/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Dsummers91/openfund,blockchain/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
WingsDao/contracts,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
CMLTeam/ICOsurance,truffle/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
livepeer/protocol,contracts/ManagerProxyTarget.sol,""
gnosis/gnosis-contracts,contracts/Markets/Market.sol,"fund(uint _funding);close();withdrawFees();buy(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint maxCost);sell(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint minProfit);shortSell(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint minProfit);trade(int[] memory outcomeTokenAmounts, int costLimit);calcMarketFee(uint outcomeTokenCost)"
iurimatias/embark-framework,dapps/tests/app/app/contracts/simple_storage.sol,set(uint x);get();getS();setRegistar(address x)
Qipingsmile006/TianLianCoin,contracts/interface/IOwnable.sol,transferOwnership(address newOwner);acceptOwnership()
DroneEmployee/contracts,interface/DroneEmployeeROSInterface.sol,setFlightPlan(FlightPlan _plan);flight(Checkpoint[] _checkpoints)
holiman/cpp-ethereum,test/unittests/performance/thrash.sol,thrash()
ethereum/cpp-ethereum,test/unittests/performance/thrash.sol,thrash()
winsvega/cpp-ethereum,test/unittests/performance/thrash.sol,thrash()
pipermerriam/ethereum-grove,contracts/api.sol,"getIndexId(address ownerAddress, bytes32 indexName);getNodeId(bytes32 indexId, bytes32 id);getIndexName(bytes32 indexId);getIndexRoot(bytes32 indexId);getNodeId(bytes32 nodeId);getNodeIndexId(bytes32 nodeId);getNodeValue(bytes32 nodeId);getNodeHeight(bytes32 nodeId);getNodeParent(bytes32 nodeId);getNodeLeftChild(bytes32 nodeId);getNodeRightChild(bytes32 nodeId);getNextNode(bytes32 nodeId);getPreviousNode(bytes32 nodeId);insert(bytes32 indexName, bytes32 id, int value);query(bytes32 indexId, bytes2 operator, int value);exists(bytes32 indexId, bytes32 id);remove(bytes32 indexName, bytes32 id)"
belprixx/Master_camp,test_simple/Voting.sol,Voting(bytes32[] candidateNames);totalVotesFor(bytes32 candidate);voteForCandidate(bytes32 candidate);validCandidate(bytes32 candidate)
EthTrader/dappening,old/RedditRegistry.sol,"RedditRegistry(bytes32 _root, uint8 _modDayRate, uint16 _endowDuration);endow(User user);enableTransfers();onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);getUserByUsername(bytes20 _username);getIdxBatchByUsername(bytes20[] _usernames);getAddressBatchByUsername(bytes20[] _usernames)"
robmyers/artworld-ethereum,dapps/blank-canvas/contracts/BlankCanvas.sol,""
bcosorg/bcos,systemcontractv2/ConfigAction.sol,"ConfigAction();get(string key);set(string key, string value)"
livepeer/protocol,contracts/Controller.sol,"Controller();setContractInfo(bytes32 _id, address _contractAddress, bytes20 _gitCommitHash);updateController(bytes32 _id, address _controller);getContractInfo(bytes32 _id);getContract(bytes32 _id)"
bokkypoobah/TokenTrader,contracts/TokenTraderFactory.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);approve(address _spender, uint _value);allowance(address _owner, address _spender);Owned();transferOwnership(address newOwner);makerDepositEther();makerWithdrawAsset(uint256 tokens);makerWithdrawEther(uint256 ethers);takerBuyAsset();takerSellAsset(uint256 amountOfTokensToSell);verify(address tradeContract);TokenTrader(trader)"
Dicoiner/irianna-solidity,contracts/Bounty.sol,createTarget();deployContract();claim(Target target);checkInvariant()
Cryptonomica/Ethereum-IdentityProof,Verificator.sol,Verificator();getStringToSignWithKey(string _fingerprint);uploadSignedString(string _signedString)
ineiti/cothorities,bevm/testdata/Verify/Verify.sol,""
DeDiS/cothority,bevm/testdata/Verify/Verify.sol,""
livepeer/protocol,test/unit/TestSortedDoublyLLFindWithHints.sol,beforeEach();test_insert_findNoHintUpdateHead();test_insert_findNoHintUpdateTail();test_insert_findNoHintAtPosition();test_insert_findWithHintNextUpdateHead();test_insert_findWithHintNextUpdateTail();test_insert_findWithHintNextAtPosition();test_insert_findWithHintPrevUpdateTail();test_insert_findWithHintPrevAtPosition();test_insert_findWithHint()
Alonski/CoinPanion,contracts/Vault.sol,"numberOfAuthorizedPayments();receiveEther();collectAuthorizedPayment(uint _idPayment);delayPayment(uint _idPayment, uint _delay);cancelPayment(uint _idPayment);authorizeSpender(address _spender, bool _authorize);setSecurityGuard(address _newSecurityGuard);setTimelock(uint _newTimeLock);setMaxSecurityGuardDelay(uint _maxSecurityGuardDelay)"
FedCoup/FedCoup,installed_contracts/zeppelin/contracts/token/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint value);approve(address spender, uint value)"
erooijak/ethlance,resources/public/contracts/src/ethlanceContract.sol,EthlanceContract(address _ethlanceDB)
wealdtech/domainsale,x.sol,"owner(bytes32 _hash);transfer(bytes32 _hash, address newOwner);entries(bytes32 _hash);Permissioned();isPermitted(address addr, bytes32 permission);setPermission(address addr, bytes32 permission, bool allowed);owner(bytes32 node);setName(string name);ENSReverseRegister(address registry, string name);pause();unpause();mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);DomainSale(address _registry);sale(string _name);isAuction(string _name);isBuyable(string _name);auctionStarted(string _name);auctionEnds(string _name);minimumBid(string _name);price(string _name);balance(address addr);offer(string _name, uint256 _price, uint256 reserve, address referrer);cancel(string _name);buy(string _name, address bidReferrer);bid(string _name, address bidReferrer);finish(string _name);withdraw();invalidate(string _name);distributeFunds(uint256 amount, address seller, address startReferrer, address bidReferrer)"
Dicoiner/irianna-solidity,contracts/lifecycle/TokenDestructible.sol,TokenDestructible();destroy(address[] tokens)
montyly/manticore,tests/ethereum/contracts/detectors/selfdestruct_true_pos1.sol,"set(uint256 key, uint256 value);kill()"
trailofbits/manticore,tests/ethereum/contracts/detectors/selfdestruct_true_pos1.sol,"set(uint256 key, uint256 value);kill()"
DigixGlobal/ethereum-ruby,contracts/classic/GoldRegistry.sol,"ParticipantRegistry();getOwner();setOwner(address nown);registerAdmin(address regraddr);unregisterAdmin(address regraddr);registerVendor(address vendoraddress);unregisterVendor(address vendoraddress);registerCustodian(address custodianaddress);unregisterCustodian(address custodianaddress);registerAuditor(address auditoraddress);unregisterAuditor(address auditoraddress);isVendor(address vendoraddress);isCustodian(address custodianaddress);isAuditor(address auditoraddress);isRegistrar(address regraddr);Gold();getOwner();initGoldData(uint wt, bytes32 sn, bytes32 sk, bytes32 doc);initRegistryData(address raddr, address vaddr, address caddr);sendRegistration();registryRequestCustodian();registryRequestVendor();registryRequestWeight();registryRequestSerialNumber();registryRequestSku();registryRequestDocumentation();getGoldDataInitialized();getGoldDataMinted();getGoldDataWeight();getGoldDataSerial();getGoldDataSku();getGoldDataDocumentation();getRegistryDataInitialized();getRegistryDataRegistered();getRegistryDataRegistry();getRegistryDataVendor();getRegistryDataCustodian();getRegistryDataMinter();sendToMinter(uint minttype);goldRegistry();GoldRegistry();setConfiguration(address pr);getOwner();setOwner(address nown);getParticipantRegistry();checkCustodian();checkVendor();checkAuditor();checkRegistrar();registerGold();getGoldStatusCode(address gaddr);getGoldStatusVendorverify(address gaddr);getGoldStatusCustodianverify(address gaddr);getGoldStatusMinted(address gaddr);getGoldStatusAuditcount(address gaddr);getGoldStatusRegistered(address gaddr);getGoldStatusLastauditid(address gaddr);getGoldInfoVendor(address gaddr);getGoldInfoCustodian(address gaddr);getGoldInfoWeight(address gaddr);getGoldInfoSerial(address gaddr);getGoldInfoSku(address gaddr);getGoldInfoDocumentation(address gaddr);getLastAuditId(address gaddr);getLastAuditTime(address gaddr);getLastAuditPass(address gaddr);getLastAuditAuditor(address gaddr);getLastAuditExtradata(address gaddr);getLastAuditDocumentation(address gaddr);custodianVerify(address gaddr);vendorVerify(address gaddr);custodianTransfer(address gaddr, address ncaddr);auditReport(address gaddr, bool ares, bytes32 ed, bytes32 doc)"
EthWorks/ethereum.rb,contracts/classic/GoldRegistry.sol,"ParticipantRegistry();getOwner();setOwner(address nown);registerAdmin(address regraddr);unregisterAdmin(address regraddr);registerVendor(address vendoraddress);unregisterVendor(address vendoraddress);registerCustodian(address custodianaddress);unregisterCustodian(address custodianaddress);registerAuditor(address auditoraddress);unregisterAuditor(address auditoraddress);isVendor(address vendoraddress);isCustodian(address custodianaddress);isAuditor(address auditoraddress);isRegistrar(address regraddr);Gold();getOwner();initGoldData(uint wt, bytes32 sn, bytes32 sk, bytes32 doc);initRegistryData(address raddr, address vaddr, address caddr);sendRegistration();registryRequestCustodian();registryRequestVendor();registryRequestWeight();registryRequestSerialNumber();registryRequestSku();registryRequestDocumentation();getGoldDataInitialized();getGoldDataMinted();getGoldDataWeight();getGoldDataSerial();getGoldDataSku();getGoldDataDocumentation();getRegistryDataInitialized();getRegistryDataRegistered();getRegistryDataRegistry();getRegistryDataVendor();getRegistryDataCustodian();getRegistryDataMinter();sendToMinter(uint minttype);goldRegistry();GoldRegistry();setConfiguration(address pr);getOwner();setOwner(address nown);getParticipantRegistry();checkCustodian();checkVendor();checkAuditor();checkRegistrar();registerGold();getGoldStatusCode(address gaddr);getGoldStatusVendorverify(address gaddr);getGoldStatusCustodianverify(address gaddr);getGoldStatusMinted(address gaddr);getGoldStatusAuditcount(address gaddr);getGoldStatusRegistered(address gaddr);getGoldStatusLastauditid(address gaddr);getGoldInfoVendor(address gaddr);getGoldInfoCustodian(address gaddr);getGoldInfoWeight(address gaddr);getGoldInfoSerial(address gaddr);getGoldInfoSku(address gaddr);getGoldInfoDocumentation(address gaddr);getLastAuditId(address gaddr);getLastAuditTime(address gaddr);getLastAuditPass(address gaddr);getLastAuditAuditor(address gaddr);getLastAuditExtradata(address gaddr);getLastAuditDocumentation(address gaddr);custodianVerify(address gaddr);vendorVerify(address gaddr);custodianTransfer(address gaddr, address ncaddr);auditReport(address gaddr, bool ares, bytes32 ed, bytes32 doc)"
marekkirejczyk/ethereum.rb,contracts/classic/GoldRegistry.sol,"ParticipantRegistry();getOwner();setOwner(address nown);registerAdmin(address regraddr);unregisterAdmin(address regraddr);registerVendor(address vendoraddress);unregisterVendor(address vendoraddress);registerCustodian(address custodianaddress);unregisterCustodian(address custodianaddress);registerAuditor(address auditoraddress);unregisterAuditor(address auditoraddress);isVendor(address vendoraddress);isCustodian(address custodianaddress);isAuditor(address auditoraddress);isRegistrar(address regraddr);Gold();getOwner();initGoldData(uint wt, bytes32 sn, bytes32 sk, bytes32 doc);initRegistryData(address raddr, address vaddr, address caddr);sendRegistration();registryRequestCustodian();registryRequestVendor();registryRequestWeight();registryRequestSerialNumber();registryRequestSku();registryRequestDocumentation();getGoldDataInitialized();getGoldDataMinted();getGoldDataWeight();getGoldDataSerial();getGoldDataSku();getGoldDataDocumentation();getRegistryDataInitialized();getRegistryDataRegistered();getRegistryDataRegistry();getRegistryDataVendor();getRegistryDataCustodian();getRegistryDataMinter();sendToMinter(uint minttype);goldRegistry();GoldRegistry();setConfiguration(address pr);getOwner();setOwner(address nown);getParticipantRegistry();checkCustodian();checkVendor();checkAuditor();checkRegistrar();registerGold();getGoldStatusCode(address gaddr);getGoldStatusVendorverify(address gaddr);getGoldStatusCustodianverify(address gaddr);getGoldStatusMinted(address gaddr);getGoldStatusAuditcount(address gaddr);getGoldStatusRegistered(address gaddr);getGoldStatusLastauditid(address gaddr);getGoldInfoVendor(address gaddr);getGoldInfoCustodian(address gaddr);getGoldInfoWeight(address gaddr);getGoldInfoSerial(address gaddr);getGoldInfoSku(address gaddr);getGoldInfoDocumentation(address gaddr);getLastAuditId(address gaddr);getLastAuditTime(address gaddr);getLastAuditPass(address gaddr);getLastAuditAuditor(address gaddr);getLastAuditExtradata(address gaddr);getLastAuditDocumentation(address gaddr);custodianVerify(address gaddr);vendorVerify(address gaddr);custodianTransfer(address gaddr, address ncaddr);auditReport(address gaddr, bool ares, bytes32 ed, bytes32 doc)"
iam-dev/ERC23,installed_contracts/zeppelin-solidity/test/mocks/RefundableCrowdsaleImpl.sol,""
cslarson/exchange,dump/TestFIXED.sol,testInitialBalanceUsingDeployedContract()
FiatCentralBank/fiatcoin,contracts/token/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
cgewecke/solcover,test/sources/conditional/sameline-alternate.sol,a()
JoinColony/solcover,test/sources/conditional/sameline-alternate.sol,a()
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs3.sol,"addThing(bytes32 description, string url, string filehash, string filename)"
eris-ltd/eris,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs3.sol,"addThing(bytes32 description, string url, string filehash, string filename)"
monax/monax,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs3.sol,"addThing(bytes32 description, string url, string filehash, string filename)"
eris-ltd/eris-cli,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs3.sol,"addThing(bytes32 description, string url, string filehash, string filename)"
monax/cli,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs3.sol,"addThing(bytes32 description, string url, string filehash, string filename)"
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs3.sol,"addThing(bytes32 description, string url, string filehash, string filename)"
erooijak/ethlance,resources/public/contracts/src/ethlanceJob.sol,EthlanceJob(address _ethlanceDB)
iam-dev/ERC23,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
iivvoo/ethic,minimal1.sol,""
dltdojo/courses,ethereum/solidity/T160_Array.sol,Foo();memoryArray(uint len);f();getAddressArray();getIntArrayDynamic();changeFooIntArrayDynamicSize(uint newSize);clearFooArray();FooUser(address _fooAddress);testFooArray()
elementrem/solidity,test/compilationTests/corion/ico.sol,"ico(address foundation, address priceSet, uint256 exchangeRate, uint256 startBlockNum, address[] genesisAddr, uint256[] genesisValue);ICObonus();setInterestDB(address addr, uint256 balance);checkInterest(address addr);getInterest(address beneficiary);setICOElePrice(uint256 value);extendICO();closeICO();abortICO();connectTokens(address tokenContractAddr, address premiumContractAddr);receiveFunds();buy(address beneficiaryAddress, address affilateAddress);checkPremium(address owner);getIcoReward(uint256 value);isICO()"
NoteGio/openrelay,js/contracts/base/StandardToken.sol,"transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);balanceOf(address _owner);approve(address _spender, uint _value);allowance(address _owner, address _spender)"
ConsenSys/Flare,flareth/contracts/Market.sol,"createNode(bytes32 ident, bytes32 state, bytes32 ipaddress);removeNode();penalizeNode();setState(bytes32 name, bytes32 state);setIPAddress(bytes32 name, bytes32 ipaddress);createDApp(bytes32 ident, uint32 fee);startDApp(bytes32 ident);payNode(bytes32 dappIdent, bytes32 nodeIdent);finishDApp(bytes32 ident)"
Matchpool/contracts,contracts/SafeMath.sol,"assert(bool assertion);safeMul(uint a, uint b);safeDiv(uint a, uint b)"
dmx374/zeppelin-solidity,contracts/examples/SimpleToken.sol,SimpleToken()
eris-ltd/eris-db,tests/compilers_fixtures/faultyContract.sol,""
QTBlockchain/SolidityNWeb3,SmartContracts/mynewcontract/contracts/stringandbytes.sol,stringandbytes();setName(string value);getName();isNameEmpty()
BancoSabadell/bs-token-data,contracts/Stoppable.sol,startEmergency();stopEmergency()
redsquirrel/augur-core,src/libraries/Delegator.sol,"Delegator(Controller _controller, bytes32 _controllerLookupName)"
ethereum/remix,remix-url-resolver/tests/example_1/greeter.sol,greet()
suntechsoft/dmarket-smartcontract,contracts/v0.1/Ownable.sol,Ownable();transferOwnership(address newOwner)
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/inheritance/contracts/LeafC.sol,""
silasdavis/eris-db,tests/jobs_fixtures/app06-deploy_basic_contract_and_different_solc_types_packed_unpacked/storage.sol,setBool(bool x);getBool();setInt(int x);getInt();setUint(uint x);getUint();setAddress(address x);getAddress();setBytes(bytes32 x);getBytes();setString(string memory x);getString()
silasdavis/burrow,tests/jobs_fixtures/app06-deploy_basic_contract_and_different_solc_types_packed_unpacked/storage.sol,setBool(bool x);getBool();setInt(int x);getInt();setUint(uint x);getUint();setAddress(address x);getAddress();setBytes(bytes32 x);getBytes();setString(string memory x);getString()
eris-ltd/eris-db,tests/jobs_fixtures/app06-deploy_basic_contract_and_different_solc_types_packed_unpacked/storage.sol,setBool(bool x);getBool();setInt(int x);getInt();setUint(uint x);getUint();setAddress(address x);getAddress();setBytes(bytes32 x);getBytes();setString(string memory x);getString()
dapphub/ds-token,src/token.sol,"approve(address guy);approve(address guy, uint wad);transfer(address dst, uint wad);transferFrom(address src, address dst, uint wad);push(address dst, uint wad);pull(address src, uint wad);move(address src, address dst, uint wad);mint(uint wad);burn(uint wad);mint(address guy, uint wad);burn(address guy, uint wad);stop();start();setName(string memory name_)"
papyrusglobal/smartcontracts,contracts/registry/SSPRegistry.sol,"register(address owner, address root, string name, string website);update(uint64 sspId, address owner, address root, string name, string website);registerValidator(uint64 sspId, address validator);registerEndpoint(uint64 sspId, string endpoint);approveEndpoint(uint64 sspId, uint64 endpointId);removeEndpoint(uint64 sspId, uint64 endpointId);findByOwnerAddress(address verifier);getOwnerAddress(uint64 sspId);getPaymentsRootAddress(uint64 sspId);getName(uint64 sspId);getWebsite(uint64 sspId);getValidatorCount(uint64 sspId);getValidator(uint64 sspId, uint64 validatorId);getEndpointCount(uint64 sspId);getEndpoint(uint64 sspId, uint64 endpointId);isEndpointApproved(uint64 sspId, uint64 endpointId);isEndpointRemoved(uint64 sspId, uint64 endpointId)"
nud3l/verifying-computation-solidity,contracts/AbstractComputationService.sol,"__callback(bytes32 _oraclizeID, string _result);compute(string _val1, string _val2, uint _operation, uint256 _computationId);provideIndex(string _resultSolver, uint _computationId);registerOperation(uint _operation, string _query);enableArbiter(address _arbiterAddress);disableArbiter(address _arbiterAddress);getResult(bytes32 _oraclizeID);stringToUint(string s);uintToBytes(uint v)"
milosjovac/dQueue,contracts/dQueueContracts.sol,"createResource(bytes32 t, bytes32 desc, bytes32 title);getQueuesLength();QueueManager();pushClient(address clientAddress, bytes32 userData);popClient();getNumberOfClients();getClientAtIndex(uint index);Resource(bytes32 typ, bytes32 tit, bytes32 desc, address cr);Get()"
rmerom/PutYourMoneyWhereYourContractIs,contracts/EnvironmentTestContract.sol,"getOwner();lockOwner(address _owner);blockDotBlockHash(uint forBlockNumber);blockDotCoinbase();blockDotDifficulty();blockDotGasLimit();blockDotNumber();blockDotTimestamp();now();setBlockDotBlockHash(uint forBlockNumber, bytes32 _blockHash);setBlockDotCoinbase(address addr);setBlockDotDifficulty(uint _difficulty);setBlockDotGasLimit(uint _gasLimit);setBlockDotNumber(uint blockNumber);setBlockDotTimestamp(uint _timestamp)"
alice-si/contracts,contracts/alice/impact/FlexibleImpactLinker.sol,updateUnit(uint _value);linkImpact(bytes32 _claimId)
immesys/bw2,contracts/libbw.sol,"UnpackDOT(bytes dot);GetDOTDelegatedRevoker(bytes32 dothash, uint8 index);UnpackEntity(bytes entity);GetEntityDelegatedRevoker(bytes32 vk, uint8 index);UnpackAccessDChain(bytes obj);GetDChainDOTHash(bytes32 chainhash, uint8 index);UnpackRevocation(bytes blob);ADChainGrants(bytes32 chainhash, bytes8 adps, bytes32 mvk, bytes urisuffix);GetDOTNumRevokableHashes(bytes32 dothash);GetDOTRevokableHash(bytes32 dothash, uint32 index);GetDChainNumRevokableHashes(bytes32 chainhash);GetDChainRevokableHash(bytes32 chainhash, uint32 index)"
iurimatias/embark-framework,dapps/tests/app/test/solidity_test.sol,beforeAll()
pash7ka/zeppelin-solidity,contracts/token/BurnableToken.sol,burn(uint256 _value)
iswarm/p2pCny,contracts/token/BurnableToken.sol,burn(uint256 _value)
PeculiumPCL/Peculium,contracts/v1.0/BurnableToken.sol,burn(uint256 _value)
PeculiumPCL/Peculium,contracts/v1.2/BurnableToken.sol,burn(uint256 _value)
PeculiumPCL/Peculium,contracts/v1.1/BurnableToken.sol,burn(uint256 _value)
PeculiumPCL/Peculium,contracts/v2/BurnableToken.sol,burn(uint256 _value)
PeculiumPCL/Peculium,contracts/v0.7/BurnableToken.sol,burn(uint256 _value)
cashpokerpro-dev/cash-smartcontracts,contracts/token/BurnableToken.sol,burn(uint256 _value)
cinderblockchain/cindertoken,contracts/token/BurnableToken.sol,burn(uint256 _value)
SilentCicero/wafr,src/tests/solidityTests/assertEq/test.assertEq.string.sol,setup();test_oneValidEqString();test_oneInvalidEqString();test_threeValidEqString();test_twoValidEqString();test_oneValidEqStringNoLog();test_threeInvalidEqString();test_twoInvalidEqString()
GX-Coin/SmartContract,GxAuthority.sol,"canCall(address caller, address callee, bytes4 sig)"
fkbenjamin/pc-firebase-starter,contracts/Immigration.sol,"Immigration(address _usedStorage, address _nationCtrl);setStorage(address _store);setNation(address _nation);addImmigrationOfCountry(address _immigration, uint _country);getVisaIdentifier(address _user, uint _country, uint _arrayPosition);getVisaAmountPaid(address _user, uint _country, uint _arrayPosition);getVisaPrice(address _user, uint _country, uint _arrayPosition);getVisaEntered(address _user, uint _country, uint _arrayPosition);getVisaLeft(address _user, uint _country, uint _arrayPosition);stampIn(address _owner, uint _country, uint _visaId);stampOut(address _owner, uint _country, uint _visaId)"
kryptopy1/crowdsale,test/helpers/KryptopyCrowdsaleMock.sol,KryptopyCrowdsaleMock(address _tokenAddress)
TruLtd/tru-reputation-token,src/current/TruReputationTokenFull.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);transferOwnership(address newOwner);balanceOf(address who);transfer(address to, uint256 value);transfer(address _to, uint256 _value);balanceOf(address _owner);allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);increaseApproval(address _spender, uint _addedValue);decreaseApproval(address _spender, uint _subtractedValue);setReleaseAgent(address addr);setTransferAgent(address addr, bool state);releaseTokenTransfer();mint(address _to, uint256 _amount);finishMinting(bool _presale, bool _sale);isUpgradeAgent();upgradeFrom(address _from, uint256 _value);upgrade(uint256 _value);setUpgradeAgent(address _agent);getUpgradeState();setUpgradeMaster(address _master);canUpgrade();changeBoardAddress(address _newAddress);canUpgrade();setUpgradeMaster(address _master)"
TruLtd/tru-reputation-token,src/0.1.12/TruReputationTokenFull.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);transferOwnership(address newOwner);balanceOf(address who);transfer(address to, uint256 value);transfer(address _to, uint256 _value);balanceOf(address _owner);allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);increaseApproval(address _spender, uint _addedValue);decreaseApproval(address _spender, uint _subtractedValue);setReleaseAgent(address addr);setTransferAgent(address addr, bool state);releaseTokenTransfer();mint(address _to, uint256 _amount);finishMinting(bool _presale, bool _sale);isUpgradeAgent();upgradeFrom(address _from, uint256 _value);upgrade(uint256 _value);setUpgradeAgent(address _agent);getUpgradeState();setUpgradeMaster(address _master);canUpgrade();changeBoardAddress(address _newAddress);canUpgrade();setUpgradeMaster(address _master)"
EthWorks/ethereum.rb,spec/truffle/contracts/TestContractOne.sol,"TestContractOne();counterFor(address _a);addCounter(address _to, uint32 _counter);removeCounter(address _from, uint32 _counter)"
marekkirejczyk/ethereum.rb,spec/truffle/contracts/TestContractOne.sol,"TestContractOne();counterFor(address _a);addCounter(address _to, uint32 _counter);removeCounter(address _from, uint32 _counter)"
SimonBatardiere/frozenether,contracts/FrozenEther.sol,"FrozenEther();isExist(uint id);remainingTime(uint id);amount(uint id);create(uint id, uint duration);deposit(uint id);withdraw(uint id, uint amount);lenghtenFrozenState(uint id, uint duration);isAccountExist(Account storage account);isAccountExpired(Account storage account);remainingAccountTime(Account storage account);createAccount(Account storage account, uint duration, uint amount);destroyAccount(Account storage account);depositOnAccount(Account storage account, uint amount);withdrawFromAccount(Account storage account, uint amount);lenghtenAccountFrozenState(Account storage account, uint duration)"
WeiFund/WeiFund,app/client/lib/contracts/CampaignAccountFactory.sol,"newCampaign(string _name, address _beneficiary, uint _fundingGoal, uint _expiry, address _config);contribute(uint _campaignID, address _beneficiary);refund(uint _campaignID, uint _contribution);payout(uint _campaignID);operatorCampaignID(address _operator, uint _campaignIndex);totalCampaignsBy(address _operator);totalContributionsBy(uint _campaignID, address _contributor);totalCampaigns();contributionAt(uint _campaignID, uint _contributionID);createdAt(uint _campaignID);contributionID(uint _campaignID, address _contributor, uint _contributionIndex);ownerOf(uint _campaignID);beneficiaryOf(uint _campaignID);configOf(uint _campaignID);amountRaisedBy(uint _campaignID);fundingGoalOf(uint _campaignID);expiryOf(uint _campaignID);totalContributors(uint _campaignID);isContributor(uint _campaignID, address _contributor);isOwner(uint _campaignID, address _owner);hasFailed(uint _campaignID);isSuccess(uint _campaignID);isPaidOut(uint _campaignID);totalRefunded(uint _campaignID);isRefunded(uint _campaignID);register(uint _campaignID, address _account);accountOf(uint _campaignID);campaignOf(address _account);newCampaignAccount(uint _campaignID)"
KudosProject/kudos-token,test/helpers/StandardTokenMock.sol,"StandardTokenMock(address initialAccount, uint256 initialBalance);assign(address _account, uint _balance)"
aragon/aragon-core,contracts/common/IsContract.sol,isContract(address _target)
Pavel-DV/ChronoMint,old/Managed.sol,"Managed();isAuthorized(address key);setVote(address subject, string name, uint value, address voter, bool affirm);hasString(string[] arr, string val);addKey(address key);revokeKey(address key)"
bshevchenko/ChronoMint,old/Managed.sol,"Managed();isAuthorized(address key);setVote(address subject, string name, uint value, address voter, bool affirm);hasString(string[] arr, string val);addKey(address key);revokeKey(address key)"
duaraghav8/Solium,test/lib/rules/quotes/single-full.sol,""
Blocklancer/Blocklancer-Contracts,solidity/BlocklancerEmploymentContract.sol,"BlocklancerEmploymentContract(string _link, address _client);getLink();getClient();getStateofContractString();getStateofContract();getChosenFreelancer();getBalance();getNumberOfBid();addBid(uint256 _price);getBidPrice(uint index);getBidFreelancer(uint index);create(uint index);PayFreelancer(int _freelancerRating);if(msg.sender!=client);RateClient(uint _clientRating);callTokenHolderTribunal(string reason);if(msg.sender!=client && msg.sender!=ChosenBid.freelancer);finalizeDispute();if(msg.sender!=client && msg.sender!=ChosenBid.freelancer);stopWork();if(msg.sender != ChosenBid.freelancer)"
FiatCentralBank/fiatcoin,contracts/ownership/Contactable.sol,setContactInformation(string info)
ryepdx/etherlab,lib/base/api.sol,"contracts(string32 name);addContract(string32, address newContract);removeContract(string32);apiAuthorized();setApiAddress(address newApi);remove()"
ineiti/cothorities,bevm/testdata/TimeTest/TimeTest.sol,storeCurrentTime();getStoredTime();getCurrentTime()
DeDiS/cothority,bevm/testdata/TimeTest/TimeTest.sol,storeCurrentTime();getStoredTime();getCurrentTime()
Quiark/populus,tests/command_line_interface/projects/test-03/contracts/owned.sol,owned()
Quiark/populus,tests/command_line_interface/projects/test-04/contracts/owned.sol,owned()
Quiark/populus,tests/command_line_interface/projects/test-02/contracts/owned.sol,owned()
gnosis/gnosis-contracts,contracts/Events/Event.sol,buyAllOutcomes(uint collateralTokenCount);sellAllOutcomes(uint outcomeTokenCount);setOutcome();getOutcomeCount();getOutcomeTokens();getOutcomeTokenDistribution(address owner);getEventHash();redeemWinnings()
silasdavis/burrow,execution/solidity/event_emitter.sol,EmitOne();EmitTwo()
qjflores/singularity,contracts/Provider.sol,"Provider(string _name, string _description);setDebt(uint256 _debt, address _userAddress);recievePayment(address _userAddress);addStaff(address _userAddress);addJob(bytes32 _name, uint256 _rate);updateJobRate(bytes32 _name, uint256 _rate);payOutJob(address _userAddress, bytes32 _jobName);collectPayout(address _userContractAddress)"
GX-Coin/SmartContract,GxUsesOrders.sol,"setBuyOrdersContract(address buyOrderListAddress);setSellOrdersContract(address sellOrderListAddress);getOrder(GxOrderList orderList, uint80 orderId)"
cryptape/cita,scripts/txtool/txtool/solidity/ParaType.sol,"ParaType();setUint(uint u, uint8 u8, uint16 u16, uint32 u32, uint256 u256);getUint();setInt(int i, int8 i8, int16 i16, int32 i32, int256 i256);getInt();setBool(bool b);setNotConstant();getNotConstant();getConstant();getBool();setByte(bytes1 b1, bytes8 b8, bytes32 b32);getByte();setArray(bytes1[] b1, bytes8[] b8, bytes32[] b32,int[] iArray, uint[] uiArray,bool[] bArray);getArray();setString(string sData);getString();setEnum();getEnum()"
ProBonoPublicoWorld/ico-contracts,contracts/PBToken.sol,"PBToken(address ownerA, address ownerB)"
DonorToken/DonorToken,test/helpers-my/ERC677ContractAccepter.sol,""
melonproject/protocol,contracts/requests/SharesRequestor.sol,"cancelRequest(address _hub);executeRequestFor(address _requestOwner, address _hub);executeRequestsFor(address[] calldata _requestOwners, address[] calldata _hubs);requestIsCancelable(address _requestOwner, address _hub);requestIsExecutable(address _requestOwner, address _hub);__fundIsActive(address _hub)"
QTBlockchain/SolidityNWeb3,SmartContracts/revisit/contracts/UpdateSavingsBank.sol,"UpdateSavingsBank();createAccountWithBalance(string name, uint16 balance);DepositAmount(uint256 accountNumber, uint16 amount);withdrawAmount(uint256 accountNumber, uint16 amount);getAccountDetails(uint256 accountNumber)"
aragon/aragon-core,contracts/common/DelegateProxy.sol,"delegatedFwd(address _dst, bytes _calldata)"
mothershipcx/contracts,contracts/test/MSPMock.sol,MSPMock(address _tokenFactory);getBlockNumber();setMockedBlockNumber(uint _b)
Ethbet/ethbet,contracts/Ownable.sol,Ownable();transferOwnership(address newOwner)
Ethbet/ethbet,alpha/contracts/Ownable.sol,Ownable();transferOwnership(address newOwner)
redsquirrel/augur-core,src/library_test_contracts/SafeMathInt256Tester.sol,"mul(int256 _a, int256 _b);div(int256 _a, int256 _b);sub(int256 _a, int256 _b);add(int256 _a, int256 _b);min(int256 _a, int256 _b);max(int256 _a, int256 _b);fxpMul(int256 _a, int256 _b, int256 _base);fxpDiv(int256 _a, int256 _b, int256 _base)"
dehydr8/oracle-service,contracts/PSOraclize.sol,query(string _arg)
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/contracts/Bounty.sol,createTarget();deployContract();claim(Target target);checkInvariant()
pash7ka/zeppelin-solidity,contracts/Bounty.sol,createTarget();deployContract();claim(Target target);checkInvariant()
iswarm/p2pCny,contracts/Bounty.sol,createTarget();deployContract();claim(Target target);checkInvariant()
readevalprint/aragon-core,contracts/zeppelin/Bounty.sol,createTarget();deployContract();claim(Target target);checkInvariant()
pz7/liquet,node_modules/zeppelin-solidity/contracts/Bounty.sol,createTarget();deployContract();claim(Target target);checkInvariant()
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/Bounty.sol,createTarget();deployContract();claim(Target target);checkInvariant()
cashpokerpro-dev/cash-smartcontracts,contracts/Bounty.sol,createTarget();deployContract();claim(Target target);checkInvariant()
cinderblockchain/cindertoken,contracts/Bounty.sol,createTarget();deployContract();claim(Target target);checkInvariant()
AlphaDinoRC/rockchain,test/TestCrowdsale.sol,testInitialCrowdsale();testIsStarted();testIsComplete();testTokenBalance();testIsSuccessful();testCheckEthBalance();testCheckSavecEthBalance();testCheckRokBalance()
Juzix/BlockChain-Demo,contracts/sysbase/OwnerNamed.sol,"OwnerNamed();register(string _moduleName, string _moduleVersion);register(string _moduleName, string _moduleVersion, string _contractName, string _contractVersion);changeModuleRegisterOwner(string _moduleName, string _moduleVersion, address _newOwner);changeContractRegisterOwner(string _moduleName, string _moduleVersion, string _contractName, string _contractVersion, address _newOwner);kill();getOwner();getSender();getErrno();log(string _str);log(string _str, string _str2);log(string _str, string _str2, string _str3);log(string _str, uint _ui);log(string _str, int _i);log(string _str, address _addr);toWidthString(string _self, uint _width);writedb(string _name, string _key, string _value);updateContractAddr(string _moduleName, string _moduleVersion, string _contractName, string _contractVersion, address __contractAddr)"
Bitorious/Genoil-cpp-ethereum,mix/stdc/std.sol,"owned();kill();register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service);getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)"
Gustav-Simonsson/cpp-ethereum,mix/stdc/std.sol,"owned();kill();register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service);getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)"
guanqun/cpp-ethereum,mix/stdc/std.sol,"owned();kill();register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service);getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)"
acebusters/safe-token-sale,contracts/controller/StorageEnabled.sol,"StorageEnabled(address _storageAddr);babzBalanceOf(address _owner);_setBabzBalanceOf(address _owner, uint256 _newValue);activeSupply();_setActiveSupply(uint256 _newActiveSupply);burnPool();_setBurnPool(uint256 _newBurnPool);powerPool();_setPowerPool(uint256 _newPowerPool);powerBalanceOf(address _owner);_setPowerBalanceOf(address _owner, uint256 _newValue);outstandingPower();_setOutstandingPower(uint256 _newOutstandingPower);authorizedPower();_setAuthorizedPower(uint256 _newAuthorizedPower);downs(address _user);_setDownRequest(address _holder, uint256 total, uint256 left, uint256 start)"
amisolution/Test,AmisSimConverter.sol,"mortal();kill();proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value);proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);convert(uint _amount)"
dltdojo/courses,ethereum/dapps/ens/FIFSRegistrar.sol,"FIFSRegistrar(AbstractENS ensAddr, bytes32 node);register(bytes32 subnode, address owner)"
y12studio/dltdojo,dockerfiles/triple-chain/v1/redfoo.sol,"RedFoo();balanceOf(address _owner);sendFoo(address _to, uint256 _value, bytes _hash)"
charlieknoll/dgpv2,contracts/Dgp.sol,"Dgp(address _admin);registerDonation(uint32 _donationAmt);registerClient(address _clientAddress, uint32 _endowmentAmt, uint _startTime);checkClientFunds(address _clientAddress);registerVendor(address _vendorAddress);depositChecking(address _clientAddress, uint32 _amount);depositSavings(address _clientAddress, uint32 _amount);removeClient(address _clientAddress);getVested(address _clientAddress);getCheckingBalance(address _clientAddress);getSavingsBalance(address _clientAddress);makePurchase(address _vendorAddress, uint32 amount);refundClient(address _clientAddress, uint32 amount);makePurchaseForClient(address _vendorAddress, address _clientAddress, uint32 amount);redeemPurchases();donatePurchase(uint32 _amount);redeemPurchasesForVendor(address _vendorAddress);transferETH(address _recipient, uint amount);terminate()"
robmyers/artworld-ethereum,dapps/democratic-palette/contracts/DemocraticPalette.sol,""
BSDStudios/parity,js/src/contracts/snippets/token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
nipunn1313/parity,js/src/contracts/snippets/token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
Upchain/upchain-hackathon-starterpack,contracts/Token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
destenson/ethcore--parity,js-old/src/contracts/snippets/token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
immartian/musicoin,js/src/contracts/snippets/token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
pdaian/parity,js/src/contracts/snippets/token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
jesuscript/parity,js/src/contracts/snippets/token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
boisde/Greed_Island,party/contracts/protocol/SetToken.sol,"addComponent(address _component);removeComponent(address _component);editDefaultPositionUnit(address _component, int256 _realUnit);addExternalPositionModule(address _component, address _positionModule);editPositionMultiplier(int256 _newMultiplier);mint(address _account, uint256 _quantity);burn(address _account, uint256 _quantity);lock();unlock();addModule(address _module);removeModule(address _module);removePendingModule(address _module);initializeModule();setManager(address _manager);getComponents();getDefaultPositionRealUnit(address _component);getExternalPositionRealUnit(address _component, address _positionModule);getExternalPositionModules(address _component);getExternalPositionData(address _component,address _positionModule);getModules();isComponent(address _component);isExternalPositionModule(address _component, address _module);isInitializedModule(address _module);isPendingModule(address _module);getPositions();getTotalComponentRealUnits(address _component);_defaultPositionVirtualUnit(address _component);_externalPositionModules(address _component);_externalPositionVirtualUnit(address _component, address _module);_externalPositionData(address _component, address _module);_convertRealToVirtualUnit(int256 _realUnit);_convertVirtualToRealUnit(int256 _virtualUnit);_getPositionCount();_validateOnlyModule();_validateOnlyManager();_validateWhenLockedOnlyLocker()"
Firescar96/Flare,flareth/contracts/Market.sol,"createNode(bytes32 ident, bytes32 state, bytes32 ipaddress);removeNode();penalizeNode();setState(bytes32 name, bytes32 state);setIPAddress(bytes32 name, bytes32 ipaddress);createDApp(bytes32 ident, uint32 fee, bytes ipfsHash, bytes32 class);startDApp(bytes32 ident);payNode(bytes32 nodeIdent, uint32 operations);finishDApp(bytes32 ident)"
validitylabs/SimpleEthVote,contracts/VoteFactory.sol,"transferOwner(address newOwner);payOut();VoteFactory();newVote(uint duration, string description);startNewVote(uint duration, string description);vote(bool isYes, address voteSender)"
jpuentea/TFG,IdentityManager.sol,"IdentityManager(bytes32 _name);registrarUsuario(bytes32 rol1, bytes32 nickname, bytes32 aplicacion, bytes32 token);borrarRegistro(bytes32 nickname,bytes32 aplicacion);registrarApp(bytes32 aplicacion,address a, bytes32[] b);devuelveUsers();devuelveTodasApps();devuelveAppaddr(bytes32 aplicacion);devuelveApproles(bytes32 aplicacion);comprueba(address a, bytes32 rol);controla(address user, bytes32 hash, bytes32 rol);devuelveRoles(bytes32 user);devuelveApps(bytes32 user);devuelveAddressUsuario(bytes32 user);devuelveNombreApp(address app)"
airalab/core,contracts/robonomics/Lighthouse.sol,"setup(XRT _xrt, uint256 _minimalStake, uint256 _timeoutInBlocks);refill(uint256 _value);withdraw(uint256 _value);keepAliveTransaction();quotedTransaction();startGas()"
VelocityMarket/Options-Contract,Contracts/finaloptions.sol,"finalOptions();getPrices(uint blockNumber);getBTCETH(uint blockNumber);newOption(address addr, uint amount, bool long);goLong();goShort();findOptionId(address addr);applyLOT(uint amount);priceUnitFix(uint amount);exercise();exercise(uint optionId);payAndHandle(uint optionId, address addr, uint amount);changeMargin(uint newMargin);changeLOT(uint newLOT);changeBlocksToExpire(uint newExpiryBlock);immediateRefund();fundMe()"
aquiladev/browniecoin,contract.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);balanceOf(address who);transfer(address to, uint256 value);allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);transfer(address _to, uint256 _value);balanceOf(address _owner);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);BrownieCoin()"
aquiladev/browniecoin,contracts/contracts/BrownieCoin.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);balanceOf(address who);transfer(address to, uint256 value);allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);transfer(address _to, uint256 _value);balanceOf(address _owner);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);BrownieCoin()"
ethereum/frontier-release,solidity/dao-congress.sol,"transferOwnership(address newOwner);receiveApproval(address _from, uint256 _value, address _token, bytes memory _extraData);transferFrom(address _from, address _to, uint256 _value);addMember(address targetMember, string memory memberName);removeMember(address targetMember);executeProposal(uint proposalNumber, bytes memory transactionBytecode)"
ethereum/ethereum-org,solidity/dao-congress.sol,"transferOwnership(address newOwner);receiveApproval(address _from, uint256 _value, address _token, bytes memory _extraData);transferFrom(address _from, address _to, uint256 _value);addMember(address targetMember, string memory memberName);removeMember(address targetMember);executeProposal(uint proposalNumber, bytes memory transactionBytecode)"
jensenbox/singnet,dao/test/helpers/SingularityNetTokenMock.sol,"SingularityNetTokenMock( address owner, uint256 supply)"
mothershipcx/contracts,contracts/SITExchanger.sol,"SITExchanger(address _sit, address _msp, address _contribution);collect();proxyPayment(address);onTransfer(address, address, uint256);onApprove(address, address, uint256);getBlockNumber();claimTokens(address _token)"
airalab/DAO-IPCI,contracts/Complier.sol,"burn(TokenEmission _token, uint _value)"
flypme/flypme-contracts,contracts/MyFinalizableCrowdsale.sol,MyFinalizableCrowdsale(address _tokenWallet);generateFinalTokens(uint256 ratio)
rchain/Members,membership/contracts/MemberIdentity.sol,"setPrice(uint256 value);setWallet(address addr);activate(uint256 hash);verify(address who, bytes32 factor);bringuPort(address uPortId);getVerifiedHashID(address who, bytes32 factor);revoke(bytes32 factor,address who);revokeMyId(bytes32 factor);revokeAll(bytes32 factor, address who);revokeAllMyId()"
michinbear/solidity,test/compilationTests/MultiSigWallet/Factory.sol,getInstantiationCount(address creator);register(address instantiation)
elementrem/solidity,test/compilationTests/MultiSigWallet/Factory.sol,getInstantiationCount(address creator);register(address instantiation)
vsimetka/MVP,campaign_deployed.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);approveAndCall(address _spender, uint256 _value, bytes _extraData);CampaignToken();seal();sealed();proxyPayment(address _owner);doPayment(address _owner);seal()"
mothershipcx/contracts,etherscan/ReferalsTokenHolder.sol,"totalSupply();totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);Controlled();changeController(address _newController);Burnable();changeBurner(address _newBurner);totalSupplyAt(uint _blockNumber);generateTokens(address _owner, uint _amount);destroyTokens(address _owner, uint _amount);enableTransfers(bool _transfersEnabled);claimTokens(address _token);ReferalsTokenHolder(address _msp);spread(address[] _addresses, uint256[] _amounts);claimTokens(address _token)"
misrab/gethools,testdata/sample.sol,"Sample();function();x(uint a, address b)"
adamdossa/ProfitSharingContract,contracts/MiniMeToken.sol,"proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);Controlled();changeController(address _newController);receiveApproval(address from, uint256 _amount, address _token, bytes _data);transfer(address _to, uint256 _amount);balanceOf(address _owner);approve(address _spender, uint256 _amount);totalSupply();balanceOfAt(address _owner, uint _blockNumber);totalSupplyAt(uint _blockNumber);enableTransfers(bool _transfersEnabled);isContract(address _addr);min(uint a, uint b)"
pipermerriam/ethereum-gas-proxy,contracts/GasProxy.sol,"GasProxy(address _owner, address _target);__kill()"
aragon/aragon-network-token,packages/controller/contracts/interfaces/ITokenController.sol,"proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount)"
robmyers/artworld-ethereum,old/contract/hot_cold.sol,swapHotCold();HotCold()
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app38-deploy_bin_file_with_linkage_to_libraries/contract_and_lib.sol,"insert(Data storage self, uint value);remove(Data storage self, uint value);contains(Data storage self, uint value);register(uint value)"
eris-ltd/eris,tests/jobs_fixtures/app38-deploy_bin_file_with_linkage_to_libraries/contract_and_lib.sol,"insert(Data storage self, uint value);remove(Data storage self, uint value);contains(Data storage self, uint value);register(uint value)"
monax/monax,tests/jobs_fixtures/app38-deploy_bin_file_with_linkage_to_libraries/contract_and_lib.sol,"insert(Data storage self, uint value);remove(Data storage self, uint value);contains(Data storage self, uint value);register(uint value)"
eris-ltd/eris-cli,tests/jobs_fixtures/app38-deploy_bin_file_with_linkage_to_libraries/contract_and_lib.sol,"insert(Data storage self, uint value);remove(Data storage self, uint value);contains(Data storage self, uint value);register(uint value)"
monax/cli,tests/jobs_fixtures/app38-deploy_bin_file_with_linkage_to_libraries/contract_and_lib.sol,"insert(Data storage self, uint value);remove(Data storage self, uint value);contains(Data storage self, uint value);register(uint value)"
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app38-deploy_bin_file_with_linkage_to_libraries/contract_and_lib.sol,"insert(Data storage self, uint value);remove(Data storage self, uint value);contains(Data storage self, uint value);register(uint value)"
tyleryasaka/EtherCred,contracts/EtherCred.sol,approve(address _target);unapprove(uint _index);getApprovalsFor(address _target);disapprove(address _target);undisapprove(uint _index);getDisapprovalsFor(address _target)
redsquirrel/augur-core,src/factories/OrderedSetFactory.sol,"initialize(address _owner);createOrderedSet(Controller _controller, address _owner)"
OpenSTFoundation/SimpleTokenSale,contracts/Processables.sol,Processables();addInternal(address _address);getAddresses();getAddressesSize();lock();approveInternal();completeInternal();disapproveInternal();process(uint256 _from)
boisde/Greed_Island,party/contracts/protocol-viewers/SetTokenViewer.sol,""
ProjectEntropy/contracts,contracts/tokens/EntropyToken.sol,"approveAndCall(address _spender, uint256 _value, bytes _extraData)"
ethermarket/democracy,src/base/api.sol,"addContract(bytes32, address newContract);removeContract(bytes32);apiAuthorized();setApiAddress(address newApi);remove()"
prashantpawar/DisputeResolution,contracts/BrehonContractFactory.sol,BrehonContractFactory();getBrehonContract(bytes32 contractTermsHash)
boisde/Greed_Island,party/contracts/mocks/PositionMock.sol,"initialize(ISetToken _setToken);testHasDefaultPosition(ISetToken _setToken, address _component);testHasExternalPosition(ISetToken _setToken, address _component);testHasSufficientDefaultUnits(ISetToken _setToken, address _component, uint256 _unit);testEditDefaultPosition(ISetToken _setToken, address _component, uint256 _newUnit);testGetDefaultTrackedBalance(ISetToken _setToken, address _component)"
shahankhatch/weifund-contracts,src/contracts/tests/wafr/test.comments.StandardCampaign.sol,"newContribution(address _campaign, uint256 _value);User();setExpiry(uint _expiry);addTimeToExpiry(uint _timeToAdd);setFundingGoal(uint256 _fundingGoal);getNow();setSrc(address _src);setTrg(address _trg);payForward();test_userSetup();test_standardCampaignConstructionValuesFailsDueToNoParameterValidation();test_testableStandardCampaignAbsolvementAfterPayout();test_testablestandardcampaignDeploymentAndUse();test_testableStandardCampaignContribution();test_testableStandardCampaignPayoutToBeneficiary();test_testableStandardCampaignRefund();test_testableContributionCaseExpectFailure();testThrow_testablePayoutCaseShouldBeFailure();test_standardCampaignDeploymentAndUse()"
WeiFund/WeiFund,contracts/WeiController.sol,"newCampaign(uint _campaignID, address _owner, uint _fundingGoal);contribute(uint _campaignID, address _contributor, address _beneficiary, uint _amountContributed);refund(uint _campaignID, address _contributor, uint _amountRefunded);payout(uint _campaignID, uint _amountPaid);totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);newCampaign(string _name, address _beneficiary, uint _fundingGoal, uint _expiry, address _config);contribute(uint _campaignID, address _beneficiary);refund(uint _campaignID, uint _contribution);payout(uint _campaignID);operatorCampaignID(address _operator, uint _campaignIndex);totalCampaignsBy(address _operator);totalContributionsBy(uint _campaignID, address _contributor);totalCampaigns();contributionAt(uint _campaignID, uint _contributionID);createdAt(uint _campaignID);contributionID(uint _campaignID, address _contributor, uint _contributionIndex);ownerOf(uint _campaignID);beneficiaryOf(uint _campaignID);configOf(uint _campaignID);amountRaisedBy(uint _campaignID);fundingGoalOf(uint _campaignID);expiryOf(uint _campaignID);totalContributors(uint _campaignID);isContributor(uint _campaignID, address _contributor);isOwner(uint _campaignID, address _owner);hasFailed(uint _campaignID);isSuccess(uint _campaignID);isActive(uint _campaignID);isPaidOut(uint _campaignID);totalRefunded(uint _campaignID);isRefunded(uint _campaignID);newCampaign(uint _campaignID, address _owner, uint _fundingGoal);contribute(uint _campaignID, address _contributor, address _beneficiary, uint _amountContributed);claimTokens();refund(uint _campaignID, address _contributor, uint _amountRefunded);payout(uint _campaignID, uint _amountPaid)"
Communication-Systems-Group/solidity-examples,example2.sol,get(uint nr)
TruLtd/tru-reputation-token,contracts/supporting/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
immesys/bw2,contracts/alias.sol,"Alias();SetAlias(uint256 k, bytes32 v);CreateShortAlias(bytes32 v)"
maxxflyer/FLOOD,hyperInterface.sol,"hyperInterface();getPartners(address a,uint u);getHyper(address h)"
ChronoBank/LX-SC,contracts/JobController.sol,"hasSkills(address _user, uint _area, uint _category, uint _skills);lockPayment(bytes32 _operationId, address _from);init();setupEventsHistory(address _eventsHistory);setBoardController(address _boardController);setPaymentProcessor(PaymentProcessorInterface _paymentProcessor);setUserLibrary(UserLibraryInterface _userLibrary);calculateLock(address worker, uint _jobId, uint _time, uint _onTop);calculateLockAmount(uint _jobId);calculateLockAmountFor(address worker, uint _jobId);calculatePaycheck(uint _jobId);_calculatePaycheckForTM(uint _jobId);_calculatePaycheckForFixedPrice(uint _jobId);_isValidEstimate(uint _rate, uint _estimate, uint _ontop);_hasSkillsCheck(uint _jobId);_addJobOffer(uint _jobId);_cleanupJobOffers(uint _jobId, address _acceptedOffer);_resumeWork(uint _jobId);_setNewEstimate(uint _jobId, uint16 _additionalTime);acceptWorkResults(uint _jobId);rejectWorkResults(uint _jobId);emitJobOfferPosted(uint _jobId, address _worker, uint _rate, uint _estimate, uint _ontop);emitJobOfferPosted(uint _jobId, address _worker, uint _price);emitJobOfferAccepted(uint _jobId, address _worker);emitStartWorkRequested(uint _jobId, uint _at);emitWorkStarted(uint _jobId, uint _at);emitWorkPaused(uint _jobId, uint _at);emitWorkResumed(uint _jobId, uint _at);emitTimeRequestSubmitted(uint _jobId, uint _time);emitTimeRequestAccepted(uint _jobId, uint _time);emitTimeRequestRejected(uint _jobId, uint _time);emitEndWorkRequested(uint _jobId, uint _at);emitWorkFinished(uint _jobId, uint _at);emitWorkAccepted(uint _jobId, uint _at);emitWorkRejected(uint _jobId, uint _at);emitWorkDistputeResolved(uint _jobId, uint _at);emitPaymentReleased(uint _jobId);emitJobCanceled(uint _jobId);_getJobState(uint _jobId);_isFinishedStateForFlow(uint _flow, uint _jobState);_isStartedStateForFlow(uint _flow, uint _jobState);_isActiveStateForFlow(uint _flow, uint _jobState);_emitErrorCode(uint _errorCode);_emitter()"
enjin/contracts,solidity/contracts/Owned.sol,Owned();transferOwnership(address _newOwner);acceptOwnership()
pooleja/SolidityPlayground,contracts/TokenOwnedFund.sol,TokenOwnedFund();Redeem(ERC20[] assetTokens);withdrawAssetToken(ERC20 assetToken)
TheRougeProject/RougeTokens,contracts/CouponFactory.sol,"balanceOf(address _owner);transfer(address _to, uint256 _value);burn(uint256 _value);test();letsBurn(uint256 _value);kill();createCampaign(address _issuer, uint32 _issuance, uint256 _tokens)"
cryptape/cita,scripts/contracts/src/role_management/RoleCreator.sol,"createRole(bytes32 _name, address[] _permissions)"
trailofbits/greenhorn,grehack-2017/GreHackCoin/GreHackCoin.sol,"Owner();isAuthorized(bytes32 b);FuturOwner();initOwner(address c);changeOwner(address c);isAuthorized(bytes32 b);win();GreHackCoin();buyCoins();getBalance(address u);transfer(address to, uint amount);allowance(address owner, address spender);transferFrom(address _from, address _to, uint256 _value);kill()"
hackerhouseparis/abie,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Fukunaga42/dether,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
aragon/aragon-core,contracts/lib/misc/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address newAddress)
SilentCicero/wafr,src/tests/solidityTests/gasUsage/examples/TorontoRules.sol,""
tomashaber/raiden,raiden/smart_contracts/Standard_Token.sol,""
SilentCicero/wafr,src/tests/solidityTests/gasUsage/examples/HumanStandardTokenDispersal.sol,""
commodityadnetwork/CDX,contracts/Note.sol,""
elementrem/solidity,test/compilationTests/zeppelin/crowdsale/CappedCrowdsale.sol,CappedCrowdsale(uint256 _cap);validPurchase();hasEnded()
SafeContracts/TREX-token,SafecontractsTREXFund.sol,"depositRevenue();calcRevenue(address forAddress);withdrawRevenue();softWithdrawRevenueFor(address forAddress);setup(address safecontractsTREXCrowdfundingAddress, address safecontractsTREXTokenAddress);SafecontractsTREXFund()"
DRI-project/RICO,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address newAddress)
coder-forge/chain-forge,contracts/Forge.sol,Forge();getBalance();payOrganizer();setName(bytes32 name);setOrganiser(address organiser);setUrl(bytes32 url);kill()
iam-dev/ERC23,installed_contracts/zeppelin-solidity/test/mocks/PausableMock.sol,PausableMock();normalProcess();drasticMeasure()
yuqingc/notebook1,bc/test.sol,"set(uint x);get();Coin();mint(address receiver, uint amount);send(address receiver, uint amount)"
faulteh/ethereum-talk-taslug-sept2015,code/hello.sol,mortal();kill();greeter(string _greeting);greet()
lucywe/rootcore-crowdsale,solidity/contracts/Managed.sol,Managed();transferManagement(address _newManager);acceptManagement()
acebusters/safe-token-sale,test/helpers/ProxyMock.sol,"ProxyMock();forward(address _destination, uint _value, bytes _data);tokenFallback(address _from, uint _value, bytes _data)"
RyuuGan/sol-merger,test/compiled/ContactWithKeywordsInsideString.sol,setA(uint _a);getA();thisContractWillNotBeCorrectlyMerged();setB(uint _b);getB()
SilentCicero/wafr,src/tests/solidityTests/increaseBlockBy/test.increaseBlockBy.sol,setup();test_startBlock();test_someTest();test_someOtherFalseTest()
dltdojo/courses,ethereum/service/oracle/T120_Oraclize.sol,"ExampleContract();__callback(bytes32 myid, string result);updatePrice()"
holiman/cpp-ethereum,test/unittests/performance/bop.sol,bop()
ethereum/cpp-ethereum,test/unittests/performance/bop.sol,bop()
winsvega/cpp-ethereum,test/unittests/performance/bop.sol,bop()
acebusters/safe-token-sale,contracts/ownership/Ownable.sol,Ownable();transferOwnership(address newOwner)
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/introspection/SupportsInterfaceWithLookup.sol,supportsInterface(bytes4 _interfaceId);_registerInterface(bytes4 _interfaceId)
chevdor/testrpc,test/EstimateGas.sol,"EstimateGas();add(bytes32 _name, bytes32 _description, uint _value);transfer(address _to, uint _value, bytes32 _name)"
Lyniat/hackaburg17-smartcontracts,backend_server/node_modules/ethereumjs-testrpc/test/EstimateGas.sol,"EstimateGas();add(bytes32 _name, bytes32 _description, uint _value);transfer(address _to, uint _value, bytes32 _name)"
crypto-coder/Tokens,Token_Contracts/contracts/LinearDecayingTokenFunction.sol,"LinearDecayingTokenFunction();getFunctionType();executeDecayFunction(uint256 _amount, int256 _rangeLength, int256 _distanceInRange, uint256 _startPercent, uint256 _endPercent)"
JoelStuart/COMS4507,js/ballot.sol,Ballot();addCandidate(bytes32 candidate);getCandidateList();startVoting();finishVoting();getPhase();addVoter(address voter);totalVotesFor(bytes32 candidate);vote(bytes32 candidate);validCandidate(bytes32 candidate);calculateWinner();getWinner()
melonproject/protocol,contracts/mock/WETH.sol,"deposit();withdraw(uint256 wad);totalSupply();approve(address guy, uint256 wad);transfer(address dst, uint256 wad)"
SafecontractDev/protocol,contracts/bancor_contracts/Managed.sol,Managed();transferManagement(address _newManager);acceptManagement()
Veterapreneur/VeteranCoin,contracts/VeteranCoinFree.sol,"mul(uint a, uint b);div(uint a, uint b);sub(uint a, uint b);add(uint a, uint b);owned();transferOwnership(address _newOwner);balanceOf(address owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);burn(uint256 value);VeteranCoinFree(token _addressOfTokenReward);donation(address grantor);tokenGiveAway();balanceOf(address _beneficiary);refundDonation(address _beneficiary);closeGiveAway();openGiveAway();checkGivenAway();safeWithdrawal();giveAwayInProgress();autoBurn()"
ethereum/remix,remix-tests/tests/examples_1/simple_storage_test.sol,beforeAll();shouldTriggerOneFail();shouldTriggerOnePass()
WeiFund/WeiFund,contracts/CampaignAccountFactory.sol,"newCampaign(string _name, address _beneficiary, uint _fundingGoal, uint _expiry, address _config);contribute(uint _campaignID, address _beneficiary);refund(uint _campaignID, uint _contribution);payout(uint _campaignID);operatorCampaignID(address _operator, uint _campaignIndex);totalCampaignsBy(address _operator);totalContributionsBy(uint _campaignID, address _contributor);totalCampaigns();contributionAt(uint _campaignID, uint _contributionID);createdAt(uint _campaignID);contributionID(uint _campaignID, address _contributor, uint _contributionIndex);ownerOf(uint _campaignID);beneficiaryOf(uint _campaignID);configOf(uint _campaignID);amountRaisedBy(uint _campaignID);fundingGoalOf(uint _campaignID);expiryOf(uint _campaignID);totalContributors(uint _campaignID);isContributor(uint _campaignID, address _contributor);isOwner(uint _campaignID, address _owner);hasFailed(uint _campaignID);isSuccess(uint _campaignID);isPaidOut(uint _campaignID);totalRefunded(uint _campaignID);isRefunded(uint _campaignID);register(uint _campaignID, address _account);accountOf(uint _campaignID);campaignOf(address _account);newCampaignAccount(uint _campaignID)"
DigixGlobal/ethereum-ruby,contracts/GenericRegistry.sol,isAdmin(address _acct);getConfigAddress()
EthWorks/ethereum.rb,contracts/GenericRegistry.sol,isAdmin(address _acct);getConfigAddress()
marekkirejczyk/ethereum.rb,contracts/GenericRegistry.sol,isAdmin(address _acct);getConfigAddress()
smartlawye-rs/dapp-bin,provenance/provenance.sol,"createNewCertifier();certify(address targetCertifier);createProducer(bytes32 desc, uint phone, bytes32 name);addProducer(bytes32 desc, uint phone, byte name)"
Majoolr/ethereum-libraries,VestingLib/truffle/contracts/VestingLib.sol,"initializeETHBalance(VestingStorage storage self, uint256 _balance);initializeTokenBalance(VestingStorage storage self, CrowdsaleToken token, uint256 _balance);unregisterUser(VestingStorage storage self, address _registrant);unregisterUsers(VestingStorage storage self, address[] _registrants);swapRegistration(VestingStorage storage self, address _replacementRegistrant);calculateWithdrawal(VestingStorage storage self, address _beneficiary);withdrawETH(VestingStorage storage self);withdrawTokens(VestingStorage storage self,CrowdsaleToken token);sendETH(VestingStorage storage self, address _beneficiary);sendTokens(VestingStorage storage self,CrowdsaleToken token, address _beneficiary);ownerWithdrawExtraETH(VestingStorage storage self);ownerWithdrawExtraTokens(VestingStorage storage self, CrowdsaleToken token);getPercentReleased(VestingStorage storage self)"
SerCeMan/intellij-solidity,src/test/resources/fixtures/parser/destructuring.sol,MyToken()
SilentCicero/wafr,src/tests/solidityTests/testLogs/test.logs.sol,test_logs()
adklempner/solidity-license,contracts/zeppelin/crowdsale/CappedCrowdsale.sol,CappedCrowdsale(uint256 _cap);validPurchase();hasEnded()
onyb/ethane,core/contracts/CappedCrowdsale.sol,CappedCrowdsale(uint256 _cap);validPurchase();hasEnded()
dmx374/zeppelin-solidity,contracts/crowdsale/CappedCrowdsale.sol,CappedCrowdsale(uint256 _cap);validPurchase();hasEnded()
adamdossa/ProfitSharingContract,installed_contracts/zeppelin/contracts/crowdsale/CappedCrowdsale.sol,CappedCrowdsale(uint256 _cap);validPurchase();hasEnded()
cgewecke/solcover,test/sources/if/if-with-brackets.sol,a(uint x)
JoinColony/solcover,test/sources/if/if-with-brackets.sol,a(uint x)
kleroterion/dapp,contracts/Arbitrated/ArbitratedBuy.sol,"arbitratedBuy(uint256 _price, uint32 _daysToOppose, Court _court, uint256 _timeToReac);pay();actionA(uint256 _disputeID);actionB(uint256 _disputeID);releaseToSeller();releaseToBuyer();block();withdrawAfterTime()"
batlinal/ftt,test/TestServiceToken.sol,testUnexpiredBalance();testExpiredBalance()
Bit-Nation/BitnationApplications,Map/map.sol,updateMe(string location);getCitizenLocation(address citizen);getNbCitizensLocation(string location);isRegistered(address citizen)
adridadou/eth-propeller-core,src/test/resources/c1.sol,""
youvegoteth/youvegoteth.github.io,contracts/contracts/zeppelin/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
zchn/ethereum-analyzer,examples/co2.unica.it/ethereum/GaslessSend_42.sol,"pay(uint n, address d);a();b();c();d();e();f();g();h();i();k();j();l();m();n();o();p();q();r();s();t();u();v();w();x();y();z()"
DigixGlobal/ethereum-ruby,contracts/VendorRegistry.sol,"VendorRegistry(address _conf);register(address _acct);unregister(address _acct);isVendor(address _acct);setVendorName(address _vendor, bytes32 _name);getVendorName(address _vendor)"
EthWorks/ethereum.rb,contracts/VendorRegistry.sol,"VendorRegistry(address _conf);register(address _acct);unregister(address _acct);isVendor(address _acct);setVendorName(address _vendor, bytes32 _name);getVendorName(address _vendor)"
marekkirejczyk/ethereum.rb,contracts/VendorRegistry.sol,"VendorRegistry(address _conf);register(address _acct);unregister(address _acct);isVendor(address _acct);setVendorName(address _vendor, bytes32 _name);getVendorName(address _vendor)"
SilentCicero/wafr,src/tests/solidityTests/boardroom/test.assertTrueBoardRoom.sol,test_setupBoardRoomAndAssert()
papyrusglobal/smartcontracts,contracts/channel/EndpointRegistryContract.sol,"registerEndpoint(string socket);findEndpointByAddress(address owner);equals(string a, string b)"
ericvrp/SoliditySandbox,app/src/contracts/mortal.sol,kill()
Arctek/eth_splitter,contracts/Splitter.sol,"split(address recipient1, address recipient2);withdraw()"
qingche123/DNA,vm/evm/test_case/deal/deal.sol,Deal();releasePayment();getReceiver();getSigner();getBalance()
luodanwg/DNA,vm/evm/test_case/deal/deal.sol,Deal();releasePayment();getReceiver();getSigner();getBalance()
dreamfly281/DNA,vm/evm/test_case/deal/deal.sol,Deal();releasePayment();getReceiver();getSigner();getBalance()
CoinOffering/CoinOffering.Dapp,contracts/ICO.sol,"transfer(address _to, uint256 _value);balanceOf(address acc);ICO();weiToEther(uint _wei);etherToWei(uint _ether);weiToFinney(uint _wei);finneyToWei(uint _finney);changeOwner(address _newOwner);setManager(address _newManager);removeManager(address _manager);setNewPriceInFinney(uint _priceToBuyInFinney);getPriceChange(uint _index);buyTokens(uint _quantity, uint _priceToBuyInFinney);transferTokensTo(address _to, uint _quantity);transferAllTokensToOwner();transferTokensToContractOwner(uint _quantity);withdraw(uint _sumToWithdrawInFinney);withdrawAllToOwner()"
energychain/StromDAO-BusinessObject,smart_contracts/StromDAO-BO-HyS.sol,"transferOwnership(address newOwner);receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);storeReading(uint256 _reading);setOracle(address _oracle);incValue(uint256 _value);setValue(uint256 _value);setName(string _name);transfer(address _to, uint256 _value);setOracle(address _oracle);setTotalSupply(uint256 _totalSupply);setMaxSupply(uint256 _maxSupply);setInvest(uint256 _invest);incValue(uint256 _value);setValue(uint256 _value);transfer(address _to, uint256 _value);addToken(ApexToken _token);removeToken(uint256 _idx);storeReading(uint256 _reading);addAssetValue(ApexToken target,uint256 value_increase);setAssetValue(ApexToken target,uint256 _value);createAndActivateToken(uint256 _initialSupply,address _oracle,uint256 _valuation);addTokenValue(ApexToken _token,uint256 _value);setRecommendedToken(uint256 idx);setPreferedToken(ApexToken _token);transferTokenOwnership(ApexToken _token);assignOracle(address _oracle,address _account,uint256 _valuation);commission(address account,address oracle,uint256 value_energy,uint256 value_time,uint256 power,uint256 time)"
attrox/automi,test/truffle/TestUsers.sol,testUser()
WeTrustPlatform/rosca-contracts,contracts/test/deps/SafeMath.sol,"safeMul(uint a, uint b);safeDiv(uint a, uint b);safeSub(uint a, uint b);safeAdd(uint a, uint b);assert(bool assertion)"
Upchain/upchain-hackathon-starterpack,contracts/SampleRecipientSuccess.sol,"receiveApproval(address _from, uint256 _value, address _tokenContract, bytes _extraData)"
crypto-coder/Tokens,Token_Contracts/contracts/SampleRecipientSuccess.sol,"receiveApproval(address _from, uint256 _value, address _tokenContract, bytes _extraData)"
belprixx/Master_camp,test_simple/voteCoin.sol,"receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);transfer(address _to, uint256 _value);approve(address _spender, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);transferFrom(address _from, address _to, uint256 _value);burn(uint256 _value);burnFrom(address _from, uint256 _value)"
duaraghav8/Solium,test/lib/rules/indentation/reject/struct.sol,setFoo(uint _foo)
alice-si/contracts,contracts/alice/ProjectCatalog.sol,"addProject(string _name, address _projectAddress);getProjectAddress(string _name)"
willdavidc/prometh,truffle/contracts/dummyAgent.sol,promethCost();promethExecute()
Souptacular/motivate-dapp,contracts/libraries/tasks.sol,"validate(uint taskID, bytes data);validate(Task storage self, bytes validationData);complete(taskList storage self, uint ID, bytes validationData);append(taskList storage self, Task storage newTask);add(taskList storage self, Task storage newTask);remove(taskList storage self, uint80 _index);find(taskList storage self, uint ID);clean(taskList storage self);iterate_start(taskList storage self);iterate_valid(taskList storage self, uint80 _index);iterate_prev(taskList storage self, uint80 _index);iterate_next(taskList storage self, uint80 _index);iterate_getID(taskList storage self, uint80 _index)"
GovernX/governx-contracts,src/contracts/FutarchyController.sol,"getOutcome();FutarchyController(address _proxy, address[] _members, FutarchyOracleFactory _factory);canPropose(address _sender, uint256 _proposalID);canExecute(address _sender, uint256 _proposalID);votingWeightOf(address _sender, uint256 _proposalID, uint256 _index, uint256 _data)"
SilentCicero/ethdeploy,src/tests/contracts/SimpleStore.sol,setStore(uint256 _value);getValue()
PeculiumPCL/Peculium,contracts/v0.1/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
saikyerubandi/smart-contract-beginner,contracts/PiggyBank.sol,PiggyBank();deposit(uint amount);withdraw(uint amount);checkBalance(address owner);checkBalance()
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/test/helpers/VestedTokenMock.sol,"VestedTokenMock(address initialAccount, uint256 initialBalance)"
Dicoiner/irianna-solidity,test/helpers/VestedTokenMock.sol,"VestedTokenMock(address initialAccount, uint256 initialBalance)"
pz7/liquet,node_modules/zeppelin-solidity/test/helpers/VestedTokenMock.sol,"VestedTokenMock(address initialAccount, uint256 initialBalance)"
dmx374/zeppelin-solidity,test/helpers/VestedTokenMock.sol,"VestedTokenMock(address initialAccount, uint256 initialBalance)"
rootprojectco/backend,contracts/IouRootsToken.sol,"mint(address _to, uint256 _amount);finishMinting();mintInternal(address _to, uint256 _amount);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);buyTokens(address beneficiary);forwardFunds()"
bkrem/educhain,chain/contracts/User.sol,associateWithTaskAddress(address _taskAddr);associateWithTeam(bytes32 _teamname);hasTeam();getUserTaskAtIndex(uint _idx)
matthiaszimmermann/web3j_tests,resources/solidity/Savings.sol,"Savings(uint limitWei, uint periodSeconds);withdraw(uint amountWei);kill()"
iurimatias/embark-framework,dapps/tests/contracts/contracts/another_storage.sol,""
BSDStudios/parity,js/src/contracts/snippets/wallet.sol,"multiowned(address[] _owners, uint _required);revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);getOwner(uint ownerIndex);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);reorganizeOwners();clearPending();daylimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today();changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);Wallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);clearPending()"
immartian/musicoin,js/src/contracts/snippets/wallet.sol,"multiowned(address[] _owners, uint _required);revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);getOwner(uint ownerIndex);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);reorganizeOwners();clearPending();daylimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today();changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);Wallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);clearPending()"
jesuscript/parity,js/src/contracts/snippets/wallet.sol,"multiowned(address[] _owners, uint _required);revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);getOwner(uint ownerIndex);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);reorganizeOwners();clearPending();daylimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today();changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);Wallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);clearPending()"
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app05-deploy_query_contracts_and_testing_rendering_solc_int_type/storage.sol,set(int x);get()
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app23-save_tx_hash_of_call/storage.sol,set(int x);get()
eris-ltd/eris,tests/jobs_fixtures/app05-deploy_query_contracts_and_testing_rendering_solc_int_type/storage.sol,set(int x);get()
eris-ltd/eris,tests/jobs_fixtures/app23-save_tx_hash_of_call/storage.sol,set(int x);get()
monax/monax,tests/jobs_fixtures/app23-save_tx_hash_of_call/storage.sol,set(int x);get()
monax/monax,tests/jobs_fixtures/app05-deploy_query_contracts_and_testing_rendering_solc_int_type/storage.sol,set(int x);get()
eris-ltd/eris-cli,tests/jobs_fixtures/app23-save_tx_hash_of_call/storage.sol,set(int x);get()
eris-ltd/eris-cli,tests/jobs_fixtures/app05-deploy_query_contracts_and_testing_rendering_solc_int_type/storage.sol,set(int x);get()
monax/cli,tests/jobs_fixtures/app23-save_tx_hash_of_call/storage.sol,set(int x);get()
monax/cli,tests/jobs_fixtures/app05-deploy_query_contracts_and_testing_rendering_solc_int_type/storage.sol,set(int x);get()
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app23-save_tx_hash_of_call/storage.sol,set(int x);get()
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app05-deploy_query_contracts_and_testing_rendering_solc_int_type/storage.sol,set(int x);get()
adklempner/solidity-license,contracts/zeppelin/ownership/Claimable.sol,transferOwnership(address newOwner);claimOwnership()
adamdossa/ProfitSharingContract,installed_contracts/zeppelin/contracts/ownership/Claimable.sol,transferOwnership(address newOwner);claimOwnership()
maxweng/oracleit-examples,contracts/EthCnyPrice.sol,"EthCnyPrice();queryPrice();__callback(uint id, string result)"
drupalnomad/ethereum-contracts,mailbox.sol,"send(address recipient, bytes message)"
BeBlockTech/Anemoi,BeBlock-Master/WePowerPresaleContractAudit-master/audit/test/ERC20.sol,"transfer(address _to, uint256 _amount);balanceOf(address _owner);approve(address _spender, uint256 _amount);totalSupply()"
BeBlockTech/Anemoi,BeBlock-Master/WePowerPresaleContractAudit-master/contracts/ERC20.sol,"transfer(address _to, uint256 _amount);balanceOf(address _owner);approve(address _spender, uint256 _amount);totalSupply()"
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.4.24/loops.sol,fnWithForLoop(uint index);fnWithWhileLoop(uint index);fnWithDoWhileLoop(uint index)
boisde/Greed_Island,party/contracts/mocks/ContractCallerMock.sol,""
WishFinanceCom/WF-contracts,contracts/helpers/FakeCoin3.sol,""
Neufund/Contracts,contracts/lib/Multisig.sol,"execute(address _to, uint _value, bytes _data);confirm(bytes32 _id)"
Jake-Gillberg/git-vote,contracts/TestERC20.sol,"safeMul(uint a, uint b);safeSub(uint a, uint b);safeAdd(uint a, uint b);assert(bool assertion);balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);balanceOf(address _owner);approve(address _spender, uint _value);allowance(address _owner, address _spender)"
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/contracts/token/TokenTimelock.sol,"TokenTimelock(ERC20Basic _token, address _beneficiary, uint64 _releaseTime);claim();release()"
readevalprint/aragon-core,contracts/zeppelin/token/TokenTimelock.sol,"TokenTimelock(ERC20Basic _token, address _beneficiary, uint64 _releaseTime);claim();release()"
pz7/liquet,node_modules/zeppelin-solidity/contracts/token/TokenTimelock.sol,"TokenTimelock(ERC20Basic _token, address _beneficiary, uint64 _releaseTime);claim();release()"
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/token/TokenTimelock.sol,"TokenTimelock(ERC20Basic _token, address _beneficiary, uint64 _releaseTime);claim();release()"
dmx374/zeppelin-solidity,contracts/token/TokenTimelock.sol,"TokenTimelock(ERC20Basic _token, address _beneficiary, uint64 _releaseTime);claim();release()"
cashpokerpro-dev/cash-smartcontracts,contracts/token/TokenTimelock.sol,"TokenTimelock(ERC20Basic _token, address _beneficiary, uint64 _releaseTime);claim();release()"
cinderblockchain/cindertoken,contracts/token/TokenTimelock.sol,"TokenTimelock(ERC20Basic _token, address _beneficiary, uint64 _releaseTime);claim();release()"
loiluu/peacerelay,contracts/RLP.sol,"next(Iterator memory self);next(Iterator memory self, bool strict);hasNext(Iterator memory self);toRLPItem(bytes memory self);toRLPItem(bytes memory self, bool strict);isNull(RLPItem memory self);isList(RLPItem memory self);isData(RLPItem memory self);isEmpty(RLPItem memory self);items(RLPItem memory self);iterator(RLPItem memory self);toBytes(RLPItem memory self);toData(RLPItem memory self);toList(RLPItem memory self);toAscii(RLPItem memory self);toUint(RLPItem memory self);toBool(RLPItem memory self);toByte(RLPItem memory self);toInt(RLPItem memory self);toAddress(RLPItem memory self);_payloadOffset(RLPItem memory self);_itemLength(uint memPtr);_decode(RLPItem memory self);_copyToBytes(uint btsPtr, bytes memory tgt, uint btsLen);_validate(RLPItem memory self)"
mhhf/dapple,constants/template_test.sol,setUp();testSomething()
nexusdev/dapple,constants/template_test.sol,setUp();testSomething()
Fermion-Project/Light-Wallet,source_gnosis/contracts/TestToken.sol,"issueTokens(address _to, uint256 _value);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);balanceOf(address _owner)"
orbro/eth-enablers,simpleAuction.sol,bid();withdraw();auctionEnd()
iam-dev/ERC23,installed_contracts/zeppelin-solidity/contracts/crowdsale/Crowdsale.sol,"Crowdsale(uint256 _startTime, uint256 _endTime, uint256 _rate, address _wallet);createTokenContract();buyTokens(address beneficiary);forwardFunds();validPurchase();hasEnded()"
status-im/status-network-token,contracts/test/SNTMock.sol,SNTMock(address _tokenFactory);getBlockNumber();setMockedBlockNumber(uint _b)
descampsk/wavevote,WaveVote_Contracts/LocalCrypto.sol,"invmod(uint a, uint p);expmod(uint b, uint e, uint m);onCurve(uint[2] P);isPubKey(uint[2] memory P);isPubKey(uint[3] memory P);validateSignature(bytes32 message, uint[2] rs, uint[2] Q);compress(uint[2] P);decompress(uint8 yBit, uint x);_add(uint[3] memory P, uint[3] memory Q);_addMixed(uint[3] memory P, uint[2] memory Q);_addMixedM(uint[3] memory P, uint[2] memory Q);_double(uint[3] memory P);_doubleM(uint[3] memory P);_mul(uint d, uint[2] memory P);LocalCrypto();createZKP(uint x, uint v, uint[2] xG);createZKPNullVote(uint x, uint v, uint[2] yG);submod(uint a, uint b);verifyZKP(uint[2] xG, uint r, uint[3] vG);verifyZKPNullVote(uint[2] xG, uint[2] yG, uint[2] voteNull, uint r, uint[3] vG, uint[3] vH);createNullVote(uint[2] yG, uint x);checkVote(uint x, uint[2] yG, uint[2] voteCrypted, uint totalVoter, uint totalCandidat);createVote(uint[2] yG, uint x, uint choice, uint totalVoters);buildVotingPrivateKey(uint aPrivateKey, uint[2] bPublicKey);generateZKP(uint[5] res1D, uint[2][2] res2D, uint[2][] diAndriList);verifyZKPVote(uint[2] res1D, uint[3] y, uint[2][2] res2D, uint[2][] diAndriList, uint[2][10] aList,  uint[2][10] bList)"
GovernX/governx-contracts,src/contracts/OpenControllerFactory.sol,createProxy();createController(address _proxy)
RyuuGan/sol-merger,test/contracts/RenamedImports.sol,MyOwned()
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/contract_names/contracts/contract.sol,""
michinbear/solidity,test/compilationTests/gnosis/Oracles/SignedMessageOracle.sol,"SignedMessageOracle(bytes32 _descriptionHash, uint8 v, bytes32 r, bytes32 s);replaceSigner(address newSigner, uint _nonce, uint8 v, bytes32 r, bytes32 s);setOutcome(int _outcome, uint8 v, bytes32 r, bytes32 s);isOutcomeSet();getOutcome()"
elementrem/solidity,test/compilationTests/gnosis/Oracles/SignedMessageOracle.sol,"SignedMessageOracle(bytes32 _descriptionHash, uint8 v, bytes32 r, bytes32 s);replaceSigner(address newSigner, uint _nonce, uint8 v, bytes32 r, bytes32 s);setOutcome(int _outcome, uint8 v, bytes32 r, bytes32 s);isOutcomeSet();getOutcome()"
commodityadnetwork/CDX,contracts/Stoppable.sol,stop();start()
dcntrlzd/helios,test/contracts/lib/Branch.sol,""
OpenSTFoundation/SimpleTokenSale,contracts/ERC20Token.sol,"name();symbol();decimals();totalSupply();balanceOf(address _owner);allowance(address _owner, address _spender);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value)"
EMAXio/cosigner,cosigner-ethereum-token-storage/SolidityContracts/V4/dappsys/ds-token/token.sol,"DSToken(bytes32 symbol_);transfer(address dst, uint wad);approve(address guy, uint wad);push(address dst, uint128 wad);pull(address src, uint128 wad);mint(uint128 wad);burn(uint128 wad);setName(bytes32 name_)"
Braveno/cosigner,cosigner-ethereum-token-storage/SolidityContracts/V4/dappsys/ds-token/token.sol,"DSToken(bytes32 symbol_);transfer(address dst, uint wad);approve(address guy, uint wad);push(address dst, uint128 wad);pull(address src, uint128 wad);mint(uint128 wad);burn(uint128 wad);setName(bytes32 name_)"
EMAXio/heimdal,cosigner-ethereum-token-storage/SolidityContracts/V4/dappsys/ds-token/token.sol,"DSToken(bytes32 symbol_);transfer(address dst, uint wad);approve(address guy, uint wad);push(address dst, uint128 wad);pull(address src, uint128 wad);mint(uint128 wad);burn(uint128 wad);setName(bytes32 name_)"
eris-ltd/eris-db,tests/jobs_fixtures/app54-static-call/AdoptionTest.sol,adopt(uint petId);getAdopters();adopters(uint);testGetAdopterAddressByPetId()
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/ownership/NoOwner.sol,""
Morgan-iv/Main-source-folder,Solidity/hello.sol,kill();greet();mygreet()
WishFinanceCom/WF-contracts,contracts/helpers/WFPlatformTestable.sol,"transfer(address _to, uint _value, bytes32 _symbol);transferWithReference(address _to, uint _value, bytes32 _symbol, string _reference);approve(address _spender, uint _value, bytes32 _symbol);transferFrom(address _from, address _to, uint _value, bytes32 _symbol);transferFromWithReference(address _from, address _to, uint _value, bytes32 _symbol, string _reference)"
montyly/manticore,tests/ethereum/contracts/consensys_benchmark/assert_multitx_2.sol,Benchmark(uint256 _param);run();set(uint256 _param)
trailofbits/manticore,tests/ethereum_bench/consensys_benchmark/assert_multitx_2.sol,Benchmark(uint256 _param);run();set(uint256 _param)
duaraghav8/Solium,test/lib/rules/blank-lines/accept/contract-single.sol,""
silasdavis/eris-db,tests/compilers_fixtures/contractImport3.sol,getMappingElement(uint a)
silasdavis/burrow,tests/compilers_fixtures/contractImport3.sol,getMappingElement(uint a)
tomlion/randao,contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
robmyers/artworld-ethereum,dapps/staking-ratio/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
Health-Nexus/drs,contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
randao/randao,contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
LoRexxar/Cobra-W,tests/vul_sol/notsuanshuyichu.sol,"Ownable();transferOwnership(address newOwner);transfer(address _to, uint256 _value);balanceOf(address _owner);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);allowTransfer();mint(address _to, uint256 _value);finishMinting();burn(uint256 _value);burnFrom(address _from, uint256 _value)"
assetize/madagascar,test/sample_contracts/simplecoin.sol,"SimpleCoin();issue(address recipient, uint32 amount);balanceOf(address holder);transferTo(address recipient, uint32 amount)"
OpenSTFoundation/SimpleTokenSale,contracts/ERC20Interface.sol,"name();symbol();decimals();totalSupply();balanceOf(address _owner);allowance(address _owner, address _spender);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value)"
acebusters/safe-token-sale,contracts/ERC223ReceivingContract.sol,"tokenFallback(address _from, uint _value, bytes _data)"
bcosorg/bcos,systemcontractv2/TransactionFilterChain.sol,"process(address origin, address from, address to, string func, string input);addFilter(address filter/*, string desc*/);delFilter(uint index);setFilter(uint index, address filter);getFilter(uint index);getFiltersLength()"
TrueBitFoundation/webasm-solidity,contracts/memory.sol,"Input();getRoot();getLeaf(uint loc);expand();setLeaf(uint loc, bytes32 v)"
PlutusIt/PlutusDEX,contracts/NameReg.sol,"reserve(string _name);owner(string _name);transfer(string _name, address _newOwner);setAddr(string _name, address _addr);addr(string _name);setContent(string _name, bytes32 _content);content(string _name);setSubRegistrar(string _name, address _subRegistrar);subRegistrar(string _name);disown(string _name)"
xeon0413/xeon0413.github.io,billi.sol,"sendMsg(address aim, string from_text);getMsg()"
trailofbits/greenhorn,grehack-2017/casino/casino.sol,"bet();sendNumber(uint16 random_number, address player_address);guessNumber(uint16 guess)"
soad003/browser-solidity,test/staticanalysis/test-contracts/assembly.sol,at(address _addr);bla()
airalab/DAO-IPCI,contracts/BuilderDocs.sol,create(address _client)
Souptacular/motivate-dapp,contracts/goal.sol,"Goal();addTask(bytes ipfs, uint start, uint end, address validator, uint penalty, uint reward, uint freq);completeTask(uint index);checkFunding();getIpfs(uint ID);getStart(uint ID);getEnd(uint ID);getReward(uint ID);getFrequency(uint ID)"
shahankhatch/dapp-bin,registrar/FixedFeeRegistrar.sol,"owner(string _name);addr(string _name);subRegistrar(string _name);content(string _name);reserve(string _name);disown(string _name, address _refund);transfer(string _name, address _newOwner);setAddr(string _name, address _a);setSubRegistrar(string _name, address _registrar);setContent(string _name, bytes32 _content);record(string _name);addr(string _name);subRegistrar(string _name);content(string _name);owner(string _name);m_record(string _name)"
LianaHus/dapp-bin,registrar/FixedFeeRegistrar.sol,"owner(string _name);addr(string _name);subRegistrar(string _name);content(string _name);reserve(string _name);disown(string _name, address _refund);transfer(string _name, address _newOwner);setAddr(string _name, address _a);setSubRegistrar(string _name, address _registrar);setContent(string _name, bytes32 _content);record(string _name);addr(string _name);subRegistrar(string _name);content(string _name);owner(string _name);m_record(string _name)"
RepublicMaster/dapp-bin,registrar/FixedFeeRegistrar.sol,"owner(string _name);addr(string _name);subRegistrar(string _name);content(string _name);reserve(string _name);disown(string _name, address _refund);transfer(string _name, address _newOwner);setAddr(string _name, address _a);setSubRegistrar(string _name, address _registrar);setContent(string _name, bytes32 _content);record(string _name);addr(string _name);subRegistrar(string _name);content(string _name);owner(string _name);m_record(string _name)"
vaporry/dapp-bin,registrar/FixedFeeRegistrar.sol,"owner(string _name);addr(string _name);subRegistrar(string _name);content(string _name);reserve(string _name);disown(string _name, address _refund);transfer(string _name, address _newOwner);setAddr(string _name, address _a);setSubRegistrar(string _name, address _registrar);setContent(string _name, bytes32 _content);record(string _name);addr(string _name);subRegistrar(string _name);content(string _name);owner(string _name);m_record(string _name)"
alice-si/contracts,contracts/alice/Privileged.sol,"createPrivilege(string _privilegeName, address _owner, address _controller);revokePrivilege(string _privilegeName);transferPrivilege(string _privilege, address _newOwner)"
montyly/manticore,tests/ethereum/contracts/consensys_benchmark/integer_overflow_mapping_struct.sol,init(uint256 k)
trailofbits/manticore,tests/ethereum_bench/consensys_benchmark/integer_overflow_mapping_struct.sol,init(uint256 k)
DroneEmployee/contracts,interface/ros_interface.sol,"setRoute(RouteResponse route);makeRoute(Checkpoint[] _checkpoints);dropRoute(uint32 id);SatFix(int256 _latitude, int256 _longitude, int256 _altitude);Checkpoint(SatFix _position, uint32 _azimuth, uint32 _duration);RouteRequest(Checkpoint[] _checkpoints, uint32 _id);RouteResponse(bool _valid, uint32 _id, SatFix[] _route)"
cslarson/exchange,contracts/SafeMath.sol,"safeMul(uint a, uint b);safeSub(uint a, uint b);safeAdd(uint a, uint b);safeDiv(uint a, uint b)"
onyb/ethane,core/contracts/Crowdsale.sol,"Crowdsale(uint256 _startBlock, uint256 _endBlock, uint256 _rate, address _wallet);createTokenContract();buyTokens(address beneficiary);forwardFunds();validPurchase();hasEnded()"
LianaHus/dapp-bin,standardized_contract_apis/exchange.sol,"sendCoinFrom(address _from, uint _val, address _to);sendCoin(uint _val, address _to);placeOrder(address _offerCurrency, uint256 _offerValue, address _wantCurrency, uint256 _wantValue);claimOrder(uint256 _offerId);deleteOrder(uint256 _offerId)"
ethereum/dapp-bin,standardized_contract_apis/exchange.sol,"sendCoinFrom(address _from, uint _val, address _to);sendCoin(uint _val, address _to);placeOrder(address _offerCurrency, uint256 _offerValue, address _wantCurrency, uint256 _wantValue);claimOrder(uint256 _offerId);deleteOrder(uint256 _offerId)"
vaporry/dapp-bin,standardized_contract_apis/exchange.sol,"sendCoinFrom(address _from, uint _val, address _to);sendCoin(uint _val, address _to);placeOrder(address _offerCurrency, uint256 _offerValue, address _wantCurrency, uint256 _wantValue);claimOrder(uint256 _offerId);deleteOrder(uint256 _offerId)"
Morgan-iv/Main-source-folder,Solidity/Storage.sol,set(uint256 data);get()
daostack/daostack,contracts/test/BadERC20.sol,"transfer(address _to, uint256 _value);transferFrom(address, address _to, uint256 _value);approve(address _spender, uint256 _value)"
d-jo/cycle,src/token.sol,"owned();transferOwnership(address newOwner);totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _amount);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);AIToken();totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _amount);approve(address _spender, uint256 _amount);allowance(address _owner, address _spender)"
tomashaber/raiden,raiden/smart_contracts/Utils.sol,contractExists(address channel)
Dobrokhvalov/eth2phone,contracts/Stoppable.sol,stop()
CMLTeam/ICOsurance,truffle/contracts/CoolICOToken.sol,"CoolICOToken();totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _amount);approve(address _spender, uint256 _amount);allowance(address _owner, address _spender)"
erooijak/ethlance,resources/public/contracts/src/messageLibrary.sol,""
daostack/daostack,contracts/utils/Redeemer.sol,"contributionRewardRedeem(ContributionReward _contributionReward, bytes32 _proposalId, Avatar _avatar);contributionRewardExtRedeem(ContributionRewardExt _contributionRewardExt, bytes32 _proposalId)"
DroneEmployee/contracts,builder/BuilderDroneEmployee.sol,""
airalab/DAO-IPCI,contracts/builder/BuilderAuditor.sol,""
miller46/digital-identity,contracts/ERC735.sol,"getClaim(bytes32 _claimId);getClaimsIdByType(uint256 _claimType);addClaim(uint256 _claimType, address issuer, uint256 signatureType, bytes32 _signature, bytes32 _claim, string _uri);removeClaim(bytes32 _claimId)"
b-mueller/mythril,tests/testdata/input_contracts/ether_send.sol,crowdfunding();withdrawfunds();invest();getBalance()
fkbenjamin/pc-firebase-starter,contracts/NameRegistry.sol,"register(bytes32 name, address contractAddress);unregister(bytes32 name)"
DigixGlobal/ethereum-ruby,contracts/AuditorRegistry.sol,CustodianRegistry(address _conf);isAuditor(address _audt)
EthWorks/ethereum.rb,contracts/AuditorRegistry.sol,CustodianRegistry(address _conf);isAuditor(address _audt)
marekkirejczyk/ethereum.rb,contracts/AuditorRegistry.sol,CustodianRegistry(address _conf);isAuditor(address _audt)
maichain/listener,vendor/github.com/ethereum/go-ethereum/contracts/chequebook/contract/chequebook.sol,""
micahaza/go-ethereum,contracts/chequebook/contract/chequebook.sol,""
Nepal-Blockchain/go-ethereum,contracts/chequebook/contract/chequebook.sol,""
rakevsul/rtc2017,contracts/RtcCoin.sol,"RtcCoin(uint256 initialSupply);transfer(address to, uint256 value)"
Arctek/eth_splitter,contracts/Killable.sol,kill();emergencyWithdrawal()
SafecontractDev/protocol,contracts/bancor_contracts/interfaces/IBancorFormula.sol,"calculatePurchaseReturn(uint256 _supply, uint256 _reserveBalance, uint32 _reserveRatio, uint256 _depositAmount);calculateSaleReturn(uint256 _supply, uint256 _reserveBalance, uint32 _reserveRatio, uint256 _sellAmount)"
ChronoBank/LX-SC,contracts/BoardController.sol,"setJobsDataProvider(address _jobsDataProvider);setupEventsHistory(address _eventsHistory);getBoardsCount();getBoardStatus(uint _boardId);getJobStatus(uint _boardId, uint _jobId);getUserStatus(uint _boardId, address _user);getJobsBoard(uint _jobId);getBoardIpfsHash(uint _jobId);getBoardsByIds(uint[] _ids);getJobsInBoardCount(uint _boardId);emitJobBinded(uint _boardId, uint _jobId, bool _status);emitUserBinded(uint _boardId, address _user, bool _status);emitBoardClosed(uint _boardId, bool _status);_emitJobBinded(uint _boardId, uint _jobId, bool _status);_emitUserBinded(uint _boardId, address _user, bool _status);_emitBoardClosed(uint _boardId, bool _status)"
DRI-project/RICO,contracts/Launcher.sol,"Launcher();init(address _rico, address _cm)"
silasdavis/eris-db,tests/jobs_fixtures/app50-set-storage-zero/storageIssueWithZero.sol,setInt(int x);setIntToZero();getInt();setUint(uint x);setUintToZero();getUint()
silasdavis/burrow,tests/jobs_fixtures/app50-set-storage-zero/storageIssueWithZero.sol,setInt(int x);setIntToZero();getInt();setUint(uint x);setUintToZero();getUint()
charles-cooper/raiden,raiden/smart_contracts/ChannelManagerContract.sol,"ChannelManagerContract(address token_address);getChannelsAddresses();getChannelsParticipants();nettingContractsByAddress(address node_address);tokenAddress();getChannelWith(address partner);newChannel(address partner, uint settle_timeout);contractExists(address channel);deleteChannel(address partner, address channel_address)"
OpenSTFoundation/SimpleTokenSale,contracts/ProcessablesMock.sol,ProcessablesMock();add(address _address);process(uint256 _from);approve();complete();disapprove()
kowala-tech/kUSD,client/contracts/truffle/contracts/consensus/token/MiningToken.sol,"MiningToken(string _name, string _symbol, uint _cap, uint8 _decimals);initialize(string _name, string _symbol, uint _cap, uint8 _decimals);getOwner()"
WishFinanceCom/WF-contracts,contracts/core/common/Object.sol,"withdrawnTokens(address[] tokens, address _to);checkOnlyContractOwner()"
Otonomos/smart-equity,Contracts/Trust.sol,"Trust(address[] _trusteeTable, uint _quorumPercent, address _defaultVEContract, bytes idData);setInitialState(address portfolioAddress);acceptTrustSC(address reso);editTrustee(address reso);resignTrustee();assetManagement(address reso);getPortfolioTable();getQuorum();getTrusteeTable();getTrusteeIndex();getTrustState()"
openanx/OpenANXToken,test/OpenANXTokenConfig.sol,""
kinfoundation/kin-token,test/helpers/SafeMathMock.sol,"multiply(uint a, uint b);subtract(uint a, uint b);add(uint a, uint b);divide(uint a, uint b)"
GuigsEvt/CrowdsaleEthereum,test/helpers/SafeMathMock.sol,"multiply(uint a, uint b);subtract(uint a, uint b);add(uint a, uint b);divide(uint a, uint b)"
ethereum/ethereumj,ethereumj-core/src/test/resources/solidity/file2.sol,""
marcegarba/ethereumj,ethereumj-core/src/test/resources/solidity/file2.sol,""
martintreurnicht/ethereumj,ethereumj-core/src/test/resources/solidity/file2.sol,""
duaraghav8/Solium,test/lib/rules/array-declarations/fixed/ws-btw-op-clos.sol,""
dltdojo/courses,ethereum/solidity/T999_AtomicSwap.sol,"createPaymentChannel(address _to, uint _timeout, uint _amount);closeChannel(address channel , uint value);testCloseChannel();PaymentChannel(address to, uint timeout);closeChannel(uint value);closeChannelEcrecover(bytes32 h, uint8 v, bytes32 r, bytes32 s, uint value);channelTimeout()"
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.5/globals.sol,duper();blub()
bkrem/educhain,chain/contracts/Linker.sol,"registerActionEvent(bytes32 actionType);linkTaskToUser(address taskAddr, address userAddr);linkTeamToUser(address userAddress, bytes32 teamname);linkFileToTask(address taskAddr, bytes32 fileHash)"
Vorxil/MarketStake,contracts/MarketRegister.sol,"setProvider(bytes32 id, address value);setActive(bytes32 id, bool value);setPrice(bytes32 id, uint value);setMinStake(bytes32 id, uint value);setStakeRate(bytes32 id, uint value);deleteHelper(bytes32 id);isMetered();setTolerance(bytes32 id, uint value);deleteHelper(bytes32 id);isMetered()"
mhhf/dapple,constants/template.sol,""
nexusdev/dapple,constants/template.sol,""
Dicoiner/irianna-solidity,contracts/token/TokenTimelock.sol,"TokenTimelock(ERC20Basic _token, address _beneficiary, uint64 _releaseTime);claim();release()"
tomlion/randao,contracts/Randao.sol,"follow(uint256 _campaignID);commit(uint256 _campaignID, bytes32 _hs);getCommitment(uint256 _campaignID);shaCommit(uint256 _s);reveal(uint256 _campaignID, uint256 _s);getRandom(uint256 _campaignID);returnRandom(Campaign storage c);getMyBounty(uint256 _campaignID);calculateShare(Campaign storage c);fines(Campaign storage c);refundBounty(uint256 _campaignID);returnBounty(Campaign storage c)"
randao/randao,contracts/Randao.sol,"follow(uint256 _campaignID);commit(uint256 _campaignID, bytes32 _hs);getCommitment(uint256 _campaignID);shaCommit(uint256 _s);reveal(uint256 _campaignID, uint256 _s);getRandom(uint256 _campaignID);returnRandom(Campaign storage c);getMyBounty(uint256 _campaignID);calculateShare(Campaign storage c);fines(Campaign storage c);refundBounty(uint256 _campaignID);returnBounty(Campaign storage c)"
EtherDogs/HeritableWallet,contracts/HeritableWalletFactory.sol,"HeritableWalletFactory();create(address beneficiary, uint periodInDays)"
EtherDogs/PersonalBank,contracts/HeritableWalletFactory.sol,"HeritableWalletFactory();create(address beneficiary, uint periodInDays)"
cgewecke/solcover,test/sources/loops/for-no-brackets.sol,a()
JoinColony/solcover,test/sources/loops/for-no-brackets.sol,a()
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/contracts/token/BurnableToken.sol,burn(uint256 _value)
readevalprint/aragon-core,contracts/zeppelin/token/BurnableToken.sol,burn(uint256 _value)
pz7/liquet,node_modules/zeppelin-solidity/contracts/token/BurnableToken.sol,burn(uint256 _value)
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/token/BurnableToken.sol,burn(uint256 _value)
dmx374/zeppelin-solidity,contracts/token/BurnableToken.sol,burn(uint256 _value)
MarketProject/MarketProtocol,test/libraries/TestStringLib.sol,testToSlice();testDelimAndSplit()
web3j/web3j-maven-plugin,src/test/resources/issue-17/issue17import2.sol,""
ChronoBank/LX-SC,contracts/PaymentProcessor.sol,setPaymentGateway(PaymentGatewayInterface _paymentGateway);enableServiceMode();disableServiceMode();approve(uint _operationId)
Spreadway/core,flow_auth/contracts/Authentication.sol,login();signup(bytes32 name);update(bytes32 name)
FiatCentralBank/fiatcoin,contracts/token/TokenTimelock.sol,"TokenTimelock(ERC20Basic _token, address _beneficiary, uint64 _releaseTime);claim();release()"
ineiti/cothorities,bevm/testdata/ERC20Token/ERC20Token.sol,"add(uint a, uint b);sub(uint a, uint b);mul(uint a, uint b);div(uint a, uint b);totalSupply();balanceOf(address tokenOwner);allowance(address tokenOwner, address spender);transfer(address to, uint tokens);approve(address spender, uint tokens);transferFrom(address from, address to, uint tokens);receiveApproval(address from, uint256 tokens, address token, bytes memory data);transferOwnership(address _newOwner);acceptOwnership();totalSupply();balanceOf(address tokenOwner);transfer(address to, uint tokens);approve(address spender, uint tokens);transferFrom(address from, address to, uint tokens);allowance(address tokenOwner, address spender);approveAndCall(address spender, uint tokens, bytes memory data)"
DeDiS/cothority,bevm/testdata/ERC20Token/ERC20Token.sol,"add(uint a, uint b);sub(uint a, uint b);mul(uint a, uint b);div(uint a, uint b);totalSupply();balanceOf(address tokenOwner);allowance(address tokenOwner, address spender);transfer(address to, uint tokens);approve(address spender, uint tokens);transferFrom(address from, address to, uint tokens);receiveApproval(address from, uint256 tokens, address token, bytes memory data);transferOwnership(address _newOwner);acceptOwnership();totalSupply();balanceOf(address tokenOwner);transfer(address to, uint tokens);approve(address spender, uint tokens);transferFrom(address from, address to, uint tokens);allowance(address tokenOwner, address spender);approveAndCall(address spender, uint tokens, bytes memory data)"
darentuzi/aequalis,client/lib/contracts/Dao.sol,"token();sendCoin(address receiver, uint amount);Democracy(token _voterShareAddress, uint _minimumQuorum, uint _debatingPeriod);newProposal(address _recipient, uint _amount, bytes32 _data, string _description);vote(uint _proposalID, int _position);executeProposal(uint _proposalID)"
jvah/spicehours,contracts/SpiceHours.sol,"SpiceHours(address _members);markHours(bytes32 _info, bytes32 _description, int _duration);markHours(bytes32 _description, int _duration);processPayroll(address _calculator, uint _maxDuration);hasPayroll(address _address);payrollCount()"
dacplayproject/play-dapp,src/FixedGameRegistry.sol,"registerFixedToken(bytes32 _symbol, uint _ratio, address _pls)"
chenlian2015/eosEthMarketSample,contracts/StandardToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);chargeFee(address _spender, address _marketChargeManager, uint _value)"
rsksmart/rskj,rskj-core/TestGeneration/libevm/VMTestsFiller/loop-exp.sol,"testExp(int exponent, int seed, uint n);testNop(int exponent, int seed, uint n)"
libdeos/deos-rsksmart,lib/rskj/rskj-core/TestGeneration/libevm/VMTestsFiller/loop-exp.sol,"testExp(int exponent, int seed, uint n);testNop(int exponent, int seed, uint n)"
adrianbrink/tendereum,vendor/github.com/ethereum/go-ethereum/tests/testdata/src/VMTestsFiller/loop-exp.sol,"testExp(int exponent, int seed, uint n);testNop(int exponent, int seed, uint n)"
adrianbrink/tendereum,vendor/github.com/cosmos/tendereum/vendor/github.com/ethereum/go-ethereum/tests/testdata/src/VMTestsFiller/loop-exp.sol,"testExp(int exponent, int seed, uint n);testNop(int exponent, int seed, uint n)"
hundsun/blockchain,ballot.sol,Ballot(bytes32[] proposalNames);giveRightToVote(address voter);delegate(address to);vote(uint proposal);winningProposal();kill()
jshacks/blockchain-Evote,smart-contracts/cryptovote/contracts/Election.sol,"Election(bytes32[] choicesNames, uint elId, uint start, uint end);addVoter(address targetVoter, bytes32[] _vote);castVote(bytes32[] choiceVote);getVoteCount();getVoter(uint index)"
michinbear/solidity,test/compilationTests/corion/multiOwner.sol,"multiOwner(address[] newOwners);insertOwner(address addr);dropOwner(address addr);cancelDo(bytes32 doHash);ownersForChange();calcDoHash(string job, bytes32 data);validDoHash(bytes32 doHash);insertAndCheckDo(bytes32 doHash);_addOwner(address addr);_delOwner(address addr)"
elementrem/solidity,test/compilationTests/corion/multiOwner.sol,"multiOwner(address[] newOwners);insertOwner(address addr);dropOwner(address addr);cancelDo(bytes32 doHash);ownersForChange();calcDoHash(string job, bytes32 data);validDoHash(bytes32 doHash);insertAndCheckDo(bytes32 doHash);_addOwner(address addr);_delOwner(address addr)"
PeculiumPCL/Peculium,contracts/v0.7/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
PeculiumPCL/Peculium,contracts/v1.2/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
PeculiumPCL/Peculium,contracts/v1.1/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
PeculiumPCL/Peculium,contracts/v0.4/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
PeculiumPCL/Peculium,contracts/v0.2/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
PeculiumPCL/Peculium,contracts/v0.5/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
PeculiumPCL/Peculium,contracts/v0.3/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
PeculiumPCL/Peculium,contracts/v0.6/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
PeculiumPCL/Peculium,contracts/v2/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
PeculiumPCL/Peculium,contracts/v1.0/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
maxwedwards/block-journal,contracts/Journal.sol,"Journal(uint goalPost);changeReviewRules(uint goalPost);simpleSubmit(uint randomNumber);submitReview(uint articleId, bool inSupportOfPublishing);attemptPublishOfArticle(uint articleId)"
pipermerriam/ethereum-alarm-clock,contracts/RequestFactory.sol,"isKnownRequest(address _address);getBucket(uint windowStart, RequestScheduleLib.TemporalUnit unit)"
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/monorepo/installed_contracts/ethpmpkg/EthPMImport.sol,""
DigixGlobal/ethereum-ruby,contracts/DigixConfiguration.sol,"DigixConfiguration();getOwner();setOwner(address _newowner);addConfigEntryAddr(bytes32 _key, address _val);getConfigEntryAddr(bytes32 _key);addConfigEntryInt(bytes32 _key, uint256 _val);getConfigEntryInt(bytes32 _key);registerAdmin(address _acct);unregisterAdmin(address _acct);isAdmin(address _acct)"
EthWorks/ethereum.rb,contracts/DigixConfiguration.sol,"DigixConfiguration();getOwner();setOwner(address _newowner);addConfigEntryAddr(bytes32 _key, address _val);getConfigEntryAddr(bytes32 _key);addConfigEntryInt(bytes32 _key, uint256 _val);getConfigEntryInt(bytes32 _key);registerAdmin(address _acct);unregisterAdmin(address _acct);isAdmin(address _acct)"
marekkirejczyk/ethereum.rb,contracts/DigixConfiguration.sol,"DigixConfiguration();getOwner();setOwner(address _newowner);addConfigEntryAddr(bytes32 _key, address _val);getConfigEntryAddr(bytes32 _key);addConfigEntryInt(bytes32 _key, uint256 _val);getConfigEntryInt(bytes32 _key);registerAdmin(address _acct);unregisterAdmin(address _acct);isAdmin(address _acct)"
DES-simeon/branche-contracts,proportional_crowdsale.sol,"BrancheProportionalCrowdsale(uint _durationInMinutes, uint _targetETH);_deposit();deposit();safebalance(uint bal);refund(address recipient);adminRefund(address deposit_addr, address recipient);withdrawRefund();fundOwner()"
TrueBitFoundation/webasm-solidity,contracts/interpreter.sol,""
MarketProject/MarketProtocol,test/tokens/TestMarketToken.sol,testInitialBalance();testBurnTokens()
BitySA/whetcwithdraw,whetcwithdraw.sol,"balanceOf(address _dth);totalSupply();Owned();changeOwner(address _newOwner);getOwner();fill(uint[] data);seal();WhitehatWithdraw(address _whg_donation, address _daoBalanceSnapshotAddress, address _escapeAddress, address _remainingBeneficiary);calculateWithdraw(address _dth);commonWithdraw(address _dth, address _beneficiary, uint _percentageWHG, uint _withdrawType);withdraw(address _beneficiary, uint _percentageWHG );proxyWithdraw(address _beneficiary, uint _percentageWHG, uint8 _v, bytes32 _r, bytes32 _s);deposit();escapeHatch();claimRemaining();extendClosingTime(uint _additionalSeconds);getPaidOut(address _account);getMyBalance(address _account);getTotalFunds();getWHGDonationAddress()"
mixbytes/storiqa_ico,contracts/STQToken.sol,STQToken(address[] _owners);startCirculation();emission(uint256 _tokensCreatedInSTQ)
Storiqa/ico_smart_contract,contracts/STQToken.sol,STQToken(address[] _owners);startCirculation();emission(uint256 _tokensCreatedInSTQ)
adklempner/solidity-license,contracts/Board.sol,Board(address _license);post(string text)
jakerockland/aNonreport,aNonreport/app/contracts/anonreport.sol,"AnonReport(uint initialValue);set(uint x);get();getHash(uint256 index);getLocation(uint256 index);getDate(uint256 index);getFileLoc(uint256 index);getUpCount();newUpload(bytes32 _Hash, string _Location, uint16 _Date, bytes32 _FileLocation)"
y12studio/dltdojo,events/tiguan1/levels/level2/hahacoin.sol,"Coin();mint(address receiver, uint amount);send(address receiver, uint amount)"
saikyerubandi/smart-contract-beginner,test/TestCrowdFunding.sol,testInitialBalance();testStartNewCampaign();testFundACampaign();testCampaignGoalReached()
dltdojo/courses,ethereum/solidity/T270_SecurityReentrancy.sol,"callWithdraw(Fund fund);callWithdraw(Fund _fund);withdraw();withdrawGas();testAddUser(address user, uint amount);testWithdraw();testReentracy()"
Neurone/persians,contracts/Immortals.sol,redeemEther(uint256 _amount)
euri10/populus,examples/wallet/contracts/Wallet.sol,deposit();withdraw(uint value)
dltdojo/courses,ethereum/service/oracle/T130_PredictionMarket.sol,buy(uint _amount);sell(uint _amount);outcome();setOracle(address _addrOracle);askOracle()
BiathlonHelsinki/BiathlonContract,contracts/SecondNode.sol,"SecondNode(address _nodelist, string _name, string _location);get_config();token_is_active(address _addr);count_tokens();transfer_token_ownership(address _new);register_user(address _user);change_nodelist(address _to);require(msg.sender == nodelist_address);register_token(address _addr, string _name);upgrade_token(address _from, address _to, string _name);register_minting(address _addr);connect_to_nodelist()"
stanta/darfchain,ICO/contracts/Wallet.sol,"multiowned(address[] _owners, uint _required);revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);getOwner(uint ownerIndex);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);reorganizeOwners();clearPending();daylimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today();changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);Wallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);clearPending()"
SafecontractDev/protocol,contracts/bancor_contracts/helpers/TestERC20Token.sol,""
enjin/contracts,solidity/contracts/helpers/TestERC20Token.sol,""
LianaHus/dapp-bin,wallet/wallet.sol,"multiowned(address[] _owners, uint _required);revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);reorganizeOwners();clearPending();daylimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today();changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);Wallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);clearPending()"
vaporry/dapp-bin,wallet/wallet.sol,"multiowned(address[] _owners, uint _required);revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);reorganizeOwners();clearPending();daylimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today();changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);Wallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);clearPending()"
holiman/cpp-ethereum,test/unittests/performance/top.sol,top()
ethereum/cpp-ethereum,test/unittests/performance/top.sol,top()
winsvega/cpp-ethereum,test/unittests/performance/top.sol,top()
livepeer/protocol,test/unit/TestSortedDoublyLLUpdateKey.sol,beforeAll();beforeEach();test_updateKey_missingId();test_updateKey_increaseNoHint();test_updateKey_decreaseNoHint();test_updateKey_zeroNewKey()
locals-world/locals-app,truffle/contracts/localsAssociation.sol,"localsAssociation(token sharesAddress, uint minimumSharesToPassAVote, uint minutesForDebate);changeVotingRules(token sharesAddress, uint minimumSharesToPassAVote, uint minutesForDebate);vote(uint proposalNumber, bool supportsProposal);executeProposal(uint proposalNumber, bytes transactionBytecode);kill()"
Dobrokhvalov/eth2phone,contracts/e2pEscrow.sol,deposit(address _transitAddress);changeFixedCommissionFee(uint _newCommissionFee);changeVerifier(address _newVerifier);withdrawCommission();getTransfer(address _transitAddress);cancelTransfer(address _transitAddress)
shahankhatch/dapp-bin,registrar/ExpRegistrar.sol,"owner(string _name);addr(string _name);subRegistrar(string _name);content(string _name);name(address _addr);ExpRegistrar();reserve(string _name);transfer(string _name, address _newOwner);setAddr(string _name, address _a);setSubRegistrar(string _name, address _registrar);setContent(string _name, bytes32 _content);setName(string _name);record(string _name);addr(string _name);subRegistrar(string _name);content(string _name);owner(string _name);price(string _name);name(address _addr)"
LianaHus/dapp-bin,registrar/ExpRegistrar.sol,"owner(string _name);addr(string _name);subRegistrar(string _name);content(string _name);name(address _addr);ExpRegistrar();reserve(string _name);transfer(string _name, address _newOwner);setAddr(string _name, address _a);setSubRegistrar(string _name, address _registrar);setContent(string _name, bytes32 _content);setName(string _name);record(string _name);addr(string _name);subRegistrar(string _name);content(string _name);owner(string _name);price(string _name);name(address _addr)"
vaporry/dapp-bin,registrar/ExpRegistrar.sol,"owner(string _name);addr(string _name);subRegistrar(string _name);content(string _name);name(address _addr);ExpRegistrar();reserve(string _name);transfer(string _name, address _newOwner);setAddr(string _name, address _a);setSubRegistrar(string _name, address _registrar);setContent(string _name, bytes32 _content);setName(string _name);record(string _name);addr(string _name);subRegistrar(string _name);content(string _name);owner(string _name);price(string _name);name(address _addr)"
RosEvroBank/IDChain,contracts/Ownable.sol,changeOwner(address _newOwner)
raiden-network/raiden-token,contracts/test/foundation_multisig.sol,"multiowned(address[] _owners, uint _required);revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);reorganizeOwners();clearPending();daylimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today();changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);Wallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);clearPending()"
airalab/DAO-IPCI,contracts/creator/CreatorComplier.sol,create();version();abi()
jvah/spicehours,contracts/SpiceControlled.sol,SpiceControlled(address membersAddress);hasOwnerAccess(address _target);hasDirectorAccess(address _target);hasManagerAccess(address _target);hasMemberAccess(address _target)
civilizationalpha/WeQuest,truffle/contracts/WeSource.sol,"WeSource(bytes32 _label);request(string lat, string lon);bookrequest(uint id);getRequestInfo(uint id );getStatus(uint id);confirm(uint id)"
silasdavis/eris-db,tests/compilers_fixtures/faultyContract.sol,""
silasdavis/burrow,tests/compilers_fixtures/faultyContract.sol,""
eminogrande/token-contract,src/contracts/ae-token.sol,"AEToken();transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value)"
Alonski/CoinPanion,contracts/Escapable.sol,"Escapable(address _escapeHatchCaller, address _escapeHatchDestination);escapeHatch();changeEscapeCaller(address _newEscapeHatchCaller)"
15chrjef/ico-wizard,scripts/OraclesExtendedCrowdSale.sol,"SampleCrowdsaleToken(string _name, string _symbol, uint8 _decimals, uint256 _supply);SampleCrowdsale(uint256 _startBlock, uint256 _endBlock, uint256 _rate, address _wallet, uint256 _crowdsaleSupply, string _name, string _symbol, uint8 _decimals, uint256 _tokenSupply);createTokenContract(string _name, string _symbol, uint8 _decimals, uint256 _supply);buySampleTokens(address _sender)"
oraclesorg/ico-wizard,scripts/POAExtendedCrowdSale.sol,"SampleCrowdsaleToken(string _name, string _symbol, uint8 _decimals, uint256 _supply);SampleCrowdsale(uint256 _startBlock, uint256 _endBlock, uint256 _rate, address _wallet, uint256 _crowdsaleSupply, string _name, string _symbol, uint8 _decimals, uint256 _tokenSupply);createTokenContract(string _name, string _symbol, uint8 _decimals, uint256 _supply);buySampleTokens(address _sender)"
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app07-query_and_basic_deploy_contracts_from_directory/contracts/storage.sol,set(uint x);get()
eris-ltd/eris,tests/jobs_fixtures/app07-query_and_basic_deploy_contracts_from_directory/contracts/storage.sol,set(uint x);get()
monax/monax,tests/jobs_fixtures/app07-query_and_basic_deploy_contracts_from_directory/contracts/storage.sol,set(uint x);get()
eris-ltd/eris-cli,tests/jobs_fixtures/app07-query_and_basic_deploy_contracts_from_directory/contracts/storage.sol,set(uint x);get()
monax/cli,tests/jobs_fixtures/app07-query_and_basic_deploy_contracts_from_directory/contracts/storage.sol,set(uint x);get()
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app07-query_and_basic_deploy_contracts_from_directory/contracts/storage.sol,set(uint x);get()
QTBlockchain/SolidityNWeb3,patterns/contracts/WithdrawalContract.sol,pay();withdraw();getBalance()
Majoolr/ethereum-libraries,CrowdsaleLib/DirectCrowdsale/truffle/contracts/DirectCrowdsaleTestZeroD.sol,sendPurchase();withdrawTokens();withdrawLeftoverWei();withdrawOwnerEth();crowdsaleActive();crowdsaleEnded();setTokens();getOwner();getTokensPerEth();getStartTime();getEndTime();getEthRaised();getContribution(address _buyer);getTokenPurchase(address _buyer);getLeftoverWei(address _buyer);getSaleData(uint256 timestamp);getTokensSold();getPercentBurn()
stevejaxon/ethereum-tutorials,contracts/stackexchange/InteractingTokens.sol,"balanceOf(address who);transfer(address to, uint256 value);convert(uint256 amount);burn(uint256 amount);mint(uint256 amount);InteractingTokenA(uint256 supply, uint256 rate);setInteractingWith(Interacting contractAddy);convert(uint256 amount);InteractingTokenB(Interacting contractAddy, uint256 rate);convert(uint256 amount)"
slockit/DAO,Offer.sol,getTotalCost();getInitialWithdrawal();getMinDailyWithdrawalLimit();getDailyWithdrawalLimit();getPayoutFreezePeriod();getContractor();getHashOfTheProposalDocument();getLastWithdrawal();getDateOfSignature();getClient();getOriginalClient();getIsContractValid();getInitialWithdrawalDone();getVotingDeadline();sign();setVotingDeadline(uint _votingDeadline);setDailyWithdrawLimit(uint128 _dailyWithdrawalLimit);terminate();withdraw();performInitialWithdrawal();updateClientAddress(DAO _newClient)
orbro/eth-enablers,DAO-develop/Offer.sol,getTotalCost();getInitialWithdrawal();getMinDailyWithdrawalLimit();getDailyWithdrawalLimit();getPayoutFreezePeriod();getContractor();getHashOfTheProposalDocument();getLastWithdrawal();getDateOfSignature();getClient();getOriginalClient();getIsContractValid();getInitialWithdrawalDone();getVotingDeadline();sign();setVotingDeadline(uint _votingDeadline);setDailyWithdrawLimit(uint128 _dailyWithdrawalLimit);terminate();withdraw();performInitialWithdrawal();updateClientAddress(DAO _newClient)
Spreadway/core,DAO-develop/Offer.sol,getTotalCost();getInitialWithdrawal();getMinDailyWithdrawalLimit();getDailyWithdrawalLimit();getPayoutFreezePeriod();getContractor();getHashOfTheProposalDocument();getLastWithdrawal();getDateOfSignature();getClient();getOriginalClient();getIsContractValid();getInitialWithdrawalDone();getVotingDeadline();sign();setVotingDeadline(uint _votingDeadline);setDailyWithdrawLimit(uint128 _dailyWithdrawalLimit);terminate();withdraw();performInitialWithdrawal();updateClientAddress(DAO _newClient)
ashellwig/Ethereum-Mutual-Fund,Offer.sol,getTotalCost();getInitialWithdrawal();getMinDailyWithdrawalLimit();getDailyWithdrawalLimit();getPayoutFreezePeriod();getContractor();getHashOfTheProposalDocument();getLastWithdrawal();getDateOfSignature();getClient();getOriginalClient();getIsContractValid();getInitialWithdrawalDone();getVotingDeadline();sign();setVotingDeadline(uint _votingDeadline);setDailyWithdrawLimit(uint128 _dailyWithdrawalLimit);terminate();withdraw();performInitialWithdrawal();updateClientAddress(DAO _newClient)
eris-ltd/eris-db,tests/jobs_fixtures/app49-return-array-with-RETURNDATACOPY/returnArray.sol,singleDigitPrimes()
maxweizhao/SmartProperty,contracts/Lock.sol,"owned();changeOwner(address newOwner);updateRentInfo(uint _price, uint _startTime, uint _endTime);getRentInfo();deposit(uint _userId)"
boisde/Greed_Island,party/contracts/protocol/modules/IssuanceModule.sol,removeModule();_getTotalIssuanceUnits(ISetToken _setToken)
jbaylina/EIP165Cache,test/RegularContract.sol,RegularContract();setValue(uint _value)
b-mueller/mythril,solidity_examples/etherstore.sol,depositFunds()
Majoolr/ethereum-libraries,WalletLib/truffle/contracts/WalletMainLib.sol,"checkNotConfirmed(WalletData storage self, bytes32 _id, uint256 _txIndex);calcConfirmsNeeded(uint256 _required, uint256 _count);getAmount(bytes _txData);createContract(bytes _txData, uint256 _value);if(msg.sender != address(this);confirmTx(WalletData storage self, bytes32 _id);revokeConfirm(WalletData storage self, bytes32 _id)"
francesco-strazzullo/ethereum-dapps-examples,contracts/Poll.sol,Poll();start();stop();vote(bool favorable);result()
Project-WikiGit/WikiGit,dev/contracts/token.sol,""
treetwig/treetwig.github.io,oraclizeAPI_0.4.sol,"query(uint _timestamp, string _datasource, string _arg);query_withGasLimit(uint _timestamp, string _datasource, string _arg, uint _gaslimit);getPrice(string _datasource);getPrice(string _datasource, uint gaslimit);useCoupon(string _coupon);setProofType(byte _proofType);setConfig(bytes32 _config);setCustomGasPrice(uint _gasPrice);getAddress();oraclize_setNetwork(uint8 networkID);__callback(bytes32 myid, string result);__callback(bytes32 myid, string result, bytes proof);oraclize_getPrice(string datasource);oraclize_getPrice(string datasource, uint gaslimit);oraclize_query(string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2, uint gaslimit);oraclize_cbAddress();oraclize_setProof(byte proofP);oraclize_setCustomGasPrice(uint gasPrice);oraclize_setConfig(bytes32 config);getCodeSize(address _addr);parseAddr(string _a);strCompare(string _a, string _b);indexOf(string _haystack, string _needle);strConcat(string _a, string _b, string _c, string _d, string _e);strConcat(string _a, string _b, string _c, string _d);strConcat(string _a, string _b, string _c);strConcat(string _a, string _b);parseInt(string _a);parseInt(string _a, uint _b)"
status-im/status-network-token,contracts/test/StatusContributionMock.sol,StatusContributionMock();getBlockNumber();setMockedBlockNumber(uint _b)
chrisdotn/ethdemocracy,contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
robmyers/artworld-ethereum,dapps/proof-of-work-bitmap/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
stevejaxon/ethereum-tutorials,contracts/cryptozombies/Ownable.sol,Ownable();transferOwnership(address newOwner)
modum-io/smartcontract,Identity.sol,"Identity(address _owner, address _adminGroup);update(uint256 _signatureHash);isAdmin(address _addr);addToken(string _hint, bytes _encryptedData);removeToken(string _hint);get(string _hint);getSignatureHash();checkIdentifier(string _identifier);done();AdminGroup(string _identifier);add(address _addr);isAdmin(address _addr);getIdentifier();done();IdentityRegistry();addEmailHash(uint256 _emailHash, address _contract);removeEmailHash(uint256 _emailHash);get(uint256 _emailHash);done()"
boisde/Greed_Island,party/contracts/mocks/StandardTokenWithFeeMock.sol,"transferFrom(address _from, address _to, uint256 _value);transfer(address _to, uint256 _value);setFee(uint256 _fee);totalSupply();balanceOf(address owner);approve(address spender, uint256 value)"
Majoolr/ethereum-libraries,CrowdsaleLib/EvenDistroCrowdsale/truffle/contracts/CrowdsaleToken.sol,"name();symbol();decimals();totalSupply();initialSupply();balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint256 value);transferFrom(address from, address to, uint value);approve(address spender, uint256 value);approveChange(address spender, uint256 valueChange, bool increase);changeOwner(address newOwner);burnToken(uint256 amount)"
Majoolr/ethereum-libraries,CrowdsaleLib/DirectCrowdsale/truffle/contracts/CrowdsaleToken.sol,"name();symbol();decimals();totalSupply();initialSupply();balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint256 value);transferFrom(address from, address to, uint value);approve(address spender, uint256 value);approveChange(address spender, uint256 valueChange, bool increase);changeOwner(address newOwner);burnToken(uint256 amount)"
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/migrations/error/contracts/ExampleAssert.sol,""
ageyev/Solidity.Examples,Corporation.sol,"getCurrentShareholders();getBalanceByAdress(address _address);getMyShareholderID();getShareholderAdressByID(uint256 _id);getMyShares();transfer(address _to, uint256 _value);getMyProposals();voteForProposal(uint256 _proposalID);countVotes(uint256 _proposalID)"
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721Receiver.sol,""
eris-ltd/eris-db,execution/solidity/abi_tester.sol,createB();createC()
zetherz/eth-match,contracts/base/Lib.sol,isContract(address addr)
DonorToken/DonorToken,contracts/base/Lib.sol,isContract(address addr)
slockit/DAO,withdrawBlack.sol,Withdraw();withdrawFromChildDAO(uint _childProposalID);withdraw();withdraw(DAO dao)
orbro/eth-enablers,DAO-develop/withdrawBlack.sol,Withdraw();withdrawFromChildDAO(uint _childProposalID);withdraw();withdraw(DAO dao)
Spreadway/core,DAO-develop/withdrawBlack.sol,Withdraw();withdrawFromChildDAO(uint _childProposalID);withdraw();withdraw(DAO dao)
ashellwig/Ethereum-Mutual-Fund,withdrawBlack.sol,Withdraw();withdrawFromChildDAO(uint _childProposalID);withdraw();withdraw(DAO dao)
slockit/DAO,DTHPool.sol,"proposals(uint _proposalID);transfer(address _to, uint256 _amount);transferFrom(address _from, address _to, uint256 _amount);balanceOf(address _owner);delegateDAOTokens(uint _amount);undelegateDAOTokens(uint _amount);executeVote(uint _proposalID);fixTokens();getEther();delegateDAOTokens(uint _amount);undelegateDAOTokens(uint _amount);executeVote(uint _proposalID);__callback(bytes32 oid, string result);fixTokens();getEther()"
orbro/eth-enablers,DAO-develop/DTHPool.sol,"proposals(uint _proposalID);transfer(address _to, uint256 _amount);transferFrom(address _from, address _to, uint256 _amount);balanceOf(address _owner);delegateDAOTokens(uint _amount);undelegateDAOTokens(uint _amount);executeVote(uint _proposalID);fixTokens();getEther();delegateDAOTokens(uint _amount);undelegateDAOTokens(uint _amount);executeVote(uint _proposalID);__callback(bytes32 oid, string result);fixTokens();getEther()"
gleim/DAO,DTHPool.sol,"proposals(uint _proposalID);transfer(address _to, uint256 _amount);transferFrom(address _from, address _to, uint256 _amount);balanceOf(address _owner);delegateDAOTokens(uint _amount);undelegateDAOTokens(uint _amount);executeVote(uint _proposalID);fixTokens();getEther();delegateDAOTokens(uint _amount);undelegateDAOTokens(uint _amount);executeVote(uint _proposalID);__callback(bytes32 oid, string result);fixTokens();getEther()"
Spreadway/core,DAO-develop/DTHPool.sol,"proposals(uint _proposalID);transfer(address _to, uint256 _amount);transferFrom(address _from, address _to, uint256 _amount);balanceOf(address _owner);delegateDAOTokens(uint _amount);undelegateDAOTokens(uint _amount);executeVote(uint _proposalID);fixTokens();getEther();delegateDAOTokens(uint _amount);undelegateDAOTokens(uint _amount);executeVote(uint _proposalID);__callback(bytes32 oid, string result);fixTokens();getEther()"
ashellwig/Ethereum-Mutual-Fund,DTHPool.sol,"proposals(uint _proposalID);transfer(address _to, uint256 _amount);transferFrom(address _from, address _to, uint256 _amount);balanceOf(address _owner);delegateDAOTokens(uint _amount);undelegateDAOTokens(uint _amount);executeVote(uint _proposalID);fixTokens();getEther();delegateDAOTokens(uint _amount);undelegateDAOTokens(uint _amount);executeVote(uint _proposalID);__callback(bytes32 oid, string result);fixTokens();getEther()"
OT-Future/ethereum-resource,solidity/Token.sol,"Token();transfer(address _to, uint256 _value)"
segovro/ethyclos,ethyclos.sol,"ethyclos();transferSysAdmin(address newSysAdmin);vote(uint _proposalNumber, int8 _choice);closeProposal(uint _proposalNumber)"
michinbear/solidity,test/compilationTests/zeppelin/token/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
elementrem/solidity,test/compilationTests/zeppelin/token/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/contracts/token/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
readevalprint/aragon-core,contracts/zeppelin/token/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
pz7/liquet,node_modules/zeppelin-solidity/contracts/token/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/token/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
livepeer/protocol,contracts/test/GenericMock.sol,"execute(address _target, bytes _data);setMockBool(bytes4 _func, bool _value);setMockAddress(bytes4 _func, address _value);mLoadAndReturn(uint256 _value);mLoadAndReturn(bytes32 _value);mLoadAndReturn(bool _value);mLoadAndReturn(address _value)"
libdeos/deos-rsksmart,var/wiki/contracts/BasicInformation.sol,basicInfoGetter();getCurrentMinerAddress();getCurrentDifficulty();getCurrentGaslimit();getCurrentBlockNumber();getBlockTimestamp();getMsgData();getMsgSender();getMsgValue();getMsgGas();getTxGasprice();getTxOrigin();getContractAddress();getContractBalance();kill()
pruby/AdversariallyVerifiableMachine,contracts/AVMDisputeProcess.sol,"transition(uint disputeId, DisputeState state);getNextAntiReplayTag(uint disputeId);AVMDisputeProcess();getDisputeState(uint disputeId);getDisputeStateText(uint disputeId);getDisputeParticipants(uint disputeId);getStepFunction(uint disputeId);getDisputeMemorySize(uint disputeId);getDisputeTimeoutState(uint disputeId);getPeriodInDispute(uint disputeId);getMaxResponseStates(uint disputeId);getRequiredStateNumbers(uint disputeId);getSubmittedStateRoot(uint disputeId, uint stateId);getMemoryTraceMeta(uint disputeId);getMemoryRead(uint disputeId, uint readId);getMemoryWrite(uint disputeId, uint writeId);isResolvedForComplainant(uint disputeId);isResolvedForDefendant(uint disputeId);doTimeoutForComplainant(uint disputeId);doTimeoutForDefendant(uint disputeId);doProvideStateRoots(uint disputeId, bytes32 antiReplayTag, bytes32[] stateRoots);doSelectDisputedStateRoot(uint disputeId, bytes32 antiReplayTag, uint disputedRoot);doProvideMemoryAccesses(uint disputeId, bytes32 antiReplayTag, uint256[] reads, uint256[] writes);doDisputeMemoryRead(uint disputeId, bytes32 antiReplayTag, uint readId);doDisputeMemoryWrite(uint disputeId, bytes32 antiReplayTag, uint writeId);doDisputeMemoryAccessSequence(uint disputeId, bytes32 antiReplayTag);doProveMemoryRead(uint disputeId, bytes32 antiReplayTag, bytes32[] merkleProof);doProveMemoryWrite(uint disputeId, bytes32 antiReplayTag, bytes32[] merkleProof)"
orbro/eth-enablers,solidity-baby-steps-master/contracts/15_basic_info_getter.sol,basicInfoGetter();getCurrentMinerAddress();getCurrentDifficulty();getCurrentGaslimit();getCurrentBlockNumber();getBlockTimestamp();getMsgData();getMsgSender();getMsgValue();getMsgGas();getTxGasprice();getTxOrigin();getContractAddress();getContractBalance();kill()
gmo-blockchain/solidity,contracts/DataObject_v1.sol,"create(bytes32 _id, address _owner, bytes32 _hash, address _cns, bytes32 _contractName);remove(bytes32 _id);exist(bytes32 _id);isActive(bytes32 _id);addAllowCnsContract(bytes32 _id, address _cns, bytes32 _contractName);removeAllowCnsContract(bytes32 _id, address _cns, bytes32 _contractName);isAllowCnsContract(address _cns, bytes32 _contractName, bytes32 _id);setOwner(bytes32 _id, address _new);getOwner(bytes32 _id);setHashByWriter(bytes32 _id, address _writer, bytes32 _hash);setHashByProvider(bytes32 _id, bytes32 _hash);getHash(bytes32 _id);setReaderId(bytes32 _id, bytes32 _readerId);setWriterId(bytes32 _id, bytes32 _writerId);getReaderId(bytes32 _id);getWriterId(bytes32 _id);canRead(address _account, bytes32 _id);canWrite(address _account, bytes32 _id)"
LykkeCity/EthereumApiDotNetCore,src/ContractBuilder/contracts/token/lykkeTokenBase.sol,""
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/payment/RefundEscrow.sol,deposit(address _refundee);close();enableRefunds();beneficiaryWithdraw();withdrawalAllowed(address _payee)
GX-Coin/SmartContract,GxCallableByTrader.sol,setGxCoinContract(address gxCoinAddress)
AugustoL/LifToken,contracts/LifMarketValidationMechanism.sol,fund();changeToken(address newToken);calculateDistributionPeriods();getCurrentPeriodIndex();getAccumulatedDistributionPercentage();getBuyPrice();getMaxClaimableWeiAmount();sendTokens(uint256 tokens);isFinished();claimWei(uint256 weiAmount);pause();unpause()
windingtree/LifToken,contracts/LifMarketValidationMechanism.sol,fund();changeToken(address newToken);calculateDistributionPeriods();getCurrentPeriodIndex();getAccumulatedDistributionPercentage();getBuyPrice();getMaxClaimableWeiAmount();sendTokens(uint256 tokens);isFinished();claimWei(uint256 weiAmount);pause();unpause()
iudex/iudex,contracts/oraclizeAPI.sol,"query(uint _timestamp, string _datasource, string _arg);query_withGasLimit(uint _timestamp, string _datasource, string _arg, uint _gaslimit);getPrice(string _datasource);getPrice(string _datasource, uint gaslimit);useCoupon(string _coupon);setProofType(byte _proofType);getAddress();oraclize_query(string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2, uint gaslimit);oraclize_cbAddress();oraclize_setProof(byte proofP);parseAddr(string _a);strCompare(string _a, string _b);indexOf(string _haystack, string _needle);strConcat(string _a, string _b);parseInt(string _a);parseInt(string _a, uint _b)"
stevejaxon/ethereum-tutorials,contracts/cryptozombies/ERC721.sol,"balanceOf(address _owner);ownerOf(uint256 _tokenId);transfer(address _to, uint256 _tokenId);approve(address _to, uint256 _tokenId);takeOwnership(uint256 _tokenId)"
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/contracts/examples/SampleCrowdsale.sol,"SampleCrowdsale(uint256 _startTime, uint256 _endTime, uint256 _rate, uint256 _goal, uint256 _cap, address _wallet);createTokenContract()"
RyuuGan/sol-merger,test/contracts/ContactWithKeywordsInsideString.sol,setA(uint _a);getA();thisContractWillNotBeCorrectlyMerged();setB(uint _b);getB()
wilmveel/praetorian-contracts,contracts/Access.sol,authorize();isSolved(address challenge)
ethereum/btcrelay,test/headerSubmitter.sol,"storeBlockHeader(bytes blockHeaderBytes);storeBlockWithFee(bytes blockHeaderBytes, int256 fee);storeHeader(bytes header, address btcrelayAddr);storeHeaderWithFee(bytes header, int256 fee, address btcrelayAddr)"
yoLUkAsss/DEscrutinio,contracts/UserCRUD.sol,"createUser(bytes32 email, bytes32 password, uint category);existsUser(uint id);getUsers();getUser(uint id);deleteUser(uint id)"
DigixGlobal/ethereum-ruby,contracts/classic/GoldTokenMinter.sol,"ParticipantRegistry();getOwner();setOwner(address nown);registerAdmin(address regraddr);unregisterAdmin(address regraddr);registerVendor(address vendoraddress);unregisterVendor(address vendoraddress);registerCustodian(address custodianaddress);unregisterCustodian(address custodianaddress);registerAuditor(address auditoraddress);unregisterAuditor(address auditoraddress);isVendor(address vendoraddress);isCustodian(address custodianaddress);isAuditor(address auditoraddress);isRegistrar(address regraddr);GoldRegistry();setConfiguration(address pr);getOwner();setOwner(address nown);getParticipantRegistry();checkCustodian();checkVendor();checkAuditor();checkRegistrar();registerGold();getGoldStatusCode(address gaddr);getGoldStatusVendorverify(address gaddr);getGoldStatusCustodianverify(address gaddr);getGoldStatusMinted(address gaddr);getGoldStatusAuditcount(address gaddr);getGoldStatusRegistered(address gaddr);getGoldStatusLastauditid(address gaddr);getGoldInfoVendor(address gaddr);getGoldInfoCustodian(address gaddr);getGoldInfoWeight(address gaddr);getGoldInfoSerial(address gaddr);getGoldInfoSku(address gaddr);getGoldInfoDocumentation(address gaddr);getLastAuditId(address gaddr);getLastAuditTime(address gaddr);getLastAuditPass(address gaddr);getLastAuditAuditor(address gaddr);getLastAuditExtradata(address gaddr);getLastAuditDocumentation(address gaddr);custodianVerify(address gaddr);vendorVerify(address gaddr);custodianTransfer(address gaddr, address ncaddr);auditReport(address gaddr, bool ares, bytes32 ed, bytes32 doc);Gold();getOwner();initGoldData(uint wt, bytes32 sn, bytes32 sk, bytes32 doc);initRegistryData(address raddr, address vaddr, address caddr);sendRegistration();registryRequestCustodian();registryRequestVendor();registryRequestWeight();registryRequestSerialNumber();registryRequestSku();registryRequestDocumentation();getGoldDataInitialized();getGoldDataMinted();getGoldDataWeight();getGoldDataSerial();getGoldDataSku();getGoldDataDocumentation();getRegistryDataInitialized();getRegistryDataRegistered();getRegistryDataRegistry();getRegistryDataVendor();getRegistryDataCustodian();getRegistryDataMinter();sendToMinter(uint minttype);goldRegistry();GoldTokenLedger();setMinter(address maddr);getMinter();getOwner();setOwner();getBalance(address user);sendToken(uint256 amount, address recipient);mint(uint256 amount, address recipient);GoldTokenMinter();setConfig(address laddr, uint fee);getLedger();calculateAmount(address goldaddr);mint(address goldaddr)"
EthWorks/ethereum.rb,contracts/classic/GoldTokenMinter.sol,"ParticipantRegistry();getOwner();setOwner(address nown);registerAdmin(address regraddr);unregisterAdmin(address regraddr);registerVendor(address vendoraddress);unregisterVendor(address vendoraddress);registerCustodian(address custodianaddress);unregisterCustodian(address custodianaddress);registerAuditor(address auditoraddress);unregisterAuditor(address auditoraddress);isVendor(address vendoraddress);isCustodian(address custodianaddress);isAuditor(address auditoraddress);isRegistrar(address regraddr);GoldRegistry();setConfiguration(address pr);getOwner();setOwner(address nown);getParticipantRegistry();checkCustodian();checkVendor();checkAuditor();checkRegistrar();registerGold();getGoldStatusCode(address gaddr);getGoldStatusVendorverify(address gaddr);getGoldStatusCustodianverify(address gaddr);getGoldStatusMinted(address gaddr);getGoldStatusAuditcount(address gaddr);getGoldStatusRegistered(address gaddr);getGoldStatusLastauditid(address gaddr);getGoldInfoVendor(address gaddr);getGoldInfoCustodian(address gaddr);getGoldInfoWeight(address gaddr);getGoldInfoSerial(address gaddr);getGoldInfoSku(address gaddr);getGoldInfoDocumentation(address gaddr);getLastAuditId(address gaddr);getLastAuditTime(address gaddr);getLastAuditPass(address gaddr);getLastAuditAuditor(address gaddr);getLastAuditExtradata(address gaddr);getLastAuditDocumentation(address gaddr);custodianVerify(address gaddr);vendorVerify(address gaddr);custodianTransfer(address gaddr, address ncaddr);auditReport(address gaddr, bool ares, bytes32 ed, bytes32 doc);Gold();getOwner();initGoldData(uint wt, bytes32 sn, bytes32 sk, bytes32 doc);initRegistryData(address raddr, address vaddr, address caddr);sendRegistration();registryRequestCustodian();registryRequestVendor();registryRequestWeight();registryRequestSerialNumber();registryRequestSku();registryRequestDocumentation();getGoldDataInitialized();getGoldDataMinted();getGoldDataWeight();getGoldDataSerial();getGoldDataSku();getGoldDataDocumentation();getRegistryDataInitialized();getRegistryDataRegistered();getRegistryDataRegistry();getRegistryDataVendor();getRegistryDataCustodian();getRegistryDataMinter();sendToMinter(uint minttype);goldRegistry();GoldTokenLedger();setMinter(address maddr);getMinter();getOwner();setOwner();getBalance(address user);sendToken(uint256 amount, address recipient);mint(uint256 amount, address recipient);GoldTokenMinter();setConfig(address laddr, uint fee);getLedger();calculateAmount(address goldaddr);mint(address goldaddr)"
marekkirejczyk/ethereum.rb,contracts/classic/GoldTokenMinter.sol,"ParticipantRegistry();getOwner();setOwner(address nown);registerAdmin(address regraddr);unregisterAdmin(address regraddr);registerVendor(address vendoraddress);unregisterVendor(address vendoraddress);registerCustodian(address custodianaddress);unregisterCustodian(address custodianaddress);registerAuditor(address auditoraddress);unregisterAuditor(address auditoraddress);isVendor(address vendoraddress);isCustodian(address custodianaddress);isAuditor(address auditoraddress);isRegistrar(address regraddr);GoldRegistry();setConfiguration(address pr);getOwner();setOwner(address nown);getParticipantRegistry();checkCustodian();checkVendor();checkAuditor();checkRegistrar();registerGold();getGoldStatusCode(address gaddr);getGoldStatusVendorverify(address gaddr);getGoldStatusCustodianverify(address gaddr);getGoldStatusMinted(address gaddr);getGoldStatusAuditcount(address gaddr);getGoldStatusRegistered(address gaddr);getGoldStatusLastauditid(address gaddr);getGoldInfoVendor(address gaddr);getGoldInfoCustodian(address gaddr);getGoldInfoWeight(address gaddr);getGoldInfoSerial(address gaddr);getGoldInfoSku(address gaddr);getGoldInfoDocumentation(address gaddr);getLastAuditId(address gaddr);getLastAuditTime(address gaddr);getLastAuditPass(address gaddr);getLastAuditAuditor(address gaddr);getLastAuditExtradata(address gaddr);getLastAuditDocumentation(address gaddr);custodianVerify(address gaddr);vendorVerify(address gaddr);custodianTransfer(address gaddr, address ncaddr);auditReport(address gaddr, bool ares, bytes32 ed, bytes32 doc);Gold();getOwner();initGoldData(uint wt, bytes32 sn, bytes32 sk, bytes32 doc);initRegistryData(address raddr, address vaddr, address caddr);sendRegistration();registryRequestCustodian();registryRequestVendor();registryRequestWeight();registryRequestSerialNumber();registryRequestSku();registryRequestDocumentation();getGoldDataInitialized();getGoldDataMinted();getGoldDataWeight();getGoldDataSerial();getGoldDataSku();getGoldDataDocumentation();getRegistryDataInitialized();getRegistryDataRegistered();getRegistryDataRegistry();getRegistryDataVendor();getRegistryDataCustodian();getRegistryDataMinter();sendToMinter(uint minttype);goldRegistry();GoldTokenLedger();setMinter(address maddr);getMinter();getOwner();setOwner();getBalance(address user);sendToken(uint256 amount, address recipient);mint(uint256 amount, address recipient);GoldTokenMinter();setConfig(address laddr, uint fee);getLedger();calculateAmount(address goldaddr);mint(address goldaddr)"
silasdavis/eris-db,tests/jobs_fixtures/app43-string-concatenation/test.sol,getName();setName(string memory name);addName(string memory name)
silasdavis/burrow,tests/jobs_fixtures/app43-string-concatenation/test.sol,getName();setName(string memory name);addName(string memory name)
eris-ltd/eris-db,tests/jobs_fixtures/app43-string-concatenation/test.sol,getName();setName(string memory name);addName(string memory name)
qingche123/DNA,vm/evm/test_case/example/example.sol,HelloWorld(string _greeting);greet();setGreeting(string _newgreeting);kill()
luodanwg/DNA,vm/evm/test_case/example/example.sol,HelloWorld(string _greeting);greet();setGreeting(string _newgreeting);kill()
dreamfly281/DNA,vm/evm/test_case/example/example.sol,HelloWorld(string _greeting);greet();setGreeting(string _newgreeting);kill()
bas-vk/go-ethereum,contracts/chequebook/contract/chequebook.sol,""
WhaleCoinOrg/WhaleCoin,contracts/chequebook/contract/chequebook.sol,""
farazdagi/status-go,vendor/github.com/ethereum/go-ethereum/contracts/chequebook/contract/chequebook.sol,""
shahankhatch/go-ethereum,contracts/chequebook/contract/chequebook.sol,""
Bo-Ye/go-ethereum,contracts/chequebook/contract/chequebook.sol,""
jpitts/go-ethereum,contracts/chequebook/contract/chequebook.sol,""
tooooolong/go-ethereum,contracts/chequebook/contract/chequebook.sol,""
kingsi-goderia/go-ethereum,contracts/chequebook/contract/chequebook.sol,""
maran/go-ethereum,contracts/chequebook/contract/chequebook.sol,""
gluk256/go-ethereum,contracts/chequebook/contract/chequebook.sol,""
yondonfu/go-ethereum,contracts/chequebook/contract/chequebook.sol,""
karalabe/go-ethereum,contracts/chequebook/contract/chequebook.sol,""
wangluinc/ethermint,vendor/github.com/ethereum/go-ethereum/contracts/chequebook/contract/chequebook.sol,""
illya13/ethermint,vendor/github.com/ethereum/go-ethereum/contracts/chequebook/contract/chequebook.sol,""
blackzid/go-ethereum,contracts/chequebook/contract/chequebook.sol,""
noeleon930/go-ethereum,contracts/chequebook/contract/chequebook.sol,""
lab2528/go-oneTime,contracts/chequebook/contract/chequebook.sol,""
CTCDEVTEAM/adtonethereum,contracts/chequebook/contract/chequebook.sol,""
shellygr/ECFChecker,contracts/chequebook/contract/chequebook.sol,""
Yuka-kkk/ethereum2017,contracts/chequebook/contract/chequebook.sol,""
am2rican5/go-ethereum,contracts/chequebook/contract/chequebook.sol,""
kejace/go-ethereum,contracts/chequebook/contract/chequebook.sol,""
Alchemist-coin/go-alchemist,contracts/chequebook/contract/chequebook.sol,""
etherbanking/go-etherbanking,contracts/chequebook/contract/chequebook.sol,""
nivertech/ethereum_cosmo,token.sol,"token();sendToken(address receiver, uint amount);getBalance(address account)"
DonorToken/DonorToken,test/helpers/SecureTargetBounty.sol,checkInvariant();deployContract()
AugustoL/LifToken,contracts/LifToken.sol,"burn(uint256 _value);burn(address burner, uint256 _value)"
Majoolr/ethereum-libraries,CrowdsaleLib/IICOLib/truffle/contracts/TokenLib.sol,"transfer(TokenStorage storage self, address _to, uint256 _value);balanceOf(TokenStorage storage self, address _owner);approve(TokenStorage storage self, address _spender, uint256 _value);allowance(TokenStorage storage self, address _owner, address _spender);changeOwner(TokenStorage storage self, address _newOwner);mintToken(TokenStorage storage self, uint256 _amount);closeMint(TokenStorage storage self);burnToken(TokenStorage storage self, uint256 _amount)"
iam-dev/ERC23,installed_contracts/zeppelin-solidity/test/mocks/PausableTokenMock.sol,"PausableTokenMock(address initialAccount, uint initialBalance)"
aragon/aragon-core,contracts/test/mocks/AppStubDepositable.sol,initialize();enableDeposits()
chenlian2015/eosEthMarketSample,contracts/OLPublicAddress.sol,"putServerAddress(string contractName, address contractAddress, uint serverStatusPar);removeServer(string contractName);setServerStatus(string contractName, uint serverStatusPar);getServerStatus(string contractName);getServerAddress(string contractName);addLog(string log, string logContent)"
jnayak1/ember-peer-review-ethereum,public/contracts/PeerReviewContract.sol,"PeerReview(address initJournal, bytes initFileHash);approve();decline()"
program017/Komhar,storenumber.sol,storenumber();increment();decrement();fetch();setnumber(uint thenewvalue)
Majoolr/ethereum-libraries,CrowdsaleLib/EvenDistroCrowdsale/truffle/contracts/CrowdsaleTestTokenTenD.sol,"name();symbol();decimals();totalSupply();initialSupply();balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint256 value);transferFrom(address from, address to, uint value);approve(address spender, uint256 value);approveChange(address spender, uint256 valueChange, bool increase);changeOwner(address newOwner);burnToken(uint256 amount)"
dltdojo/courses,ethereum/dapps/ens/ENS.sol,"ENS();owner(bytes32 node);resolver(bytes32 node);ttl(bytes32 node);setOwner(bytes32 node, address _owner);setSubnodeOwner(bytes32 node, bytes32 label, address _owner);setResolver(bytes32 node, address _resolver);setTTL(bytes32 node, uint64 _ttl)"
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/migrations/error/contracts/RevertWithReason.sol,""
gmo-blockchain/solidity,contracts/DataObjectLogic_v1.sol,"create(address _sender, bytes32 _id, address _owner, bytes32 _hash, address _cns, bytes32 _contractName);remove(address _sender, bytes32 _id);exist(bytes32 _id);isActive(bytes32 _id);addAllowCnsContract(address _sender, bytes32 _id, address _cns, bytes32 _contractName);removeAllowCnsContract(address _sender, bytes32 _id, address _cns, bytes32 _contractName);isAllowCnsContract(address _cns, bytes32 _contractName, bytes32 _id);setOwner(address _sender, bytes32 _id, address _owner);getOwner(bytes32 _id);setHashByWriter(address _sender, bytes32 _id, address _writer, bytes32 _hash);setHashByProvider(address _sender, bytes32 _id, bytes32 _hash);getHash(bytes32 _id);setReaderId(address _sender, bytes32 _id, bytes32 _readerId);setWriterId(address _sender, bytes32 _id, bytes32 _writerId);getReaderId(bytes32 _id);getWriterId(bytes32 _id);canRead(address _account, bytes32 _id);canWrite(address _account, bytes32 _id);createReaderWriter(bytes32 _id, address _owner, address _cns, bytes32 _contractName);setAllowCnsContract(address _sender, bytes32 _id, address _cns, bytes32 _contractName, bool _isAdded);setHash(address _sender, bytes32 _id, address _writer, bytes32 _hash, uint _targetIdx, uint _compareIdx)"
AdChain/AdChainRegistry,contracts/historical/Sale.sol,purchaseTokens();changeOwner(address _newOwner);changePrice(uint _newPrice);changeWallet(address _wallet);changeStartBlock(uint _newBlock);emergencyToggle()
adridadou/eth-propeller-core,src/test/resources/contractDefaultConstructor.sol,""
GazeCoin/GazeCoinTokenContract,contracts/GazeCoinCrowdsale.sol,"balanceOf(address account);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value);allowance(address owner, address spender);Owned();transferOwnership(address _newOwner);acceptOwnership();add(uint a, uint b);sub(uint a, uint b);mul(uint a, uint b);div(uint a, uint b);GazeCoin();balanceOf(address account);transfer(address to, uint tokens);approve(address spender, uint tokens);transferFrom(address from, address to, uint tokens);allowance(address owner, address spender );mint(address to, uint tokens);multiMint(address[] to, uint[] amount);GazeCoinCrowdsale();addToWhitelist(address[] addresses, uint[] amounts);addPrecommitment(address participant, uint tokens, uint ethers);proxyPayment(address contributor);finalise();transfer(address to, uint tokens);transferFrom(address from, address to, uint tokens)"
xeon0413/xeon0413.github.io,simplestorage.sol,set(uint x);get()
atomrigs/atomrigs.github.io,simplestorage.sol,set(uint x);get()
erkmos/moeda,contracts/test/MockMigrationAgent.sol,"balanceOf(address owner);migrateTo(address to, uint256 amount)"
fengkiej/chainsign,contracts/ChainSign.sol,"ChainSign();sign(bytes32 data_hash);register(bytes32 data_hash);transfer_ownership(bytes32 data_hash, address target);get_registrant(bytes32 data_hash);is_registered(bytes32 data_hash);get_owner(bytes32 data_hash);get_signature_block(address by_address, bytes32 data_hash);is_signed(address by_address, bytes32 data_hash)"
Yann-Liang/browser-solidity,contracts/src/gmbh/contract.sol,register(uint8 _numProposals)
serapath-contribution/browser-solidity,contracts/src/gmbh/contract.sol,register(uint8 _numProposals)
michinbear/solidity,test/compilationTests/zeppelin/lifecycle/Pausable.sol,pause();unpause()
elementrem/solidity,test/compilationTests/zeppelin/lifecycle/Pausable.sol,pause();unpause()
status-im/status-go,contracts/ens/contract/AbstractENS.sol,"owner(bytes32 node);resolver(bytes32 node);ttl(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);setTTL(bytes32 node, uint64 ttl)"
vvelikodny/go-ethereum,contracts/ens/contract/AbstractENS.sol,"owner(bytes32 node);resolver(bytes32 node);ttl(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);setTTL(bytes32 node, uint64 ttl)"
wuestholz/go-ethereum,contracts/ens/contract/AbstractENS.sol,"owner(bytes32 node);resolver(bytes32 node);ttl(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);setTTL(bytes32 node, uint64 ttl)"
wealdtech/domainsale,contracts/AbstractENS.sol,"owner(bytes32 node);resolver(bytes32 node);ttl(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);setTTL(bytes32 node, uint64 ttl)"
meta-network/go-meta,vendor/github.com/ethereum/go-ethereum/contracts/ens/contract/AbstractENS.sol,"owner(bytes32 node);resolver(bytes32 node);ttl(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);setTTL(bytes32 node, uint64 ttl)"
getamis/go-ethereum,contracts/ens/contract/AbstractENS.sol,"owner(bytes32 node);resolver(bytes32 node);ttl(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);setTTL(bytes32 node, uint64 ttl)"
fireblock/go-ethereum,contracts/ens/contract/AbstractENS.sol,"owner(bytes32 node);resolver(bytes32 node);ttl(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);setTTL(bytes32 node, uint64 ttl)"
trinityfx/trinity,contracts/ens/contract/AbstractENS.sol,"owner(bytes32 node);resolver(bytes32 node);ttl(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);setTTL(bytes32 node, uint64 ttl)"
ManyCoin/ManyCoin,contracts/ens/contract/AbstractENS.sol,"owner(bytes32 node);resolver(bytes32 node);ttl(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);setTTL(bytes32 node, uint64 ttl)"
markya0616/go-ethereum,contracts/ens/contract/AbstractENS.sol,"owner(bytes32 node);resolver(bytes32 node);ttl(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);setTTL(bytes32 node, uint64 ttl)"
web3j/web3j,core/src/main/resources/solidity/ens/AbstractENS.sol,"owner(bytes32 node);resolver(bytes32 node);ttl(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);setTTL(bytes32 node, uint64 ttl)"
rfikki/demo-solidity,AbstractENS.sol,"owner(bytes32 node);resolver(bytes32 node);ttl(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);setTTL(bytes32 node, uint64 ttl)"
GuigsEvt/CrowdsaleEthereum,contracts/ERC20.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
LOOMIA/loomia,ethereum/test/ERC20.sol,"balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value)"
etherfundme/dapp,contracts/EtherFundMeCrowdfunding.sol,getState();isGoalReached();invest();finalize();refund();halt();unhalt()
prashantpawar/truffle,test/scenarios/contract_names/floating_import.sol,""
anniemwu/chainge,node_modules/truffle/test/scenarios/contract_names/floating_import.sol,""
hsavit1/gosofi_webpage,node_modules/truffle/test/scenarios/contract_names/floating_import.sol,""
DigixGlobal/truffle,test/scenarios/contract_names/floating_import.sol,""
input-output-hk/etc-client,src/evmTest/resources/solidity/Fibonacci.sol,getStoredFib();getNewFib(uint n);calcFib(uint n)
tomashaber/raiden,raiden/smart_contracts/NettingChannelContract.sol,"deposit(uint256 amount);addressAndBalance();withdraw(bytes locked_encoded, bytes merkle_proof, bytes32 secret);settle();settleTimeout();tokenAddress();opened();closed();closingAddress()"
blockgeeks/workshop,src/contracts/escrow.sol,"Escrow(address _buyer, address _seller, address _arbiter);confirmPayment();confirmDelivery();refundBuyer()"
orbro/eth-enablers,ethereum-datetime-master/contracts/DateTime.sol,"isLeapYear(uint16 year);leapYearsBefore(uint year);getDaysInMonth(uint8 month, uint16 year);parseTimestamp(uint timestamp);getYear(uint timestamp);getMonth(uint timestamp);getDay(uint timestamp);getHour(uint timestamp);getMinute(uint timestamp);getSecond(uint timestamp);getWeekday(uint timestamp);toTimestamp(uint16 year, uint8 month, uint8 day);toTimestamp(uint16 year, uint8 month, uint8 day, uint8 hour);toTimestamp(uint16 year, uint8 month, uint8 day, uint8 hour, uint8 minute);toTimestamp(uint16 year, uint8 month, uint8 day, uint8 hour, uint8 minute, uint8 second);__throw()"
Majoolr/ethereum-libraries,VestingLib/VestingLib.sol,"initializeETHBalance(VestingStorage storage self, uint256 _balance);initializeTokenBalance(VestingStorage storage self, CrowdsaleToken token, uint256 _balance);unregisterUser(VestingStorage storage self, address _registrant);unregisterUsers(VestingStorage storage self, address[] _registrants);swapRegistration(VestingStorage storage self, address _replacementRegistrant);calculateWithdrawal(VestingStorage storage self, address _beneficiary);withdrawETH(VestingStorage storage self);withdrawTokens(VestingStorage storage self,CrowdsaleToken token);sendETH(VestingStorage storage self, address _beneficiary);sendTokens(VestingStorage storage self,CrowdsaleToken token, address _beneficiary);ownerWithdrawExtraETH(VestingStorage storage self);ownerWithdrawExtraTokens(VestingStorage storage self, CrowdsaleToken token);getPercentReleased(VestingStorage storage self)"
phroiland/leonidas,contracts/Leonidas.sol,"Leonidas();sendFunds(uint amount, address receiver);getAmountOfWithdrawals(address _address);getWithdrawalForAddress(address _address, uint index);allowAddressToSendMoney(address _address);disallowAddressToSendMoney(address _address);isAllowedToSend(address _address);killWallet()"
noeleon930/nccucs-se2016-dapp-example,contract/DataStorage.sol,DataStorage();setData(string input);getData()
cpetty-Novetta/raffle-dapp,imports/smart-contracts/contracts/RaffleTshirt.sol,"RaffleTshirt(string _prizeName, uint _numPrizes);nextStage();closeRegistration();generateNewTicket(address userAddress);remove(uint index);generate_random(uint maxNum, string salt);randomChoiceFromticketPool();distributePrizes();getNumUsers();getNumTickets();getStage()"
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.4.24/library.sol,"insert(Data storage self, uint value);remove(Data storage self, uint value);contains(Data storage self, uint value);register(uint value)"
soad003/browser-solidity,test/staticanalysis/test-contracts/library.sol,"insert(Data storage self, uint value);remove(Data storage self, uint value);contains(Data storage self, uint value);register(uint value)"
shahankhatch/dapp-bin,future_solidity/heap.sol,"insert(Heap[T] storage _heap, T _value);top(Heap[T] storage _heap);pop(Heap[T] storage _heap);addSomething(uint val)"
LianaHus/dapp-bin,future_solidity/heap.sol,"insert(Heap[T] storage _heap, T _value);top(Heap[T] storage _heap);pop(Heap[T] storage _heap);addSomething(uint val)"
RepublicMaster/dapp-bin,future_solidity/heap.sol,"insert(Heap[T] storage _heap, T _value);top(Heap[T] storage _heap);pop(Heap[T] storage _heap);addSomething(uint val)"
ethereum/dapp-bin,future_solidity/heap.sol,"insert(Heap[T] storage _heap, T _value);top(Heap[T] storage _heap);pop(Heap[T] storage _heap);addSomething(uint val)"
vaporry/dapp-bin,future_solidity/heap.sol,"insert(Heap[T] storage _heap, T _value);top(Heap[T] storage _heap);pop(Heap[T] storage _heap);addSomething(uint val)"
chrisdotn/ethdemocracy,contracts/EthDemocracy.sol,"getVotersLength();getElectionId(string memory _electionName);getElectionName(uint _electionId);isVoter(address _voter);getVoteOption(uint _electionId, uint _optionId);getVoteOptionId(uint _electionId, string memory _option);getVoteOptions(uint _electionId);getVotes(uint _electionId, address _voter);getResults(uint _electionId, string memory _option);addVoter(address _voter);deleteVoters();createElection(string memory _name);addVoteOption(uint _electionId, string memory _option);castVote(uint _electionId, uint _optionId);transferVotes(uint _electionId, address _to)"
realcodywburns/MultiPass,multipass.sol,"startMultipass(string _author, string _title, string _description, string _extUrl, string _avatar, uint _regGas, address _regAddress);veriPass(string _msg);modPass(uint _action, uint _index, string _aSite, string _aUsrname, string _aUrl);getSite(uint _index);userName(uint _index);GetProfile(uint _index);Count();aSites(uint _index);kill();bailout()"
ethereumproject/etherjar,etherjar-solidity/src/test/resources/contract/SimpleToken.sol,"balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);SimpleToken()"
vishakh/blockinstruments,contracts/PriceFeedApi.sol,getPrice(bytes32 symbol);getTimestamp(bytes32 symbol)
livepeer/protocol,test/unit/TestSortedDoublyLLInsert.sol,beforeAll();beforeEach();test_setMaxSize();test_setMaxSize_update();test_setMaxSize_decreaseSize();test_insert_empty();test_insert_updateHead();test_insert_updateTail();test_insert_atPosition();test_insert_full();test_insert_containsId();test_insert_null();test_insert_zeroKey()
ownage-ltd/ether-router,contracts/test/TheNextAnswer.sol,getAnswer()
yoLUkAsss/DEscrutinio,contracts/Escuela.sol,"createMesaVerify(bytes32[] inputCandidates);createMesa(uint mesaId, address mesaAddress);mesasCreatedVerify();mesasCreated();existsMesa(uint id);getMesa(uint id);getMesas();setFiscalVerify(uint mesaId, bytes32 fiscalEmail);setFiscal(uint mesaId, bytes32 fiscalEmail);setPresidenteDeMesaVerify(bytes32 delegadoEscuela, uint mesaId, bytes32 presidenteDeMesaEmail);setPresidenteDeMesa(bytes32 delegadoEscuela, uint mesaId, bytes32 presidenteDeMesaEmail);setVicepresidenteDeMesa(bytes32 delegadoEscuela, uint mesaId, bytes32 presidenteDeMesaEmail);setDelegadoDeEscuelaVerify(bytes32 newDelegadoDeEscuela);setDelegadoDeEscuela(bytes32 newDelegadoDeEscuela)"
daostack/daostack,contracts/schemes/Locking4Reputation.sol,"redeem(address _beneficiary);_release(address _beneficiary, bytes32 _lockingId)"
Yann-Liang/browser-solidity,contracts/src/gmbh/test.sol,Test(uint8 _numProposals)
serapath-contribution/browser-solidity,contracts/src/gmbh/test.sol,Test(uint8 _numProposals)
Pavel-DV/ChronoMint,old/LaborHourToken.sol,"isLOC(address _ad);LaborHourToken(address _mint, string _currency, uint _rate);setStatus(Status _status);setupFee(address _feeAddress);_transferWithReference(address _to, uint _value, string _reference, address _sender);_transferWithReference(address _to, uint _value, string _reference, address _sender, bool[1] memory _success);_transferFromWithReference(address _from, address _to, uint _value, string _reference, address _sender);_transferFromWithReference(address _from, address _to, uint _value, string _reference, address _sender, bool[1] memory _success);_transferFee(address _feeFrom, uint _fromValue, address _sender);_subjectToFees(address _feeFrom, uint _fromValue);calculateFee(uint _value);approved();addLOC(address loc);mint(uint qty);burn(uint qty);totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
bshevchenko/ChronoMint,old/LaborHourToken.sol,"isLOC(address _ad);LaborHourToken(address _mint, string _currency, uint _rate);setStatus(Status _status);setupFee(address _feeAddress);_transferWithReference(address _to, uint _value, string _reference, address _sender);_transferWithReference(address _to, uint _value, string _reference, address _sender, bool[1] memory _success);_transferFromWithReference(address _from, address _to, uint _value, string _reference, address _sender);_transferFromWithReference(address _from, address _to, uint _value, string _reference, address _sender, bool[1] memory _success);_transferFee(address _feeFrom, uint _fromValue, address _sender);_subjectToFees(address _feeFrom, uint _fromValue);calculateFee(uint _value);approved();addLOC(address loc);mint(uint qty);burn(uint qty);totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
mesh-market/mesh-market.github.io,mesh-market/node_modules/embark/demo/app/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
aragon/aragon-core,contracts/apps/AppProxyPinned.sol,implementation();proxyType();setPinnedCode(address _pinnedCode);pinnedCode()
FiatCentralBank/fiatcoin,test/TestOpenBids.sol,testOne()
SilentCicero/wafr,src/tests/solidityTests/gasUsage/OwnedProxy.sol,"OwnedProxy(address _owner);forward_transaction(address _destination, uint _value, bytes _calldata);transfer_ownership(address _owner)"
cryptape/cita,scripts/contracts/src/common/ReservedAddrPublic.sol,""
airalab/core,contracts/ens/AbstractResolver.sol,"supportsInterface(bytes4 _interfaceID);addr(bytes32 _node);setAddr(bytes32 _node, address _addr);hash(bytes32 _node);setHash(bytes32 _node, bytes32 _hash)"
SafeContracts/TREX-token,SafecontractsTREXCrowdfunding.sol,"checkInvariants();emergencyCall();fund();withdrawFunding();withdrawForTrexdevshop();changeBaseValue(uint valueInWei);campaignEndedSuccessfully();updateStage();setup(address safecontractsTREXFundAddress, address safecontractsTREXTokenAddress);SafecontractsTREXCrowdfunding()"
ameten/genesis,src/solidity/banknote.sol,"Owned();kill();kill();mint(uint256 amount);unmint(uint256 amount);kill();Banknote(address _centralBank, uint256 _faceValue);transfer(address to);change(uint256[] _faceValues);mine();returned();kill();logging(uint256 _id);print(uint256 _faceValue);destroy(address _banknote);destroy(address[] _banknotes);genuine(address _banknote);issue(uint256 _faceValue, address _holder);change(address _banknote, uint256[] _faceValues);unchanged(address _banknote)"
boisde/Greed_Island,party/contracts/product/AssetLimitHook.sol,"addAssetLimit(address _asset, uint256 _newLimit);editAssetLimit(address _asset, uint256 _newLimit);removeAssetLimit(address _asset);getAssets()"
SilentCicero/wafr,example/test.example.sol,setup();test_basicUnitTest();test_BasicThrow()
etherisc/flightDelay,contracts/FlightDelayOraclizeInterface.sol,""
yaronvel/smart_contracts,mixer/simple/SimpleMixer.sol,"SimpleMixer();newDeal( uint _depositDurationInHours, uint _claimDurationInHours, uint _claimUnitValueInWei, uint _claimDepositInWei, uint _minNumClaims );makeClaim( uint dealId );makeDeposit( uint dealId );withdraw( uint dealId );dealStatus(uint _dealId)"
vishakh/blockinstruments,contracts/Instrument.sol,Instrument();withdraw();trigger();poke();recall();ping();strToOperator(bytes32 str);strToUnderlierType(bytes32 str);isConditionMet()
pz7/liquet,test/TestLiquet.sol,testInitialBalanceUsingDeployedContract();testDecimalsUsingDeployedContract()
Atzen2/hacking-law-proto,truffle/contracts/EmpAgreements.sol,"EmpAgreements(address _agencyWallet);setPlAAdress(address _plAAddress);addEA(string _eAName, string _agencyName, string _emplyeName, uint32 _emplyeHWage, address _emplyeAdress, address _emplyeWalletAdress, string _attachment);signEA(uint32 _id);removeEA(uint32 _id);getEAAttributes(uint32 _id);isEASigned(uint32 _id)"
dltdojo/courses,ethereum/solidity/T290_MicroPayment.sol,"createPaymentChannel(address _to, uint _timeout, uint _amount);closeChannel(address channel , uint value);testCloseChannel();PaymentChannel(address to, uint timeout);closeChannel(uint value);closeChannelEcrecover(bytes32 h, uint8 v, bytes32 r, bytes32 s, uint value);channelTimeout()"
WeiFund/WeiFund,contracts/WeiFundTokenFactory.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);Standard_Token(uint256 _initialAmount);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);addService(address _service);ownerOf(address _service);isService(address _service);createStandardToken(address _owner, uint256 _initialAmount)"
ethereum/remix,remix-tests/tests/number/number_test.sol,""
dltdojo/courses,ethereum/truffle/T021_Migrations.sol,"Migrations();setCompleted(uint completed);upgrade(address new_address);setCompleted(uint completed);upgrade(address new_address);setOwner(address _owner);setCompleted(uint completed);upgrade(address new_address);setOwner(address _owner);setUpgradedOwner(address new_address, address _owner);setCompleted(uint completed);upgrade(address new_address)"
prashantpawar/DisputeResolution,contracts/accessRestricted.sol,changeOwner(address _newOwner);disown();forceOwnerChange(address _newOwner)
prashantpawar/truffle-octo-robot,contracts/accessRestricted.sol,changeOwner(address _newOwner);disown();forceOwnerChange(address _newOwner)
vanderheijden86/p2politics,contracts/Proposals.sol,"Proposals();getProposal(uint index);getProposalByIdIteration(uint id, uint iteration);getCount();_getDepth(uint id)"
ElcoinCurrency/ElcoinContract,contracts/PotRewards.sol,"rewardTo(address _to, uint _amount);configure(uint _periodicity, uint8 _auctionSize, uint _prize, uint _minTx, uint _counter, uint _startTime);transfer(address _from, address _to, uint _amount);_prepareAndSendReward()"
Neurone/persians,contracts/TimedWithBlock.sol,isInTime();isTimePassed()
chrisdotn/jsmnSol,test/TestPrimitives.sol,testStringKeyValue();testLongerJson();testIntegerKeyValue();testNegativeIntegerKeyValue();testBoolKeyValue();testFloatKeyValue()
Dicoiner/irianna-solidity,contracts/examples/SimpleToken.sol,SimpleToken()
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/monorepo/node_modules/nodepkg/NodeImport.sol,""
GuigsEvt/CrowdsaleEthereum,contracts/Ownable.sol,Ownable();transferOwnership(address newOwner)
boisde/Greed_Island,party/contracts/mocks/external/CompoundPriceOracleMock.sol,"setUnderlyingPrice(address _token, uint256 _newPrice);assetPrices(address _asset)"
BeBlockTech/Anemoi,Test/VotingApp/vote.sol,Ballot(bytes323[]proposalNames);giveRightVote(address voter);delegate(address to);vote(uint proposal)
chai2/Midterm,contracts/interfaces/ERC20Interface.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
Veterapreneur/VeteranCoin,test/TestVeteranCoin.sol,testInitalBalance();testAllowance();testBurn()
FedCoup/FedCoup,installed_contracts/zeppelin/contracts/token/MintableToken.sol,"mint(address _to, uint _amount);finishMinting()"
QTBlockchain/SolidityNWeb3,SmartContracts/Math/contracts/AddressDemo.sol,AddressDemo();changeOwner(address newOwner);changeTenant(address newTenant);getOwner();payRent(uint256 rentAmount)
alice-si/contracts,contracts/alice/Vault.sol,""
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/contracts/ownership/Ownable.sol,Ownable();transferOwnership(address newOwner)
pash7ka/zeppelin-solidity,contracts/ownership/Ownable.sol,Ownable();transferOwnership(address newOwner)
iswarm/p2pCny,contracts/ownership/Ownable.sol,Ownable();transferOwnership(address newOwner)
readevalprint/aragon-core,contracts/zeppelin/ownership/Ownable.sol,Ownable();transferOwnership(address newOwner)
Contraktor-Legal-Tech/contraktor-sign-smart-contract,contracts/Ownable.sol,Ownable();transferOwnership(address newOwner)
pz7/liquet,node_modules/zeppelin-solidity/contracts/ownership/Ownable.sol,Ownable();transferOwnership(address newOwner)
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/ownership/Ownable.sol,Ownable();transferOwnership(address newOwner)
dmx374/zeppelin-solidity,contracts/ownership/Ownable.sol,Ownable();transferOwnership(address newOwner)
cashpokerpro-dev/cash-smartcontracts,contracts/ownership/Ownable.sol,Ownable();transferOwnership(address newOwner)
LOOMIA/loomia,ethereum/test/Ownable.sol,Ownable();transferOwnership(address newOwner)
cinderblockchain/cindertoken,contracts/ownership/Ownable.sol,Ownable();transferOwnership(address newOwner)
redsquirrel/augur-core,src/factories/ReputationTokenFactory.sol,"createReputationToken(Controller _controller, Branch _branch)"
cgewecke/eth-gas-reporter,mock/contracts/Wallets/Wallet.sol,"transferPayment(uint payment, address payable recipient);sendPayment(uint payment, address payable recipient);getBalance()"
aragon/aragon-core,contracts/test/mocks/TimeHelpersMock.sol,getBlockNumberDirect();getBlockNumberExt();getTimestampDirect();getTimestampExt()
jellegerbrandy/daostack,contracts/zeppelin-solidity/test-helpers/StandardTokenMock.sol,"StandardTokenMock(address initialAccount, uint initialBalance)"
WingsDao/contracts,contracts/zeppelin/test-helpers/StandardTokenMock.sol,"StandardTokenMock(address initialAccount, uint initialBalance)"
flypme/flypme-contracts,contracts/MultiCappedCrowdsale.sol,"MultiCappedCrowdsale(uint256 _softCap, bytes32 _hardCapHash, uint256 _endBuffer);validPurchase();hashHardCap(uint256 _hardCap, uint256 _key);setHardCap(uint256 _hardCap, uint256 _key);checkHardCap(uint256 totalRaised)"
hackerhouseparis/abie,contracts/AbieFund.sol,"AbieFund(address[] initialMembers);addMember(address m);setDelegate(uint8 proposalType, address target);executeAddMemberProposal(uint proposalID);getDelegate(address member, uint8 proposalType);isExecutable(uint proposalID);isValidMember(address m)"
ownage-ltd/ether-router,contracts/Resolver.sol,"Resolver(address _fallback);lookup(bytes4 sig, bytes msgData);setAdmin(address _admin);replace(Resolver _replacement);register(string signature, address destination, uint outsize);registerLengthFunction(string mainSignature, string lengthSignature, address destination);setFallback(address _fallback);destination(bytes4 sig, bytes msgData);outsize(bytes4 sig, bytes msgData);dynamicLength(bytes4 sig, bytes msgData);stringToSig(string signature)"
charles-cooper/raiden,raiden/tests/smart_contracts/netting_channel/DecoderTester.sol,decodeLock(bytes lock);getTransferRawAddress(bytes signed_transfer);decodeTransfer(bytes transfer_raw)
wenweih/EthereumToken,token.sol,"Token();issue(address account, uint amount);transfer(address to, uint amount);getBalance(address account)"
BeBlockTech/Anemoi,Master/anemoi.sol,"Ownable();transferOwnership(address newOwner);transfer(address to, uint value);multisend(address _tokenAddr, address[] _to, uint256[] _value)"
BeBlockTech/Anemoi,Test/VotingApp/test.sol,"Ownable();transferOwnership(address newOwner);transfer(address to, uint value);multisend(address _tokenAddr, address[] _to, uint256[] _value)"
SerCeMan/intellij-solidity,src/test/resources/fixtures/parser/enums.sol,""
akhilss/embark-framework,test_app/app/contracts/another_storage.sol,AnotherStorage(address addr)
justmake/smart_contract,utils/Utils.sol,"Utils();safeAdd(uint256 _x, uint256 _y);safeSub(uint256 _x, uint256 _y);safeMul(uint256 _x, uint256 _y)"
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/contract_names/contracts/relative_import.sol,""
adklempner/solidity-license,contracts/zeppelin/token/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
onyb/ethane,core/contracts/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
youvegoteth/youvegoteth.github.io,contracts/contracts/zeppelin/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
adamdossa/ProfitSharingContract,installed_contracts/zeppelin/contracts/token/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
erkmos/moeda,contracts/vendored/openzeppelin/token/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
Upchain/upchain-hackathon-starterpack,contracts/HumanStandardTokenFactory.sol,"HumanStandardTokenFactory();verifyHumanStandardToken(address _tokenContract);codeAt(address _addr);createHumanStandardToken(uint256 _initialAmount, string _name, uint8 _decimals, string _symbol)"
Dobrokhvalov/eth2phone,contracts/Owned.sol,""
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/token/ERC20/PausableToken.sol,""
WingsDao/contracts,contracts/Wings.sol,"getBaseInfo(uint _index);getDAOById(bytes32 _daoId);getDAOId(uint _n);getUserDAOsCount(address _user);getUserDAOsId(address _user, uint _n)"
montyly/manticore,tests/ethereum/contracts/detectors/etherleak_true_neg.sol,withdrawfunds()
trailofbits/manticore,tests/ethereum/contracts/detectors/etherleak_true_neg.sol,withdrawfunds()
gnosis/gnosis-contracts,contracts/MarketMakers/MarketMaker.sol,"calcCost(Market market, uint8 outcomeTokenIndex, uint outcomeTokenCount);calcProfit(Market market, uint8 outcomeTokenIndex, uint outcomeTokenCount);calcNetCost(Market market, int[] memory outcomeTokenAmounts);calcMarginalPrice(Market market, uint8 outcomeTokenIndex)"
cryptape/cita,scripts/txtool/txtool/solidity/test.sol,SimpleStorage();set(uint x);get()
LykkeCity/EthereumApiDotNetCore,src/ContractBuilder/contracts/tokenTransferContract.sol,"TokenTransferContract(address coinAdapterAddress, address externalTokenAddress);cashin()"
derektiffany/DethTokens,contracts/ProjectToken.sol,"receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);owned();transferOwnership(address newOwner);kill();mintToken(address target, uint256 mintedAmount);transfer(address _to, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);transferFrom(address _from, address _to, uint256 _value)"
yuqingc/notebook1,bc/Coin.sol,"Coin();mint(address receiver, uint amount);send(address receiver, uint amount)"
LykkeCity/EthereumApiDotNetCore,src/ContractBuilder/contracts/token/emissiveToken.sol,""
aragon/aragon-core,contracts/factory/EVMScriptRegistryFactory.sol,newEVMScriptRegistry(Kernel _dao)
AugustoL/LifToken,contracts/LifCrowdsale.sol,setWeiPerUSDinTGE(uint256 _weiPerUSD);getRate();buyTokens(address beneficiary);forwardFunds(bool deployMVM);mintExtraTokens(uint256 foundationMonthsStart);funded();claimEth();returnPurchase(address contributor);finalize(bool deployMVM)
windingtree/LifToken,contracts/LifCrowdsale.sol,setWeiPerUSDinTGE(uint256 _weiPerUSD);getRate();buyTokens(address beneficiary);forwardFunds(bool deployMVM);mintExtraTokens(uint256 foundationMonthsStart);funded();claimEth();returnPurchase(address contributor);finalize(bool deployMVM)
ericvrp/SoliditySandbox,app/src/contracts/greeter.sol,greeter(string _greeting);getGreeting();setGreeting(string _greeting)
readevalprint/aragon-core,contracts/common/MiniMeToken.sol,"proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);Controlled();changeController(address _newController);receiveApproval(address from, uint256 _amount, address _token, bytes _data);transfer(address _to, uint256 _amount);balanceOf(address _owner);approve(address _spender, uint256 _amount);totalSupply();balanceOfAt(address _owner, uint _blockNumber);totalSupplyAt(uint _blockNumber);enableTransfers(bool _transfersEnabled);isContract(address _addr);min(uint a, uint b);claimTokens(address _token)"
olivier-schmitt/solc-maven-plugin,src/test/resources/contracts/solidity/BlindAuction.sol,"bid(bytes32 _blindedBid);placeBid(address bidder, uint value);withdraw();auctionEnd()"
PlutusIt/PlutusDEX,contracts/Pluton.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);approveAndCall(address _spender, uint256 _value, bytes _extraData)"
EMAXio/cosigner,cosigner-ethereum-token-storage/SolidityContracts/Old/TokenContract.sol,"getOwner();allowance(address _owner, address _spender);balanceOf(address _owner);totalSupply();TokenContract(address _owner, string _name, string _symbol, uint8 _decimals);updateOwner(address _owner);approve(address _spender, uint256 _value);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);transferOnBehalf(address _from, address _to, uint256 _value)"
Braveno/cosigner,cosigner-ethereum-token-storage/SolidityContracts/Old/TokenContract.sol,"getOwner();allowance(address _owner, address _spender);balanceOf(address _owner);totalSupply();TokenContract(address _owner, string _name, string _symbol, uint8 _decimals);updateOwner(address _owner);approve(address _spender, uint256 _value);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);transferOnBehalf(address _from, address _to, uint256 _value)"
EMAXio/heimdal,cosigner-ethereum-token-storage/SolidityContracts/Old/TokenContract.sol,"getOwner();allowance(address _owner, address _spender);balanceOf(address _owner);totalSupply();TokenContract(address _owner, string _name, string _symbol, uint8 _decimals);updateOwner(address _owner);approve(address _spender, uint256 _value);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);transferOnBehalf(address _from, address _to, uint256 _value)"
disruptivewidgets/pay2play-react,src/smart-contract/bracket.sol,"start(uint _numberOfParticipants);getTournament(uint _index);getTournamentContractAddress(uint _index);getTournamentCount();getTournamentParticipantCount(uint _index);getSeats_SideA(uint _index);getPlayerSlot_SideA(uint _index, address _player);getSeats_SideB(uint _index);getPlayerSlot_SideB(uint _index, address _player);activate();getNumberOfParticipants();getSeats_SideA();getSeats_SideB();join_SideA(uint _slot);addPlayer_SideA(address _player, uint _slot);containsPlayer_SideA(address _player);getPlayerSlot_SideA(address _player);promotePlayer_SideA(address _player);join_SideB(uint _slot);addPlayer_SideB(address _player, uint _slot);containsPlayer_SideB(address _player);getPlayerSlot_SideB(address _player);promotePlayer_SideB(address _player);setWinner(address _player)"
iam-dev/ERC23,test/helpers/UpgradeableStandard23TokenMock.sol,""
Arctek/eth_splitter,contracts/Pauseable.sol,setPaused(bool newPaused)
robmyers/artworld-ethereum,dapps/is-art/contracts/IsArt.sol,""
livepeer/protocol,contracts/previous/bonding/libraries/EarningsPoolV1.sol,"init(EarningsPoolV1.Data storage earningsPool, uint256 _stake, uint256 _rewardCut, uint256 _feeShare);hasClaimableShares(EarningsPoolV1.Data storage earningsPool);claimShare(EarningsPoolV1.Data storage earningsPool, uint256 _stake, bool _isTranscoder);feePoolShare(EarningsPoolV1.Data storage earningsPool, uint256 _stake, bool _isTranscoder);rewardPoolShare(EarningsPoolV1.Data storage earningsPool, uint256 _stake, bool _isTranscoder)"
montyly/manticore,tests/ethereum/contracts/consensys_benchmark/assert_minimal.sol,run()
trailofbits/manticore,tests/ethereum_bench/consensys_benchmark/assert_minimal.sol,run()
bokkypoobah/BokkyPooBahsEtherRefundablePrize,contract/BokkyPooBahsEtherRefundablePrize.sol,"Owned();transferOwnership(address _newOwner);acceptOwnership();totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _amount);BokkyPooBahsEtherRefundablePrize();buyPrice();buyPriceAt(uint256 at);sellPrice();buyTokens();sellTokens(uint256 amountOfTokens);deposit();ownerWithdraw(uint256 amount);amountOfEthersOwnerCanWithdraw();currentEtherBalance();currentTokenBalance()"
DonorToken/DonorToken,test/helpers/HasNoEtherTest.sol,HasNoEtherTest()
boisde/Greed_Island,party/contracts/protocol/SetValuer.sol,"calculateSetTokenValuation(ISetToken _setToken, address _quoteAsset)"
iudex/iudex,contracts/accountProviderBase.sol,"nibbleToChar(uint nibble);addressToBytes(address _address);iudexIdToString(bytes32 id);verify(bytes32 id, string userId, string proofLocation);score(bytes32 id, string userId)"
Stennuts66/gamma,contracts/AnotherContract.sol,""
ChronoBank/LX-SC,contracts/JobDataCore.sol,_init();_isValidFlow(uint _flow)
adklempner/solidity-license,contracts/zeppelin/lifecycle/Migrations.sol,setCompleted(uint256 completed);upgrade(address newAddress)
michinbear/solidity,test/compilationTests/zeppelin/lifecycle/Migrations.sol,setCompleted(uint256 completed);upgrade(address newAddress)
elementrem/solidity,test/compilationTests/zeppelin/lifecycle/Migrations.sol,setCompleted(uint256 completed);upgrade(address newAddress)
adamdossa/ProfitSharingContract,installed_contracts/zeppelin/contracts/lifecycle/Migrations.sol,setCompleted(uint256 completed);upgrade(address newAddress)
mothershipcx/contracts,contracts/interface/ApproveAndCallReceiver.sol,"receiveApproval(address _from, uint256 _amount, address _token, bytes _data)"
freepe/FreePeDAO,freepe.sol,"Task(address _work);isExist(uint id);getExpertiseId(uint id);newTask(string desc, string cat, uint256 budget, uint due);count();newExpertise(uint workId, uint parentTaskId);Work();newWork(uint taskId, uint256 budget, uint due, address sender);getTaskId(uint id);getWorkCount();deleteWork(uint id)"
livepeer/protocol,contracts/jobs/libraries/JobLib.sol,"validTranscodingOptions(string _transcodingOptions);calcFees(uint256 _totalSegments, string _transcodingOptions, uint256 _pricePerSegment);segmentHash(string _streamId, uint256 _segmentNumber, bytes32 _dataHash);personalSegmentHash(string _streamId, uint256 _segmentNumber, bytes32 _dataHash)"
b-mueller/mythril,tests/testdata/input_contracts/suicide.sol,kill(address payable addr)
livepeer/protocol,test/unit/TestEarningsPoolNoTranscoderRewardFeePool.sol,beforeEach();test_hasTranscoderRewardFeePool();test_addToFeePool();test_addToFeePool_zero();test_addToRewardPool();test_addToRewardPool_zero();test_claimShare_notTranscoder();test_claimShare_isTranscoder();test_claimShares_emptyFeePool_notTranscoder();test_claimShares_emptyFeePool_isTranscoder();test_claimShares_emptyRewardPool_notTranscoder();test_claimShares_emptyRewardPool_isTranscoder();test_claimShare_emptyFeeAndRewardPools();test_feePoolShare_noClaimableStake();test_feePoolShare_notTranscoder();test_feePoolShare_isTranscoder();test_rewardPoolShare_noClaimableStake();test_rewardPoolShare_notTranscoder();test_rewardPoolShare_isTranscoder();test_hasClaimableShares_nonZeroClaimableStake();test_hasClaimableShares_zeroClaimableStake()
GovernX/governx-contracts,src/contracts/utils/PrivateServiceRegistry.sol,register(address _service);isService(address _service)
Dicoiner/irianna-solidity,contracts/ownership/HasNoTokens.sol,"tokenFallback(address from_, uint256 value_, bytes data_);reclaimToken(address tokenAddr)"
ethbitcoin/goodbit,contracts/Token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
cryptape/cita,scripts/contracts/src/role_management/RoleManagement.sol,"newRole(bytes32 _name, address[] _permissions);deleteRole(address _role);updateRoleName(address _role, bytes32 _name);addPermissions(address _role, address[] _permissions);deletePermissions(address _role, address[] _permissions);setRole(address _account, address _role);cancelRole(address _account, address _role);clearRole(address _account)"
marekkirejczyk/ethereum.rb,spec/fixtures/TestContract.sol,"TestContract(string title);kill();set(bytes32 id, bytes32 sig);get(bytes32 id);unset(bytes32 id)"
renancosta/blockchainpatrimonio,contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
etherionlab/DTX,contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
FractalFlows/DAOResearch,ethereum/contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
OpenMoneyDigital/OpenMoneyToken,contracts/Presale.sol,transferToProjectWallet();refund();transferRemaining()
FiatCentralBank/fiatcoin,contracts/time/Clock.sol,get_time()
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.5/loops.sol,fnWithForLoop(uint index);fnWithWhileLoop(uint index);fnWithDoWhileLoop(uint index)
tad88dev/RanDAOs,contracts/RanDAOs.sol,"_DifficultyCalulate(uint16 Power, uint16 Difference);IsCampaignAvailable(uint CampaignId);StartCampaign();Submit(uint256 MyCampaign, bytes32 Key, uint16 Power);GetResult(uint256 MyCampaign);Reveal(uint256 MyCampaign);BitCompare(uint NumberA, uint NumberB);AddContribute(uint256 MyCampaign, Contribute NewContribute);UpdateContribute(uint256 MyCampaign, Contribute NewContribute)"
AIAlan/News,test/TestAdoption.sol,testUserCanAdoptionPet();testGetAdopterAddressByPetId();testGetAdopterAddressByPetIdInArray()
silasdavis/eris-db,tests/compilers_fixtures/contractImport1.sol,""
silasdavis/burrow,tests/compilers_fixtures/contractImport1.sol,""
papyrusglobal/smartcontracts,contracts/common/TokenERC20.sol,"transfer(address to, uint256 value);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);increaseAllowance(address spender, uint256 value);decreaseAllowance(address spender, uint256 value);totalSupply();balanceOf(address owner);allowance(address owner, address spender);_transfer(address from, address to, uint256 value);_increaseAllowance(address owner, address spender, uint256 value);_decreaseAllowance(address owner, address spender, uint256 value);_mint(address receiver, uint256 value);_burn(address burner, uint256 value);_burnFrom(address burner, uint256 value)"
LykkeCity/EthereumApiDotNetCore,src/ContractBuilder/contracts/token/Erc223/emissiveErc223Token.sol,""
AdChain/AdChainRegistry,contracts/PLCRVoting.sol,"PLCRVoting(address _tokenAddr);requestVotingRights(uint _numTokens);withdrawVotingRights(uint _numTokens);rescueTokens(uint _pollID);commitVote(uint _pollID, bytes32 _secretHash, uint _numTokens, uint _prevPollID);validPosition(uint _prevID, uint _nextID, address _voter, uint _numTokens);revealVote(uint _pollID, uint _voteOption, uint _salt);getNumPassingTokens(address _voter, uint _pollID, uint _salt);startPoll(uint _voteQuorum, uint _commitDuration, uint _revealDuration);isPassed(uint _pollID);getTotalNumberOfTokensForWinningOption(uint _pollID);pollEnded(uint _pollID);commitStageActive(uint _pollID);revealStageActive(uint _pollID);hasBeenRevealed(address _voter, uint _pollID);pollExists(uint _pollID);getCommitHash(address _voter, uint _pollID);getNumTokens(address _voter, uint _pollID);getLastNode(address _voter);getLockedTokens(address _voter);getInsertPointForNumTokens(address _voter, uint _numTokens);isExpired(uint _terminationDate);attrUUID(address _user, uint _pollID)"
erooijak/ethlance,resources/public/contracts/src/ethlanceSponsorWallet.sol,"EthlanceSponsorWallet();setEthlanceInvoiceContract(address _ethlanceInvoice);setEthlanceSponsorContract(address _ethlanceSponsor);receiveFunds();sendFunds(address receiver, uint amount)"
GX-Coin/SmartContract,GxUsesAdmins.sol,setAdminsContract(address adminsAddress)
aragon/aragon-core,contracts/test/mocks/UnsafeAragonAppMock.sol,initialize();getKernel();setKernelOnMock(IKernel _kernel)
maxxflyer/FLOOD,ControllerManager.sol,"ControllerManager();getController(uint contr);addController(address a,bool b)"
MarketProject/MarketProtocol,contracts/MarketContract.sol,isPostSettlementDelay();checkSettlement();settleContract(uint finalSettlementPrice)
mwensveen-nl/solidity-testing,src/test/resources/ArrayContract.sol,"setAllFlagPairs(bool[2][] newPairs);setFlagPair(uint index, bool flagA, bool flagB);changeFlagArraySize(uint newSize);clear();byteArrays(bytes data);addFlag(bool[2] flag);createMemoryArray(uint size)"
vishakh/blockinstruments,contracts/CallSpread.sol,CallSpread();authorizeTradingAccounts(uint buffer);validate();withdraw();exercise();rebalanceMargin();returnMargin();ping();getSellerOption();getBuyerOption();initiatedBy(address addr)
Great-Hill-Corporation/daodeepdive,assets/contracts/00-DAOTokenCreationProxyTransferer.sol,"DAOTokenCreationProxyTransferer(address _owner, address _dao);sendValues()"
rsksmart/rskj,rskj-core/src/test/resources/dsl/createAfterSuicide/Suicider.sol,""
rsksmart/rskj,rskj-core/src/test/resources/dsl/codeSizeAfterSuicide/Suicider.sol,""
livepeer/protocol,contracts/ManagerProxy.sol,"ManagerProxy(address _controller, bytes32 _targetContractId)"
vsimetka/MVP,wallet.sol,"multiowned(address[] _owners, uint _required);revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);getOwner(uint ownerIndex);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);reorganizeOwners();clearPending();daylimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today();changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);Wallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);clearPending()"
Capillar/capillar-solidity,proof of concept/CAP_ICO.sol,"CAP_ICO();totalSupply();balanceOf(address _adr);allowance(address _owner, address _spender);transfer(address _to, uint _amount);transferFrom(address _from, address _to, uint _amount);approve(address _spender, uint _amount);distributedTokens();burnedTokens();mint(address _to, uint _amount);setPlatformAddress(address _capillar);stopICO();burnBalance(address _account)"
jellegerbrandy/daostack,contracts/BackfeedDCO.sol,""
montyly/manticore,tests/ethereum/contracts/imports_issue/utils/DirImported2.sol,""
trailofbits/manticore,tests/ethereum/contracts/imports_issue/utils/DirImported2.sol,""
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.5/thisLocal.sol,b(address a)
btalabs/uniond,contracts/Uniond.sol,"Uniond();spendFunds(address _to, uint _amount, string _reason);getMemberCount();reviewActiveMembers(uint start, uint end);addElection(address nominee, uint position);voteElection(uint election);callElection(uint election);executeElectionMandate(uint election);applyMember();renewMembership();addMember(address newMember);setJoiningFee(uint fee);unionBalance();addIssue(string description);vote(uint issue, bool approve, uint amount);transferVotes(address reciever, uint amount);newAmendment(string reason, uint clause, uint value);voteAmendment(uint amendment);callAmendment(uint amendment);executeAmendmentMandate(uint amendment);totalVotes();totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value)"
chenlian2015/eosEthMarketSample,contracts/OLBlackWhiteListInterface.sol,"setContractServerBlackWhiteListType(string contractName, uint nType);getContractServerBlackWhiteListType(string contractName);addToBlackList(string contractName, address addr);addToWhiteList(string contractName, address addr);isAddressInBlackList(string contractName, address addr);isAddressInWhiteList(string contractName, address addr);isAddrCanCallServer(string contractName, address addr);removeFromBlackList(string contractName, address addr);removeFromWhiteList(string contractName, address addr)"
GovernX/governx-contracts,src/contracts/utils/tests/test.ExtendedController.sol,""
taoteh1221/DFD_Geth_JSON,sol/crowdfund-default.sol,"token();sendCoin(address receiver, uint amount);Crowdsale(address _beneficiary, uint _fundingGoal, uint _duration, uint _price, token _reward);checkGoalReached()"
michinbear/solidity,std/mortal.sol,kill()
ruchevits/solidity,std/mortal.sol,kill()
makerdao/maker.py,tests/abi/DaiMock.sol,"transferFrom(address,address,uint);mint(address,uint);burn(address,uint);slip(bytes32,bytes32,int);move(bytes32,bytes32,int);flux(bytes32,bytes32,bytes32,int);mul(uint x, uint y);hope(address guy);nope(address guy);move(address src, address dst, uint wad);join(bytes32 urn, uint wad);exit(address guy, uint wad)"
makerdao/keeper,tests/abi/DaiMock.sol,"transferFrom(address,address,uint);mint(address,uint);burn(address,uint);slip(bytes32,bytes32,int);move(bytes32,bytes32,int);flux(bytes32,bytes32,bytes32,int);mul(uint x, uint y);hope(address guy);nope(address guy);move(address src, address dst, uint wad);join(bytes32 urn, uint wad);exit(address guy, uint wad)"
LianaHus/dapp-bin,standardized_contract_apis/currency.sol,"currency();sendCoin(uint _value, address _to);sendCoinFrom(address _from, uint _value, address _to);coinBalance();coinBalanceOf(address _addr);approve(address _addr);isApproved(address _proxy);approveOnce(address _addr, uint256 _maxValue);isApprovedOnceFor(address _target, address _proxy);disapprove(address _addr)"
ethereum/dapp-bin,standardized_contract_apis/currency.sol,"currency();sendCoin(uint _value, address _to);sendCoinFrom(address _from, uint _value, address _to);coinBalance();coinBalanceOf(address _addr);approve(address _addr);isApproved(address _proxy);approveOnce(address _addr, uint256 _maxValue);isApprovedOnceFor(address _target, address _proxy);disapprove(address _addr)"
vaporry/dapp-bin,standardized_contract_apis/currency.sol,"currency();sendCoin(uint _value, address _to);sendCoinFrom(address _from, uint _value, address _to);coinBalance();coinBalanceOf(address _addr);approve(address _addr);isApproved(address _proxy);approveOnce(address _addr, uint256 _maxValue);isApprovedOnceFor(address _target, address _proxy);disapprove(address _addr)"
vvelikodny/go-ethereum,contracts/chequebook/contract/chequebook.sol,"cash(address beneficiary, uint256 amount, uint8 sig_v, bytes32 sig_r, bytes32 sig_s)"
wuestholz/go-ethereum,contracts/chequebook/contract/chequebook.sol,"cash(address beneficiary, uint256 amount, uint8 sig_v, bytes32 sig_r, bytes32 sig_s)"
meta-network/go-meta,vendor/github.com/ethereum/go-ethereum/contracts/chequebook/contract/chequebook.sol,"cash(address beneficiary, uint256 amount, uint8 sig_v, bytes32 sig_r, bytes32 sig_s)"
getamis/go-ethereum,contracts/chequebook/contract/chequebook.sol,"cash(address beneficiary, uint256 amount, uint8 sig_v, bytes32 sig_r, bytes32 sig_s)"
fireblock/go-ethereum,contracts/chequebook/contract/chequebook.sol,"cash(address beneficiary, uint256 amount, uint8 sig_v, bytes32 sig_r, bytes32 sig_s)"
trinityfx/trinity,contracts/chequebook/contract/chequebook.sol,"cash(address beneficiary, uint256 amount, uint8 sig_v, bytes32 sig_r, bytes32 sig_s)"
ethersphere/go-ethereum,contracts/chequebook/contract/chequebook.sol,"cash(address beneficiary, uint256 amount, uint8 sig_v, bytes32 sig_r, bytes32 sig_s)"
markya0616/go-ethereum,contracts/chequebook/contract/chequebook.sol,"cash(address beneficiary, uint256 amount, uint8 sig_v, bytes32 sig_r, bytes32 sig_s)"
jumbucks/go-jumbucksee,release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
tomashaber/raiden,raiden/smart_contracts/NettingChannelLibrary.sol,"deposit(Data storage self, uint256 amount);withdraw(Data storage self, bytes locked_encoded, bytes merkle_proof, bytes32 secret);computeMerkleRoot(bytes lock, bytes merkle_proof);settle(Data storage self);decodeLock(bytes lock);signatureSplit(bytes signature);index_or_throw(Data storage self, address participant_address);min(uint a, uint b);max(uint a, uint b)"
bionexus/SportsBlockDapp,contracts/BettingToken.sol,"BettingToken();addUser(address userAddress);addTokens(address tokenReceiver, uint256 amount);getSupply();payout();kill()"
boisde/Greed_Island,party/contracts/protocol/integration/KyberExchangeAdapter.sol,getSpender()
tiendatiowa/punch-clock,contracts/PunchClock.sol,"PunchClock();addMemberInternal(address member);addAdmin(address admin);addMember(address member);getPunchCardsInternal(address member);getMyPunchCards();getPunchCardsOf(address member);getAllMembers();getAllAdmins();getOwner();getLast(PunchCard[] punchCards);punchIn(address member, uint64 inTime);punchOut(address member, uint64 outTime);removeAdmin(address admin);removeMember(address member);isMember(address person);isAdmin(address person);changeOwner(address newOwner);destroy();addAdmins(address[] admins);addMembers(address[] members);batchPunchIn(address[] members,  uint64[] inTimes);batchPunchOut(address[] members,  uint64[] outTimes)"
Neufund/Contracts,contracts/watchdog/Watchdog.sol,"create(address wallet_owner);is_watched(address wallet);block(address wallet, bytes32 tx_id);unblock(address wallet, bytes32 tx_id);is_white_listed(address _to, uint _value, bytes _data)"
DonorToken/DonorToken,test/helpers-my/SampleERC677Token.sol,""
davidoevans/react-redux-dapp,contracts/SimpleWallet.sol,"SimpleWallet();sendFunds(uint amount, address receiver);allowAddressToSendMoney(address _address);disallowAddressToSendMoney(address _address);isAllowedToSend(address _address);killWallet()"
iam-dev/ERC23,contracts/token/interface/ERC23Receiver.sol,"tokenFallback(address _sender, address _origin, uint256 _value, bytes _data)"
Majoolr/ethereum-libraries,LinkedListLib/LinkedListLib.sol,"listExists(LinkedList storage self);nodeExists(LinkedList storage self, uint256 _node);sizeOf(LinkedList storage self);getNode(LinkedList storage self, uint256 _node);getAdjacent(LinkedList storage self, uint256 _node, bool _direction);getSortedSpot(LinkedList storage self, uint256 _node, uint256 _value, bool _direction);createLink(LinkedList storage self, uint256 _node, uint256 _link, bool _direction);insert(LinkedList storage self, uint256 _node, uint256 _new, bool _direction);remove(LinkedList storage self, uint256 _node);push(LinkedList storage self, uint256 _node, bool _direction);pop(LinkedList storage self, bool _direction)"
jellegerbrandy/daostack,contracts/NamedProposalBallot.sol,vote(uint proposal);winningProposal();executeWinningProposal()
DavdRoman/Payroll,contracts/Payroll/Payroll.sol,"Payroll(address _exchange, uint _allocationFrequency, uint _paydayFrequency);setEmployeeStorage(address _newEmployeeStorage);setExchange(address _newExchange);addEmployee(address _address, uint _yearlyUSDSalary, uint _startDate);setEmployeeAddress(uint _id, address _address);setEmployeeSalary(uint _id, uint _yearlyUSDSalary);determineSalaryTokens(address _employeeAddress);removeEmployee(uint _id);getEmployeeCount();getEmployeeId(address _address);getEmployee(uint _id);calculatePayrollBurnrate();calculatePayrollRunway();escapeHatch(bool _forced);changeAddress(address _address);determineAllocation(address[] _tokens, uint[] _distribution);payday()"
boisde/Greed_Island,party/contracts/protocol/integration/AaveMigrationWrapAdapter.sol,"getSpenderAddress(address /* _underlyingToken */, address /* _wrappedToken */)"
Fermion-Project/Light-Wallet,source_gnosis/contracts/MultiSigWalletWithDailyLimit.sol,"MultiSigWalletWithDailyLimit(address[] _owners, uint _required, uint _dailyLimit);changeDailyLimit(uint _dailyLimit);executeTransaction(uint transactionId);isUnderLimit(uint amount);calcMaxWithdraw()"
EMAXio/cosigner,cosigner-ethereum-token-storage/SolidityContracts/V4/StorageBase.sol,"StorageBase(address child);transfer(address dst, uint wad);transferFrom(address src, address dst, uint wad);approve(address guy, uint256 wad)"
Braveno/cosigner,cosigner-ethereum-token-storage/SolidityContracts/V4/StorageBase.sol,"StorageBase(address child);transfer(address dst, uint wad);transferFrom(address src, address dst, uint wad);approve(address guy, uint256 wad)"
EMAXio/heimdal,cosigner-ethereum-token-storage/SolidityContracts/V4/StorageBase.sol,"StorageBase(address child);transfer(address dst, uint wad);transferFrom(address src, address dst, uint wad);approve(address guy, uint256 wad)"
KayinCheung/KayinCheung.github.io,EscrowMyEtherEntityDB.sol,"EscrowMyEtherEntityDB();registerBuyer(string _name, string _info);registerSeller(string _name, string _info);registerEscrow(string _name, string _info);getBuyerFullInfo(address buyerAddress);getSellerFullInfo(address sellerAddress);getEscrowFullInfo(address escrowAddress)"
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/contracts/ownership/HasNoContracts.sol,reclaimContract(address contractAddr)
pash7ka/zeppelin-solidity,contracts/ownership/HasNoContracts.sol,reclaimContract(address contractAddr)
iswarm/p2pCny,contracts/ownership/HasNoContracts.sol,reclaimContract(address contractAddr)
readevalprint/aragon-core,contracts/zeppelin/ownership/HasNoContracts.sol,reclaimContract(address contractAddr)
pz7/liquet,node_modules/zeppelin-solidity/contracts/ownership/HasNoContracts.sol,reclaimContract(address contractAddr)
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/ownership/HasNoContracts.sol,reclaimContract(address contractAddr)
dmx374/zeppelin-solidity,contracts/ownership/HasNoContracts.sol,reclaimContract(address contractAddr)
cashpokerpro-dev/cash-smartcontracts,contracts/ownership/HasNoContracts.sol,reclaimContract(address contractAddr)
cinderblockchain/cindertoken,contracts/ownership/HasNoContracts.sol,reclaimContract(address contractAddr)
AnnaIsAWang/LedgerLabsCoops2016,AbstractedStateChannel/TicTacToeLockedState.sol,"TicTacToeLockedState(address _addressX, address _addressO, address _burner);deposit(uint account);getBalance(uint account);checkState(bytes state);broadcastState(bytes state)"
Majoolr/ethereum-libraries,ArrayUtilsLib/truffle/test/TestArrayUtilsLibTwo.sol,beforeAll();testUnsortedIndexOfFunction();testNoIndexOfFunction();testHeapSortFunction();testUniqFunction()
PlutusIt/PlutusDEX,contracts/owned.sol,owned()
rakevsul/rtc2017,test/TestRtcCoin.sol,testInitialBalanceUsingDeployedContract()
Lunyr/crowdsale-contracts,contracts/SafeMath.sol,"safeMul(uint a, uint b);safeDiv(uint a, uint b);safeSub(uint a, uint b);safeAdd(uint a, uint b);assert(bool assertion)"
tarsoqueiroz/NodeJS,Blockchain/Ethereum/web3App/smartContract/src/Citizen.sol,kill();greet()
BlockTube/blocktube-client.0.3,app/contracts/BlockTubePrepaid.sol,BlockTubePrepaid(address _validsender);claim(address _destination)
orbro/eth-enablers,eth-tweet-master/TweetAccount.sol,TweetAccount();isAdmin();tweet(string tweetString);getTweet(uint tweetId);getLatestTweet();getOwnerAddress();getNumberOfTweets();adminRetrieveDonations(address receiver);adminDeleteAccount()
yep/eth-tweet,TweetAccount.sol,TweetAccount();isAdmin();tweet(string tweetString);getTweet(uint tweetId);getLatestTweet();getOwnerAddress();getNumberOfTweets();adminRetrieveDonations(address receiver);adminDeleteAccount()
Dicoiner/irianna-solidity,contracts/ownership/HasNoEther.sol,HasNoEther();reclaimEther()
gnosis/gnosis-contracts,contracts/Oracles/DifficultyOracleFactory.sol,createDifficultyOracle(uint blockNumber)
kowala-tech/kUSD,client/contracts/truffle/contracts/token/TokenReceiver.sol,"tokenFallback(address _from, uint _value, bytes _data)"
yuqingc/notebook1,bc/Ballot.sol,giveRightToVote(address voter);delegate(address to);vote(uint proposal);winningProposal();winnerName()
status-im/status-go,services/wallet/erc20/erc20.sol,"transfer(address to, uint256 value);balanceOf(address account)"
Lunyr/crowdsale-contracts,contracts/MultiSigWallet.sol,"MultiSigWallet(address[] _owners, uint _required);addOwner(address owner);removeOwner(address owner);replaceOwnerIndexed(address owner, address newOwner, uint index);changeRequirement(uint _required);submitTransaction(address destination, uint value, bytes data);confirmTransaction(uint transactionId);revokeConfirmation(uint transactionId);isConfirmed(uint transactionId);executeTransaction(uint transactionId);addTransaction(address destination, uint value, bytes data);getConfirmationCount(uint transactionId);getTransactionCount(bool pending, bool executed);getOwners();getConfirmations(uint transactionId);getTransactionIds(uint from, uint to, bool pending, bool executed)"
Fermion-Project/Light-Wallet,contracts/Proposal.sol,Proposal(string name);vote(uint decision);proposalPassed()
BeBlockTech/Anemoi,Master/Contracts/ANMVesting.sol,"balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value);safeAdd(uint256 x, uint256 y);safeSubtract(uint256 x, uint256 y);safeMult(uint256 x, uint256 y);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);balanceOf(address _owner);approve(address _spender, uint _value);allowance(address _owner, address _spender);Ownable();transferOwnership(address newOwner);pause();unpause();AnemoiToken();transfer(address _to, uint _value);approve(address _spender, uint _value);ANMvesting();unlock()"
Juzix/BlockChain-Demo,contracts/token/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
zetherz/eth-match,test/helpers/VestedTokenMock.sol,"VestedTokenMock(address initialAccount, uint256 initialBalance)"
TruLtd/tru-reputation-token,contracts/test-helpers/MockSupportToken.sol,testMath();testTransfer(address _from)
Dicoiner/irianna-solidity,contracts/crowdsale/RefundVault.sol,RefundVault(address _wallet);deposit(address investor);close();enableRefunds();refund(address investor)
jellegerbrandy/daostack,contracts/zeppelin-solidity/SafeMath.sol,"safeMul(uint a, uint b);safeSub(uint a, uint b);safeAdd(uint a, uint b);assert(bool assertion)"
cgewecke/solcover,test/sources/zeppelin/SafeMath.sol,"safeMul(uint a, uint b);safeSub(uint a, uint b);safeAdd(uint a, uint b);assert(bool assertion)"
WingsDao/contracts,contracts/zeppelin/SafeMath.sol,"safeMul(uint a, uint b);safeSub(uint a, uint b);safeAdd(uint a, uint b);assert(bool assertion)"
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/SafeMath.sol,"safeMul(uint a, uint b);safeSub(uint a, uint b);safeAdd(uint a, uint b);assert(bool assertion)"
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/SafeMath.sol,"safeMul(uint a, uint b);safeSub(uint a, uint b);safeAdd(uint a, uint b);assert(bool assertion)"
AragonOne/zeppelin-solidity,contracts/SafeMath.sol,"safeMul(uint a, uint b);safeSub(uint a, uint b);safeAdd(uint a, uint b);assert(bool assertion)"
JoinColony/solcover,test/sources/zeppelin/SafeMath.sol,"safeMul(uint a, uint b);safeSub(uint a, uint b);safeAdd(uint a, uint b);assert(bool assertion)"
kobigurk/go-ethereum,contracts/chequebook/contract/chequebook.sol,""
Getline-Network/getline,vendor/github.com/ethereum/go-ethereum/contracts/chequebook/contract/chequebook.sol,""
etherite/go-etherite,contracts/chequebook/contract/chequebook.sol,""
xenioplatform/go-xenio,contracts/chequebook/contract/chequebook.sol,""
Lopastvertoleta/go-ethereum,contracts/chequebook/contract/chequebook.sol,""
adrianbrink/tendereum,vendor/github.com/cosmos/tendereum/vendor/github.com/ethereum/go-ethereum/contracts/chequebook/contract/chequebook.sol,""
adrianbrink/tendereum,vendor/github.com/ethereum/go-ethereum/contracts/chequebook/contract/chequebook.sol,""
mixbytes/storiqa_ico,contracts/test_helpers/token/MintableMultiownedTokenTestHelper.sol,"MintableMultiownedTokenTestHelper(address[] _owners, uint _signatures, address _minter);emission(uint256 _weiToEmit)"
Storiqa/ico_smart_contract,contracts/test_helpers/token/MintableMultiownedTokenTestHelper.sol,"MintableMultiownedTokenTestHelper(address[] _owners, uint _signatures, address _minter);emission(uint256 _weiToEmit)"
Majoolr/ethereum-libraries,TokenLib/truffle/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Majoolr/ethereum-libraries,StringUtilsLib/truffle/contracts/StringUtilsLib.sol,"memcpy(uint dest, uint src, uint len);toSlice(string self);len(bytes32 self);copy(slice self);toString(slice self);len(slice self);empty(slice self);compare(slice self, slice other);equals(slice self, slice other);nextRune(slice self, slice rune);nextRune(slice self);ord(slice self);keccak(slice self);startsWith(slice self, slice needle);beyond(slice self, slice needle);endsWith(slice self, slice needle);until(slice self, slice needle);findPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);rfindPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);find(slice self, slice needle);rfind(slice self, slice needle);split(slice self, slice needle, slice token);split(slice self, slice needle);rsplit(slice self, slice needle, slice token);rsplit(slice self, slice needle);count(slice self, slice needle);contains(slice self, slice needle);concat(slice self, slice other);join(slice self, slice[] parts)"
UrsZeidler/smart-contract-examples,javaExample/src/main/resources/contracts/contracts.sol,"raiseEvent(string _text);addStruct(uint _a1,string _a2);ContractExample(string _text);contractData();changeLocked(bool _locked);changeState(ContractState _state);isInState();throwIfLocked();returnStateChange();returnLast();getNumber();ExampleToken(uint256 _totalTokens);totalSupply();balanceOf(address _owner);transfer(address _to,uint256 _value);transferFrom(address _from,address _to,uint256 _value);sendBack();recieve();relay(address _to);JavaOwnerExample()"
ownage-ltd/ether-router,contracts/test/Two.sol,setTwo(uint _two);getTwo()
iam-dev/ERC23,installed_contracts/zeppelin-solidity/contracts/ownership/CanReclaimToken.sol,reclaimToken(ERC20Basic token)
boisde/Greed_Island,party/contracts/mocks/protocol/integration/AaveLendingPoolCoreMock.sol,"getReserveATokenAddress(address _reserve);setReserveATokenAddress(address _reserve, address _aToken)"
LianaHus/dapp-bin,standardized_contract_apis/datafeed.sol,"datafeed();set(bytes32 k, int256 v);get(bytes32 k)"
ethereum/dapp-bin,standardized_contract_apis/datafeed.sol,"datafeed();set(bytes32 k, int256 v);get(bytes32 k)"
vaporry/dapp-bin,standardized_contract_apis/datafeed.sol,"datafeed();set(bytes32 k, int256 v);get(bytes32 k)"
citizencode/embark-framework,test/support/contracts/data_source.sol,DataSource();set(uint num)
d11e9/embark-framework,test/support/contracts/data_source.sol,DataSource();set(uint num)
jpentland/BitBadge,node_modules/embark-framework/test/support/contracts/data_source.sol,DataSource();set(uint num)
jpentland/BitBadge,node_modules/grunt-embark/node_modules/embark-framework/test/support/contracts/data_source.sol,DataSource();set(uint num)
jeffanthony/embark-framework,test/support/contracts/data_source.sol,DataSource();set(uint num)
SafeMarket/embark-framework,test/support/contracts/data_source.sol,DataSource();set(uint num)
mesh-market/mesh-market.github.io,mesh-market/node_modules/embark/old_test/support/contracts/data_source.sol,DataSource();set(uint num)
hitchcott/embark-framework,test/support/contracts/data_source.sol,DataSource();set(uint num)
troyth/embark-dappsforbeginners-demo,embark_demo/node_modules/embark-framework/test/support/contracts/data_source.sol,DataSource();set(uint num)
johnkozan/embark-framework,test/support/contracts/data_source.sol,DataSource();set(uint num)
AronVanAmmers/embark-framework,test/support/contracts/data_source.sol,DataSource();set(uint num)
RCasatta/embark-framework,test/support/contracts/data_source.sol,DataSource();set(uint num)
VoR0220/embark-framework,test/support/contracts/data_source.sol,DataSource();set(uint num)
aakilfernandes/embark-framework,test/support/contracts/data_source.sol,DataSource();set(uint num)
ryepdx/embark-framework,test/support/contracts/data_source.sol,DataSource();set(uint num)
tom-seddon/embark-framework,test/support/contracts/data_source.sol,DataSource();set(uint num)
gerbrand/embark-framework,test/support/contracts/data_source.sol,DataSource();set(uint num)
akhilss/embark-framework,old_test/support/contracts/data_source.sol,DataSource();set(uint num)
wpypeiyao/Identity-On-Blockchain,node_modules/embark/old_test/support/contracts/data_source.sol,DataSource();set(uint num)
xiaopow/embark-framework,test/support/contracts/data_source.sol,DataSource();set(uint num)
LykkeCity/EthereumApiDotNetCore,src/ContractBuilder/contracts/token/Erc223/lykkeTokenErc223Base.sol,""
bartcant/FiatRelay,Contract Code/fiatrelay.sol,mortal();kill()
rmerom/PutYourMoneyWhereYourContractIs,contracts/BaseChallengerContract.sol,"execute(address targetContract, EnvironmentContractInterface env)"
SwapyNetwork/swapy-exchange-protocol,test/helpers/ThrowProxy.sol,execute();shouldThrow()
pipermerriam/ethereum-alarm-clock,contracts/_examples/DelayedPayment.sol,payout();collectRemaining()
ultra-koder/JobMarket,dapp/contracts/contract.sol,Contract()
melonproject/protocol,contracts/fund/hub/Spoke.sol,__getFeeManager();__getHub();__getPolicyManager();__getPriceSource();__getRegistry();__getShares();__getValueInterpreter();__getVault()
aragon/aragon-network-token,packages/sale/installed_contracts/zeppelin/contracts/ownership/Claimable.sol,transferOwnership(address newOwner);claimOwnership()
pooleja/SolidityPlayground,contracts/zeppelin/ownership/Claimable.sol,transferOwnership(address newOwner);claimOwnership()
maraoz/zeppelin-solidity,contracts/ownership/Claimable.sol,transferOwnership(address newOwner);claimOwnership()
orbro/eth-enablers,ethereum-examples-master/solidity/Alarm.sol,"Alarm();__callback(bytes32 myid, string result)"
ghostnetwrk/ghostnet,contract/ghostdns.sol,"register(bytes32 _name, bytes32 _hash1, bytes32 _hash2, bytes32 _comment);lookup(bytes32 _name)"
WeiFund/WeiFund,app/client/lib/contracts/WeiFund.sol,"newCampaign(uint _campaignID, address _owner, uint _fundingGoal);contribute(uint _campaignID, address _contributor, address _beneficiary, uint _amountContributed);refund(uint _campaignID, address _contributor, uint _amountRefunded);payout(uint _campaignID, uint _amountPaid);newCampaign(string _name, address _beneficiary, uint _fundingGoal, uint _expiry, address _config);contribute(uint _campaignID, address _beneficiary);refund(uint _campaignID, uint contributionID);payout(uint _campaignID);operatorCampaignID(address _operator, uint _campaignIndex);totalCampaignsBy(address _operator);totalCampaigns();contributionAt(uint _campaignID, uint _contributionID);contributionID(uint _campaignID, address _contributor, uint _contributionIndex);totalContributionsBy(uint _campaignID, address _contributor);isContributor(uint _campaignID, address _contributor);ownerOf(uint _campaignID);beneficiaryOf(uint _campaignID);configOf(uint _campaignID);amountRaisedBy(uint _campaignID);fundingGoalOf(uint _campaignID);expiryOf(uint _campaignID);createdAt(uint _campaignID);totalContributions(uint _campaignID);isOwner(uint _campaignID, address _owner);hasFailed(uint _campaignID);isSuccess(uint _campaignID);isPaidOut(uint _campaignID);isActive(uint _campaignID);totalRefunded(uint _campaignID);isRefunded(uint _campaignID)"
ineiti/cothorities,bevm/testdata/Candy/Candy.sol,""
DeDiS/cothority,bevm/testdata/Candy/Candy.sol,""
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.4.24/ERC20.sol,"name();symbol();decimals();totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
GX-Coin/SmartContract,ERC20.sol,"totalSupply();balanceOf( address who );allowance(address owner, address spender);transfer( address to, uint value);transferFrom( address from, address to, uint value);approve(address spender, uint value)"
stanta/darfchain,ICO/contracts/TokenTranchePricing.sol,"TokenTranchePricing(uint[] _tranches);setPreicoAddress(address preicoAddress, uint pricePerToken);getTranche(uint n);getFirstTranche();getLastTranche();getPricingStartsAt();getPricingEndsAt();isSane(address _crowdsale);getCurrentTranche(uint tokensSold);getCurrentPrice(uint tokensSold);calculatePrice(uint value, uint weiRaised, uint tokensSold, address msgSender, uint decimals)"
aragon/aragon-core,contracts/evmscript/EVMScriptRunner.sol,"getEVMScriptExecutor(bytes _script);getEVMScriptRegistry();runScript(bytes _script, bytes _input, address[] _blacklist);returnedDataDecoded()"
airalab/core,contracts/misc/SingletonHash.sol,singletonHash(bytes32 _hash)
SilentCicero/wafr,src/tests/solidityTests/gasUsage/examples/StandardCampaign.sol,checkInvarience();contributeMsgValue();payoutToBeneficiary();claimRefundOwed(uint256 _contributionID);totalContributions();totalContributionsBySender(address _sender)
chentschel/ethgames-contracts,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
unb-ppca-construcao-de-software-2017/ouvidorias-catalogo,catalogo-project/contracts/CatalogoOuvidorias.sol,"CatalogoOuvidorias(bytes32 nome, uint8 tipoEnte, bytes32 nomeEnte, bytes32 endpoint);inserirOuvidoriaNoCadastro(address conta, bytes32 nome, uint8 tipoEnte, bytes32 nomeEnte, bytes32 endpoint);toTipoEnte(uint8 tipo);getNumeroDeOuvidorias();getContaOuvidoria(uint indiceDaOuvidoriaNoArray);getOuvidoriaNome(address contaOuvidoria);getOuvidoriaEndpoint(address contaOuvidoria);getOuvidoriaEnteTipo(address contaOuvidoria);getOuvidoriaEnteNome(address contaOuvidoria);autorizar(address contaOuvidoriaCandidata);isOuvidoriaCadastrada(address contaOuvidoria);autorizadoraNuncaAutorizouCandidata(address contaOuvidoriaAutorizadora, address contaOuvidoriaCandidata);cadastrar(bytes32 nome, uint8 tipoEnte, bytes32 nomeEnte, bytes32 endpoint);quantidadeDeAutorizacoes(address contaOuvidoriaCandidata);quantidadeDeAutorizacoesNecessariasParaUmaNovaOuvidoriaPoderSeCadastrar();toString(bytes32 x)"
duaraghav8/Solium,test/lib/rules/array-declarations/unfixed/ws-btw-op-clos.sol,""
boisde/Greed_Island,party/contracts/mocks/external/ZeroExMock.sol,addSetTokenAddress(address _setTokenAddress)
fkbenjamin/pc-firebase-starter,contracts/Nation.sol,"Nation(address _immigrationCtrl, address _embassyCtrl);setImmigrationCtrl(address _immigrationCtrl);setEmbassyCtrl(address _embassyCtrl);addCountry(address country, uint countryId);addImmigration(address immigration);addEmbassy(address embassy);removeImmigration(address immigration);removeEmbassy(address embassy)"
ConsenSys/dao-wars,contracts/BrainMock.sol,ping();reset()
reverendus/tx-manager,src/tx.t.sol,"Tester(ERC20 token_);ok(uint256 value_);balance();fail();NotThrowingToken(uint supply);totalSupply();balanceOf(address src);allowance(address src, address guy);transfer(address dst, uint wad);transferFrom(address src, address dst, uint wad);approve(address guy, uint wad);setUp();testNoTokensNoCalls();testNoTokensOneCall();testNoTokensTwoCalls();testFailOnFailedTransfer();testFailOnFailedCall();testNoTokenTransferIfNotApproved();testTransferTokenAllowanceAndReturnFunds();testTransferNoMoreThanTokenBalance();testTransferTwoTokensAndReturnFunds();uintToBytes(uint256 x);addressToBytes(address a);joinBytes(bytes a, bytes b);joinBytes(bytes a, bytes b, bytes c);tokens(address a1);tokens(address a1, address a2)"
TruLtd/tru-reputation-token,src/0.1.9/TruReputationTokenFull.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);Ownable();transferOwnership(address newOwner);balanceOf(address who);transfer(address to, uint256 value);transfer(address _to, uint256 _value);balanceOf(address _owner);allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);increaseApproval(address _spender, uint _addedValue);decreaseApproval(address _spender, uint _subtractedValue);setReleaseAgent(address addr);setTransferAgent(address addr, bool state);releaseTokenTransfer();mint(address _to, uint256 _amount);finishMinting(bool _presale, bool _sale);isUpgradeAgent();upgradeFrom(address _from, uint256 _value);TruUpgradeableToken(address _upgradeMaster);upgrade(uint256 _value);setUpgradeAgent(address _agent);getUpgradeState();setUpgradeMaster(address _master);canUpgrade();TruReputationToken();changeBoardAddress(address _newAddress);canUpgrade();setUpgradeMaster(address _master)"
TruLtd/tru-reputation-token,src/0.1.10/TruReputationTokenFull.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);Ownable();transferOwnership(address newOwner);balanceOf(address who);transfer(address to, uint256 value);transfer(address _to, uint256 _value);balanceOf(address _owner);allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);increaseApproval(address _spender, uint _addedValue);decreaseApproval(address _spender, uint _subtractedValue);setReleaseAgent(address addr);setTransferAgent(address addr, bool state);releaseTokenTransfer();mint(address _to, uint256 _amount);finishMinting(bool _presale, bool _sale);isUpgradeAgent();upgradeFrom(address _from, uint256 _value);TruUpgradeableToken(address _upgradeMaster);upgrade(uint256 _value);setUpgradeAgent(address _agent);getUpgradeState();setUpgradeMaster(address _master);canUpgrade();TruReputationToken();changeBoardAddress(address _newAddress);canUpgrade();setUpgradeMaster(address _master)"
duaraghav8/Solium,test/lib/rules/indentation/accept/struct.sol,setFoo(uint _foo)
Sjors/dao-challenge,contracts/sell-order.sol,terminate()
daostack/daostack,contracts/controller/Controller.sol,"mintReputation(uint256 _amount, address _to, address _avatar);burnReputation(uint256 _amount, address _from, address _avatar);mintTokens(uint256 _amount, address _beneficiary, address _avatar);registerScheme(address _scheme, bytes32 _paramsHash, bytes4 _permissions, address _avatar);unregisterScheme( address _scheme, address _avatar);unregisterSelf(address _avatar);addGlobalConstraint(address _globalConstraint, bytes32 _params, address _avatar);upgradeController(address _newController, Avatar _avatar);genericCall(address _contract, bytes calldata _data, Avatar _avatar, uint256 _value);sendEther(uint256 _amountInWei, address payable _to, Avatar _avatar);externalTokenTransfer(IERC20 _externalToken, address _to, uint256 _value, Avatar _avatar);externalTokenApproval(IERC20 _externalToken, address _spender, uint256 _value, Avatar _avatar);metaData(string calldata _metaData, Avatar _avatar);getNativeReputation(address _avatar);isSchemeRegistered(address _scheme, address _avatar);getSchemeParameters(address _scheme, address _avatar);getSchemePermissions(address _scheme, address _avatar);getGlobalConstraintParameters(address _globalConstraint, address);globalConstraintsCount(address _avatar);isGlobalConstraintRegistered(address _globalConstraint, address _avatar);_isSchemeRegistered(address _scheme)"
montyly/manticore,tests/ethereum/contracts/consensys_benchmark/integer_overflow_mapping_sym_1.sol,"init(uint256 k, uint256 v)"
trailofbits/manticore,tests/ethereum_bench/consensys_benchmark/integer_overflow_mapping_sym_1.sol,"init(uint256 k, uint256 v)"
Codewars/codewars-runner,frameworks/ethereum/contracts/SimpleAuction.sol,bid();withdraw();auctionEnd()
Codewars/codewars-runner-cli,frameworks/ethereum/contracts/SimpleAuction.sol,bid();withdraw();auctionEnd()
OverZealous/codewars-runner-cli,frameworks/ethereum/contracts/SimpleAuction.sol,bid();withdraw();auctionEnd()
ethrlink/ethrlink.github.io,contract.sol,"ETHRLINK(address _contractOwner, address _withdrawWallet);get(string key);set(string key, string value, uint period);deactivateKey(string key);withdraw()"
airalab/core,contracts/robonomics/interface/ILighthouse.sol,providersLength();quotaOf(address _provider);refill(uint256 _value);withdraw(uint256 _value)
AsIGL/SolidityExamples,Basic Examples/BallotSimple.sol,getNumber();getWords();getNumbers();setNumbers(uint _number);getWords()
daostack/daostack,contracts/test/PolkaCurve.sol,calc(uint256 _value)
taoteh1221/DFD_Geth_JSON,sol/greeter-default.sol,mortal();kill();greeter(string _greeting);greet()
cosmos/fundraiser-lib,src/truffle/contracts/Wallet.sol,"multiowned(address[] _owners, uint _required);revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);getOwner(uint ownerIndex);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);reorganizeOwners();clearPending();daylimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today();changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);Wallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);create(uint _value, bytes _code);confirm(bytes32 _h);clearPending()"
AragonOne/zeppelin-solidity,contracts/token/StandardToken.sol,"StandardToken();totalSupply();balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value)"
ethereum/remix,remix-tests/tests/examples_3/simple_string.sol,get()
dharmeshkakadia/eris,libraries/erisdb/Godeps/_workspace/src/github.com/eris-ltd/go-ethereum/ex.sol,""
dharmeshkakadia/eris,libraries/decerver/epm-go/Godeps/_workspace/src/github.com/eris-ltd/go-ethereum/ex.sol,""
cgewecke/solcover,test/sources/expressions/new-expression.sol,a(uint x)
JoinColony/solcover,test/sources/expressions/new-expression.sol,a(uint x)
eris-ltd/eris-db,tests/compilers_fixtures/contractImport1.sol,""
energychain/StromDAO-BusinessObject,smart_contracts/StromDAO-BO-SC-Tokenizer.sol,"owned();transferOwnership(address newOwner);storeReading(uint256 _reading);build(MPReading _reading,address _meterpoint);MPToken(MPReading _reading,address _meterpoint);issue();build(MPReading _reading,address _meterpoint);MPDelta(MPReading _reading,address _meterpoint);delta();build(MPReading _reading,address _meterpoint);CUToken(MPReading _reading,address _meterpoint);addMeterpoint(address _meterpoint);issue();transfer(address _to, uint256 _value);receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);issue(uint256 _value);transfer(address _to, uint256 _value);XToken();setRate(token _token,uint256 rate);x(token from_token)"
pipermerriam/ethereum-alarm-clock,contracts/Library/RequestScheduleLib.sol,"getNow(ExecutionWindow storage self);_getNow(TemporalUnit _temporalUnit);computePaymentModifier(ExecutionWindow storage self);windowEnd(ExecutionWindow storage self);reservedWindowEnd(ExecutionWindow storage self);freezeStart(ExecutionWindow storage self);firstClaimBlock(ExecutionWindow storage self);isBeforeWindow(ExecutionWindow storage self);isAfterWindow(ExecutionWindow storage self);inWindow(ExecutionWindow storage self);inReservedWindow(ExecutionWindow storage self);inClaimWindow(ExecutionWindow storage self);isBeforeFreeze(ExecutionWindow storage self);isBeforeClaimWindow(ExecutionWindow storage self);validateReservedWindowSize(uint _reservedWindowSize, uint _windowSize);validateWindowStart(TemporalUnit _temporalUnit, uint _freezePeriod, uint _windowStart);validateTemporalUnit(uint _temporalUnitAsUInt)"
WishFinanceCom/WF-contracts,contracts/buyback/BuyBack.sol,"emitError(uint errorCode);emitPricesUpdated(uint buyPrice, uint sellPrice);emitActiveChanged(bool isActive);_error(uint error);_emitPricesUpdated(uint buyPrice, uint sellPrice);_emitActiveChanged(bool isActive);setupEventsHistory(address _eventsHistory);init(Asset _asset, DelayedPayments _delayedPayments);setActive(bool _active);setPrices(uint _buyPrice, uint _sellPrice);_balanceOf(address _address);sell(uint _amount, uint _price);withdrawTokens(address _recipient, uint _amount);withdrawAllTokens(address _recipient);withdrawEth(address _recipient, uint _amount);withdrawAllEth(address _recipient);withdrawAll(address _recipient);emitError(uint errorCode);emitPricesUpdated(uint buyPrice, uint sellPrice);emitActiveChanged(bool isActive);getEventsHistory();_mul(uint _a, uint _b)"
orbro/eth-enablers,solidity-baby-steps-master/contracts/45_ping.sol,getPongvalTransactional();Ping(PongvalRetriever _pongAddress);getPongvalRemote();getPongvalConstant();setPongAddress(PongvalRetriever _pongAddress);getPongAddress();getAddress();kill()
mixbytes/storiqa_ico,contracts/test_helpers/crowdsale/FundsRegistryTestHelper.sol,"FundsRegistryTestHelper(address[] _owners, uint _signaturesRequired, address _controller);burnSomeEther()"
Storiqa/ico_smart_contract,contracts/test_helpers/crowdsale/FundsRegistryTestHelper.sol,"FundsRegistryTestHelper(address[] _owners, uint _signaturesRequired, address _controller);burnSomeEther()"
Neurone/persians,contracts/TestLib.sol,TestLib();getReadme()
redsquirrel/augur-core,src/factories/SortedLinkedListFactory.sol,"initialize(address _comparor);createSortedLinkedList(Controller _controller, address _comparor)"
SilentCicero/wafr,src/tests/solidityTests/boardroom/boardroom/OpenRules.sol,"hasWon(uint _proposalID);canVote(address _sender, uint _proposalID);canPropose(address _sender);votingWeightOf(address _sender, uint _proposalID)"
ethereum/frontier-release,solidity/token-minimal.sol,"transfer(address _to, uint256 _value)"
chrisdannen/Introducing-Ethereum-and-Solidity,mytoken.sol,"transfer(address _to, uint256 _value)"
ethereum/ethereum-org,solidity/token-minimal.sol,"transfer(address _to, uint256 _value)"
iurimatias/embark-framework,dapps/tests/contracts/contracts/token.sol,"totalSupply();balanceOf( address who );transfer( address to, uint value);transferFrom( address from, address to, uint value);approve(address spender, uint value);allowance(address owner, address spender);safeToAdd(uint a, uint b)"
victorsintnicolaas/RVR,test/TestLawyer.sol,testConstructorUsingDeployedContract();testInsertLawyer();testIsLawyer();testDeleteLawyer();testUpdateCase();testGetLawyerCount();testGetLawyerAtIndex();testGetAllLawyers()
Majoolr/ethereum-libraries,WalletLib/WalletGetterLib.sol,"getOwners(WalletMainLib.WalletData storage self);getOwnerIndex(WalletMainLib.WalletData storage self, address _owner);getMaxOwners(WalletMainLib.WalletData storage self);getOwnerCount(WalletMainLib.WalletData storage self);getRequiredAdmin(WalletMainLib.WalletData storage self);getRequiredMinor(WalletMainLib.WalletData storage self);getRequiredMajor(WalletMainLib.WalletData storage self);getCurrentSpend(WalletMainLib.WalletData storage self, address _token);getMajorThreshold(WalletMainLib.WalletData storage self, address _token);getTransactionLength(WalletMainLib.WalletData storage self, bytes32 _id)"
stanta/darfchain,ICO/contracts/MintedEthCappedCrowdsale.sol,"MintedEthCappedCrowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, uint _weiCap);isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal);isCrowdsaleFull();assignTokens(address receiver, uint tokenAmount)"
Cryptonomica/cryptonomica,src/main/webapp/bills-of-exchange/contracts/CryptonomicaVerification.sol,"CryptonomicaVerification();uploadSignedString(string _fingerprint, bytes20 _fingerprintBytes20, string _signedString);revokeVerification(address _acc);changeOwnerStart(address _newOwner);changeOwnerAccept();addManager(address _acc);removeManager(address manager);setPriceForVerification(uint priceInWei);withdrawAllToWithdrawalAddress();setWithdrawalAddress(address _withdrawalAddress);fixWithdrawalAddress(address _withdrawalAddress)"
Getline-Network/getline,dapp/test/TestCommon.sol,testAccessControl();testMath()
jeje/solidity-code-quality,core/src/test/antlr/test.sol,"f(uint a, uint b);g(uint c);f();fun(uint256 a);f();f();f();f();f();fun();fun();fun();fun();fun();f(ufixed x, fixed32x32 y);fun(uint256 a);functionName(bytes20 arg1, address addr);fun(uint256 a);x();fun(uint256 a);fun(uint256 a);fun(uint256 a);fun(uint256 a);functionName(bytes32 input);fun(uint256 a);fun();f();f();test();f();f(uint[] constant x, uint[] memory y);f();f();g();fun();fun();fun();fun();foo(uint a);bar(string a, string b);fun();f();functionName();fun(int256 a);fun(uint a);fun(uint a, uint b);fun();functionName(bytes32 input);fun();f();fun();f();f();fun(uint256 a);fun(uint256 a);f();f_priv();f_public();f_internal();fun(uint256 a);f(x)"
etherisc/flightDelay,contracts/FlightDelayDatabase.sol,"setContracts();setAccessControl(address _contract, address _caller, uint8 _perm);getAccessControl(address _contract, address _caller, uint8 _perm);setLedger(uint8 _index, int _value);getLedger(uint8 _index);getCustomerPremium(uint _policyId);getPolicyData(uint _policyId);getPolicyState(uint _policyId);getRiskId(uint _policyId);createPolicy(address _customer, uint _premium, Currency _currency, bytes32 _customerExternalId, bytes32 _riskId);setWeight(uint _policyId, uint _weight, bytes _proof);setPayouts(uint _policyId, uint _calculatedPayout, uint _actualPayout);setDelay(uint _policyId, uint8 _delay, uint _delayInMinutes);getRiskParameters(bytes32 _riskId);getPremiumFactors(bytes32 _riskId);createUpdateRisk(bytes32 _carrierFlightNumber, bytes32 _departureYearMonthDay, uint _arrivalTime);setPremiumFactors(bytes32 _riskId, uint _cumulatedWeightedPremium, uint _premiumMultiplier);getOraclizeCallback(bytes32 _queryId);getOraclizePolicyId(bytes32 _queryId);checkTime(bytes32 _queryId, bytes32 _riskId, uint _offset)"
iam-dev/ERC23,installed_contracts/zeppelin-solidity/contracts/Bounty.sol,createTarget();deployContract();claim(Target target);checkInvariant()
jdmaresco/truffle,example/contracts/Example.sol,Example()
jdmaresco/truffle,contracts/Example.sol,Example()
y0ssa/truffle,contracts/Example.sol,Example()
y0ssa/truffle,example/contracts/Example.sol,Example()
tjade273/truffle,contracts/Example.sol,Example()
tjade273/truffle,example/contracts/Example.sol,Example()
harlantwood/truffle,example/contracts/Example.sol,Example()
johnmcdowall/truffle,example/contracts/Example.sol,Example()
mhhf/truffle,contracts/Example.sol,Example()
mhhf/truffle,example/contracts/Example.sol,Example()
abrkn/truffle,example/contracts/Example.sol,Example()
ConsenSys/dapp-store-contracts,contracts/Example.sol,Example()
vishakh/truffle,contracts/Example.sol,Example()
vishakh/truffle,example/contracts/Example.sol,Example()
f3r/truffle,example/contracts/Example.sol,Example()
f3r/truffle,contracts/Example.sol,Example()
ethers/truffle,example/contracts/Example.sol,Example()
ethers/truffle,contracts/Example.sol,Example()
ililic/truffle,example/contracts/Example.sol,Example()
ililic/truffle,contracts/Example.sol,Example()
brakmic/BlockchainStore,contracts/Base/Owned.sol,Owned();transferOwnership(address new_owner)
b-mueller/mythril,tests/testdata/input_contracts/metacoin.sol,"sendToken(address receiver, uint amount)"
mycspring/ClaveChain,Chain/Lottery/ILotteryClaveChain.sol,Register(bytes4 callback);Update(ILotteryClaveChain _lotteryClaveChain)
coincrowd-it/ico,contracts/CoinCrowdToken.sol,CoinCrowdToken()
ethereum/btcrelay,examples/BitcoinProcessor.sol,"BitcoinProcessor(address trustedBTCRelay);processTransaction(bytes txn, uint256 txHash)"
Contraktor-Legal-Tech/contraktor-sign-smart-contract,contracts/ContraktorSign.sol,"newDigitalContract(string _documentDigest, address[] _signers);cancelDigitalContract(string _documentDigest);signDigitalContract(string _documentDigest);isContractSignedBySigner(string _documentDigest, address _signer);contractIsCompleted(string _documentDigest);contractIsCanceled(string _documentDigest);contractSignedTime(string _documentDigest)"
dltdojo/courses,ethereum/dapps/multisig/X02_ParityMultisig.sol,"revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);setDailyLimit(uint _newLimit);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);initMultiowned(address[] _owners, uint _required);revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);getOwner(uint ownerIndex);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);initDaylimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();initWallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);create(uint _value, bytes _code);confirm(bytes32 _h);confirmAndCheck(bytes32 _operation);reorganizeOwners();underLimit(uint _value);today();clearPending();Wallet(address[] _owners, uint _required, uint _daylimit);getOwner(uint ownerIndex);hasConfirmed(bytes32 _operation, address _owner);isOwner(address _addr)"
merlox/dapp-transactions,contracts/Transaction.sol,releaseFundsSeller();releaseFundsBuyer()
pipermerriam/populus,tests/fixtures/ImportRemappingTestA.sol,ImportRemappingTestA()
razvanpat/open-retail,OpenRetailContract.sol,"get_description_url();get_location();get_description_hash();get_total_quantity();get_remaining_quantity();place_buy_order(uint16 quantity, string shipping_address, string zip_code, string contact_info)"
Dicoiner/irianna-solidity,contracts/Findel/Marketplace.sol,"register();isRegistered();storeWithId(Description dsc);getBalance(address user);getMyBalance();getDescriptionInfo(bytes32 dscId);getFincontractInfo(bytes32 fctId);getTimestamp();Zero();One(Currency _curr);Give(bytes32 _dscId_1);And(bytes32 _dscId_1, bytes32 _dscId_2);Or(bytes32 _dscId_1, bytes32 _dscId_2);Scale(int _scaleCoeff, bytes32 _dscId);ScaleObs(address _gateway, bytes32 _dscId);If(address _gatewayBool, bytes32 _dscId_1, bytes32 _dscId_2);Timebound(uint lowerBound, uint upperBound, bytes32 _dscId_1);At(uint exactTime, bytes32 _dscId_1);Before(uint upperBound, bytes32 _dscId_1);After(uint lowerBound, bytes32 _dscId_1);createFincontractWithParties(address _issuer, address _owner, bytes32 _dscId);createFincontract(bytes32 _dscId);issueFor(bytes32 _fctId, address _proposedOwner);own(bytes32 fctId);join(bytes32 fctId);enforcePayment(address issuer, address owner, Currency currency, int amount);executeRecursive(address issuer, address owner, bytes32 dscId, int scaleCoeffAcc);execute(bytes32 fctId);choose(bytes32 fctIdOr, bool chooseFirst);executeOr(bytes32 fctIdOr, bool chooseFirst);deleteFincontract(bytes32 fctId);simpleTest(address addr);complexScaleObsTest(address addr);timeboundTest(address addr, uint lowerBound, uint upperBound);setGatewayI(address _addr);setGatewayB(address _addr)"
saikyerubandi/smart-contract-beginner,contracts/CrowdFunding.sol,"newCampaign( address beneficiary,uint goal);getCampaign(uint ID);fundCampaign(uint ID);checkGoalReached(uint ID)"
iam-dev/ERC23,installed_contracts/zeppelin-solidity/contracts/crowdsale/FinalizableCrowdsale.sol,finalize();finalization()
sonm-io/token,contracts/PresaleToken.sol,"PresaleToken(address _tokenManager, address _escrow);buyTokens(address _buyer);burnTokens(address _owner);balanceOf(address _owner);setPresalePhase(Phase _nextPhase);withdrawEther();setCrowdsaleManager(address _mgr)"
jamiehale/dao_partnership,contracts/Migrations.sol,setCompleted(uint completed);upgrade(address newAddress)
celeduc/dao_partnership,contracts/Migrations.sol,setCompleted(uint completed);upgrade(address newAddress)
crypto-coder/Tokens,Token_Contracts/contracts/DecayingToken.sol,"addBoundary(address _newBoundary);removeBoundary(uint256 _decayDefinitionIndex);decayedBalanceOf(address _environment);decayedBalanceOf(address _owner, address _environment);decayedTransfer(address _to, uint256 _decayedValue, address environment);decayedTransferFrom(address _from, address _to, uint256 _decayedValue, address environment)"
MzansiRe/iMali,test/TestCampaign.sol,testTheFirstMultiplier();testTheMultipliers()
michinbear/solidity,test/compilationTests/corion/safeMath.sol,"safeAdd(uint256 a, uint256 b);safeSub(uint256 a, uint256 b)"
elementrem/solidity,test/compilationTests/corion/safeMath.sol,"safeAdd(uint256 a, uint256 b);safeSub(uint256 a, uint256 b)"
duaraghav8/Solium,test/lib/rules/indentation/reject/indented-top-level-closing-brace.sol,""
CubicContracts/ice,Cubic.sol,"getCubeCount();freeze(uint blocks);freezeAPI(uint blocks, string api);forgetCube(Cube iceCube);withdraw();transferOwnership(address newOwner);secure(uint blocks, string api);setRate(uint _newRate);add(uint a, uint b);div(uint a, uint b);sub(uint a, uint b)"
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.5/modifier2.sol,a()
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/AddressUtils.sol,isContract(address _addr)
saurabh-kurdukar/hackathon,contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
hygzhu/P2Secure,BorrowIt/truffletest/arthur-dev/contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
pierredepaz/politics-of-code,11_intro_to_blockchain/hello-ethereum/contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
itmo-infocom/EcoChain,DApp/truffle-test/contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
horefice/donatechain,contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
transmute-industries/monarch-app,truffle/contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
qjflores/mealbot,contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
district0x/name-bazaar,resources/public/contracts/src/BuyNowOfferingFactory.sol,""
PeterBorah/smart-contract-security-examples,contracts/TokenWithInvariants.sol,"deposit(uint amount);transfer(address to, uint value);withdraw()"
ChicoBitcoinJoe/Matriarch,contracts/MiniMeToken.sol,"proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);Controlled();changeController(address _newController);transfer(address _to, uint256 _amount);balanceOf(address _owner);approve(address _spender, uint256 _amount);totalSupply();balanceOfAt(address _owner, uint _blockNumber);totalSupplyAt(uint _blockNumber);enableTransfers(bool _transfersEnabled);isContract(address _addr)"
dltdojo/courses,ethereum/solidity/T110_Function.sol,set(uint x);get();fooInt();set(uint x)
loiluu/peacerelay,contracts/SafeMath.sol,"safeMul(uint a, uint b);safeDiv(uint a, uint b);safeSub(uint a, uint b);safeAdd(uint a, uint b)"
QTBlockchain/SolidityNWeb3,SmartContracts/mynewcontract/contracts/ArrayPractice.sol,"ArrayPractice();staticArrayTests();staticArrayChangeValue(int8 value,uint position);getStaticArraySum();getStaticArray();setDynamicArraySize(uint size);getDynamicArraySize();setDynamicArrayElement(int8 value,uint position);getDynamicArrayElement(uint index)"
uzyn/ethereum-webpack-example-dapp,contract/MyToken.sol,"receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);transfer(address _to, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);transferFrom(address _from, address _to, uint256 _value)"
sonm-io/core,blockchain/source/contracts/DevicesStorage.sol,SetDevices(bytes _deviceList);Touch(bytes32 _hash);Hash(address _owner);GetDevices(address _owner);KillDevicesStorage()
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/payment/Escrow.sol,depositsOf(address _payee);deposit(address _payee);withdraw(address _payee)
SCBuergel/timeLock-smartContract,TimeLock.sol,payIn(uint lockTimeS);payOut();getMyLockedFunds();getMyLockedFundsReleaseTime();getNow()
tokenai/tokenai-network-token,contracts/TokenAiContribution.sol,"isContribPeriodRunning();contribute();contributeWithAddress(address contributor);compensateContributors(uint offset, uint limit);allocatePresaleTokens(address contributor, uint weiAmount, uint price);priceForStage(uint8 stage);stageForDate(uint dateTime);getPrice(uint dateTime);enableContribPeriod();setMinContribAmount(uint _minContribAmount);setTokenAiNetworkToken(address _tokenAiNetworkToken);enableTokenAiTransfers();finalizeContributionEvent();claimTokensFromTokenAiNetworkToken(address _token);proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);isTokenSaleToken(address tokenAddr);getContribPeriod();getConfiguration();getContributor(address contributorAddress);getUncompensatedContributors(uint offset, uint limit)"
Pavel-DV/ChronoMint,old/LOC.sol,"setLOCdata(string _name, address _mint, address _controller, uint _issueLimit, string _publishedHash, uint _expDate);approved();isController(address _ad);getName();getValue(string name);getAddress(string name);setStatus(Status _status);setController(address _controller);burnTokens(address token, uint qty);issueTokens(address token, uint qty);setName(string _name);setWebsite(string _website)"
bshevchenko/ChronoMint,old/LOC.sol,"setLOCdata(string _name, address _mint, address _controller, uint _issueLimit, string _publishedHash, uint _expDate);approved();isController(address _ad);getName();getValue(string name);getAddress(string name);setStatus(Status _status);setController(address _controller);burnTokens(address token, uint qty);issueTokens(address token, uint qty);setName(string _name);setWebsite(string _website)"
nud3l/smart-contract-analysis,data-loader/tests/data/complex.sol,"setInvestAgent(address newInvestAgent);setBuyAgent(address newBuyAgent);setMinimumInvestment(uint newMinimumInvestment);createInvestment(uint8[] sectorList);investOffer(uint amount, uint8[] sectorList);withdrawBuyAgent();sendBuyAgent(int _returnRatio, int _sharpe, int _alpha, int _beta);clearBlacklistMapping();blackListSectorExists(uint8[] sectors);blackListCompanies();availableForInvestment();withdrawalUser();kill();getInvestmentCurrentValue(address investor)"
OpenSTFoundation/SimpleTokenSale,contracts/SimpleTokenConfig.sol,""
ConsenSys/live-libs,example/simple.sol,calc(uint y)
silasdavis/eris-db,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs7.sol,"addThing(bytes32 description, bytes32 url, string memory filehash, string memory filename)"
silasdavis/burrow,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs7.sol,"addThing(bytes32 description, bytes32 url, string memory filehash, string memory filename)"
eris-ltd/eris-db,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs7.sol,"addThing(bytes32 description, bytes32 url, string memory filehash, string memory filename)"
iurimatias/embark-framework,dapps/tests/app/contracts/token.sol,"totalSupply();balanceOf( address who );transfer( address to, uint value);transferFrom( address from, address to, uint value);approve(address spender, uint value);allowance(address owner, address spender);safeToAdd(uint a, uint b);isAvailable()"
iExecBlockchainComputing/rlc-token,contracts/TokenSpender.sol,"receiveApproval(address _from, uint256 _value, address _token, bytes _extraData)"
michinbear/solidity,test/compilationTests/gnosis/Tokens/Token.sol,"transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value);balanceOf(address owner);allowance(address owner, address spender);totalSupply()"
elementrem/solidity,test/compilationTests/gnosis/Tokens/Token.sol,"transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value);balanceOf(address owner);allowance(address owner, address spender);totalSupply()"
bcosorg/bcos,systemcontractv2/Group.sol,"getPermission(address to, string func);setPermission(address to, string func, bool perrmission);getCreate();setCreate(bool create);getBlack();setBlack(bool black)"
bitcoinbrisbane/BitPoker,BitPoker.ETH.Contracts/BitPoker.sol,"transfer(address _to, uint256 _value);Cashier();buy()"
WingsDao/contracts,contracts/crowdsales/CrowdsaleFactory.sol,CrowdsaleFactory(address _token)
crypto-coder/Tokens,Token_Contracts/contracts/DecayingTokenFunction.sol,"getFunctionType();executeDecayFunction(uint256 _amount, int256 _rangeLength, int256 _distanceInRange, uint256 _startPercent, uint256 _endPercent)"
duaraghav8/Solium,test/lib/rules/quotes/single-quoted.sol,""
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/crowdsale/distribution/PostDeliveryCrowdsale.sol,withdrawTokens()
libdeos/deos-rsksmart,var/wiki/contracts/Constructor.sol,Constructor(string _greeting);greet();getBlockNumber();setGreeting(string _newgreeting);kill()
alice-si/contracts,contracts/alice/impact/OffChainImpactLinker.sol,"linkDirectly(bytes32 _claimId, uint _accountIndex, uint _impactVal);linkImpact(bytes32 /*_claimId*/)"
justmake/smart_contract,interfaces/IERC20Token.sol,"totalSupply();balanceOf(address _owner );transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value );allowance(address _owner, address _spender)"
boisde/Greed_Island,party/contracts/protocol/IntegrationRegistry.sol,"removeIntegration(address _module, string memory _name);getIntegrationAdapter(address _module, string memory _name);getIntegrationAdapterWithHash(address _module, bytes32 _nameHash);isValidIntegration(address _module, string memory _name);_nameHash(string memory _name)"
rsksmart/rskj,rskj-core/src/test/resources/dsl/sendtest.sol,"deposit();withdrawBalance(address from, address to, uint amount)"
SafecontractDev/protocol,contracts/bancor_contracts/EtherToken.sol,"EtherToken();deposit();withdraw(uint256 _amount);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value)"
SilentCicero/wafr,src/tests/solidityTests/gasUsage/examples/ProposalTypeRegistry.sol,"register(address _board, uint256 _proposalId);typeOf(address _board, uint256 _proposalId);isTyped(address _board, uint _proposalId);register(address _board, uint _proposalId, uint _type);isTyped(address _board, uint _proposalId);typeOf(address _board, uint _proposalId)"
cryptape/cita,scripts/contracts/src/common/Admin.sol,update(address _account);isAdmin(address _account)
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/test/helpers/ERC23TokenMock.sol,"tokenFallback(address _from, uint256 _value, bytes _data)"
pash7ka/zeppelin-solidity,test/helpers/ERC23TokenMock.sol,"tokenFallback(address _from, uint256 _value, bytes _data)"
Dicoiner/irianna-solidity,test/helpers/ERC23TokenMock.sol,"tokenFallback(address _from, uint256 _value, bytes _data)"
pz7/liquet,node_modules/zeppelin-solidity/test/helpers/ERC23TokenMock.sol,"tokenFallback(address _from, uint256 _value, bytes _data)"
dmx374/zeppelin-solidity,test/helpers/ERC23TokenMock.sol,"tokenFallback(address _from, uint256 _value, bytes _data)"
cashpokerpro-dev/cash-smartcontracts,test/helpers/ERC23TokenMock.sol,"tokenFallback(address _from, uint256 _value, bytes _data)"
dbrainio/Soltsice,test/TestDummyContract.sol,testDeployedValues();testProvidedValues()
shayanb/Solidity-Logging-Library,example.sol,MyContract()
eduelias/solidity-contracts,MultiSig.sol,"multiowned(address[] _owners, uint _required);revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);getOwner(uint ownerIndex);isOwner(address _addr);hasSigned(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);reorganizeOwners();clearPending();changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);Wallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);clearPending()"
robmyers/artworld-ethereum,dapps/art-is/contracts/ArtIs.sol,owned();transferOwnership(address newOwner);drain()
Cryptonomica/cryptonomica,src/main/webapp/eth-vote/contracts/SimpleERC20Token.sol,"add(uint256 a, uint256 b);sub(uint256 a, uint256 b);mul(uint256 a, uint256 b);div(uint256 a, uint256 b);mod(uint256 a, uint256 b);onTokenTransfer(address from, uint256 amount, bytes calldata data);tokenFallback(address _from, uint _value, bytes calldata _data);transferFrom(address _from, address _to, uint256 _value);transfer(address _to, uint256 _value);transfer(address _to, uint _value, bytes calldata _data);transferAndCall(address _to, uint256 _value, bytes memory _extraData);transferAllAndCall(address _to, bytes calldata _extraData);approve(address _spender, uint256 _value);approve(address _spender, uint256 _currentValue, uint256 _value)"
iam-dev/ERC23,installed_contracts/zeppelin-solidity/contracts/token/TokenVesting.sol,"TokenVesting(address _beneficiary, uint256 _start, uint256 _cliff, uint256 _duration, bool _revocable);release(ERC20Basic token);revoke(ERC20Basic token);releasableAmount(ERC20Basic token);vestedAmount(ERC20Basic token)"
duaraghav8/Solium,test/lib/rules/array-declarations/unfixed/mixed.sol,""
PeterBorah/smart-contract-security-examples,contracts/WorkingToken.sol,"deposit();transfer(address to, uint value);withdraw()"
GX-Coin/SmartContract,GxUsesTraders.sol,setTradersContract(address tradersAddress)
corbinpage/ethereum-play,contracts/SecurityDeposit.sol,"SecurityDeposit(address _landlord, address _tenant, uint deposit);alterBalance(uint newBalance);giveSignOff();resolveDeposit();payOut()"
iurimatias/embark-framework,dapps/tests/app/app/contracts/another_storage.sol,""
WeiFund/WeiFund,app/client/lib/contracts/WeiFundTokenFactory.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);Standard_Token(uint256 _initialAmount);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);addService(address _service);ownerOf(address _service);isService(address _service);createStandardToken(address _owner, uint256 _initialAmount)"
chrisdotn/jsmnSol,contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
gichiba/Mattereum_Hackday_Moon,contracts/artOwnable.sol,Ownable();transferOwnership(address newOwner)
gichiba/Mattereum_Hackday_Moon,contracts/ownable.sol,Ownable();transferOwnership(address newOwner)
orbro/eth-enablers,Community-Currency-master/contract.sol,"getParameters();getMoneyTotals();getBudget();credit(address _borrower, uint _credit, uint _daysAfter);monitorWallet(address _monitored)"
dltdojo/courses,ethereum/solidity/T271_ReentrancyGuard.sol,"withdraw();callWithdraw(AbstractFund fund);callWithdraw(AbstractFund _fund);withdraw();testAddUser(address user, uint amount);withdraw();testAddUser(address user, uint amount);testReentracy();testReentracyGuard()"
eduelias/solidity-contracts,Agreement.sol,"SmartAgreement(bytes blob, address[] parts);setOwner(address newOwner);addSubscriber(address member);getRequiredSubscribers();getSignedSubscribers();findRequiredSubscriberIndex(address member);findSignedSubscriberIndex(address member);removeSubscriber(address member);readContent();sign()"
batlinal/ftt,contracts/ServiceToken.sol,"ServiceToken();balanceOf(address _addr);createTask(string name);transfer(address _to, uint256 _value);taskArray()"
Sword-Smith/geth_tools,example/DataFeed0.sol,"set(bytes32 _key, uint256 _price);get(bytes32 _key)"
Sjors/dao-challenge,contracts/dao-account-spec.sol,setUp();testStoresChallengeOwner();testStoresParentChallenge();testStoresUser();testInitialTokenBalanceShouldBeZero();testInitialEtherBalanceShouldBeZero();testBuyTwoTokens();testThrowNoFreeTokens();testThrowNoPartialTokens();testDifferentTokenPrice();setUp();setUp();setUp()
Sword-Smith/geth_tools,example/CurrencySwap.sol,CurrencySwap();execute()
iurimatias/embark-framework,packages/embark/src/test/contracts/token.sol,"totalSupply();balanceOf(address who);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value);allowance(address owner, address spender);safeToAdd(uint a, uint b)"
iurimatias/embark-framework,packages/embark/src/test/modules/solidity/contracts/token.sol,"totalSupply();balanceOf(address who);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value);allowance(address owner, address spender);safeToAdd(uint a, uint b)"
mothershipcx/contracts,etherscan/MSPPlaceholder.sol,"mul(uint a, uint b);div(uint a, uint b);sub(uint a, uint b);add(uint a, uint b);Controlled();changeController(address _newController);refund(address th, uint amount);proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);totalSupply();totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);Burnable();changeBurner(address _newBurner);totalSupplyAt(uint _blockNumber);generateTokens(address _owner, uint _amount);destroyTokens(address _owner, uint _amount);enableTransfers(bool _transfersEnabled);claimTokens(address _token);finalize();Contribution();proxyPayment(address _th);onTransfer(address, address, uint256);onApprove(address, address, uint256);doBuy(address _th);isContract(address _addr);refund();finalize();percent(uint256 p);tokensIssued();tokensForSale();getBlockNumber();claimTokens(address _token);pauseContribution();resumeContribution();MSPPlaceHolder(address _controller, address _msp, address _contribution, address _sitExchanger);changeController(address _newController);refund(address th, uint amount);proxyPayment(address);onTransfer(address _from, address, uint256);onApprove(address _from, address, uint256);transferable(address _from);getTime();claimTokens(address _token)"
rs-davila/currencyspot,contracts/CurrencyHedge.sol,"CurrencyHedge();getHedgeIndices(address _beneficiary);getNumberOfTx(uint _index);activateHedge(address _beneficiary, uint256 _index);deactivateHedge(address _beneficiary, uint256 _index);endContract(address _beneficiary, uint256 _index)"
livepeer/protocol,contracts/rounds/AdjustableRoundsManager.sol,AdjustableRoundsManager(address _controller);setBlockNum(uint256 _num);setBlockHash(bytes32 _hash);mineBlocks(uint256 _blocks);blockNum();blockHash(uint256 _block)
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app13-binding_abi_using_naming_pattern_and_explicit_abi_fields_single_file/GSFactory.sol,set(uint x);get();create();getLast()
eris-ltd/eris,tests/jobs_fixtures/app13-binding_abi_using_naming_pattern_and_explicit_abi_fields_single_file/GSFactory.sol,set(uint x);get();create();getLast()
monax/monax,tests/jobs_fixtures/app13-binding_abi_using_naming_pattern_and_explicit_abi_fields_single_file/GSFactory.sol,set(uint x);get();create();getLast()
eris-ltd/eris-cli,tests/jobs_fixtures/app13-binding_abi_using_naming_pattern_and_explicit_abi_fields_single_file/GSFactory.sol,set(uint x);get();create();getLast()
monax/cli,tests/jobs_fixtures/app13-binding_abi_using_naming_pattern_and_explicit_abi_fields_single_file/GSFactory.sol,set(uint x);get();create();getLast()
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app13-binding_abi_using_naming_pattern_and_explicit_abi_fields_single_file/GSFactory.sol,set(uint x);get();create();getLast()
WeiFund/WeiFund,app/client/lib/contracts/PersonaRegistry.sol,PersonaRegistry(address _previousPublishedVersion);setPersonaAttributes(bytes ipfsHash);getPersonaAttributes(address personaAddress)
BitPoint/BitPoint-token,bitpointToken.sol,"owned();transferOwnership(address newOwner);safeMul(uint a, uint b);safeDiv(uint a, uint b);safeSub(uint a, uint b);safeAdd(uint a, uint b);assert(bool assertion);balanceOf(address _owner);withdrawnFrom(address _owner);creationTime(address _owner);transfer(address _to, uint256 _value);getTotalSupply();kill()"
openanx/OpenANXToken,scripts/single.sol,"balanceOf(address _owner);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);approve(address _spender, uint _value);allowance(address _owner, address _spender);Owned();transferOwnership(address _newOwner);acceptOwnership();add(uint a, uint b);sub(uint a, uint b);LockedTokens(address _tokenContract);addRemainingTokens();require(msg.sender == address(tokenContract);balanceOfLocked(address account);totalSupplyLocked();balanceOf(address _owner);transfer(address _to, uint _amount);OpenANXToken(address _wallet);setWallet(address _wallet);setTokensPerKEther(uint _tokensPerKEther);proxyPayment(address participant);finalise();addPrecommitment(address participant, uint balance);transfer(address _to, uint _amount);transferFrom(address _from, address _to, uint _amount);kycVerify(address participant);balanceOfLocked(address account);totalSupplyLocked();totalSupplyUnlocked()"
cgewecke/solcover,test/sources/conditional/identifier-assignment-alternate.sol,a()
JoinColony/solcover,test/sources/conditional/identifier-assignment-alternate.sol,a()
bluedroplet/blobstore-ethereum,src/MixItemStoreRegistry.t.sol,setUp();testControlRegisterContractIdAgain();testFailRegisterContractIdAgain();testControlMixItemStoreNotRegistered();testFailMixItemStoreNotRegistered();testGetItemStore()
link-blockchain/blobstore,src/MixItemStoreRegistry.t.sol,setUp();testControlRegisterContractIdAgain();testFailRegisterContractIdAgain();testControlMixItemStoreNotRegistered();testFailMixItemStoreNotRegistered();testGetItemStore()
wenweih/EthereumToken,standard_token.sol,"receiveApproval(address _from, uint256 _value, address _token, bytes calldata _extraData);_transfer(address _from, address _to, uint _value);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes memory _extraData);burn(uint256 _value);burnFrom(address _from, uint256 _value)"
ConsenSys/live-libs,contracts/LiveLibs.sol,"LiveLibs(LibFund lf);setLibFund(LibFund lf);register(bytes32 libName, uint versionNum, address a, string abi, uint thresholdWei);registerResource(bytes32 libName, uint versionNum, bytes32 key, string uri);transferLibOwnership(bytes32 libName, address newOwner);get(bytes32 libName, uint versionNum);getResource(bytes32 libName, uint versionNum, bytes32 key);getVersions(bytes32 libName);allNames();stringsEqual(string storage _a, string memory _b)"
globaljobcoin/GJC,contracts/token/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
DivvyDAO/minime,contracts/SampleCampaign-TokenController.sol,"Owned();changeOwner(address _newOwner);proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);doPayment(address _owner);finalizeFunding();setVault(address _newVaultAddress)"
pipermerriam/pyethereum,ethereum/tests/contracts/contract_names.sol,""
shahankhatch/pyethereum,ethereum/tests/contracts/contract_names.sol,""
karlfloersch/pyethereum,ethereum/tests/contracts/contract_names.sol,""
nirenzang/Serpent-Pyethereum-Tutorial,pyethereum/ethereum/tests/contracts/contract_names.sol,""
trailofbits/greenhorn,csaw-2017/ETHERSNOOB/sources/ethersnoob8.sol,"set(uint data, uint data2, uint data3);get_flag();get()"
TrueBitFoundation/webasm-solidity,contracts/getcode.sol,get(address a)
boisde/Greed_Island,party-hardhat/contracts/Will.sol,"setInheritance(address payable wallet, uint inheritAmount);payout();gone()"
PeculiumPCL/Peculium,contracts/v0.1/ReservationStorage.sol,"reservationFromEthereum(address _to, uint256 _value, uint _token);reservationFromBackend(uint coinId, bytes32 coinAccount, address etherAccount, uint256 value, uint token)"
saulbein/web3j,core/src/test/resources/solidity/shipit/ShipIt.sol,""
energychain/StromDAO-BusinessObject,smart_contracts/POAValidator.sol,"MajorityList();getValidators();supportValidator(address validator);reportMalicious(address validator);reportBenign(address validator);removeSupport(address sender, address validator);newStatus(address validator);addValidator(address validator);removeValidator(address validator);highSupport(address validator)"
anrodon/scts,contracts/owned.sol,owned();transferOwnership(address newOwner)
BeBlockTech/Anemoi,Master/contracts/ANMFutureVesting.sol,"balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value);safeAdd(uint256 x, uint256 y);safeSubtract(uint256 x, uint256 y);safeMult(uint256 x, uint256 y);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);balanceOf(address _owner);approve(address _spender, uint _value);allowance(address _owner, address _spender);Ownable();transferOwnership(address newOwner);pause();unpause();IndorseToken();transfer(address _to, uint _value);approve(address _spender, uint _value);ANMFutureVesting();unlock()"
web3j/web3j-maven-plugin,src/test/resources/import/sub/Util.sol,""
stanta/darfchain,ICO/contracts/PaymentForwarder.sol,"PaymentForwarder(address _owner, address _teamMultisig);pay(uint128 customerId, address benefactor);payForMyself(uint128 customerId)"
AugustoL/LifToken,contracts/deploy/TGEDeployer.sol,"addPresaleTokens(address[] contributors, uint256[] values, uint256 rate);finish(uint256 weiPerUSDinTGE)"
windingtree/LifToken,contracts/deploy/TGEDeployer.sol,"addPresaleTokens(address[] contributors, uint256[] values, uint256 rate);finish(uint256 weiPerUSDinTGE)"
chenlian2015/eosEthMarketSample,contracts/StantardTokenInterface.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);chargeFee(address _spender, address _marketChargeManager, uint _value)"
TruLtd/tru-reputation-token,contracts/test-helpers/MockFailUpgradeableToken.sol,canUpgrade();changeCanUpgrade(bool _newStatus)
iam-dev/ERC23,installed_contracts/zeppelin-solidity/contracts/payment/SplitPayment.sol,"SplitPayment(address[] _payees, uint256[] _shares);addPayee(address _payee, uint256 _shares);claim()"
pash7ka/zeppelin-solidity,contracts/token/MintableToken.sol,"mint(address _to, uint256 _amount);finishMinting()"
iswarm/p2pCny,contracts/token/MintableToken.sol,"mint(address _to, uint256 _amount);finishMinting()"
silasdavis/eris-db,tests/jobs_fixtures/app10-zero_returns_solidity/zero.sol,zeroInt();zeroUInt();zeroBytes();zeroAddress();zeroBool()
silasdavis/burrow,tests/jobs_fixtures/app10-zero_returns_solidity/zero.sol,zeroInt();zeroUInt();zeroBytes();zeroAddress();zeroBool()
eris-ltd/eris-db,tests/jobs_fixtures/app10-zero_returns_solidity/zero.sol,zeroInt();zeroUInt();zeroBytes();zeroAddress();zeroBool()
corbinpage/ethereum-play,contracts/DataStore.sol,DataStore(string _data);update(string _data);getData()
WishFinanceCom/WF-contracts,contracts/helpers/FakeCoin.sol,"mint(address _to, uint _value);totalSupply();symbol();decimals();transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);balanceEth(address _address)"
Lyniat/hackaburg17-smartcontracts,backend_server/contracts/userStorage.sol,getUser(address target);getUserTransactions();setUserTransactions(string transHashes);setUserIdentityDocs(string identityDocs)
aragon/aragon-network-token,packages/sale/contracts/SaleWallet.sol,"saleFinalized();SaleWallet(address _multisig, uint _finalBlock, address _tokenSale);withdraw();doWithdraw()"
LOOMIA/loomia,tiletoken/src/contracts/TileToken.sol,TileToken()
manosamy/enslisting,contracts/EscrowService.sol,"entries(bytes32 _hash);transfer(bytes32 _hash, address newOwner);getBidInfo(uint64 bidId);recordEscrowOnBid(uint64 _optionalBidId, uint64 _escrowId);EscrowService(address _ensRegistrar, address _registry, AbstractListingDB _listingDB, uint _offerLength, uint _scavengeLength, uint64 _startingEscrowId);getAdminInfo();nextEscrowId();abandon();startEscrow(string _name, uint _paymentAmount, uint64 _optionalBidId);escrowDeed(uint64 escrowId);scavengeEscrow(uint64 escrowId);withdrawTip(uint requestAmt);withdrawEscrow(uint64 escrowId);drawFundsAfterTransfer(uint64 escrowId);reject(uint64 escrowId, string reason);transferDomainToBuyer(uint64 escrowId);transferDomainBackToSeller(string _name)"
adridadou/eth-propeller-core,src/test/resources/validationContract.sol,validation(uint test)
explosion78/hookrz,contracts/Hookrz.sol,"registerRequest(int userId, int requestId);withdrawRequest(int userId, int requestId);getRequest(int requestId);registerBid(int restaurantId, int bidId, int requestId);withdrawBid(int restaurantId, int bidId, int requestId);acceptBid(int restaurantId, int userId, int requestId, int bidId);getBid(int bidId)"
oraclekit/smart_oracle,lib/assets/contracts/Int256Oracle.sol,update(int256 newCurrent)
Neufund/Contracts,contracts/lib/IERC23Contract.sol,"tokenFallback(address from, uint value, bytes data)"
WishFinanceCom/WF-contracts,contracts/core/platform/WFPlatform.sol,"emitTransfer(address _from, address _to, uint _value);emitApprove(address _from, address _spender, uint _value);_error(uint _errorCode, bytes32 _message);setupEventsHistory(address _eventsHistory);checkIsOnlyOwner(bytes32 _symbol);checkIsOnlyProxy(bytes32 _symbol);shouldBeTrusted(address _from, address _to);isCreated(bytes32 _symbol);baseUnit(bytes32 _symbol);name(bytes32 _symbol);description(bytes32 _symbol);isReissuable(bytes32 _symbol);owner(bytes32 _symbol);isOwner(address _owner, bytes32 _symbol);totalSupply(bytes32 _symbol);balanceOf(address _holder, bytes32 _symbol);_balanceOf(uint _holderId, bytes32 _symbol);_address(uint _holderId);setProxy(address _address, bytes32 _symbol);massTransfer(address[] addresses, uint[] values, bytes32 _symbol);_transferDirect(uint _fromId, uint _toId, uint _value, bytes32 _symbol);_transfer(uint _fromId, uint _toId, uint _value, bytes32 _symbol, string _reference, uint _senderId);proxyTransferWithReference(address _to, uint _value, bytes32 _symbol, string _reference, address _sender);_proxyTransferEvent(uint _fromId, uint _toId, uint _value, bytes32 _symbol);getHolderId(address _holder);_createHolderId(address _holder);issueAsset(bytes32 _symbol, uint _value, string _name, string _description, uint8 _baseUnit, bool _isReissuable);reissueAsset(bytes32 _symbol, uint _value);revokeAsset(bytes32 _symbol, uint _value);changeOwnership(bytes32 _symbol, address _newOwner);isTrusted(address _from, address _to);trust(address _to);distrust(address _to);recover(address _from, address _to);_approve(uint _spenderId, uint _value, bytes32 _symbol, uint _senderId);proxyApprove(address _spender, uint _value, bytes32 _symbol, address _sender);allowance(address _from, address _spender, bytes32 _symbol);_allowance(uint _fromId, uint _toId, bytes32 _symbol);proxyTransferFromWithReference(address _from, address _to, uint _value, bytes32 _symbol, string _reference, address _sender)"
ChicoBitcoinJoe/MeDao,contracts/external/Owned.sol,transferOwnership(address newOwner)
cryptape/cita,scripts/contracts/src/role_management/RoleAuth.sol,"setRole(address _account, address _role);cancelRole(address _account, address _role);clearAuthOfRole(address _role);setPermissionsOfRole(address _role, address[] _permissions);cancelPermissionsOfRole(address _role, address[] _permissions);clearRole(address _account);queryRoles(address _account);queryAccounts(address _role);_cancelRole(address _account, address _role);_cancelRolePermissions(address _account, address _role);_cancelPermissions(address _account, address[] _permissions);_hasPermission(address _account, address _permission);_setRolePermissions(address _account, address _role);_setPermissions(address _account, address[] _permissions);_queryPermissions(address _role)"
jensenbox/singnet,dao/contracts/agent/AgentFactory.sol,create()
Neufund/Contracts,contracts/watchdog/Whitelist.sol,"addWhiteListed(address addr);removeWhiteListed(uint index);is_white_listed(address _to, uint _value, bytes _data)"
SES-fortiss/SmartGridCoSimulation,examples/memap/res/smart_contracts/src/IntegratedEnergyMarket.sol,"postHeatOffer(uint[] prices, uint[] amounts);numHeatOffers();postHeatDemand(uint[] prices, uint[] amounts);numHeatDemands();getHeatToProduce();getHeatToConsume();postElectricityOffer(uint[] prices, uint[] amounts);numElectricityOffers();postElectricityDemand(uint[] prices, uint[] amounts);numElectricityDemands();getElectricityToProduce();getElectricityToConsume();withdrawReleasedPayments();nextTimestep()"
SES-fortiss/SmartGridCoSimulation,projects/previousProjects/memapEtherium/res/smart_contracts/src/IntegratedEnergyMarket.sol,"postHeatOffer(uint[] prices, uint[] amounts);numHeatOffers();postHeatDemand(uint[] prices, uint[] amounts);numHeatDemands();getHeatToProduce();getHeatToConsume();postElectricityOffer(uint[] prices, uint[] amounts);numElectricityOffers();postElectricityDemand(uint[] prices, uint[] amounts);numElectricityDemands();getElectricityToProduce();getElectricityToConsume();withdrawReleasedPayments();nextTimestep()"
dltdojo/courses,ethereum/evm/T04_Debug.sol,""
dltdojo/courses,ethereum/evm/T03_Loop.sol,""
RyuuGan/sol-merger,test/contracts/ImportStruct.sol,foo()
woshidama323/hello-github,back/BetContract0814.sol,"roundinfo();buy(uint256 _affCode);judge(uint256 pId, bytes ticket);judgein(uint256 pId, uint8 degree, uint16 div, bytes ticket);withdraw();activate();updateNextRoundInfo();newRound();generateRandom(uint8 mul)"
michinbear/solidity,test/compilationTests/zeppelin/token/PausableToken.sol,"transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value)"
elementrem/solidity,test/compilationTests/zeppelin/token/PausableToken.sol,"transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value)"
maxwedwards/block-journal,contracts/ReviewToken.sol,"transferold(address _to, uint256 _value);approveandcall(address _spender, uint256 _value);transferfrom(address _from, address _to, uint256 _value);minttoken(address target, uint256 mintedamount);freezeaccount(address target, bool freeze);setprices(uint256 newsellprice, uint256 newbuyprice);buy();sell(uint256 amount);receiveapproval(address _from, uint256 _value, address _token)"
SilentCicero/wafr,src/tests/solidityTests/assertEq/test.assertEq.int.sol,setup();test_validEmptyEqEmpty();test_invalidEmptyNotOne();test_invalidEmptyEqVal();test_invalidAddressNotZero();test_invalidBalanceNotZero();test_twoValidEqInt();test_validContractBalance();test_threeInvalidEqInt();test_threeValidEqInt();test_fourInvalidEqInt();test_fourValidEqInt()
cubefriendly/ethclassify,contracts/DocumentManager.sol,"DocumentManager();newDocument(string hash, string name);grantAccess(uint documentId, uint requestId, string encryptedKey);denyAccess(uint documentId, uint requestId);requestDocument(uint documentId, string publicKey);getLastRequestId(uint documentId);getOpenRequestPublicKey(uint documentId, uint requestId);getRequestOwner(uint documentId, uint requestId);getDocument(uint documentId);getDocumentName(uint documentId);getEncryptedKeyFromRequest(uint documentId, uint requestId);getDocumentHash(uint documentId);getRequestStatus(uint documentId, uint requestId)"
janx/ruby-ethereum,test/contracts/simple_contract.sol,test()
cryptape/ruby-ethereum,test/contracts/simple_contract.sol,test()
se3000/ruby-ethereum,test/contracts/simple_contract.sol,test()
WingsDao/contracts,contracts/milestones/MilestonesFactory.sol,"MilestonesFactory(address _token);create(address _timeManager, address _owner, bool _cap)"
WingsDao/contracts,contracts/crowdsales/BasicCrowdsale.sol,"createTokens(address recipient);setLimitations(uint _lockDataTimestamp, uint _startTimestamp, uint _endTimestamp);setForecasting(address _forecasting);getPrice();transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);approve(address _spender, uint _value);addVestingAccount(address _account, uint _initialPayment, uint _payment);addVestingAllocation(address _account, uint _timestamp);releaseVestingAllocation();getVestingAccount(address _account);getVestingAllocation(address _account, uint _index);addPriceChange(uint _timestamp, uint _price);giveReward(address _account, uint _amount);withdraw(uint _amount);payback();isCapReached();isMinimalReached()"
CoinOffering/CoinOffering.Dapp,contracts.dev/TokenExchange.sol,TokenExchange();weiToEther(uint _wei);etherToWei(uint _ether);allowTokenContract(address _tokenContractAddress)
CORIONplatform/solidity,moduleHandler.sol,"connectModule();disconnectModule();replaceModule(address addr);disableModule(bool forever);configureModule(announcementType aType, uint256 value, address addr);isActive();replaceModuleHandler(address newHandler);transferEvent(address from, address to, uint256 value);newSchellingRoundEvent(uint256 roundID, uint256 reward);moduleHandler(address[] newOwners);load(bool forReplace, address Token, address Premium, address Publisher, address Schelling, address Provider);replaceModule(string name, address addr, bool callCallback);callReplaceCallback(string moduleName, address newModule);newModule(string name, address addr, bool schellingEvent, bool transferEvent);dropModule(string name, bool callCallback);callDisableCallback(string moduleName);broadcastTransfer(address from, address to, uint256 value);broadcastSchellingRound(uint256 roundID, uint256 reward);replaceModuleHandler(address newHandler);mint(address to, uint256 value);transfer(address from, address to, uint256 value, bool fee);processTransactionFee(address from, uint256 value);burn(address from, uint256 value);configureModule(string moduleName, announcementType aType, uint256 value, address addr);freezing(bool forever);addModule(modules_s input, bool call);balanceOf(address owner);totalSupply();getCurrentSchellingRoundID();getModuleAddressByName(string name);getModuleIDByHash(bytes32 hashOfName);getModuleIDByName(string name);getModuleIDByAddress(address addr)"
WhaleCoinOrg/WhaleCoin,contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
farazdagi/status-go,vendor/github.com/ethereum/go-ethereum/contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
kobigurk/go-ethereum,contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
Bo-Ye/go-ethereum,contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
jpitts/go-ethereum,contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
tooooolong/go-ethereum,contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
kingsi-goderia/go-ethereum,contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
maichain/listener,vendor/github.com/ethereum/go-ethereum/contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
gluk256/go-ethereum,contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
yondonfu/go-ethereum,contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
wangluinc/ethermint,vendor/github.com/ethereum/go-ethereum/contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
illya13/ethermint,vendor/github.com/ethereum/go-ethereum/contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
blackzid/go-ethereum,contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
noeleon930/go-ethereum,contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
Getline-Network/getline,vendor/github.com/ethereum/go-ethereum/contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
lab2528/go-oneTime,contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
CTCDEVTEAM/adtonethereum,contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
etherite/go-etherite,contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
shellygr/ECFChecker,contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
Yuka-kkk/ethereum2017,contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
am2rican5/go-ethereum,contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
Lopastvertoleta/go-ethereum,contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
Alchemist-coin/go-alchemist,contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
adrianbrink/tendereum,vendor/github.com/ethereum/go-ethereum/contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
adrianbrink/tendereum,vendor/github.com/cosmos/tendereum/vendor/github.com/ethereum/go-ethereum/contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
zetherz/eth-match,test/helpers/SecureTargetBounty.sol,checkInvariant();deployContract()
iurimatias/embark-framework,packages/embark/src/test/contracts/recursive_test_0.sol,set(uint x);get()
redsquirrel/augur-core,src/libraries/token/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
daxxcoin/daxxcore,contracts/chequebook/contract/chequebook.sol,""
adklempner/solidity-license,contracts/zeppelin/token/VestedToken.sol,"revokeTokenGrant(address _holder, uint256 _grantId);transferableTokens(address holder, uint64 time);tokenGrantsCount(address _holder);tokenGrant(address _holder, uint256 _grantId);vestedTokens(TokenGrant grant, uint64 time);nonVestedTokens(TokenGrant grant, uint64 time);lastTokenIsTransferableDate(address holder)"
adamdossa/ProfitSharingContract,installed_contracts/zeppelin/contracts/token/VestedToken.sol,"revokeTokenGrant(address _holder, uint256 _grantId);transferableTokens(address holder, uint64 time);tokenGrantsCount(address _holder);tokenGrant(address _holder, uint256 _grantId);vestedTokens(TokenGrant grant, uint64 time);nonVestedTokens(TokenGrant grant, uint64 time);lastTokenIsTransferableDate(address holder)"
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.4.24/ballot.sol,Ballot(bytes32[] proposalNames);giveRightToVote(address voter);delegate(address to);vote(uint proposal);winningProposal();winnerName()
soad003/browser-solidity,test/staticanalysis/test-contracts/ballot.sol,Ballot(bytes32[] proposalNames);giveRightToVote(address voter);delegate(address to);vote(uint proposal);winningProposal();winnerName()
citizencode/embark-framework,test/support/contracts/crowdsale.sol,"token();sendCoin(address receiver, uint amount);Crowdsale(address _beneficiary, uint _fundingGoal, uint _duration, uint _price, token _reward);checkGoalReached()"
d11e9/embark-framework,test/support/contracts/crowdsale.sol,"token();sendCoin(address receiver, uint amount);Crowdsale(address _beneficiary, uint _fundingGoal, uint _duration, uint _price, token _reward);checkGoalReached()"
jpentland/BitBadge,node_modules/grunt-embark/node_modules/embark-framework/test/support/contracts/crowdsale.sol,"token();sendCoin(address receiver, uint amount);Crowdsale(address _beneficiary, uint _fundingGoal, uint _duration, uint _price, token _reward);checkGoalReached()"
jpentland/BitBadge,node_modules/embark-framework/test/support/contracts/crowdsale.sol,"token();sendCoin(address receiver, uint amount);Crowdsale(address _beneficiary, uint _fundingGoal, uint _duration, uint _price, token _reward);checkGoalReached()"
jeffanthony/embark-framework,test/support/contracts/crowdsale.sol,"token();sendCoin(address receiver, uint amount);Crowdsale(address _beneficiary, uint _fundingGoal, uint _duration, uint _price, token _reward);checkGoalReached()"
SafeMarket/embark-framework,test/support/contracts/crowdsale.sol,"token();sendCoin(address receiver, uint amount);Crowdsale(address _beneficiary, uint _fundingGoal, uint _duration, uint _price, token _reward);checkGoalReached()"
mesh-market/mesh-market.github.io,mesh-market/node_modules/embark/old_test/support/contracts/crowdsale.sol,"token();sendCoin(address receiver, uint amount);Crowdsale(address _beneficiary, uint _fundingGoal, uint _duration, uint _price, token _reward);checkGoalReached()"
hitchcott/embark-framework,test/support/contracts/crowdsale.sol,"token();sendCoin(address receiver, uint amount);Crowdsale(address _beneficiary, uint _fundingGoal, uint _duration, uint _price, token _reward);checkGoalReached()"
troyth/embark-dappsforbeginners-demo,embark_demo/node_modules/embark-framework/test/support/contracts/crowdsale.sol,"token();sendCoin(address receiver, uint amount);Crowdsale(address _beneficiary, uint _fundingGoal, uint _duration, uint _price, token _reward);checkGoalReached()"
johnkozan/embark-framework,test/support/contracts/crowdsale.sol,"token();sendCoin(address receiver, uint amount);Crowdsale(address _beneficiary, uint _fundingGoal, uint _duration, uint _price, token _reward);checkGoalReached()"
AronVanAmmers/embark-framework,test/support/contracts/crowdsale.sol,"token();sendCoin(address receiver, uint amount);Crowdsale(address _beneficiary, uint _fundingGoal, uint _duration, uint _price, token _reward);checkGoalReached()"
RCasatta/embark-framework,test/support/contracts/crowdsale.sol,"token();sendCoin(address receiver, uint amount);Crowdsale(address _beneficiary, uint _fundingGoal, uint _duration, uint _price, token _reward);checkGoalReached()"
VoR0220/embark-framework,test/support/contracts/crowdsale.sol,"token();sendCoin(address receiver, uint amount);Crowdsale(address _beneficiary, uint _fundingGoal, uint _duration, uint _price, token _reward);checkGoalReached()"
aakilfernandes/embark-framework,test/support/contracts/crowdsale.sol,"token();sendCoin(address receiver, uint amount);Crowdsale(address _beneficiary, uint _fundingGoal, uint _duration, uint _price, token _reward);checkGoalReached()"
ryepdx/embark-framework,test/support/contracts/crowdsale.sol,"token();sendCoin(address receiver, uint amount);Crowdsale(address _beneficiary, uint _fundingGoal, uint _duration, uint _price, token _reward);checkGoalReached()"
tom-seddon/embark-framework,test/support/contracts/crowdsale.sol,"token();sendCoin(address receiver, uint amount);Crowdsale(address _beneficiary, uint _fundingGoal, uint _duration, uint _price, token _reward);checkGoalReached()"
gerbrand/embark-framework,test/support/contracts/crowdsale.sol,"token();sendCoin(address receiver, uint amount);Crowdsale(address _beneficiary, uint _fundingGoal, uint _duration, uint _price, token _reward);checkGoalReached()"
akhilss/embark-framework,old_test/support/contracts/crowdsale.sol,"token();sendCoin(address receiver, uint amount);Crowdsale(address _beneficiary, uint _fundingGoal, uint _duration, uint _price, token _reward);checkGoalReached()"
wpypeiyao/Identity-On-Blockchain,node_modules/embark/old_test/support/contracts/crowdsale.sol,"token();sendCoin(address receiver, uint amount);Crowdsale(address _beneficiary, uint _fundingGoal, uint _duration, uint _price, token _reward);checkGoalReached()"
xiaopow/embark-framework,test/support/contracts/crowdsale.sol,"token();sendCoin(address receiver, uint amount);Crowdsale(address _beneficiary, uint _fundingGoal, uint _duration, uint _price, token _reward);checkGoalReached()"
triage/KPCSEthereum,contracts/KPCS.sol,KPCS(address _administrator);kill();isCertificateRegisteredAndValid(address certificate);registerCertificate(address _certificate);registerParticipant(address _participant);participantCanParticipate(address _participant)
readevalprint/aragon-core,contracts/apps/token-manager/TokenManager.sol,"initialize(MiniMeToken _token, ERC20 _wrappedToken);mint(address _receiver, uint256 _amount);issue(uint256 _amount);wrap(uint256 _amount);unwrap(uint256 _amount);assign(address _receiver, uint256 _amount);assignVested(address _receiver, uint256 _amount, uint64 _start, uint64 _cliff, uint64 _vesting, bool _revokable);revokeVesting(address _holder, uint256 _vestingId);forward(bytes _evmCallScript);canForward(address _sender, bytes _evmCallScript);tokenGrantsCount(address _holder);spendableBalanceOf(address _holder);transferrableBalance(address _holder, uint256 _time);_assign(address _receiver, uint256 _amount);_burn(address _holder, uint256 _amount);_mint(address _receiver, uint256 _amount);proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount)"
melonproject/protocol,contracts/fund/policies/utils/CallOnIntegrationPostValidatePolicyBase.sol,policyHook();policyHookExecutionTime();__decodeRuleArgs(bytes memory _encodedRuleArgs)
aragon/aragon-core,contracts/test/mocks/KernelConstantsMock.sol,getKernelCoreNamespace();getKernelAppBasesNamespace();getKernelAppAddrNamespace();getKernelAppId();getDefaultACLAppId();getDefaultVaultAppId()
zeroqn/aa-apply,contracts/mocks/USDToken.sol,""
loiluu/peacerelay,contracts/ERC20.sol,"balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value)"
coinstruct/coinstruct,CrowdFunding.sol,"cancel();launch();invest();refund();totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
GovernX/governx-contracts,src/contracts/utils/IOwned.sol,isOwner(address addr);transfer(address _owner)
DonorToken/DonorToken,test/helpers/LimitBalanceMock.sol,limitedDeposit()
delneg/cryptogrip-contracts,compiled.sol,"balanceOf(address who);transfer(address to, uint256 value);mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);transfer(address _to, uint256 _value);balanceOf(address _owner);allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);Ownable();transferOwnership(address newOwner);CryptoGripInitiative(uint tokenTotalAmount, uint startTime, uint endTime, address admin);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);burn(uint _value);burnFrom(address _from, uint256 _value);Whitelist(address _owner, address _sale);accept(address a, uint amountInWei);setSale(address sale_);getCap(address _user);contributorCap(address contributor);eligible(address contributor, uint amountInWei);eligibleTestAndIncrement(address contributor, uint amountInWei);saleEnded();saleStarted();publicSaleStarted();setHaltSale(bool halt);buy(address recipient);sendETHToMultiSig(uint value);finalizeSale();emergencyDrain(ERC20 anyToken);debugBuy()"
furusiyya/Notary-Platform,contracts/NotaryPlatformToken.sol,"NotaryPlatformToken();transfer(address _to, uint256 _value);balanceOf(address _owner);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);claim();migrationAgent();upgradingEnabled();migrate(uint256 _value);setMigrationAgent(address _agent);tweakUpgrading();isTokenContract();ICOParticipants(address _supplyOwner);migrateFrom(address _from, uint256 _value);isMigrationAgent()"
NTRYPlatform/ntry-solidity,contracts/NotaryPlatformToken.sol,"NotaryPlatformToken();transfer(address _to, uint256 _value);balanceOf(address _owner);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);claim();migrationAgent();upgradingEnabled();migrate(uint256 _value);setMigrationAgent(address _agent);tweakUpgrading();isTokenContract();ICOParticipants(address _supplyOwner);migrateFrom(address _from, uint256 _value);isMigrationAgent()"
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/contracts/DayLimit.sol,DayLimit(uint256 _limit);_setDailyLimit(uint256 _newLimit);_resetSpentToday();underLimit(uint256 _value);today()
pash7ka/zeppelin-solidity,contracts/DayLimit.sol,DayLimit(uint256 _limit);_setDailyLimit(uint256 _newLimit);_resetSpentToday();underLimit(uint256 _value);today()
iswarm/p2pCny,contracts/DayLimit.sol,DayLimit(uint256 _limit);_setDailyLimit(uint256 _newLimit);_resetSpentToday();underLimit(uint256 _value);today()
readevalprint/aragon-core,contracts/zeppelin/DayLimit.sol,DayLimit(uint256 _limit);_setDailyLimit(uint256 _newLimit);_resetSpentToday();underLimit(uint256 _value);today()
pz7/liquet,node_modules/zeppelin-solidity/contracts/DayLimit.sol,DayLimit(uint256 _limit);_setDailyLimit(uint256 _newLimit);_resetSpentToday();underLimit(uint256 _value);today()
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/DayLimit.sol,DayLimit(uint256 _limit);_setDailyLimit(uint256 _newLimit);_resetSpentToday();underLimit(uint256 _value);today()
cashpokerpro-dev/cash-smartcontracts,contracts/DayLimit.sol,DayLimit(uint256 _limit);_setDailyLimit(uint256 _newLimit);_resetSpentToday();underLimit(uint256 _value);today()
cinderblockchain/cindertoken,contracts/DayLimit.sol,DayLimit(uint256 _limit);_setDailyLimit(uint256 _newLimit);_resetSpentToday();underLimit(uint256 _value);today()
shahankhatch/weifund-contracts,src/contracts/Owner.sol,""
bitcoinbrisbane/BitPoker,BitPoker.ETH.Contracts/Chip.sol,"transfer(address _to, uint256 _value)"
zetherz/eth-match,contracts/lifecycle/Migrations.sol,setCompleted(uint256 completed);upgrade(address newAddress)
aragon/aragon-network-token,packages/sale/test/TestMiniMeCloning.sol,beforeAll();testHasTokens();testCanClone();testCanTransfer();testCanCloneAfterTransfer();testRecurringClones()
yippee-ki-yay/eth-slots,contracts/SlotMachine.sol,"SlotMachine();oneRoll();contractBalance();calculatePrize(uint rand1, uint rand2, uint rand3);withdraw();balanceOf(address user);setCoinPrice(uint _coinPrice);cashout(uint _amount);randomGen(uint seed)"
manojpramesh/solidity-contracts,contracts/chain-info/chain-info.sol,ChainInfo();getContractAddress();getContractBalance();getCurrentMiner();getCurrentDifficulty();getCurrentGaslimit();getCurrentBlockNumber();getBlockTimestamp();getMessageData();getMessageSender();getMessageValue();getMessageGas();getTxGasprice();getTxOrigin();kill()
digitalthailand/course-blockchain-4-dev,examples/Multiplication.sol,Multiplication(int multiplier);multiply(int a)
borboss366/b9lab-splitter,contracts/Splitter.sol,"Splitter();getBalance(address account);contributeLocal();contribute(address party1, address party2);withdrawRefund()"
mixbytes/storiqa_ico,contracts/ownership/MultiownedControlled.sol,"MultiownedControlled(address[] _owners, uint _signaturesRequired, address _controller);setController(address _controller);detachController()"
Storiqa/ico_smart_contract,contracts/ownership/MultiownedControlled.sol,"MultiownedControlled(address[] _owners, uint _signaturesRequired, address _controller);setController(address _controller);detachController()"
montyly/manticore,tests/ethereum/contracts/simple_int_overflow.sol,add(uint value)
trailofbits/manticore,tests/ethereum/contracts/simple_int_overflow.sol,add(uint value)
silasdavis/eris-db,tests/jobs_fixtures/app46-meta-mixed-with-normal/test.sol,getName();setName(string memory name);addName(string memory name)
silasdavis/burrow,tests/jobs_fixtures/app46-meta-mixed-with-normal/test.sol,getName();setName(string memory name);addName(string memory name)
melonproject/protocol,contracts/fund/fees/FeeManager.sol,"enableFees(address[] calldata _fees, bytes[] calldata _encodedSettings);settleContinuousFees();settleFees(FeeHook _hook, bytes calldata _encodedFeeArgs);getEnabledFees();feeIsEnabled(address _fee);__payoutFeeSharesOutstanding(address _fee);__settleFee(address _fee, bytes memory _encodedFeeArgs);__settleAndPayoutFeesForHook(FeeHook _hook, bytes memory _encodedFeeArgs);createInstance(address _hub)"
KuekenPartei/party-contracts,src/main/resources/mix/voting.sol,"Ballot(string name,bytes32[] proposalNames);giveRightToVote(address voter);delegateTo(address to);voteFor(uint proposal);winningProposal();BasicBallot(address _registry,string _name,string _hash);addProposal(string _name,string _hash,string _url,address _member);castVote(uint _voteFor);startBallot();stopBallot();castVote(uint _voteFor);PublicBallot(address _registry,string _name,string _hash);create(uint ballotType,address _registry,string _name,string _hash)"
rsksmart/rskj,rskj-core/src/test/resources/dsl/creator2.sol,increment();getValue()
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.4.24/stringBytesLength.sol,length(string a)
Majoolr/ethereum-libraries,LinkedListLib/truffle/contracts/LinkedListTestContract.sol,"listExists();nodeExists(uint256 _node);sizeOf();getNode(uint256 _node);getAdjacent(uint256 _node, bool _direction);getSortedSpot(uint256 _node, uint256 _value, bool _direction);insert(uint256 _node, uint256 _new, bool _direction);remove(uint256 _node);push(uint256 _node, bool _direction);pop(bool _direction)"
iam-dev/ERC23,installed_contracts/zeppelin-solidity/contracts/token/BurnableToken.sol,burn(uint256 _value)
iam-dev/ERC23,installed_contracts/zeppelin-solidity/test/mocks/FinalizableCrowdsaleImpl.sol,""
orbro/eth-enablers,name-reg.sol,register(bytes32 name);unregister(bytes32 name)
Otonomos/smart-equity,Contracts/TrustReso.sol,"TrustReso(uint[3] _scParams, address trustAddress, address persona, address[] _resoDetails);sign(int vote);sign(address persona, int vote);timeCheck();getTrustContract();getResoType();getResoMethod();getState();getRequiredSigs();getQuorum();getSignerTable();getSignedTable();getSignerAddresses();getSignedAddresses();getSignerIndex();getSignedIndex();getResoSCParams();getResoDetails();getResoPeriod();getCreatedDate()"
dacplayproject/play-dapp,src/ERC223ReceivingContract.t.sol,"TokenReceivingEchoDemo(address _token);tokenFallback(address _from, uint256 _value, bytes _data);proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);setUp();testFail_basic_sanity();test_token_fall_back()"
WeOU/accounts,contracts/token.sol,"MyToken(uint256 _supply, string _name, string _symbol, uint8 _decimals);transfer(address _to, uint256 _amount)"
cgewecke/solcover,test/sources/return/return-null.sol,a(uint x)
JoinColony/solcover,test/sources/return/return-null.sol,a(uint x)
jmeis/solidity-examples,contracts/storage.sol,set(uint x);get()
jmeis/solidity,contracts/storage.sol,set(uint x);get()
dltdojo/courses,ethereum/solidity/T235_VerifiableClaim.sol,"testRegisterAndVerified();setAge(uint _age);register(address _userAddress);verifiedAgeOver(address _userAddress, uint _ageOver)"
michinbear/solidity,test/compilationTests/zeppelin/crowdsale/Crowdsale.sol,"Crowdsale(uint256 _startBlock, uint256 _endBlock, uint256 _rate, address _wallet);createTokenContract();buyTokens(address beneficiary);forwardFunds();validPurchase();hasEnded()"
prashantpawar/truffle,test/scenarios/cyclic_dependencies/Pong.sol,""
anniemwu/chainge,node_modules/truffle/test/scenarios/cyclic_dependencies/Pong.sol,""
hsavit1/gosofi_webpage,node_modules/truffle/test/scenarios/cyclic_dependencies/Pong.sol,""
DigixGlobal/truffle,test/scenarios/cyclic_dependencies/Pong.sol,""
aragon/aragon-core,contracts/lib/misc/ERCProxy.sol,proxyType();implementation()
Nethereum/Nethereum,src/Nethereum.ENS/oldcontracts/Deed.sol,"Deed(address _owner);setOwner(address newOwner);setRegistrar(address newRegistrar);setBalance(uint newValue, bool throwOnFailure);closeDeed(uint refundRatio);destroyDeed()"
TheRougeProject/RougeTokens,contracts/RGXBonus.sol,"isFundingOpen();distribute(address _to, uint256 _value);endFunding(uint _fundingEnd);withdraw();kill()"
YusukeMukoyama/boiler-trade-dapp,call_option_line.sol,"CallOption(      address _seller,      uint _seller_jpy,      uint _btc_price,      uint _btc_amount,      uint _premium,      uint _exercise_date      )"
montyly/manticore,tests/ethereum/contracts/detectors/race_condition2.sol,"transfer(address to, uint amount);withdrawBalance()"
trailofbits/manticore,tests/ethereum/contracts/detectors/race_condition2.sol,"transfer(address to, uint amount);withdrawBalance()"
sonm-io/core,blockchain/source/contracts/AutoPayout.sol,"SetAutoPayout(uint256 _limit, address _target);DoAutoPayout(address _master);kill()"
bcosorg/bcos,systemcontractv2/SystemProxy.sol,"getRoute(string key);setRoute(string key, address addr, bool cache);getRouteNameByIndex(uint index);getRouteSize()"
libdeos/deos-rsksmart,var/wiki/contracts/SuicideContract.sol,SuicideContract();kill()
kingflurkel/sponnietube,app/contracts/playlist.sol,blockPlaylist(string playlist);addClip(string ipfshash)
BlockTube/blocktube-client.0.2,app/contracts/blockPlaylist.sol,blockPlaylist(string playlist);addClip(string ipfshash)
BlockTube/blocktube-client.0.3,app/contracts/blockPlaylist.sol,blockPlaylist(string playlist);addClip(string ipfshash)
BlockTube/blocktube-client,app/contracts/blockPlaylist.sol,blockPlaylist(string playlist);addClip(string ipfshash)
adklempner/solidity-license,contracts/zeppelin/crowdsale/RefundVault.sol,RefundVault(address _wallet);deposit(address investor);close();enableRefunds();refund(address investor)
michinbear/solidity,test/compilationTests/zeppelin/crowdsale/RefundVault.sol,RefundVault(address _wallet);deposit(address investor);close();enableRefunds();refund(address investor)
adamdossa/ProfitSharingContract,installed_contracts/zeppelin/contracts/crowdsale/RefundVault.sol,RefundVault(address _wallet);deposit(address investor);close();enableRefunds();refund(address investor)
orbro/eth-enablers,solidity-baby-steps-master/contracts/20_value_incrementer.sol,Incrementer();increment();getIteration();kill()
boisde/Greed_Island,party/contracts-crued/interfaces/IController.sol,"addSet(address _setToken);feeRecipient();getModuleFee(address _module, uint256 _feeType);isModule(address _module);isSet(address _setToken);isSystemContract(address _contractAddress);resourceId(uint256 _id)"
EtherReal-ID/EtherReal-ID,sol/temp.sol,"Pretorian();createRoot(string name,string id);requestNewEtherRealID(string name,string id,string location,bool entity);resetRequest(string id);checkRequest(string name,string id,string location);registerSmartID(string name,string id,string location,bool entity,bool isEntity);registerWallet(address a,address owner);deleteWallet(address a,address owner);WHOIS(address a);receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);etherRealID(address owner,address validator,string name,string id,bool entity);requestNewEtherRealID(string name,string id,string location);Validate(string name,string id,string location,bool entity);addFamily(address a);removeFamily(address a);addWallet(address a);removeWallet(address a);getValidator(uint v);getValidated(uint v);getWallet(uint w);check()"
orbro/eth-enablers,DAO-develop/Token.sol,"balanceOf(address _owner);transfer(address _to, uint256 _amount);transferFrom(address _from, address _to, uint256 _amount);approve(address _spender, uint256 _amount);balanceOf(address _owner);transfer(address _to, uint256 _amount);approve(address _spender, uint256 _amount);allowance(address _owner, address _spender)"
chenlian2015/eosEthMarketSample,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
duaraghav8/Solium,test/lib/rules/indentation/accept/config-default.sol,accessPolicy();Counter();inc()
iam-dev/ERC23,installed_contracts/zeppelin-solidity/test/mocks/SecureTargetBounty.sol,checkInvariant();deployContract()
LykkeCity/EthereumApiDotNetCore,src/ContractBuilder/contracts/ethTransferContract.sol,EthTransferContract(address coinAdapterAddress);cashin()
daostack/daostack,contracts/controller/Avatar.sol,"genericCall(address _contract, bytes memory _data, uint256 _value);sendEther(uint256 _amountInWei, address payable _to);externalTokenTransfer(IERC20 _externalToken, address _to, uint256 _value);externalTokenApproval(IERC20 _externalToken, address _spender, uint256 _value);metaData(string memory _metaData)"
web3j/web3j-maven-plugin,src/test/resources/import/Upper.sol,""
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol,renounceOwnership();transferOwnership(address _newOwner);_transferOwnership(address _newOwner)
pipermerriam/populus,tests/fixtures/UsesAbstract.sol,doSomething()
SolarLibary/prosumer-micro-market,BISOL.sol,"addEntity(string _name);triggerInput();getEntitiesCount();getEntity(uint index);sendInput(int _currentCons, int _currentGen);aggregate();trade(int _totGen, int _totCons);balancing(int _totGen, int _totCons, uint i)"
orbro/eth-enablers,DAO-develop/ManagedAccount.sol,"payOut(address _recipient, uint _amount);ManagedAccount(address _owner, bool _payOwnerOnly);payOut(address _recipient, uint _amount)"
gleim/DAO,ManagedAccount.sol,"payOut(address _recipient, uint _amount);ManagedAccount(address _owner, bool _payOwnerOnly);payOut(address _recipient, uint _amount)"
chainpoint/chainpoint-services,node-eth-contracts/contracts/zeppelin-solidity/contracts/ownership/Ownable.sol,Ownable();transferOwnership(address newOwner)
adklempner/solidity-license,contracts/zeppelin/ownership/Ownable.sol,Ownable();transferOwnership(address newOwner)
adklempner/automte-exchange-contracts,contracts/zeppelin/ownership/Ownable.sol,Ownable();transferOwnership(address newOwner)
onyb/ethane,core/ownership/Ownable.sol,Ownable();transferOwnership(address newOwner)
adamdossa/ProfitSharingContract,installed_contracts/zeppelin/contracts/ownership/Ownable.sol,Ownable();transferOwnership(address newOwner)
erkmos/moeda,contracts/vendored/openzeppelin/ownership/Ownable.sol,Ownable();transferOwnership(address newOwner)
SilentCicero/wafr,src/tests/solidityTests/assertEq/test.assertEq.bool.sol,setup();test_oneValidEqBool();test_falseEqNoLog();test_twoValidEqBool();test_threeValidEqBool();test_fourValidEqBool();test_oneInvalidFalseEq();test_oneInvalidFalseEqLog();test_twoInvalidFalseEqLog();test_threeInvalidFalseEqLog();test_fourInvalidFalseEqLog();test_withAssertTrue()
TruLtd/tru-reputation-token,contracts/TruCrowdSale.sol,finalise();completion()
redsquirrel/augur-core,src/factories/ReportingWindowFactory.sol,"createReportingWindow(Controller _controller, Branch _branch, uint256 _reportingWindowId)"
WingsDao/contracts,contracts/helpers/strings.sol,"memcpy(uint dest, uint src, uint len);toSlice(string self);len(bytes32 self);copy(slice self);toString(slice self);len(slice self);empty(slice self);compare(slice self, slice other);equals(slice self, slice other);nextRune(slice self, slice rune);nextRune(slice self);ord(slice self);keccak(slice self);startsWith(slice self, slice needle);beyond(slice self, slice needle);endsWith(slice self, slice needle);until(slice self, slice needle);findPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);rfindPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);find(slice self, slice needle);rfind(slice self, slice needle);split(slice self, slice needle, slice token);split(slice self, slice needle);rsplit(slice self, slice needle, slice token);rsplit(slice self, slice needle);count(slice self, slice needle);contains(slice self, slice needle);concat(slice self, slice other);join(slice self, slice[] parts)"
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/ethpm/installed_contracts/tokens/contracts/eip20/EIP20Factory.sol,codeAt(address _addr)
stanta/darfchain,ICO/contracts/Crowdsale.sol,"Crowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal);investInternal(address receiver, uint128 customerId);preallocate(address receiver, uint fullTokens, uint weiPrice);investWithSignedAddress(address addr, uint128 customerId, uint8 v, bytes32 r, bytes32 s);investWithCustomerId(address addr, uint128 customerId);invest(address addr);buyWithSignedAddress(uint128 customerId, uint8 v, bytes32 r, bytes32 s);buyWithCustomerId(uint128 customerId);buy();finalize();setFinalizeAgent(FinalizeAgent addr);setRequireCustomerId(bool value);setRequireSignedAddress(bool value, address _signerAddress);setEarlyParicipantWhitelist(address addr, bool status);setEndsAt(uint time);setPricingStrategy(PricingStrategy _pricingStrategy);loadRefund();refund();isMinimumGoalReached();isFinalizerSane();isPricingSane();getState();setOwnerTestValue(uint val);isCrowdsale();isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal);isCrowdsaleFull();assignTokens(address receiver, uint tokenAmount)"
boisde/Greed_Island,party/contracts-crued/protocol/modules/StreamingFeeModule.sol,"accrueFee(ISetToken _setToken);removeModule();updateFeeRecipient(ISetToken _setToken, address _newFeeRecipient);getFee(ISetToken _setToken);_calculateStreamingFee(ISetToken _setToken);_mintManagerAndProtocolFee(ISetToken _setToken, uint256 _feeQuantity);_editPositionMultiplier(ISetToken _setToken, uint256 _inflationFee);_feeRecipient(ISetToken _set);_lastStreamingFeeTimestamp(ISetToken _set);_maxStreamingFeePercentage(ISetToken _set);_streamingFeePercentage(ISetToken _set)"
SilentCicero/wafr,src/tests/solidityTests/onlyContractsNoTests/AttestationManager.sol,"addContractWithInfo(string _contractHash, string _title);attestToContract(uint id, bool attestation, string attestationType)"
ise-ethereum/on-chain-chess,contract/EloTest.sol,"EloTest();recordResult(address player1, address player2, address winner)"
Project-WikiGit/WikiGit,dev/contracts/main.sol,"Module(address _mainAddress);moduleAddress(string mod);Main(string _metadata, bytes _abiIPFSHash);initializeModuleAddresses(address[] _addrs);initializeABIHashForMod(uint _modId, bytes _abiHash);getABIHashForMod(bytes32 _modHash);setABIHashForMod(bytes32 _modHash, bytes _abiHash);removeModuleAtIndex(uint _index);setMetadata(string _meta)"
AdChain/AdChainRegistry,contracts/historical/Token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
Dsummers91/Dist-Trade-2017,installed_contracts/tokens/contracts/Token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
michinbear/solidity,test/compilationTests/gnosis/Markets/MarketFactory.sol,"createMarket(Event eventContract, MarketMaker marketMaker, uint24 fee)"
elementrem/solidity,test/compilationTests/gnosis/Markets/MarketFactory.sol,"createMarket(Event eventContract, MarketMaker marketMaker, uint24 fee)"
daostack/daostack,contracts/schemes/Competition.sol,"initialize(address payable _contributionRewardExt);vote(uint256 _suggestionId);setSnapshotBlock(bytes32 _proposalId);sendLeftOverFunds(bytes32 _proposalId);redeem(uint256 _suggestionId);getOrderedIndexOfSuggestion(uint256 _suggestionId);refreshTopSuggestions(bytes32 _proposalId, uint256 _suggestionId)"
tokenai/tokenai-network-token,contracts/interface/TokenController.sol,"proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount)"
gnosis/gnosis-contracts,contracts/Oracles/DifficultyOracle.sol,setOutcome();isOutcomeSet();getOutcome()
ProBonoPublicoWorld/ico-contracts,contracts/DualMintableToken.sol,"DualMintableToken(address ownerA, address ownerB)"
crypto-coder/Tokens,Token_Contracts/contracts/DecayingTokenFactory.sol,createTokenFunctions();getTokenFunction(uint8 _functionType)
AustP/autocomplete-solidity,spec/files/pyramid.sol,"Pyramid(address _bitcoinBridge);enter(bytes desc, bytes bitcoinAddress);getNumberOfParticipants();collectFees(address recipient);setBitcoinBridge(address _bitcoinBridge);setOwner(address _owner);queuePayment(bytes bitcoinAddress)"
Spreadway/core,eth/example.sol,"setClaim(string key, string value);getClaim(address owner, string key);setDefaultClaim(string value);getDefaultClaim(address owner)"
chai2/Midterm,contracts/utils/Math.sol,""
cgewecke/eth-gas-reporter,mock/contracts/MultiContractFile.sol,hello();goodbye()
ethereum/remix,remix-astwalker/tests/resources/test.sol,set(int _x);get()
jellegerbrandy/daostack,contracts/zeppelin-solidity/token/CrowdsaleToken.sol,createTokens(address recipient);getPrice()
cgewecke/solcover,test/sources/zeppelin/token/CrowdsaleToken.sol,createTokens(address recipient);getPrice()
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/token/CrowdsaleToken.sol,createTokens(address recipient);getPrice()
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/token/CrowdsaleToken.sol,createTokens(address recipient);getPrice()
JoinColony/solcover,test/sources/zeppelin/token/CrowdsaleToken.sol,createTokens(address recipient);getPrice()
shahankhatch/dapp-bin,getting started/crowdsale.sol,"token();sendToken(address receiver, uint amount);CrowdSale();setup(address _beneficiary, uint _fundingGoal, uint _duration, uint _price, address _reward);checkGoalReached()"
LianaHus/dapp-bin,getting started/crowdsale.sol,"token();sendToken(address receiver, uint amount);CrowdSale();setup(address _beneficiary, uint _fundingGoal, uint _duration, uint _price, address _reward);checkGoalReached()"
RepublicMaster/dapp-bin,getting started/crowdsale.sol,"token();sendToken(address receiver, uint amount);CrowdSale();setup(address _beneficiary, uint _fundingGoal, uint _duration, uint _price, address _reward);checkGoalReached()"
frozeman/ethereum-smart-contracts,getting started/crowdsale.sol,"token();sendToken(address receiver, uint amount);CrowdSale();setup(address _beneficiary, uint _fundingGoal, uint _duration, uint _price, address _reward);checkGoalReached()"
ethereum/dapp-bin,getting started/crowdsale.sol,"token();sendToken(address receiver, uint amount);CrowdSale();setup(address _beneficiary, uint _fundingGoal, uint _duration, uint _price, address _reward);checkGoalReached()"
vaporry/dapp-bin,getting started/crowdsale.sol,"token();sendToken(address receiver, uint amount);CrowdSale();setup(address _beneficiary, uint _fundingGoal, uint _duration, uint _price, address _reward);checkGoalReached()"
BitOfEnergy/BOE-Token,BOE-Token.sol,"base();transferOwnership(address _newAdmin);disable();receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);BOECoin(uint256 initialSupply, string tokenName, uint8 decimalUnits, string tokenSymbol);transfer(address _to, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);transferFrom(address _from, address _to, uint256 _value)"
GovernX/governx-contracts,src/contracts/utils/Proposable.sol,"recordMoment(address _sender, uint256 _value, uint256 _proposalID);hasVoted(uint256 _pid, address _sender);latestMomentOf(uint256 _pid, address _sender);numMomentsOf(uint256 _pid);momentSenderOf(uint256 _pid, uint256 _mid);momentValueOf(uint256 _pid, uint256 _mid);momentTimeOf(uint256 _pid, uint256 _mid);momentBlockOf(uint256 _pid, uint256 _mid);momentNonceOf(uint256 _pid, uint256 _mid);weightOf(uint256 _proposalID, uint256 _position);voteWeightOf(uint256 _pid, uint256 _mid);votePositionOf(uint256 _pid, uint256 _mid);hasExecuted(uint _proposalID);metadataOf(uint256 _proposalID);numDataOf(uint256 _proposalID);dataOf(uint256 _proposalID)"
A-StadLabs/poezenclub,app/contracts/LocalsMembership.sol,LocalsMembership();setPrice(uint newPrice);addMember(address newMember);membershipStatus(address addr)
A-StadLabs/poezendemo,app/contracts/LocalsMembership.sol,LocalsMembership();setPrice(uint newPrice);addMember(address newMember);membershipStatus(address addr)
allegewhd/erc20-token-service,contract/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
web3j/web3j,contracts/src/main/resources/eip721/solidity/ERC721Metadata.sol,name();symbol();tokenURI(uint256 _tokenId)
gmo-blockchain/solidity,contracts/DataObjectField_v2.sol,"setDefault(bytes32 _id);existIdAtCurrentVersion(bytes32 _id);setTmpWriteTimestamp(bytes32 _id, uint _tmpWriteTimestamp);getTmpWriteTimestamp(bytes32 _id);setWriteTimestamp(bytes32 _id, uint _writeTimestamp);getWriteTimestamp(bytes32 _id)"
pipermerriam/ethereum-alarm-clock,contracts/_test/Proxy.sol,"Proxy(address _scheduler, address _receipient, uint _payout, uint _gasPrice, uint _delay);sendOwnerEther(address _receipient)"
justmake/smart_contract,drafts/JMETHExchange.sol,""
adridadou/eth-contract-api,src/test/resources/c1.sol,""
input-output-hk/etc-client,src/evmTest/resources/solidity/CallSelfDestruct.sol,callDestruct();doSelfdestruct()
silasdavis/burrow,tests/dump/undeclared.sol,setFoobar(int n);getFoobar();foo()
GX-Coin/SmartContract,GxVersioned.sol,""
iExecBlockchainComputing/rlc-token,contracts/Crowdsale.sol,"Crowdsale();Crowdsale();start();receiveETH(address beneficiary);receiveBTC(address beneficiary, string btc_address, uint value, string txid);emitRLC(uint amount);bonus(uint amount);receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);setRLCPerETH(uint rate);finalize();drain()"
turboprep/geth-tutorial,voting2/ballot.sol,Ballot(bytes32[] proposalNames);giveRightToVote(address voter);vote(uint proposal);winningProposal();winnerName()
BeBlockTech/Anemoi,Test/Token/ANM.sol,"owned();transferOwnership(address newOwner);receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);_transfer(address _from, address _to, uint _value);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);burn(uint256 _value);burnFrom(address _from, uint256 _value);_transfer(address _from, address _to, uint _value);mintToken(address target, uint256 mintedAmount);freezeAccount(address target, bool freeze);setPrices(uint256 newSellPrice, uint256 newBuyPrice);buy();sell(uint256 amount)"
KuekenPartei/party-contracts,src/main/resources/mix/party.sol,"publishMessage(string message,string hash,string er);changeMember(uint _id,address _address);createFunction(string _functionName,string _constittiutionHash);initalizeOrgan();publishFunctionMessage(uint id,string message,string hash,string er);createBallot(uint ballotType,address _registry,string _name,string _hash);getLastBallot();getOrganBlog();addOrganFunction(address _of,string _name);getOrganFunction(uint _id);getOrganName();createOrgan(string organName);addOrgan(address _organ);addSubDivision(address _subDivision);removeSubDivision(uint _divisionId);getMemberRegistry();setName(string aName);setParent(address _parent);KUEKeNParty(string _name);boostrapParty(address fc,address br);accreditationMember(address _address);initalizeOrgan();OrganFunction(string _name,string _ch);publishMessage(string message,string hash,string er);getFunctioName()"
alcuadrado/truffle-flattener,tests/contracts/child.sol,""
LykkeCity/EthereumApiDotNetCore,src/ContractBuilder/contracts/token/Erc223/erc223Contract.sol,"balanceOf(address _who);transfer(address _to, uint _value);transfer(address _to, uint _value, bytes _data);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);totalSupply()"
ise-ethereum/on-chain-chess,contract/TurnBasedGame.sol,"getGamesOfPlayer(address player);getOpenGameIds();closePlayerGame(bytes32 gameId);surrender(bytes32 gameId);withdraw(bytes32 gameId);isGameEnded(bytes32 gameId);initGame(string player1Alias, bool playAsWhite, uint turnTime);joinGame(bytes32 gameId, string player2Alias);claimWin(bytes32 gameId);offerDraw(bytes32 gameId);claimTimeout(bytes32 gameId);rejectCurrentPlayerDraw(bytes32 gameId);claimTimeoutEnded(bytes32 gameId);confirmGameEnded(bytes32 gameId);TurnBasedGame(bool enableDebugging)"
etherisc/flightDelay,contracts/FlightDelayNewPolicy.sol,FlightDelayNewPolicy(address _controller);setContracts();bookAndCalcRemainingPremium();maintenanceMode(bool _on)
eris-ltd/eris-db,execution/wasm/child.sol,""
montyly/manticore,examples/evm/simple_value_check.sol,target()
trailofbits/manticore,examples/evm/simple_value_check.sol,target()
jellegerbrandy/daostack,contracts/zeppelin-solidity/Killable.sol,kill()
cgewecke/solcover,test/sources/zeppelin/Killable.sol,kill()
WingsDao/contracts,contracts/zeppelin/Killable.sol,kill()
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/Killable.sol,kill()
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/Killable.sol,kill()
JoinColony/solcover,test/sources/zeppelin/Killable.sol,kill()
iurimatias/TransactionRelay,app/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
QTBlockchain/SolidityNWeb3,SmartContracts/mynewcontract/contracts/Math.sol,Math(int value);getResult();addToResult(int value);mulToResult(int value)
tokenai/tokenai-network-token,contracts/interface/Controlled.sol,Controlled();changeController(address _newController)
bokkypoobah/TokenTrader,testing/test_20170125_0829/GNTTokenTraderFactory.sol,"balanceOf( address who );transfer( address to, uint value);owned();transferOwnership(address newOwner);withdrawAsset(uint256 _value);withdrawToken(address _token, uint256 _value);withdraw(uint256 _value);buy();verify(address tradeContract);if(pairExits[bookid] == false)"
bokkypoobah/TokenTrader,testing/test_20170115_1619/GNTTokenTraderFactory.sol,"balanceOf( address who );transfer( address to, uint value);owned();transferOwnership(address newOwner);withdrawAsset(uint256 _value);withdrawToken(address _token, uint256 _value);withdraw(uint256 _value);buy();verify(address tradeContract);if(pairExits[bookid] == false)"
bokkypoobah/TokenTrader,testing/test_20170205_1849/GNTTokenTraderFactory.sol,"balanceOf( address who );transfer( address to, uint value);owned();transferOwnership(address newOwner);withdrawAsset(uint256 _value);withdrawToken(address _token, uint256 _value);withdraw(uint256 _value);buy();verify(address tradeContract);if(pairExits[bookid] == false)"
Crypto-Apartments/CRA-ICO-TOKEN,contract/LockedTokens.sol,LockedTokens(address _tokenContract);addRemainingTokens();require(msg.sender == address(tokenContract);balanceOfLocked(address account);totalSupplyLocked()
LykkeCity/EthereumApiDotNetCore,src/ContractBuilder/contracts/token/Erc223/erc223Token.sol,"transfer(address _to, uint _value, bytes _data);transfer(address _to, uint _value);balanceOf(address _owner)"
silasdavis/eris-db,tests/jobs_fixtures/app15-binding_abi_using_naming_pattern_importing_base/GSContract.sol,set(uint x);get()
silasdavis/eris-db,tests/jobs_fixtures/app16-binding_abi_using_address_returns_factory_and_base_separate/GSContract.sol,set(uint x);get()
silasdavis/burrow,tests/jobs_fixtures/app16-binding_abi_using_address_returns_factory_and_base_separate/GSContract.sol,set(uint x);get()
silasdavis/burrow,tests/jobs_fixtures/app15-binding_abi_using_naming_pattern_importing_base/GSContract.sol,set(uint x);get()
eris-ltd/eris-db,tests/jobs_fixtures/app16-binding_abi_using_address_returns_factory_and_base_separate/GSContract.sol,set(uint x);get()
eris-ltd/eris-db,tests/jobs_fixtures/app15-binding_abi_using_naming_pattern_importing_base/GSContract.sol,set(uint x);get()
stanta/darfchain,ICO/contracts/PricingStrategy.sol,"isPricingStrategy();isSane(address crowdsale);calculatePrice(uint value, uint weiRaised, uint tokensSold, address msgSender, uint decimals)"
cryptape/cita,scripts/contracts/src/system/QuotaManager.sol,"setDefaultAQL(uint _value);setAQL(address _account, uint _value);setBQL(uint _value);getAccounts();getQuotas();getBQL();getDefaultAQL();getAQL(address _account);getAutoExecQL()"
EthWorks/ethereum.rb,spec/truffle/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
marekkirejczyk/ethereum.rb,spec/truffle/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
charlieknoll/dgpv2,backup/BatToken.sol,"balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);createTokens();finalize();refund()"
GX-Coin/SmartContract,GxUsesTradersProxy.sol,setTradersProxyContract(address tradersProxyAddress)
aragon/aragon-network-token,packages/sale/test/TestTokenSaleCap.sol,beforeAll();beforeEach();testCantFinalizeNotEndedSale();throwsWhenFinalizingNotEndedSale();testCantFinalizeIfNotMultisig();throwsWhenFinalizingIfNotMultisig();testCantFinalizeWithIncorrectCap();throwsWhenFinalizingWithIncorrectCap();testCanFinalizeOnCap();testFinalizingBeforeCapChangesHardCap();testHardCap();throwsWhenHittingHardCap();testCanFinalizeEndedSale();testTokensAreTransferrableAfterSale();testFundsAreTransferrableAfterSale();testFundsAreLockedDuringSale()
A-StadLabs/poezenclub,app/contracts/PoezenVoting.sol,"setinterval(uint start,uint end);vote(uint vote)"
ganchix/ETH_16_Ethereum,UNIT-4/splitterProject/contracts/Killable.sol,Killable();getKilled();kill(KilledStatus killValue);emergencyWithdrawal()
ganchix/ETH_16_Ethereum,UNIT-4/remittanceProject/contracts/Killable.sol,Killable();getKilled();kill(KilledStatus killValue);emergencyWithdrawal()
openanx/OpenANXToken,contracts/Owned.sol,Owned();transferOwnership(address _newOwner);acceptOwnership()
openanx/OpenANXToken,test/Owned.sol,Owned();transferOwnership(address _newOwner);acceptOwnership()
finhaus/training,contract-design-patterns/contracts/Errors.sol,Errors();divideByZero(uint number);arrayIndexOutOfBounds(uint index);arrayIndexOutOfBoundsDynamic(uint index);bigLoop(uint loopSize);returnError()
syigzaw/ethjournal,contracts/Paper.sol,"Paper(string _title, address _editor, uint _paperUID, uint _price, address[] allAuthors, address _ethjournal);submitPeerReview();deleteOwnPeerReview();deletePeerReview(address _peerReviewer);publish();reject();revise();buy();read()"
isvirin/neurodao,eHealth first/EhfirstCrowdsale.sol,"changeOwner(address _owner);confirmOwner();balanceOf(address who);transfer(address to, uint value);allowance(address owner, address spender);transferFrom(address from, address to, uint value);approve(address spender, uint value);setVestingManager(address _vestingManager);beforeBalanceChanges(address _who);balanceOf(address _who);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);burn(uint256 _value);startStage(uint _startTokenPriceWei, uint _tokensForSale, uint _milliPercent);currentTokenPrice();stopStage();seal();setBackend(address _backend);withdraw();freezeTheMoment();freezedBalanceOf(address _who)"
raineorshine/solgraph,test/in/Pure.sol,Foo()
Majoolr/ethereum-libraries,CrowdsaleLib/EvenDistroCrowdsale/truffle/contracts/CrowdsaleTestTokenEteenD.sol,"name();symbol();decimals();totalSupply();initialSupply();balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint256 value);transferFrom(address from, address to, uint value);approve(address spender, uint256 value);approveChange(address spender, uint256 valueChange, bool increase);changeOwner(address newOwner);burnToken(uint256 amount)"
michinbear/solidity,test/compilationTests/zeppelin/token/VestedToken.sol,"revokeTokenGrant(address _holder, uint256 _grantId);transferableTokens(address holder, uint64 time);tokenGrantsCount(address _holder);tokenGrant(address _holder, uint256 _grantId);vestedTokens(TokenGrant grant, uint64 time);nonVestedTokens(TokenGrant grant, uint64 time);lastTokenIsTransferableDate(address holder)"
elementrem/solidity,test/compilationTests/zeppelin/token/VestedToken.sol,"revokeTokenGrant(address _holder, uint256 _grantId);transferableTokens(address holder, uint64 time);tokenGrantsCount(address _holder);tokenGrant(address _holder, uint256 _grantId);vestedTokens(TokenGrant grant, uint64 time);nonVestedTokens(TokenGrant grant, uint64 time);lastTokenIsTransferableDate(address holder)"
Great-Hill-Corporation/nameGame,nameGame.sol,"NameGame(uint _n, uint _dur, uint _entryFee);joinGame(string _name);playGame(uint id);findPlayer(address addr);destroyContract()"
CORIONplatform/solidity,providerDB.sol,"debug_changeOwner(address newOwner);getProviderCounter();isClientPaidUp(address clientAddress);joinToProvider(uint256 providerUID, address clientAddress);partFromProvider(uint256 providerUID, address clientAddress);getSenderStatus(address sender, uint256 providerUID);getClientSupply(address clientAddress, uint256 schellingRound, uint256 previousSupply);setClientSupply(address clientAddress, uint256 schellingRound, uint256 amount);getClientSupply(address clientAddress);getClientSupply(address clientAddress, uint256 schellingRound);setClientSupply(address clientAddress, uint256 amount);getClientPaidUpTo(address clientAddress);setClientPaidUpTo(address clientAddress, uint256 paidUpTo);getClientLastPaidRate(address clientAddress);setClientLastPaidRate(address clientAddress, uint8 lastPaidRate);getClientLastSupplyID(address clientAddress);setClientLastSupplyID(address clientAddress, uint256 lastSupplyID);getClientProviderUID(address clientAddress);setClientProviderUID(address clientAddress, uint256 providerUID);newSchellingRound(uint256 roundID, uint256 reward);getCurrentSchellingRound();setCurrentSchellingRound(uint256 roundID);getSchellingRoundDetails();getSchellingRoundDetails(uint256 roundID);setSchellingRoundDetails(uint256 roundID, uint256 reward, uint256 supply);setSchellingRoundSupply(uint256 supply);setSchellingRoundReward(uint256 reward);closeProvider(address owner);checkForJoin(uint256 providerUID, address clientAddress, uint256 countLimitforPrivate);isProviderValid(uint256 providerUID);getProviderInfoFields(uint256 providerUID);getProviderDetailFields(uint256 providerUID);setProviderDetailFields(uint256 providerUID, bool priv, bool isForRent, uint256 closed);getProviderSupply(uint256 providerUID, uint256 schellingRound, uint256 previousSupply);getProviderRateHistory(uint256 providerUID, uint256 schellingRound, uint8 previousRate);setProviderSupply(uint256 providerUID, uint256 schellingRound, uint256 amount);getProviderOwner(uint256 providerUID);setProviderOwner(uint256 providerUID, address owner);getProviderAdmin(uint256 providerUID);setProviderAdmin(uint256 providerUID, address admin);getProviderName(uint256 providerUID);setProviderName(uint256 providerUID, string name);getProviderWebsite(uint256 providerUID);setProviderWebsite(uint256 providerUID, string website);getProviderCountry(uint256 providerUID);setProviderCountry(uint256 providerUID, uint256 country);getProviderInfo(uint256 providerUID);setProviderInfo(uint256 providerUID, string info);getProviderIsForRent(uint256 providerUID);setProviderIsForRent(uint256 providerUID, bool isForRent);getProviderRateHistory(uint256 providerUID, uint256 schellingRound);setProviderRateHistory(uint256 providerUID, uint256 schellingRound, uint8 value, bool valid);getProviderCurrentRate(uint256 providerUID);setProviderCurrentRate(uint256 providerUID, uint8 rate);getProviderPriv(uint256 providerUID);setProviderPriv(uint256 providerUID, bool priv);getProviderClientsCount(uint256 providerUID);setProviderClientsCount(uint256 providerUID, uint256 clientsCount);getProviderInvitedUser(uint256 providerUID, address clientAddress);setProviderInvitedUser(uint256 providerUID, address clientAddress, bool status);getProviderSupply(uint256 providerUID, uint256 schellingRound);getProviderSupply(uint256 providerUID);setProviderSupply(uint256 providerUID, uint256 value);getProviderLastSupplyID(uint256 providerUID);setProviderLastSupplyID(uint256 providerUID, uint256 lastSupplyID);getProviderClosed(uint256 providerUID);setProviderClosed(uint256 providerUID, uint256 closed)"
pooleja/SolidityPlayground,contracts/DacToken.sol,DacToken()
dnulnets/consent,sol/consent.sol,"getCompany();setStatus(Status _status);getStatus();getTemplate();getGiver();getOwner();kill();getActiveConsentTemplates();getAllConsentTemplates();setConsentStatus(Consent _consent, Consent.Status _status);cancelConsent(Consent _consent);getCompany();getOwner();kill()"
youvegoteth/youvegoteth.github.io,contracts/contracts/TransferIndex.sol,"TransferIndex();function();newTransfer(bool _disableDeveloperTip, address _owner, address _contract, uint _amount, uint _fee_amount, uint expires);claimTransfer(address _idx, address _to);expireTransfer(address _idx);getTransferDetails(address _idx);distributeFunds(address _idx, uint256 _pct_to_dev_team, address _main_to_address, address _contract )"
kinfoundation/kin-token,contracts/KinToken.sol,"mint(address _to, uint256 _amount);endMinting();approve(address _spender, uint256 _value);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value)"
SafeContracts/TREX-token,StandardToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
pipermerriam/ethereum-alarm-clock,contracts/Interface/TransactionRequestInterface.sol,"execute();cancel();claim();proxy(address recipient, bytes callData);requestData();callData();refundClaimDeposit();sendFee();sendBounty();sendOwnerEther();sendOwnerEther(address recipient)"
melonproject/protocol,contracts/integrations/utils/AdapterBase.sol,"__aggregateAssets(address[] memory _assets, uint256[] memory _amounts);__isVault(address _who)"
noeleon930/nccucs-se2016-dapp-example,contract/Bank.sol,"Bank();deposit();withdraw(uint256 etherValue);transfer(address to, uint256 etherValue);checkBankBalance();checkEtherBalance()"
ethereum/dapp-bin,wallet/wallet.sol,"multiowned(address[] _owners, uint _required);revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);getOwner(uint ownerIndex);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);reorganizeOwners();clearPending();daylimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today();changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);Wallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);clearPending()"
hedgepigdaniel/gnomocracy,src/contracts/wallet.sol,"multiowned(address[] _owners, uint _required);revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);getOwner(uint ownerIndex);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);reorganizeOwners();clearPending();daylimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today();changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);Wallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);clearPending()"
bitsanity/gungadin,ethereum/membership/Membership.sol,"transfer( address to, uint amount );transferFrom( address from, address to, uint quantity );changeOwner( address payable newOwner );setFee( uint256 _fee );setDao( uint256 _dao );setTreasury( address payable _treasury );setToken( address _token );setTokenFee( uint _tfee );setApproval( address _member, bool _status );isMember( address _addr );payWithTokens();withdraw( uint256 amount );sendTok( address _tok, address _to, uint256 _qty )"
ethermarket/democracy,src/democracy/directDemocracy.sol,"DirectDemocracy();permitted(address action);addOwner(address owner);removeOwner(address owner);proposeAction(address proposedAction);withdrawProposedAction();setQuorumPercent(uint8 percent);setMarginForVictoryPercent(uint8 percent);setMinimumVotingWindow(uint minimumWindow);setMaximumVotingWindow(uint maximumWindow);wipeProposedActions();vote(address owner, address action, Vote vote);spend(address recipient, uint amount);remove();_removeProposal(address owner);_updateMargins();_checkVotes(address owner)"
DavdRoman/Payroll,contracts/Payroll/IPayroll.sol,"addEmployee(address _address, uint _yearlyUSDSalary, uint _startDate);setEmployeeAddress(uint _id, address _address);setEmployeeSalary(uint _id, uint _yearlyUSDSalary);removeEmployee(uint _id);getEmployeeCount();getEmployeeId(address _address);getEmployee(uint _id);calculatePayrollBurnrate();calculatePayrollRunway();escapeHatch(bool _forced);changeAddress(address _address);determineAllocation(address[] _tokens, uint[] _distribution);payday()"
creditbit-dev/credit2.0,CreditGAME.sol,"claimGameReward(address _champion, uint _lockedTokenAmount, uint _lockTime);setTokenAddress(address _tokenAddress);addApprovedGame(address _gameAddress);removeApprovedGame(address _gameAddress);isGameApproved(address _gameAddress);createLock(address _winner, uint _totalParticipationAmount, uint _tokenLockDuration);checkInternalBalance();removeLock();cleanUp();getGameLock(address _gameAddress);checkIfLockCanBeRemoved(address _gameAddress);getCurrentBlock()"
allegewhd/erc20-token-service,contract/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
chainpoint/chainpoint-services,node-eth-contracts/contracts/zeppelin-solidity/contracts/token/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
adklempner/solidity-license,contracts/zeppelin/token/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
onyb/ethane,core/contracts/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
youvegoteth/youvegoteth.github.io,contracts/contracts/zeppelin/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
adamdossa/ProfitSharingContract,installed_contracts/zeppelin/contracts/token/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
erkmos/moeda,contracts/vendored/openzeppelin/token/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
OpenSTFoundation/SimpleTokenSale,contracts/Truffle/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Dsensor/resolutionwallet,src/server/smartcontracts/sensor-contract.sol,"sensorContract();setSensorOwner(address receiver);setStorageContract(address adin);setSensorBrand(string x);setSensorFirmware(string x);setSensorMeasure(string x, string y, string z);getBrand();getOwner(address addr);getMeasure();remove()"
reiven/nerdearla17---solidity,contracts/hello_world.sol,HelloWorld();set_foo(string new_foo);get_foo()
EarthDollar/farmer,mix/stdc/std.sol,"owned();kill();register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service);getAddress(bytes32 _name);getName(address _owner);NameReg();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr);kill();register(bytes32 name);addressOf(bytes32 name);unregister();nameOf(address addr)"
gnosis/gnosis-contracts,contracts/Markets/CampaignFactory.sol,""
ProBonoPublicoWorld/ico-contracts,contracts/DelegateDualOwnable.sol,"DelegateDualOwnable(address a, address b);transferOwnership(address newOwner)"
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/migrations/success/contracts/UsesLibrary.sol,fireIsLibraryEvent(uint id);fireUsesLibraryEvent(uint id)
ConsenSys/dapp-store-contracts,contracts/ReviewModel.sol,"ReviewModel();create(uint[101][] attributes);validate(address sender, uint id, uint[101][] attributes)"
Fermion-Project/Light-Wallet,contracts/MultiSigWallet.sol,"MultiSigWallet(address[] _owners, uint _required);addOwner(address owner);removeOwner(address owner);replaceOwner(address owner, address newOwner);changeRequirement(uint _required);submitTransaction(address destination, uint value, bytes data);confirmTransaction(uint transactionId);revokeConfirmation(uint transactionId);executeTransaction(uint transactionId);isConfirmed(uint transactionId);addTransaction(address destination, uint value, bytes data);getConfirmationCount(uint transactionId);getTransactionCount(bool pending, bool executed);getOwners();getConfirmations(uint transactionId);getTransactionIds(uint from, uint to, bool pending, bool executed)"
libdeos/deos-rsksmart,var/wiki/contracts/HelloWord.sol,Constructor(string _greeting);greet();setGreeting(string _newgreeting);kill()
boisde/Greed_Island,party/contracts/interfaces/ISetToken.sol,"addComponent(address _component);removeComponent(address _component);editDefaultPositionUnit(address _component, int256 _realUnit);addExternalPositionModule(address _component, address _positionModule);removeExternalPositionModule(address _component, address _positionModule);editExternalPositionUnit(address _component, address _positionModule, int256 _realUnit);editExternalPositionData(address _component, address _positionModule, bytes calldata _data);invoke(address _target, uint256 _value, bytes calldata _data);editPositionMultiplier(int256 _newMultiplier);mint(address _account, uint256 _quantity);burn(address _account, uint256 _quantity);lock();unlock();addModule(address _module);removeModule(address _module);initializeModule();setManager(address _manager);manager();moduleStates(address _module);getModules();getDefaultPositionRealUnit(address _component);getExternalPositionRealUnit(address _component, address _positionModule);getComponents();getExternalPositionModules(address _component);getExternalPositionData(address _component, address _positionModule);isExternalPositionModule(address _component, address _module);isComponent(address _component);positionMultiplier();getPositions();getTotalComponentRealUnits(address _component);isInitializedModule(address _module);isPendingModule(address _module);isLocked()"
cgewecke/eth-gas-reporter,mock/contracts/EtherRouter/VersionA.sol,setValue()
erooijak/ethlance,resources/public/contracts/src/ethlanceDB.sol,"EthlanceDB();addAllowedContracts(address[] addresses);removeAllowedContracts(address[] addresses);allowedContractsCount();getAllowedContracts();getUIntValue(bytes32 record);setUIntValue(bytes32 record, uint value);addUIntValue(bytes32 record, uint value);subUIntValue(bytes32 record, uint value);deleteUIntValue(bytes32 record);getStringValue(bytes32 record);setStringValue(bytes32 record, string value);deleteStringValue(bytes32 record);getAddressValue(bytes32 record);setAddressValue(bytes32 record, address value);deleteAddressValue(bytes32 record);getBytesValue(bytes32 record);setBytesValue(bytes32 record, bytes value);deleteBytesValue(bytes32 record);getBooleanValue(bytes32 record);setBooleanValue(bytes32 record, bool value);deleteBooleanValue(bytes32 record);getIntValue(bytes32 record);setIntValue(bytes32 record, int value);deleteIntValue(bytes32 record);booleanToUInt(bool x);getUIntValueConverted(bytes32 record, uint8 uintType);getUIntTypesCount(uint8[] types);getEntityList(bytes32[] records, uint8[] types)"
boisde/Greed_Island,party/contracts/interfaces/IController.sol,"addSet(address _setToken);feeRecipient();getModuleFee(address _module, uint256 _feeType);isModule(address _module);isSet(address _setToken);isSystemContract(address _contractAddress);resourceId(uint256 _id)"
AnnaIsAWang/LedgerLabsCoops2016,AbstractedStateChannel/Rules.sol,Rules();getAdjudicatorAddress();createAdjudicator()
DonorToken/DonorToken,test/helpers/DayLimitMock.sol,DayLimitMock(uint256 _value);attemptSpend(uint256 _value);setDailyLimit(uint256 _newLimit);resetSpentToday()
trailofbits/greenhorn,csaw-2017/ETHERSNOOB/sources/ethersnoob3.sol,"set(uint data, uint data2, uint data3);get_flag();get()"
mycspring/ClaveChain,Chain/Kyc/KycClaveChain.sol,"KycClaveChain(address _clave);Register(address requester, bytes4 callback, bytes18 index);SendResult(uint64 id, bytes18 index, bytes32 name, bytes11 phone)"
GovernX/governx-contracts,src/contracts/utils/ProxyBased.sol,setProxy(address _proxy)
lexansoft/etherid.org,solidity/etherid.sol,"EtherId();getId( uint domain, uint id );getDomain( uint domain );changeDomain( uint domain, uint expires, uint price, address transfer );changeId( uint domain, uint name, uint value )"
orbro/eth-enablers,etherid.org-master/solidity/etherid.sol,"EtherId();getId( uint domain, uint id );getDomain( uint domain );changeDomain( uint domain, uint expires, uint price, address transfer );changeId( uint domain, uint name, uint value )"
enjin/contracts,solidity/contracts/Utils.sol,"Utils();safeAdd(uint256 _x, uint256 _y);safeSub(uint256 _x, uint256 _y);safeMul(uint256 _x, uint256 _y)"
nexusdev/feedbase,src/feeds.sol,"time();assert(bool ok);owner(bytes12 id);label(bytes12 id);timestamp(bytes12 id);expiration(bytes12 id);expired(bytes12 id);claim();set(bytes12 id, bytes32 value, uint40 expiration);set(bytes12 id, bytes32 value);set_owner(bytes12 id, address owner);set_label(bytes12 id, bytes32 label);has(bytes12 id);get(bytes12 id);tryGet(bytes12 id);can_get(address user, bytes12 id)"
GovernX/governx-contracts,src/contracts/utils/MembershipRegistry.sol,_addMember(address _member);_removeMember(address _member);addMember(address _member);removeMember(address _member);transferAddress(address _addr);isMember(address _member)
gmo-blockchain/solidity,contracts/FileObjectLogic_v1.sol,"create(address _sender, bytes32 _id, address _owner, bytes32 _nameHash, bytes32 _hash, address _cns, bytes32 _contractName);remove(address _sender, bytes32 _id);exist(bytes32 _id);isActive(bytes32 _id);addAllowCnsContract(address _sender, bytes32 _id, address _cns, bytes32 _contractName);removeAllowCnsContract(address _sender, bytes32 _id, address _cns, bytes32 _contractName);isAllowCnsContract(address _cns, bytes32 _contractName, bytes32 _id);setOwner(address _sender, bytes32 _id, address _owner);getOwner(bytes32 _id);setHashByWriter(address _sender, bytes32 _id, address _writer, bytes32 _hash);setHashByProvider(address _sender, bytes32 _id, bytes32 _hash);setNameHashByWriter(address _sender, bytes32 _id, address _writer, bytes32 _hash);getHash(bytes32 _id);getNameHash(bytes32 _id);setReaderId(address _sender, bytes32 _id, bytes32 _readerId);setWriterId(address _sender, bytes32 _id, bytes32 _writerId);setNameReaderId(address _sender, bytes32 _id, bytes32 _readerId);setNameWriterId(address _sender, bytes32 _id, bytes32 _writerId);getReaderId(bytes32 _id);getWriterId(bytes32 _id);getNameReaderId(bytes32 _id);getNameWriterId(bytes32 _id);canRead(address _account, bytes32 _id);canWrite(address _account, bytes32 _id);canReadName(address _account, bytes32 _id);canWriteName(address _account, bytes32 _id);createDataObject(bytes32 _id, address _owner, bytes32 _hash, address _cns, bytes32 _contractName);createReaderWriter(bytes32 _id, address _owner, address _cns, bytes32 _contractName);setAllowCnsContract(address _sender, bytes32 _id, address _cns, bytes32 _contractName, bool _isAdded);setHash(address _sender, bytes32 _id, address _writer, bytes32 _hash, uint _targetIdx, uint _compareIdx)"
sonm-io/core,blockchain/source/contracts/SNM.sol,""
montyly/manticore,tests/ethereum/contracts/consensys_benchmark/integer_overflow_path_1.sol,"run(uint256 input);sub(uint256 a, uint256 b)"
trailofbits/manticore,tests/ethereum_bench/consensys_benchmark/integer_overflow_path_1.sol,"run(uint256 input);sub(uint256 a, uint256 b)"
AdChain/AdChainRegistry,contracts/Parameterizer.sol,"proposeReparameterization(string _name, uint _value);challengeReparameterization(bytes32 _propID);processProposal(bytes32 _propID);claimReward(uint _challengeID, uint _salt);voterReward(address _voter, uint _challengeID, uint _salt);canBeSet(bytes32 _propID);propExists(bytes32 _propID);challengeCanBeResolved(bytes32 _propID);challengeWinnerReward(uint _challengeID);get(string _name);resolveChallenge(bytes32 _propID);set(string _name, uint _value)"
saulbein/web3j,core/src/test/resources/solidity/arrays/Arrays.sol,fixedReverse(uint[10] input);dynamicReverse(uint[] input)
tarsoqueiroz/NodeJS,Blockchain/Ethereum/inboxContract/contracts/Inbox.sol,Inbox(string initialMessage);setMessage(string newMessage)
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app36-backwards_compatibility/c.sol,"c(uint a, uint b);updateStorage(uint a, uint b);getStorage()"
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app36-backwards_compatibility/c.sol,"c(uint a, uint b);updateStorage(uint a, uint b);getStorage()"
michinbear/solidity,test/compilationTests/gnosis/Oracles/FutarchyOracleFactory.sol,FutarchyOracleFactory(EventFactory _eventFactory)
elementrem/solidity,test/compilationTests/gnosis/Oracles/FutarchyOracleFactory.sol,FutarchyOracleFactory(EventFactory _eventFactory)
nexusdev/dapple-test,spec/reporter.sol,__startBlock(string what);__stopBlock()
status-im/status-network-token,contracts/test/SGTMock.sol,SGTMock(address _tokenFactory);getBlockNumber();setMockedBlockNumber(uint _b)
y12studio/dltdojo,contracts/ddjtab/ropsten/Ddjtab.sol,"balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);approveAndCall(address _spender, uint256 _value, bytes _extraData);sendAliceBlue(address _to, uint16 _certid , uint256 _value)"
cryptape/cita,scripts/contracts/src/common/Check.sol,"checkPermissionWithGroup(address _account, address _permission)"
aragon/aragon-core,contracts/common/DepositableStorage.sol,isDepositable();setDepositable(bool _depositable)
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.5/reentrant.sol,"info();withdraw();b(bool a, bool b);f()"
qjflores/singularity,contracts/Teacher.sol,"Teacher(address _userAddress);getCourseCount();createCourse(string _name, string _description,uint256 _rate);updateCourseRate(address _courseAddress, uint256 _rate)"
crypto-coder/Tokens,Token_Contracts/contracts/StandardTokenFactory.sol,useDefaultRegistry();getUseRegistry();setUseRegistry(bool _useRegistry);setRegistry(address _newRegistryAddress);getRegistry();registerNewToken(Token _newToken);deregisterToken(Token _token)
transmute-industries/eth-faucet,contracts/Faucet.sol,"Faucet(string _name, address _creator);setBlockLimit(uint limit);getBlockLimit();setSendAmount(uint256 val);getSendAmount();getBalance();getRequestorAddresses();getRemainingBlocks();addRequestorAddress(address _requestor);authorizeRequestorAddress(address _requestor);revokeRequestorAddress(address _requestor);isAddressAuthorized(address _address);sendWei(address recp);getWei()"
cryptape/cita,scripts/contracts/src/role_management/Role.sol,deleteRole();updateName(bytes32 _name);addPermissions(address[] _permissions);deletePermissions(address[] _permissions);queryRole();queryName();queryPermissions();lengthOfPermissions();inPermissions(address _permission);close()
vechain-team/crowdsale-contracts,contracts/MockedRollback.sol,setToken(Token _token)
DroneEmployee/contracts,interface/DroneEmployeeInterface.sol,getFlight();setROSInterface(DroneEmployeeROSInterface _ros);flightDone()
ChicoBitcoinJoe/MeDao,contracts/external/CloneFactory.sol,"createClone(address target);isClone(address target, address query)"
aragon/aragon-core,contracts/ens/ENSConstants.sol,""
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/build/templates/Example.sol,""
Leondra/PXLT,contracts/StandardToken.sol,"balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
brew2venue/brisbanehack,src/beer.sol,"newProduct(beerType _beerType, string _name, int _ml, bytes _sku)"
AsIGL/SolidityExamples,Basic Examples/BallotUp.sol,"BallotUp();SendFund(uint _Fund, bytes32 _Sponsor)"
daostack/daostack,contracts/universalSchemes/DaoCreator.sol,create(Avatar _avatar)
cgewecke/solcover,test/sources/conditional/declarative-exp-assignment-alternate.sol,a()
JoinColony/solcover,test/sources/conditional/declarative-exp-assignment-alternate.sol,a()
winsvega/libethereum,test/performance/rng.sol,rng()
doublethinkco/cpp-ethereum,test/libethereum/test/performance/rng.sol,rng()
bobsummerwill/cpp-ethereum,test/performance/rng.sol,rng()
LefterisJP/libethereum,test/performance/rng.sol,rng()
rsksmart/rskj,rskj-core/TestGeneration/performance/rng.sol,rng()
libdeos/deos-rsksmart,lib/rskj/rskj-core/TestGeneration/performance/rng.sol,rng()
jbaylina/EIP165Cache,contracts/EIP165Cache.sol,"interfaceSupported(address _contract, bytes4 _interfaceId);interfacesSupported(address _contract, bytes4[] _interfaceIDs);getInterfaceImplementationStatus(address _contract, bytes4 _interfaceId);determineInterfaceImplementationStatus(address _contract, bytes4 _interfaceId);noThrowCall(address _contract, bytes4 _interfaceId);isContract(address _addr);contractSize(address _addr)"
Otonomos/smart-equity,Contracts/SSE.sol,"SSE();setInitialState(address[] _founders, uint[] _founderSSE, address[] _APAddresses, uint[100][] _APSchedule, uint[] _revForecast, uint _forecastVarPercent, uint _MaxNoOfConsecPeriodsInRed, uint _DIVDPayoutPercent, uint _DIVDStartDate);invest();transferOwnership(address bene, uint amount);processAP();createInvoice(uint amount);processAR(uint invId);processARvRevForecast();processDIVD();initVote(uint daysToExpire);vote();getStateOfPlan();getStartDateOfPlan();getAPAddresses();getAPAddressSize();getAPSchedule();getPeriodicalBudget();getTotalPeriods();getTotalBudget();getLastAPPeriod();getRevForecast();getInvestorIndex();getInvestorArray();getInvestmentArray();getTotalInvestment();getARSchedule();getARInvTable();getARInvIndexTable();getPeriodicalAR();getPeriodicalPnL();getInvId();getInvArray();getDIVDPayoutPercent();getLastDIVDPeriod();getPaidDIVDSchedule()"
ethereum/cpp-ethereum,test/unittests/performance/mix.sol,"G(uint64[16] v, uint a, uint b, uint c, uint d, uint64 x, uint64 y);mix()"
winsvega/cpp-ethereum,test/unittests/performance/mix.sol,"G(uint64[16] v, uint a, uint b, uint c, uint d, uint64 x, uint64 y);mix()"
livepeer/protocol,contracts/token/LivepeerToken.sol,""
e-nettet/CustomerConsentWallet,contracts/ContractsFactory.sol,""
chfast/cpp-ethereum,test/performance/mul64.sol,""
urugang/cita,admintool/txtool/txtool/solidity/test.sol,SimpleStorage();set(uint x);get()
OpenSTFoundation/SimpleTokenSale,contracts/FutureTokenSaleLockBox.sol,"endTime();FutureTokenSaleLockBox(ERC20Interface _simpleToken, TokenSaleInterface _tokenSale);currentTime();hasUnlockDatePassed();extendUnlockDate(uint256 _newDate);transfer(address _to, uint256 _value)"
shahankhatch/dapp-bin,future_solidity/iterable_mapping.sol,"insert(itmap storage self, uint key, uint value);remove(itmap storage self, uint key);contains(itmap storage self, uint key);iterate_start(itmap storage self);iterate_valid(itmap storage self, uint keyIndex);iterate_next(itmap storage self, uint keyIndex);iterate_get(itmap storage self, uint keyIndex);insert(uint k, uint v);sum()"
LianaHus/dapp-bin,future_solidity/iterable_mapping.sol,"insert(itmap storage self, uint key, uint value);remove(itmap storage self, uint key);contains(itmap storage self, uint key);iterate_start(itmap storage self);iterate_valid(itmap storage self, uint keyIndex);iterate_next(itmap storage self, uint keyIndex);iterate_get(itmap storage self, uint keyIndex);insert(uint k, uint v);sum()"
RepublicMaster/dapp-bin,future_solidity/iterable_mapping.sol,"insert(itmap storage self, uint key, uint value);remove(itmap storage self, uint key);contains(itmap storage self, uint key);iterate_start(itmap storage self);iterate_valid(itmap storage self, uint keyIndex);iterate_next(itmap storage self, uint keyIndex);iterate_get(itmap storage self, uint keyIndex);insert(uint k, uint v);sum()"
vaporry/dapp-bin,future_solidity/iterable_mapping.sol,"insert(itmap storage self, uint key, uint value);remove(itmap storage self, uint key);contains(itmap storage self, uint key);iterate_start(itmap storage self);iterate_valid(itmap storage self, uint keyIndex);iterate_next(itmap storage self, uint keyIndex);iterate_get(itmap storage self, uint keyIndex);insert(uint k, uint v);sum()"
MzansiRe/iMali,contracts/iMaliToken.sol,""
AnnaIsAWang/LedgerLabsCoops2016,AbstractedStateChannel/TicTacToeRules.sol,"TicTacToeRules(address _addressX, address _addressO, uint _timeout);createAdjudicator();gridToIndex(uint x, uint y);unilateralRuling(uint8 uintState, uint nonce);checkIn()"
fractalPlatform/Fractal,processor/vm/runtime/contract/Asset/Asset.sol,"reg(string desc);add(uint assetId, address to, uint256 value);getAssetId();transAsset(address to, uint assetId, uint256 value);setname(address newOwner, uint assetId);getbalance(address to, uint assetId);getAssetAmount(uint256 assetId, uint256 t);getSnapshotTime(uint256 i,uint256 t);getSnapBalance(address to,uint256 assetId,uint256 t)"
Crypto-Apartments/CRA-ICO-TOKEN,contract/CRAToken.sol,"balanceOf(address _owner);transfer(address _to, uint _amount);CRAToken(address _wallet);setWallet(address _wallet);setTokensPerKEther(uint _tokensPerKEther);proxyPayment(address participant);finalise();addPrecommitment(address participant, uint balance);transfer(address _to, uint _amount);transferFrom(address _from, address _to, uint _amount);kycVerify(address participant);balanceOfLocked(address account);totalSupplyLocked();totalSupplyUnlocked()"
JackBekket/Kort,hosting.sol,owned();transferOwnership(address newOwner);safeWithdrawal()
topliceanu/learn,solidity/contracts/Migrations.sol,setCompleted(uint completed)
eris-ltd/eris-db,vent/test/eth/contracts/Migrations.sol,setCompleted(uint completed)
district0x/name-bazaar,resources/public/contracts/src/Migrations.sol,setCompleted(uint completed)
PangoProject/PangoSign,SmartContracts/Certificate.sol,"Certificate(bytes32 hash, string sundry);deleteCertificate()"
boisde/Greed_Island,party-hardhat/contracts/Papi.sol,update()
AnnaIsAWang/LedgerLabsCoops2016,SplitPayment/SplitPayment.sol,"SplitPayment(address address1, address address2);kill()"
phi-nomenal/phi-nomenal,local_modules/phi-nomenal-contracts/contracts/OrderHistory.sol,amountOfLegs();add(OrderHistoryLeg leg);addDemoData()
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/contracts/payment/PullPayment.sol,"asyncSend(address dest, uint256 amount);withdrawPayments()"
pash7ka/zeppelin-solidity,contracts/payment/PullPayment.sol,"asyncSend(address dest, uint256 amount);withdrawPayments()"
iswarm/p2pCny,contracts/payment/PullPayment.sol,"asyncSend(address dest, uint256 amount);withdrawPayments()"
readevalprint/aragon-core,contracts/zeppelin/payment/PullPayment.sol,"asyncSend(address dest, uint256 amount);withdrawPayments()"
pz7/liquet,node_modules/zeppelin-solidity/contracts/payment/PullPayment.sol,"asyncSend(address dest, uint256 amount);withdrawPayments()"
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/payment/PullPayment.sol,"asyncSend(address dest, uint256 amount);withdrawPayments()"
dmx374/zeppelin-solidity,contracts/payment/PullPayment.sol,"asyncSend(address dest, uint256 amount);withdrawPayments()"
cashpokerpro-dev/cash-smartcontracts,contracts/payment/PullPayment.sol,"asyncSend(address dest, uint256 amount);withdrawPayments()"
cinderblockchain/cindertoken,contracts/payment/PullPayment.sol,"asyncSend(address dest, uint256 amount);withdrawPayments()"
suntechsoft/dmarket-smartcontract,contracts/v0.3/DMToken.sol,"approve(address _spender, uint256 _value);allowance(address _owner, address _spender);mint(address _to, uint256 _amount);currentPart(address _address);subFromBalance(address _address, uint256 _amount);balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);DMToken();multiTransfer(address[] recipients, uint256[] amounts)"
SilentCicero/wafr,src/tests/solidityTests/excludeTest/tests/test.AnotherSomething.sol,""
cgewecke/eth-gas-reporter,mock/contracts/Undeployed.sol,f()
SilentCicero/wafr,src/tests/solidityTests/emptyTestContract/test.emptyNotPayableTest.sol,""
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol,claimRefund();goalReached();finalization();_forwardFunds()
iam-dev/ERC23,contracts/token/interface/ERC23.sol,"transferFrom(address _from, address _to, uint256 _value, bytes _data)"
winsvega/cpp-ethereum,test/unittests/performance/rc5.sol,"shift_left(uint32 v, uint32 n);shift_right(uint32 v, uint32 n);rotate_left(uint32 v, uint32 n);rotate_right(uint32 v, uint32 n);encrypt(uint32[26] S, uint32[4] inout);decrypt(uint32[26] S, uint32[4] inout);expand(uint32[4] L, uint32[26] S);test(uint32[26] S, uint32[4] messg)"
urugang/cita,contracts/node_manager.sol,NodeManager(address[] _nodes);newNode(address _node);approveNode(address _node);deleteNode(address _node);listNode();getStatus(address _node);concat_nodes(address[] _add);node_index(address _node);toString(address x)
AnnaIsAWang/LedgerLabsCoops2016,TTT/onBlockchain.sol,"fillBlank();TTT();newGame();accept(uint id);checkWins(uint who, uint id, uint index);moves(address who, uint index, uint id);winner(uint index, uint id);getState(uint id);getLetter(uint id);getCurrentGames();getMyGames()"
zeroqn/aa-apply,contracts/Payroll.sol,"getEmployeeCount();getEmployeeId(address account);getEmployee(uint256 employeeId);calculatePayrollBurnrate();calculatePayrollRunway();calculatePayrollRunwayInMonths();setServices(address _employeeServ, address _paymentServ);setEmployeeSalary(uint256 employeeId, uint256 yearlyUSDSalary);removeEmployee(uint256 employeeId);addFunds();escapeHatch();emergencyWithdraw();determineAllocation(address[] tokens, uint256[] distribution);payday();updateExchangeRates();__callback(bytes32 id, string result);setExchangeRate(address token, uint256 usdExchangeRate)"
aragon/aragon-network-token,packages/sale/contracts/AragonTokenSale.sol,"setANT(address _token, address _networkPlaceholder, address _saleWallet);activateSale();doActivateSale(address _entity);isActivated();getPrice(uint _blockNumber);stageForBlock(uint _blockNumber);priceForStage(uint8 _stage);allocatePresaleTokens(address _receiver, uint _amount, uint64 cliffDate, uint64 vestingDate);proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);doPayment(address _owner);emergencyStopSale();restartSale();revealCap(uint256 _cap, uint256 _cap_secure);finalizeSale(uint256 _cap, uint256 _cap_secure);doFinalizeSale(uint256 _cap, uint256 _cap_secure);deployNetwork(address networkAddress);setAragonDevMultisig(address _newMultisig);setCommunityMultisig(address _newMultisig);getBlockNumber();computeCap(uint256 _cap, uint256 _cap_secure);isValidCap(uint256 _cap, uint256 _cap_secure)"
spdz/ethereum_class_01,test_chain/Examples.sol,Examples();getMonkey();setMonkey(string MonkeyName);getMagicNumber();setMagicNumber(uint mn)
boisde/Greed_Island,party/contracts/protocol/modules/AirdropModule.sol,"batchAbsorb(ISetToken _setToken, address[] memory _tokens);absorb(ISetToken _setToken, address _token);addAirdrop(ISetToken _setToken, address _airdrop);removeAirdrop(ISetToken _setToken, address _airdrop);updateAnyoneAbsorb(ISetToken _setToken);removeModule();getAirdrops(ISetToken _setToken);isAirdropToken(ISetToken _setToken, address _token);_absorb(ISetToken _setToken, address _token);_batchAbsorb(ISetToken _setToken, address[] memory _tokens);_handleAirdropPosition(ISetToken _setToken, address _token);_isValidCaller(ISetToken _setToken);_airdrops(ISetToken _setToken)"
gnosis/gnosis-contracts,contracts/Markets/StandardMarketWithPriceLoggerFactory.sol,"createMarket(Event eventContract, MarketMaker marketMaker, uint24 fee, uint startDate)"
iam-dev/ERC23,installed_contracts/zeppelin-solidity/test/mocks/RBACMock.sol,RBACMock(address[] _advisors);onlyAdminsCanDoThis();onlyAdvisorsCanDoThis();eitherAdminOrAdvisorCanDoThis();nobodyCanDoThis();removeAdvisor(address _addr)
iam-dev/ERC23,installed_contracts/zeppelin-solidity/contracts/token/MintableToken.sol,"mint(address _to, uint256 _amount);finishMinting()"
zetherz/eth-match,test/helpers/ERC23TokenMock.sol,"tokenFallback(address _from, uint256 _value, bytes _data)"
cgewecke/solcover,test/sources/statements/multiple.sol,a(uint x)
JoinColony/solcover,test/sources/statements/multiple.sol,a(uint x)
adamdossa/ProfitSharingContract,contracts/test/ProfitSharingMock.sol,ProfitSharingMock(address _miniMeToken);getNow();setMockedNow(uint _b)
creditbit-dev/credit2.0,Utils/LinkedList.sol,addItem(address _newItem);removeItem(address _item);getAllElements();getElementAt(uint _index);getElementLocation(address _element);getNextElement(uint _currElementId)
gnidan/interval-trees-solidity,contracts/vendor/grove/Grove.sol,"computeIndexId(address owner, bytes32 indexName);computeNodeId(bytes32 indexId, bytes32 id);getIndexRoot(bytes32 indexId);getNodeIndexId(bytes32 nodeId);getNodeValue(bytes32 nodeId);getNodeHeight(bytes32 nodeId);getNodeParent(bytes32 nodeId);getNodeLeftChild(bytes32 nodeId);getNodeRightChild(bytes32 nodeId);getPreviousNode(bytes32 nodeId);getNextNode(bytes32 nodeId);insert(bytes32 indexName, bytes32 id, int value);exists(bytes32 indexId, bytes32 id);remove(bytes32 indexName, bytes32 id);query(bytes32 indexId, bytes2 operator, int value)"
montyly/manticore,tests/ethereum/contracts/760.sol,Test_SignedInteger_AdditionOverflow(int x)
trailofbits/manticore,tests/ethereum/contracts/760.sol,Test_SignedInteger_AdditionOverflow(int x)
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/contracts/token/PausableToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);increaseApproval(address _spender, uint _addedValue);decreaseApproval(address _spender, uint _subtractedValue)"
pash7ka/zeppelin-solidity,contracts/token/PausableToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);increaseApproval(address _spender, uint _addedValue);decreaseApproval(address _spender, uint _subtractedValue)"
iswarm/p2pCny,contracts/token/PausableToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);increaseApproval(address _spender, uint _addedValue);decreaseApproval(address _spender, uint _subtractedValue)"
readevalprint/aragon-core,contracts/zeppelin/token/PausableToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);increaseApproval(address _spender, uint _addedValue);decreaseApproval(address _spender, uint _subtractedValue)"
pz7/liquet,node_modules/zeppelin-solidity/contracts/token/PausableToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);increaseApproval(address _spender, uint _addedValue);decreaseApproval(address _spender, uint _subtractedValue)"
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/token/PausableToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);increaseApproval(address _spender, uint _addedValue);decreaseApproval(address _spender, uint _subtractedValue)"
cashpokerpro-dev/cash-smartcontracts,contracts/token/PausableToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);increaseApproval(address _spender, uint _addedValue);decreaseApproval(address _spender, uint _subtractedValue)"
cinderblockchain/cindertoken,contracts/token/PausableToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);increaseApproval(address _spender, uint _addedValue);decreaseApproval(address _spender, uint _subtractedValue)"
modum-io/smartcontract,OriginalProductCheck.sol,"done();productSold(uint64 _uniqueID, uint32 _sellingDateSeconds, string _sellingLocation);sold();location();productID()"
orbro/eth-enablers,ethereumWallContract.sol,"EtheriumWall(string newCategory);sendMessage(string message);like(uint messageId);collectDonations(uint amount, address recipient);transferOwnership(address newOwner)"
sirasistant/market_consensys_academy,contracts/SampleRecipientSuccess.sol,"receiveApproval(address _from, uint256 _value, address _tokenContract, bytes _extraData)"
OpenSTFoundation/SimpleTokenSale,contracts/grantableAllocations.sol,"setAdminAddress(address _adminAddress);adminAddress();grantAllocation(address _grantee, uint256 _amount, bool _revokable);GrantableAllocations(TrusteeInterface _trusteeContract);addGrantableAllocation(address _grantee, uint256 _amount, bool _revokable);getGrantees();getGranteesSize();lock();grantGrantableAllocations()"
energychain/StromDAO-BusinessObject,smart_contracts/StromDAO-BO-SC-Commissioning.sol,"owned();transferOwnership(address newOwner);StringStorage(string _str);build(string _str);RoleLookup();setDefault(uint8 _role,address _from);setRelation(uint8 _for,address _from);setRelationFrom(uint8 _for,address _from);setMPO(MPO _mpo);storeReading(uint256 _reading);storeReading(uint256 i);setMPO(MPO _mpo);storeReading(uint256 _reading);addTx(address _from,address _to, uint256 _value,uint256 _base);transfer(address _to, uint256 _value);balanceHaben(address _owner);balanceSoll(address _owner);addTx(address _from,address _to, uint256 _value,uint256 _base);build();StromkontoProxy();modifySender(address _who,bool _allow);addTx(address _from,address _to, uint256 _value,uint256 _base);Connection(address _from,address _to);PricingEnergy(uint256 _cost_per_energy);PricingDay(uint256 _cost_per_day);build();addMeterPoint(address _meterpoint);length();copy(address[] storage mps);build(MPset _mpset,MPReading _reading);SingleMeterClearingFactory(MPReading _reading);build(TxHandler _stromkonto,address _meterpoint,uint256 _cost,address _account,bool _becomeTo);SingleMeterClearing(TxHandler _stromkonto,MPReading _reading,address _meterpoint,uint256 _cost,address _account, bool _becomeTo);setAccount(address _account,uint256 _shares);becomeProvider(TxHandler _providerkonto);activate();deactivate();setMeterPoint(address _meterpoint);addTx(address _from,address _to,uint256 value,uint256 base);setEnergyCost(uint256 _cost);clearing();MPRset(MPset _mpset,MPReading _reading);MPRsum(address[] meterpoints,MPR mpr);update(MPset _mpset,MPR _mpr);build(MPset _mpset,MPR _set_start,MPR _set_end);MPRdecorate(MPset _mpset,MPR _set_start,MPR _set_end);ChargeEnergy(uint amount);ChargeFix(uint amount);Add(MPR mpr2);SplitWeighted(uint256 amount);SplitEqual(uint256 amount);addTx(address _from,address _to,uint256 _base,uint256 _value);length();from(uint i);to(uint i);base(uint i);value(uint i);build(MPset _mpset,bool _toOwner);Settlement(MPset _mpset,bool toOwner);settle(MPR _tx);Clearing(TxHandler _stromkonto);clear(TXCache cache);build(TxHandler _stromkonto,SettlementFactory _sf);DirectClearing(TxHandler _stromkonto,SettlementFactory _sf);preSettle(MPset mpset);setSettlement(Settlement _settlement);settle(MPR _readings);clear()"
BlockTube/blocktube-client.0.2,app/contracts/BlockTubePrepaid.sol,BlockTubePrepaid();claim(address _claimer)
mothershipcx/contracts,contracts/ContributionWallet.sol,"ContributionWallet(address _multisig, address _contribution);withdraw();refund(address th, uint amount)"
fractalPlatform/Fractal,sdk/test/contract/asset.sol,"issue(string desc);increase(uint256 assetId, address to, uint256 value );transfer(uint256 assetId, address to, uint256 value);changeowner(address newOwner, uint256 assetId);destroy(uint256 assetId, uint256 value)"
chentschel/ethgames-contracts,contracts/StateChannel.sol,"openChannel();getChannelId(address from);verifyMessage(uint8 v, uint value, bytes32[4] h);closeChannel(uint8 v, uint value, bytes32[4] h);channelTimeout()"
crypto-coder/Tokens,Token_Contracts/contracts/DecayingTokenBoundaryRange.sol,"calculateDecayedBalance(uint256 _balance, address _tokenEnvironment);calculateRangeLength();calculateCurrentDistanceInRange(address _environment)"
DCReum/dcreum.github.io,contracts/monolith/monolith-bitvectors.sol,"getWorkflowName(uint256 workflowId);getActivityCount(uint256 workflowId);getActivityName(uint256 workflowId, uint256 activityId);isIncluded(uint256 workflowId, uint256 activityId);isExecuted(uint256 workflowId, uint256 activityId);isPending(uint256 workflowId, uint256 activityId);getRelations(uint256 relations);getIncludes(uint256 workflowId, uint256 activityId);getExcludes(uint256 workflowId, uint256 activityId);getResponses(uint256 workflowId, uint256 activityId);getConditions(uint256 workflowId, uint256 activityId);getMilestones(uint256 workflowId, uint256 activityId);getAccountWhitelist(uint256 workflowId, uint256 activityId);isAuthDisabled(uint256 workflowId, uint256 activityId);canExecute(uint256 workflowId, uint256 activityId);execute(uint256 workflowId, uint256 activityId)"
livepeer/protocol,contracts/test/ManagerProxyTargetMockV2.sol,setAddress(address _value)
mwensveen-nl/solidity-testing,src/test/resources/Fibonacci.sol,getNumber(uint position);value()
silasdavis/eris-db,tests/jobs_fixtures/app30-multiple_type_tuple_returns/app30.sol,getInts();getBools();getBytes();getInterMixed()
silasdavis/burrow,tests/jobs_fixtures/app30-multiple_type_tuple_returns/app30.sol,getInts();getBools();getBytes();getInterMixed()
eris-ltd/eris-db,tests/jobs_fixtures/app30-multiple_type_tuple_returns/app30.sol,getInts();getBools();getBytes();getInterMixed()
MarketProject/MarketProtocol,contracts/mpx/MarketContractMPX.sol,oracleCallBack(uint256 price);arbitrateSettlement(uint256 price);setOracleHubAddress(address oracleHubAddress)
ConsenSys/etherMAX,backend/contracts/Contest.sol,"newContest(uint32 entryPeriod, uint minPrice, uint maxItems, uint32 solvePeriod, uint solverBond, uint32 reward);enter(uint contestId, uint itemCount, uint itemPrice);proposeSolve(uint contestId, uint maxEth);claimBond(uint contestId);withdraw(uint contestId, uint entryId);claimSolve(uint[] winners, uint contestId, uint solutionId, bool last);claimItems(uint contestId, uint winnerId)"
adridadou/hackethon-2016,contracts/Sources.sol,"addSourceForBudget(uint contractId, uint milestoneId, string hash, bool value);addSourceForTimeline(uint contractId, uint milestoneId, string hash, bool value);addSource(uint contractId, uint milestoneId, string hash, bool val, Constraint constraint);getSourceHash(uint contractId, uint milestoneId, uint sourceId);getSourceValue(uint contractId, uint milestoneId, uint sourceId);getSourceConstraint(uint contractId, uint milestoneId, uint sourceId);getNumberOfSources(uint contractId, uint milestoneId, Constraint constraint)"
o0ragman0o/ITT,Base.sol,"Base();contractBalance();changeOwner(address _newOwner);safeSend(address _recipient, uint _ether)"
victorsintnicolaas/RVR,test/TestCase.sol,testConstructorUsingDeployedContract();testInsertCase();testIsCase();testDeleteCase();testUpdateLawyer();testUpdateProgress();testGetProgress();testGetCaseCount();testGetCaseAtIndex();testGetAllCases()
SmartChainX/ChainBlockchain,Contracts/ICO/StandardToken.sol,"isToken();transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);balanceOf(address _owner);approve(address _spender, uint _value);allowance(address _owner, address _spender)"
shahankhatch/weifund-contracts,src/contracts/BalanceClaim.sol,claimBalance();BalanceClaim(address _owner);claimBalance()
michinbear/solidity,test/compilationTests/gnosis/Tokens/OutcomeToken.sol,"OutcomeToken();issue(address _for, uint outcomeTokenCount);revoke(address _for, uint outcomeTokenCount)"
elementrem/solidity,test/compilationTests/gnosis/Tokens/OutcomeToken.sol,"OutcomeToken();issue(address _for, uint outcomeTokenCount);revoke(address _for, uint outcomeTokenCount)"
jellegerbrandy/daostack,contracts/zeppelin-solidity/Stoppable.sol,emergencyStop();release()
cgewecke/solcover,test/sources/zeppelin/Stoppable.sol,emergencyStop();release()
WingsDao/contracts,contracts/zeppelin/Stoppable.sol,emergencyStop();release()
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/Stoppable.sol,emergencyStop();release()
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/Stoppable.sol,emergencyStop();release()
JoinColony/solcover,test/sources/zeppelin/Stoppable.sol,emergencyStop();release()
TruLtd/tru-reputation-token,contracts/supporting/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);increaseApproval(address _spender, uint _addedValue);decreaseApproval(address _spender, uint _subtractedValue)"
erooijak/ethlance,resources/public/contracts/src/strings.sol,"memcpy(uint dest, uint src, uint len);toSlice(string self);len(bytes32 self);copy(slice self);toString(slice self);len(slice self);empty(slice self);compare(slice self, slice other);equals(slice self, slice other);nextRune(slice self, slice rune);nextRune(slice self);ord(slice self);keccak(slice self);startsWith(slice self, slice needle);beyond(slice self, slice needle);endsWith(slice self, slice needle);until(slice self, slice needle);findPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);rfindPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);find(slice self, slice needle);rfind(slice self, slice needle);split(slice self, slice needle, slice token);split(slice self, slice needle);rsplit(slice self, slice needle, slice token);rsplit(slice self, slice needle);count(slice self, slice needle);contains(slice self, slice needle);concat(slice self, slice other);join(slice self, slice[] parts)"
kierenh/vue-dark-chocolate,contracts/Trades.sol,"addSentTrade(address account, bytes32 referenceCode);getSentTrade(address account, uint index);addReceivedTrade(address account, bytes32 referenceCode);getReceivedTrade(address account, uint index);getCounts(address account)"
paulyc/sol_machine,test/block.sol,""
merlox/dapp-transactions,contracts/TransactionsManager.sol,releaseFunds(bool forSeller);getInstanceAddress(address sellerAddress);getBuyerInstanceAddress(address buyerAddress)
careerxon/code,ERC20Basic.sol,"balanceOf(address who);transfer(address _to, uint256 _value)"
fkbenjamin/pc-firebase-starter,contracts/examples/vendingMachine.sol,"VendingMachine();addBalance(uint money);subBalance(uint money);order(uint number, uint money)"
blockgeeks/workshop,src/web3/fifa.sol,"setPlayer(string _name, uint _age);getPlayer()"
jensenbox/singnet,dao/contracts/registries/AgentRegistryInterface.sol,getAgentsWithService(uint service);getAgent(uint id)
readevalprint/aragon-core,contracts/apps/App.sol,"canPerform(address _sender, bytes4 _sig)"
Davidyuk/Hackathon2017,Wallet.sol,"multiowned(address[] _owners, uint _required);revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);reorganizeOwners();clearPending();daylimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today();changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);Wallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);clearPending()"
EarthDollar/ed-meteor-dapp-wallet,Wallet.sol,"multiowned(address[] _owners, uint _required);revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);reorganizeOwners();clearPending();daylimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today();changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);Wallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);clearPending()"
orbro/eth-enablers,meteor-dapp-wallet-develop/Wallet.sol,"multiowned(address[] _owners, uint _required);revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);reorganizeOwners();clearPending();daylimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today();changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);Wallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);clearPending()"
ethereum/meteor-dapp-wallet,Wallet.sol,"multiowned(address[] _owners, uint _required);revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);reorganizeOwners();clearPending();daylimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today();changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);Wallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);clearPending()"
QTBlockchain/SolidityNWeb3,Projects/VehicleRTO/contracts/VehicleRTO.sol,"VehicleRTO(address rtoAddress);getOwnerVehicleDetails(address owner);registerVehicle(string registrationNo,string make,uint8 year,address owner)"
boisde/Greed_Island,party/contracts/mocks/external/OneInchExchangeMock.sol,addSetTokenAddress(address _setTokenAddress)
victorsintnicolaas/RVR,contracts/Case.sol,"isCase(uint caseId);insertCase(uint caseId);deleteCase(uint caseId);getCase(uint caseId);updateLawyer(uint caseId, address lawyer);updateProgress(uint caseId, uint progress);getProgress(uint caseId);getCaseCount();getCaseAtIndex(uint index);getAllCases()"
prashantpawar/truffle,lib/testing/SafeSend.sol,SafeSend(address _recipient);deliver()
anniemwu/chainge,node_modules/truffle/build/SafeSend.sol,SafeSend(address _recipient);deliver()
hsavit1/gosofi_webpage,node_modules/truffle/build/SafeSend.sol,SafeSend(address _recipient);deliver()
DigixGlobal/truffle,build/SafeSend.sol,SafeSend(address _recipient);deliver()
Juzix/BlockChain-Demo,contracts/TokenModuleManager.sol,TokenModuleManager()
jeanturgeon/dawn,contracts/bill_of_sales.sol,BillOfSale();abort();confirmPurchase();confirmReceived()
WeTrustPlatform/rosca-contracts,contracts/older/ROSCAv1.sol,addMember(address newMember);startRound();cleanUpPreviousRound();recalculateTotalFees();removeFees(uint256 amount);contribute();bid(uint256 bidInWei);withdraw();getParticipantBalance(address user);getContractNetBalance();endOfROSCARetrieveSurplus();endOfROSCARetrieveFees();enableEscapeHatch();activateEscapeHatch();emergencyWithdrawal()
qingche123/DNA,vm/evm/test_case/ballot/ballot.sol,Ballot(bytes32[] proposalNames);giveRightToVote(address voter);delegate(address to);vote(uint proposal);winningProposal();winnerName();winnerCount()
luodanwg/DNA,vm/evm/test_case/ballot/ballot.sol,Ballot(bytes32[] proposalNames);giveRightToVote(address voter);delegate(address to);vote(uint proposal);winningProposal();winnerName();winnerCount()
dreamfly281/DNA,vm/evm/test_case/ballot/ballot.sol,Ballot(bytes32[] proposalNames);giveRightToVote(address voter);delegate(address to);vote(uint proposal);winningProposal();winnerName();winnerCount()
gleim/DAO,RewardOffer.sol,setRewardDivisor(uint _rewardDivisor);setDeploymentReward(uint _deploymentReward);getRewardDivisor();getDeploymentReward()
globaljobcoin/GJC,contracts/SLMICO.sol,"SLMICO(address _multisignWallet);createVestingForFounder(address founderAddress);createTokenContract();createTokenVestingContract(address tokenAddress);enableTokenTransferability();disableTokenTransferability();setSoldPreSaleTokens(uint256 _soldPreSaleTokens);transferPreSaleTokens(uint256 tokens, address beneficiary);setMultisignWallet(address _multisignWallet);delegateVestingContractOwner(address newOwner);setContributionDates(uint256 _startTime, uint256 _endTime);enableICO();buyTokens(address beneficiary);forwardFunds();transferUnsoldIcoTokens();validPurchase();endIco();hasEnded();getRate();drain()"
melonproject/protocol,contracts/mock/utils/NormalizedRateProviderBase.sol,""
tomaaron/raiden,raiden/smart_contracts/ChannelManagerContract.sol,"ChannelManagerContract(address token_address);getChannelsAddresses();getChannelsParticipants();nettingContractsByAddress(address node_address);tokenAddress();getChannelWith(address partner);newChannel(address partner, uint settle_timeout);contractExists(address channel)"
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/examples/BadArrayUse.sol,payBonus();calculateBonus(address employee)
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/examples/BadArrayUse.sol,payBonus();calculateBonus(address employee)
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol,buyTokens(address _beneficiary);_getTokenAmount(uint256 _weiAmount);_forwardFunds()
Charterhouse/NextBuild2017,contracts/DQuestions.sol,"numberOfQuestions();add(string memory question, bytes32 answer);getQuestion(uint256 index);getAnswer(uint256 index);guess(uint256 index, string memory answer);getWinner(uint256 index)"
EarthDollar/farmer,mix/stdc/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
zchn/ethereum-analyzer,examples/solidity.readthedocs.io/introduction-to-smart-contracts/subcurrency.sol,"Coin();mint(address receiver, uint amount);send(address receiver, uint amount)"
livepeer/protocol,contracts/verification/IVerifiable.sol,"receiveVerification(uint256 _jobId, uint256 _claimId, uint256 _segmentNumber, bool _result)"
iam-dev/ERC23,installed_contracts/zeppelin-solidity/contracts/ownership/rbac/RBAC.sol,"RBAC();addRole(address addr, string roleName);removeRole(address addr, string roleName);checkRole(address addr, string roleName);hasRole(address addr, string roleName);adminAddRole(address addr, string roleName);adminRemoveRole(address addr, string roleName)"
redsquirrel/augur-core,src/legacy_reputation/LegacyRepToken.sol,"LegacyRepToken(address _legacyRepContract, uint256 _amountUsedToFreeze, address _accountToSendFrozenRepTo);migrateBalances(address[] _holders);migrateBalance(address _holder);unpause()"
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.4.24/functionParameters.sol,"plus(uint a, uint b);eval(function (uint, uint);calc(uint x, uint y)"
daukantas/cpp-ethereum,mix/stdc/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
BreemsEmporiumMensToiletriesFragrances/cpp-ethereum,mix/stdc/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
alexvandesande/cpp-ethereum,mix/stdc/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
anthony-cros/cpp-ethereum,mix/stdc/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
ethereum/mix,stdc/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
cyperx/cpp-ethereum,mix/stdc/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
yann300/mix,stdc/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
Sorceror32/.-git-clone-https-github.com-ethereum-cpp-ethereum,mix/stdc/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
PaulGrey30/go-get--u-github.com-tools-godep,mix/stdc/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
hanyoungpark/cpp-ethereum,mix/stdc/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
Sorceror32/go-get--u-github.com-tools-godep,mix/stdc/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
Bitorious/Genoil-cpp-ethereum,mix/stdc/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
expanse-project/cpp-expanse,mix/stdc/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
imapp-pl/cpp-ethereum,mix/stdc/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
pompomJuice/cpp-ethereum,mix/stdc/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
tjade273/cpp-ethereum,mix/stdc/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
cinnamoncoin/cpp-ethereum,mix/stdc/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
vaporry/mix,stdc/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
kleetus/cpp-ethereum,mix/stdc/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
chriseth/cpp-ethereum,mix/stdc/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
Gustav-Simonsson/cpp-ethereum,mix/stdc/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
subtly/cpp-ethereum-micro,mix/stdc/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
LefterisJP/mix,stdc/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
tpruvot/cpp-ethereum,mix/stdc/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
LianaHus/mix,stdc/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
guanqun/cpp-ethereum,mix/stdc/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
vaporry/cpp-ethereum,mix/stdc/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
ashleyblackmore/cpp-ethereum,mix/stdc/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
tomthebuzz/mix,stdc/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
PaulGrey30/.-git-clone-https-github.com-ethereum-cpp-ethereum,mix/stdc/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
chriseth/mix,stdc/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
AmericanSundown/cpp-ethereum,mix/stdc/namereg.sol,getAddress(string32 _name);getName(address _owner);NameReg();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();register(string32 name);addressOf(string32 name);unregister();nameOf(address addr)
Vourhey/learning-center,sol/Lesson.sol,"setDealer(Dealer _dealer);setReward(uint _reward);Lesson(address _dealer, uint _reward);passed(address _sender)"
troyth/embark-dappsforbeginners-demo,embark_demo/app/contracts/crowdfunding.sol,"newCampaign(address beneficiary, uint goal, uint deadline);contribute(uint campaignID);checkGoalReached(uint campaignID)"
district0x/name-bazaar,resources/public/contracts/src/District0xEmails.sol,setEmail(string calldata _encryptedEmail);getEmail(address _address)
mhhf/dapple,test/_fixtures/linker_test_package/src.linked/sol/file_linker_example.sol,""
nexusdev/dapple,test/_fixtures/linker_test_package/src.linked/sol/file_linker_example.sol,""
redsquirrel/augur-core,src/reporting/Interfaces.sol,"initialize(Market _market, uint8 _outcome);getMarket();balanceOf(address);transfer(address, uint256);transferFrom(address, address, uint256);destroyShares(address, uint256 balance);getOutcome();initialize();updatePopularity(bytes32 topic, uint256 amount);getPopularity(bytes32 topic);getTopicByOffset(uint256 offset);getPopularityByOffset(uint256 offset);count()"
Majoolr/ethereum-libraries,TokenLib/truffle/test/TestTokenLib.sol,beforeAll();testInitialParams();testBalanceOfFunction();testApproveFunction();testAllowanceFunction();testApproveChangeFunction();testTransfer();testTransferFrom();testChangeOwnerFunction();testMintToken();testCloseMintFunction();testBurnTokenFunction();testRunBMLFuncsForCoverage()
civilizationalpha/WeQuest,truffle/contracts/mortal.sol,mortal();kill()
pierredepaz/politics-of-code,11_intro_to_blockchain/hello-ethereum/contracts/Ballot.sol,Ballot(uint8 _numProposals);giveRightToVote(address voter);delegate(address to);vote(uint8 proposal);getProposals();winningProposal()
ganchix/ETH_16_Ethereum,UNIT-5/shopfrontProject/contracts/Killable.sol,Killable();kill(bool killValue);isKilled();emergencyWithdrawal()
cgewecke/solcover,test/sources/loops/for-with-brackets.sol,a()
JoinColony/solcover,test/sources/loops/for-with-brackets.sol,a()
SafecontractDev/protocol,contracts/interfaces/IKnownTokens.sol,"recoverPrice(address _token1, address _token2);addToken(address _tokenAddr);containsToken(address _token)"
chfast/cpp-ethereum,test/performance/rng.sol,test();rng()
SerCeMan/intellij-solidity,src/test/resources/fixtures/parser/arithmetic.sol,"f(uint x, uint y)"
aragon/aragon-network-token,packages/sale/installed_contracts/zeppelin/contracts/token/SimpleToken.sol,SimpleToken()
FedCoup/FedCoup,installed_contracts/zeppelin/contracts/token/SimpleToken.sol,SimpleToken()
pooleja/SolidityPlayground,contracts/zeppelin/token/SimpleToken.sol,SimpleToken()
maraoz/zeppelin-solidity,contracts/token/SimpleToken.sol,SimpleToken()
SilentCicero/wafr,src/tests/solidityTests/gasUsage/examples/tests/CampaignRules_test.sol,"setExpiry(uint _expiry);addTimeToExpiry(uint _timeToAdd);setFundingGoal(uint256 _fundingGoal);newProposal(address _board, string _name, address _proxy, uint _debatePeriod, address _destination, uint _value, bytes _calldata);vote(address _board, uint _proposalID, uint _position);execute(address _board, uint _proposalID, bytes _calldata);newContribution(address _campaign, uint256 _value);setup();test_campaignRules();test_CampaignRulesFail()"
aragon/aragon-core,contracts/common/Petrifiable.sol,isPetrified();petrify()
rsksmart/rskj,rskj-core/src/test/resources/dsl/codeSizeAfterSuicide/Creator.sol,run()
rsksmart/rskj,rskj-core/src/test/resources/dsl/createAfterSuicide/Creator.sol,run()
michinbear/solidity,test/compilationTests/gnosis/Oracles/MajorityOracleFactory.sol,createMajorityOracle(Oracle[] oracles)
elementrem/solidity,test/compilationTests/gnosis/Oracles/MajorityOracleFactory.sol,createMajorityOracle(Oracle[] oracles)
michinbear/solidity,test/compilationTests/corion/moduleHandler.sol,"connectModule();disconnectModule();replaceModule(address addr);disableModule(bool forever);isActive();replaceModuleHandler(address newHandler);transferEvent(address from, address to, uint256 value);newSchellingRoundEvent(uint256 roundID, uint256 reward);moduleHandler(address[] newOwners);load(address foundation, bool forReplace, address Token, address Premium, address Publisher, address Schelling, address Provider);addModule(modules_s input, bool call);getModuleAddressByName(string name);getModuleIDByHash(bytes32 hashOfName);getModuleIDByName(string name);getModuleIDByAddress(address addr);replaceModule(string name, address addr, bool callCallback);callReplaceCallback(string moduleName, address newModule);newModule(string name, address addr, bool schellingEvent, bool transferEvent);dropModule(string name, bool callCallback);callDisableCallback(string moduleName);broadcastTransfer(address from, address to, uint256 value);broadcastSchellingRound(uint256 roundID, uint256 reward);replaceModuleHandler(address newHandler);balanceOf(address owner);totalSupply();isICO();getCurrentSchellingRoundID();mint(address to, uint256 value);transfer(address from, address to, uint256 value, bool fee);processTransactionFee(address from, uint256 value);burn(address from, uint256 value);configureModule(string moduleName, announcementType aType, uint256 value);freezing(bool forever)"
elementrem/solidity,test/compilationTests/corion/moduleHandler.sol,"connectModule();disconnectModule();replaceModule(address addr);disableModule(bool forever);isActive();replaceModuleHandler(address newHandler);transferEvent(address from, address to, uint256 value);newSchellingRoundEvent(uint256 roundID, uint256 reward);moduleHandler(address[] newOwners);load(address foundation, bool forReplace, address Token, address Premium, address Publisher, address Schelling, address Provider);addModule(modules_s input, bool call);getModuleAddressByName(string name);getModuleIDByHash(bytes32 hashOfName);getModuleIDByName(string name);getModuleIDByAddress(address addr);replaceModule(string name, address addr, bool callCallback);callReplaceCallback(string moduleName, address newModule);newModule(string name, address addr, bool schellingEvent, bool transferEvent);dropModule(string name, bool callCallback);callDisableCallback(string moduleName);broadcastTransfer(address from, address to, uint256 value);broadcastSchellingRound(uint256 roundID, uint256 reward);replaceModuleHandler(address newHandler);balanceOf(address owner);totalSupply();isICO();getCurrentSchellingRoundID();mint(address to, uint256 value);transfer(address from, address to, uint256 value, bool fee);processTransactionFee(address from, uint256 value);burn(address from, uint256 value);configureModule(string moduleName, announcementType aType, uint256 value);freezing(bool forever)"
leopoldjoy/react-ethereum-dapp-example,contracts/StorageExample.sol,StorageExample()
WishFinanceCom/WF-contracts,contracts/helpers/Clock.sol,time()
PeterBorah/smart-contract-security-examples,contracts/Recipient.sol,callWithdraw(WorkingToken token)
holiman/cpp-ethereum,test/unittests/performance/fun.sol,nada(uint u);nada(uint u);useless(uint u);test();fun()
gnosis/solidity-arithmetic,contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
livepeer/protocol,contracts/test/EarningsPoolFixture.sol,"init(uint256 _stake, uint256 _rewardCut, uint256 _feeShare);setHasTranscoderRewardFeePool(bool _hasTranscoderRewardFeePool);claimShare(uint256 _stake, bool _isTranscoder);addToFeePool(uint256 _fees);addToRewardPool(uint256 _rewards);hasClaimableShares();feePoolShare(uint256 _stake, bool _isTranscoder);rewardPoolShare(uint256 _stake, bool _isTranscoder);getEarningsPool();getRewardPool();getFeePool();getTranscoderRewardPool();getTranscoderFeePool();getHasTranscoderRewardFeePool();getClaimableStake()"
modum-io/smartcontract,TemperatureMeasurementA2.sol,"done();generateReport(int8[] _temperatures, uint32[] _timestamps);verifyReport(uint16 series, int8[] _temperatures, uint32[] _timestamps);success();failed();nrMeasurements();nrFailures();failedTimestampSecondsAt(uint16 index);failedTimestampLength();failedTemperaturesAt(uint16 index);failedTemperaturesLength();temperatureRange();timestampFirst();timestampLast();hashLength();hashAt(uint16 index);shr(uint32 input, uint8 bits)"
eddieoz/workshop-1hackathon-BC-2016,contracts/pokecoin.sol,"receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);owned();transferOwnership(address newOwner);updatePokeMarketAddress(address marketAddress);Pokecoin( uint256 initialSupply, address account1Demo, address account2Demo);transfer(address _to, uint256 _value);issueNew(uint256 newSupply);vanishCoins(uint256 qtdCoinsToDelete);transferFrom(address _from, address _to, uint256 _value)"
citizencode/embark-framework,demo/app/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
citizencode/embark-framework,test/support/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
citizencode/embark-framework,demo_meteor/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
d11e9/embark-framework,demo_meteor/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
d11e9/embark-framework,demo/app/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
d11e9/embark-framework,test/support/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
jpentland/BitBadge,node_modules/grunt-embark/node_modules/embark-framework/test/support/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
jpentland/BitBadge,node_modules/embark-framework/demo_meteor/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
jpentland/BitBadge,node_modules/embark-framework/demo/app/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
jpentland/BitBadge,node_modules/grunt-embark/node_modules/embark-framework/tmp/embark_demo/app/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
jpentland/BitBadge,node_modules/grunt-embark/node_modules/embark-framework/demo_meteor/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
jpentland/BitBadge,node_modules/embark-framework/tmp/embark_demo/app/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
jpentland/BitBadge,node_modules/embark-framework/test/support/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
jpentland/BitBadge,node_modules/grunt-embark/node_modules/embark-framework/demo/app/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
jeffanthony/embark-framework,demo/app/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
jeffanthony/embark-framework,test/support/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
jeffanthony/embark-framework,demo_meteor/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
lightrainstech/sceb,app/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
SafeMarket/embark-framework,test/support/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
SafeMarket/embark-framework,demo/app/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
SafeMarket/embark-framework,demo_meteor/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
innovator256/meteor-dapp-boilerplate-semanticUI,Contracts/SimpleStorage.sol,SimpleStorage(uint initialValue);set(uint x);get()
msfeldstein/embark-framework,demo/app/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
msfeldstein/embark-framework,demo_meteor/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
msfeldstein/embark-framework,test/support/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
mesh-market/mesh-market.github.io,mesh-market/node_modules/embark/old_test/support/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
hitchcott/embark-framework,demo_meteor/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
hitchcott/embark-framework,demo/app/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
hitchcott/embark-framework,test/support/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
troyth/embark-dappsforbeginners-demo,embark_demo/node_modules/embark-framework/demo/app/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
troyth/embark-dappsforbeginners-demo,embark_demo/dist/contracts/app/contracts/crowdfunding.sol,SimpleStorage(uint initialValue);set(uint x);get()
troyth/embark-dappsforbeginners-demo,embark_demo/node_modules/embark-framework/demo_meteor/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
troyth/embark-dappsforbeginners-demo,embark_demo/node_modules/embark-framework/test/support/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
troyth/embark-dappsforbeginners-demo,embark_demo/app/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
johnkozan/embark-framework,demo/app/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
johnkozan/embark-framework,demo_meteor/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
johnkozan/embark-framework,test/support/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
AronVanAmmers/embark-framework,demo_meteor/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
AronVanAmmers/embark-framework,demo/app/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
AronVanAmmers/embark-framework,test/support/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
RCasatta/embark-framework,demo_meteor/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
RCasatta/embark-framework,test/support/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
RCasatta/embark-framework,demo/app/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
prashantpawar/embark-test,app/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
VoR0220/embark-framework,test/support/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
VoR0220/embark-framework,demo/app/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
VoR0220/embark-framework,demo_meteor/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
aakilfernandes/embark-framework,test/support/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
aakilfernandes/embark-framework,demo_meteor/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
aakilfernandes/embark-framework,demo/app/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
ryepdx/embark-framework,test/support/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
ryepdx/embark-framework,demo_meteor/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
ryepdx/embark-framework,demo/app/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
tom-seddon/embark-framework,demo/app/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
tom-seddon/embark-framework,test/support/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
tom-seddon/embark-framework,demo_meteor/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
gerbrand/embark-framework,test/support/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
gerbrand/embark-framework,demo/app/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
gerbrand/embark-framework,demo_meteor/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
akhilss/embark-framework,old_test/support/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
wpypeiyao/Identity-On-Blockchain,node_modules/embark/old_test/support/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
xiaopow/embark-framework,demo_meteor/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
xiaopow/embark-framework,demo/app/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
xiaopow/embark-framework,test/support/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
taoteh1221/DFD_Geth_JSON,sol/user-customized.sol,""
benkico/pre-ico,StandardToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
stanta/darfchain,ICO/contracts/EthTranchePricing.sol,"EthTranchePricing(uint[] _tranches);setPreicoAddress(address preicoAddress, uint pricePerToken);getTranche(uint n);getFirstTranche();getLastTranche();getPricingStartsAt();getPricingEndsAt();isSane(address _crowdsale);getCurrentTranche(uint weiRaised);getCurrentPrice(uint weiRaised);calculatePrice(uint value, uint weiRaised, uint tokensSold, address msgSender, uint decimals)"
civilizationalpha/WeQuest,truffle/contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
sarbogast/angular-metacoin,contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
deadmenswitch/dms,contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
qjflores/singularity,contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
davidoevans/react-redux-dapp,contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
spdz/ethereum_class_01,contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
victorsintnicolaas/RVR,temp/contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
corbinpage/ethereum-play,contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
pooleja/SolidityPlayground,contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
dukoolio/d3health_code,contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
ArjunBhuptani/VILLJ,contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
DramaticLiberty/GreenChain,contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
zetherz/eth-match,test/helpers/InsecureTargetBounty.sol,checkInvariant();deployContract()
Alonski/CoinPanion,contracts/Owned.sol,Owned();changeOwner(address _newOwner)
farazdagi/status-go,static/testdata/node/test.sol,double(int a)
credsign/credsign.github.io,contracts/indexes/ChannelSeries.sol,ChannelSeries(address contentContract);add(uint256 contentID);getSize(uint256 channelID)
saikyerubandi/smart-contract-beginner,test/TestCounter.sol,testNewCounterValueIszero();testNewCounterValueAfterAIncrease();testNewCounterValueAfterADecrease();testNewCounterValueAfterAIncreaseAndADecrease()
channel/channel.github.io,contracts/Token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
aragon/aragon-network-token,packages/sale/contracts/MultiSigWallet.sol,"MultiSigWallet(address[] _owners, uint _required);addOwner(address owner);removeOwner(address owner);replaceOwner(address owner, address newOwner);changeRequirement(uint _required);submitTransaction(address destination, uint value, bytes data);confirmTransaction(uint transactionId);revokeConfirmation(uint transactionId);executeTransaction(uint transactionId);isConfirmed(uint transactionId);addTransaction(address destination, uint value, bytes data);getConfirmationCount(uint transactionId);getTransactionCount(bool pending, bool executed);getOwners();getConfirmations(uint transactionId);getTransactionIds(uint from, uint to, bool pending, bool executed)"
nexusdev/feedbase,src/paid_feeds.t.sol,"setUp();time();test_claim();test_get();test_get_expired();test_payment();test_already_paid();test_failed_payment_throwing_token();test_failed_payment_nonthrowing_token();testFail_set_price_without_token();testFail_set_price_unauth();test_set_owner();testFail_set_owner_unauth();test_set_label();testFail_set_label_unauth();FakePerson(PaidDSFeeds feed_);tryGet(bytes12 id);set_price(bytes12 id, uint price);set_owner(bytes12 id, address owner);set_label(bytes12 id, bytes32 label);set_balance(address account, uint balance);disable_throwing();transferFrom(address from, address to, uint amount);totalSupply();balanceOf(address a);allowance(address a, address b);approve(address a, uint x);transfer(address a, uint x)"
iam-dev/ERC23,installed_contracts/zeppelin-solidity/contracts/ownership/Ownable.sol,Ownable();transferOwnership(address newOwner)
cpetty-Novetta/raffle-dapp,imports/smart-contracts/contracts/RaffleMakersBook.sol,"RaffleMakersBook(string _prizeName, uint _numPrizes);nextStage();closeRegistration();generateNewTicket(address userAddress);remove(uint index);generate_random(uint maxNum, string salt);randomChoiceFromticketPool();distributePrizes();getNumUsers();getNumTickets();getStage()"
Souptacular/constructblockchainscavengerhunt,scavenger_hunt/ConstructZCashClue.sol,getClue();setClue(string guess);checkPassed(address participant)
ethereumjs/ethereumjs-vm,packages/vm/examples/run-solidity-contract/contracts/Greeter.sol,setGreeting(string memory _greeting);greet()
ethereum/ethereumjs-vm,packages/vm/examples/run-solidity-contract/contracts/Greeter.sol,setGreeting(string memory _greeting);greet()
akhilss/embark-framework,test/contracts/token.sol,"Token( uint initial_balance );totalSupply();balanceOf( address who );transfer( address to, uint value);transferFrom( address from, address to, uint value);approve(address spender, uint value);allowance(address owner, address spender);safeToAdd(uint a, uint b)"
wpypeiyao/Identity-On-Blockchain,node_modules/embark/test/contracts/token.sol,"Token( uint initial_balance );totalSupply();balanceOf( address who );transfer( address to, uint value);transferFrom( address from, address to, uint value);approve(address spender, uint value);allowance(address owner, address spender);safeToAdd(uint a, uint b)"
silasdavis/burrow,docs/example/basic-app-website/simplestorage.sol,"set(uint value);get();testAndSet(uint expected, uint newValue)"
eris-ltd/eris-db,docs/example/basic-app-website/simplestorage.sol,"set(uint value);get();testAndSet(uint expected, uint newValue)"
michinbear/solidity,test/compilationTests/gnosis/Events/Event.sol,"Event(Token _collateralToken, Oracle _oracle, uint8 outcomeCount);buyAllOutcomes(uint collateralTokenCount);sellAllOutcomes(uint outcomeTokenCount);setOutcome();getOutcomeCount();getOutcomeTokens();getOutcomeTokenDistribution(address owner);getEventHash();redeemWinnings()"
elementrem/solidity,test/compilationTests/gnosis/Events/Event.sol,"Event(Token _collateralToken, Oracle _oracle, uint8 outcomeCount);buyAllOutcomes(uint collateralTokenCount);sellAllOutcomes(uint outcomeTokenCount);setOutcome();getOutcomeCount();getOutcomeTokens();getOutcomeTokenDistribution(address owner);getEventHash();redeemWinnings()"
manishbisht/Competitive-Programming,Hiring Challenges/Bosch Blockchain Developer Hiring/Round 2/contracts/PropertyRegistration.sol,"getPropertyId(uint256 propertyType, string memory propertyAddress, string memory propertyDimensions);isPropertyRegistered(bytes32 propertyId);getRegisteredProperties();registerProperty(string memory ownerName, address ownerId, uint256 passCode, uint256 propertyType, string memory propertyAddress, string memory propertyDimensions);setPropertyPrice(bytes32 propertyId, uint256 price);transferProperty(bytes32 propertyId, string memory ownerName)"
zetherz/eth-match,contracts/EthMatch.sol,"EthMatch(uint256 _startTime);maker(address _addr);pay(address _addr, uint256 _amount);mastery();mastery(address _addr);setGasReq(uint256 _gasReq);fund();getBalance()"
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address newAddress)
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/Migrations.sol,setCompleted(uint completed);upgrade(address newAddress)
michinbear/solidity,test/compilationTests/zeppelin/token/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
elementrem/solidity,test/compilationTests/zeppelin/token/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
creditbit-dev/credit2.0,contracts/Interfaces/ICreditBOND.sol,"getBondMultiplier(uint _creditAmount, uint _locktime);getNewCoinsIssued(uint _lockedBalance, uint _blockDifference, uint _percentReward)"
SafecontractDev/protocol,contracts/bancor_contracts/interfaces/ITokenChanger.sol,"changeableTokenCount();changeableToken(uint16 _tokenIndex);getReturn(IERC20Token _fromToken, IERC20Token _toToken, uint256 _amount);change(IERC20Token _fromToken, IERC20Token _toToken, uint256 _amount, uint256 _minReturn)"
KudosProject/kudos-token,contracts/ERC20Token.sol,"balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
Spreadway/core,flow_auth/contracts/SpreadToken.sol,SpreadToken()
knightking100/hello-worlds,examples/s/Solidity.sol,""
chrisdannen/Introducing-Ethereum-and-Solidity,PiggyBank.sol,PiggyBank();deposit();getNumberOfDeposits();kill()
iExecBlockchainComputing/rlc-token,contracts/Ownable.sol,Ownable();transferOwnership(address newOwner)
loiluu/peacerelay,contracts/Ownable.sol,Ownable();transferOwnership(address newOwner)
o0ragman0o/ITT,LibCLL.sol,"exists(CLL storage self);sizeOf(CLL storage self);getNode(CLL storage self, uint n);step(CLL storage self, uint n, bool d);seek(CLL storage self, uint a, uint b, bool d);stitch(CLL storage self, uint a, uint b, bool d);remove(CLL storage self, uint n);push(CLL storage self, uint n, bool d);pop(CLL storage self, bool d);exists(CLL storage self, int n);sizeOf(CLL storage self);getNode(CLL storage self, int n);step(CLL storage self, int n, bool d);seek(CLL storage self, int a, int b, bool d);stitch(CLL storage self, int a, int b, bool d);remove(CLL storage self, int n);push(CLL storage self, int n, bool d);pop(CLL storage self, bool d)"
livepeer/protocol,contracts/IManager.sol,setController(address _controller)
ethereum/remix,remix-tests/tests/examples_4/SafeMath_test.sol,beforeAll();unsafeMultiplicationShouldOverflow();safeMultiplicationShouldRevert();safeDivisionByZeroShouldRevert();unsafeSubtractShouldUnderflow();safeSubtractShouldRevert();unsafeAdditionShouldOverflow();safeAdditionShouldRevert();safeModulusShouldRevert()
akhilss/embark-framework,test_app/app/contracts/test.sol,"add(uint _a, uint _b);testAdd()"
alice-si/contracts,contracts/alice/bonds/Coupon.sol,"mint(address _to, uint256 _value);burn(address _from, uint256 _value)"
axic/shapeshiftbot,shapeshiftbot.solo.sol,"setOwner(address _owner);ShapeshiftBotSolo(string _recipient);setRecipient(string _recipient);buildRequest(string recipient);__callback(bytes32 myid, string result);nibbleToChar(uint nibble);addressToBytes(address _address);transfer();kill()"
Vorxil/MarketStake,contracts/Owned.sol,Owned();transferOwnership(address new_owner);allow(address account);disallow(address account);upgradeDuties();upgrade();cancelUpgrade()
shahankhatch/weifund-contracts,src/contracts/HighlightRegistry.sol,register(address _campaign);unregister(address _campaign);register(address _campaign);unregister(address _campaign)
aragon/aragon-network-token,packages/sale/contracts/MiniMeToken.sol,"transfer(address _to, uint256 _amount);balanceOf(address _owner);approve(address _spender, uint256 _amount);totalSupply();balanceOfAt(address _owner, uint _blockNumber);totalSupplyAt(uint _blockNumber);min(uint a, uint b);enableTransfers(bool _transfersEnabled);isContract(address _addr)"
xathena/AthenaLabsICO,contracts/AthenaLabsToken.sol,"setMaxFinalizationTime(uint256 _maxFinalizationTime);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);increaseApproval(address _spender, uint _addedValue);decreaseApproval(address _spender, uint _subtractedValue);burn(uint256 _value);finalize();finishMinting()"
kleroterion/dapp,contracts/Tokens/Token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
pipermerriam/populus,tests/fixtures/Emitter.sol,"logNoArgs(WhichEvent which);logSingle(WhichEvent which, uint arg0);logDouble(WhichEvent which, uint arg0, uint arg1);logTriple(WhichEvent which, uint arg0, uint arg1, uint arg2);logQuadruple(WhichEvent which, uint arg0, uint arg1, uint arg2, uint arg3)"
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/test/helpers/ReentrancyMock.sol,ReentrancyMock();count();countLocalRecursive(uint256 n);countThisRecursive(uint256 n);countAndCall(ReentrancyAttack attacker);callback()
pash7ka/zeppelin-solidity,test/helpers/ReentrancyMock.sol,ReentrancyMock();count();countLocalRecursive(uint256 n);countThisRecursive(uint256 n);countAndCall(ReentrancyAttack attacker);callback()
Dicoiner/irianna-solidity,test/helpers/ReentrancyMock.sol,ReentrancyMock();count();countLocalRecursive(uint256 n);countThisRecursive(uint256 n);countAndCall(ReentrancyAttack attacker);callback()
pz7/liquet,node_modules/zeppelin-solidity/test/helpers/ReentrancyMock.sol,ReentrancyMock();count();countLocalRecursive(uint256 n);countThisRecursive(uint256 n);countAndCall(ReentrancyAttack attacker);callback()
dmx374/zeppelin-solidity,test/helpers/ReentrancyMock.sol,ReentrancyMock();count();countLocalRecursive(uint256 n);countThisRecursive(uint256 n);countAndCall(ReentrancyAttack attacker);callback()
cashpokerpro-dev/cash-smartcontracts,test/helpers/ReentrancyMock.sol,ReentrancyMock();count();countLocalRecursive(uint256 n);countThisRecursive(uint256 n);countAndCall(ReentrancyAttack attacker);callback()
cinderblockchain/cindertoken,test/helpers/ReentrancyMock.sol,ReentrancyMock();count();countLocalRecursive(uint256 n);countThisRecursive(uint256 n);countAndCall(ReentrancyAttack attacker);callback()
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/Bounty.sol,createTarget();claim(Target _target);deployContract();checkInvariant()
scmo/apayment-backend,smart-contracts/rbac.sol,RBAC();addFarmer(address farmerAddress);isFarmer(address farmerAddress);removeFarmer(address farmerAddress);addAdmin(address adminAddress);isAdmin(address adminAddress);removeAdmin(address adminAddress);addInspector(address inspectorAddress);isInspector(address inspectorAddress);removeInspector(address inspectorAddress);addCantonEmployee(address cantonEmployeeAddress);isCantonEmployee(address cantonEmployeeAddress);removecantonEmployee(address cantonEmployeeAddress)
lkiversonlk/eth-cms,src/contract/ether_delta.sol,"safeMul(uint a, uint b);safeSub(uint a, uint b);safeAdd(uint a, uint b);assert(bool assertion);totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);ReserveToken();create(address account, uint amount);destroy(address account, uint amount);accountLevel(address user);setAccountLevel(address user, uint level);accountLevel(address user);EtherDelta(address admin_, address feeAccount_, address accountLevelsAddr_, uint feeMake_, uint feeTake_, uint feeRebate_);changeAdmin(address admin_);changeAccountLevelsAddr(address accountLevelsAddr_);changeFeeAccount(address feeAccount_);changeFeeMake(uint feeMake_);changeFeeTake(uint feeTake_);changeFeeRebate(uint feeRebate_);deposit();withdraw(uint amount);depositToken(address token, uint amount);withdrawToken(address token, uint amount);balanceOf(address token, address user);order(address tokenGet, uint amountGet, address tokenGive, uint amountGive, uint expires, uint nonce);trade(address tokenGet, uint amountGet, address tokenGive, uint amountGive, uint expires, uint nonce, address user, uint8 v, bytes32 r, bytes32 s, uint amount);tradeBalances(address tokenGet, uint amountGet, address tokenGive, uint amountGive, address user, uint amount);testTrade(address tokenGet, uint amountGet, address tokenGive, uint amountGive, uint expires, uint nonce, address user, uint8 v, bytes32 r, bytes32 s, uint amount, address sender);availableVolume(address tokenGet, uint amountGet, address tokenGive, uint amountGive, uint expires, uint nonce, address user, uint8 v, bytes32 r, bytes32 s);amountFilled(address tokenGet, uint amountGet, address tokenGive, uint amountGive, uint expires, uint nonce, address user, uint8 v, bytes32 r, bytes32 s);cancelOrder(address tokenGet, uint amountGet, address tokenGive, uint amountGive, uint expires, uint nonce, uint8 v, bytes32 r, bytes32 s)"
QTBlockchain/SolidityNWeb3,SmartContracts/Math/contracts/MathUtil.sol,MathUtil();square(uint value)
Neufund/Contracts,contracts/lib/IERC20Token.sol,"totalSupply();allowance(address owner, address spender);transferFrom(address from, address to, uint value);approve(address spender, uint value)"
redsquirrel/augur-core,src/factories/ShareTokenFactory.sol,"createShareToken(Controller _controller, Market _market, uint8 _outcome)"
melonproject/protocol,contracts/fund/hub/Hub.sol,initializeFund();setFeeManager(address _feeManager);setPolicyManager(address _policyManager);setShares(address _shares);setVault(address _vault);shutDownFund()
linneacfritz/swob,swob/contracts/Swob.sol,"Swob();startCall(uint n);startCall(uint n);findBestMatch();findBest(uint i, uint max);setBestMatch(uint h, uint s, address a);bubbleSortAllMatches();getNumberOfChecks();getBestMatch();getResult();endCall()"
austing/blocksprintmountain,contracts/Mountain.sol,"Mountain(bytes32 _contractName, uint _multiplier, uint _waitingWeeks, uint _maxLoan, address _founder);updateAccountState(address memberAddress, uint newAmount, bool withdrawal);maxBorrowAmount(address who);deposit();withdraw(uint amount);loan(uint amount);canWithdraw();canBorrow()"
web3j/web3j-maven-plugin,src/test/resources/TooHighPragmaVersion.sol,speak();saySomethingElse(string memory newSaying)
hsavit1/gosofi_webpage,contracts/lendVault.sol,lendVault();fundVault();borrowFunds(uint256 _fundsRequestedInWei);makePayment(uint256 _paymentInWei);getProperties()
ProBonoPublicoWorld/ico-contracts,test/utils/ExternalTokenCrowdsaleMock.sol,ExternalTokenCrowdsaleMock(MintableToken token)
redsquirrel/augur-core,src/factories/MapFactory.sol,"createMap(Controller _controller, address _owner)"
AugustoL/LifToken,contracts/LifTokenTest.sol,"approveData(address spender, uint256 value, bytes data);transferData(address to, uint256 value, bytes data);transferDataFrom(address from, address to, uint256 value, bytes data);faucetLif();burn(uint256 _value)"
windingtree/LifToken,contracts/LifTokenTest.sol,"approveData(address spender, uint256 value, bytes data);transferData(address to, uint256 value, bytes data);transferDataFrom(address from, address to, uint256 value, bytes data);faucetLif();burn(uint256 _value)"
UrsZeidler/licensemanager,licensemanager/mix/contracts.sol,"LicenseManager(address _paymentAddress, string _name);changePaymentAddress(address _newPaymentAdress);createIssuerContract(string itemName,string textHash,string url,uint lifeTime,uint price);stopIssuing(uint licenseId);changePaymentAddress(address _newPaymentAddress,uint licenseId);LicenseIssuer(string itemName, string textHash, string url, uint lifeTime, uint price, address _pa);checkLicense(bytes32 factHash,uint8 v,bytes32 sig_r,bytes32 sig_s);checkLicense(address _address);changePaymentAddress(address _newPaymentAddress);stopIssuing();buyLicense(address _address,string _name);getIssuable()"
alice-si/contracts,contracts/alice/SimpleContractRegistry.sol,"registerContract(bytes32 _name, address _contractAddress)"
dacplayproject/play-dapp,src/PLS2RINGVendor.sol,"tokenFallback(address _from, uint256 _value, bytes _data);tokenFallback(address _from, uint256 _value);receiveToken(address _from, uint256 _amount, address _pls);onTokenTransfer(address _from, address _to, uint _amount);changeGasRequired(uint _gasRequired);claimTokens(address _token)"
commodityadnetwork/CDX,contracts/ERC20.sol,"totalSupply();balanceOf( address who );allowance( address owner, address spender );transfer( address to, uint value);transferFrom( address from, address to, uint value);approve( address spender, uint value )"
AndriianChestnykh/DebtManager,contracts/DebtManager.sol,"DebtManager();createOrder(string details, address moneyHolderAccount);createDebt(uint orderId, address companyAccountress, uint amount);confirmDebt(uint debtId);getOrderLength();getDebtLength();getOrderById(uint orderId);getDebtById(uint debtId)"
pipermerriam/populus,tests/fixtures/Abstract.sol,doSomething()
orbro/eth-enablers,ethereumWallDirectory.sol,"WallDirectory();insert(address contractAddress, string name);remove(string name);setUserDisplayName(string name);collectFees(uint amount, address recipient);setFees(uint amount);transferOwnership(address newOwner)"
mayukhdifferent/Ethereum_smart_contract_dev,ArithValue.sol,ArithValue();setNumber(uint theValue);fetchNumber();incrementNumber();decrementNumber()
PeculiumPCL/Peculium,contracts/v2/Peculium.sol,"Peculium();transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);ChangeLicense(address target, bool canSell);UpgradeTokens();approveAndCall(address _spender, uint256 _value, bytes _extraData);getBlockTimestamp();getOwnerInfos()"
aragon/aragon-network-token,packages/sale/test/helpers/TokenReceiverMock.sol,"receiveApproval(address _from, uint256 _amount, address _token, bytes _data)"
tailingchen/go-ethereum,contracts/checkpointoracle/contract/oracle.sol,GetLatestCheckpoint();GetAllAdmin()
kurkomisi/go-ethereum,contracts/checkpointoracle/contract/oracle.sol,GetLatestCheckpoint();GetAllAdmin()
holiman/go-ethereum,contracts/checkpointoracle/contract/oracle.sol,GetLatestCheckpoint();GetAllAdmin()
ethereum/go-ethereum,contracts/checkpointoracle/contract/oracle.sol,GetLatestCheckpoint();GetAllAdmin()
papyrusglobal/smartcontracts,contracts/MultiSigWallet.sol,"addOwner(address owner);removeOwner(address owner);replaceOwner(address owner, address newOwner);changeRequirement(uint256 _required);submitTransaction(address destination, uint256 value, bytes data);confirmTransaction(uint256 transactionId);revokeConfirmation(uint256 transactionId);executeTransaction(uint256 transactionId);isConfirmed(uint256 transactionId);getConfirmationCount(uint256 transactionId);getTransactionCount(bool pending, bool executed);getOwners();getConfirmations(uint256 transactionId);getTransactionIds(uint256 from, uint256 to, bool pending, bool executed);addTransaction(address destination, uint256 value, bytes data);external_call(address destination, uint256 value, uint256 dataLength, bytes data)"
trixyrabbit/Exile,contracts/Exile.sol,"Exile();Fragment();exile(uint8 f, uint8 x, uint8 y, bytes4 color)"
Dsummers91/openfund,blockchain/ethereum-bridge/contracts/ethereum-api/connectors/addressResolver.sol,OraclizeAddrResolver();changeOwner(address newowner);getAddress();setAddr(address newaddr)
onewed/unitycoin,test/helpers/MockToken.sol,MockToken(uint256 _totalSupply);isAllowedOverrideAddress(address _addr)
ageyev/Solidity.Examples,ContractWithLibrary.sol,"plus(uint _a, uint _b);add(uint a, uint b)"
nomilous/huff,example/parent.sol,spawnChild(string name)
montyly/manticore,tests/ethereum/contracts/consensys_benchmark/integer_overflow_mapping_staticarray.sol,init(uint256 k)
trailofbits/manticore,tests/ethereum_bench/consensys_benchmark/integer_overflow_mapping_staticarray.sol,init(uint256 k)
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.4.24/globals.sol,duper();blub()
melonproject/protocol,contracts/registry/utils/MelonCouncilOwnable.sol,renounceOwnership();transferOwnership(address _newOwner)
RyuuGan/sol-merger,test/contracts/imports/ownableWithSPDX.sol,Ownable();transferOwnership(address newOwner)
Qipingsmile006/TianLianCoin,contracts/interface/IERC20Token.sol,"transfer(address to, uint256 value);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);totalSupply();balanceOf(address who);allowance(address owner, address spender)"
phzietsman/blockchain-monopoly,contracts/monopoly.sol,"Owned();transferOwnership(address newOwner);Bank();newBankManager(address newManager);resetGame();assignPlayer(string charm, address to);_validCharm(string charmName);_transfer(address _from, string _fromCharm, address _to, string _toCharm, uint _value);payToCharm(string toCharmName, uint256 value);payToBank(uint256 value);payToFines(uint256 value);bankToCharm(string toCharmName, uint256 value);claimFine();releaseFine()"
furusiyya/Notary-Platform,contracts/PreICO.sol,"transferFrom(address _from, address _to, uint256 _value);takeBackNTRY(address _from,address _to, uint256 _value);preICOBeneficiaryAddress();NTRYAvailableForSale();NTRYPerEther();minimumFundingGoal();remaingNTRY();RaisedFunds();isPreICOClosed();updatePrice(uint _price);transferOwnership(address _newOwner);updateRewardLedger(address _contributor,uint256 eth,uint256 ntry);addBonuses(uint256 _amount);levelOneBonus(uint256 _amount);levelTwoBonus(uint256 _amount);levelThreeBonus(uint256 _amount);checkGoalReached();safeWithdrawal();mortal()"
NTRYPlatform/ntry-solidity,contracts/PreICO.sol,"transferFrom(address _from, address _to, uint256 _value);takeBackNTRY(address _from,address _to, uint256 _value);preICOBeneficiaryAddress();NTRYAvailableForSale();NTRYPerEther();minimumFundingGoal();remaingNTRY();RaisedFunds();isPreICOClosed();updatePrice(uint _price);transferOwnership(address _newOwner);updateRewardLedger(address _contributor,uint256 eth,uint256 ntry);addBonuses(uint256 _amount);levelOneBonus(uint256 _amount);levelTwoBonus(uint256 _amount);levelThreeBonus(uint256 _amount);checkGoalReached();safeWithdrawal();mortal()"
michinbear/solidity,test/compilationTests/corion/publisher.sol,"transferEvent(address from, address to, uint256 value);publisher(address moduleHandler);Announcements(uint256 id);checkOpposited(uint256 weight, bool oppositable);newAnnouncement(announcementType Type, string Announcement, string Link, bool Oppositable, string _str, uint256 _uint, address _addr);closeAnnouncement(uint256 id);oppositeAnnouncement(uint256 id);invalidateAnnouncement(uint256 id);checkICO()"
anzheng67/rosca-contracts,contracts/TestReEntryAttack.sol,setRoscaAddress(address ROSCAContract_);withdrawTwice();contribute();bid(uint256 bid);startRound()
cryptape/cita,scripts/contracts/src/permission_management/Permission.sol,"addResources(address[] _conts, bytes4[] _funcs);deleteResources(address[] _conts, bytes4[] _funcs);updateName(bytes32 _name);close();inPermission(address cont, bytes4 func);queryInfo();queryName();queryResource();resourceDelete(address _cont, bytes4 _func);resourceIndex(address _cont, bytes4 _func);_addResources(address[] _conts, bytes4[] _funcs);inResources(address _cont, bytes4 _func)"
lorenzb/selfcloning_solidity_contract,selfcloning_contract.sol,clone()
silasdavis/eris-db,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs8.sol,"addThing(string memory description, string memory url, bytes32 filehash, bytes32 filename)"
silasdavis/burrow,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs8.sol,"addThing(string memory description, string memory url, bytes32 filehash, bytes32 filename)"
eris-ltd/eris-db,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs8.sol,"addThing(string memory description, string memory url, bytes32 filehash, bytes32 filename)"
bitcoinmeetups/dapp-bin,coins/coins.sol,"register(string3 name, uint denom);unregister();count();info(uint i)"
chriseth/dapp-bin,coins/coins.sol,"register(string3 name, uint denom);unregister();count();info(uint i)"
shahankhatch/dapp-bin,coins/coins.sol,"register(string3 name, uint denom);unregister();count();info(uint i)"
LianaHus/dapp-bin,coins/coins.sol,"register(string3 name, uint denom);unregister();count();info(uint i)"
RepublicMaster/dapp-bin,coins/coins.sol,"register(string3 name, uint denom);unregister();count();info(uint i)"
frozeman/ethereum-smart-contracts,coins/coins.sol,"register(string3 name, uint denom);unregister();count();info(uint i)"
ethereum/dapp-bin,coins/coins.sol,"register(string3 name, uint denom);unregister();count();info(uint i)"
vaporry/dapp-bin,coins/coins.sol,"register(string3 name, uint denom);unregister();count();info(uint i)"
Getline-Network/getline,dapp/contracts/common/AccessControl.sol,AccessControl();addAdmin(address newAdmin);addManager(address newManager);removeAdmin(address oldAdmin);removeManager(address oldManager)
eddieoz/workshop-rootstock-labitconf2016,contracts/pokeMarket.sol,"transferFrom(address _from, address _to, uint256 _value);transferPokemon(address _from, address _to, uint256 _pokemonID);owned();transferOwnership(address newOwner);pokeMarket(pokeCoinContract pokeCoinAddress, pokeCentralContract pokeCentralAddress);newSale(address pokeSellerAddress, uint pokemonID, uint pokemonSalePrice);stopSale(address pokeSellerAddress, uint pokemonID);buyPokemon(address pokeBuyerAddress, uint pokemonID);addPokemonToSellingList(address pokeSellerAddress, uint pokemonID);delPokemonFromSellingList(address pokeSellerAddress, uint pokemonID);updatePokecoinAndPokemarketAddresses(address newPokecoinAddress, address newPokecentralAddress);cleanArray(uint[] pokeList)"
holiman/cpp-ethereum,test/unittests/performance/mix.sol,"G(uint64[16] v, uint a, uint b, uint c, uint d, uint64 x, uint64 y);mix()"
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/token/ERC20/RBACMintableToken.sol,addMinter(address _minter);removeMinter(address _minter)
papyrusglobal/smartcontracts,contracts/channel/RtbSettlementContract.sol,"deposit(uint256 amount);withdraw(uint256 amount);settle(uint64 channelId, uint64 blockId);performTransfers(address[] receivers, uint256[] amounts)"
mahendra-panchal/smart-contract-basics,construct.sol,construct();construct(uint m)
ewasm/evm2wasm,tests/code/solidity_add_uint256.sol,"add(uint a, uint b)"
QTBlockchain/SolidityNWeb3,SmartContracts/myfirstsample/contracts/IncomeTaxCalc.sol,IncomeTaxCalc()
orbro/eth-enablers,wallet.sol,"multiowned(address[] _owners, uint _required);revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);reorganizeOwners();clearPending();daylimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today();changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);Wallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);clearPending()"
ethereum/btcrelay,deploy/wallet/wallet.sol,"multiowned(address[] _owners, uint _required);revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);reorganizeOwners();clearPending();daylimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today();changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);Wallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);clearPending()"
orbro/eth-enablers,ethereum-examples-master/solidity/SimpleDice.sol,"Lottery();__callback(bytes32 myid, string result);bet();rollDice();kill()"
jellegerbrandy/daostack,contracts/zeppelin-solidity/test-helpers/SafeMathMock.sol,"multiply(uint a, uint b);subtract(uint a, uint b);add(uint a, uint b)"
WingsDao/contracts,contracts/zeppelin/test-helpers/SafeMathMock.sol,"multiply(uint a, uint b);subtract(uint a, uint b);add(uint a, uint b)"
kowala-tech/kUSD,client/contracts/truffle/contracts/test/DomainResolverMock.sol,addr(bytes32 node)
b-mueller/mythril,tests/testdata/input_contracts/exceptions.sol,requireisfine(uint256 input);thisisfine(uint256 input);arrayaccess(uint256 index);thisisalsofind(uint256 index)
GovernX/governx-contracts,src/contracts/utils/MiniMeToken.sol,"onTransfer(address _from, address _to, uint256 _value);onApprove(address _from, address _spender, uint256 _value);proxyPayment(address _sender);createCloneToken(address, uint256, string, uint8, string, bool);changeController(address _newController);generateTokens(address _to, uint256 _value);destroyTokens(address _owner, uint _amount);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);recordTransfer(address _from, address _to, uint256 _value, uint256 _fromBalance);recordToTransfer(address _owner, uint256 _valuePositive, uint256 _valueNegative);balanceOf(address _owner);approve(address _spender, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);allowance(address _owner, address _spender);closest(uint256 _targetValue, uint256 _recordType, address _sender);hasTransfers(address _owner);genesisTransfer(address _owner, uint256 _recordType);balanceOfAtType(address _owner, uint256 _blockNumber, uint256 _recordType);balanceOfAt(address _owner, uint256 _blockNumber);balanceOfAtTime(address _owner, uint256 _time);totalSupply();totalSupplyAt(uint256 _blockNumber);totalSupplyAtTime(uint256 _time);isContract(address _addr);enableTransfers(bool _transfersEnabled)"
mothershipcx/contracts,etherscan/ContributionWallet.sol,"finalize();refund(address th, uint amount);ContributionWallet(address _multisig, address _contribution);withdraw();refund(address th, uint amount)"
daragao/FirstEthereumExperiment,contracts/Mortal.sol,Mortal();f();kill()
DRI-project/RICO,contracts/MultiSigWalletWithDailyLimit.sol,"MultiSigWalletWithDailyLimit(address[] _owners, uint _required, uint _dailyLimit);changeDailyLimit(uint _dailyLimit);executeTransaction(uint transactionId);isUnderLimit(uint amount);calcMaxWithdraw()"
elementrem/solidity,test/compilationTests/MultiSigWallet/MultiSigWallet.sol,"MultiSigWallet(address[] _owners, uint _required);addOwner(address owner);removeOwner(address owner);replaceOwner(address owner, address newOwner);changeRequirement(uint _required);submitTransaction(address destination, uint value, bytes data);confirmTransaction(uint transactionId);revokeConfirmation(uint transactionId);executeTransaction(uint transactionId);isConfirmed(uint transactionId);addTransaction(address destination, uint value, bytes data);getConfirmationCount(uint transactionId);getTransactionCount(bool pending, bool executed);getOwners();getConfirmations(uint transactionId);getTransactionIds(uint from, uint to, bool pending, bool executed)"
digityler/blockinstruments,contracts/instrument.sol,Instrument();validate();withdraw();trigger();recall();strToOperator(bytes32 str);strToUnderlierType(bytes32 str);isConditionMet()
LianaHus/dapp-bin,library/features.sol,owned();kill()
vaporry/dapp-bin,library/features.sol,owned();kill()
Fermion-Project/Light-Wallet,source_gnosis/contracts/MultiSigWalletWithDailyLimitFactory.sol,"create(address[] _owners, uint _required, uint _dailyLimit)"
Fermion-Project/Light-Wallet,contracts/MultiSigWalletWithDailyLimitFactory.sol,"create(address[] _owners, uint _required, uint _dailyLimit)"
maxxflyer/FLOOD,Pretorian.sol,"Pretorian();setController(address displayHyperNamea,bool b);registerCoin(address a,string tokenName,string akr);registerName(string name,address a,string akr);hyperEnable(address a,bool b);registerCoinData(address a,uint initialSupply,uint decimals);newOwner(address a);setDisclaimer(string s);incrementCoin(address a,uint u,bool v);readLog(uint i);readCoin(uint i);ownedCoin(address a,uint u);coinData(address a);whoIS(string name,bool b);kill()"
scorpilix/Golemtest,golem/ethereum/contracts/TestGNT.sol,"transfer(address _to, uint256 _value);batchTransfer(bytes32[] payments);balanceOf(address _owner);create()"
Radagast-red/golem,golem/ethereum/contracts/TestGNT.sol,"transfer(address _to, uint256 _value);batchTransfer(bytes32[] payments);balanceOf(address _owner);create()"
slockit/smart-contract,BasicSlock.sol,"payOneTimeFee();feeDivisor();payReward();Slock(uint _deposit, uint _price, uint _timeBlock, RewardCollector _rewardCollector);setDeposit(uint _deposit);setPrice(uint _price);setTimeBlock(uint _timeBlock);changeOwner(address _newOwner);setRentable(bool _isRentable);payOneTimeFee();open();close();costs();rent();returnIt();returnToOwner()"
Lunyr/crowdsale-contracts,contracts/TestContract.sol,TestContract();setAA(uint b);TestContract();setIt(address addr);callIt(uint b)
Matchpool/contracts,contracts/StandardToken.sol,"transfer(address _recipient, uint256 _value);transferFrom(address _from, address _recipient, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
rootprojectco/backend,contracts/reservation/Reservation.sol,"invest(address receiver);setEarlyParicipantWhitelist(address addr, bool status);setEndsAt(uint time);setPricingStrategy(address _pricingStrategy);setMultisig(address addr);loadRefund();refund();getState();isMinimumGoalReached();isBreakingCap(uint tokensSoldTotal);isReservationFull()"
Sensorica/pullum-cavea,nfc_simple/nfc_simple.sol,"nfc_simplehq();add_user(bytes32 uid, bytes32 m_uid, int perm);del_user(bytes32 uid, bytes32 m_uid);modify_perms(bytes32 uid, bytes32 m_uid, int perm);get_perms(bytes32 uid);get_master(bytes32 uid);remove()"
etherisc/flightDelay,contracts/FlightDelayDatabaseModel.sol,""
sonm-io/core,blockchain/source/contracts/ProfileRegistry.sol,"AddValidator(address _validator, int8 _level);RemoveValidator(address _validator);GetValidatorLevel(address _validator);CreateCertificate(address _owner, uint256 _type, bytes _value);RemoveCertificate(uint256 _id);GetCertificate(uint256 _id);GetAttributeValue(address _owner, uint256 _type);GetAttributeCount(address _owner, uint256 _type);GetProfileLevel(address _owner);AddSonmValidator(address _validator);RemoveSonmValidator(address _validator)"
michinbear/solidity,test/compilationTests/MultiSigWallet/MultiSigWalletWithDailyLimitFactory.sol,"create(address[] _owners, uint _required, uint _dailyLimit)"
mhhf/dapple,test/_fixtures/linker_test_package/src/sol/file_linker_example.sol,""
nexusdev/dapple,test/_fixtures/linker_test_package/src/sol/file_linker_example.sol,""
cniemann/etherpricebet,contracts/OraclizeBet.sol,"OraclizeBet();evaluateBet();q_test(string query);queryOracle(string price, string startdate);__callback(bytes32 myid, string result)"
FiatCentralBank/fiatcoin,contracts/token/MintableToken.sol,"mint(address _to, uint256 _amount);finishMinting()"
ElcoinCurrency/ElcoinContract,contracts/AmbiEnabled.sol,"getNodeAddress(bytes32 _name);addNode(bytes32 _name, address _addr);hasRelation(bytes32 _from, bytes32 _role, address _to);getAddress(bytes32 _name);setAmbiAddress(address _ambi, bytes32 _name);remove()"
DonorToken/DonorToken,contracts/base/ERC677Contract.sol,"receiveApproval(address _from, uint256 _value, address _tokenContract, bytes _data);receiveTransfer(address _from, uint256 _value, address _tokenContract, bytes _data);receiveApproval(address _from, uint256 _value, address _tokenContract, bytes _data);receiveTransfer(address _from, uint256 _value, address _tokenContract, bytes _data)"
kinfoundation/kin-token,contracts/BasicToken.sol,"approve(address _spender, uint256 _value);allowance(address _owner, address _spender);balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value)"
rfikki/demo-solidity,ballot.sol,Ballot(bytes32[] proposalNames);giveRightToVote(address voter);delegate(address to);vote(uint proposal);winningProposal();winnerName()
gnosis/gnosis-contracts,contracts/Events/EventFactory.sol,""
BitProfile/libethrpc,examples/contract/Foo.sol,"Foo(string key, string value);set(string key, string value);get(string key);setFlag(string key, uint value);getFlag(string key)"
devktor/eth-connector,examples/contract/Foo.sol,"Foo(string key, string value);set(string key, string value);get(string key);setFlag(string key, uint value);getFlag(string key)"
orbro/eth-enablers,etherDice.sol,"EtherDice(address _seedSourceA, address _seedSourceB);numberOfHealthyGenerations();needsBirth();roomForBirth();birth(bytes32 freshSeedHash);parseMsgData(bytes data);_parseMsgData(bytes data);bet(uint8 pick, bool isMirrored, uint8 die);becomeMortal(uint gen);isSuitableGen(uint gen, uint offset);findSuitableGen();needsFuneral(uint offset);funeral(bytes32 seed, int payoutId);performAction(uint gen);emergencyFuneral();lookupGeneration(uint gen);lookupBet(uint gen, uint bet);findRecentBet(address player);toDie(bytes32 data);hash(bytes32 data);combineDice(uint8 dieA, uint8 dieB);lowerMinWager(uint _minWager);raiseMaxNumBets(uint _maxNumBets);setOwner(address _owner);deposit();withdraw(uint amount);investorDeposit();investorWithdraw(uint amount);setInvestorLock(bool _isInvestorLocked);setSeedSourceA(address _seedSourceA);setSeedSourceB(address _seedSourceB)"
BiathlonHelsinki/BiathlonContract,contracts/SecondBiathlonToken.sol,"SecondBiathlonToken(address _node_address, string _name, string _symbol, uint256 _decimals, address _upgradeFrom);transfer_storage_ownership(address _new);spend(address _addr, uint256 _amount);balanceOf(address _who);totalSupply();deactivate();mint(address _to, uint256 _amount);finishMinting();register_with_node();biathlon_transfer(address _from, address _to, uint256 _value)"
SwapyNetwork/swapy-exchange-protocol,contracts/SwapyExchange.sol,"getLibrary(bytes8 _version);invest(address[] _assets, uint256 value);withdrawFunds(address[] _assets);refuseInvestment(address[] _assets);cancelInvestment(address[] _assets);sellAssets(address[] _assets, uint256[] _values);cancelSellOrder(address[] _assets);buyAsset(address _asset);acceptSale(address[] _assets);refuseSale(address[] _assets);cancelSale(address[] _assets);requireTokenFuel(address[] _assets);returnInvestment(address[] _assets, uint256[] _values)"
ethereum/frontier-release,solidity/dao-time-lock-multisig.sol,"transferOwnership(address newOwner);receiveApproval(address _from, uint256 _value, address _token, bytes memory _extraData);transferFrom(address _from, address _to, uint256 _value);addMember(address targetMember, string memory memberName);removeMember(address targetMember);changeMembers(address[] memory newMembers, bool canVote);proposalDeadline(uint proposalNumber);calculateFactor(uint a, uint b);executeProposal(uint proposalNumber, bytes memory transactionBytecode)"
ethereum/ethereum-org,solidity/dao-time-lock-multisig.sol,"transferOwnership(address newOwner);receiveApproval(address _from, uint256 _value, address _token, bytes memory _extraData);transferFrom(address _from, address _to, uint256 _value);addMember(address targetMember, string memory memberName);removeMember(address targetMember);changeMembers(address[] memory newMembers, bool canVote);proposalDeadline(uint proposalNumber);calculateFactor(uint a, uint b);executeProposal(uint proposalNumber, bytes memory transactionBytecode)"
aragon/aragon-core,contracts/evmscript/IEVMScriptRegistry.sol,addScriptExecutor(IEVMScriptExecutor executor);disableScriptExecutor(uint256 executorId);getScriptExecutor(bytes script)
Dicoiner/irianna-solidity,test/helpers/FinalizableCrowdsaleImpl.sol,""
melonproject/protocol,contracts/integrations/adapters/EngineAdapter.sol,"identifier();parseAssetsForMethod(bytes4 _selector, bytes calldata _encodedCallArgs);takeOrder(bytes calldata _encodedCallArgs, bytes calldata _encodedAssetTransferArgs);__decodeCallArgs(bytes memory _encodedCallArgs)"
swarmdotmarket/perigord,migration/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
redsquirrel/augur-core,src/extensions/MarketExtensions.sol,getWinningPayoutDistributionHashFromFork(Market _market)
aragon/aragon-network-token,packages/sale/test/TestTokenPresale.sol,beforeEach();deployAndSetANT(AragonTokenSale sale);testCreateSale();testCantInitiateIncorrectSale();throwIfStartPastBlocktime();testActivateSale();testCannotActivateBeforeDeployingANT();throwsWhenActivatingBeforeDeployingANT();testCannotRedeployANT();throwsWhenRedeployingANT();testOnlyMultisigCanDeployANT();throwsWhenNonMultisigDeploysANT();testThrowsIfPlaceholderIsBad();throwsWhenNetworkPlaceholderIsBad();testThrowsIfSaleIsNotTokenController();throwsWhenSaleIsNotTokenController();testThrowsSaleWalletIncorrectBlock();throwsSaleWalletIncorrectBlock();testThrowsSaleWalletIncorrectMultisig();throwsSaleWalletIncorrectMultisig();testThrowsSaleWalletIncorrectSaleAddress();throwsSaleWalletIncorrectSaleAddress();testSetPresaleTokens();throwsWhenTransferingPresaleTokensBeforeCliff(address token);testCannotSetPresaleTokensAfterActivation();throwIfSetPresaleTokensAfterActivation();testCannotSetPresaleTokensAfterSaleStarts();throwIfSetPresaleTokensAfterSaleStarts()
ethbitcoin/goodbit,contracts/TokenRecipient.sol,"receiveApproval(address _from, uint256 _value, address _token, bytes _extraData)"
gnosis/gnosis-contracts,contracts/Oracles/FutarchyOracle.sol,fund(uint funding);close();setOutcome();isOutcomeSet();getOutcome()
saulbein/web3j,core/src/test/resources/solidity/contracts/SampleRecipientSuccess.sol,"receiveApproval(address _from, uint256 _value, address _tokenContract, bytes _extraData)"
GuigsEvt/CrowdsaleEthereum,test/helpers/BasicTokenMock.sol,"assign(address _account, uint _balance)"
b-mueller/mythril,solidity_examples/token.sol,"transfer(address _to, uint _value);balanceOf(address _owner)"
montyly/manticore,tests/ethereum/contracts/imports_issue/main/main.sol,""
trailofbits/manticore,tests/ethereum/contracts/imports_issue/main/main.sol,""
cashpokerpro-dev/cash-smartcontracts,contracts/CashPokerProPreICO.sol,"balanceOf(address who);transferFrom(address _from, address _to, uint256 _value);mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);Ownable();transferOwnership(address newOwner);pause();unpause();CashPokerProPreICO();setToken(address newToken);setTokenWallet(address newTokenWallet);buyTokens(address beneficiary);withdrawal(address to);transfer(address to, uint amount)"
qjflores/singularity,contracts/RentableProvider.sol,"RentableProvider(string _name, string _description);changeDailyRate(bytes32 _name, uint256 _rate);changeWeeklyRate(bytes32 _name, uint256 _rate);changeMonthlyRate(bytes32 _name, uint256 _rate);changeQuarterlyRate(bytes32 _name, uint256 _rate);rentRentable(bytes32 _name, address _userAddress);chargeDailyRate(bytes32 _name, address _userAddress);chargeWeeklyRate(bytes32 _name, address _userAddress);chargeMonthlyRate(bytes32 _name, address _userAddress);chargeQuarterlyRate(bytes32 _name, address _userAddress)"
aragon/aragon-network-token,packages/sale/contracts/interface/Controller.sol,"proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount)"
chentschel/ethgames-contracts,contracts/EthBankRoll.sol,EthBankRoll(uint16 investmentFeePerc);changeInvestmentFee(uint16 amount);changeDivestmentFee(uint16 amount);bankRollInvest();bankRollDivest(uint value);getSharesCount();getInvestmentValue();getSharePrice()
DavdRoman/Payroll,contracts/Employees/IEmployeeStorage.sol,"add(address _address, uint _yearlyUSDSalary, uint _startDate);setAddress(address _address, address _newAddress);setAllocatedToken(address _address, address _token, uint _distribution);setPeggedToken(address _address, address _token, uint _value);setSalaryToken(address _address, address _token, uint _value);clearAllocatedAndSalaryTokens(address _address);setLatestTokenAllocation(address _address, uint _date);setLatestPayday(address _address, uint _date);setLatestTokenPayday(address _address, address _token, uint _date);setYearlyUSDSalary(address _address, uint _salary);getCount();getId(address _address);getAddress(uint _id);getAllocatedTokenCount(address _address);getAllocatedTokenAddress(address _address, uint _index);getAllocatedTokenValue(address _address, address _token);getPeggedTokenCount(address _address);getPeggedTokenAddress(address _address, uint _index);getPeggedTokenValue(address _address, address _token);getSalaryTokenCount(address _address);getSalaryTokenAddress(address _address, uint _index);getSalaryTokenValue(address _address, address _token);getLatestTokenAllocation(address _address);getLatestPayday(address _address);getLatestTokenPayday(address _address, address _token);getYearlyUSDSalary(address _address);getYearlyUSDSalariesTotal();getSalaryTokensTotalCount();getSalaryTokensTotalAddress(uint _index);getSalaryTokensTotalValue(address _token);remove(address _address)"
dltdojo/courses,ethereum/dapps/dao/T200_Congress.sol,"owned();transferOwnership(address newOwner);receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);transferFrom(address _from, address _to, uint256 _value);addMember(address targetMember, string memberName);removeMember(address targetMember);executeProposal(uint proposalNumber, bytes transactionBytecode)"
cgewecke/solcover,test/sources/loops/while-with-brackets.sol,a()
JoinColony/solcover,test/sources/loops/while-with-brackets.sol,a()
Arachnid/solidity-stringutils,src/strings.sol,"memcpy(uint dest, uint src, uint len);toSlice(string memory self);len(bytes32 self);copy(slice memory self);toString(slice memory self);len(slice memory self);empty(slice memory self);compare(slice memory self, slice memory other);equals(slice memory self, slice memory other);nextRune(slice memory self, slice memory rune);nextRune(slice memory self);ord(slice memory self);keccak(slice memory self);startsWith(slice memory self, slice memory needle);beyond(slice memory self, slice memory needle);endsWith(slice memory self, slice memory needle);until(slice memory self, slice memory needle);findPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);rfindPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);find(slice memory self, slice memory needle);rfind(slice memory self, slice memory needle);split(slice memory self, slice memory needle, slice memory token);split(slice memory self, slice memory needle);rsplit(slice memory self, slice memory needle, slice memory token);rsplit(slice memory self, slice memory needle);count(slice memory self, slice memory needle);contains(slice memory self, slice memory needle);concat(slice memory self, slice memory other);join(slice memory self, slice[] memory parts)"
vsimetka/MVP,CampaignMinime.sol,"Owned();changeOwner(address _newOwner);getOwner();proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);doPayment(address _owner);finalizeFunding();fill(uint[] data);seal();setVault(address _newVaultAddress)"
OtterHive/EtherGit,contracts/VersionControl.sol,VersionControl();setCreator();toggleKillSwitch();setFallback(address _fallback);setPersonal(address _personal);getVersion();call(bytes _methodSignature)
zetherz/eth-match,test/helpers/RefundableCrowdsaleImpl.sol,""
DAISEE/DApp-v2,smartcontracts/daisee.sol,"Daisee();nbSellers();isSeller(address sellerAddress);addSeller(address sellerAddress);setProduction(uint energy);buyEnergy(address coinContractAddress, address seller, uint energy)"
iam-dev/ERC23,installed_contracts/zeppelin-solidity/contracts/examples/SampleCrowdsale.sol,"SampleCrowdsale(uint256 _startTime, uint256 _endTime, uint256 _rate, uint256 _goal, uint256 _cap, address _wallet);createTokenContract()"
Spreadway/core,eth/neurodao-master/NeuroDAO2.sol,"owned();changeOwner(address _owner);confirmOwner();balanceOf(address who);transfer(address to, uint value);allowance(address owner, address spender);transferFrom(address from, address to, uint value);approve(address spender, uint value);ManualMigration(address _original);migrateManual(address _who, bool _isTeam);sealManualMigration(bool force);beforeBalanceChanges(address _who);Crowdsale(address _original);Token(address _original, uint _startTime);availableTokens(address _who);firstYearPeriods();balanceOf(address _who);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);burn(uint256 _value);migrateFrom(address _from, uint256 _value);TokenMigration(address _original, uint _startTime);migrate();setMigrationAgent(address _agent);NeuroDAO(address _original, uint _startTime);withdraw();freezeTheMoment();freezedBalanceOf(address _who);killMe();Adapter(address _neuroDAO, address _erc20contract, address _masterHolder);killMe();giveMeTokens()"
libdeos/deos-rsksmart,var/wiki/contracts/SimpleContract.sol,greet()
iam-dev/ERC23,installed_contracts/zeppelin-solidity/contracts/lifecycle/Pausable.sol,pause();unpause()
DRI-project/RICO,contracts/PoDs/DutchAuctionPoD.sol,DutchAuctionPoD();finalizeAuction();price();missingFundsToEndAuction();calcTokenPrice();processDonate(address _user);getBalanceOfToken(address _user)
mothershipcx/contracts,contracts/interface/MiniMeTokenI.sol,"totalSupplyAt(uint _blockNumber);generateTokens(address _owner, uint _amount);destroyTokens(address _owner, uint _amount);enableTransfers(bool _transfersEnabled);claimTokens(address _token)"
pipermerriam/ethereum-alarm-clock,contracts/Scheduler/BaseScheduler.sol,""
dacplayproject/play-dapp,src/ReceiveAndCallFallBack.sol,"receiveToken(address from, uint256 _amount, address _token)"
ledgerlabs/toy-state-channels,contracts/ECDSASignatureProxy.sol,"ECDSASignatureProxy(address _signer, UnanimousConsent _unanimousConsent);forward(bytes32[] _hashes, uint8 _v, bytes32 _r, bytes32 _s)"
status-im/status-network-token,contracts/ERC20Token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
RealEstateAssetLedger/real_contract,contracts/ERC20Token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
redsquirrel/augur-core,tests/solidity_test_helpers/DelegatorHelper.sol,"getTypeName();setStringMember(string _value);populateStringMember();setName(bytes32 _name);setIntValue(int256 _value);setPrivateName(bytes32 _name);pushArrayValue(uint256 _value);addToMap(uint256 _key, uint256 _value);setOtherContract(DelegatorHelper _other);getStringMember();getStringConstant();getName();getIntValue();getPrivateName();getConstantName();getMapValue(uint256 _key);getArrayValue(uint256 _index);getArraySize();getOtherName();addToOtherMap(uint256 _key, uint256 _value);getOtherMapValue(uint256 _key);noInputReturn();manyInputsNoReturn(uint256 _one, uint256 _two, uint256 _three, uint256 _four);returnDynamic();returnFixed()"
eduelias/solidity-contracts,AgreementControl.sol,"VersionedAgreementControll();SetOwner(address newOwner);AddSubscriber(address member, string email, string id);GetSubscribers();GetWhoSignedAVersion(string tag);findSubscriberIndex(address member);RemoveSubscriber(address member);GetVersions();uintToBytes(uint v);CreateVersion(bytes blob, string tag);Rename(string oldTag, string tag);findTag(string tag);ReadContent(string tag);findSignature(Version version);SignVersion(string tag, string message);SignCurrentVersion(string message)"
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.5/assembly.sol,at(address _addr);bla()
michinbear/solidity,test/compilationTests/zeppelin/ownership/Ownable.sol,Ownable();transferOwnership(address newOwner)
elementrem/solidity,test/compilationTests/zeppelin/ownership/Ownable.sol,Ownable();transferOwnership(address newOwner)
shahankhatch/dapp-bin,getting started/democratic dao.sol,"sendToken(address receiver,uint256 amount);getBalance(address account);Democracy();setup(address _voterShareAddress);newProposal(address _recipient, uint _amount, bytes32 _data, bytes32 _descriptionHash);vote(uint _proposalID, int _position);executeProposal(uint _proposalID)"
LianaHus/dapp-bin,getting started/democratic dao.sol,"sendToken(address receiver,uint256 amount);getBalance(address account);Democracy();setup(address _voterShareAddress);newProposal(address _recipient, uint _amount, bytes32 _data, bytes32 _descriptionHash);vote(uint _proposalID, int _position);executeProposal(uint _proposalID)"
RepublicMaster/dapp-bin,getting started/democratic dao.sol,"sendToken(address receiver,uint256 amount);getBalance(address account);Democracy();setup(address _voterShareAddress);newProposal(address _recipient, uint _amount, bytes32 _data, bytes32 _descriptionHash);vote(uint _proposalID, int _position);executeProposal(uint _proposalID)"
frozeman/ethereum-smart-contracts,getting started/democratic dao.sol,"sendToken(address receiver,uint256 amount);getBalance(address account);Democracy();setup(address _voterShareAddress);newProposal(address _recipient, uint _amount, bytes32 _data, bytes32 _descriptionHash);vote(uint _proposalID, int _position);executeProposal(uint _proposalID)"
ethereum/dapp-bin,getting started/democratic dao.sol,"sendToken(address receiver,uint256 amount);getBalance(address account);Democracy();setup(address _voterShareAddress);newProposal(address _recipient, uint _amount, bytes32 _data, bytes32 _descriptionHash);vote(uint _proposalID, int _position);executeProposal(uint _proposalID)"
vaporry/dapp-bin,getting started/democratic dao.sol,"sendToken(address receiver,uint256 amount);getBalance(address account);Democracy();setup(address _voterShareAddress);newProposal(address _recipient, uint _amount, bytes32 _data, bytes32 _descriptionHash);vote(uint _proposalID, int _position);executeProposal(uint _proposalID)"
Vorxil/EthereumCharge,chargeStation.sol,"ChargeStation(address _station, uint _prepDuration);update(uint _price);notifyCharge();startCharging();updatePower(uint power);stopCharging();depositCharge();withdraw()"
kowala-tech/kUSD,client/core/state/test_contracts/Arrays.sol,Arrays()
melonproject/protocol,contracts/mock/MockToken.sol,"mintFor(address _who, uint256 _amount);mint(uint256 _amount)"
silasdavis/eris-db,tests/jobs_fixtures/app52-proposal-execute/test.sol,addFoobar(uint n);getFoobar()
silasdavis/burrow,tests/jobs_fixtures/app52-proposal-execute/test.sol,addFoobar(uint n);getFoobar()
papyrusglobal/smartcontracts,contracts/PapyrusKYC.sol,"setKycRequirement(address participant, bool required);isKycRequired(address participant)"
RealEstateAssetLedger/real_contract,contracts/ContributionWallet.sol,"ContributionWallet(address _multisig, uint256 _endBlock, address _contribution);withdraw()"
EthTrader/dappening,contracts/Voting.sol,"addProp(Actions _action, bytes32 _data);resolveProp(uint _propIdx);getResult(uint _propIdx, uint _prefIdx);getVoted(uint _propIdx);getWeightedVote(bytes20 _username, uint _propIdx);getNumProps();getProps();getProps();vote(uint _propIdx, uint _prefIdx)"
zchn/ethereum-analyzer,examples/co2.unica.it/ethereum/Set_0.4.2.sol,setResult(uint8 res);version()
adridadou/eth-propeller-ethj,src/test/resources/c2.sol,""
Qwaz/solved-hacking-problem,SCTF/2018 Quals/bank_robber/SCTFBank.patched.sol,"showBalance(address addr);withdraw(uint256 value);transfer(address to, uint256 value);multiTransfer(address[] to_list, uint256 value);donate(uint256 value);deliver(address to)"
oraclekit/smart_oracle,spec/fixtures/ethereum/solidity/Oracle.sol,Owned();setOwner(address newOwner);Oracle(bytes32 newCurrent);update(bytes32 newCurrent)
DroneEmployee/contracts,builder/BuilderAirTrafficController.sol,""
WingsDao/contracts,contracts/MultiSigWallet/MultiSigWalletWithDailyLimitFactory.sol,"create(address[] _owners, uint _required, uint _dailyLimit)"
ethereum/remix,remix-tests/tests/examples_5/contract/simple_storage.sol,set(uint x);get()
creditbit-dev/credit2.0,contracts/CreditMC.sol,"getCurrentSupplyVote();getCurrentDevReward();getCurrentDaoStakeSupply();getCurrentCreditsExchanged();getMigrationAccount(address _accountAddress);CreditMC();addNewAccount(string _legacyCreditAddress, address _etherAddress, uint _numberOfCoins, uint _totalSupplyVote, uint _coreDevTeamReward);calculateVote(uint _newSupplyVote, uint _newRewardVote, uint _numOfVotes);setCreditMCCurator(address _curatorAddress);setCreditbit(address _bitAddress);getCreditbitAddress();endMigration();claimDevReward(address _recipient);claimDaoStakeSupply(address _recipient)"
cgewecke/solcover,test/sources/conditional/sameline-consequent.sol,a()
JoinColony/solcover,test/sources/conditional/sameline-consequent.sol,a()
eodgooch/cryptofund,contracts/OldCrowdfund.sol,"newCampaign(address beneficiary, uint goal);contribute(uint campaignID);checkGoalReached(uint campaignID)"
melonproject/protocol,contracts/fund/policies/utils/BuySharesPreValidatePolicyBase.sol,policyHook();policyHookExecutionTime();__decodeRuleArgs(bytes memory _encodedArgs)
madhav1234/solidity-examples,linked-list.sol,"Y();addNodes(string _current, address _addr);addNodesToList(string _current, address _addr);getNodes(string _current)"
spyndi/blk-eth-setup,BlockChain-Servers/greeter.sol,greeter(string _greeting);setGreeting(string _greeting);greet();calculateProof(string document)
etherisc/flightDelay,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address newAddress)
yoLUkAsss/DEscrutinio,contracts/Distrito.sol,"createEscuela(uint escuelaId, address escuelaAddress);getEscuela(uint id);existsEscuela(uint id);getEscuelas();getMesa(uint escuelaId, uint mesaId);setFiscalVerify(uint escuelaId, uint mesaId, bytes32 fiscalEmail);setFiscal(uint escuelaId, uint mesaId, bytes32 fiscalEmail);setPresidenteDeMesaVerify(bytes32 delegadoEscuela, uint escuelaId, uint mesaId, bytes32 presidenteDeMesaEmail);setPresidenteDeMesa(bytes32 delegadoEscuela, uint escuelaId, uint mesaId, bytes32 presidenteDeMesaEmail);setVicepresidenteDeMesa(bytes32 delegadoEscuela, uint escuelaId, uint mesaId, bytes32 presidenteDeMesaEmail);setDelegadoDeDistritoVerify(bytes32 newDelegado);setDelegadoDeDistrito(bytes32 newDelegado);setDelegadoDeEscuelaVerify(bytes32 delegadoDistrito, bytes32 delegadoEscuela, uint escuelaId);setDelegadoDeEscuela(bytes32 delegadoDistrito, bytes32 delegadoEscuela, uint escuelaId)"
creditbit-dev/credit2.0,contracts/Interfaces/IERC20Token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
livepeer/protocol,contracts/token/VariableSupplyToken.sol,burn(uint256 _amount)
pash7ka/zeppelin-solidity,contracts/token/DetailedERC20.sol,""
iswarm/p2pCny,contracts/token/DetailedERC20.sol,""
LykkeCity/EthereumApiDotNetCore,src/ContractBuilder/contracts/token/erc20Token.sol,""
SilentCicero/wafr,src/tests/solidityTests/gasUsage/examples/BalanceClaim.sol,claimBalance();BalanceClaim(address _owner);claimBalance()
raiden-network/raiden,raiden/tests/smart_contracts/RpcWithStorageTest.sol,"get(uint256 _someId);const();gas_increase_exponential();waste_storage(uint256 iterations);next(uint256 next_counter, uint256 iterations)"
energychain/StromDAO-BusinessObject,smart_contracts/XToken.sol,"owned();transferOwnership(address newOwner);receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);issue(uint256 _value);transfer(address _to, uint256 _value);build();setRate(token _token,uint256 rate);x(token from_token);allocate(token from_token,uint256 amount);transfer(address _to, uint256 _value)"
globaljobcoin/GJC,contracts/token/PausableToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);increaseApproval(address _spender, uint _addedValue);decreaseApproval(address _spender, uint _subtractedValue)"
paulyc/sol_machine,contracts/evm_stack.sol,push(uint256 value);pop();top();isEmpty();size();capacity();stackOffset(uint256 offset);swapTop(uint256 value)
bcosorg/bcos,tool/HelloWorld.sol,HelloWorld();get();set(string n)
mhhf/dapple,test/_fixtures/testenv/golden_package/ignored_src/ignore.sol,""
nexusdev/dapple,test/_fixtures/testenv/golden_package/ignored_src/ignore.sol,""
silasdavis/eris-db,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs11.sol,"addThing(bytes32 description, string memory url, string memory filehash, bytes32 filename)"
silasdavis/burrow,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs11.sol,"addThing(bytes32 description, string memory url, string memory filehash, bytes32 filename)"
eris-ltd/eris-db,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs11.sol,"addThing(bytes32 description, string memory url, string memory filehash, bytes32 filename)"
stevejaxon/ethereum-tutorials,contracts/cryptozombies/ZombieHelper.sol,"withdraw();setLevelUpFee(uint _fee);levelUp(uint _zombieId);changeName(uint _zombieId, string _newName);changeDna(uint _zombieId, uint _newDna);getZombiesByOwner(address _owner)"
melonproject/protocol,contracts/integrations/adapters/KyberAdapter.sol,"identifier();parseAssetsForMethod(bytes4 _selector, bytes calldata _encodedCallArgs);takeOrder(bytes calldata _encodedCallArgs, bytes calldata _encodedAssetTransferArgs);__decodeCallArgs(bytes memory _encodedCallArgs)"
status-im/status-network-token,contracts/Owned.sol,Owned();changeOwner(address _newOwner);acceptOwnership()
RealEstateAssetLedger/real_contract,contracts/Owned.sol,Owned();changeOwner(address _newOwner);acceptOwnership()
duaraghav8/Solium,test/lib/rules/blank-lines/reject/contract.sol,""
Sjors/dao-challenge,contracts/dao-challenge.sol,"transfer(uint256 tokens, address recipient);placeSellOrder(uint256 tokens, uint256 price);cancelSellOrder(address addr);executeSellOrder(address addr);terminate()"
Qwaz/solved-hacking-problem,SCTF/2018 Quals/bank_robber/SCTFBank.sol,"showBalance(address addr);withdraw(uint256 value);transfer(address to, uint256 value);multiTransfer(address[] to_list, uint256 value);donate(uint256 value);deliver(address to)"
bokkypoobah/TokenTrader,testing/test_20170205_1849/TokenSellerFactory.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);approve(address _spender, uint _value);allowance(address _owner, address _spender);Owned();transferOwnership(address newOwner);makerWithdrawAsset(uint256 tokens);makerWithdrawEther(uint256 ethers);takerBuyAsset();verify(address tradeContract);TokenSeller(seller)"
bokkypoobah/TokenTrader,contracts/TokenSellerFactory.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);approve(address _spender, uint _value);allowance(address _owner, address _spender);Owned();transferOwnership(address newOwner);makerWithdrawAsset(uint256 tokens);makerWithdrawEther(uint256 ethers);takerBuyAsset();verify(address tradeContract);TokenSeller(seller)"
aragon/aragon-network-token,packages/sale/installed_contracts/zeppelin/contracts/lifecycle/Migrations.sol,setCompleted(uint completed);upgrade(address newAddress)
pooleja/SolidityPlayground,contracts/zeppelin/lifecycle/Migrations.sol,setCompleted(uint completed);upgrade(address newAddress)
maraoz/zeppelin-solidity,contracts/lifecycle/Migrations.sol,setCompleted(uint completed);upgrade(address newAddress)
ForgionePawar/tribitration_contract,contracts/arbitrated.sol,setPartyA(address addr);setPartyB(address addr);raiseDispute()
eris-ltd/eris-db,tests/dump/undeclared.sol,setFoobar(int n);getFoobar();foo()
Ethbet/ethbet,contracts/EthbetToken_Full.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);balanceOf(address who);transfer(address to, uint256 value);transfer(address _to, uint256 _value);balanceOf(address _owner);allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);EthbetToken()"
mattdf/sc-tools,examples/state.sol,Test(int a);multStore(int a);setStore(int a);getStore()
wpypeiyao/Identity-On-Blockchain,node_modules/embark/test_app/app/contracts/another_storage.sol,AnotherStorage(address addr)
dehydr8/oracle-service,contracts/PSOraclizeAPI.sol,"query(string _arg);__update_oraclize(address _oraclizeAddress);__callback(bytes32 myid, string result);oraclize_query(string arg)"
TrueBitFoundation/webasm-solidity,contracts/test.sol,foo()
ganchix/ETH_16_Ethereum,UNIT-4/splitterProject/contracts/Pausable.sol,Pausable();setPause(bool pauseValue);isPaused()
ganchix/ETH_16_Ethereum,UNIT-4/remittanceProject/contracts/Pausable.sol,Pausable();setPause(bool pauseValue);isPaused()
willdavidc/prometh,truffle/contract/prometh.sol,"agent(address _contractAddress);getStats();executeContract();getReward();executeContract(uint128 expectedPayout, uint128 expectedGas);getAddress();createPrometh(address _contractAddress)"
raineorshine/solgraph,test/in/Constant.sol,Foo()
BattleDrome/token_and_ico,ERC20Standard.sol,"balanceOf(address _owner);transfer(address _recipient, uint _value);transferFrom(address _from, address _to, uint _value);approve(address _spender, uint _value);allowance(address _spender, address _owner)"
DigixGlobal/ethereum-ruby,contracts/Interface.sol,registerEmployee(address _acct);unregisterEmployee(address _acct);isEmployee(address _acct)
EthWorks/ethereum.rb,contracts/Interface.sol,registerEmployee(address _acct);unregisterEmployee(address _acct);isEmployee(address _acct)
marekkirejczyk/ethereum.rb,contracts/Interface.sol,registerEmployee(address _acct);unregisterEmployee(address _acct);isEmployee(address _acct)
silasdavis/eris-db,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs6.sol,"addThing(string memory description, string memory url, string memory filehash, bytes32 filename)"
silasdavis/burrow,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs6.sol,"addThing(string memory description, string memory url, string memory filehash, bytes32 filename)"
eris-ltd/eris-db,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs6.sol,"addThing(string memory description, string memory url, string memory filehash, bytes32 filename)"
raiden-network/raiden-token,contracts/auction.sol,setup(address _token_address);addToWhitelist(address[] _bidder_addresses);removeFromWhitelist(address[] _bidder_addresses);startAuction();finalizeAuction();bid();claimTokens();proxyClaimTokens(address receiver_address);price();missingFundsToEndAuction();calcTokenPrice()
FedCoup/FedCoup,installed_contracts/zeppelin/contracts/lifecycle/Migrations.sol,setCompleted(uint completed);upgrade(address newAddress)
Souptacular/motivate-dapp,contracts/libraries/task_test.sol,""
donatelloferraz/Votogen-front,app/assets/Voting.sol,Voting(bytes32[] candidateNames);totalVotesFor(bytes32 candidate);voteForCandidate(bytes32 candidate);validCandidate(bytes32 candidate);getCandidates(bytes32 candidate)
Dicoiner/irianna-solidity,contracts/crowdsale/Crowdsale.sol,"Crowdsale(uint256 _startBlock, uint256 _endBlock, uint256 _rate, address _wallet);createTokenContract();buyTokens(address beneficiary);forwardFunds();validPurchase();hasEnded()"
dltdojo/courses,ethereum/solidity/T100_SmartContract.sol,""
aragon/aragon-network-token,packages/sale/test/helpers/MultisigMock.sol,"deployAndSetANT(address sale);activateSale(address sale);emergencyStopSale(address sale);restartSale(address sale);finalizeSale(address sale);withdrawWallet(address sale);finalizeSale(address sale, uint256 cap);deployNetwork(address sale, address network)"
etherisc/flightDelay,contracts/FlightDelayLedgerInterface.sol,"receiveFunds(Acc _to);sendFunds(address _recipient, Acc _from, uint _amount);bookkeeping(Acc _from, Acc _to, uint amount)"
jaakmusic/go-ethereum,swarm/services/swear/swear.sol,"max(uint a, uint b);signup(uint time);withdraw();balance(address addr);isClean(address addr);whatIsMissing();presentMissingChunk(bytes chunk);isGuilty(address addr);claimReporterReward(address addr);expiresAfter(address addr, uint time)"
iam-dev/ERC23,installed_contracts/zeppelin-solidity/test/mocks/LimitBalanceMock.sol,limitedDeposit()
b-mueller/mythril,tests/testdata/input_contracts/multi_contracts.sol,transfer();transfer()
montyly/manticore,examples/evm/coverage.sol,"Coverage();enable_exploration();balanceOf(address user);add(address user, uint val);remove(address user, uint val);explore(uint value, address user, bool give)"
trailofbits/manticore,examples/evm/coverage.sol,"Coverage();enable_exploration();balanceOf(address user);add(address user, uint val);remove(address user, uint val);explore(uint value, address user, bool give)"
michinbear/solidity,test/compilationTests/zeppelin/ownership/HasNoTokens.sol,"tokenFallback(address from_, uint256 value_, bytes data_);reclaimToken(address tokenAddr)"
elementrem/solidity,test/compilationTests/zeppelin/ownership/HasNoTokens.sol,"tokenFallback(address from_, uint256 value_, bytes data_);reclaimToken(address tokenAddr)"
phroiland/leonidas,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
NoteGio/openrelay,js/contracts/IssueTokenFactory.sol,"IssueTokenFactory();newToken(string _name, string _symbol)"
dltdojo/courses,ethereum/truffle/multisig/contracts/MultiSigWallet.sol,"MultiSigWallet(address[] _owners, uint _required);addOwner(address owner);removeOwner(address owner);replaceOwner(address owner, address newOwner);changeRequirement(uint _required);submitTransaction(address destination, uint value, bytes data);confirmTransaction(uint transactionId);revokeConfirmation(uint transactionId);executeTransaction(uint transactionId);isConfirmed(uint transactionId);addTransaction(address destination, uint value, bytes data);getConfirmationCount(uint transactionId);getTransactionCount(bool pending, bool executed);getOwners();getOwnersLength();getConfirmations(uint transactionId);getTransactionIds(uint from, uint to, bool pending, bool executed)"
urugang/cita,contracts/strings.sol,"memcpy(uint dest, uint src, uint len);toSlice(string self);len(bytes32 self);copy(slice self);toString(slice self);len(slice self);empty(slice self);compare(slice self, slice other);equals(slice self, slice other);nextRune(slice self, slice rune);nextRune(slice self);ord(slice self);keccak(slice self);startsWith(slice self, slice needle);beyond(slice self, slice needle);endsWith(slice self, slice needle);until(slice self, slice needle);findPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);rfindPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);find(slice self, slice needle);rfind(slice self, slice needle);split(slice self, slice needle, slice token);split(slice self, slice needle);rsplit(slice self, slice needle, slice token);rsplit(slice self, slice needle);count(slice self, slice needle);contains(slice self, slice needle);concat(slice self, slice other);join(slice self, slice[] parts)"
boisde/Greed_Island,party/contracts/mocks/external/GaugeControllerMock.sol,"addGaugeType(address _gauge, int128 _type);gauge_types(address _gauge)"
vldmkr/erc20-token-boilerplate,contracts/Token.sol,"balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
RyuuGan/sol-merger,test/contracts/LocalImportsWithSPDX.sol,MyOwned()
Blocksure/kimchi,test/contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr);clearBalance(address addr)"
acebusters/safe-token-sale,contracts/ERC223Basic.sol,"transfer(address to, uint value, bytes data)"
RyuuGan/sol-merger,test/compiled/NamedImports.sol,Ownable();transferOwnership(address newOwner);MyOwned()
igetgames/ether-pudding,test/ExampleLibraryConsumer.sol,triggerLibraryEvent()
hsavit1/gosofi_webpage,node_modules/truffle-contract/test/ExampleLibraryConsumer.sol,triggerLibraryEvent()
ConsenSys/ether-pudding,test/ExampleLibraryConsumer.sol,triggerLibraryEvent()
iam-dev/ERC23,installed_contracts/zeppelin-solidity/contracts/ownership/DelayedClaimable.sol,"setLimits(uint256 _start, uint256 _end);claimOwnership()"
AlphaDinoRC/rockchain,contracts/Crowdsale.sol,"Crowdsale(address _rok, address _escrow);contribute(address contributor);isStarted();isComplete();tokenBalance();isSuccessful();checkEthBalance(address _contributor);checkRokSold();checkRokTeam();checkRokBounty();refundPeriodOver();refundPeriodStart();percentOfGoal();getBonus(uint256 amount);setBalance(address sender,uint256 value);finalize();payout();payTeam();updateKYClist(address[] allowed);claim();refund();partialRefund(uint256 value)"
suntechsoft/dmarket-smartcontract,contracts/v0.1/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
airalab/core,contracts/robonomics/validator/CancellationValidator.sol,cancel(address _liability);isValidator(address _validator)
airalab/core,contracts/ens/PublicResolver.sol,"has(bytes32 _node, bytes32 _kind);supportsInterface(bytes4 _interfaceID);addr(bytes32 _node);setAddr(bytes32 _node, address _addr);content(bytes32 _node);setContent(bytes32 _node, bytes32 _hash)"
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.4.24/reentrant.sol,"info();withdraw();b(bool a, bool b);f()"
soad003/browser-solidity,test/staticanalysis/test-contracts/reentrant.sol,"info();withdraw();b(bool a, bool b);f()"
Cryptonomica/cryptonomica,src/main/webapp/cryptoshares/contracts/CryptoShares.sol,"add(uint256 a, uint256 b);sub(uint256 a, uint256 b);mul(uint256 a, uint256 b);div(uint256 a, uint256 b);mod(uint256 a, uint256 b);balanceOf(address _account);transfer(address _recipient, uint _amount);revokedOn(address _address);keyCertificateValidUntil(address _address);tokenFallback(address _from, uint _value, bytes calldata _data);addressIsVerifiedByCryptonomica(address _address);startDividendsPayments();payDividendsToNext();fundDividendsPayout();startDividendsPaymentsAndFundDividendsPayout();approve(address _spender, uint _value);approve(address _spender, uint _currentValue, uint _value);_transferFrom(address _from, address _to, uint _value);transferFrom(address _from, address _to, uint _value);transfer(address _to, uint _value);transfer(address _to, uint _value, bytes calldata _data);voteFor(uint256 _proposalId);voteAgainst(uint256 _proposalId);addEtherToContract();changeCryptonomicaVerificationContractAddress(address _newAddress);addAdmin(address _newAdmin);removeAdmin(address _oldAdmin);setWithdrawalAddress(address payable _withdrawalAddress);fixWithdrawalAddress(address _withdrawalAddress);withdrawAllToWithdrawalAddress();changePrice(uint _newPrice);changeDisputeResolutionAgreement(string calldata _newText);changeXEuroContractAddress(address _newAddress)"
tokenai/tokenai-network-token,contracts/TokenAiNetworkToken.sol,"TokenAiNetworkToken(address _controller, address _tokenFactory)"
GX-Coin/SmartContract,GxCoinTokenController.sol,"setTradersContract(address _traders);setTotalsContract(address _totals);totalSupply();balanceOf(address who);allowance(address owner, address spender);transfer(address _caller, address to, uint value);transferFrom(address _caller, address from, address to, uint value);approve(address _caller, address spender, uint value)"
flypme/flypme-contracts,contracts/MySale.sol,"MySale(uint256 _startTime, uint256 _endTime, uint256 _presaleEndTime, uint256 _rate, uint256 _rateDiff, uint256 _softCap, address _wallet, bytes32 _hardCapHash, address _tokenWallet, uint256 _endBuffer);pregenTokens(address beneficiary, uint256 weiAmount, uint256 tokenAmount);buyTokens(address beneficiary);createTokenContract();finalization();withdraw(uint256 weiValue)"
iurimatias/embark-framework,packages/embark/src/test/contracts/contract_with_import.sol,SimpleStorage(uint initialValue);set(uint x);get()
elementrem/solidity,test/compilationTests/corion/announcementTypes.sol,""
livepeer/protocol,contracts/rounds/IRoundsManager.sol,initializeRound();blockNum();blockHash(uint256 _block);currentRound();currentRoundStartBlock();currentRoundInitialized();currentRoundLocked()
FedCoup/FedCoup,installed_contracts/zeppelin/contracts/payment/PullPayment.sol,"asyncSend(address dest, uint amount);withdrawPayments()"
dadaista/GorillaSale,contracts/GorillaSale.sol,createTokenContract()
Codewars/codewars-runner,frameworks/ethereum/contracts/BlindAuction.sol,"bid(bytes32 _blindedBid);placeBid(address bidder, uint value);withdraw();auctionEnd()"
Codewars/codewars-runner-cli,frameworks/ethereum/contracts/BlindAuction.sol,"bid(bytes32 _blindedBid);placeBid(address bidder, uint value);withdraw();auctionEnd()"
OverZealous/codewars-runner-cli,frameworks/ethereum/contracts/BlindAuction.sol,"bid(bytes32 _blindedBid);placeBid(address bidder, uint value);withdraw();auctionEnd()"
mycspring/ClaveChain,Chain/Kyc/CustomerInfo.sol,"CustomerInfo(IKycClaveChain _kycClaveChain);GetOtherCustomerInfo(bytes18 index);SetCustomerInfo(uint64 requestId, bytes18 index, bytes32 name, bytes11 phone)"
commodityadnetwork/CDX,contracts/Roles.sol,"SecuredWithRoles(string contractName_, address roles_);hasRole(string roleName);senderHasRole(string roleName);stop();restart();setRolesContract(address roles_);Roles();addContractRole(bytes32 ctrct, string roleName);removeContractRole(bytes32 ctrct, string roleName);grantUserRole(bytes32 ctrct, string roleName, address user);revokeUserRole(bytes32 ctrct, string roleName, address user)"
SmartChainX/ChainBlockchain,Contracts/ChainX Token/ChainX_Token.sol,deposit();withdraw(uint amount)
anrodon/scts,contracts/Product.sol,"Product(bytes32 _name, bytes32 _additionalInformation, address[] _parentProducts, int _lon, int _lat, address _DATABASE_CONTRACT, address _PRODUCT_FACTORY);addAction(bytes32 description, int lon, int lat, bytes32[] newProductsNames, bytes32[] newProductsAdditionalInformation, bool _consumed);merge(address[] otherProducts, bytes32 newProductName, bytes32 newProductAdditionalInformation, int lon, int lat);collaborateInMerge(address newProductAddress, int lon, int lat);consume();ProductFactory();createProduct(bytes32 _name, bytes32 _additionalInformation, address[] _parentProducts, int _lon, int _lat, address DATABASE_CONTRACT)"
ConsenSys/dao-wars,contracts/Creature.sol,"build_creature();ping();Creature();validate();ping();set_maxgasprice(uint _max);withdraw_eth(uint amount);set_hp(uint _hp);set_species(uint _species);set_brain(address _brain);set_admin(address _admin);set_eth(uint _eth);set_creature_builder(address _creature_builder);set_board(Board _board);set_game(address _game);set_location(uint _location);move(uint8 direction);harvest();attack(uint8 direction);reproduce(uint8 direction, address new_brain, uint endowment);damage()"
validitylabs/EthDapp-Boilerplate,Hello.sol,setGreeting(string newGreeting);getGreeting()
maraoz/zeppelin-solidity,test/helpers/InsecureTargetBounty.sol,checkInvariant();deployContract()
Dicoiner/irianna-solidity,contracts/ownership/HasNoContracts.sol,reclaimContract(address contractAddr)
michinbear/solidity,test/compilationTests/zeppelin/Bounty.sol,createTarget();deployContract();claim(Target target);checkInvariant()
elementrem/solidity,test/compilationTests/zeppelin/Bounty.sol,createTarget();deployContract();claim(Target target);checkInvariant()
WishFinanceCom/WF-contracts,contracts/lockers/DelayedPayments.sol,"emitError(bytes32 _message);_error(uint _errorCode, bytes32 _message);setupEventsHistory(address _eventsHistory);numberOfAuthorizedPayments();receiveEther();collectAuthorizedPayment(uint _idPayment);delayPayment(uint _idPayment, uint _delay);cancelPayment(uint _idPayment);authorizeSpender(address _spender, bool _authorize);setSecurityGuard(address _newSecurityGuard);setTimelock(uint _newTimeLock);setMaxSecurityGuardDelay(uint _maxSecurityGuardDelay)"
polybioz/github-bounty,mortal.sol,mortal();kill()
ajlopez/EthSharpVm,Samples/CompDecomp/answer.sol,theanswer()
chai2/Midterm,contracts/utils/SafeMath.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b)"
oraclekit/smart_oracle,lib/assets/contracts/Owned.sol,Owned();setOwner(address newOwner)
CORIONplatform/solidity,thirdPartyContract.sol,"CORAddress();CORPAddress();receiveToken(address, uint256, bytes);approvedToken(address, uint256, bytes)"
bitcoinmeetups/dapp-bin,clientreceipt/clientreceipt.sol,"nominate(address _keyholder, address _executive);open();nominate(address _keyholder, address _executive);open();close();deposit(hash _id);refill();transfer(address _to, uint _value, byte[] _data)"
chriseth/dapp-bin,clientreceipt/clientreceipt.sol,"nominate(address _keyholder, address _executive);open();nominate(address _keyholder, address _executive);open();close();deposit(hash _id);refill();transfer(address _to, uint _value, byte[] _data)"
DigixGlobal/ethereum-ruby,contracts/AuditorInterface.sol,""
EthWorks/ethereum.rb,contracts/AuditorInterface.sol,""
marekkirejczyk/ethereum.rb,contracts/AuditorInterface.sol,""
allegewhd/erc20-token-service,contract/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
chainpoint/chainpoint-services,node-eth-contracts/contracts/zeppelin-solidity/contracts/token/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
adklempner/solidity-license,contracts/zeppelin/token/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
onyb/ethane,core/contracts/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
youvegoteth/youvegoteth.github.io,contracts/contracts/zeppelin/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
adamdossa/ProfitSharingContract,installed_contracts/zeppelin/contracts/token/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
erkmos/moeda,contracts/vendored/openzeppelin/token/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
DonorToken/DonorToken,flattened/flat-MDTCrowdsale.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);Crowdsale(uint256 _startTime, uint256 _endTime, uint256 _rate, address _wallet);createTokenContract();buyTokens(address beneficiary);forwardFunds();validPurchase();hasEnded();CappedCrowdsale(uint256 _cap);validPurchase();hasEnded();Ownable();transferOwnership(address newOwner);balanceOf(address who);transfer(address to, uint256 value);transfer(address _to, uint256 _value);balanceOf(address _owner);allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);mint(address _to, uint256 _amount);finishMinting();tokenFallback(address _from, uint256 _value, bytes _data);tokenFallback(address /*_from*/, uint256 /*_value*/, bytes /*_data*/);receiveApproval(address _from, uint256 _value, address _tokenContract, bytes _data);receiveTransfer(address _from, uint256 _value, address _tokenContract, bytes _data);receiveApproval(address _from, uint256 _value, address _tokenContract, bytes _data);receiveTransfer(address _from, uint256 _value, address _tokenContract, bytes _data);isContract(address addr);Benable();transferBenship(address newAddr);Devable();transferDevship(address newAddr);DonorCrowdsale(uint256 _startTime, uint256 _endTime, uint256 _rate, address _wallet, uint256 _cap);createTokenContract();buyTokens(address beneficiary);buyTokensBonus(uint256 tokens, uint256 weiAccept);checkThreshold(uint256 weiAccept);checkEarlybird(uint256 tokens);checkWhale(uint256 weiAccept);forwardFunds();tokenFallback(address /*_from*/, uint256 /*_value*/, bytes /*_data*/);receiveApproval(address _from, uint256 _value, address _tokenContract, bytes _data);receiveTransfer(address _from, uint256 _value, address _tokenContract, bytes _data);tokenSweep(address _from, address _tokenContract);transferBenship(address newAddr);transferWallet(address newAddr);onetimeLaunch(uint256 _startTime);MDTCrowdsale(address _tokenAddr);createTokenContract();transfer(address _to, uint256 _value, bytes _data);transfer(address _to, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _data);transferAndCall(address _to, uint256 _value, bytes _data)"
fkbenjamin/pc-firebase-starter,contracts/mortal.sol,owned();kill()
bcosorg/bcos,systemcontractv2/FileServerManager.sol,"FileServerManager();insert(string _json);deleteById(string _serverId);update(string _json);enable(string _serverId, uint256 _enable);find(string _serverId);isServerEnable(string _serverId);getCount();listAll();listByGroup(string _group);findIdByHostPort(string _host, uint256 _port)"
isvirin/neurodao,NeuroDAO.sol,"owned();changeOwner(address _owner);confirmOwner();Crowdsale();Token();transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);burn(uint256 _value);migrateFrom(address _from, uint256 _value);TokenMigration();migrate(uint256 _value);setMigrationAgent(address _agent);NeuroDAO();withdraw();killMe()"
orbro/eth-enablers,etheropt.github.io-master/old/etheropt_onchain.sol,"Market();addFunds();withdrawFunds(uint amount);getFunds(address user, bool onlyAvailable);getFundsAndAvailable(address user);getOptionChain(uint optionChainID);getMarket(address user);getMarketTopLevels();expire(uint accountID, uint optionChainID, uint8 v, bytes32 r, bytes32 s, bytes32 value);getMoneyness(int strike, uint settlement, uint margin);addOptionChain(uint existingOptionChainID, uint expiration, string underlying, uint margin, uint realityID, bytes32 factHash, address ethAddr, int[] strikes);placeBuyOrder(uint optionChainID, uint optionID, uint price, uint size);placeSellOrder(uint optionChainID, uint optionID, uint price, uint size);orderMatchBuy(uint optionChainID, uint optionID, uint price, uint size, uint bestPriceID);orderMatchSell(uint optionChainID, uint optionID, uint price, uint size, uint bestPriceID);getTopLevel(uint optionChainID, uint optionID);cancelOrders();getMaxLossAfterTrade(address user, uint optionChainID, uint optionID, int positionChange, int cashChange);moneySumAtSettlement(address user, uint optionChainID, uint optionID, int positionChange, uint i, uint settlement);min(uint a, uint b)"
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/contracts/crowdsale/RefundableCrowdsale.sol,RefundableCrowdsale(uint256 _goal);forwardFunds();claimRefund();finalization();goalReached()
MarketProject/MarketProtocol,contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
cgewecke/eth-gas-reporter,mock/test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
Quintor/angular-truffle-box,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
misrab/gethools,contracts/multisig.sol,"multisig(address[] _parties, uint _required_accepts);accept();kill()"
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721Holder.sol,""
creditbit-dev/credit2.0,contracts/CreditBOND.sol,"getBondMultiplier(uint _creditAmount, uint _locktime);getNewCoinsIssued(uint _lockedBalance, uint _blockDifference, uint _percentReward)"
Juzix/BlockChain-Demo,contracts/token/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
LOOMIA/loomia,ethereum/contracts/Migrations.sol,setCompleted(uint256 completed);upgrade(address newAddress)
zetherz/eth-match,test/helpers/ReentrancyMock.sol,ReentrancyMock();count();countLocalRecursive(uint256 n);countThisRecursive(uint256 n);countAndCall(ReentrancyAttack attacker);callback()
axic/tinyoracle,contracts/dispatch.sol,"query(bytes _query);setOwner(address _owner);TinyOracleDispatch();transfer(uint value);transfer(address _to, uint value);kill()"
ProjectEntropy/contracts,contracts/helpers/Owned.sol,owned();transferOwnership(address newOwner)
mrsamuelbarnes/Blockchain-Ballot,contracts/ballot.sol,"Ballot(string _title, string _description, string _candidates, uint _candidatesCount, address[] _voters, uint[] _publicKeyN, uint[] _publicKeyG);getVoters();getPublicKeyN();getPublicKeyG();getVotes();executeVote(uint[] vote)"
trust-tech/go-trustmachine,contracts/chequebook/contract/chequebook.sol,""
Matchpool/contracts,contracts/StandardTokenProtocol.sol,"totalSupply();balanceOf(address _owner);transfer(address _recipient, uint256 _value);transferFrom(address _from, address _recipient, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
sirasistant/market_consensys_academy,contracts/Stoppable.sol,Stoppable();setRunningInternal(bool newStatus)
SilentCicero/wafr,src/tests/solidityTests/gasUsage/examples/HumanStandardTokenFactory.sol,"HumanStandardTokenFactory();createdByMe();createHumanStandardToken(uint256 _initialAmount, string _name, uint8 _decimals, string _symbol)"
whachoe/eth_tutorial_game,test/TestDiceGame.sol,testInitialContract()
aletheia-foundation/aletheia-app,contracts/Reputation.sol,"reputationOf(address account);addReputation(address account, uint256 amount);removeReputation(address account, uint256 amount)"
michinbear/solidity,test/compilationTests/gnosis/Oracles/FutarchyOracle.sol,fund(uint funding);close();setOutcome();isOutcomeSet();getOutcome()
elementrem/solidity,test/compilationTests/gnosis/Oracles/FutarchyOracle.sol,fund(uint funding);close();setOutcome();isOutcomeSet();getOutcome()
Philadelphia-Ethereum-Meetup/pizza_machine,contracts/pizza_machine.sol,"pizza_machine(uint needed, uint end, uint amt);getMoney()"
SilentCicero/wafr,src/tests/solidityTests/gasUsage/examples/SixtyPercentRules.sol,"hasWon(uint _proposalID);canVote(address _sender, uint _proposalID);canPropose(address _sender);votingWeightOf(address _sender, uint _proposalID)"
redsquirrel/augur-core,tests/solidity_test_helpers/ArrayHelper.sol,"setData(uint256[] _data);getSize();getItem(uint256 _index);getSlice(uint256 _start, uint256 _num)"
orbro/eth-enablers,etherPotLotto.sol,"getBlocksPerRound();getTicketPrice();getRoundIndex();getIsCashed(uint roundIndex,uint subpotIndex);calculateWinner(uint roundIndex, uint subpotIndex);getDecisionBlockNumber(uint roundIndex,uint subpotIndex);getSubpotsCount(uint roundIndex);getSubpot(uint roundIndex);cash(uint roundIndex, uint subpotIndex);getHashOfBlock(uint blockIndex);getBuyers(uint roundIndex,address buyer);getTicketsCountByBuyer(uint roundIndex,address buyer);getPot(uint roundIndex)"
eduelias/solidity-contracts,Blob.sol,"VersionedBlob();setOwner(address newOwner);addMember(address member);removeMember(address member);getMembers();commit(bytes blob, string message);checkOut(int i);tag(uint commitId, string tag);findTag(string tag);untag(string tag);checkOutTag(string tag)"
SilentCicero/wafr,src/tests/solidityTests/campaign/BalanceClaim.sol,claimBalance();BalanceClaim(address _owner);claimBalance()
tokenai/tokenai-network-token,contracts/VestedToken.sol,"revokeTokenGrant(address _holder, uint _grantId);revokeAllTokenGrants(address _holder);transferableTokens(address holder, uint64 time);tokenGrantsCount(address _holder);tokenGrant(address _holder, uint _grantId);vestedTokens(TokenGrant grant, uint64 time);nonVestedTokens(TokenGrant grant, uint64 time);lastTokenIsTransferableDate(address holder)"
ethereum/remix,remix-debug/test/sol/simple_storage.sol,set(uint x);get()
ethereum/cpp-ethereum,test/unittests/performance/rc5.sol,"rotate_left(uint32 v, uint32 n);rotate_right(uint32 v, uint32 n);encrypt(uint32[26] S, uint32[4] inout);decrypt(uint32[26] S, uint32[4] inout);expand(uint32[4] L, uint32[26] S);test(uint32[26] S, uint32[4] messg)"
GX-Coin/SmartContract,GxCoin.sol,GxCoin(address gxDeploymentAdminsAddress);setTradingOpen(bool isOpen);withdraw(uint80 amount)
kowala-tech/kUSD,client/contracts/truffle/contracts/token/KRC223.sol,"balanceOf(address who);name();symbol();decimals();totalSupply();transfer(address to, uint value);transfer(address to, uint value, bytes data);transfer(address to, uint value, bytes data, string custom_fallback)"
loxal/FreeEthereum,free-ethereum-core/src/test/resources/solidity/file2.sol,""
dbenrosen/EtherPay,ethereumj-core/src/test/resources/solidity/file2.sol,""
loxal/ethereumj,ethereumj-core/src/test/resources/solidity/file2.sol,""
web3j/web3j,contracts/src/main/resources/eip165/solidity/ERC165.sol,supportsInterface(bytes4 interfaceID)
SilentCicero/wafr,src/tests/solidityTests/gasUsage/examples/OpenRules.sol,"hasWon(uint _proposalID);canVote(address _sender, uint _proposalID);canPropose(address _sender);votingWeightOf(address _sender, uint _proposalID)"
kingflurkel/sponnietube,app/contracts/blocktube.sol,"blockTube(uint256 _initialSupply, string _tokenName, uint8 _decimalUnits, string _tokenSymbol);like(address _clipaddr, uint256 _value);transfer(address _to, uint256 _value);transfer(address receiver, uint amount);blocktubeClip(string _ipfsclipobject, uint _treshold, uint _clipshares, uint _percentageforowner);blocktubeTransfer(address _liker, uint _likeamount)"
tonyin/the-daio,daio.sol,"safeAdd(uint a, uint b);safeSub(uint a, uint b);safeMul(uint a, uint b);Daio(uint contributionMinimumMinutes);contributeFund(string memberName);launchFund(uint fundMinimumMinutes);voteProposal(uint proposalId, bool support);executeProposal(uint proposalId, bytes transactionBytecode);liquidateFund()"
stanta/darfchain,ICO/contracts/NullFinalizeAgent.sol,NullFinalizeAgent(Crowdsale _crowdsale);isSane();finalizeCrowdsale()
montyly/manticore,tests/ethereum/contracts/detectors/retval_lunatic.sol,call();callchecked()
trailofbits/manticore,tests/ethereum/contracts/detectors/retval_lunatic.sol,call();callchecked()
aragon/aragon-network-token,packages/sale/installed_contracts/zeppelin/contracts/ownership/Contactable.sol,setContactInformation(string info)
pooleja/SolidityPlayground,contracts/zeppelin/ownership/Contactable.sol,setContactInformation(string info)
maraoz/zeppelin-solidity,contracts/ownership/Contactable.sol,setContactInformation(string info)
michinbear/solidity,test/compilationTests/gnosis/MarketMakers/LMSRMarketMaker.sol,"calcCost(Market market, uint8 outcomeTokenIndex, uint outcomeTokenCount);calcProfit(Market market, uint8 outcomeTokenIndex, uint outcomeTokenCount);calcMarginalPrice(Market market, uint8 outcomeTokenIndex);calcCostLevel(int logN, int[] netOutcomeTokensSold, uint funding);sumExpOffset(int logN, int[] netOutcomeTokensSold, uint funding, uint8 outcomeIndex);getNetOutcomeTokensSold(Market market)"
elementrem/solidity,test/compilationTests/gnosis/MarketMakers/LMSRMarketMaker.sol,"calcCost(Market market, uint8 outcomeTokenIndex, uint outcomeTokenCount);calcProfit(Market market, uint8 outcomeTokenIndex, uint outcomeTokenCount);calcMarginalPrice(Market market, uint8 outcomeTokenIndex);calcCostLevel(int logN, int[] netOutcomeTokensSold, uint funding);sumExpOffset(int logN, int[] netOutcomeTokensSold, uint funding, uint8 outcomeIndex);getNetOutcomeTokensSold(Market market)"
papyrusglobal/smartcontracts,contracts/channel/ChannelManagerContract.sol,"requestClose(uint64 channelId);setBlockPart(uint64 channelId, uint64 blockId, bytes reference);setBlockResult(uint64 channelId, uint64 blockId, bytes32 resultHash);blockSettle(uint64 channelId, uint64 blockId, bytes result);blockResolveDispute(uint64 channelId, uint64 blockId, bytes result);channelProtocol(uint64 channelId);channelConfiguration(uint64 channelId);channelValidatorCount(uint64 channelId);channelValidator(uint64 channelId, uint64 validatorIndex);channelMasterKey(uint64 channelId);channelDisputeResolver(uint64 channelId);channelBlockPeriod(uint64 channelId);channelPartTimeout(uint64 channelId);channelResultTimeout(uint64 channelId);channelCloseTimeout(uint64 channelId);channelStartTimestamp(uint64 channelId);channelCloseTimestamp(uint64 channelId);channelSettlementEncrypted(uint64 channelId);isChannelOpened(uint64 channelId);isChannelClosing(uint64 channelId);isChannelClosed(uint64 channelId);blockCount(uint64 channelId);blockPart(uint64 channelId, uint64 validatorIndex, uint64 blockId);blockResult(uint64 channelId, uint64 validatorIndex, uint64 blockId);blockSettlement(uint64 channelId, uint64 blockId);blockSettlementHash(uint64 channelId, uint64 blockId);isBlockCreated(uint64 channelId, uint64 blockId);isBlockFilled(uint64 channelId, uint64 blockId);isBlockCalculated(uint64 channelId, uint64 blockId);isBlockDisputed(uint64 channelId, uint64 blockId);isBlockSettled(uint64 channelId, uint64 blockId);blockStart(uint64 channelId, uint64 blockId);blockEnd(uint64 channelId, uint64 blockId);getValidatorIndex(uint64 channelId, address validator);isValidator(uint64 channelId, address validator)"
Dsummers91/openfund,blockchain/ethereum-bridge/contracts/ethereum-api/connectors/oraclizeConnector.sol,"forked();setCBaddress(address newCbaddress);addDSource(string dsname, uint multiplier);addDSource(string dsname, byte proofType, uint multiplier);multiAddDSource(bytes32[] dsHash, uint256[] multiplier);createCoupon(string _code);deleteCoupon(string _code);multisetProofType(uint[] _proofType, address[] _addr);multisetCustomGasPrice(uint[] _gasPrice, address[] _addr);setGasPrice(uint newgasprice);setBasePrice(uint new_baseprice);setBasePrice(uint new_baseprice, bytes proofID);withdrawFunds(address _addr);Oraclize();randomDS_updateSessionPubKeysHash(bytes32[] _newSessionPubKeysHash);randomDS_getSessionPubKeyHash();useCoupon(string _coupon);setProofType(byte _proofType);setCustomGasPrice(uint _gasPrice);getPrice(string _datasource);getPrice(string _datasource, uint _gaslimit);getPrice(string _datasource, address _addr);getPrice(string _datasource, uint _gaslimit, address _addr);getCodeSize(address _addr);query(string _datasource, string _arg);queryN(string _datasource, bytes _args);query(uint _timestamp, string _datasource, string _arg);queryN(uint _timestamp, string _datasource, bytes _args);query(uint _timestamp, string _datasource, string _arg, uint _gaslimit);queryN(uint _timestamp, string _datasource, bytes _args, uint _gaslimit);query_withGasLimit(uint _timestamp, string _datasource, string _arg, uint _gaslimit);queryN_withGasLimit(uint _timestamp, string _datasource, bytes _args, uint _gaslimit)"
lastisme/lastisme.github.io,contracts/association.sol,"owned();transferOwnership(address newOwner);Association(token sharesAddress, uint minimumSharesToPassAVote, uint minutesForDebate);changeVotingRules(token sharesAddress, uint minimumSharesToPassAVote, uint minutesForDebate);dividend();vote(uint proposalNumber, bool supportsProposal);executeProposal(uint proposalNumber, bytes transactionBytecode)"
lucywe/rootcore-crowdsale,solidity/contracts/interfaces/IERC20Token.sol,"name();symbol();decimals();totalSupply();balanceOf(address _owner);allowance(address _owner, address _spender);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value)"
dacplayproject/play-dapp,src/DGameController.sol,"DGameController(address[] _guards);changeController(address _token, address _newController);proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);addGuard(address _guard)"
kowala-tech/kUSD,client/contracts/truffle/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
becodemonkey/solidity,contracts/token/StdToken.sol,"balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
Itshalffull/eth-quadratic_voting,Quadratic Voting/Rating.sol,"setRating(bytes32 _key, uint256 _value)"
WingsDao/contracts,contracts/milestones/BasicMilestones.sol,"BasicMilestones(address _timeManager, address _owner, bool _cap);add(uint amount, bytes32 items);update(uint index, uint amount, bytes32 items);remove(uint index);get(uint index)"
web3j/web3j-maven-plugin,src/test/resources/issue-23/Inter.sol,check();check()
Great-Hill-Corporation/daodeepdive,assets/contracts/06-Refund.sol,"balanceOf(address addr);transferFrom(address from, address to, uint balance);withdraw();trusteeWithdraw()"
jamiehale/dao_partnership,contracts/Incomplete.sol,"run(uint value, bytes data)"
celeduc/dao_partnership,contracts/Incomplete.sol,"run(uint value, bytes data)"
SerCeMan/intellij-solidity,src/test/resources/fixtures/parser/contractWithDifferentFields.sol,""
mixbytes/storiqa_ico,contracts/crowdsale/ICrowdsaleStat.sol,getWeiCollected();getTokenMinted()
Storiqa/ico_smart_contract,contracts/crowdsale/ICrowdsaleStat.sol,getWeiCollected();getTokenMinted()
segovro/CreditCommons,contract.sol,"creditCommons();transferSysAdmin(address newSysAdmin);vote(uint _proposalNumber, int8 _choice);closeProposal(uint _proposalNumber)"
GovernX/governx-contracts,src/contracts/ShareHolderController.sol,"shareHolderBalanceOfAtTime(address _sender, uint256 _time);totalTokenSupply();minimumElectionQuorum();minimumQuorum();canPropose(address _sender, uint256 _proposalID);canVote(address _sender, uint256 _proposalID);canExecute(address _sender, uint256 _proposalID);voteTime(uint256 _proposalID);votingWeightOf(address _sender, uint256 _proposalID, uint256 _index, uint256 _data);hasWon(address _sender, uint256 _proposalID);delegate(address _to, uint256 _proposalID);resetElectionPeriod();isElectionPeriod();isElectionPeriodProposal(uint256 _proposalID)"
AnnaIsAWang/LedgerLabsCoops2016,AbstractedStateChannel/TicTacToeAdjudicator.sol,"TicTacToeAdjudicator(address addressX, address addressO, uint _timeout);createLockedState()"
adklempner/solidity-license,contracts/Licensed.sol,holdsValidLicense(address holder)
enjin/contracts,solidity/contracts/ENJCrowdfund.sol,"ENJCrowdfund(uint256 _totalPresaleTokensYetToAllocate, address _beneficiary);setToken(address _tokenAddress);changeBeneficiary(address _newBeneficiary);deliverPresaleTokens(address[] _batchOfAddresses, uint256[] _amountofENJ);deliverPresaleTokenToClient(address _accountHolder, uint256 _amountofENJ);contributeETH(address _to);processContribution(address _to);totalEnjSold();getTotalAmountOfTokens(uint256 _contribution)"
changwu-tw/pyethapp,pyethapp/tests/contracts/multiply.sol,multiply(uint a)
RomanZacharia/pyethapp,pyethapp/tests/contracts/multiply.sol,multiply(uint a)
ethereum/pyethapp,pyethapp/tests/contracts/multiply.sol,multiply(uint a)
gsalgado/pyethapp,pyethapp/tests/contracts/multiply.sol,multiply(uint a)
SilentCicero/wafr,src/tests/solidityTests/emptyTestContract/test.emptyTest.sol,""
evoluchain/meetup-sc-testing,contracts/TokenERC20/StandardToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
AugustoL/LifToken,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
windingtree/LifToken,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
readevalprint/aragon-core,contracts/misc/Crontab.sol,"isLeapYear(uint16 year);leapYearsBefore(uint year);getDaysInMonth(uint8 month, uint16 year);parseTimestamp(uint timestamp);getYear(uint timestamp);getMonth(uint timestamp);getDay(uint timestamp);getHour(uint timestamp);getMinute(uint timestamp);getSecond(uint timestamp);getWeekday(uint timestamp);toTimestamp(uint16 year, uint8 month, uint8 day);toTimestamp(uint16 year, uint8 month, uint8 day, uint8 hour);toTimestamp(uint16 year, uint8 month, uint8 day, uint8 hour, uint8 minute);toTimestamp(uint16 year, uint8 month, uint8 day, uint8 hour, uint8 minute, uint8 second);__throw();next(bytes2 ct_second, bytes2 ct_minute, bytes2 ct_hour, bytes2 ct_day, bytes2 ct_month, bytes2 ct_weekday, bytes2 ct_year);next(bytes2 ct_second, bytes2 ct_minute, bytes2 ct_hour, bytes2 ct_day, bytes2 ct_month, bytes2 ct_weekday, bytes4 ct_year, uint timestamp);findNextSecond(uint timestamp, bytes2 ct_second);findNextMinute(uint timestamp, bytes2 ct_minute);findNextHour(uint timestamp, bytes2 ct_hour);findNextWeekday(uint timestamp, bytes2 ct_weekday);findNextDay(uint timestamp, bytes2 ct_day);findNextMonth(uint timestamp, bytes2 ct_month);findNextYear(uint timestamp, bytes4 ct_year);max(uint a, uint b);min(uint a, uint b);_patternToNumber(bytes4 pattern)"
amisolution/Test,Mobile.sol,"mortal();kill();MyUserName(string _name);registerToProvider(address _providerAddress);setDebt(uint256 _debt);payToProvider(uint256 _debt, address _providerAddress);unsubscribe(address _providerAddress);setDebt(uint256 _debt, address _userAddress)"
bokkypoobah/BokkyPooBahsEtherRefundablePrize,test/BokkyPooBahsEtherRefundablePrizeTemp.sol,"Owned();transferOwnership(address newOwner);totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _amount);BokkyPooBahsEtherRefundablePrize();buyPrice();buyPriceAt(uint256 at);sellPrice();buyTokens();sellTokens(uint256 amountOfTokens);deposit();ownerWithdraw(uint256 amount);amountOfEthersOwnerCanWithdraw();currentEtherBalance();currentTokenBalance()"
tomaaron/raiden,raiden/smart_contracts/Token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
eris-ltd/eris-db,tests/jobs_fixtures/app58-operator-sdiv/OperatorSdiv.sol,"sdiv(int a, int b)"
Souptacular/motivate-dapp,contracts/std.sol,owned();changeOwner(address newOwner);kill();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr);kill();nameRegAddress();named(bytes32 name);named(bytes32 name)
ultra-koder/JobMarket,dapp/contracts/std.sol,owned();changeOwner(address newOwner);kill();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr);kill();nameRegAddress();named(bytes32 name);named(bytes32 name)
InventionRegistry/buildingBloX,contracts/std.sol,owned();changeOwner(address newOwner);kill();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr);kill();nameRegAddress();named(bytes32 name);named(bytes32 name)
jscottmiller/patronage,contracts/Patronage.sol,"Patronage(string _username, address _payoutAddress, address _shareholders);withdrawal();updatePayoutAddress(address newAddress)"
paulyc/sol_machine,contracts/block.sol,"Block(Header header, Header[] ommerBlockHeaders, Transaction[] transactions);verify();finalize()"
Dicoiner/irianna-solidity,contracts/Findel/GatewayFalse.sol,newProof();newValue()
chentschel/ethgames-contracts,contracts/EthLottery.sol,"initLottery(uint16 numTickets, uint ticketPrice, uint8 ownerCut, bytes32 serverHash);getLotteryDetails(uint16 lottId);purchaseTicket(uint16 lottId, uint16[] tickets);finalizeLottery(uint16 lottId, bytes32 serverSalt, uint serverRoll);lotteryCloseInsurance(uint16 lottId)"
RyuuGan/sol-merger,test/compiled/LocalImportsWithComments.sol,Ownable();transferOwnership(address newOwner);MyOwned()
tomaaron/raiden,raiden/smart_contracts/HumanStandardToken.sol,"approveAndCall(address _spender, uint256 _value, bytes _extraData)"
GenesysLabs/TheKiwi,contracts/KiwiUtils.sol,"mint(address _to, uint256 _amount);burn(address _from, uint256 _value);toTuis(uint256 _amount);toEth(uint256 _amount);toKiwi(uint256 _amount)"
Spreadway/core,token-vesting-ui/contracts/MyVesting.sol,""
GX-Coin/SmartContract,scripts/1.5.4_gxOrders_Interface.sol,getBuyOrder(uint80 orderId);getSellOrder(uint80 orderId);getBuyOrdersInfo();getSellOrdersInfo()
paulyc/sol_machine,test/evm_stack.sol,TestEvmStack();testInit();testPush();testPop();testSwapTop()
SafecontractDev/protocol,contracts/bancor_contracts/ERC20Token.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value)"
FiatCentralBank/fiatcoin,test/TestClock.sol,testNowClock();testDebugClock()
DonorToken/DonorToken,contracts/ownership/Devable.sol,Devable();transferDevship(address newAddr)
silasdavis/burrow,execution/solidity/abi_tester.sol,createB();createC()
silasdavis/eris-db,tests/jobs_fixtures/app47-constructor-arguments/storage.sol,getString()
silasdavis/burrow,tests/jobs_fixtures/app47-constructor-arguments/storage.sol,getString()
eris-ltd/eris-db,tests/jobs_fixtures/app47-constructor-arguments/storage.sol,getString()
NoteGio/openrelay,js/contracts/base/Token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);approve(address _spender, uint _value);allowance(address _owner, address _spender)"
marclijour/presentations,College Campus Cash/src/TokenRecipient.sol,"receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);_transfer(address _from, address _to, uint _value);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);burn(uint256 _value);burnFrom(address _from, uint256 _value)"
Dicoiner/irianna-solidity,contracts/token/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
elementrem/go-elementrem,release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
teslapatrick/status-go,geth/testdata/test.sol,double(int a)
locals-world/locals-app,truffle/contracts/localsStore.sol,"localsStore(address _tokenContract, address _foundationContract);createAssociation(uint _minimumQuorum, uint _debatingPeriodInMinutes);kill();Association(address sharesTokenAddress, uint minimumSharesToPassAVote, uint minutesForDebate);changeVotingRules(address sharesTokenAddress, uint minimumSharesToPassAVote, uint minutesForDebate);vote(uint proposalNumber, bool supportsProposal);executeProposal(uint proposalNumber, bytes transactionBytecode)"
LindaHealthcareICO/linda-crowdsale,contracts/LindaPresale.sol,"LindaPresale(uint256 _startTime, uint256 _endTime, uint256 _rate, uint256 _goal, uint256 _cap, address _tokenOwner, address _wallet);createTokenContract();buyTokens(address beneficiary);finalization();hasStarted()"
batlinal/ftt,contracts/AgreementFactory.sol,getAgreements()
adridadou/blockchain-legal,public/solidity/legalContractManager.sol,"currentUser();kill();getNbNamespaces();getNamespace(uint id);getNbProjects(string namespace);getProject(string namespace, uint id);getNbVersions(string namespace, string project);getVersion(string namespace, string project, uint id);getOwner(string namespace);LegalContractManager();getSource(string namespace, string project, string version, string protocol);getChecksum(string namespace, string project, string version);canWrite(string namespace, address user);register(string namespace, string project, string version, string protocol, string source, string checksum);createNamespace(string namespace, address owner);registerProject(string namespace, string project);changeOwner(string namespace, address newOwner);stringsEqual(string storage _a, string memory _b)"
kr8os/token-sale-contracts,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Lunyr/crowdsale-contracts,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
nud3l/verifying-computation-solidity,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
redsquirrel/augur-core,src/libraries/DelegationTarget.sol,""
DonorToken/DonorToken,contracts/ownership/Benable.sol,Benable();transferBenship(address newAddr)
aragon/aragon-core,contracts/apps/AppProxyBase.sol,getAppBase(bytes32 _appId)
melonproject/protocol,contracts/fund/policies/PolicyManager.sol,"enablePolicies(address[] calldata _policies, bytes[] calldata _encodedSettings);preValidatePolicy(PolicyHook _hook, bytes calldata _encodedArgs);postValidatePolicy(PolicyHook _hook, bytes calldata _encodedArgs);updatePolicySettings(address _policy, bytes calldata _encodedSettings);getEnabledPolicies();__policyIsEnabled(address _policy);createInstance(address _hub)"
SerCeMan/intellij-solidity,src/test/resources/fixtures/parser/contractWithLiterals.sol,""
iExecBlockchainComputing/rlc-token,contracts/Migrations.sol,setCompleted(uint completed);upgrade(address newAddress)
loiluu/peacerelay,contracts/Migrations.sol,setCompleted(uint completed);upgrade(address newAddress)
kierenh/vue-dark-chocolate,contracts/TradeManager.sol,"exists(bytes32 key);insert(bytes32 referenceCode, uint issueDate, uint offerExpiry, address vendor, address counterparty);getByIndex(uint index);getByReferenceCode(bytes32 referenceCode);updateStatus(bytes32 referenceCode, uint offerAccepted, TradeStatus status)"
aragon/aragon-core,contracts/apps/AragonApp.sol,"canPerform(address _sender, bytes32 _role, uint256[] _params);getRecoveryVault()"
erooijak/ethlance,resources/public/contracts/src/ownable.sol,changeOwner(address _newOwner)
aragon/aragon-core,contracts/kernel/KernelProxy.sol,proxyType();implementation()
FilipPyrek/ethereum-csgo-example,contracts/CaseContract.sol,"emit(address recipient, uint id, uint collectionId);remove(uint id);getById(uint id);getByOwner(address owner, uint offset);getDepositSize(address owner)"
brew2venue/brisbanehack,src/Brew2Venue.sol,""
redsquirrel/augur-core,src/legacy_reputation/Initializable.sol,endInitialization()
michinbear/solidity,std/StandardToken.sol,"StandardToken(address _initialOwner, uint256 _supply);balanceOf(address _account);totalSupply();transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);doTransfer(address _from, address _to, uint _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
ruchevits/solidity,std/StandardToken.sol,"StandardToken(address _initialOwner, uint256 _supply);balanceOf(address _account);totalSupply();transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);doTransfer(address _from, address _to, uint _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
saurabh-kurdukar/hackathon,contracts/KycDetails.sol,""
pruby/AdversariallyVerifiableMachine,contracts/AVMStepValidator.sol,"validateStep(uint256[] readAccesses, uint256[] writeAccesses);getMaximumReadsPerStep();getMaximumWritesPerStep()"
GX-Coin/SmartContract,GxAuth.sol,"GxAuth();isAuthorized();setAuthorityContract(address new_authority, AuthMode new_authMode)"
lightswarm124/ethereumjs-sandbox,contracts/sol/Standard_Token.sol,"Standard_Token(uint256 _initialAmount);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
EMAXio/cosigner,cosigner-ethereum-core/multisig-contract.sol,"confirmTransaction();ownerIndexBit(address addr);isOwner(address addr);getOwners();multisigwallet(address[] _owners, uint _required);execute(address _to, uint _value, bytes _data);confirm(bytes32 _id)"
Braveno/cosigner,cosigner-ethereum-core/multisig-contract.sol,"confirmTransaction();ownerIndexBit(address addr);isOwner(address addr);getOwners();multisigwallet(address[] _owners, uint _required);execute(address _to, uint _value, bytes _data);confirm(bytes32 _id)"
EMAXio/heimdal,cosigner-ethereum-core/multisig-contract.sol,"confirmTransaction();ownerIndexBit(address addr);isOwner(address addr);getOwners();multisigwallet(address[] _owners, uint _required);execute(address _to, uint _value, bytes _data);confirm(bytes32 _id)"
trevorbernard/heimdal,cosigner-ethereum-core/multisig-contract.sol,"confirmTransaction();ownerIndexBit(address addr);isOwner(address addr);getOwners();multisigwallet(address[] _owners, uint _required);execute(address _to, uint _value, bytes _data);confirm(bytes32 _id)"
SilentCicero/wafr,src/tests/solidityTests/beforeAfterEach/test.afterEach.sol,setup();afterEach();test_validShouldThrow()
b-mueller/mythril,solidity_examples/calls.sol,thisisfine();reentrancy();calluseraddress(address addr);callstoredaddress();setstoredaddress(address addr)
SafeContracts/TREX-token,AbstractSafecontractsTREXCrowdfunding.sol,startDate();CROWDFUNDING_PERIOD();TOKEN_TARGET();valuePerShare();fundBalance();campaignEndedSuccessfully()
stanta/darfchain,darfchain_docker/sinchro.sol,setData(string x);getGasLimit();HashOfDB()
adklempner/solidity-license,contracts/zeppelin/DayLimit.sol,DayLimit(uint256 _limit);_setDailyLimit(uint256 _newLimit);_resetSpentToday();underLimit(uint256 _value);today()
dmx374/zeppelin-solidity,contracts/DayLimit.sol,DayLimit(uint256 _limit);_setDailyLimit(uint256 _newLimit);_resetSpentToday();underLimit(uint256 _value);today()
adamdossa/ProfitSharingContract,installed_contracts/zeppelin/contracts/DayLimit.sol,DayLimit(uint256 _limit);_setDailyLimit(uint256 _newLimit);_resetSpentToday();underLimit(uint256 _value);today()
ethereum/remix,remix-tests/tests/examples_4/SafeMathProxy.sol,"divProxy(uint256 a, uint256 b);mulProxy(uint256 a, uint256 b);subProxy(uint256 a, uint256 b);addProxy(uint256 a, uint256 b);modProxy(uint256 a, uint256 b)"
kowala-tech/kUSD,client/contracts/truffle/contracts/kns/FIFSRegistrar.sol,"initialize(KNS knsAddr, bytes32 node);register(bytes32 subnode, address owner)"
wscoliver/ethpipeline,contracts/swap3.sol,""
gmo-blockchain/solidity,contracts/AddressGroupEvent_v1.sol,"create(address _sender, bytes32 _id);remove(address _sender, bytes32 _id);setAllowCnsContract(address _sender, bytes32 _id, address _cns, bytes32 _contractName, bool _isAdded);setOwner(address _sender, bytes32 _id, address _owner);setMember(address _sender, bytes32 _id, address _member, bool _isAdded);setChild(address _sender, bytes32 _id, bytes32 _child, bool _isAdded)"
vishakh/blockinstruments,contracts/FeedBackedCall.sol,FeedBackedCall();authorizeTradingAccounts(uint buffer);validate();withdraw();exercise();isMature();getMoneyness();getSpotPrice();getValue();initiatedBy(address addr)
cryptape/teth,lib/teth/erbs/contract.sol,""
vcealicu/melonport-price-feed,pricefeed/PriceFeed.sol,"isLeapYear(uint16 year);leapYearsBefore(uint year);getDaysInMonth(uint8 month, uint16 year);parseTimestamp(uint timestamp);getYear(uint timestamp);getMonth(uint timestamp);getDay(uint timestamp);getHour(uint timestamp);getMinute(uint timestamp);getSecond(uint timestamp);getWeekday(uint timestamp);toTimestamp(uint16 year, uint8 month, uint8 day);toTimestamp(uint16 year, uint8 month, uint8 day, uint8 hour);toTimestamp(uint16 year, uint8 month, uint8 day, uint8 hour, uint8 minute);toTimestamp(uint16 year, uint8 month, uint8 day, uint8 hour, uint8 minute, uint8 second);toMonth(string _month);parseInt(string _a, uint _b);parseDate(string _date);JSONpath_raw(string _json, string _path);JSONpath_string(string _json, string _path);JSONpath_int(string _json, string _path, uint _decimals);nestedPath(strings.slice _path, strings.slice _s);makeKey(strings.slice _key);getElement(strings.slice _s, uint _depth);depthCheck(strings.slice _pre);parseInt(string _a, uint _b);safer_ecrecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s);ecrecovery(bytes32 hash, bytes sig);getQuoteAsset();getFrequency();getValidity();getStatus(address ofAsset);getPrice(address ofAsset);getData(address ofAsset);getPublicKey();CryptoCompare();isFresh(string _dateHeader);nativeProof_verify(string result, bytes proof, bytes pubkey);copyBytes(bytes from, uint fromOffset, uint length, bytes to, uint toOffset);__callback(bytes32 oraclizeId, string result, bytes proof);setPriceOf(string result, string ticker, address assetAddress);setQuery(string query);updateKey(bytes _pubkey);enableContinuousDelivery();disableContinuousDelivery();setGasLimit(uint _newGasLimit);updatePriceOraclize();setFrequency(uint newFrequency);setValidity(uint _validity);addAsset(string _ticker, address _newAsset);rmAsset(address _assetRemoved)"
livepeer/protocol,contracts/bonding/libraries/EarningsPool.sol,"init(EarningsPool.Data storage earningsPool, uint256 _stake, uint256 _rewardCut, uint256 _feeShare);hasClaimableShares(EarningsPool.Data storage earningsPool);addToFeePool(EarningsPool.Data storage earningsPool, uint256 _fees);addToRewardPool(EarningsPool.Data storage earningsPool, uint256 _rewards);claimShare(EarningsPool.Data storage earningsPool, uint256 _stake, bool _isTranscoder);feePoolShare(EarningsPool.Data storage earningsPool, uint256 _stake, bool _isTranscoder);rewardPoolShare(EarningsPool.Data storage earningsPool, uint256 _stake, bool _isTranscoder)"
chrisdotn/ethdemocracy,contracts/AbstractEthDemocracy.sol,"getVotersLength();getElectionId(string memory _electionName);getElectionName(uint _electionId);isVoter(address _voter);getVoteOption(uint _electionId, uint _optionId);getVoteOptionId(uint _electionId, string memory _option);getVoteOptions(uint _electionId);getVotes(uint _electionId, address _voter);getResults(uint _electionId, string memory _option);addVoter(address _voter);deleteVoters();createElection(string memory _name);addVoteOption(uint _electionId, string memory _option);castVote(uint _electionId, uint _optionId);transferVotes(uint _electionId, address _to)"
thunder-network/thunder-network.github.io,contracts/ChannelFactory.sol,""
kpnDataScienceLab/labday2017-ethereum,TwoPersonEscrow/Transact.sol,"getReputation(address add);createTransaction(uint id, address to);cancelTransaction(uint id);confirmTransaction(uint id, address from, uint amount);closeTransaction(uint id);refundTransaction(uint id)"
BeBlockTech/Anemoi,BeBlock-Master/WePowerPresaleContractAudit-master/audit/test/MiniMeToken.sol,"proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);Controlled();changeController(address _newController);receiveApproval(address from, uint256 _amount, address _token, bytes _data);totalSupplyHistoryLength();balanceHistoryLength(address addr);balanceHistory(address addr, uint i);transfer(address _to, uint256 _amount);balanceOf(address _owner);approve(address _spender, uint256 _amount);totalSupply();balanceOfAt(address _owner, uint _blockNumber);totalSupplyAt(uint _blockNumber);enableTransfers(bool _transfersEnabled);isContract(address _addr);min(uint a, uint b);claimTokens(address _token)"
BeBlockTech/Anemoi,BeBlock-Master/WePowerPresaleContractAudit-master/audit/test/modifiedContracts/MiniMeToken.sol,"proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);Controlled();changeController(address _newController);receiveApproval(address from, uint256 _amount, address _token, bytes _data);totalSupplyHistoryLength();balanceHistoryLength(address addr);balanceHistory(address addr, uint i);transfer(address _to, uint256 _amount);balanceOf(address _owner);approve(address _spender, uint256 _amount);totalSupply();balanceOfAt(address _owner, uint _blockNumber);totalSupplyAt(uint _blockNumber);enableTransfers(bool _transfersEnabled);isContract(address _addr);min(uint a, uint b);claimTokens(address _token)"
adridadou/eth-contract-api,src/test/resources/contract2.sol,getT();getM();getArray();getOwner()
adridadou/eth-api,src/test/resources/contract2.sol,getT();getM();getArray();getOwner()
qjflores/singularity,contracts/Kitchen.sol,"Kitchen();addStaff(address _userAddress);addItemToMenu(bytes32 _name, uint256 _price);addItemToUserDebt(address _userAddress, bytes32 _name);updateItemPrice(bytes32 _name, uint256 _price)"
silasdavis/eris-db,tests/jobs_fixtures/app37-fallback_function/fallback.sol,""
silasdavis/burrow,tests/jobs_fixtures/app37-fallback_function/fallback.sol,""
eris-ltd/eris-db,tests/jobs_fixtures/app37-fallback_function/fallback.sol,""
duaraghav8/Solium,test/lib/rules/indentation/accept/one-line-struct.sol,""
airalab/core,contracts/misc/DutchAuction.sol,"setup(ERC20Burnable _token, address _ambix);startAuction();calcCurrentTokenPrice();updateStage();bid(bytes calldata signature);claimTokens();calcStopPrice();calcTokenPrice();finalizeAuction()"
brakmic/BlockchainStore,contracts/Base/ERC20.sol,"name();symbol();decimals();totalSupply();balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value)"
AlexXiong97/dReview,blockchain/Store.sol,"Store(string _placeID);addReview(string _comment, uint256 _score, address _uploader)"
eris-ltd/eris-db,tests/jobs_fixtures/app49-return-array-with-RETURNDATACOPY/consumeArray.sol,""
careerxon/code,ERC20.sol,"allowance(address _owner, address _spender);transferFrom(address _from, address _to, uint256 _value);approve(address spender, uint256 value)"
crypto-coder/Tokens,Token_Contracts/contracts/Token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
Crypto-Apartments/CRA-ICO-TOKEN,contract/ERC20Interface.sol,"balanceOf(address _owner);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);approve(address _spender, uint _value);allowance(address _owner, address _spender)"
Spreadway/core,sample-project-gradle/src/main/resources/solidity/greeter/Greeter.sol,mortal();kill();greeter(string _greeting);newGreeting(string _greeting);greet()
dltdojo/courses,ethereum/truffle/T010_BrowserMultisig.sol,"FooWallet(address[] _owners,uint _required);getBalance();confirmTransaction(MultiSigWallet wallet ,uint txid);getWalletBalance();getBalance()"
github/linguist,test/fixtures/Generic/sol/Solidity/legacy1.sol,""
chenlian2015/eosEthMarketSample,contracts/OLCommonCall.sol,"addLog(string logTag, string logContent);getMyAddress()"
iam-dev/ERC23,contracts/example/ExampleUpgradeable23Token.sol,""
dltdojo/courses,ethereum/service/oracle/T100_Oracle.sol,"setState(uint _value);setState(uint _value);updateStateFromOracleFoo(address _addrOracleFoo);setState(address _addrFoo, uint _value)"
nud3l/verifying-computation-solidity,contracts/ComputationService.sol,"ComputationService();__callback(bytes32 _oraclizeID, string _result);compute(string _val1, string _val2, uint _operation, uint256 _computationId);provideIndex(string _resultSolver, uint _computationId);registerOperation(uint _operation, string _query);enableArbiter(address _arbiterAddress);disableArbiter(address _arbiterAddress);getResult(uint _computationId)"
wscoliver/ethpipeline,contracts/swap.sol,""
zetherz/eth-match,contracts/base/ERC23Contract.sol,"tokenFallback(address _from, uint256 _value, bytes _data);tokenFallback(address /*_from*/, uint256 /*_value*/, bytes /*_data*/)"
DonorToken/DonorToken,contracts/base/ERC23Contract.sol,"tokenFallback(address _from, uint256 _value, bytes _data);tokenFallback(address /*_from*/, uint256 /*_value*/, bytes /*_data*/)"
SmartChainX/ChainBlockchain,Contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
sonm-io/core,blockchain/source/contracts/SimpleGatekeeperWithLimitLive.sol,"ChangeKeeperLimit(address _keeper, uint256 _limit);FreezeKeeper(address _keeper);UnfreezeKeeper(address _keeper);Payin(uint256 _value);Payout(address _to, uint256 _value, uint256 _txNumber);SetFreezingTime(uint256 _freezingTime);GetFreezingTime();underLimit(address _keeper, uint256 _value);today();kill()"
tomashaber/raiden,raiden/smart_contracts/HumanStandardToken.sol,"approveAndCall(address _spender, uint256 _value, bytes _extraData)"
mechaism/mechaism,high_priest.sol,""
cpetty-Novetta/raffle-dapp,imports/smart-contracts/contracts/RaffleDappBook.sol,"RaffleDappBook(string _prizeName, uint _numPrizes);nextStage();closeRegistration();generateNewTicket(address userAddress);remove(uint index);generate_random(uint maxNum, string salt);randomChoiceFromticketPool();distributePrizes();getNumUsers();getNumTickets();getStage()"
TruLtd/tru-reputation-token,src/0.1.6/TruReputationTokenFull.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);isValid(address input);toString(address input);addressLength(address input);Ownable();transferOwnership(address newOwner);balanceOf(address who);transfer(address to, uint256 value);transfer(address _to, uint256 _value);balanceOf(address _owner);allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);increaseApproval(address _spender, uint _addedValue);decreaseApproval(address _spender, uint _subtractedValue);setReleaseAgent(address addr);setTransferAgent(address addr, bool state);releaseTokenTransfer();mint(address _to, uint256 _amount);finishMinting(bool _presale, bool _sale);isUpgradeAgent();upgradeFrom(address _from, uint256 _value);TruUpgradeableToken(address _upgradeMaster);upgrade(uint256 _value);setUpgradeAgent(address _agent);getUpgradeState();setUpgradeMaster(address _master);canUpgrade();TruReputationToken();changeBoardAddress(address _newAddress);canUpgrade();setUpgradeMaster(address _master)"
TruLtd/tru-reputation-token,src/0.1.8/TruReputationTokenFull.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);isValid(address input);toString(address input);addressLength(address input);Ownable();transferOwnership(address newOwner);balanceOf(address who);transfer(address to, uint256 value);transfer(address _to, uint256 _value);balanceOf(address _owner);allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);increaseApproval(address _spender, uint _addedValue);decreaseApproval(address _spender, uint _subtractedValue);setReleaseAgent(address addr);setTransferAgent(address addr, bool state);releaseTokenTransfer();mint(address _to, uint256 _amount);finishMinting(bool _presale, bool _sale);isUpgradeAgent();upgradeFrom(address _from, uint256 _value);TruUpgradeableToken(address _upgradeMaster);upgrade(uint256 _value);setUpgradeAgent(address _agent);getUpgradeState();setUpgradeMaster(address _master);canUpgrade();TruReputationToken();changeBoardAddress(address _newAddress);canUpgrade();setUpgradeMaster(address _master)"
A-StadLabs/testingEthereum,node_modules/hooked-web3-provider/contracts/Example.sol,Example();set(uint new_value)
genecyber/RibbitFlow,node_modules/hooked-web3-provider/contracts/Example.sol,Example();set(uint new_value)
michinbear/solidity,test/compilationTests/gnosis/Oracles/UltimateOracleFactory.sol,""
elementrem/solidity,test/compilationTests/gnosis/Oracles/UltimateOracleFactory.sol,""
QTBlockchain/SolidityNWeb3,SmartContracts/HelloTruffle/contracts/SampleContract.sol,SampleContract()
jellegerbrandy/daostack,contracts/zeppelin-solidity/test-helpers/StoppableMock.sol,StoppableMock();normalProcess();drasticMeasure()
WingsDao/contracts,contracts/zeppelin/test-helpers/StoppableMock.sol,StoppableMock();normalProcess();drasticMeasure()
jmeis/solidity-examples,contracts/voting.sol,Ballot(bytes32[] proposalNames);giveRightToVote(address voter);delegate(address to);vote(uint proposal);winningProposal()
jmeis/solidity,contracts/voting.sol,Ballot(bytes32[] proposalNames);giveRightToVote(address voter);delegate(address to);vote(uint proposal);winningProposal()
bobsummerwill/cpp-ethereum,test/libethereum/test/performance/rc5.sol,"shift_left(uint v, uint n);shift_right(uint v, uint n);rotate_left(uint v, uint n);rotate_right(uint v, uint n);expand(uint[] L);encrypt(uint[] inout);decrypt(uint[] inout)"
rsksmart/rskj,rskj-core/TestGeneration/performance/rc5.sol,"shift_left(uint v, uint n);shift_right(uint v, uint n);rotate_left(uint v, uint n);rotate_right(uint v, uint n);expand(uint[] L);encrypt(uint[] inout);decrypt(uint[] inout)"
libdeos/deos-rsksmart,lib/rskj/rskj-core/TestGeneration/performance/rc5.sol,"shift_left(uint v, uint n);shift_right(uint v, uint n);rotate_left(uint v, uint n);rotate_right(uint v, uint n);expand(uint[] L);encrypt(uint[] inout);decrypt(uint[] inout)"
erooijak/ethlance,resources/public/contracts/src/ethlanceSponsor.sol,"EthlanceSponsor(address _ethlanceDB);refundJobSponsorships(uint jobId, uint limit)"
redsquirrel/augur-core,src/factories/RegistrationTokenFactory.sol,"createRegistrationToken(Controller _controller, ReportingWindow _reportingWindow)"
Project-WikiGit/WikiGit,dev/contracts/vault.sol,"payoutPendingWithdrawl(uint _id);invalidatePendingWithdrawl(uint _id);changeFreezeTime(uint _newTime, bool _isReward);getPendingWithdrawlListCount()"
SilentCicero/wafr,src/tests/solidityTests/beforeAfterEach/test.after_.sol,setup();afterEach()
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/examples/PullPaymentBid.sol,bid()
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/examples/PullPaymentBid.sol,bid()
manishbisht/Udacity,Blockchain Developer Nanodegree/P7 - FlightSurety/contracts/FlightSuretyApp.sol,"isOperational();registerAirline(address newAirline);isAirlineRegistered(address newAirline);activateAirline(address airlineAddress);isAirlineActivated(address airlineAddress);getActiveAirlines();buyInsurance(address airline, string flight, uint256 timestamp, address passenger);claimInsuranceAmount(address airline, string flight, uint256 timestamp, address passenger);withdrawAmount();processFlightStatus(address airline, string memory flight, uint256 timestamp, uint8 statusCode);fetchFlightStatus(address airline, string flight, uint256 timestamp);registerOracle();getMyIndexes();submitOracleResponse(uint8 index, address airline, string flight, uint256 timestamp, uint8 statusCode);getFlightKey(address airline, string flight, uint256 timestamp);generateIndexes(address account);getRandomIndex(address account)"
zetherz/eth-match,test/helpers/ReentrancyAttack.sol,callSender(bytes4 data)
e-nettet/CustomerConsentWallet,contracts/SimpleConsent.sol,"SimpleConsent(string _id, address _customer, address _data_owner);requestConsent();giveConsent();rejectConsent()"
papyrusglobal/smartcontracts,contracts/registry/ChannelParticipantRegistry.sol,register(bytes publicKey);destroy();getParticipantId(address participant);getCount();getAddress(uint64 participantId);getPublicKey(uint64 participantId)
redsquirrel/augur-core,src/extensions/MarketFetcher.sol,stub()
Vorxil/EthereumCharge,owned.sol,Owned();kill()
winsvega/libethereum,test/performance/loop.sol,loop()
doublethinkco/cpp-ethereum,test/libethereum/test/performance/loop.sol,loop()
bobsummerwill/cpp-ethereum,test/performance/loop.sol,loop()
LefterisJP/libethereum,test/performance/loop.sol,loop()
rsksmart/rskj,rskj-core/TestGeneration/performance/loop.sol,loop()
libdeos/deos-rsksmart,lib/rskj/rskj-core/TestGeneration/performance/loop.sol,loop()
ChronoBank/LX-SC,contracts/RatingsAndReputationLibrary.sol,"hasArea(address _user, uint _area);hasCategory(address _user, uint _area, uint _category);hasSkill(address _user, uint _area, uint _category, uint _skill);getJobState(uint _jobId);getJobClient(uint _jobId);getJobWorker(uint _jobId);getJobSkillsArea(uint _jobId);getJobSkillsCategory(uint _jobId);getJobSkills(uint _jobId);getFinalState(uint _jobId);isActivatedState(uint _jobId, uint _jobState);getUserStatus(uint _boardId, address _user);getJobsBoard(uint _jobId);setupEventsHistory(address _eventsHistory);setJobController(address _jobController);setUserLibrary(address _userLibrary);setBoardController(address _boardController);getUserRating(address _rater, address _to);setUserRating(address _to, uint8 _rating);getJobRating(address _to, uint _jobId);getBoardRating(address _rater, uint _boardId);_checkAreaAndCategory(uint _jobId, uint _area, uint _category);getAreaEvaluation(address _to, uint _area, address _rater);evaluateArea(address _to, uint8 _rating, uint _area);_evaluateArea(address _to, uint8 _rating, uint _area);getCategoryEvaluation(address _to, uint _area, uint _category, address _rater);evaluateCategory(address _to, uint8 _rating, uint _area, uint _category);_evaluateCategory(address _to, uint8 _rating, uint _area, uint _category);getSkillEvaluation(address _to, uint _area, uint _category, uint _skill, address _rater);evaluateSkill(address _to, uint8 _rating, uint _area, uint _category, uint _skill);_evaluateSkill(address _to, uint8 _rating, uint _area, uint _category, uint _skill);evaluateMany(address _to, uint _areas, uint[] _categories, uint[] _skills, uint8[] _rating);emitUserRatingGiven(address _rater, address _to, uint _rating);emitBoardRatingGiven(address _rater, uint _to, uint8 _rating);emitJobRatingGiven(address _rater, address _to, uint _jobId, uint8 _rating);emitSkillRatingGiven(address _rater, address _to, uint8 _rating, uint _area, uint _category, uint _skill, uint _jobId);emitAreaEvaluated(address _rater, address _to, uint8 _rating, uint _area);emitCategoryEvaluated(address _rater, address _to, uint8 _rating, uint _area, uint _category);emitSkillEvaluated(address _rater, address _to, uint8 _rating, uint _area, uint _category, uint _skill);_emitUserRatingGiven(address _rater, address _to, uint _rating);_emitBoardRatingGiven(address _rater, uint _to, uint8 _rating);_emitJobRatingGiven(address _rater, address _to, uint _jobId, uint8 _rating);_emitSkillRatingGiven(address _rater, address _to, uint8 _rating, uint _area, uint _category, uint _skill, uint _jobId);_emitAreaEvaluated(address _rater, address _to, uint8 _rating, uint _area);_emitCategoryEvaluated(address _rater, address _to, uint8 _rating, uint _area, uint _category);_emitSkillEvaluated(address _rater, address _to, uint8 _rating, uint _area, uint _category, uint _skill);_validRating(uint8 _rating)"
alice-si/contracts,contracts/alice/impact/ImpactRegistry.sol,"registerDonation(address _from, uint _value);setMasterContract(address _contractAddress);setLinker(ImpactLinker _linker);registerOutcome(bytes32 _claimId, uint _value);linkImpact(bytes32 _claimId);payBack(address _account);registerImpact(bytes32 _claimId, uint _accountIndex, uint _linkedValue);updateBalance(uint _index, uint _linkedValue);getAccountsCount();getAccount(uint _index);getBalance(address _donorAddress);getImpactCount(bytes32 _claimId);getImpactLinked(bytes32 _claimId);getImpactTotalValue(bytes32 _claimId);getImpactUnmatchedValue(bytes32 _claimId);getImpactDonor(bytes32 _claimId, uint index);getImpactValue(bytes32 _claimId, address addr)"
robmyers/artworld-ethereum,dapps/pay-previous-path/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
FedCoup/FedCoup,installed_contracts/zeppelin/contracts/ownership/Claimable.sol,transferOwnership(address newOwner);claimOwnership()
ConsenSys/etherMAX,backend/contracts/StandardToken.sol,"sendCoin(uint _value, address _to);sendCoinFrom(address _from, uint _value, address _to);coinBalance();coinBalanceOf(address _addr);approve(address _addr);approveOnce(address _addr, uint256 _maxValue);unapprove(address _addr);isApproved(address _proxy);isApprovedFor(address _target, address _proxy);StandardToken(uint _initialAmount);sendCoin(uint _value, address _to);sendCoinFrom(address _from, uint _value, address _to);coinBalance();coinBalanceOf(address _addr);approve(address _addr);approveOnce(address _addr, uint256 _maxValue);unapprove(address _addr);isApproved(address _proxy);isApprovedFor(address _target, address _proxy)"
daragao/FirstEthereumExperiment,contracts/libTest.sol,hello()
FedCoup/FedCoup,installed_contracts/zeppelin/contracts/token/LimitedTransferToken.sol,"transferableTokens(address holder, uint64 time);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);transferableTokens(address holder, uint64 time)"
PeculiumPCL/Peculium,contracts/v1.0/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
PeculiumPCL/Peculium,contracts/v1.1/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
PeculiumPCL/Peculium,contracts/v1.2/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
PeculiumPCL/Peculium,contracts/v2/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
daukantas/cpp-ethereum,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
BreemsEmporiumMensToiletriesFragrances/cpp-ethereum,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
LefterisJP/cpp-ethereum,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
alexvandesande/cpp-ethereum,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
anthony-cros/cpp-ethereum,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
cyperx/cpp-ethereum,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
Sorceror32/.-git-clone-https-github.com-ethereum-cpp-ethereum,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
PaulGrey30/go-get--u-github.com-tools-godep,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
hanyoungpark/cpp-ethereum,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
gluk256/libethereum,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
Sorceror32/go-get--u-github.com-tools-godep,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
Bitorious/Genoil-cpp-ethereum,test/PerformaceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
vaporry/libethereum,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
winsvega/libethereum,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
chfast/libethereum,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
expanse-project/cpp-expanse,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
imapp-pl/cpp-ethereum,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
pompomJuice/cpp-ethereum,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
tjade273/cpp-ethereum,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
EarthDollar/farmer,libethereum/test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
joeldo/cpp-ethereum,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
smartbitcoin/cpp-ethereum,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
ethers/cpp-ethereum,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
cinnamoncoin/cpp-ethereum,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
doublethinkco/cpp-ethereum,test/libethereum/test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
gluk256/cpp-ethereum,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
bobsummerwill/cpp-ethereum,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
eco/cpp-ethereum,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
CJentzsch/libethereum,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
kleetus/cpp-ethereum,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
chriseth/cpp-ethereum,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
mancoast/libethereum,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
subtly/cpp-ethereum-micro,test/PerformaceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
yann300/cpp-ethereum,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
karek314/cpp-ethereum,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
d-das/cpp-ethereum,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
tpruvot/cpp-ethereum,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
chriseth/libethereum,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
xeddmc/cpp-ethereum,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
vaporry/cpp-ethereum,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
expanse-org/cpp-expanse,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
ashleyblackmore/cpp-ethereum,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
LianaHus/cpp-ethereum,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
PaulGrey30/.-git-clone-https-github.com-ethereum-cpp-ethereum,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
AmericanSundown/cpp-ethereum,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
LefterisJP/libethereum,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
arkpar/libethereum,test/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
rsksmart/rskj,rskj-core/TestGeneration/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
libdeos/deos-rsksmart,lib/rskj/rskj-core/TestGeneration/libevm/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
adrianbrink/tendereum,vendor/github.com/cosmos/tendereum/vendor/github.com/ethereum/go-ethereum/tests/testdata/src/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
adrianbrink/tendereum,vendor/github.com/ethereum/go-ethereum/tests/testdata/src/VMTestsFiller/performanceTester.sol,"ackermann(uint m, uint n);fibonacci(uint n)"
EMAXio/cosigner,cosigner-ethereum-token-storage/SolidityContracts/Old/TokenStorageContract.sol,"calculateTxHash();calculateHash(address[] hashTransactions, uint[] hashValues);calculateAdminTxHash();confirmTransactionSig();confirmTransaction();confirmAdminTx(uint nonce);ownerIndexBit(address addr);getNonce();getSecurityValue();isOwner(address addr);getOwners();min(uint val1, uint val2);max(uint val1, uint val2);balanceOf(address _owner);totalSupply();freezeContract(bool freeze, uint nonce, uint8[] sigV, bytes32[] sigR, bytes32[] sigS);deleteContract(uint nonce, uint8[] sigV, bytes32[] sigR, bytes32[] sigS);deposit(address _to, uint256 _value);revoke(bytes32 _operation);clearPending();transfer(address _from, address _to, uint _value);transfer(address _to, uint _value);confirm(bytes32 _h);confirmAndCheck(bytes32 _operation)"
Braveno/cosigner,cosigner-ethereum-token-storage/SolidityContracts/Old/TokenStorageContract.sol,"calculateTxHash();calculateHash(address[] hashTransactions, uint[] hashValues);calculateAdminTxHash();confirmTransactionSig();confirmTransaction();confirmAdminTx(uint nonce);ownerIndexBit(address addr);getNonce();getSecurityValue();isOwner(address addr);getOwners();min(uint val1, uint val2);max(uint val1, uint val2);balanceOf(address _owner);totalSupply();freezeContract(bool freeze, uint nonce, uint8[] sigV, bytes32[] sigR, bytes32[] sigS);deleteContract(uint nonce, uint8[] sigV, bytes32[] sigR, bytes32[] sigS);deposit(address _to, uint256 _value);revoke(bytes32 _operation);clearPending();transfer(address _from, address _to, uint _value);transfer(address _to, uint _value);confirm(bytes32 _h);confirmAndCheck(bytes32 _operation)"
EMAXio/heimdal,cosigner-ethereum-token-storage/SolidityContracts/Old/TokenStorageContract.sol,"calculateTxHash();calculateHash(address[] hashTransactions, uint[] hashValues);calculateAdminTxHash();confirmTransactionSig();confirmTransaction();confirmAdminTx(uint nonce);ownerIndexBit(address addr);getNonce();getSecurityValue();isOwner(address addr);getOwners();min(uint val1, uint val2);max(uint val1, uint val2);balanceOf(address _owner);totalSupply();freezeContract(bool freeze, uint nonce, uint8[] sigV, bytes32[] sigR, bytes32[] sigS);deleteContract(uint nonce, uint8[] sigV, bytes32[] sigR, bytes32[] sigS);deposit(address _to, uint256 _value);revoke(bytes32 _operation);clearPending();transfer(address _from, address _to, uint _value);transfer(address _to, uint _value);confirm(bytes32 _h);confirmAndCheck(bytes32 _operation)"
Dicoiner/irianna-solidity,contracts/Findel/GatewayTrue.sol,newProof();newValue()
web3j/web3j-maven-plugin,src/test/resources/import-with-path/contracts/Main.sol,""
EthereumEx/blockchain-060,Contracts/AssetTransfer.sol,Asset(string description);TransferOwnership(address nextOwner);RequstOwnership()
Codewars/codewars-runner,frameworks/ethereum/contracts/Purchase.sol,Purchase();abort();confirmPurchase();confirmReceived()
Codewars/codewars-runner-cli,frameworks/ethereum/contracts/Purchase.sol,Purchase();abort();confirmPurchase();confirmReceived()
OverZealous/codewars-runner-cli,frameworks/ethereum/contracts/Purchase.sol,Purchase();abort();confirmPurchase();confirmReceived()
adridadou/shipia,contracts/Shipia.sol,"Shipia();reset();initSale(address _seller, address _buyer, uint _price, string cargoDescription);acceptSale();createBill(address _billOwner);transferBill(address transferTo);withdraw();getPrice();getDescription();setRole(address user, UserRole role);getRole(address user);getContractStatus();getBillOwner();getOwner();getBuyer();getSeller();setOwner(address newOwner)"
easyMINE/SmartContracts,contracts/Wallet/EasyMineTokenWallet.sol,"EasyMineTokenWallet();setup(address _easyMineToken, address _withdrawalAddress);withdraw(uint256 requestedAmount);maxPossibleWithdrawal()"
papyrusglobal/smartcontracts,contracts/registry/PublisherRegistry.sol,"register(address owner, address root, string name, string website);update(uint64 publisherId, address owner, address root, string name, string website);registerValidator(uint64 publisherId, address validator);registerDomain(uint64 publisherId, string domain);approveDomain(uint64 publisherId, uint64 domainId);removeDomain(uint64 publisherId, uint64 domainId);registerAppBundle(uint64 publisherId, string appBundle);approveAppBundle(uint64 publisherId, uint64 appBundleId);removeAppBundle(uint64 publisherId, uint64 appBundleId);findByOwnerAddress(address verifier);getOwnerAddress(uint64 publisherId);getPaymentsRootAddress(uint64 publisherId);getName(uint64 publisherId);getWebsite(uint64 publisherId);getValidatorCount(uint64 publisherId);getValidator(uint64 publisherId, uint64 validatorId);getEndpointCount(uint64 publisherId);getEndpoint(uint64 publisherId, uint64 endpointId);isEndpointApproved(uint64 publisherId, uint64 endpointId);isEndpointRemoved(uint64 publisherId, uint64 endpointId)"
TrueBitFoundation/webasm-solidity,contracts/IDisputeResolutionLayer.sol,status(bytes32 gameId)
DavdRoman/Payroll,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
maxxflyer/FLOOD,HyperCoin.sol,"Flood_Standard_Ethereum_Coin(uint initialSupply,string tokenName,string tokenSymbol,uint rew);transfer(address _to, uint256 _value);approve(address _spender, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);transferFrom(address _from, address _to, uint256 _value);setSelfPretorian(address s,address p,address o);manager(uint code,address a,string s,uint256 u,bool b);Simple_Claimable_Temporized_Stake();createOffer(address coinx,uint amountx,uint coeff,bool fixe,uint index);getOffer(address coinx,uint u);getOrder(address coinx,uint u);getPartner(uint u);lockBalance(uint u,bool b);calculator(address coinx,uint pay,uint offer);withdraw(address a);ico()"
FedCoup/FedCoup,installed_contracts/zeppelin/contracts/ownership/Shareable.sol,"Shareable(address[] _owners, uint _required);revoke(bytes32 _operation);getOwner(uint ownerIndex);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);clearPending()"
rfikki/demo-solidity,MultiValidator.sol,MultiValidator();validate(address addr);addOwner(address addr);DataExternalValidation(address validator);addData(uint data_);setValidator(address validator)
Spreadway/core,Prophets/myproject/contracts/ProofOfExistence1.sol,notarize(string document);proofFor(string document)
KPull/eth-membership-tokens,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
michinbear/solidity,test/compilationTests/zeppelin/DayLimit.sol,DayLimit(uint256 _limit);_setDailyLimit(uint256 _newLimit);_resetSpentToday();underLimit(uint256 _value);today()
elementrem/solidity,test/compilationTests/zeppelin/DayLimit.sol,DayLimit(uint256 _limit);_setDailyLimit(uint256 _newLimit);_resetSpentToday();underLimit(uint256 _value);today()
flysonic10/initial-celestial-offering,test/TestAuthentication.sol,testUserCanSignUpAndLogin()
Spreadway/core,flow_auth/test/TestAuthentication.sol,testUserCanSignUpAndLogin()
TOMOAKI12345/Intee,app/client/templates/contracts/savingPoints.sol,savingPoints();saveEther();borrowEther(uint borrowAmount);getFundBalance();getEtherBalance(address account);getFundSPBalance();getSPBalance(address account)
FiatCentralBank/fiatcoin,contracts/ownership/HasNoEther.sol,HasNoEther();reclaimEther()
SafecontractDev/protocol,contracts/bancor_contracts/interfaces/ISmartToken.sol,"disableTransfers(bool _disable);issue(address _to, uint256 _amount);destroy(address _from, uint256 _amount)"
Capillar/capillar-solidity,proof of concept/Capillario.sol,"SendableToken(address _owner, uint _count);totalSupply();balanceOf(address _adr);allowance(address _owner, address _spender);transfer(address _to, uint _amount);transferFrom(address _from, address _to, uint _amount);approve(address _spender, uint _amount);BasicCAP();isMajor(address _test);calculateTransferFee(uint _amount);setMajorQuali(uint _census);setFee(uint _denominator);killToken();totalSupply();balanceOf(address _adr);transferC(address _to, uint _amount);transfer(address _to, uint _amount);updateCarrierData(bytes32 _newData, uint _newSupply);isCompleted();CargoReady();StartShipping();FinishShipping();ConfirmShipment();setOwner(address _newOwner);setCarrier(address _newCarrier);setSender(address _newSender);setReciever(address _newRecieverr);kill();addService(bytes32 _data, uint _price);serviceSetPrice(uint _servID, uint _newPrice);serviceSetCarrier(uint _servID, address _newCarrier);reserveService(uint _servID);startShipment(uint _servID, bytes32 _cargo, address _sender, address _reciever);terminateService(uint _servID);balanceOf(address _account);burnBalance(address _account);Cappilario();setICOAddress(address _ico);withdrawICO();applicationRewardInfo(uint appID);newApplication(bytes32 _data, uint _supply, uint _reward);newApplicationM(bytes32 _data, uint _supply);changeApplicationReward(uint _appID, uint _newReward);cancelApplication(uint _appID);approveApplication(uint _appID);createTrans(uint _appID, string _name, string _symbol, uint8 _decimals)"
aragon/aragon-core,contracts/common/EtherTokenConstant.sol,""
cinderblockchain/cindertoken,contracts/CinderTokenSale.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);Ownable();transferOwnership(address newOwner);pause();unpause();balanceOf(address who);transfer(address to, uint256 value);allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);transfer(address _to, uint256 _value);balanceOf(address _owner);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);increaseApproval(address _spender, uint _addedValue);decreaseApproval(address _spender, uint _subtractedValue);mint(address _to, uint256 _amount);finishMinting();CinderToken();Crowdsale(uint256 _startTime, uint256 _endTime, uint256 _rate, address _wallet);createTokenContract();buyTokens(address beneficiary);forwardFunds();validPurchase();hasEnded();finalize();finalization();CappedCrowdsale(uint256 _cap);validPurchase();hasEnded();SplitPhaseDistribution(uint256 _startTime, uint256 _endTime, uint256 _secondaryStartTime, uint256 _secondaryEndTime, uint256 _rate, uint256 _secondaryRate, uint256 _cap, uint256 _secondaryCap, address _wallet);createTokenContract();buyTokens(address beneficiary);adjustRate(uint256 _rate);changeWallet(address _wallet);_isActive();isActive();validPurchase();hasEnded();CinderTokenSale()"
tls-n/BTCPriceFeed,contracts/imported/bytesutils.sol,"memcpy(uint dest, uint src, uint len);toSlice(bytes self);addOffset(slice self, uint32 offset);toSlice(bytes self, uint32 offset);len(bytes32 self);copy(slice self);toBytes(slice self);toString(slice self);len(slice self);empty(slice self);compare(slice self, slice other);equals(slice self, slice other);nextRune(slice self, slice rune);nextRune(slice self);ord(slice self);keccak(slice self);startsWith(slice self, slice needle);beyond(slice self, slice needle);endsWith(slice self, slice needle);until(slice self, slice needle);findPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);rfindPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);find(slice self, slice needle);rfind(slice self, slice needle);split(slice self, slice needle, slice token);split(slice self, slice needle);rsplit(slice self, slice needle, slice token);rsplit(slice self, slice needle);count(slice self, slice needle);contains(slice self, slice needle);concat(slice self, slice other);truncate(slice self, uint new_len);join(slice self, slice[] parts)"
ConsenSys/dao-wars,contracts/CreatureBuilder.sol,build_creature()
janx/ruby-ethereum,test/contracts/contract_names.sol,""
cryptape/ruby-ethereum,test/contracts/contract_names.sol,""
se3000/ruby-ethereum,test/contracts/contract_names.sol,""
stevejaxon/ethereum-tutorials,contracts/cryptozombies/ZombieFeeding.sol,"setKittyContractAddress(address _address);_triggerCooldown(Zombie storage _zombie);_isReady(Zombie storage _zombie);feedAndMultiply(uint _zombieId, uint _targetDna, string _species);feedOnKitty(uint _zombieId, uint _kittyId)"
ChronoBank/LX-SC,contracts/BalanceHolder.sol,"deposit(address _from, uint _value, ERC20Interface _contract);withdraw(address _to, uint _value, ERC20Interface _contract);withdrawETH(address _to, uint _amount)"
Henri93/PennBlockchain-Smart-Contracts,Token EX/contracts/TokenExchange.sol,"depositToken(address _token, uint _amount);sellTokens(address _token, uint _amount, uint _costPerToken);buyToken(address _seller, address _token, uint _amount);withdrawToken(address _token, uint _amount);withdrawEther();getTokenBalance(address _owner, address _token);getEtherBalance(address _owner)"
globaljobcoin/GJC,contracts/token/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
Dicoiner/irianna-solidity,test/helpers/RefundableCrowdsaleImpl.sol,""
shahankhatch/weifund-contracts,src/contracts/tests/wafr/test.StandardCampaign.sol,"newContribution(address _campaign, uint256 _value);User();setExpiry(uint _expiry);addTimeToExpiry(uint _timeToAdd);setFundingGoal(uint256 _fundingGoal);getNow();setSrc(address _src);setTrg(address _trg);payForward();test_userSetup();test_standardCampaignConstructionValuesFailsDueToNoParameterValidation();test_testableStandardCampaignAbsolvementAfterPayout();test_testablestandardcampaignDeploymentAndUse();test_testableStandardCampaignContribution();test_testableStandardCampaignPayoutToBeneficiary();test_testableStandardCampaignRefund();testThrow_testableContributionCaseExpectFailure();testThrow_testablePayoutCaseShouldBeFailure();test_standardCampaignDeploymentAndUse()"
iam-dev/ERC23,contracts/token/Standard23Token.sol,"transferFrom(address _from, address _to, uint256 _value, bytes _data);transferFrom(address _from, address _to, uint256 _value);transferFromInternal(address _from, address _to, uint256 _value)"
eddieoz/workshop-rootstock-labitconf2016,contracts/pokecoin.sol,"receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);owned();transferOwnership(address newOwner);updatePokeMarketAddress(address marketAddress);Pokecoin( uint256 initialSupply, address account1Demo, address account2Demo);transfer(address _to, uint256 _value);issueNew(uint256 newSupply);vanishCoins(uint256 qtdCoinsToDelete);transferFrom(address _from, address _to, uint256 _value)"
daostack/daostack,contracts/schemes/RageQuitWithToken.sol,rageQuit(uint256 _amountToRageQuitWith)
ethermarket/democracy,src/democracy/ownersDb.sol,OwnersDb();addOwner(address newOwner);removeOwner(address owner)
ryepdx/etherlab,lib/democracy/ownersDb.sol,OwnersDb();addOwner(address newOwner);removeOwner(address owner)
reiven/nerdearla17---solidity,contracts/users.sol,"isUser(address userAddress);insertUser(address userAddress, string userEmail, uint userAge);getUser(address userAddress);updateUserEmail(address userAddress, string userEmail);updateUserAge(address userAddress, uint userAge);getUserCount();getUserAtIndex(uint index)"
readevalprint/aragon-core,contracts/TestToken.sol,""
Vourhey/learning-center,sol/Lesson_3.sol,execute(Token _token)
PeculiumPCL/Peculium,contracts/v2/PeculiumOld.sol,"PeculiumOld();defrostToken();transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);freezeAccount(address target, bool canSell);approveAndCall(address _spender, uint256 _value, bytes _extraData);getBlockTimestamp();getOwnerInfos()"
SerCeMan/intellij-solidity,src/test/resources/fixtures/parser/mapInvoke.sol,MyToken()
bitcoinmeetups/dapp-bin,registrar/registrar.sol,"getAddress(string32 _name);getName(address _owner);owner(string32 _name);addr(string32 _name);register(string32 _name);content(string32 _name);name(address _owner);Registrar();reserve(string32 _name);transfer(string32 _name, address _newOwner);unregister(string32 _name);setAddress(string32 _name, address _a, bool _primary);setRegister(string32 _name, address _registrar);setContent(string32 _name, hash _content);record(string32 _name);owner(string32 _name);addr(string32 _name);register(string32 _name);content(string32 _name);name(address _owner);unregister(string32 _name);setAddress(string32 _name, address _a, bool _primary);setRegister(string32 _name, address _registrar);setContent(string32 _name, hash _content);record(string32 _name);addr(string32 _name);register(string32 _name);content(string32 _name);name(address _owner)"
TruLtd/tru-reputation-token,src/current/TruAddressFull.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);isValid(address input);toString(address input);addressLength(address input)"
TruLtd/tru-reputation-token,src/0.1.12/TruAddressFull.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);isValid(address input);toString(address input);addressLength(address input)"
papyrusglobal/smartcontracts,contracts/registry/AdvertiserRegistry.sol,"register(address owner, address root, string name, string website);update(uint64 advertiserId, address owner, address root, string name, string website);registerValidator(uint64 advertiserId, address validator);registerDomain(uint64 advertiserId, string domain);approveDomain(uint64 advertiserId, uint64 domainId);removeDomain(uint64 advertiserId, uint64 domainId);registerAppBundle(uint64 advertiserId, string appBundle);approveAppBundle(uint64 advertiserId, uint64 appBundleId);removeAppBundle(uint64 advertiserId, uint64 appBundleId);findByOwnerAddress(address verifier);getOwnerAddress(uint64 advertiserId);getPaymentsRootAddress(uint64 advertiserId);getName(uint64 advertiserId);getWebsite(uint64 advertiserId);getValidatorCount(uint64 advertiserId);getValidator(uint64 advertiserId, uint64 validatorId);getEndpointCount(uint64 advertiserId);getEndpoint(uint64 advertiserId, uint64 endpointId);isEndpointApproved(uint64 advertiserId, uint64 endpointId);isEndpointRemoved(uint64 advertiserId, uint64 endpointId)"
BeBlockTech/Anemoi,Master/Contracts/presale.sol,"safeAdd(uint256 x, uint256 y);safeSubtract(uint256 x, uint256 y);safeMult(uint256 x, uint256 y);Anemoi();setWhiteList(address _whitelisted);removeWhiteList(address _whitelisted);finalize()"
BeBlockTech/Anemoi,Test/Presale/presale.sol,"safeAdd(uint256 x, uint256 y);safeSubtract(uint256 x, uint256 y);safeMult(uint256 x, uint256 y);Anemoi();setWhiteList(address _whitelisted);removeWhiteList(address _whitelisted);finalize()"
EMAXio/cosigner,cosigner-ethereum-token-storage/SolidityContracts/V4/StorageEther.sol,"deposit(address to);internalTransfer();balanceOf(address owner);deleteContract(uint8[] sigV, bytes32[] sigR, bytes32[] sigS);topUp()"
Braveno/cosigner,cosigner-ethereum-token-storage/SolidityContracts/V4/StorageEther.sol,"deposit(address to);internalTransfer();balanceOf(address owner);deleteContract(uint8[] sigV, bytes32[] sigR, bytes32[] sigS);topUp()"
EMAXio/heimdal,cosigner-ethereum-token-storage/SolidityContracts/V4/StorageEther.sol,"deposit(address to);internalTransfer();balanceOf(address owner);deleteContract(uint8[] sigV, bytes32[] sigR, bytes32[] sigS);topUp()"
gmo-blockchain/solidity,contracts/AddressGroup_v1.sol,"create(bytes32 _id, address _owner, address[] _members, address _cns, bytes32 _contractName);remove(bytes32 _id);exist(bytes32 _id);isActive(bytes32 _id);addAllowCnsContract(bytes32 _id, address _cns, bytes32 _contractName);removeAllowCnsContract(bytes32 _id, address _cns, bytes32 _contractName);isAllowCnsContract(address _cns, bytes32 _contractName, bytes32 _id);setOwner(bytes32 _id, address _new);getOwner(bytes32 _id);addMembers(bytes32 _id, address[] _members);removeMembers(bytes32 _id, address[] _members);isMember(address _account, bytes32 _id);addChild(bytes32 _id, bytes32 _child);removeChild(bytes32 _id, bytes32 _child);getChild(bytes32 _id, uint _idx);getChildrenLength(bytes32 _id)"
hoxxep/Ethereum-2FA,contracts/Migrations.sol,setCompleted(uint256 completed);upgrade(address newAddress)
asinyagin/solidity,std/StandardToken.sol,"StandardToken(address _initialOwner, uint256 _supply);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value)"
dacplayproject/play-dapp,src/FloatGameToken.t.sol,setUp();testFail_basic_sanity();test_token_creation()
slockit/DAO,PFOffer.sol,getTotalCost();getInitialWithdrawal();getMinDailyWithdrawalLimit();getDailyWithdrawalLimit();getContractor();getHashOfTheProposalDocument();getLastWithdrawal();getDateOfSignature();getClient();getOriginalClient();getIsContractValid();getInitialWithdrawalDone();getWasApprovedBeforeDeadline();getProposalID();sign();setDailyWithdrawLimit(uint128 _dailyWithdrawalLimit);terminate();withdraw();performInitialWithdrawal();watchProposal(uint _proposalID);checkVoteStatus();updateClientAddress(DAO _newClient)
orbro/eth-enablers,DAO-develop/PFOffer.sol,getTotalCost();getInitialWithdrawal();getMinDailyWithdrawalLimit();getDailyWithdrawalLimit();getContractor();getHashOfTheProposalDocument();getLastWithdrawal();getDateOfSignature();getClient();getOriginalClient();getIsContractValid();getInitialWithdrawalDone();getWasApprovedBeforeDeadline();getProposalID();sign();setDailyWithdrawLimit(uint128 _dailyWithdrawalLimit);terminate();withdraw();performInitialWithdrawal();watchProposal(uint _proposalID);checkVoteStatus();updateClientAddress(DAO _newClient)
Spreadway/core,DAO-develop/PFOffer.sol,getTotalCost();getInitialWithdrawal();getMinDailyWithdrawalLimit();getDailyWithdrawalLimit();getContractor();getHashOfTheProposalDocument();getLastWithdrawal();getDateOfSignature();getClient();getOriginalClient();getIsContractValid();getInitialWithdrawalDone();getWasApprovedBeforeDeadline();getProposalID();sign();setDailyWithdrawLimit(uint128 _dailyWithdrawalLimit);terminate();withdraw();performInitialWithdrawal();watchProposal(uint _proposalID);checkVoteStatus();updateClientAddress(DAO _newClient)
ashellwig/Ethereum-Mutual-Fund,PFOffer.sol,getTotalCost();getInitialWithdrawal();getMinDailyWithdrawalLimit();getDailyWithdrawalLimit();getContractor();getHashOfTheProposalDocument();getLastWithdrawal();getDateOfSignature();getClient();getOriginalClient();getIsContractValid();getInitialWithdrawalDone();getWasApprovedBeforeDeadline();getProposalID();sign();setDailyWithdrawLimit(uint128 _dailyWithdrawalLimit);terminate();withdraw();performInitialWithdrawal();watchProposal(uint _proposalID);checkVoteStatus();updateClientAddress(DAO _newClient)
zchn/ethereum-analyzer,examples/co2.unica.it/ethereum/SendTest.sol,"pay(uint n, address d);a();b();c();d();e();f();g();h();i();k();j();l();m();n();o();p();q();r();s();t();u();v();w();x();y();z()"
fuxiaoghost/dawntech.top,src/sols/Footmark.sol,"Footmark();leaveMessage(string text,address to);enter(string text);lookupFrom(address from);lookupTo(address to)"
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.4.24/deleteDynamicArray.sol,"addUser(uint id, byte rights);resetState();bla(string bal)"
QTBlockchain/SolidityNWeb3,patterns/contracts/SelfDestruct.sol,SelfDestruct();setValue(string value);killContract()
victorsintnicolaas/RVR,contracts/RVRControlled.sol,remove(address owner)
SilentCicero/wafr,src/tests/solidityTests/gasUsage/test.gasUsage.sol,deployBoard()
DRI-project/RICO,contracts/PoDs/RICOStandardPoD.sol,"RICOStandardPoD();processDonate(address _user);distributeWei(uint _index, uint256 _amount);getBalanceOfToken(address _user);resetWeiBalance(address _user)"
DigixGlobal/truffle,build/templates/Example.sol,Example()
SilentCicero/wafr,src/tests/solidityTests/assertTrue/test.assertTrue.import.sol,test_fiveAssertFalse();test_fiveAssertTrue()
y12studio/dltdojo,contracts/ddjat/contracts/DDJXRP.sol,DDJXRP()
FedCoup/FedCoup,installed_contracts/zeppelin/contracts/token/PausableToken.sol,"transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value)"
ChicoBitcoinJoe/MeDao,contracts/external/MiniMeToken.sol,"changeController(address _newController);proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);receiveApproval(address from, uint256 _amount, address _token, bytes memory _data);transfer(address _to, uint256 _amount);balanceOf(address _owner);approve(address _spender, uint256 _amount);totalSupply();balanceOfAt(address _owner, uint _blockNumber);totalSupplyAt(uint _blockNumber);enableTransfers(bool _transfersEnabled);isContract(address _addr);min(uint a, uint b)"
bitcoinmeetups/dapp-bin,pricefeed/pricefeed.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);kill();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();PriceFeed();updateInfo(uint newInfo);setPrice(uint newPrice);get();kill();updateInfo(uint newInfo);setPrice(uint newPrice);get();kill();named(string name);kill();setPrice(uint newPrice);updateInfo(uint newInfo);get()"
chriseth/dapp-bin,pricefeed/pricefeed.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);kill();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();PriceFeed();updateInfo(uint newInfo);setPrice(uint newPrice);get();kill();updateInfo(uint newInfo);setPrice(uint newPrice);get();kill();named(string name);kill();setPrice(uint newPrice);updateInfo(uint newInfo);get()"
shahankhatch/dapp-bin,pricefeed/pricefeed.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);kill();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();PriceFeed();updateInfo(uint newInfo);setPrice(uint newPrice);get();kill();updateInfo(uint newInfo);setPrice(uint newPrice);get();kill();named(string name);kill();setPrice(uint newPrice);updateInfo(uint newInfo);get()"
LianaHus/dapp-bin,pricefeed/pricefeed.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);kill();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();PriceFeed();updateInfo(uint newInfo);setPrice(uint newPrice);get();kill();updateInfo(uint newInfo);setPrice(uint newPrice);get();kill();named(string name);kill();setPrice(uint newPrice);updateInfo(uint newInfo);get()"
RepublicMaster/dapp-bin,pricefeed/pricefeed.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);kill();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();PriceFeed();updateInfo(uint newInfo);setPrice(uint newPrice);get();kill();updateInfo(uint newInfo);setPrice(uint newPrice);get();kill();named(string name);kill();setPrice(uint newPrice);updateInfo(uint newInfo);get()"
frozeman/ethereum-smart-contracts,pricefeed/pricefeed.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);kill();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();PriceFeed();updateInfo(uint newInfo);setPrice(uint newPrice);get();kill();updateInfo(uint newInfo);setPrice(uint newPrice);get();kill();named(string name);kill();setPrice(uint newPrice);updateInfo(uint newInfo);get()"
ethereum/dapp-bin,pricefeed/pricefeed.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);kill();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();PriceFeed();updateInfo(uint newInfo);setPrice(uint newPrice);get();kill();updateInfo(uint newInfo);setPrice(uint newPrice);get();kill();named(string name);kill();setPrice(uint newPrice);updateInfo(uint newInfo);get()"
vaporry/dapp-bin,pricefeed/pricefeed.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);kill();register(string32 name);unregister();addressOf(string32 name);nameOf(address addr);kill();PriceFeed();updateInfo(uint newInfo);setPrice(uint newPrice);get();kill();updateInfo(uint newInfo);setPrice(uint newPrice);get();kill();named(string name);kill();setPrice(uint newPrice);updateInfo(uint newInfo);get()"
alice-si/contracts,contracts/alice/Escapable.sol,escape(ERC20 token);changeEscapeController(address _newEscapeController)
Dicoiner/irianna-solidity,contracts/ownership/NoOwner.sol,""
cgewecke/eth-gas-reporter,mock/contracts/EtherRouter/Factory.sol,deployVersionA();deployVersionB()
GX-Coin/SmartContract,GxRaisesEvents.sol,setEventsContract(address eventsContractAddress)
robmyers/artworld-ethereum,dapps/4x/contracts/FourX.sol,""
mothershipcx/contracts,test/helpers/LeanContribution.sol,"initialize(address _msp);finalize();proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount)"
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/payment/PullPayment.sol,"withdrawPayments();payments(address _dest);asyncTransfer(address _dest, uint256 _amount)"
silasdavis/eris-db,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs9.sol,"addThing(bytes32 description, string memory  url, bytes32 filehash, string memory filename)"
silasdavis/burrow,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs9.sol,"addThing(bytes32 description, string memory  url, bytes32 filehash, string memory filename)"
eris-ltd/eris-db,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs9.sol,"addThing(bytes32 description, string memory  url, bytes32 filehash, string memory filename)"
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/contracts/ownership/HasNoEther.sol,HasNoEther();reclaimEther()
pash7ka/zeppelin-solidity,contracts/ownership/HasNoEther.sol,HasNoEther();reclaimEther()
iswarm/p2pCny,contracts/ownership/HasNoEther.sol,HasNoEther();reclaimEther()
adklempner/solidity-license,contracts/zeppelin/ownership/HasNoEther.sol,HasNoEther();reclaimEther()
readevalprint/aragon-core,contracts/zeppelin/ownership/HasNoEther.sol,HasNoEther();reclaimEther()
pz7/liquet,node_modules/zeppelin-solidity/contracts/ownership/HasNoEther.sol,HasNoEther();reclaimEther()
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/ownership/HasNoEther.sol,HasNoEther();reclaimEther()
dmx374/zeppelin-solidity,contracts/ownership/HasNoEther.sol,HasNoEther();reclaimEther()
cashpokerpro-dev/cash-smartcontracts,contracts/ownership/HasNoEther.sol,HasNoEther();reclaimEther()
cinderblockchain/cindertoken,contracts/ownership/HasNoEther.sol,HasNoEther();reclaimEther()
adamdossa/ProfitSharingContract,installed_contracts/zeppelin/contracts/ownership/HasNoEther.sol,HasNoEther();reclaimEther()
fractalPlatform/Fractal,processor/vm/runtime/contract/Ven/VEN.sol,"Owned();setOwner(address _newOwner);mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);totalSupply();totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);VEN();totalSupply();isSealed();lastMintedTimestamp(address _owner);claimBonus(address _owner);balanceOf(address _owner);transfer(address _to, uint256 _amount);approve(address _spender, uint256 _amount);approveAndCall(address _spender, uint256 _value, bytes _extraData);allowance(address _owner, address _spender);mint(address _owner, uint256 _amount, bool _isRaw, uint32 timestamp);offerBonus(uint256 _bonus);seal();receiveApproval(address _from, uint256 _value, address _tokenContract, bytes _extraData);VENSale();exchangeRate();blockTime();stage();isContract(address _addr);buy();officialSold();channelsSold();offerToChannel(address _channelAccount, uint256 _venAmount);finalize()"
GX-Coin/SmartContract,GxEditable.sol,setEditable(bool editable)
MarketProject/MarketProtocol,contracts/libraries/MathLib.sol,"multiply(uint256 a, uint256 b);subtract(uint256 a, uint256 b);add(uint256 a, uint256 b);add(int256 a, int256 b);subtract(int256 a, int256 b);sign(int a);isSameSign(int a, int b);abs(int256 a);absMin(int256 a, int256 b);absMax(int256 a, int256 b)"
Dicoiner/irianna-solidity,contracts/crowdsale/RefundableCrowdsale.sol,RefundableCrowdsale(uint256 _goal);forwardFunds();claimRefund();finalization();goalReached()
AlexXiong97/dReview,blockchain/StoreRegistry.sol,StoreRegistry();addStore(string _placeID);getStoreAddress(string _placeID)
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/contracts/ownership/NoOwner.sol,""
pash7ka/zeppelin-solidity,contracts/ownership/NoOwner.sol,""
iswarm/p2pCny,contracts/ownership/NoOwner.sol,""
readevalprint/aragon-core,contracts/zeppelin/ownership/NoOwner.sol,""
pz7/liquet,node_modules/zeppelin-solidity/contracts/ownership/NoOwner.sol,""
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/ownership/NoOwner.sol,""
dmx374/zeppelin-solidity,contracts/ownership/NoOwner.sol,""
cashpokerpro-dev/cash-smartcontracts,contracts/ownership/NoOwner.sol,""
cinderblockchain/cindertoken,contracts/ownership/NoOwner.sol,""
daostack/daostack,contracts/test/Wallet.sol,pay(address payable _beneficiary)
mothershipcx/contracts,contracts/MSP.sol,MSP(address _tokenFactory)
TOLegalHackers/StonePaper,app/contracts/stonePaper.sol,"receiveApproval(address _from, uint256 _value, address _token);TwoPersonContract(address oneI, address twoI, bytes32 sigI);getInfo();signOne();signTwo();checkHash(bytes32 hash);isSigned();getName();isVerified(address user);makeSuperVisor(address user);verify(address user);deVerify(address user);Society(string theName, address personC);createNewSociety(string theName);getSociety(uint256 index);StonePaper();getUser(uint256 index);assignLawyer(string name);getLawyer(address lawyer);setDatabase(string url, uint256 database);getDatabase(uint256 database);assignMeta(string name, uint256 meta);addUserToMeta(address newUser, uint256 meta);makeMetaPublic(uint256 meta, bool newState);editMeta(string text, uint256 meta);getMeta(uint256 meta);testMeta(uint256 _index);getLastPaperFromContract(address targetI, address contractI);copyPaper(address toI, uint256 indexI);getPaper(uint256 indexI);getPaperFromMeta(uint256 metaI, uint256 indexI);addSupervisor(address newSuper);resolveSupervisorVote(uint256 index);supervisorVote(uint256 index, bool vote);removeSupervisor(address oldSuper);createReceipt(address accountI, string infoI);getReceipt(address user, uint256 index);GasReceipt(address stonePaperI)"
cryptape/cita,scripts/contracts/src/common/ReservedAddrConstant.sol,""
juchiyama/cmkt,contracts/subscription.sol,"Subscription(bytes _ipfsHash,address _service,bytes _serviceRoot)"
GovernX/governx-contracts,src/contracts/OpenController.sol,"OpenController(address _proxy);canPropose(address _sender, uint256 _proposalID);canVote(address _sender, uint256 _proposalID);canExecute(address _sender, uint256 _proposalID);votingWeightOf(address _sender, uint256 _proposalID, uint256 _index, uint256 _data);hasWon(address _sender, uint256 _proposalID)"
SerCeMan/intellij-solidity,src/test/resources/fixtures/parser/modifiers.sol,abort()
lzxm160/test-dapp,contract/tenancy.sol,"Property(string s, string p);Registry();assignOwnership(address owner, Property property);isPropertyOwner(Property property);Tenancy(Registry registry, Property property, uint32 rent);negotiate(uint32 amount);rejectNegotiation(address prospectiveTenant);acceptNegotiationOwner(address prospectiveTenant)"
raviupreti85/tenancy-dapp,contract/tenancy.sol,"Property(string s, string p);Registry();assignOwnership(address owner, Property property);isPropertyOwner(Property property);Tenancy(Registry registry, Property property, uint32 rent);negotiate(uint32 amount);rejectNegotiation(address prospectiveTenant);acceptNegotiationOwner(address prospectiveTenant)"
daukantas/cpp-ethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
BreemsEmporiumMensToiletriesFragrances/cpp-ethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
LefterisJP/cpp-ethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
alexvandesande/cpp-ethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
anthony-cros/cpp-ethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
cyperx/cpp-ethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
Sorceror32/.-git-clone-https-github.com-ethereum-cpp-ethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
PaulGrey30/go-get--u-github.com-tools-godep,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
hanyoungpark/cpp-ethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
gluk256/libethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
Sorceror32/go-get--u-github.com-tools-godep,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
holiman/cpp-ethereum,test/unittests/libweb3jsonrpc/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
vaporry/libethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
winsvega/libethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
chfast/libethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
expanse-project/cpp-expanse,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
imapp-pl/cpp-ethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
pompomJuice/cpp-ethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
tjade273/cpp-ethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
EarthDollar/farmer,libethereum/test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
joeldo/cpp-ethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
smartbitcoin/cpp-ethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
ethers/cpp-ethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
cinnamoncoin/cpp-ethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
doublethinkco/cpp-ethereum,test/libethereum/test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
gluk256/cpp-ethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
bobsummerwill/cpp-ethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
eco/cpp-ethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
CJentzsch/libethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
kleetus/cpp-ethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
chriseth/cpp-ethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
mancoast/libethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
ethereum/cpp-ethereum,test/unittests/libweb3jsonrpc/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
yann300/cpp-ethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
karek314/cpp-ethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
d-das/cpp-ethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
tpruvot/cpp-ethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
chriseth/libethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
xeddmc/cpp-ethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
vaporry/cpp-ethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
expanse-org/cpp-expanse,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
ashleyblackmore/cpp-ethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
LianaHus/cpp-ethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
PaulGrey30/.-git-clone-https-github.com-ethereum-cpp-ethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
winsvega/cpp-ethereum,test/unittests/libweb3jsonrpc/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
AmericanSundown/cpp-ethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
LefterisJP/libethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
arkpar/libethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
chfast/cpp-ethereum,test/JSON_test.sol,JSON_Test();setBool(bool _bool);setAddress(address _address);getBool();getAddress()
input-output-hk/etc-client,src/it/resources/txExecTest/documentation/contract.sol,Purchase();abort();confirmPurchase();confirmReceived()
aragon/aragon-network-token,packages/v2/mocks/ANT.sol,"totalSupply();balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value);safeMul(uint a, uint b);safeDiv(uint a, uint b);safeSub(uint a, uint b);safeAdd(uint a, uint b);assert(bool assertion);receiveApproval(address _from, uint256 _amount, address _token, bytes _data);Controlled();changeController(address _newController);saleFinalized();SaleWallet(address _multisig, uint _finalBlock, address _tokenSale);withdraw();doWithdraw();proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);ANPlaceholder(address _sale, address _ant);changeController(address network);proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);transfer(address _to, uint256 _amount);balanceOf(address _owner);approve(address _spender, uint256 _amount);totalSupply();balanceOfAt(address _owner, uint _blockNumber);totalSupplyAt(uint _blockNumber);min(uint a, uint b);enableTransfers(bool _transfersEnabled);isContract(address _addr);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);spendableBalanceOf(address _holder);setCanCreateGrants(address _addr, bool _allowed);doSetCanCreateGrants(address _addr, bool _allowed);changeVestingWhitelister(address _newWhitelister);revokeTokenGrant(address _holder, uint _grantId);tokenGrantsCount(address _holder);tokenGrant(address _holder, uint _grantId);vestedTokens(TokenGrant grant, uint64 time);nonVestedTokens(TokenGrant grant, uint64 time);lastTokenIsTransferableDate(address holder);transferableTokens(address holder, uint64 time)"
orbro/eth-enablers,alarmClock.sol,"max(uint a, uint b);getNodeId(Index storage index, bytes32 id);getNodeValue(Index storage index, bytes32 id);getNodeHeight(Index storage index, bytes32 id);getNodeParent(Index storage index, bytes32 id);getNodeLeftChild(Index storage index, bytes32 id);getNodeRightChild(Index storage index, bytes32 id);getPreviousNode(Index storage index, bytes32 id);getNextNode(Index storage index, bytes32 id);insert(Index storage index, bytes32 id, int value);exists(Index storage index, bytes32 id);remove(Index storage index, bytes32 id);_compare(int left, bytes2 operator, int right);_getMaximum(Index storage index, bytes32 id);_getMinimum(Index storage index, bytes32 id);query(Index storage index, bytes2 operator, int value);_rebalanceTree(Index storage index, bytes32 id);_getBalanceFactor(Index storage index, bytes32 id);_updateNodeHeight(Index storage index, bytes32 id);_rotateLeft(Index storage index, bytes32 id);_rotateRight(Index storage index, bytes32 id);addFunds(Bank storage self, address accountAddress, uint value);Deposit(address _from, address accountAddress, uint value);deposit(Bank storage self, address accountAddress, uint value);Withdrawal(address accountAddress, uint value);InsufficientFunds(address accountAddress, uint value, uint balance);deductFunds(Bank storage self, address accountAddress, uint value);withdraw(Bank storage self, address accountAddress, uint value);sendRobust(address toAddress, uint value);sendRobust(address toAddress, uint value, uint maxGas);state(Call storage self);extractCallData(Call storage call, bytes data);checkDepth(uint n);sendSafe(address to_address, uint value);getGasScalar(uint base_gas_price, uint gas_price);cancel(Call storage self, address sender);getClaimAmountForBlock(uint block_number);lastClaimBlock();maxClaimBlock();firstClaimBlock();claim(Call storage self, address executor, uint deposit_amount, uint basePayment);checkExecutionAuthorization(Call storage self, address executor, uint block_number);isCancellable(Call storage self, address caller);beforeExecuteForFutureBlockCall(Call storage self, address executor, uint startGas);state();beforeExecute(address executor, uint startGas);afterExecute(address executor);getOverhead();getExtraGas();contractAddress();abiSignature();callData();callValue();anchorGasPrice();requiredGas();requiredStackDepth();claimer();claimAmount();claimerDeposit();wasSuccessful();wasCalled();isCancelled();getClaimAmountForBlock();getClaimAmountForBlock(uint block_number);registerData();firstClaimBlock();maxClaimBlock();lastClaimBlock();claim();checkExecutionAuthorization(address executor, uint block_number);sendSafe(address to_address, uint value);execute();callAPIVersion();__dig(uint n);beforeExecute(address executor, uint startGas);afterExecute(address executor);getOverhead();getExtraGas();isCancellable();cancel();version();getMinimumStackCheck();getMaximumStackCheck();getCallWindowSize();getMinimumGracePeriod();getDefaultGracePeriod();getMinimumCallGas();getMaximumCallGas();getMinimumCallCost(uint basePayment, uint baseDonation);getFirstSchedulableBlock();_scheduleCall(GroveLib.Index storage callIndex, CallConfig memory callConfig);Scheduler();callAPIVersion();getMinimumGracePeriod();updateDefaultPayment();getDefaultDonation();getMinimumCallGas();getMaximumCallGas();getMinimumEndowment();getMinimumEndowment(uint basePayment);getMinimumEndowment(uint basePayment, uint baseDonation);getMinimumEndowment(uint basePayment, uint baseDonation, uint callValue);getMinimumEndowment(uint basePayment, uint baseDonation, uint callValue, uint requiredGas);isKnownCall(address callAddress);getFirstSchedulableBlock();getMinimumStackCheck();getMaximumStackCheck();getDefaultStackCheck();getDefaultRequiredGas();getDefaultGracePeriod();scheduleCall();scheduleCall(uint targetBlock);scheduleCall(bytes callData);scheduleCall(bytes4 abiSignature);scheduleCall(address contractAddress);getCallWindowSize();getNextCall(uint blockNumber);getNextCallSibling(address callAddress)"
phi-nomenal/phi-nomenal,local_modules/phi-nomenal-contracts/contracts/Product.sol,Product(string name_)
kinfoundation/kin-token,test/helpers/BasicTokenMock.sol,"assign(address _account, uint _balance)"
chriseth/dapp-bin,GlobalRegistrar/contract.sol,"addr(bytes32 _name);name(address _owner);owner(bytes32 _name);addr(bytes32 _name);subRegistrar(bytes32 _name);content(bytes32 _name);name(address _owner);Registrar();reserve(bytes32 _name);transfer(bytes32 _name, address _newOwner);disown(bytes32 _name);setAddress(bytes32 _name, address _a, bool _primary);setSubRegistrar(bytes32 _name, address _registrar);setContent(bytes32 _name, bytes32 _content);owner(bytes32 _name);addr(bytes32 _name);subRegistrar(bytes32 _name);register(bytes32 _name);content(bytes32 _name);name(address _owner)"
pipermerriam/populus,tests/fixtures/Simple.sol,isSimple()
ConsenSys/dapp-store-contracts,contracts/SimpleIndex.sol,"SimpleIndex();set(uint key, uint value);transfer_ownership(address _admin);lookup(uint key)"
EtherDogs/HeritableWallet,contracts/HeritableWallet.sol,"HeritableWallet(address walletBeneficiary, address walletOwner, uint periodInDays);checkIn();setCheckInPeriod(uint periodInDays);sendFunds(address destination, uint amount, bytes data);transferOwnership(address newOwner);setHeir(address heir, uint8 inheritancePoints, uint periodInDays);unlock();claimInheritance();destroy();getOwner();getBeneficiary()"
EtherDogs/PersonalBank,contracts/HeritableWallet.sol,"HeritableWallet(address walletBeneficiary, address walletOwner, uint periodInDays);checkIn();setCheckInPeriod(uint periodInDays);sendFunds(address destination, uint amount, bytes data);transferOwnership(address newOwner);setHeir(address heir, uint8 inheritancePoints, uint periodInDays);unlock();claimInheritance();destroy();getOwner();getBeneficiary()"
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app26-factories_single_constructor_and_overwriting_testing/GSContract.sol,GSContract(uint initialValue);set(uint x);get()
eris-ltd/eris,tests/jobs_fixtures/app26-factories_single_constructor_and_overwriting_testing/GSContract.sol,GSContract(uint initialValue);set(uint x);get()
monax/monax,tests/jobs_fixtures/app26-factories_single_constructor_and_overwriting_testing/GSContract.sol,GSContract(uint initialValue);set(uint x);get()
eris-ltd/eris-cli,tests/jobs_fixtures/app26-factories_single_constructor_and_overwriting_testing/GSContract.sol,GSContract(uint initialValue);set(uint x);get()
monax/cli,tests/jobs_fixtures/app26-factories_single_constructor_and_overwriting_testing/GSContract.sol,GSContract(uint initialValue);set(uint x);get()
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app26-factories_single_constructor_and_overwriting_testing/GSContract.sol,GSContract(uint initialValue);set(uint x);get()
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/contracts/ownership/Contactable.sol,setContactInformation(string info)
pash7ka/zeppelin-solidity,contracts/ownership/Contactable.sol,setContactInformation(string info)
iswarm/p2pCny,contracts/ownership/Contactable.sol,setContactInformation(string info)
readevalprint/aragon-core,contracts/zeppelin/ownership/Contactable.sol,setContactInformation(string info)
pz7/liquet,node_modules/zeppelin-solidity/contracts/ownership/Contactable.sol,setContactInformation(string info)
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/ownership/Contactable.sol,setContactInformation(string info)
dmx374/zeppelin-solidity,contracts/ownership/Contactable.sol,setContactInformation(string info)
cashpokerpro-dev/cash-smartcontracts,contracts/ownership/Contactable.sol,setContactInformation(string info)
cinderblockchain/cindertoken,contracts/ownership/Contactable.sol,setContactInformation(string info)
WingsDao/contracts,contracts/MultiSigWallet/WingsMultisigFactory.sol,addAddress(address account);create(uint required)
gmo-blockchain/solidity,contracts/DataObject.sol,""
dadaista/GorillaSale,contracts/Hello.sol,hello()
mixbytes/storiqa_ico,contracts/STQCrowdsale.sol,"STQCrowdsale(address[] _owners, address _token, address _funds, address _teamTokens);buy();iaOnInvested(address investor, uint payment, bool usingPaymentChannel);pause();unpause();fail();setToken(address _token);setFundsRegistry(address _funds);checkTime();distributeBonuses(uint investorsLimit);createMorePaymentChannels(uint limit);finishICO();changeState(IcoState _newState);onSuccess();onFailure();getLargePaymentBonus(uint payment);calcSTQAmount(uint _wei, uint extraBonus);recordInvestment(address investor, uint payment, uint timeBonus);getStartTime();getEndTime();getCurrentTime();getMinFunds();getMaximumFunds();getTotalInvested();getLastMaxInvestments()"
BlockTube/blocktube-client.0.3,app/contracts/blocktubeFarming.sol,"blocktubeFarming();submitNewClip();getWork(address clipaddress, uint quality);submitWork(address clipaddress,uint quality,string ipfshash);acceptWork(uint quality);kill()"
orbro/eth-enablers,solidity-baby-steps-master/contracts/60_array_receiver_and_returner.sol,ArrayRR();setArray(uint8[10] incoming);getArraySettingResult();getArray();getValue(uint8 x);kill()
MarketProject/MarketProtocol,contracts/tokens/CollateralToken.sol,""
ConsenSys/dao-wars,contracts/Board.sol,"valid_creature(address _creature);Board();num_squares();all_eth();all_creatures();all_obstacles();set_admin(address _admin);set_dimensions(uint x, uint y);set_harvest_amount(uint _harvest_amount);set_game(address _game);replace_square(uint location, bool obstacle, uint _eth, address creature);deposit_eth(uint8 num_deposits, uint amount_per_deposit);add_creature(uint location, address creature);leave_square(uint location);enter_square(uint location);harvest(uint location);spawn(uint location, address creature);report_death(uint location, uint _eth);neighbor(uint location, uint8 direction)"
Spreadway/core,eth/smartcollection-master/Deviser.sol,"owned();Deviser();heartbeat();setHeir(address _heir, uint _timeout);pay(address _to, uint _amount);withdraw()"
Souptacular/smart_contracts,marriage.sol,"owned();createMarriage(bytes32 partner1Entry, bytes32 partner2Entry, uint256 marriageDateEntry, bytes32 status, bytes description);setStatus(bytes32 status);marriageProof(bytes IPFSHash);majorEvent(bytes32 name, bytes description, uint256 eventTimeStamp);returnFunds()"
Neufund/Contracts,test/helpers/OwnedHelper.sol,OwnedHelper()
eris-ltd/eris-db,tests/compilers_fixtures/contractImport3.sol,getMappingElement(uint a)
RealEstateAssetLedger/real_contract,contracts/REAL.sol,REAL(address _tokenFactory)
citizencode/embark-framework,test/support/contracts/token.sol,"token(uint supply);sendCoin(address receiver, uint amount)"
d11e9/embark-framework,test/support/contracts/token.sol,"token(uint supply);sendCoin(address receiver, uint amount)"
jpentland/BitBadge,node_modules/embark-framework/test/support/contracts/token.sol,"token(uint supply);sendCoin(address receiver, uint amount)"
jpentland/BitBadge,node_modules/grunt-embark/node_modules/embark-framework/test/support/contracts/token.sol,"token(uint supply);sendCoin(address receiver, uint amount)"
jeffanthony/embark-framework,test/support/contracts/token.sol,"token(uint supply);sendCoin(address receiver, uint amount)"
SafeMarket/embark-framework,test/support/contracts/token.sol,"token(uint supply);sendCoin(address receiver, uint amount)"
hitchcott/embark-framework,test/support/contracts/token.sol,"token(uint supply);sendCoin(address receiver, uint amount)"
troyth/embark-dappsforbeginners-demo,embark_demo/node_modules/embark-framework/test/support/contracts/token.sol,"token(uint supply);sendCoin(address receiver, uint amount)"
johnkozan/embark-framework,test/support/contracts/token.sol,"token(uint supply);sendCoin(address receiver, uint amount)"
AronVanAmmers/embark-framework,test/support/contracts/token.sol,"token(uint supply);sendCoin(address receiver, uint amount)"
RCasatta/embark-framework,test/support/contracts/token.sol,"token(uint supply);sendCoin(address receiver, uint amount)"
VoR0220/embark-framework,test/support/contracts/token.sol,"token(uint supply);sendCoin(address receiver, uint amount)"
aakilfernandes/embark-framework,test/support/contracts/token.sol,"token(uint supply);sendCoin(address receiver, uint amount)"
ryepdx/embark-framework,test/support/contracts/token.sol,"token(uint supply);sendCoin(address receiver, uint amount)"
tom-seddon/embark-framework,test/support/contracts/token.sol,"token(uint supply);sendCoin(address receiver, uint amount)"
gerbrand/embark-framework,test/support/contracts/token.sol,"token(uint supply);sendCoin(address receiver, uint amount)"
xiaopow/embark-framework,test/support/contracts/token.sol,"token(uint supply);sendCoin(address receiver, uint amount)"
makoto/blockparty,contracts/zeppelin/lifecycle/Destructible.sol,destroy();destroyAndSend(address _recipient)
dltdojo/courses,ethereum/solidity/T111_RationalLiterals.sol,test()
Communication-Systems-Group/solidity-examples,example1.sol,""
Neufund/Contracts,contracts/lib/SafeMath.sol,"safeMul(uint a, uint b);safeDiv(uint a, uint b);safeSub(uint a, uint b);safeAdd(uint a, uint b);assert(bool condition)"
RealEstateAssetLedger/real_contract,contracts/ReserveTokensHolder.sol,"ReserveTokensHolder(address _owner, address _contribution, address _real);collectTokens();months(uint256 m);getTime();claimTokens(address _token)"
manosamy/enslisting,contracts/MockENSRegistrar.sol,"register(bytes32 labelHash);entries(bytes32 labelHash);transfer(bytes32 labelHash, address newOwner)"
BitySA/whetcwithdraw,daobalance/dao_balance_snapshot.sol,DAOBalanceSnapShot();fill(uint[] data);seal()
silasdavis/eris-db,tests/compilers_fixtures/contractImport2.sol,"add(int a, int b);subtract(int a, int b);addFromMapping(uint a, uint b)"
silasdavis/burrow,tests/compilers_fixtures/contractImport2.sol,"add(int a, int b);subtract(int a, int b);addFromMapping(uint a, uint b)"
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/build/AssertString.sol,"equal(string memory a, string memory b, string memory message);notEqual(string memory a, string memory b, string memory message);isEmpty(string memory str, string memory message);isNotEmpty(string memory str, string memory message);_report(bool result, string memory message);_stringsEqual(string memory a, string memory b);_tag(string memory value, string memory tag);_appendTagged(string memory tagged, string memory str);_appendTagged(string memory tagged0, string memory tagged1, string memory str)"
link-blockchain/link-revenue,link_revenue.sol,LinkRevenue();changeOwner(address newOwner);withdraw();getReleased()
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app19-factory_abi_supplied_to_interaction_job/GSFactory.sol,set(uint x);get();create();getLast()
eris-ltd/eris,tests/jobs_fixtures/app19-factory_abi_supplied_to_interaction_job/GSFactory.sol,set(uint x);get();create();getLast()
monax/monax,tests/jobs_fixtures/app19-factory_abi_supplied_to_interaction_job/GSFactory.sol,set(uint x);get();create();getLast()
eris-ltd/eris-cli,tests/jobs_fixtures/app19-factory_abi_supplied_to_interaction_job/GSFactory.sol,set(uint x);get();create();getLast()
monax/cli,tests/jobs_fixtures/app19-factory_abi_supplied_to_interaction_job/GSFactory.sol,set(uint x);get();create();getLast()
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app19-factory_abi_supplied_to_interaction_job/GSFactory.sol,set(uint x);get();create();getLast()
becodemonkey/solidity,contracts/wallet/MultiSigWalletWithDailyLimit.sol,"MultiSigWallet(address[] _owners, uint _required);addOwner(address owner);removeOwner(address owner);replaceOwner(address owner, address newOwner);changeRequirement(uint _required);submitTransaction(address destination, uint value, bytes data);confirmTransaction(uint transactionId);revokeConfirmation(uint transactionId);executeTransaction(uint transactionId);isConfirmed(uint transactionId);addTransaction(address destination, uint value, bytes data);getConfirmationCount(uint transactionId);getTransactionCount(bool pending, bool executed);getOwners();getConfirmations(uint transactionId);getTransactionIds(uint from, uint to, bool pending, bool executed);MultiSigWalletWithDailyLimit(address[] _owners, uint _required, uint _dailyLimit);changeDailyLimit(uint _dailyLimit);executeTransaction(uint transactionId);isUnderLimit(uint amount);calcMaxWithdraw()"
melonproject/protocol,contracts/mock/integratees/utils/SimpleMockIntegrateeBase.sol,""
Yann-Liang/browser-solidity,contracts/test/client/credit.sol,Ballot(uint8 _numProposals);Ballot(uint8 _numProposals)
serapath-contribution/browser-solidity,contracts/test/client/credit.sol,Ballot(uint8 _numProposals);Ballot(uint8 _numProposals)
trailofbits/greenhorn,csaw-2017/ETHERSNOOB/sources/ethersnoob10.sol,"set(uint data, uint data2, uint data3);get_flag();get()"
cgewecke/solcover,test/sources/statements/single.sol,a(uint x)
JoinColony/solcover,test/sources/statements/single.sol,a(uint x)
DigixGlobal/ethereum-ruby,contracts/classic/DigixbotConfiguration.sol,"DigixbotConfiguration();getOwner();setBotContract(address _botcontract);getBotContract();setUsersContract(address _userscontract);getUsersContract();lockConfiguration();addCoin(bytes4 _name, address _wallet);getCoinWallet(bytes4 _coin)"
EthWorks/ethereum.rb,contracts/classic/DigixbotConfiguration.sol,"DigixbotConfiguration();getOwner();setBotContract(address _botcontract);getBotContract();setUsersContract(address _userscontract);getUsersContract();lockConfiguration();addCoin(bytes4 _name, address _wallet);getCoinWallet(bytes4 _coin)"
marekkirejczyk/ethereum.rb,contracts/classic/DigixbotConfiguration.sol,"DigixbotConfiguration();getOwner();setBotContract(address _botcontract);getBotContract();setUsersContract(address _userscontract);getUsersContract();lockConfiguration();addCoin(bytes4 _name, address _wallet);getCoinWallet(bytes4 _coin)"
Neufund/Contracts,contracts/lib/IERC22Token.sol,symbol();name();decimals()
ProjectEntropy/contracts,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/test/helpers/FinalizableCrowdsaleImpl.sol,""
pash7ka/zeppelin-solidity,test/helpers/FinalizableCrowdsaleImpl.sol,""
pz7/liquet,node_modules/zeppelin-solidity/test/helpers/FinalizableCrowdsaleImpl.sol,""
dmx374/zeppelin-solidity,test/helpers/FinalizableCrowdsaleImpl.sol,""
cashpokerpro-dev/cash-smartcontracts,test/helpers/FinalizableCrowdsaleImpl.sol,""
melonproject/protocol,contracts/engine/Engine.sol,__setRegistry(address _registry);setRegistry(address _registry);setAmguPrice(uint256 _price);getAmguPrice();premiumPercent();payAmguInEther();thaw();enginePrice();ethPayoutForMlnAmount(uint256 _mlnAmount);sellAndBurnMln(uint256 _mlnAmount);mlnToken();priceSource()
etherisc/flightDelay,contracts/convertLib.sol,"parseInt(string _a);parseInt(string _a, uint _b);toUnixtime(bytes32 _dayMonthYear)"
aragon/aragon-core,contracts/common/Autopetrified.sol,""
FedCoup/FedCoup,installed_contracts/zeppelin/contracts/DayLimit.sol,DayLimit(uint _limit);_setDailyLimit(uint _newLimit);_resetSpentToday();underLimit(uint _value);today()
mayukhdifferent/Ethereum_smart_contract_dev,simpleVotingDapp.sol,simpleVotingDapp(bytes32[] candidateNames);totalVotesFor(bytes32 candidate);voteForCandidate(bytes32 candidate);validCandidate(bytes32 candidate)
yuqingc/notebook1,bc/SimpleStorage.sol,set(uint x);get()
Great-Hill-Corporation/daodeepdive,assets/contracts/04-ManagedAccount.sol,"ManagedAccount(address _owner, bool _payOwnerOnly);payOut(address _recipient, uint _amount)"
DavdRoman/Payroll,test/mocks/AddressUIntIndexedMappingMock.sol,"mock_length();mock_getAddress(uint _index);mock_getUInt(address _address);mock_contains(address _address);mock_set(address _address, uint _uint);mock_remove(address _address);mock_clear()"
charles-cooper/raiden,raiden/smart_contracts/NettingChannelContract.sol,"deposit(uint256 amount);addressAndBalance();close(bytes theirs_encoded);updateTransfer(bytes theirs_encoded);withdraw(bytes locked_encoded, bytes merkle_proof, bytes32 secret);settle();settleTimeout();tokenAddress();opened();closed();settled();closingAddress()"
credsign/credsign.github.io,contracts/Identity.sol,Identity();register(uint256 identity);identify(address owner)
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app34-save_binary_and_deploy_binary/binary.sol,set(uint x);get()
eris-ltd/eris,tests/jobs_fixtures/app34-save_binary_and_deploy_binary/binary.sol,set(uint x);get()
monax/monax,tests/jobs_fixtures/app34-save_binary_and_deploy_binary/binary.sol,set(uint x);get()
eris-ltd/eris-cli,tests/jobs_fixtures/app34-save_binary_and_deploy_binary/binary.sol,set(uint x);get()
monax/cli,tests/jobs_fixtures/app34-save_binary_and_deploy_binary/binary.sol,set(uint x);get()
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app34-save_binary_and_deploy_binary/binary.sol,set(uint x);get()
shahankhatch/weifund-contracts,src/contracts/PrivateServiceRegistry.sol,register(address _service);isService(address _service)
DRI-project/RICO,contracts/SafeMath.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b)"
mattdf/PayToMany,paytomany.sol,"PayXToList(address[] list, uint value);PayValsToList(address[] list, uint[] values)"
silasdavis/eris-db,vent/test/EventsTest.sol,"addThing(string calldata _name, string calldata _description);removeThing(string calldata _name);count();description(string calldata _name)"
maxxflyer/FLOOD,Companion.sol,"Companion();acceptTOS(address a,bool b)"
debbydebp/NEtherpay,solCode/testSolCode.sol,Ballot(uint8 _numProposals);giveRightToVote(address voter);delegate(address to);vote(uint8 proposal);winningProposal()
WishFinanceCom/WF-contracts,contracts/core/erc20/ERC20Interface.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
web3j/web3j,codegen/src/test/resources/solidity/standardtoken/StandardToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
eris-ltd/eris-db,tests/jobs_fixtures/app46-meta-mixed-with-normal/test.sol,getName();setName(string memory name);addName(string memory name)
cryptape/cita,scripts/contracts/src/system/SysConfig.sol,setOperator(string _operator);setWebsite(string _website);setChainName(string _chainName);setBlockInterval(uint64 _blockInterval);getDelayBlockNumber();getPermissionCheck();getSendTxPermissionCheck();getCreateContractPermissionCheck();getQuotaCheck();getFeeBackPlatformCheck();getChainOwner();getChainName();getChainId();getOperator();getWebsite();getBlockInterval();getEconomicalModel();getTokenInfo();getAutoExec()
daostack/daostack,contracts/universalSchemes/ContributionReward.sol,"executeProposal(bytes32 _proposalId, int256 _param);redeemReputation(bytes32 _proposalId, Avatar _avatar);redeemNativeToken(bytes32 _proposalId, Avatar _avatar);redeemEther(bytes32 _proposalId, Avatar _avatar);redeemExternalToken(bytes32 _proposalId, Avatar _avatar);redeem(bytes32 _proposalId, Avatar _avatar, bool[4] memory _whatToRedeem);getPeriodsToPay(bytes32 _proposalId, address _avatar, uint256 _redeemType);getRedeemedPeriods(bytes32 _proposalId, address _avatar, uint256 _redeemType);getProposalEthReward(bytes32 _proposalId, address _avatar);getProposalExternalTokenReward(bytes32 _proposalId, address _avatar);getProposalExternalToken(bytes32 _proposalId, address _avatar);getProposalExecutionTime(bytes32 _proposalId, address _avatar);validateProposalParams(int256 _reputationChange, uint[5] memory _rewards)"
ineiti/cothorities,bevm/testdata/ABIv2/ABIv2.sol,squares(uint256 limit)
DeDiS/cothority,bevm/testdata/ABIv2/ABIv2.sol,squares(uint256 limit)
axic/shapeshiftbot,shapeshiftbot.api.sol,"transfer(string coin, string recipient);transfer(string coin, string recipient, bool acceptReturn);getAddress();shapeshiftTransfer(uint value, string coin, string recipient)"
montyly/manticore,examples/evm/two_tx_ovf.sol,test_me(int input)
trailofbits/manticore,examples/evm/two_tx_ovf.sol,test_me(int input)
jellegerbrandy/daostack,contracts/BallotMintTokens.sol,executeWinningProposal()
dltdojo/courses,ethereum/solidity/T260_Library.sol,set(uint x);FooContractCall(address fooAddr)
darcius/rocketpool-crowdsale,contracts/sales/RocketPoolPresale.sol,"RocketPoolPresale(address _tokenContractAddress);addPresaleAllocation(address _address, uint256 _amount);getPresaleAllocation(address _address);mintSendTokens();finaliseFunding()"
js0p/sprouts,solidity/sprout.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);BasicSprout();finalizeProposal();balanceOf(address _owner);vote(address _proposal)"
cruskit/truffle-voting-example,contracts/SubscriptionWallet.sol,"fundMe();getBalance();addSubscription(address provider, bytes32 name, uint monthlyCharge)"
cryptape/cita,scripts/contracts/src/permission_management/PermissionManagement.sol,"newPermission(bytes32 _name, address[] _conts, bytes4[] _funcs);deletePermission(address _permission);updatePermissionName(address _permission, bytes32 _name);setAuthorizations(address _account, address[] _permissions);setAuthorization(address _account, address _permission);cancelAuthorizations(address _account, address[] _permissions);cancelAuthorization(address _account, address _permission);clearAuthorization(address _account)"
orbro/eth-enablers,safeRemotePurchase.sol,Purchase();abort();confirmPurchase();confirmReceived()
o0ragman0o/ITT,Math.sol,"triCmp(uint a, uint b);nSign(uint a);neg(uint a);safeMul(uint a, uint b);safeSub(uint a, uint b);safeAdd(uint a, uint b)"
mhhf/dapple,test/_fixtures/linker_test_package/.dapple/packages/pkg/src/sol/contract.sol,""
nexusdev/dapple,test/_fixtures/linker_test_package/.dapple/packages/pkg/src/sol/contract.sol,""
PeculiumPCL/Peculium,contracts/v0.2/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
PeculiumPCL/Peculium,contracts/v0.4/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
PeculiumPCL/Peculium,contracts/v0.3/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
PeculiumPCL/Peculium,contracts/v0.6/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
PeculiumPCL/Peculium,contracts/v0.7/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
PeculiumPCL/Peculium,contracts/v0.5/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
AsIGL/SolidityExamples,Basic Examples/Ballot.sol,Ballot(uint8 _numProposals);giveRightToVote(address voter);delegate(address to);vote(uint8 proposal);winningProposal()
nikita-fuchs/PLToken,contracts/StandardToken.sol,"balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
zetherz/eth-match,test/helpers/PausableMock.sol,PausableMock();normalProcess();drasticMeasure()
xathena/AthenaLabsICO,contracts/AthenaLabsICO.sol,"setAdminAccounts(address[3] _adminAccounts);setMainWallet(address _mainWallet);pause();unpause();buyTokens();validPurchase();authorizeOne(address investor_addr);authorize(address[] investor_addrs);refund(address investor_addr);hasEnded();giveTokensOne(address beneficiary, uint256 weiTokens);giveTokens(address[] beneficiaries, uint256 weiTokens);calculateAndRegisterBonuses(uint256 weiEther);calculateTimeBonuses(uint256 weiEther);calculateQuantityBonuses(uint256 weiEther);calculateAndRegisterEarlyBonuses(uint256 weiEther);finalize();finalization();withdraw();destroy()"
chriseth/dapp-bin,registrar/registrar.sol,"getAddress(bytes32 _name);getName(address _owner);owner(bytes32 _name);addr(bytes32 _name);subRegistrar(bytes32 _name);content(bytes32 _name);name(address _owner);disown(bytes32 _name);setAddress(bytes32 _name, address _a, bool _primary);setSubRegistrar(bytes32 _name, address _registrar);setContent(bytes32 _name, bytes32 _content);record(bytes32 _name);addr(bytes32 _name);subRegistrar(bytes32 _name);content(bytes32 _name);name(address _owner)"
NoahZinsmeister/ProveIt,contracts/Prover.sol,"Prover();registeredUsers();userEntries(address target);entryInformation(address target, bytes32 dataHash);addEntry(bytes32 dataHash);deleteEntry(bytes32 dataHash);selfDestruct()"
ChicoBitcoinJoe/MeDao,contracts/external/ERC20.sol,"totalSupply();balanceOf(address tokenOwner);allowance(address tokenOwner, address spender);transfer(address to, uint tokens);approve(address spender, uint tokens);transferFrom(address from, address to, uint tokens)"
dacplayproject/play-dapp,src/ReceiveAndCallFallBack.t.sol,"receiveToken(address from, uint256 _amount, address _token);proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);setUp();testFail_basic_sanity();test_transfer_token_to_contract()"
markya0616/go-ethereum,contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
cgewecke/eth-gas-reporter,mock/contracts/EtherRouter/VersionB.sol,setValue();setAnotherValue()
aragon/aragon-network-token,packages/sale/installed_contracts/zeppelin/contracts/token/ERC20.sol,"totalSupply();balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value)"
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/contracts/ReentrancyGuard.sol,""
pash7ka/zeppelin-solidity,contracts/ReentrancyGuard.sol,""
iswarm/p2pCny,contracts/ReentrancyGuard.sol,""
adklempner/solidity-license,contracts/zeppelin/ReentrancyGuard.sol,""
readevalprint/aragon-core,contracts/zeppelin/ReentrancyGuard.sol,""
pz7/liquet,node_modules/zeppelin-solidity/contracts/ReentrancyGuard.sol,""
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/ReentrancyGuard.sol,""
dmx374/zeppelin-solidity,contracts/ReentrancyGuard.sol,""
cashpokerpro-dev/cash-smartcontracts,contracts/ReentrancyGuard.sol,""
cinderblockchain/cindertoken,contracts/ReentrancyGuard.sol,""
adamdossa/ProfitSharingContract,installed_contracts/zeppelin/contracts/ReentrancyGuard.sol,""
GX-Coin/SmartContract,GxAccounts.sol,add(address newAddress);remove(address removedAddress);contains(address lookupAddress);iterateStart();iterateValid(uint keyIndex);iterateNext(uint keyIndex);iterateGet(uint keyIndex)
modum-io/smartcontract,TemperatureMeasurementB.sol,"done();reportTemperature(int8[] _temperatures, uint32[] _timestamps);success();failed();nrMeasurements();nrFailures();failedTimestampSeconds();temperatureMin();temperatureMax()"
GovernX/governx-contracts,src/contracts/AuthorityController.sol,"AuthorityController(address _proxy, address[] _members, uint256 _minimumQuorum, uint256 _required, address _authority);changeVariables(uint256 _required, uint256 _minimumQuorum);canPropose(address _sender, uint256 _proposalID);canVote(address _sender, uint256 _proposalID);canExecute(address _sender, uint256 _proposalID);votingWeightOf(address _sender, uint256 _proposalID, uint256 _index, uint256 _data);submitTally(uint256 _proposalID, uint256 _yesVotes, uint256 _totalVotes);hasWon(address _sender, uint256 _proposalID);hasFailed(address _sender, uint256 _proposalID)"
Pavel-DV/ChronoMint,old/ChronoMintConfigurable.sol,"Configurable();isMint(address _ad);setValue(string name, uint value);approved()"
bshevchenko/ChronoMint,old/ChronoMintConfigurable.sol,"Configurable();isMint(address _ad);setValue(string name, uint value);approved()"
michinbear/solidity,test/compilationTests/gnosis/MarketMakers/MarketMaker.sol,"calcCost(Market market, uint8 outcomeTokenIndex, uint outcomeTokenCount);calcProfit(Market market, uint8 outcomeTokenIndex, uint outcomeTokenCount);calcMarginalPrice(Market market, uint8 outcomeTokenIndex)"
elementrem/solidity,test/compilationTests/gnosis/MarketMakers/MarketMaker.sol,"calcCost(Market market, uint8 outcomeTokenIndex, uint outcomeTokenCount);calcProfit(Market market, uint8 outcomeTokenIndex, uint outcomeTokenCount);calcMarginalPrice(Market market, uint8 outcomeTokenIndex)"
TrueBitFoundation/webasm-solidity,contracts/slow.sol,"test(uint hint, uint r1, uint r2, uint r3)"
mattdf/payment-channel,channel.sol,"Channel(address to, uint timeout);CloseChannel(bytes32 h, uint8 v, bytes32 r, bytes32 s, uint value);ChannelTimeout()"
redsquirrel/augur-core,src/extensions/MarketFeeCalculator.sol,getValidityBond(ReportingWindow _reportingWindow);getTargetReporterGasCosts();getReportingFeeInAttoethPerEth(ReportingWindow _reportingWindow);getRepMarketCapInAttoeth(Branch _branch);getTargetRepMarketCapInAttoeth(ReportingWindow _reportingWindow);getOutstandingSharesInAttoeth(ReportingWindow _reportingWindow);getMarketCreationCost(ReportingWindow _reportingWindow)
adridadou/eth-propeller-core,src/test/resources/contract2.sol,getT();getM();getArray();getOwner()
michinbear/solidity,test/compilationTests/gnosis/Tokens/StandardToken.sol,"transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value);allowance(address owner, address spender);balanceOf(address owner);totalSupply()"
elementrem/solidity,test/compilationTests/gnosis/Tokens/StandardToken.sol,"transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value);allowance(address owner, address spender);balanceOf(address owner);totalSupply()"
GovernX/governx-contracts,src/contracts/utils/IMetadata.sol,name();version()
makoto/blockparty,contracts/GroupAdmin.sol,grant(address[] newAdmins);revoke(address[] oldAdmins);getAdmins();numOfAdmins();isAdmin(address admin)
kowala-tech/kUSD,client/contracts/truffle/contracts/token/MintableToken.sol,"mint(address _to, uint256 _amount);finishMinting()"
TruLtd/tru-reputation-token,src/0.1.5/TruPreSaleFull.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);isValid(address input);toString(address input);addressLength(address input);Ownable();transferOwnership(address newOwner);balanceOf(address who);transfer(address to, uint256 value);transfer(address _to, uint256 _value);balanceOf(address _owner);allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);increaseApproval(address _spender, uint _addedValue);decreaseApproval(address _spender, uint _subtractedValue);setReleaseAgent(address addr);setTransferAgent(address addr, bool state);releaseTokenTransfer();mint(address _to, uint256 _amount);finishMinting(bool _presale, bool _sale);isUpgradeAgent();upgradeFrom(address _from, uint256 _value);TruUpgradeableToken(address _upgradeMaster);upgrade(uint256 _value);setUpgradeAgent(address _agent);getUpgradeState();setUpgradeMaster(address _master);canUpgrade();TruReputationToken();changeBoardAddress(address _newAddress);canUpgrade();setUpgradeMaster(address _master);halt();unhalt();buy();updateWhitelist(address _purchaser, uint _status);changeEndTime(uint256 _endTime);hasEnded();checkSaleValid();validatePurchase(address _purchaser);forwardFunds();buyTokens(address _purchaser);finalise();completion()"
rfikki/demo-solidity,shapecalculator.sol,"rectangle(uint w, uint h)"
shayanb/Solidity-Logging-Library,logging.sol,logging();log(string message)
WishFinanceCom/WF-contracts,contracts/core/event/MultiEventsHistoryAdapter.sol,_self()
shahankhatch/weifund-contracts,src/contracts/Token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/contracts/token/VestedToken.sol,"revokeTokenGrant(address _holder, uint256 _grantId);transferableTokens(address holder, uint64 time);tokenGrantsCount(address _holder);tokenGrant(address _holder, uint256 _grantId);vestedTokens(TokenGrant grant, uint64 time);nonVestedTokens(TokenGrant grant, uint64 time);lastTokenIsTransferableDate(address holder)"
readevalprint/aragon-core,contracts/zeppelin/token/VestedToken.sol,"revokeTokenGrant(address _holder, uint256 _grantId);transferableTokens(address holder, uint64 time);tokenGrantsCount(address _holder);tokenGrant(address _holder, uint256 _grantId);vestedTokens(TokenGrant grant, uint64 time);nonVestedTokens(TokenGrant grant, uint64 time);lastTokenIsTransferableDate(address holder)"
pz7/liquet,node_modules/zeppelin-solidity/contracts/token/VestedToken.sol,"revokeTokenGrant(address _holder, uint256 _grantId);transferableTokens(address holder, uint64 time);tokenGrantsCount(address _holder);tokenGrant(address _holder, uint256 _grantId);vestedTokens(TokenGrant grant, uint64 time);nonVestedTokens(TokenGrant grant, uint64 time);lastTokenIsTransferableDate(address holder)"
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/token/VestedToken.sol,"revokeTokenGrant(address _holder, uint256 _grantId);transferableTokens(address holder, uint64 time);tokenGrantsCount(address _holder);tokenGrant(address _holder, uint256 _grantId);vestedTokens(TokenGrant grant, uint64 time);nonVestedTokens(TokenGrant grant, uint64 time);lastTokenIsTransferableDate(address holder)"
SerpentChris/augur-core,src/emergencyStops.sol,Ownable();transferOwnership(address newOwner);emergencyStop();release()
daukantas/cpp-ethereum,mix/stdc/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
BreemsEmporiumMensToiletriesFragrances/cpp-ethereum,mix/stdc/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
alexvandesande/cpp-ethereum,mix/stdc/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
anthony-cros/cpp-ethereum,mix/stdc/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
ethereum/mix,stdc/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
cyperx/cpp-ethereum,mix/stdc/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
yann300/mix,stdc/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
Sorceror32/.-git-clone-https-github.com-ethereum-cpp-ethereum,mix/stdc/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
PaulGrey30/go-get--u-github.com-tools-godep,mix/stdc/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
hanyoungpark/cpp-ethereum,mix/stdc/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
Sorceror32/go-get--u-github.com-tools-godep,mix/stdc/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
Bitorious/Genoil-cpp-ethereum,mix/stdc/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
expanse-project/cpp-expanse,mix/stdc/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
imapp-pl/cpp-ethereum,mix/stdc/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
pompomJuice/cpp-ethereum,mix/stdc/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
tjade273/cpp-ethereum,mix/stdc/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
cinnamoncoin/cpp-ethereum,mix/stdc/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
vaporry/mix,stdc/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
kleetus/cpp-ethereum,mix/stdc/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
chriseth/cpp-ethereum,mix/stdc/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
Gustav-Simonsson/cpp-ethereum,mix/stdc/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
subtly/cpp-ethereum-micro,mix/stdc/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
LefterisJP/mix,stdc/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
tpruvot/cpp-ethereum,mix/stdc/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
LianaHus/mix,stdc/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
guanqun/cpp-ethereum,mix/stdc/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
vaporry/cpp-ethereum,mix/stdc/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
ashleyblackmore/cpp-ethereum,mix/stdc/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
tomthebuzz/mix,stdc/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
PaulGrey30/.-git-clone-https-github.com-ethereum-cpp-ethereum,mix/stdc/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
chriseth/mix,stdc/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
AmericanSundown/cpp-ethereum,mix/stdc/config.sol,"register(uint id, address service);unregister(uint id);lookup(uint service);lookup(uint256 service);kill();unregister(uint256 id);register(uint256 id,address service)"
finhaus/training,contract-design-patterns/contracts/Access.sol,"Access();addMember(address _nominee, bool _setSpecial);spend(address _recipient, uint _amount);totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value)"
SmartChainX/ChainBlockchain,Contracts/Base/MultiSigWallet.sol,"MultiSigWallet(address[] _owners, uint _required);addOwner(address owner);removeOwner(address owner);replaceOwner(address owner, address newOwner);changeRequirement(uint _required);submitTransaction(address destination, uint value, bytes data);confirmTransaction(uint transactionId);revokeConfirmation(uint transactionId);executeTransaction(uint transactionId);isConfirmed(uint transactionId);addTransaction(address destination, uint value, bytes data);getConfirmationCount(uint transactionId);getTransactionCount(bool pending, bool executed);getOwners();getConfirmations(uint transactionId);getTransactionIds(uint from, uint to, bool pending, bool executed)"
WeTrustPlatform/rosca-contracts,contracts/ROSCA.sol,addMember(address newMember);startRound();cleanUpPreviousRound();creditWinner();findSemiRandomWinner(uint16 numUnpaidParticipants);recalculateTotalFees();swapWinner();removeFees(uint256 amount);validateAndReturnContribution();contribute();bid(uint256 bid);sendFundsToMsgSender(uint256 value);withdraw();getParticipantBalance(address user);getContractNetBalance();getBalance();endOfROSCARetrieveSurplus();endOfROSCARetrieveFees();enableEscapeHatch();activateEscapeHatch();emergencyWithdrawal();userTotalCredit(address memberAddress);potSize();requiredContribution()
LOOMIA/loomia,ethereum/contracts/UpgradeableToken.sol,UpgradeableToken(address _upgradeMaster);upgrade(uint256 value);setUpgradeAgent(address agent);getUpgradeState();setUpgradeMaster(address master);canUpgrade()
eyalron33/EVMDB,evmdb.sol,"EVMDB();create(bytes32 _name, bytes32[] _headers);insert(uint256 _DB_id, bytes32[] _data);update(uint256 _DB_id, uint256 _row, bytes32[] _data);erase(uint256 _DB_id, uint256 _row);search(uint256 _DB_id, bytes32 _value);get_header(uint256 _DB_id);get_row(uint256 _DB_id, uint256 _row);get_row_col(uint256 _DB_id, uint256 _row, uint256 _col);get_DB_info(uint256 _DB_id);get_number_of_DBs();binary_search(uint256 DB_id, bytes32 data);place_to_push(uint256 DB_id, bytes32 data);push_key(uint256 DB_id, uint256 place, uint256 new_value);delete_key(uint256 DB_id, uint256 place)"
dccp/zeppelin,contracts/WorkerDispatcher.sol,"buyContract(address worker, uint length);changeWorkerPrice(uint newPrice);setWorkerDtPort(uint _dtport);setWorkerPort(uint _port)"
cryptape/cita,scripts/contracts/src/permission_management/PermissionCreator.sol,"createPermission(bytes32 _name, address[] _conts, bytes4[] _funcs)"
erooijak/ethlance,resources/public/contracts/src/ethlanceUser.sol,EthlanceUser(address _ethlanceDB)
robmyers/artworld-ethereum,old/contract/ecosystem.sol,""
aragon/aragon-core,contracts/kernel/KernelStorage.sol,""
Philadelphia-Ethereum-Meetup/pizza_machine,contracts/advert_machine.sol,"advert_machine();pickURL();addURL(string url);removeURL(string url, uint n);cleanupURLs();require_email(bool req);watchedURL(string url, string email)"
kinfoundation/kin-token,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
SafeContracts/TREX-token,AbstractSafecontractsTREXFund.sol,trexdevshop();softWithdrawRevenueFor(address forAddress)
liammagee/etherealised,code/BitWatt.sol,"mortal();kill();bitWatt(uint supply);addTenant(address tenant);distributeGeneratedPower(uint amount);distributePowerToAddress(address tenant, uint amount);consumePower(uint amount)"
TrustyChain/ibhbr,project/contracts/CampaignContract.sol,"getMemberName(uint communityId, address _member);CampaignContract(communityContract _community);createCampaign(uint _community, bytes32 _name, bytes32 _description, bytes32 _image);addCollaborate(uint _campaign, address _collaborator, bytes32 _description, uint _amount);addCollaborateToCampaign(uint _campaign, uint _collaborate);countCampaigns(address current);donateToCampaign(uint _campaign, uint amount);concludeCampaign(uint _campaign)"
merlox/dapp-transactions,contracts/workingBackup/TransactionsManager.sol,"extractEther();getPendingTransactions();getPendingTransactionsSellerAddresses();getInstanceAddress(address sellerAddress);getCompletedTransactions();getInvoiceHashAddresses();killInstance(address instanceAddress, address instanceSellerAddress);kill()"
dacplayproject/play-dapp,src/FixedGameToken.sol,"FixedGameToken(bytes32 _symbol, uint _ratio, address _pls);tokenFallback(address _from, uint256 _value, bytes _data);mint(address _beneficiary, uint _wad);burn(address _beneficiary, uint _wad)"
montyly/manticore,tests/ethereum/contracts/676.sol,f()
trailofbits/manticore,tests/ethereum/contracts/676.sol,f()
WishFinanceCom/WF-contracts,contracts/lockers/Lockup12m.sol,"emitError(bytes32 _message);_error(uint _errorCode, bytes32 _message);setupEventsHistory(address _eventsHistory);payIn();payOut(address _getter);getLockedFunds();getLockedFundsReleaseTime()"
DonorToken/DonorToken,test/helpers/StandardTokenMock.sol,"StandardTokenMock(address initialAccount, uint256 initialBalance)"
digitalthailand/course-blockchain-4-dev,examples/HelloSystem.sol,HelloSystem();remove()
pembient/pembicoin,contracts/PembiCoinICO.sol,"PembiCoinICO();refund();payout();setActive();setIdle();setSuccessful();setFailed();getContribution(uint256 _i);safeAdd(uint256 a, uint256 b)"
pash7ka/zeppelin-solidity,contracts/ownership/DelayedClaimable.sol,"setLimits(uint256 _start, uint256 _end);claimOwnership()"
iswarm/p2pCny,contracts/ownership/DelayedClaimable.sol,"setLimits(uint256 _start, uint256 _end);claimOwnership()"
WingsDao/contracts,contracts/zeppelin/test-helpers/PullPaymentMock.sol,"callSend(address dest, uint amount)"
aragon/aragon-core,contracts/common/VaultRecoverable.sol,transferToVault(address _token);allowRecoverability(address token);getRecoveryVault()
chenlian2015/eosEthMarketSample,contracts/OLCommonConfigure.sol,""
pipermerriam/populus,docs/assets/Donator3.sol,donate(uint usd_rate);withdrawAll()
kryptopy1/crowdsale,contracts/MultiSigWallet.sol,"MultiSigWallet(address[] _owners, uint _required);addOwner(address owner);removeOwner(address owner);replaceOwner(address owner, address newOwner);changeRequirement(uint _required);submitTransaction(address destination, uint value, bytes data);confirmTransaction(uint transactionId);revokeConfirmation(uint transactionId);executeTransaction(uint transactionId);isConfirmed(uint transactionId);addTransaction(address destination, uint value, bytes data);getConfirmationCount(uint transactionId);getTransactionCount(bool pending, bool executed);getOwners();getConfirmations(uint transactionId);getTransactionIds(uint from, uint to, bool pending, bool executed)"
bcosorg/bcos,systemcontractv2/OwnerNamed.sol,"OwnerNamed();register(string _name, string _version);kill();getOwner();getSender();getErrno();log(string _str);log(string _str, string _topic);log(string _str, string _str2, string _topic);log(string _str, uint _ui);log(string _str, int _i);log(string _str, address _addr);stringToUint(string _str)"
cgewecke/solcover,test/sources/zeppelin/Multisig.sol,"changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h)"
WingsDao/contracts,contracts/zeppelin/Multisig.sol,"changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h)"
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/Multisig.sol,"changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h)"
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/Multisig.sol,"changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h)"
AragonOne/zeppelin-solidity,contracts/ownership/Multisig.sol,"changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h)"
JoinColony/solcover,test/sources/zeppelin/Multisig.sol,"changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h)"
SafecontractDev/protocol,contracts/bancor_contracts/interfaces/IERC20Token.sol,"name();symbol();decimals();totalSupply();balanceOf(address _owner);allowance(address _owner, address _spender);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value)"
DRI-project/RICO,contracts/RICO.sol,"RICO();checkPoDs(address[] _pods);mintToken(address _tokenAddr, uint _index, address _user);tokenTransfer(address _token);getTokenPods(address _token)"
DigixGlobal/ethereum-ruby,spec/fixtures/SimpleNameRegistry.sol,"SimpleNameRegistry();sampleBool(bool _b);sampleMulti(bool _b, bytes32 _a, int8 _c, bytes4 _d);sampleBoolRetTrue();sampleBoolRetFalse();register(address _a, bytes32 _n);getName(address _a);getAddress(bytes32 _n);threeParams();SimpleContract()"
readevalprint/aragon-core,contracts/apps/vault/Vault.sol,"requestAllowances(ERC20[] _tokens, uint256[] _amounts);transfer(ERC20 _token, address _receiver, uint256 _amount)"
ocg1/assetx,007_MintedTokenCappedCrowdsaleExt.sol,"safeMul(uint a, uint b);safeDiv(uint a, uint b);safeSub(uint a, uint b);safeAdd(uint a, uint b);balanceOf(address who);transfer(address to, uint256 value);Ownable();transferOwnership(address newOwner);times(uint a, uint b);divides(uint a, uint b);minus(uint a, uint b);plus(uint a, uint b);halt();unhalt();isPricingStrategy();isSane(address crowdsale);isPresalePurchase(address purchaser);calculatePrice(uint value, uint weiRaised, uint tokensSold, address msgSender, uint decimals);isFinalizeAgent();isSane();finalizeCrowdsale();allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);CrowdsaleExt(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, bool _isUpdatable, bool _isWhiteListed);investInternal(address receiver, uint128 customerId);preallocate(address receiver, uint fullTokens, uint weiPrice);investWithSignedAddress(address addr, uint128 customerId, uint8 v, bytes32 r, bytes32 s);investWithCustomerId(address addr, uint128 customerId);invest(address addr);buyWithSignedAddress(uint128 customerId, uint8 v, bytes32 r, bytes32 s);buyWithCustomerId(uint128 customerId);buy();finalize();setFinalizeAgent(FinalizeAgent addr);setRequireCustomerId(bool value);setRequireSignedAddress(bool value, address _signerAddress);setEarlyParicipantWhitelist(address addr, bool status, uint minCap, uint maxCap);setEarlyParicipantsWhitelist(address[] addrs, bool[] statuses, uint[] minCaps, uint[] maxCaps);updateEarlyParicipantWhitelist(address addr, address contractAddr, uint tokensBought);updateJoinedCrowdsales(address addr);setLastCrowdsale(address addr);clearJoinedCrowdsales();updateJoinedCrowdsalesMultiple(address[] addrs);setStartsAt(uint time);setEndsAt(uint time);setPricingStrategy(PricingStrategy _pricingStrategy);setMultisig(address addr);loadRefund();refund();isMinimumGoalReached();isFinalizerSane();isPricingSane();getState();setOwnerTestValue(uint val);isCrowdsale();isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal);isBreakingInvestorCap(address receiver, uint tokenAmount);isCrowdsaleFull();assignTokens(address receiver, uint tokenAmount);isToken();transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);balanceOf(address _owner);approve(address _spender, uint _value);allowance(address _owner, address _spender);setReservedTokensList(address addr, uint inTokens, uint inPercentageUnit, uint inPercentageDecimals);getReservedTokensListValInTokens(address addr);getReservedTokensListValInPercentageUnit(address addr);getReservedTokensListValInPercentageDecimals(address addr);setReservedTokensListMultiple(address[] addrs, uint[] inTokens, uint[] inPercentageUnit, uint[] inPercentageDecimals);mint(address receiver, uint amount);setMintAgent(address addr, bool state);MintedTokenCappedCrowdsaleExt(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, uint _maximumSellableTokens, bool _isUpdatable, bool _isWhiteListed);isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal);isBreakingInvestorCap(address addr, uint tokenAmount);isCrowdsaleFull();assignTokens(address receiver, uint tokenAmount);setMaximumSellableTokens(uint tokens)"
shahankhatch/pyethereum,ethereum/tests/contracts/simple_contract.sol,test()
karlfloersch/pyethereum,ethereum/tests/contracts/simple_contract.sol,test()
nirenzang/Serpent-Pyethereum-Tutorial,pyethereum/ethereum/tests/contracts/simple_contract.sol,test()
jensenbox/singnet,dao/contracts/registries/AgentRegistry.sol,getAgentsWithService(uint service);getAgent(uint id)
y12studio/dltdojo,contracts/ddjat/contracts/DDJATCoin.sol,DDJATCoin()
polybioz/github-bounty,GitHubBounty.sol,"GitHubBounty();addSponsor(address sponsorAddr);addIssueBounty(string issueUrl, uint queriesDelay);getIssueState(uint delay, bytes32 bountyKey);getIssueAssignee(uint delay, bytes32 bountyKey);getUserAddress(uint delay, bytes32 bountyKey);sendBounty(bytes32 bountyKey);__callback(bytes32 myid, string result)"
orbro/eth-enablers,etheropt.github.io-master/etheropt.sol,"Etheropt(uint expiration_, string underlying_, uint margin_, uint realityID_, bytes32 factHash_, address ethAddr_, int[] strikes_);getAccountID(address user);getAccount(uint accountID);addFunds();withdrawFunds(uint amount);getFunds(address user, bool onlyAvailable);getFundsAndAvailable(address user);marketMaker(string server);getMarketMakers();getMarketMakerFunds();getOptionChain();getMarket(address user);expire(uint accountID, uint8 v, bytes32 r, bytes32 s, bytes32 value);getMoneyness(int strike, uint settlement, uint margin);orderMatchTest(uint optionID, uint price, int size, uint orderID, uint blockExpires, address addr, address sender, uint value, int matchSize);orderMatch(uint optionID, uint price, int size, uint orderID, uint blockExpires, address addr, uint8 v, bytes32 r, bytes32 s, int matchSize);getMaxLossAfterTrade(address user, uint optionID, int positionChange, int cashChange);moneySumAtSettlement(address user, uint optionID, int positionChange, uint settlement);min(uint a, uint b)"
Contraktor-Legal-Tech/contraktor-sign-smart-contract,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address newAddress)
ise-ethereum/on-chain-chess,contract/Chess.sol,"getEloScore(address player);Chess(bool enableDebugging);initGame(string player1Alias, bool playAsWhite, uint turnTime);joinGame(bytes32 gameId, string player2Alias);move(bytes32 gameId, uint256 fromIndex, uint256 toIndex);setGameState(bytes32 gameId, int8[128] state, address nextPlayer);getCurrentGameState(bytes32 gameId);getWhitePlayer(bytes32 gameId);surrender(bytes32 gameId);claimWin(bytes32 gameId);claimTimeoutEndedWithMove(bytes32 gameId, uint256 fromIndex, uint256 toIndex);claimTimeoutEnded(bytes32 gameId);confirmGameEnded(bytes32 gameId)"
NoahZinsmeister/ProveIt,contracts/Hash.sol,Hash();hashString(string dataString);hashBytes(bytes dataBytes);selfDestruct()
hundsun/blockchain,coin.sol,"Coin();mint(address receiver, uint amount);send(address receiver, uint amount);kill()"
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app09-basic_solidity_imports/contracts/base.sol,base(uint x);set(uint x);get()
eris-ltd/eris,tests/jobs_fixtures/app09-basic_solidity_imports/contracts/base.sol,base(uint x);set(uint x);get()
monax/monax,tests/jobs_fixtures/app09-basic_solidity_imports/contracts/base.sol,base(uint x);set(uint x);get()
eris-ltd/eris-cli,tests/jobs_fixtures/app09-basic_solidity_imports/contracts/base.sol,base(uint x);set(uint x);get()
monax/cli,tests/jobs_fixtures/app09-basic_solidity_imports/contracts/base.sol,base(uint x);set(uint x);get()
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app09-basic_solidity_imports/contracts/base.sol,base(uint x);set(uint x);get()
redsquirrel/augur-core,src/reporting/RegistrationToken.sol,initialize(ReportingWindow _reportingWindow);register();redeem();getTypeName();getReportingWindow();getBranch();getReputationToken();getPeakSupply()
QTBlockchain/SolidityNWeb3,SmartContracts/calculator/contracts/Arthimetic.sol,"Arthimetic();add(uint x,uint y)"
yoLUkAsss/DEscrutinio,contracts/DistritoCRUD.sol,"createDistritoVerify(uint distritoId);createDistrito(uint distritoId, address distritoAddress);getDistrito(uint id);existsDistrito(uint id);getDistritos();getEscuela(uint distritoId, uint escuelaId);getMesa(uint distritoId, uint escuelaId, uint mesaId);setFiscalVerify(uint distritoId, uint escuelaId, uint mesaId, bytes32 fiscalEmail);setFiscal(uint distritoId, uint escuelaId, uint mesaId, bytes32 fiscalEmail);setDelegadoDeDistritoVerify(bytes32 delegadoDeDistrito, uint distritoId);setDelegadoDeDistrito(bytes32 delegadoDeDistrito, uint distritoId);setDelegadoDeEscuelaVerify(bytes32 delegadoDistrito, bytes32 delegadoEscuela, uint distritoId, uint idEscuela);setDelegadoDeEscuela(bytes32 delegadoDistrito, bytes32 delegadoEscuela, uint distritoId, uint idEscuela);setPresidenteDeMesaVerify(bytes32 delegadoEscuela, uint distritoId, uint escuelaId, uint mesaId, bytes32 presidenteDeMesaEmail);setPresidenteDeMesa(bytes32 delegadoEscuela, uint distritoId, uint escuelaId, uint mesaId, bytes32 presidenteDeMesaEmail);setVicepresidenteDeMesa(bytes32 delegadoEscuela, uint distritoId, uint escuelaId, uint mesaId, bytes32 presidenteDeMesaEmail)"
0xASSET/SHIP,contracts/SafeMath.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b)"
fccoelho/Curso_Blockchain,contracts/Lista_de_Presenca/Contract/contracts/Presenca.sol,registraAluno(address aluno);assinaPresenca()
oraclekit/smart_oracle,lib/assets/contracts/Bytes32Oracle.sol,update(bytes32 newCurrent)
dltdojo/courses,ethereum/solidity/T221_OpenZeppelin.sol,"FooToken();transferFrom(FooToken ft, address _from, address _to, uint256 _value);testTransfer();testTransferFrom()"
aragon/aragon-network-token,packages/v2/contracts/EscrowANTv2Migrator.sol,migrate()
JoelStuart/COMS4507,js/ballot_preferential.sol,"BallotPreferential();startVoting();finishVoting();getPhase();addCandidate(bytes32 candidate);addVoter(address voter);totalVotesFor(bytes32 candidate);vote(bytes32 firstPreference, bytes32 secondPreference);validCandidate(bytes32 candidate);calculateWinner();getWinners();getCandidateList();getLastCandidates();addSecondPreferences(bytes32[] candidates, bool shouldDelete);removeCandidates();notIn(bytes32[] excludeList, bytes32 candidateName)"
ownage-ltd/ether-router,contracts/test/SimpleStore.sol,store(uint _n);getStored()
olivier-schmitt/solc-maven-plugin,src/test/resources/contracts/solidity/Purchase.sol,Purchase();abort();confirmPurchase();confirmReceived()
boisde/Greed_Island,party/contracts/protocol/modules/NAVIssuanceModule.sol,"addReserveAsset(ISetToken _setToken, address _reserveAsset);removeReserveAsset(ISetToken _setToken, address _reserveAsset);editPremium(ISetToken _setToken, uint256 _premiumPercentage);editFeeRecipient(ISetToken _setToken, address _managerFeeRecipient);removeModule();getReserveAssets(ISetToken _setToken);getManagerFee(ISetToken _setToken, uint256 _managerFeeIndex);_validateCommon(ISetToken _setToken, address _reserveAsset, uint256 _quantity);_validateIssuanceInfo(ISetToken _setToken, uint256 _minSetTokenReceiveQuantity, ActionInfo memory _issueInfo);_transferCollateralAndHandleFees(ISetToken _setToken, IERC20 _reserveAsset, ActionInfo memory _issueInfo);_transferWETHAndHandleFees(ISetToken _setToken, ActionInfo memory _issueInfo);_handleRedemptionFees(ISetToken _setToken, address _reserveAsset, ActionInfo memory _redeemInfo);_callPreRedeemHooks(ISetToken _setToken, uint256 _setQuantity, address _caller, address _to)"
FekraTechnology/SmartSLA,05-Source Code/SMAG_Contract/contracts/PayNowAlpha.sol,"createTask(address requester, string sys_id, string createdOn, uint priority);calculateTaskDeposit(uint priority);updateTaskState(string sys_id, string newState);readOpentasks();readTaskState(string _sys_id);readTaskCreatedOn(string _sys_id);readIncUpdatedOn(string _sys_id)"
michinbear/solidity,test/compilationTests/zeppelin/token/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
elementrem/solidity,test/compilationTests/zeppelin/token/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.5/forLoopIteratesOverDynamicArray.sol,shiftArrItem(uint index)
Fermion-Project/Light-Wallet,contracts/Factory.sol,getInstantiationCount(address creator);register(address instantiation)
SafecontractDev/protocol,contracts/AO.sol,AO()
KPull/eth-membership-tokens,contracts/ApplicationSource.sol,"applicationApproved(address _applicant, address _approver);applicationRejected(address _applicant, address _approver)"
michinbear/solidity,test/compilationTests/corion/module.sol,"transfer(address from, address to, uint256 value, bool fee);balanceOf(address owner);disableModule(bool forever);_disableModule(bool forever);replaceModuleHandler(address newModuleHandlerAddress);_replaceModuleHandler(address newModuleHandlerAddress);connectModule();_connectModule();disconnectModule();_disconnectModule();replaceModule(address newModuleAddress);_replaceModule(address newModuleAddress);transferEvent(address from, address to, uint256 value);newSchellingRoundEvent(uint256 roundID, uint256 reward);registerModuleHandler(address _moduleHandlerAddress);isModuleHandler(address addr);isActive()"
SilentCicero/wafr,src/tests/solidityTests/boardroom/boardroom/BoardRoom.sol,"newProposal(string _name, address _proxy, uint _debatePeriod, address _destination, uint _value, bytes _calldata);vote(uint _proposalID, uint _position);execute(uint _proposalID, bytes _calldata);changeRules(address _rules);voterAddressOf(uint _proposalID, uint _voteID);numVoters(uint _proposalID);positionWeightOf(uint _proposalID, uint _position);voteOf(uint _proposalID, address _voter);hasVoted(uint _proposalID, address _voter);destinationOf(uint _proposalId);proxyOf(uint _proposalId);valueOf(uint _proposalId);hashOf(uint _proposalId);debatePeriodOf(uint _proposalId);createdOn(uint _proposalId);createdBy(uint _proposalId);BoardRoom(address _rules);newProposal(string _name, address _proxy, uint _debatePeriod, address _destination, uint _value, bytes _calldata);vote(uint _proposalID, uint _position);execute(uint _proposalID, bytes _calldata);changeRules(address _rules);destructSelf(address _destination);positionWeightOf(uint _proposalID, uint _position);voteOf(uint _proposalID, address _voter);voterAddressOf(uint _proposalID, uint _voteID);numVoters(uint _proposalID);numProposals();hasVoted(uint _proposalID, address _voter);destinationOf(uint _proposalId);proxyOf(uint _proposalId);valueOf(uint _proposalId);hashOf(uint _proposalId);debatePeriodOf(uint _proposalId);createdOn(uint _proposalId);createdBy(uint _proposalId)"
mexskican/dapp,contracts/contracts/TrustToken.sol,"TrustToken();add(string _name);transfer(address _to, uint256 _value);totalSupply();transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
quanticpanda/TCI_truffle,app/contract.sol,"TCI_admin();getAccount(Client[]  lc, bytes32  Name);manualEntry(bytes32 you, bytes32 other, uint256 entry, uint256 exp, address t);wantsBusiness(bytes32 you, bytes32 other, address t);whoIsConcerned(address origin);paiementConfirmation(bytes32 fro, bytes32 t);callScheduler();checkFunction(bytes32 client, uint r);getNew(address enter, bytes32 Name);TCI_client(bytes32 name, address client, address _admin);localManualEntry(bytes32 you, bytes32 other, uint256 entry, uint256 exp, address t);localPaiementConfirmation(bytes32 fro, bytes32 t);localCheck(uint _time, string _messageFor, bytes32 _client, bytes32 _who1, string _paid, bytes32 _who2)"
ajlopez/EthSharpVm,Samples/CompDecomp/empty.sol,""
cslarson/exchange,contracts/ERC20.sol,"balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
ConsenSys/dao-wars,contracts/Game.sol,"Game();clear();initialize(uint x, uint y, uint8 _eth_deposits, uint _eth_amount, uint _starting_eth, CreatureBuilder _creature_builder);set_devcon_map();add_creature(address brain, string species_name);all_creatures_for_species(uint id);register_creature(address _creature);_random_empty_location()"
smartexio/smartex-contracts,SmartexController.sol,"SmartexController();createInvoice(uint id, address fundManager, address owner);refundInvoice(address invoiceAddress, address recipient);getInvoiceAddress(uint id);getTotalInvoices()"
benkico/pre-ico,BenkiToken.sol,"totalSupply();balanceOf(address owner);transfer(address to, uint256 value);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);allowance(address owner, address spender);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);issueTokens(address _for, uint tokenCount);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);changeEmissionContractAddress(address newAddress);lock(bool value);AscToken(address _founder)"
mahendra-panchal/smart-contract-basics,HelloWorld.sol,getMessage()
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/access/Whitelist.sol,addAddressToWhitelist(address _operator);whitelist(address _operator);addAddressesToWhitelist(address[] _operators);removeAddressFromWhitelist(address _operator);removeAddressesFromWhitelist(address[] _operators)
shahankhatch/weifund-contracts,src/contracts/tests/wafr/MyTestFramework.sol,"logs(bytes b);assert(bool what, bytes error);fail(bytes error);log(bytes msg);log(bytes msg, uint i)"
Blocklancer/Blocklancer-Contracts,solidity/BlocklancerContractHolder.sol,"getTokenHolderTribunal();getBlocklancerContractHolder();createDispute(address disputeContract);FinalizeDispute(address disputeContract);BlocklanceContractHolder();getActiveContracts();createNewFreelanceContract(string link);ContractFullfilled(address _client,int _rating);if(aBlocklancerContracts[BlocklancerContracts[msg.sender]]!=msg.sender);dispute();if(aBlocklancerContracts[BlocklancerContracts[msg.sender]]!=msg.sender);finalizeDispute()"
FiatCentralBank/fiatcoin,contracts/token/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
rmerom/PutYourMoneyWhereYourContractIs,contracts/EnvironmentContractInterface.sol,blockDotBlockHash(uint forBlockNumber);blockDotCoinbase();blockDotDifficulty();blockDotGasLimit();blockDotNumber();blockDotTimestamp();now()
SmartChainX/ChainBlockchain,Contracts/Base/TokenRegistry.sol,"removeToken(address _token);setTokenName(address _token, string _name);setTokenSymbol(address _token, string _symbol);setTokenIpfsHash(address _token, bytes32 _ipfsHash);setTokenSwarmHash(address _token, bytes32 _swarmHash);setTokenUrl(address _token, string _url);getTokenAddressBySymbol(string _symbol);getTokenAddressByName(string _name);getTokenMetaData(address _token);getTokenByName(string _name);getTokenBySymbol(string _symbol);getTokenAddresses()"
montyly/manticore,tests/ethereum/contracts/detectors/retval_insane.sol,call();callchecked()
trailofbits/manticore,tests/ethereum/contracts/detectors/retval_insane.sol,call();callchecked()
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app20-factory_contract_creates_two_types_of_get_set_contracts/GSFactory.sol,set(uint x);get();create();getLast()
eris-ltd/eris,tests/jobs_fixtures/app20-factory_contract_creates_two_types_of_get_set_contracts/GSFactory.sol,set(uint x);get();create();getLast()
monax/monax,tests/jobs_fixtures/app20-factory_contract_creates_two_types_of_get_set_contracts/GSFactory.sol,set(uint x);get();create();getLast()
eris-ltd/eris-cli,tests/jobs_fixtures/app20-factory_contract_creates_two_types_of_get_set_contracts/GSFactory.sol,set(uint x);get();create();getLast()
monax/cli,tests/jobs_fixtures/app20-factory_contract_creates_two_types_of_get_set_contracts/GSFactory.sol,set(uint x);get();create();getLast()
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app20-factory_contract_creates_two_types_of_get_set_contracts/GSFactory.sol,set(uint x);get();create();getLast()
iudex/iudex,contracts/lookup.sol,"setOwner(address addr);Lookup();setStorage(address addr);setAccountProvider(uint8 accountProvider, address addr)"
redsquirrel/augur-core,src/reporting/ReportingToken.sol,"initialize(Market _market, uint256[] _payoutNumerators);buy(uint256 _attotokens);redeemDisavowedTokens(address _reporter);redeemForkedTokens();redeemWinningTokens();migrateLosingTokens();migrateLosingTokenRepToDisputeBond(DisputeBondToken _disputeBondToken);migrateLosingTokenRepToWinningToken();getTypeName();getBranch();getReputationToken();getReportingWindow();getRegistrationToken();getMarket();getPayoutDistributionHash();getPayoutNumerator(uint8 index)"
ethbitcoin/goodbit,tests/truffle/Asset.sol,"transferFrom(uint256 _real,uint256 _expected)"
commodityadnetwork/CDX,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
chainpoint/chainpoint-services,node-eth-contracts/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
FiatCentralBank/fiatcoin,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Majoolr/ethereum-libraries,CrowdsaleLib/EvenDistroCrowdsale/truffle/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Majoolr/ethereum-libraries,CrowdsaleLib/DirectCrowdsale/truffle/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Codewars/codewars-runner,frameworks/solidity/truffle/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
pz7/liquet,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Codewars/codewars-runner-cli,frameworks/solidity/truffle/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
OverZealous/codewars-runner-cli,frameworks/solidity/truffle/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
easyMINE/SmartContracts,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
francesco-strazzullo/ethereum-dapps-examples,contracts/SimpleStorage.sol,set(uint x);get()
redsquirrel/augur-core,src/factories/IterableMapFactory.sol,"initialize(address _owner);createIterableMap(Controller _controller, address _owner)"
locals-world/locals-app,truffle/contracts/localsCointoken.sol,"receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);transfer(address _to, uint256 _value);transferAndExecute(address _to, uint256 _value, string _function, string _args);approveAndCall(address _spender, uint256 _value, bytes _extraData);transferFrom(address _from, address _to, uint256 _value);checkEthBalance(address _ethaccount);mintToken(address target, uint256 mintedAmount);addToWhitelist(address _whitelistaddr);kill()"
rmerom/PutYourMoneyWhereYourContractIs,ExampleTargetContract.sol,"BountableContract(EnvironmentContractInterface _env, address opt_owner)"
samejack/blog-content,erc-20/ERC-20.sol,"add(uint a, uint b);sub(uint a, uint b);mul(uint a, uint b);div(uint a, uint b);totalSupply();balanceOf(address tokenOwner);allowance(address tokenOwner, address spender);transfer(address to, uint tokens);approve(address spender, uint tokens);transferFrom(address from, address to, uint tokens);receiveApproval(address from, uint256 tokens, address token, bytes memory data);transferOwnership(address _newOwner);acceptOwnership();totalSupply();balanceOf(address tokenOwner);transfer(address to, uint tokens);approve(address spender, uint tokens);transferFrom(address from, address to, uint tokens);allowance(address tokenOwner, address spender);approveAndCall(address spender, uint tokens, bytes memory data)"
descampsk/wavevote,WaveVote_Contracts/WaveVote.sol,"invmod(uint a, uint p);expmod(uint b, uint e, uint m);onCurve(uint[2] P);isPubKey(uint[2] memory P);isPubKey(uint[3] memory P);_add(uint[3] memory P, uint[3] memory Q);_addMixed(uint[3] memory P, uint[2] memory Q);_addMixedM(uint[3] memory P, uint[2] memory Q);_double(uint[3] memory P);_doubleM(uint[3] memory P);_mul(uint d, uint[2] memory P);owned();transferOwnership(address newOwner);getPeopleToRegister(address _address);getVoterBis(address _address);hasAskedForRegistration(address _address);isRegistered(address _address);hasCastVote(address _address);getTotalAnswers();WaveVote();addEther();sendOneEtherToVoter(address addr);beginSignUp(string _question, bool enableCommitmentPhase, uint _finishSignupPhase, uint _endSignupPhase, uint _endCommitmentPhase, uint _endVotingPhase, uint _endRefundPhase, uint _depositrequired);beginSignUp(string _question, bytes32[] _answerListBytes, uint _finishSignupPhase, uint _endSignupPhase, uint _endVotingPhase);deadlinePassed();forceCancelElection();askForRegistration(uint[2] personalPublicKey, bytes32 inscriptionCode);registerAccount(address accountToRegister, uint[2] adminPublicKey, uint[2] xG, uint[3] vG, uint r);computeReconstructedKey(uint indexVoter);submitVote(uint[3] y, uint[2][10] diAndriList, uint[2][10] aList,  uint[2][10] bList);submitNullVote(address addressToDoNullVote, uint[2] nullVote, uint[3] vG, uint[3] yvG, uint r);computeSumAllVote();computeTally();computeFinalTally(uint result);discretLogarithme(uint[2] point);verifyTally(uint[2] sumVotes);verifyZKP(uint[2] xG, uint r, uint[3] vG);verifyZKPNullVote(uint[2] xG, uint[2] yG, uint[2] voteNull, uint r, uint[3] vG, uint[3] vH);verifyZKPVote(uint[3] y, uint[2][2] res2D, uint[2][10] diAndriList, uint[2][10] aList,  uint[2][10] bList)"
montyly/manticore,tests/ethereum/contracts/detectors/delegatecall_ok3.sol,default_call(bytes data)
trailofbits/manticore,tests/ethereum/contracts/detectors/delegatecall_ok3.sol,default_call(bytes data)
DRI-project/RICO,contracts/EIP20StandardToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
Neufund/Contracts,contracts/neufund/LiquidDelegateGovernance.sol,""
SCBuergel/timeLock-smartContract,timeLockNoCommentsNoLinebreaks.sol,payIn(uint lockTimeS);payOut();getMyLockedFunds();getMyLockedFundsReleaseTime();getNow()
input-output-hk/etc-client,src/evmTest/resources/solidity/MutualRecursion.sol,isEven(uint n);isOdd(uint n)
WingsDao/contracts,contracts/Token.sol,"Token(uint _accountsToAllocate, address _multisignature);allocate(address user, uint balance);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);approve(address _spender, uint _value);addPreminer(address preminer, address recipient, uint initialBalance, uint monthlyPayment);disablePreminer(address _preminer, address _newPreminer, address _newRecipient);addPremineAllocation(address _preminer, uint _time);getPreminer(address _preminer);getPreminerAllocation(address _preminer, uint _index);releasePremine()"
manishbisht/Udacity,Blockchain Developer Nanodegree/P6 - Architect a Blockchain Supply Chain Solution/Part B/Starter_Code/project-6/contracts/accessControl/CustomerRole.sol,isCustomer(address account);addCustomer(address account);renounceCustomer();_addCustomer(address account);_removeCustomer(address account)
cgewecke/solcover,test/sources/return/return.sol,a(uint x)
JoinColony/solcover,test/sources/return/return.sol,a(uint x)
Ethbet/ethbet,alpha/contracts/oraclizeAPI_0.4.sol,"query(uint _timestamp, string _datasource, string _arg);query_withGasLimit(uint _timestamp, string _datasource, string _arg, uint _gaslimit);queryN(uint _timestamp, string _datasource, bytes _argN);queryN_withGasLimit(uint _timestamp, string _datasource, bytes _argN, uint _gaslimit);getPrice(string _datasource);getPrice(string _datasource, uint gaslimit);useCoupon(string _coupon);setProofType(byte _proofType);setConfig(bytes32 _config);setCustomGasPrice(uint _gasPrice);randomDS_getSessionPubKeyHash();getAddress();oraclize_setNetwork(uint8 networkID);__callback(bytes32 myid, string result);__callback(bytes32 myid, string result, bytes proof);oraclize_useCoupon(string code);oraclize_getPrice(string datasource);oraclize_getPrice(string datasource, uint gaslimit);oraclize_query(string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2, uint gaslimit);oraclize_query(string datasource, string[] argN);oraclize_query(uint timestamp, string datasource, string[] argN);oraclize_query(uint timestamp, string datasource, string[] argN, uint gaslimit);oraclize_query(string datasource, string[] argN, uint gaslimit);oraclize_query(string datasource, string[1] args);oraclize_query(uint timestamp, string datasource, string[1] args);oraclize_query(uint timestamp, string datasource, string[1] args, uint gaslimit);oraclize_query(string datasource, string[1] args, uint gaslimit);oraclize_query(string datasource, string[2] args);oraclize_query(uint timestamp, string datasource, string[2] args);oraclize_query(uint timestamp, string datasource, string[2] args, uint gaslimit);oraclize_query(string datasource, string[2] args, uint gaslimit);oraclize_query(string datasource, string[3] args);oraclize_query(uint timestamp, string datasource, string[3] args);oraclize_query(uint timestamp, string datasource, string[3] args, uint gaslimit);oraclize_query(string datasource, string[3] args, uint gaslimit);oraclize_query(string datasource, string[4] args);oraclize_query(uint timestamp, string datasource, string[4] args);oraclize_query(uint timestamp, string datasource, string[4] args, uint gaslimit);oraclize_query(string datasource, string[4] args, uint gaslimit);oraclize_query(string datasource, string[5] args);oraclize_query(uint timestamp, string datasource, string[5] args);oraclize_query(uint timestamp, string datasource, string[5] args, uint gaslimit);oraclize_query(string datasource, string[5] args, uint gaslimit);oraclize_query(string datasource, bytes[] argN);oraclize_query(uint timestamp, string datasource, bytes[] argN);oraclize_query(uint timestamp, string datasource, bytes[] argN, uint gaslimit);oraclize_query(string datasource, bytes[] argN, uint gaslimit);oraclize_query(string datasource, bytes[1] args);oraclize_query(uint timestamp, string datasource, bytes[1] args);oraclize_query(uint timestamp, string datasource, bytes[1] args, uint gaslimit);oraclize_query(string datasource, bytes[1] args, uint gaslimit);oraclize_query(string datasource, bytes[2] args);oraclize_query(uint timestamp, string datasource, bytes[2] args);oraclize_query(uint timestamp, string datasource, bytes[2] args, uint gaslimit);oraclize_query(string datasource, bytes[2] args, uint gaslimit);oraclize_query(string datasource, bytes[3] args);oraclize_query(uint timestamp, string datasource, bytes[3] args);oraclize_query(uint timestamp, string datasource, bytes[3] args, uint gaslimit);oraclize_query(string datasource, bytes[3] args, uint gaslimit);oraclize_query(string datasource, bytes[4] args);oraclize_query(uint timestamp, string datasource, bytes[4] args);oraclize_query(uint timestamp, string datasource, bytes[4] args, uint gaslimit);oraclize_query(string datasource, bytes[4] args, uint gaslimit);oraclize_query(string datasource, bytes[5] args);oraclize_query(uint timestamp, string datasource, bytes[5] args);oraclize_query(uint timestamp, string datasource, bytes[5] args, uint gaslimit);oraclize_query(string datasource, bytes[5] args, uint gaslimit);oraclize_cbAddress();oraclize_setProof(byte proofP);oraclize_setCustomGasPrice(uint gasPrice);oraclize_setConfig(bytes32 config);oraclize_randomDS_getSessionPubKeyHash();getCodeSize(address _addr);parseAddr(string _a);strCompare(string _a, string _b);indexOf(string _haystack, string _needle);strConcat(string _a, string _b, string _c, string _d, string _e);strConcat(string _a, string _b, string _c, string _d);strConcat(string _a, string _b, string _c);strConcat(string _a, string _b);parseInt(string _a);parseInt(string _a, uint _b);oraclize_setNetworkName(string _network_name);oraclize_getNetworkName();oraclize_newRandomDSQuery(uint _delay, uint _nbytes, uint _customGasLimit);oraclize_randomDS_setCommitment(bytes32 queryId, bytes32 commitment);verifySig(bytes32 tosignh, bytes dersig, bytes pubkey);oraclize_randomDS_proofVerify__sessionKeyValidity(bytes proof, uint sig2offset);oraclize_randomDS_proofVerify__returnCode(bytes32 _queryId, string _result, bytes _proof);oraclize_randomDS_proofVerify__main(bytes proof, bytes32 queryId, bytes result, string context_name);copyBytes(bytes from, uint fromOffset, uint length, bytes to, uint toOffset);safer_ecrecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s);ecrecovery(bytes32 hash, bytes sig)"
Ethbet/ethbet,contracts/oraclizeAPI_0.4.sol,"query(uint _timestamp, string _datasource, string _arg);query_withGasLimit(uint _timestamp, string _datasource, string _arg, uint _gaslimit);queryN(uint _timestamp, string _datasource, bytes _argN);queryN_withGasLimit(uint _timestamp, string _datasource, bytes _argN, uint _gaslimit);getPrice(string _datasource);getPrice(string _datasource, uint gaslimit);useCoupon(string _coupon);setProofType(byte _proofType);setConfig(bytes32 _config);setCustomGasPrice(uint _gasPrice);randomDS_getSessionPubKeyHash();getAddress();oraclize_setNetwork(uint8 networkID);__callback(bytes32 myid, string result);__callback(bytes32 myid, string result, bytes proof);oraclize_useCoupon(string code);oraclize_getPrice(string datasource);oraclize_getPrice(string datasource, uint gaslimit);oraclize_query(string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2, uint gaslimit);oraclize_query(string datasource, string[] argN);oraclize_query(uint timestamp, string datasource, string[] argN);oraclize_query(uint timestamp, string datasource, string[] argN, uint gaslimit);oraclize_query(string datasource, string[] argN, uint gaslimit);oraclize_query(string datasource, string[1] args);oraclize_query(uint timestamp, string datasource, string[1] args);oraclize_query(uint timestamp, string datasource, string[1] args, uint gaslimit);oraclize_query(string datasource, string[1] args, uint gaslimit);oraclize_query(string datasource, string[2] args);oraclize_query(uint timestamp, string datasource, string[2] args);oraclize_query(uint timestamp, string datasource, string[2] args, uint gaslimit);oraclize_query(string datasource, string[2] args, uint gaslimit);oraclize_query(string datasource, string[3] args);oraclize_query(uint timestamp, string datasource, string[3] args);oraclize_query(uint timestamp, string datasource, string[3] args, uint gaslimit);oraclize_query(string datasource, string[3] args, uint gaslimit);oraclize_query(string datasource, string[4] args);oraclize_query(uint timestamp, string datasource, string[4] args);oraclize_query(uint timestamp, string datasource, string[4] args, uint gaslimit);oraclize_query(string datasource, string[4] args, uint gaslimit);oraclize_query(string datasource, string[5] args);oraclize_query(uint timestamp, string datasource, string[5] args);oraclize_query(uint timestamp, string datasource, string[5] args, uint gaslimit);oraclize_query(string datasource, string[5] args, uint gaslimit);oraclize_query(string datasource, bytes[] argN);oraclize_query(uint timestamp, string datasource, bytes[] argN);oraclize_query(uint timestamp, string datasource, bytes[] argN, uint gaslimit);oraclize_query(string datasource, bytes[] argN, uint gaslimit);oraclize_query(string datasource, bytes[1] args);oraclize_query(uint timestamp, string datasource, bytes[1] args);oraclize_query(uint timestamp, string datasource, bytes[1] args, uint gaslimit);oraclize_query(string datasource, bytes[1] args, uint gaslimit);oraclize_query(string datasource, bytes[2] args);oraclize_query(uint timestamp, string datasource, bytes[2] args);oraclize_query(uint timestamp, string datasource, bytes[2] args, uint gaslimit);oraclize_query(string datasource, bytes[2] args, uint gaslimit);oraclize_query(string datasource, bytes[3] args);oraclize_query(uint timestamp, string datasource, bytes[3] args);oraclize_query(uint timestamp, string datasource, bytes[3] args, uint gaslimit);oraclize_query(string datasource, bytes[3] args, uint gaslimit);oraclize_query(string datasource, bytes[4] args);oraclize_query(uint timestamp, string datasource, bytes[4] args);oraclize_query(uint timestamp, string datasource, bytes[4] args, uint gaslimit);oraclize_query(string datasource, bytes[4] args, uint gaslimit);oraclize_query(string datasource, bytes[5] args);oraclize_query(uint timestamp, string datasource, bytes[5] args);oraclize_query(uint timestamp, string datasource, bytes[5] args, uint gaslimit);oraclize_query(string datasource, bytes[5] args, uint gaslimit);oraclize_cbAddress();oraclize_setProof(byte proofP);oraclize_setCustomGasPrice(uint gasPrice);oraclize_setConfig(bytes32 config);oraclize_randomDS_getSessionPubKeyHash();getCodeSize(address _addr);parseAddr(string _a);strCompare(string _a, string _b);indexOf(string _haystack, string _needle);strConcat(string _a, string _b, string _c, string _d, string _e);strConcat(string _a, string _b, string _c, string _d);strConcat(string _a, string _b, string _c);strConcat(string _a, string _b);parseInt(string _a);parseInt(string _a, uint _b);oraclize_setNetworkName(string _network_name);oraclize_getNetworkName();oraclize_newRandomDSQuery(uint _delay, uint _nbytes, uint _customGasLimit);oraclize_randomDS_setCommitment(bytes32 queryId, bytes32 commitment);verifySig(bytes32 tosignh, bytes dersig, bytes pubkey);oraclize_randomDS_proofVerify__sessionKeyValidity(bytes proof, uint sig2offset);oraclize_randomDS_proofVerify__returnCode(bytes32 _queryId, string _result, bytes _proof);oraclize_randomDS_proofVerify__main(bytes proof, bytes32 queryId, bytes result, string context_name);copyBytes(bytes from, uint fromOffset, uint length, bytes to, uint toOffset);safer_ecrecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s);ecrecovery(bytes32 hash, bytes sig)"
silasdavis/eris-db,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs3.sol,"addThing(bytes32 description, string memory url, string memory filehash, string memory filename)"
silasdavis/burrow,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs3.sol,"addThing(bytes32 description, string memory url, string memory filehash, string memory filename)"
eris-ltd/eris-db,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs3.sol,"addThing(bytes32 description, string memory url, string memory filehash, string memory filename)"
robmyers/artworld-ethereum,dapps/hot-cold/contracts/HotCold.sol,""
AugustoL/LifToken,contracts/test-helpers/Message.sol,"showMessage(bytes32 _message, uint256 _number, string _text);fail();call(address to, bytes data)"
windingtree/LifToken,contracts/test-helpers/Message.sol,"showMessage(bytes32 _message, uint256 _number, string _text);fail();call(address to, bytes data)"
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/test/helpers/ReentrancyAttack.sol,callSender(bytes4 data)
pash7ka/zeppelin-solidity,test/helpers/ReentrancyAttack.sol,callSender(bytes4 data)
Dicoiner/irianna-solidity,test/helpers/ReentrancyAttack.sol,callSender(bytes4 data)
pz7/liquet,node_modules/zeppelin-solidity/test/helpers/ReentrancyAttack.sol,callSender(bytes4 data)
dmx374/zeppelin-solidity,test/helpers/ReentrancyAttack.sol,callSender(bytes4 data)
cashpokerpro-dev/cash-smartcontracts,test/helpers/ReentrancyAttack.sol,callSender(bytes4 data)
cinderblockchain/cindertoken,test/helpers/ReentrancyAttack.sol,callSender(bytes4 data)
ChronoBank/LX-SC,contracts/helpers/UserMock.sol,recoverUser(address _newAddress);setContractOwner(address _newOwner)
Storiqa/ico_smart_contract,contracts/test_helpers/STQPreICO3TestHelper.sol,getCurrentTime();setTime(uint time);getMinimumFunds();getMaximumFunds()
montyly/manticore,tests/ethereum/contracts/detectors/predictable_not_ok.sol,callchecked()
trailofbits/manticore,tests/ethereum/contracts/detectors/predictable_not_ok.sol,callchecked()
EtherReal-ID/EtherReal-ID,sol/etherReal_Smart_ID.sol,"receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);Ethereal_Smart_ID(address owner,address validator,string name,string id,bool entity);requestNewID(string name,string id,string location);Validate(string name,string id,string location);addValidated(address a);addFamily(address a);removeFamily(address a);addWallet(address a);removeWallet(address a);checkpopa();verifyAddress(address a,string addr);addressVerified(string addr);verifyEmail(address a,string addr);emailVerified();verifyImage(address a,string addr);imageVerified();getValidator(uint v);getValidated(uint v);getWallet(uint w);getInfo();check();transfer(address _to, uint256 _value);approve(address _spender, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);transferFrom(address _from, address _to, uint256 _value);setOwner(address _owner);AddressReg();verify(address addr);deverify(address addr);hasPhysicalAddress(address addr)"
careerxon/code,BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
mdmshf/Komhar,testingContracts.sol,testingContracts();incrementValue();decrementValue();fetchValue();setValue(uint newvalue)
montyly/manticore,tests/ethereum/contracts/int_overflow.sol,intoverflow_add(uint input);intoverflow_mul(uint input);intunderflow(uint input);gintoverflow_add(uint input);gintoverflow_mul(uint input);gintunderflow(uint input)
trailofbits/manticore,tests/ethereum/contracts/int_overflow.sol,intoverflow_add(uint input);intoverflow_mul(uint input);intunderflow(uint input);gintoverflow_add(uint input);gintoverflow_mul(uint input);gintunderflow(uint input)
montyly/manticore,tests/ethereum/contracts/imports_issue/utils/DirImported.sol,""
trailofbits/manticore,tests/ethereum/contracts/imports_issue/utils/DirImported.sol,""
Codewars/codewars-runner,frameworks/ethereum/contracts/Ballot.sol,Ballot(bytes32[] proposalNames);giveRightToVote(address voter);delegate(address to);vote(uint proposal);winningProposal();winnerName()
Codewars/codewars-runner-cli,frameworks/ethereum/contracts/Ballot.sol,Ballot(bytes32[] proposalNames);giveRightToVote(address voter);delegate(address to);vote(uint proposal);winningProposal();winnerName()
OverZealous/codewars-runner-cli,frameworks/ethereum/contracts/Ballot.sol,Ballot(bytes32[] proposalNames);giveRightToVote(address voter);delegate(address to);vote(uint proposal);winningProposal();winnerName()
CBAInnovationLab/web3-sandbox,src/contracts/SimpleStorage.sol,SimpleStorage(uint initial);set(uint x);get()
js0p/SimpleNameService,SimpleNameService.sol,"SimpleNameService();get(bytes32 hash);set(bytes32 hash, address addr);getOwner();setOwner(address newOwner)"
ericvrp/SoliditySandbox,app/src/contracts/owned.sol,owned()
mwensveen-nl/solidity-testing,src/test/resources/SubContract.sol,SubContract();bumpCounter(uint a)
ethereum/dapp-bin,registrar/urlhint.sol,"name(address _owner);setOwner(string _name,address _newOwner);setAddr(string _name,address _a);addr(string _name);subRegistrar(string _name);reserve(string _name);disown(string _name,address _refund);setName(string _name);setSubRegistrar(string _name,address _registrar);content(string _name);owner(string _name);record(string _name);setContent(string _name,bytes32 _content);UrlHint();kill();url(bytes32 _hash);owner(bytes32 _hash);suggestUrl(bytes32 _hash, bytes32 _url)"
montyly/manticore,examples/evm/umd_example.sol,"test_me(int a, int b, int c)"
trailofbits/manticore,examples/evm/umd_example.sol,"test_me(int a, int b, int c)"
mhhf/dapple,test/_fixtures/linker_test_package/src.linked/sol/dapple_contract.sol,""
nexusdev/dapple,test/_fixtures/linker_test_package/src.linked/sol/dapple_contract.sol,""
zchn/ethereum-analyzer,examples/analysis-benchmark/call-value.sol,Test()
chenlian2015/eosEthMarketSample,contracts/OLRandomContractInterface.sol,"requestOneUUID(address callBackAddress, uint versionCaller);sendOnlyHash(bytes32 hash);sendSeedAndHash(bytes32 seed, bytes32 hash);getCurrentNeedsCount();nowCanProvideHash()"
DivvyDAO/minime,contracts/SimpleDonation.sol,setMiniMeToken(address addr);donate()
livepeer/protocol,contracts/token/ITokenDistribution.sol,isOver();getEndTime()
landon/Playground,DecentralizedApp1/DecentralizedApp/samples/SimpleStorage.sol,set(uint x);get()
DroneEmployee/contracts,interface/FlightPlan.sol,FlightPlan(address _drone);append(Checkpoint _checkpoint);run()
ranneyd/eth-faucet,contracts/Authentication.sol,login();signup(bytes32 name);update(bytes32 name)
TickethProject/ticketh-core,contracts/Authentication.sol,login();signup(bytes32 name);update(bytes32 name)
lucywe/rootcore-crowdsale,solidity/contracts/ERC20Token.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value)"
AdChain/AdChainRegistry,contracts/Registry.sol,"apply(string _domain, uint _amount);deposit(string _domain, uint _amount);withdraw(string _domain, uint _amount);exit(string _domain);challenge(string _domain);claimReward(uint _challengeID, uint _salt);updateStatus(string _domain);canBeWhitelisted(string _domain);isWhitelisted(string _domain);appWasMade(string _domain);challengeExists(string _domain);challengeCanBeResolved(string _domain);challengeWinnerReward(uint _challengeID);isExpired(uint _termDate);voterReward(address _voter, uint _challengeID, uint _salt);tokenClaims(uint _challengeID, address _voter);resolveChallenge(string _domain);whitelistApplication(string _domain);resetListing(string _domain)"
Bunjin/DXF,multisig.sol,"MultiSigWallet(address[] _owners, uint _required);addOwner(address owner);removeOwner(address owner);changeRequirement(uint _required);submitTransaction(address destination, uint value, bytes data, uint nonce);confirmTransaction(bytes32 transactionHash);revokeConfirmation(bytes32 transactionHash);executeTransaction(bytes32 transactionHash);isConfirmed(bytes32 transactionHash);getNonce(address destination, uint value, bytes data);getConfirmationCount(bytes32 transactionHash);getTransactionCount(bool pending, bool executed);addTransaction(address destination, uint value, bytes data, uint nonce);addConfirmation(bytes32 transactionHash, address owner);getOwners();getConfirmations(bytes32 transactionHash);getTransactionHashes(uint from, uint to, bool pending, bool executed)"
zetherz/eth-match,test/helpers/BasicTokenMock.sol,"BasicTokenMock(address initialAccount, uint256 initialBalance)"
jpoon/EthRelay,contracts/MainBank.sol,"MainBank();getBalance(uint bank);transfer(uint sourceBank, uint sourceAccountNumber, uint targetBank, uint targetAccountNumber, uint amount, uint transferId);revertTransfer(uint sourceBank, uint sourceAccountNumber, uint targetBank, uint targetAccountNumber, uint amount, uint transferId);internalTransfer(uint sourceBank, uint targetBank, uint amount);completeTransfer(uint transferId);rejectTransfer(uint transferId);credit(uint bank, uint amount);debit(uint bank, uint amount)"
mayukhdifferent/Ethereum_smart_contract_dev,HelloWorld.sol,myFirstHelloWorld()
KayinCheung/KayinCheung.github.io,EscrowMyEther.sol,"EscrowMyEther();setEscrowFee(uint fee);getEscrowFee(address escrowAddress);newEscrow(address sellerAddress, address escrowAddress, bytes32 notes);getNumTransactions(address inputAddress, uint switcher);getSpecificTransaction(address inputAddress, uint switcher, uint ID);buyerHistory(address buyerAddress, uint startID, uint numToLoad);SellerHistory(address inputAddress, uint startID , uint numToLoad);escrowHistory(address inputAddress, uint startID, uint numToLoad);checkStatus(address buyerAddress, uint nounce);buyerFundRelease(uint ID);sellerRefund(uint ID);EscrowEscalation(uint switcher, uint ID);escrowDecision(uint ID, uint Decision);WithdrawFunds();CheckBalance(address fromAddress)"
montyly/manticore,tests/ethereum/contracts/consensys_benchmark/assert_multitx_1.sol,Benchmark(uint256 _param);run()
trailofbits/manticore,tests/ethereum_bench/consensys_benchmark/assert_multitx_1.sol,Benchmark(uint256 _param);run()
jellegerbrandy/daostack,contracts/zeppelin-solidity/token/ERC20.sol,"balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value)"
cgewecke/solcover,test/sources/zeppelin/token/ERC20.sol,"balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value)"
WingsDao/contracts,contracts/zeppelin/token/ERC20.sol,"balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value)"
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/token/ERC20.sol,"balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value)"
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/token/ERC20.sol,"balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value)"
JoinColony/solcover,test/sources/zeppelin/token/ERC20.sol,"balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value)"
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app14-binding_abi_using_address_returns_pattern_single_instances/GSFactory.sol,set(uint x);get();create();getLast()
eris-ltd/eris,tests/jobs_fixtures/app14-binding_abi_using_address_returns_pattern_single_instances/GSFactory.sol,set(uint x);get();create();getLast()
monax/monax,tests/jobs_fixtures/app14-binding_abi_using_address_returns_pattern_single_instances/GSFactory.sol,set(uint x);get();create();getLast()
eris-ltd/eris-cli,tests/jobs_fixtures/app14-binding_abi_using_address_returns_pattern_single_instances/GSFactory.sol,set(uint x);get();create();getLast()
monax/cli,tests/jobs_fixtures/app14-binding_abi_using_address_returns_pattern_single_instances/GSFactory.sol,set(uint x);get();create();getLast()
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app14-binding_abi_using_address_returns_pattern_single_instances/GSFactory.sol,set(uint x);get();create();getLast()
trailofbits/greenhorn,csaw-2017/ETHERSNOOB/sources/ethersnoob2.sol,"set(uint data, uint data2, uint data3);get_flag();get()"
y12studio/dltdojo,contracts/ddjat/contracts/DDJBTC.sol,DDJBTC()
dapphub/ds-token,src/token.t.sol,"doTransferFrom(address from, address to, uint amount);doTransfer(address to, uint amount);doApprove(address recipient, uint amount);doAllowance(address owner, address spender);doBalanceOf(address who);doSetName(string memory name);doApprove(address guy);doPush(address who, uint amount);doPull(address who, uint amount);doMove(address src, address dst, uint amount);doMint(uint wad);doBurn(uint wad);doMint(address guy, uint wad);doBurn(address guy, uint wad);setUp();createToken();testSetupPrecondition();testTransferCost();testAllowanceStartsAtZero();testValidTransfers();testFailWrongAccountTransfers();testFailInsufficientFundsTransfers();testApproveSetsAllowance();testChargesAmountApproved();testFailTransferWithoutApproval();testFailChargeMoreThanApproved();testTransferFromSelf();testFailTransferFromSelfNonArbitrarySize();testMint();testMintself();testMintGuy();testFailMintNoAuth();testMintAuth();testFailMintGuyNoAuth();testMintGuyAuth();testBurn();testBurnself();testFailBurnGuyWithoutTrust();testBurnGuyWithTrust();testFailBurnNoAuth();testBurnAuth();testFailBurnGuyNoAuth();testBurnGuyAuth();testFailTransferWhenStopped();testFailTransferFromWhenStopped();testFailPushWhenStopped();testFailPullWhenStopped();testFailMoveWhenStopped();testFailMintWhenStopped();testFailMintGuyWhenStopped();testFailBurnWhenStopped();testFailTrustWhenStopped();testSetName();testFailSetName();testFailUntrustedTransferFrom();testTrusting();testTrustedTransferFrom();testPush();testFailPullWithoutTrust();testPullWithTrust();testFailMoveWithoutTrust();testMoveWithTrust();testApproveWillModifyAllowance();testApproveWillNotModifyAllowance();testFailTransferOnlyTrustedCaller()"
Getline-Network/getline,dapp/contracts/tokens/BasicToken.sol,"totalSupply();balanceOf(address _owner);allowance(address _owner, address _spender);transfer(address _to, uint256 _value);approve(address _spender, uint256 _value);transferFrom(address _from, address _to, uint256 _value)"
QTBlockchain/SolidityNWeb3,SmartContracts/March2018/StringDemo/contracts/StringDemo.sol,StringDemo();getElementAt(uint256 index);getSize()
TeamPeggle/pegglecoin,contracts/PeggleCoin.sol,burn(uint256 _value);PeggleCoin();setPeggleBot(string newPegglebot)
eris-ltd/eris-compilers,tests/libraryContract.sol,"insert(Data storage self, uint value);remove(Data storage self, uint value);contains(Data storage self, uint value);register(uint value)"
eris-ltd/lllc-server,tests/libraryContract.sol,"insert(Data storage self, uint value);remove(Data storage self, uint value);contains(Data storage self, uint value);register(uint value)"
shahankhatch/dapp-bin,clientreceipt/clientreceipt.sol,"nominate(address _keyholder, address _executive);open();close();deposit(bytes32 _id);refill();withdraw(address _to, uint _value);drain(address _to, uint _value)"
LianaHus/dapp-bin,clientreceipt/clientreceipt.sol,"nominate(address _keyholder, address _executive);open();close();deposit(bytes32 _id);refill();withdraw(address _to, uint _value);drain(address _to, uint _value)"
RepublicMaster/dapp-bin,clientreceipt/clientreceipt.sol,"nominate(address _keyholder, address _executive);open();close();deposit(bytes32 _id);refill();withdraw(address _to, uint _value);drain(address _to, uint _value)"
frozeman/ethereum-smart-contracts,clientreceipt/clientreceipt.sol,"nominate(address _keyholder, address _executive);open();close();deposit(bytes32 _id);refill();withdraw(address _to, uint _value);drain(address _to, uint _value)"
ethereum/dapp-bin,clientreceipt/clientreceipt.sol,"nominate(address _keyholder, address _executive);open();close();deposit(bytes32 _id);refill();withdraw(address _to, uint _value);drain(address _to, uint _value)"
vaporry/dapp-bin,clientreceipt/clientreceipt.sol,"nominate(address _keyholder, address _executive);open();close();deposit(bytes32 _id);refill();withdraw(address _to, uint _value);drain(address _to, uint _value)"
papyrusglobal/smartcontracts,contracts/channel/SettlementApi.sol,"deposit(uint256 amount);withdraw(uint256 amount);registerChannel(uint64 channelId, address seller, address[] verifierAddresses, uint256[] verifierRates);settle(uint64 channelId, uint64 blockId)"
mahendra-panchal/smart-contract-basics,Democracy.sol,"getBallotsNum(address chainperson);getProposalsNum(address chainperson, uint ballot);getBallotIndex(address chainperson, bytes32 ballotName);isVoted(address chainperson, uint ballot);startNewBallot(bytes32 ballotName, bool blindParam, bytes32[] proposalNames);getVoted(address chainperson, uint256 ballot);getVotesCount(address chainperson, uint256 ballot, bytes32 proposalName);getVotedData(address chainperson, uint256 ballot, address voter);vote(address chainperson, uint256 ballot, uint256 proposalNum);getProposalIndex(address chainperson, uint256 ballot, bytes32 proposalName);finishBallot(bytes32 ballot);getWinner(address chainperson, uint ballotIndex)"
LiveStars/crowdfunding-smart-contracts,LiveStarsToken.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);Ownable();transferOwnership(address newOwner);halt();unhalt();balanceOf(address _owner);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);approve(address _spender, uint _value);allowance(address _owner, address _spender);balanceOf(address _owner);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);approve(address _spender, uint _value);allowance(address _owner, address _spender);LiveStarsToken();withdraw();finalWithdraw();doPurchase(address _owner)"
coinstruct/coinstruct,InvestorRegistry.sol,InvestorRegistry();register(address _user);deregister(address _user)
Dicoiner/irianna-solidity,contracts/Findel/GatewayBool.sol,newBooleanValue();newProof();newValue()
mhhf/dapple,test/_fixtures/linker_test_package/src/sol/linker_example.sol,LinkerExample()
nexusdev/dapple,test/_fixtures/linker_test_package/src/sol/linker_example.sol,LinkerExample()
transmute-industries/eth-faucet,contracts/FaucetManager.sol,"FaucetManager();getFaucetByCreator();getFaucetByName(string _name);getFaucets();createFaucet(string _name);requestAccess(address _faucetAddress, address _requestorAddress );authorizeAccess(address _faucetAddress, address _requestorAddress);revokeAccess(address _faucetAddress, address _requestorAddress);killFaucet(address _address, string _name, address _creator)"
Vourhey/learning-center,sol/Lesson_1.sol,execute(Core _dao)
gmo-blockchain/solidity,contracts/FileObject.sol,""
drupalnomad/ethereum-contracts,xkcd.sol,"Xkcd();setOwner(address newOwner);addStrip(uint num, uint16 year, uint8 month, uint8 day, string title, string safeTitle, string img, string alt, string transcript, string news);removeStrip(uint num)"
globaljobcoin/GJC,contracts/token/SafeERC20.sol,"safeTransfer(ERC20Basic token, address to, uint256 value);safeTransferFrom(ERC20 token, address from, address to, uint256 value);safeApprove(ERC20 token, address spender, uint256 value)"
SafecontractDev/protocol,contracts/bancor_contracts/interfaces/IEtherToken.sol,deposit();withdraw(uint256 _amount)
isvirin/prover,Proof2.sol,"owned();changeOwner(address _owner);confirmOwner();migrateFrom(address _from, uint _value);Crowdsale(address _migrationHost);timeToFinishTokensSale();finishTokensSale(uint _investorsToProcess);withdrawBack();migrateFrom(address _from, uint256 _value);Token(address _migrationHost);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);approve(address _spender, uint _value);allowance(address _owner, address _spender);TokenMigration(address _migrationHost);migrate(uint _value);setMigrationAgent(address _agent);ProofTeamVote(address _migrationHost);startVotingTeam(uint _weiReqFund);votingInfoTeam();voteTeam(bool _inSupport);finishVotingTeam(uint _votesToProcess);ProofPublicVote(address _migrationHost);deployProject(uint _proofReqFund, string _urlInfo);projectInfoPublic(address _projectOwner);votePublic(address _projectOwner, bool _inSupport);finishVotingPublic(address _projectOwner, uint _votesToProcess);Proof(address _migrationHost);setPrice(uint _priceInTokens);swypeCode();setHash(uint16 _swype, bytes32 _hash)"
jeanturgeon/dawn,contracts/party_registry.sol,PartyRegistry();approve(bytes32 contract);delete(bytes32 contract);isValid(bytes32 contract);kill();reject(bytes32 contract);submit(bytes32 contract)
web3j/web3j-maven-plugin,src/test/resources/issue-17/issue17import1.sol,""
ryepdx/etherlab,lib/base/owned.sol,Owned();setOwner(address newOwner)
cgewecke/solcover,test/sources/function/function.sol,a(bytes32 x)
JoinColony/solcover,test/sources/function/function.sol,a(bytes32 x)
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/DelayedClaimable.sol,"setClaimBlocks(uint _claimBeforeBlock, uint _claimAfterBlock);claimOwnership()"
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/DelayedClaimable.sol,"setClaimBlocks(uint _claimBeforeBlock, uint _claimAfterBlock);claimOwnership()"
AragonOne/zeppelin-solidity,contracts/ownership/DelayedClaimable.sol,"setClaimBlocks(uint _claimBeforeBlock, uint _claimAfterBlock);claimOwnership()"
michinbear/solidity,test/compilationTests/stringutils/strings.sol,"memcpy(uint dest, uint src, uint len);toSlice(string self);len(bytes32 self);copy(slice self);toString(slice self);len(slice self);empty(slice self);compare(slice self, slice other);equals(slice self, slice other);nextRune(slice self, slice rune);nextRune(slice self);ord(slice self);keccak(slice self);startsWith(slice self, slice needle);beyond(slice self, slice needle);endsWith(slice self, slice needle);until(slice self, slice needle);findPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);rfindPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);find(slice self, slice needle);rfind(slice self, slice needle);split(slice self, slice needle, slice token);split(slice self, slice needle);rsplit(slice self, slice needle, slice token);rsplit(slice self, slice needle);count(slice self, slice needle);contains(slice self, slice needle);concat(slice self, slice other);join(slice self, slice[] parts)"
elementrem/solidity,test/compilationTests/stringutils/strings.sol,"memcpy(uint dest, uint src, uint len);toSlice(string self);len(bytes32 self);copy(slice self);toString(slice self);len(slice self);empty(slice self);compare(slice self, slice other);equals(slice self, slice other);nextRune(slice self, slice rune);nextRune(slice self);ord(slice self);keccak(slice self);startsWith(slice self, slice needle);beyond(slice self, slice needle);endsWith(slice self, slice needle);until(slice self, slice needle);findPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);rfindPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);find(slice self, slice needle);rfind(slice self, slice needle);split(slice self, slice needle, slice token);split(slice self, slice needle);rsplit(slice self, slice needle, slice token);rsplit(slice self, slice needle);count(slice self, slice needle);contains(slice self, slice needle);concat(slice self, slice other);join(slice self, slice[] parts)"
machinomy/machinomy,packages/contracts/contracts/TokenUnidirectional.sol,"open(bytes32 channelId, address receiver, uint256 settlingPeriod, address tokenContract, uint256 value);canDeposit(bytes32 channelId, address origin);deposit(bytes32 channelId, uint256 value);canStartSettling(bytes32 channelId, address origin);startSettling(bytes32 channelId);canSettle(bytes32 channelId);settle(bytes32 channelId);canClaim(bytes32 channelId, uint256 payment, address origin, bytes signature);claim(bytes32 channelId, uint256 payment, bytes signature);isAbsent(bytes32 channelId);isPresent(bytes32 channelId);isSettling(bytes32 channelId);isOpen(bytes32 channelId);paymentDigest(bytes32 channelId, uint256 payment, address tokenContract);recoveryPaymentDigest(bytes32 channelId, uint256 payment, address tokenContract)"
GX-Coin/SmartContract,GxOrders.sol,"GxOrders(address deploymentAdminsAddress);createOrder(uint32 quantity, uint32 pricePerCoin, uint whenToExpire, bool isBuy);createAndMatchOrder(Order order, GxOrderList orderList, GxOrderList matchOrderList, bool isBuy);matchOrder(Order memory order, GxOrderList orderList, GxOrderList matchOrderList, bool isBuy);saveOrder(Order memory order, GxOrderList orderList, bool isBuy);raiseOrderMatchEvent(uint32 _matchedQuantity, Order memory _sellOrder, Order memory _buyOrder)"
QTBlockchain/SolidityNWeb3,SmartContracts/March2018/CarRoute/contracts/AaadharDemo.sol,AaadharDemo()
michinbear/solidity,test/compilationTests/zeppelin/crowdsale/CappedCrowdsale.sol,CappedCrowdsale(uint256 _cap);validPurchase();hasEnded()
KudosProject/kudos-token,contracts/KudosPresaleTokenLockup.sol,"KudosPresaleTokenLockup(address _tokenContractAddress, address _beneficiary);release();fundsAreAvailable()"
hukkinj1/item-tracking,src/itemtracking.sol,"create(uint id);combine(uint[] srcIds, uint resultId);split(uint srcId);removeComponent(uint itemId, uint componentId);extract(uint srcId, uint[] toBeExtractedIds);handover(uint id, address receiver);getComponentCount(uint id);getComponentId(uint parentId, uint componentIndex);getOwner(uint id);getExistsStatus(uint id);getCreatedStatus(uint id)"
Great-Hill-Corporation/daodeepdive,assets/contracts/00-EtherID.sol,"EtherId();getId( uint domain, uint id );getDomain( uint domain );changeDomain( uint domain, uint expires, uint price, address transfer );changeId( uint domain, uint name, uint value )"
aragon/aragon-core,contracts/apm/Repo.sol,"initialize();getLatest();getLatestForContractAddress(address _contractAddress);getBySemanticVersion(uint16[3] _semanticVersion);getByVersionId(uint _versionId);getVersionsCount();isValidBump(uint16[3] _oldVersion, uint16[3] _newVersion);semanticVersionHash(uint16[3] version)"
ownage-ltd/ether-router,contracts/test/One.sol,setOne(uint _one);getOne()
jscottmiller/patronage,contracts/Exchange.sol,"reserve(address owner, uint amount);unreserve(address owner, uint amount);transfer(address oldOwner, address newOwner, uint shares);Exchange();postOffer(Side side, uint price, uint32 shares);getNumberOfOffers(Side side);getTopOffer(Side side);getOffer(Side side, uint depth);cancelOffer(Side side, uint price, uint32 shares);withdrawal();getBalance();spliceOffer(Side side, int16 parentIndex, int16 nextIndex)"
gmo-blockchain/solidity,contracts/AddressGroupField_v1.sol,"allowCnsContracts(bytes32 _id, address _cns, bytes32 _contractName);children(bytes32 _id);members(bytes32 _id, address _member);setDefault(bytes32 _id);existIdAtCurrentVersion(bytes32 _id);create(bytes32 _id, address _owner, bytes32[] _children);remove(bytes32 _id);getIsRemoved(bytes32 _id);setAllowCnsContract(bytes32 _id, address _cns, bytes32 _contractName, bool _isAdded);isAllowCnsContract(address _cns, bytes32 _contractName, bytes32 _id);setOwner(bytes32 _id, address _owner);getOwner(bytes32 _id);setMember(bytes32 _id, address _member, bool _isAdded);isMember(address _account, bytes32 _id);addChild(bytes32 _id, bytes32 _child);removeChild(bytes32 _id, bytes32 _child);getChild(bytes32 _id, uint _idx);getChildrenLength(bytes32 _id)"
AvyanConsultingCorp/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
forensiclogic/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
bhummerstone/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
willhighland/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
daltskin/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
mathieu-benoit/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
singhkay/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
vicperdana/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
chenriksson/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
ttmc/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
andyliuliming/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
robotechredmond/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
Jaganod/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
SudhakaraReddyEvuri/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
robklausems/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
hglkrijger/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
iouri-s/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
bharathsreenivas/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
philon-msft/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
samhodgkinson/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
stevenlivz/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
JF6/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
Kegeruneku/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
mmarch/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
jumbucks/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
ezubatov/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
gatneil/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
puneetsaraswat/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
saschagottfried/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
irwinwilliams/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
klondon71/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
iwooden/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
pelagos/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
tibor19/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
AlekseiPolkovnikov/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
pateixei/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
vglafirov/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
BorisB2015/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
YidingZhou/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
jmservera/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
apachipa/Azure-JSON-Custom,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
kotzenjh/DCOS-JSON,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
hlmstone/stone-china-azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
kenazk/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
MahendraAgrawal/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
MSSedusch/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
ChackDan/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
sazeesha/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
benofben/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
asheniam/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
smartpcr/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
madhana/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
alvadb/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
jwendl/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
jarobey/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
pdiniz13/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
RuudBorst/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
krkhan/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
y0ssa/scratchpad,quickstart/go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
bwanner/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
travismc1/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
jmspring/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
scrypter/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
sebastus/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
ililic/scratchpad,quickstart/go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
juvchan/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
andrewelizondo/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
rkotti/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
akurmi/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
mukulkgupta/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
grwilson/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
satyarapelly/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
kirpasingh/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
richstep/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
rarsan/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
blockapps/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
rivierni/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
251744647/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
gbowerman/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
haritshah33/azuretemplates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
jimdial/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
moisedo/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
CJRocK/AzureSQLalwaysOn,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
iamshital/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
bingosummer/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
liupeirong/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
gossion/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
dipakmsft/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
olandese/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
amitsriva/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
tagliateller/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
anweiss/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
uday31in/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
cerdmann-pivotal/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
ALM-Rangers/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
sidkri/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
jreid143/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
sivaedupuganti/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
AbelHu/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
pcgeek86/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
bmoore-msft/azure-quickstart-templates,application-workloads/ethereum/go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
realcodywburns/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
mumian/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
eshaparmar/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
jackyjngwn/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
smithab/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
kazumihirose/go-ethereum-on-ubuntu-private,go-ethereum-on-ubuntu/UploadBlobs/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
bcdev-/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
ritazh/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
honcao/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
Envera/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
steved0x/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
Thorlandus/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
lizzha/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
alibaloch/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
slapointe/azure-quickstart-templates,application-workloads/ethereum/go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
knithinc/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
Nepomuceno/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
matheusbertuco/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
rsponholtz/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
ShubhaVijayasarathy/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
grandhiramesh/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
nilaydshah/azure-quickstart-templates,application-workloads/ethereum/go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
marleyg/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
singhkays/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
squillace/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
eissi/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
CalCof/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
maneta/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
matt1883/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
castilhoa/azure,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
maniSbindra/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
sunbinzhu/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
rgardler/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
CharlPels/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
ishtein/azure-public,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
MSBrett/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
johndowns/azure-quickstart-templates,application-workloads/ethereum/go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
tracsman/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
dmakogon/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
jasonbw/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
arroyc/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
Alan-AcutePath/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
rnithish/MyOpenGit,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
MCKLMT/azure-quickstart-templates,application-workloads/ethereum/go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
Azure/azure-quickstart-templates,application-workloads/ethereum/go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
sabbour/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
arsenvlad/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
Teodelas/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
simongdavies/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
zechariahks/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
SunBuild/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
netwmr01/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
ne-msft/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
sedouard/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
nzthiago/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
adhurwit/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
jv1992/pqr,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
hrboyceiii/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
telmosampaio/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
anhowe/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
alinefr/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
Volkanco/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
georgewallace/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
rlfmendes/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
svk2/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
spcrux/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
introp-software/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
takekazuomi/azure-quickstart-templates,application-workloads/ethereum/go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
cdavid/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
xiaoyingLJ/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
Supraconductor/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
ninarn/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
cr0550ver/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
krnese/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
emondek/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
letsignit/azure-deploy,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
bdanse/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
zhongyi-zhang/azure-quickstart-templates,go-ethereum-on-ubuntu/GuestBook.sol,setEntry(string guestBookEntry);getMyEntry()
Sensorica/Interspace-Access,solidity/Identity.sol,"Identity(bytes32 _id, bytes32 _name)"
melonproject/protocol,contracts/fund/shares/Shares.sol,"burn(address _target, uint256 _amount);mint(address _target, uint256 _amount);redeemShares();redeemSharesEmergency();redeemSharesQuantity(uint256 _sharesQuantity);calcGav();calcSharePrice();__redeemShares(uint256 _sharesQuantity, bool _bypassFailure)"
transmute-industries/eth-faucet,contracts/Transmute/EventStore.sol,"getVersion();emitEvent(string _type, address _address, uint _uint, string _string);getType(uint eventId);getCreated(uint eventId);getAddressValue(uint eventId);getUIntValue(uint eventId);getStringValue(uint eventId)"
jeanturgeon/dawn,contracts/party.sol,""
melonproject/protocol,contracts/integrations/adapters/UniswapV2Adapter.sol,"identifier();parseAssetsForMethod(bytes4 _selector, bytes calldata _encodedCallArgs);takeOrder(bytes calldata _encodedCallArgs, bytes calldata _encodedAssetTransferArgs);__decodeCallArgs(bytes memory _encodedCallArgs)"
silasdavis/eris-db,execution/solidity/zero_reset.sol,setInt(int x);setIntToZero();getInt();setUint(uint x);setUintToZero();getUint()
silasdavis/burrow,execution/solidity/zero_reset.sol,setInt(int x);setIntToZero();getInt();setUint(uint x);setUintToZero();getUint()
SilentCicero/meteor-solc,examples/SimpleStorage/contracts/SimpleStorage.sol,SimpleStorage(uint initialValue);set(uint x);get()
GovernX/governx-contracts,src/contracts/utils/IProxy.sol,"forward(address destination, uint value, bytes data)"
daostack/daostack,contracts/schemes/SignalScheme.sol,"executeProposal(bytes32 _proposalId, int256 _param)"
QTBlockchain/SolidityNWeb3,SmartContracts/March2018/FareContract/contracts/VisibilityDerived.sol,VisibilityDerived();test()
cgewecke/solcover,test/sources/zeppelin/Bounty.sol,createTarget();deployContract();checkInvariant();claim(Target target);checkInvariant()
WingsDao/contracts,contracts/zeppelin/Bounty.sol,createTarget();deployContract();checkInvariant();claim(Target target);checkInvariant()
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/Bounty.sol,createTarget();deployContract();checkInvariant();claim(Target target);checkInvariant()
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/Bounty.sol,createTarget();deployContract();checkInvariant();claim(Target target);checkInvariant()
JoinColony/solcover,test/sources/zeppelin/Bounty.sol,createTarget();deployContract();checkInvariant();claim(Target target);checkInvariant()
TruLtd/tru-reputation-token,contracts/test-helpers/MockMigrationTarget.sol,"upgradeFrom(address _from, uint256 _value)"
QTBlockchain/SolidityNWeb3,Projects/VehicleRTO/contracts/Ownership.sol,"Ownership();addRTO(uint id, address rtoAddress);changeOwner(address newOwner)"
ConsenSys/dapp-store-contracts,contracts/DualIndex.sol,"DualIndex();set(uint key1, uint key2, uint value);transfer_ownership(address _admin);lookup(uint key1, uint key2)"
WishFinanceCom/WF-contracts,contracts/core/platform/WFPlatformEmitter.sol,"emitTransfer(address _from, address _to, bytes32 _symbol, uint _value, string _reference);emitIssue(bytes32 _symbol, uint _value, address _by);emitRevoke(bytes32 _symbol, uint _value, address _by);emitOwnershipChange(address _from, address _to, bytes32 _symbol);emitApprove(address _from, address _spender, bytes32 _symbol, uint _value);emitRecovery(address _from, address _to, address _by);emitError(bytes32 _message)"
InsidersByte/solc-cli,example-contracts/example.sol,Ballot(uint8 _numProposals);giveRightToVote(address voter);delegate(address to);vote(uint8 proposal);winningProposal()
mothershipcx/contracts,contracts/interface/Refundable.sol,"refund(address th, uint amount)"
lightswarm124/ethereumjs-sandbox,contracts/sol/adder.sol,""
misrab/gethools,testdata/imp2.sol,b()
adklempner/solidity-license,contracts/zeppelin/ownership/Multisig.sol,"changeOwner(address _from, address _to);execute(address _to, uint256 _value, bytes _data);confirm(bytes32 _h)"
michinbear/solidity,test/compilationTests/zeppelin/ownership/Multisig.sol,"changeOwner(address _from, address _to);execute(address _to, uint256 _value, bytes _data);confirm(bytes32 _h)"
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/ownership/Multisig.sol,"changeOwner(address _from, address _to);execute(address _to, uint256 _value, bytes _data);confirm(bytes32 _h)"
elementrem/solidity,test/compilationTests/zeppelin/ownership/Multisig.sol,"changeOwner(address _from, address _to);execute(address _to, uint256 _value, bytes _data);confirm(bytes32 _h)"
adamdossa/ProfitSharingContract,installed_contracts/zeppelin/contracts/ownership/Multisig.sol,"changeOwner(address _from, address _to);execute(address _to, uint256 _value, bytes _data);confirm(bytes32 _h)"
o0ragman0o/Withdrawable,contracts/Withdrawable.sol,"withdrawAll();etherBalanceOf(address _addr);withdrawAll();withdraw(uint _value);withdrawTo(address _to, uint _value);withdrawAllFor(address[] _addrs);withdrawFor(address[] _addrs, uint[] _values);withdrawAllFrom(address _from);withdrawFrom(address _from, uint _value);etherBalanceOf(address _addr);withdraw(uint _value);withdrawAll();withdrawTo(address _to, uint _value);withdrawAllFor(address[] _addrs);withdrawFor(address[] _addrs, uint[] _values);withdrawAllFrom(address _kAddr);withdrawFrom(address _kAddr, uint _value)"
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/payment/ConditionalEscrow.sol,withdrawalAllowed(address _payee);withdraw(address _payee)
Dicoiner/irianna-solidity,contracts/token/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
aragon/aragon-core,contracts/test/mocks/KernelSetAppMock.sol,"setApp(bytes32 _namespace, bytes32 _appId, address _app)"
attrox/automi,contracts/Users.sol,""
SafecontractDev/protocol,contracts/bancor_contracts/SmartToken.sol,"SmartToken(string _name, string _symbol, uint8 _decimals);disableTransfers(bool _disable);issue(address _to, uint256 _amount);destroy(address _from, uint256 _amount);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value)"
FilipPyrek/ethereum-csgo-example,contracts/zeppelin/Ownable.sol,Ownable();transfer(address newOwner)
DigixGlobal/ethereum-ruby,contracts/classic/DigixbotUsers.sol,"DigixbotUsers(address _config);getOwner();getConfig();getBotContract();addUser(bytes32 _id);userCheck(bytes32 _id);setUserAccount(bytes32 _id, address _account);accountLockCheck(bytes32 _id);lockAccount(bytes32 _id);userAddressCheck(bytes32 _id);unlockAccount(bytes32 _id);tipLockCheck(bytes32 _id);lockTip(bytes32 _id);unlockTip(bytes32 _id);getUserId(address _account);getUserAccount(bytes32 _id)"
EthWorks/ethereum.rb,contracts/classic/DigixbotUsers.sol,"DigixbotUsers(address _config);getOwner();getConfig();getBotContract();addUser(bytes32 _id);userCheck(bytes32 _id);setUserAccount(bytes32 _id, address _account);accountLockCheck(bytes32 _id);lockAccount(bytes32 _id);userAddressCheck(bytes32 _id);unlockAccount(bytes32 _id);tipLockCheck(bytes32 _id);lockTip(bytes32 _id);unlockTip(bytes32 _id);getUserId(address _account);getUserAccount(bytes32 _id)"
marekkirejczyk/ethereum.rb,contracts/classic/DigixbotUsers.sol,"DigixbotUsers(address _config);getOwner();getConfig();getBotContract();addUser(bytes32 _id);userCheck(bytes32 _id);setUserAccount(bytes32 _id, address _account);accountLockCheck(bytes32 _id);lockAccount(bytes32 _id);userAddressCheck(bytes32 _id);unlockAccount(bytes32 _id);tipLockCheck(bytes32 _id);lockTip(bytes32 _id);unlockTip(bytes32 _id);getUserId(address _account);getUserAccount(bytes32 _id)"
Spreadway/core,Prophets/my-ico/contracts/GustavoCoinCrowdsale.sol,"GustavoCoinCrowdsale(uint256 _startTime, uint256 _endTime, uint256 _rate, address _wallet);createTokenContract()"
landon/Playground,DecentralizedApp1/DecentralizedApp/samples/Payout.sol,Setup();Dividend()
chfast/cpp-ethereum,test/performance/loop.sol,loop()
commodityadnetwork/CDX,contracts/TokenLogic.sol,"TokenLogic(Token token_, TokenData data_, uint icoStart_, uint icoHours_);contributorCount();setOwner(address owner_);setToken(Token token_);setIcoStart(uint icoStart_, uint icoHours_);setPresale(bool presale_);setTokensPerWei(uint tokensPerWei_);totalSupply();balanceOf(address src);allowance(address src, address guy);transfer(address src, address dst, uint wad);transferFrom(address src, address dst, uint wad);approve(address src, address guy, uint256 wad);mint(uint128 wad);burn(address src, uint128 wad);returnIcoInvestments(uint contributorIndex);handlePayment(address src, uint eth)"
fengkiej/chainsign,contracts/DigitalMaterai.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);DigitalMaterai(uint initialSupply);totalSupply();balanceOf(address _owner);_transfer(address _from, address _to, uint _value);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);approve(address _spender, uint _value);allowance(address _owner, address _spender);mintToken(address target, uint256 mintedAmount);stampDocument(bytes32 docHash, uint256 amount);readStamped(bytes32 docHash)"
trixyrabbit/Exile,contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
Dicoiner/irianna-solidity,contracts/Findel/Gateway.sol,Gateway();getValue();getTimestamp();getProof();newProof();newValue();update()
openanx/OpenANXToken,contracts/OpenANXToken.sol,"balanceOf(address _owner);transfer(address _to, uint _amount);OpenANXToken(address _wallet);setWallet(address _wallet);setTokensPerKEther(uint _tokensPerKEther);proxyPayment(address participant);finalise();addPrecommitment(address participant, uint balance);transfer(address _to, uint _amount);transferFrom(address _from, address _to, uint _amount);kycVerify(address participant);balanceOfLocked(address account);totalSupplyLocked();totalSupplyUnlocked()"
openanx/OpenANXToken,test/OpenANXToken.sol,"balanceOf(address _owner);transfer(address _to, uint _amount);OpenANXToken(address _wallet);setWallet(address _wallet);setTokensPerKEther(uint _tokensPerKEther);proxyPayment(address participant);finalise();addPrecommitment(address participant, uint balance);transfer(address _to, uint _amount);transferFrom(address _from, address _to, uint _amount);kycVerify(address participant);balanceOfLocked(address account);totalSupplyLocked();totalSupplyUnlocked()"
ResourceHog/futarchy,contracts/Futarchy.sol,"Futarchy();addProposal(uint marketEvaluationTime, uint preConditionEvaluationTime, PreCondition preCondition, uint metricStartEvaluationTime, uint metricEndEvaluationTime, Metric metric, uint actionEvaluationTime, Action action, uint sendQuantity, address recipientAddress);evaluateProposalMarket(uint index);evaluateProposalPreCondition(uint index);evaluateProposalMetricStart(uint index);evaluateProposalAction(uint index);evaluateProposalMetricEnd(uint index)"
josiahwood/futarchy,contracts/Futarchy.sol,"Futarchy();addProposal(uint marketEvaluationTime, uint preConditionEvaluationTime, PreCondition preCondition, uint metricStartEvaluationTime, uint metricEndEvaluationTime, Metric metric, uint actionEvaluationTime, Action action, uint sendQuantity, address recipientAddress);evaluateProposalMarket(uint index);evaluateProposalPreCondition(uint index);evaluateProposalMetricStart(uint index);evaluateProposalAction(uint index);evaluateProposalMetricEnd(uint index)"
trailofbits/manticore,tests/ethereum/contracts/prop_verifier.sol,"Owner();paused();resume();transfer(address to, uint value);crytic_test_balance();crytic_test_must_revert();crytic_failing_test_must_revert()"
SilentCicero/wafr,src/tests/solidityTests/gasUsage/examples/HumanStandardToken.sol,""
EthereumUCM/Betfunding,test/test.sol,"Betfunding();createProject(string32 projectName, string32 projectDesciption, uint256 expirationDate, string32 verificationMethod, address judge);bid(uint256 projectID ,bool isNiceBet);getNiceBets(uint256 projectID);getBadBets(uint256 projectID);getNumProjects();getProjectName(uint256 projectID);getProjectEndDate(uint256 projectID);getNumNiceBets(uint256 projectID);getNumBadBets(uint256 projectID);getProjectVerification(uint256 projectID);getProjectJudge(uint256 projectID);getProjectDescription(uint256 projectID);getProjectCreator(uint256 projectID)"
FiatCentralBank/fiatcoin,contracts/LibSort.sol,"push(uint index, uint value);reset();setValue(uint index, uint value);length();get(uint index);sort(bool inverse)"
SmartChainX/ChainBlockchain,Contracts/ChainX Token/Mintable.sol,mint(uint _value)
chenlian2015/eosEthMarketSample,contracts/OLPublicAddressInterface.sol,"putServerAddress(string contractName, address contractAddress, uint serverStatusPar);removeServer();setServerFee(string contractName, uint fee);serServerStatus(string contractName, uint serverStatusPar);getServerStatus(string contractName);getServerAddress(string contractName);getFee(string contractName)"
crypto-coder/Tokens,Token_Contracts/contracts/SuddenDecayingTokenFunction.sol,"SuddenDecayingTokenFunction();getFunctionType();executeDecayFunction(uint256 _amount, int256 _rangeLength, int256 _distanceInRange, uint256 _startPercent, uint256 _endPercent)"
PlutusIt/PlutusDEX,contracts/PlutonDistribution.sol,"PlutonDistribution();distributeIfNeeded(address _toAddress, uint256 _totalAmount)"
montyly/manticore,tests/ethereum/contracts/detectors/etherleak_true_pos_argument1.sol,"set(uint256 key, uint256 value);withdrawfunds(address attacker)"
trailofbits/manticore,tests/ethereum/contracts/detectors/etherleak_true_pos_argument1.sol,"set(uint256 key, uint256 value);withdrawfunds(address attacker)"
chainpoint/chainpoint-services,node-eth-contracts/contracts/TierionNetworkToken.sol,"TierionNetworkToken();transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value)"
bloodstalker/scrypt-interactive,contracts/scryptRunner.sol,"initMemory(State memory state);run(bytes input, uint upToStep);getStateAndProof(bytes input, uint step);getStateProofAndHash(bytes input, uint step);getStateHash(bytes input, uint step);readMemory(State memory state, uint index, Proofs memory proofs);writeMemory(State memory state, uint index, uint[4] values, Proofs memory proofs);generateMemoryProof(uint[] fullMem, uint index)"
yoLUkAsss/DEscrutinio,contracts/UserElectionCRUD.sol,"signupVerify(bytes32 email, bytes32 pass);signup(bytes32 email, bytes32 pass);createUserByEmailVerify(bytes32 email, bytes32 password, uint category);createUserByEmail(bytes32 email, bytes32 password, uint category);deleteUserByEmail(bytes32 email);existsUserByEmail(bytes32 email);createAutoridadElectoral(bytes32 email, bytes32 password);getUserByEmailVerify(bytes32 email);getUserByEmail(bytes32 email);setAutoridadElectoral(bytes32 email);setDelegadoDeDistritoVerify(bytes32 email, uint idDistrito);setDelegadoDeDistrito(bytes32 email, uint idDistrito);setDelegadoDeEscuelaVerify(bytes32 email, uint idDistrito, uint idEscuela);setDelegadoDeEscuela(bytes32 email, uint idDistrito, uint idEscuela);setApoderadoVerify(bytes32 email);setApoderado(bytes32 email);setPresidenteDeMesaVerify(bytes32 email, uint idDistrito, uint idEscuela, uint idMesa);setPresidenteDeMesa(bytes32 email, uint idDistrito, uint idEscuela, uint idMesa);setVicepresidenteDeMesa(bytes32 email, uint idDistrito, uint idEscuela, uint idMesa);setFiscalVerify(bytes32 email, uint idDistrito, uint idEscuela, uint idMesa);setFiscal(bytes32 email, uint idDistrito, uint idEscuela, uint idMesa)"
jvah/spicehours,contracts/SpiceMembers.sol,"SpiceMembers();transferOwnership(address _target);addMember(address _target);removeMember(address _target);setMemberLevel(address _target, MemberLevel level);setMemberInfo(address _target, bytes32 info);memberId(address _target);memberLevel(address _target);memberInfo(address _target)"
vechain-team/crowdsale-contracts,contracts/VenSale.sol,"VENSale();exchangeRate();blockTime();stage();isContract(address _addr);buy();officialSold();channelsSold();offerToChannel(address _channelAccount, uint256 _venAmount);finalize()"
thekaleidoscope/Hello-Ethereum,contracts/Test1.sol,"sendP(address ad , uint P);makeTrans(address usr,uint amt);balance(address usr);transfer(address to,uint amt)"
cryptape/cita,scripts/contracts/src/permission_management/Authorization.sol,"updateAdmin(address _newAdmin);setAuth(address _account, address _permission);cancelAuth(address _account, address _permission);clearAuth(address _account);clearAuthOfPermission(address _permission);queryPermissions(address _account);queryAccounts(address _permission);queryAllAccounts();checkResource(address, address, bytes4);checkPermission(address _account, address _permission);_setAuth(address _account, address _permission);_cancelAuth(address _account, address _permission)"
chrisdotn/jsmnSol,test/TestArrays.sol,testSimpleArray();testFloatArray()
CORIONplatform/solidity,schellingLight.sol,"transferEvent(address from, address to, uint256 value);configureModule(announcementType aType, uint256 value, address addr);schelling(address moduleHandlerAddr);newSchellingRound(bool release);getTotalSupply();getCurrentSchellingRoundID()"
bcosorg/bcos,tool/TestPaillier.sol,"add(string d1, string d2);put()"
ethbets/ebets,contracts/SimpleToken1.sol,"balanceOf(address _owner);transfer(address _to, uint256 _amount);approve(address _spender, uint256 _amount)"
Vorxil/MarketStake,test/TestRegister.sol,beforeEach();testThrowIfNotExist();testMetered();testSetValidProvider();testThrowInvalidProvider();testDeleteItem()
SCBuergel/timeLock-smartContract,timeLockNoComments.sol,payIn(uint lockTimeS);payOut();getMyLockedFunds();getMyLockedFundsReleaseTime();getNow()
hesusruiz/fabricaudit,requires/san-lab/banketh-quorum/solidity/paymentsProcessor.sol,"get_baseAmount(uint256 paymentID);get_termAmount(uint256 paymentID);get_senderCryptobank(uint256 paymentID);get_receiverCryptobank(uint256 paymentID);get_status(uint256 paymentID);paymentsProcessor();generate_paymentID(uint256 paymentSenderID);cancel_payment(uint256 paymentID);payment_returned(uint256 paymentID);register();many_cryptobanks();many_currencies();many_payments();get_bank_data(address bank);get_liquidity_account(address bank);make_transfer(address cryptobankAddress, uint256 amount, uint256 receiver_account, bytes32 message);redeem_funds(address cryptobankAddress, uint256 funds, uint256 redemption_mode, bytes32 routing_info);close_down()"
elementrem/solidity,test/compilationTests/zeppelin/crowdsale/RefundableCrowdsale.sol,RefundableCrowdsale(uint256 _goal);forwardFunds();claimRefund();finalization();goalReached()
mixbytes/storiqa_ico,contracts/test_helpers/STQCrowdsaleTestHelper.sol,"STQCrowdsaleTestHelper(address[] _owners, address _token, address _funds, address _teamTokens);getCurrentTime();setTime(uint time);getMinFunds();getMaximumFunds();getTotalInvested();getLastMaxInvestments();setLastMaxInvestments(uint value)"
Storiqa/ico_smart_contract,contracts/test_helpers/STQCrowdsaleTestHelper.sol,"STQCrowdsaleTestHelper(address[] _owners, address _token, address _funds, address _teamTokens);getCurrentTime();setTime(uint time);getMinFunds();getMaximumFunds();getTotalInvested();getLastMaxInvestments();setLastMaxInvestments(uint value)"
DigixGlobal/ethereum-ruby,contracts/AccountingLib.sol,"addFunds(Bank storage self, address accountAddress, uint value);Deposit(address _from, address accountAddress, uint value);deposit(Bank storage self, address accountAddress, uint value);Withdrawal(address accountAddress, uint value);InsufficientFunds(address accountAddress, uint value, uint balance);deductFunds(Bank storage self, address accountAddress, uint value);withdraw(Bank storage self, address accountAddress, uint value)"
EthWorks/ethereum.rb,contracts/AccountingLib.sol,"addFunds(Bank storage self, address accountAddress, uint value);Deposit(address _from, address accountAddress, uint value);deposit(Bank storage self, address accountAddress, uint value);Withdrawal(address accountAddress, uint value);InsufficientFunds(address accountAddress, uint value, uint balance);deductFunds(Bank storage self, address accountAddress, uint value);withdraw(Bank storage self, address accountAddress, uint value)"
marekkirejczyk/ethereum.rb,contracts/AccountingLib.sol,"addFunds(Bank storage self, address accountAddress, uint value);Deposit(address _from, address accountAddress, uint value);deposit(Bank storage self, address accountAddress, uint value);Withdrawal(address accountAddress, uint value);InsufficientFunds(address accountAddress, uint value, uint balance);deductFunds(Bank storage self, address accountAddress, uint value);withdraw(Bank storage self, address accountAddress, uint value)"
euri10/populus,examples/greeter/contracts/Greeter.sol,Greeter();setGreeting(string _greeting);greet();greet(bytes name)
aeronbuchanan/refundSplitMembers,refundSplitMembers.sol,refundSplitMembers();refund();fallbackProposal(address fallback);vote(uint proposalNumber);fallback(uint proposalNumber);charityClaim()
szerintedmi/numbergame,contracts/ethereum-api/usingOraclize.sol,"query(uint _timestamp, string _datasource, string _arg);query_withGasLimit(uint _timestamp, string _datasource, string _arg, uint _gaslimit);queryN(uint _timestamp, string _datasource, bytes _argN);queryN_withGasLimit(uint _timestamp, string _datasource, bytes _argN, uint _gaslimit);getPrice(string _datasource);getPrice(string _datasource, uint gaslimit);useCoupon(string _coupon);setProofType(byte _proofType);setConfig(bytes32 _config);setCustomGasPrice(uint _gasPrice);randomDS_getSessionPubKeyHash();getAddress();oraclize_setNetwork(uint8 networkID);__callback(bytes32 myid, string result);__callback(bytes32 myid, string result, bytes proof);oraclize_useCoupon(string code);oraclize_getPrice(string datasource);oraclize_getPrice(string datasource, uint gaslimit);oraclize_query(string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2, uint gaslimit);oraclize_query(string datasource, string[] argN);oraclize_query(uint timestamp, string datasource, string[] argN);oraclize_query(uint timestamp, string datasource, string[] argN, uint gaslimit);oraclize_query(string datasource, string[] argN, uint gaslimit);oraclize_query(string datasource, string[1] args);oraclize_query(uint timestamp, string datasource, string[1] args);oraclize_query(uint timestamp, string datasource, string[1] args, uint gaslimit);oraclize_query(string datasource, string[1] args, uint gaslimit);oraclize_query(string datasource, string[2] args);oraclize_query(uint timestamp, string datasource, string[2] args);oraclize_query(uint timestamp, string datasource, string[2] args, uint gaslimit);oraclize_query(string datasource, string[2] args, uint gaslimit);oraclize_query(string datasource, string[3] args);oraclize_query(uint timestamp, string datasource, string[3] args);oraclize_query(uint timestamp, string datasource, string[3] args, uint gaslimit);oraclize_query(string datasource, string[3] args, uint gaslimit);oraclize_query(string datasource, string[4] args);oraclize_query(uint timestamp, string datasource, string[4] args);oraclize_query(uint timestamp, string datasource, string[4] args, uint gaslimit);oraclize_query(string datasource, string[4] args, uint gaslimit);oraclize_query(string datasource, string[5] args);oraclize_query(uint timestamp, string datasource, string[5] args);oraclize_query(uint timestamp, string datasource, string[5] args, uint gaslimit);oraclize_query(string datasource, string[5] args, uint gaslimit);oraclize_query(string datasource, bytes[] argN);oraclize_query(uint timestamp, string datasource, bytes[] argN);oraclize_query(uint timestamp, string datasource, bytes[] argN, uint gaslimit);oraclize_query(string datasource, bytes[] argN, uint gaslimit);oraclize_query(string datasource, bytes[1] args);oraclize_query(uint timestamp, string datasource, bytes[1] args);oraclize_query(uint timestamp, string datasource, bytes[1] args, uint gaslimit);oraclize_query(string datasource, bytes[1] args, uint gaslimit);oraclize_query(string datasource, bytes[2] args);oraclize_query(uint timestamp, string datasource, bytes[2] args);oraclize_query(uint timestamp, string datasource, bytes[2] args, uint gaslimit);oraclize_query(string datasource, bytes[2] args, uint gaslimit);oraclize_query(string datasource, bytes[3] args);oraclize_query(uint timestamp, string datasource, bytes[3] args);oraclize_query(uint timestamp, string datasource, bytes[3] args, uint gaslimit);oraclize_query(string datasource, bytes[3] args, uint gaslimit);oraclize_query(string datasource, bytes[4] args);oraclize_query(uint timestamp, string datasource, bytes[4] args);oraclize_query(uint timestamp, string datasource, bytes[4] args, uint gaslimit);oraclize_query(string datasource, bytes[4] args, uint gaslimit);oraclize_query(string datasource, bytes[5] args);oraclize_query(uint timestamp, string datasource, bytes[5] args);oraclize_query(uint timestamp, string datasource, bytes[5] args, uint gaslimit);oraclize_query(string datasource, bytes[5] args, uint gaslimit);oraclize_cbAddress();oraclize_setProof(byte proofP);oraclize_setCustomGasPrice(uint gasPrice);oraclize_setConfig(bytes32 config);oraclize_randomDS_getSessionPubKeyHash();getCodeSize(address _addr);parseAddr(string _a);strCompare(string _a, string _b);indexOf(string _haystack, string _needle);strConcat(string _a, string _b, string _c, string _d, string _e);strConcat(string _a, string _b, string _c, string _d);strConcat(string _a, string _b, string _c);strConcat(string _a, string _b);parseInt(string _a);parseInt(string _a, uint _b);oraclize_setNetworkName(string _network_name);oraclize_getNetworkName();oraclize_newRandomDSQuery(uint _delay, uint _nbytes, uint _customGasLimit);oraclize_randomDS_setCommitment(bytes32 queryId, bytes32 commitment);verifySig(bytes32 tosignh, bytes dersig, bytes pubkey);oraclize_randomDS_proofVerify__sessionKeyValidity(bytes proof, uint sig2offset);oraclize_randomDS_proofVerify__main(bytes proof, bytes32 queryId, bytes result, string context_name);copyBytes(bytes from, uint fromOffset, uint length, bytes to, uint toOffset);safer_ecrecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s);ecrecovery(bytes32 hash, bytes sig)"
iudex/iudex,contracts/twitter.sol,"setOwner(address addr);Twitter();setLookup(address addr);__callback(bytes32 myid, string result, bytes proof);processScore(bytes32 myid, string result);score(bytes32 id, string userId);processVerification(bytes32 myid, string result);verifyUrl(string userId, string proofLocation);verify(bytes32 id, string userId, string proofLocation)"
openanx/OpenANXToken,contracts/SafeMath.sol,"add(uint a, uint b);sub(uint a, uint b)"
openanx/OpenANXToken,test/SafeMath.sol,"add(uint a, uint b);sub(uint a, uint b)"
boisde/Greed_Island,party/contracts/mocks/external/KyberNetworkProxyMock.sol,"addToken(ERC20 _token, uint256 _rate, uint256 _decimals)"
SafecontractDev/protocol,contracts/bancor_contracts/BancorFormulaProxy.sol,"BancorFormulaProxy(IBancorFormula _formula);setFormula(IBancorFormula _formula);calculatePurchaseReturn(uint256 _supply, uint256 _reserveBalance, uint32 _reserveRatio, uint256 _depositAmount);calculateSaleReturn(uint256 _supply, uint256 _reserveBalance, uint32 _reserveRatio, uint256 _sellAmount)"
aragon/aragon-core,contracts/evmscript/EVMScriptRegistry.sol,initialize();addScriptExecutor(IEVMScriptExecutor _executor);disableScriptExecutor(uint256 _executorId);enableScriptExecutor(uint256 _executorId);getScriptExecutor(bytes _script)
slockit/DAO,DAO.sol,"vote(uint _proposalID, bool _supportsProposal);newContract(address _newContract);changeAllowedRecipients(address _recipient, bool _allowed);changeProposalDeposit(uint _proposalDeposit);halveMinQuorum();numberOfProposals();getOrModifyBlocked(address _account);unblockMe();vote(uint _proposalID, bool _supportsProposal);unVote(uint _proposalID);unVoteAll();verifyPreSupport(uint _proposalID);closeProposal(uint _proposalID);withdraw();newContract(address _newContract);changeProposalDeposit(uint _proposalDeposit);changeAllowedRecipients(address _recipient, bool _allowed);actualBalance();minQuorum(uint _value);halveMinQuorum();numberOfProposals();getOrModifyBlocked(address _account);unblockMe()"
Spreadway/core,DAO-develop/DAO.sol,"vote(uint _proposalID, bool _supportsProposal);newContract(address _newContract);changeAllowedRecipients(address _recipient, bool _allowed);changeProposalDeposit(uint _proposalDeposit);halveMinQuorum();numberOfProposals();getOrModifyBlocked(address _account);unblockMe();vote(uint _proposalID, bool _supportsProposal);unVote(uint _proposalID);unVoteAll();verifyPreSupport(uint _proposalID);closeProposal(uint _proposalID);withdraw();newContract(address _newContract);changeProposalDeposit(uint _proposalDeposit);changeAllowedRecipients(address _recipient, bool _allowed);actualBalance();minQuorum(uint _value);halveMinQuorum();numberOfProposals();getOrModifyBlocked(address _account);unblockMe()"
ashellwig/Ethereum-Mutual-Fund,DAO.sol,"vote(uint _proposalID, bool _supportsProposal);newContract(address _newContract);changeAllowedRecipients(address _recipient, bool _allowed);changeProposalDeposit(uint _proposalDeposit);halveMinQuorum();numberOfProposals();getOrModifyBlocked(address _account);unblockMe();vote(uint _proposalID, bool _supportsProposal);unVote(uint _proposalID);unVoteAll();verifyPreSupport(uint _proposalID);closeProposal(uint _proposalID);withdraw();newContract(address _newContract);changeProposalDeposit(uint _proposalDeposit);changeAllowedRecipients(address _recipient, bool _allowed);actualBalance();minQuorum(uint _value);halveMinQuorum();numberOfProposals();getOrModifyBlocked(address _account);unblockMe()"
zchn/ethereum-analyzer,examples/slockit/DAO.sol,"vote(uint _proposalID, bool _supportsProposal);newContract(address _newContract);changeAllowedRecipients(address _recipient, bool _allowed);changeProposalDeposit(uint _proposalDeposit);halveMinQuorum();numberOfProposals();getOrModifyBlocked(address _account);unblockMe();vote(uint _proposalID, bool _supportsProposal);unVote(uint _proposalID);unVoteAll();verifyPreSupport(uint _proposalID);closeProposal(uint _proposalID);withdraw();newContract(address _newContract);changeProposalDeposit(uint _proposalDeposit);changeAllowedRecipients(address _recipient, bool _allowed);actualBalance();minQuorum(uint _value);halveMinQuorum();numberOfProposals();getOrModifyBlocked(address _account);unblockMe()"
erooijak/ethlance,resources/public/contracts/src/ethlanceSearchJobs.sol,EthlanceSearchJobs(address _ethlanceDB)
CORIONplatform/solidity,token.sol,"connectModule();replaceModule(address addr);configureModule(announcementType aType, uint256 value, address addr);token(address moduleHandlerAddr, address dbAddr);approve(address spender, uint256 amount, uint256 nonce);approveAndCall(address spender, uint256 amount, uint256 nonce, bytes extraData);transfer(address to, uint256 amount);transferFrom(address from, address to, uint256 amount);transferFromByModule(address from, address to, uint256 amount, bool fee);transfer(address to, uint256 amount, bytes extraData);processTransactionFee(address owner, uint256 value);mint(address owner, uint256 value);burn(address owner, uint256 value);_transferToContract(address from, address to, uint256 amount, bytes extraData);_transfer(address from, address to, uint256 amount, bool fee);_processTransactionFee(address owner, uint256 feeAmount);_mint(address owner, uint256 value);_approve(address spender, uint256 amount, uint256 nonce);_burn(address owner, uint256 value);isContract(address addr);checkContract(address addr);allowance(address owner, address spender);getTransactionFee(uint256 value);balanceOf(address owner);totalSupply()"
slockit/DAO,USNRewardPayOut.sol,USNRewardPayOut(RewardOffer _usnContract);payOneTimeReward();payReward()
orbro/eth-enablers,DAO-develop/USNRewardPayOut.sol,USNRewardPayOut(RewardOffer _usnContract);payOneTimeReward();payReward()
gleim/DAO,USNRewardPayOut.sol,USNRewardPayOut(RewardOffer _usnContract);payOneTimeReward();payReward()
Spreadway/core,DAO-develop/USNRewardPayOut.sol,USNRewardPayOut(RewardOffer _usnContract);payOneTimeReward();payReward()
ashellwig/Ethereum-Mutual-Fund,USNRewardPayOut.sol,USNRewardPayOut(RewardOffer _usnContract);payOneTimeReward();payReward()
nomilous/huff,example/child.sol,"Child(string _name, address _owner)"
mayukhdifferent/Ethereum_smart_contract_dev,NumberLoop.sol,numberLoop();myFirstLoop()
cgewecke/eth-gas-reporter,mock/contracts/EtherRouter/Resolver.sol,"register(string memory signature, address destination);lookup(bytes4 sig);stringToSig(string memory signature)"
dltdojo/courses,ethereum/dapps/ens/T01_ENS_Warning.sol,""
OpenMoneyDigital/OpenMoneyToken,contracts/OpenMoneyPresale.sol,OpenMoneyPresale()
SmartPool/contracts,Testpool.sol,"keccak_f(uint[25] A);sponge(uint[9] M);Ethash();fnv( uint v1, uint v2 );toBE( uint x );computeLeaf( uint[] dataSetLookup, uint index );computeS( uint header, uint nonceLe );reverseBytes( uint input );next(Iterator memory self);next(Iterator memory self, bool strict);hasNext(Iterator memory self);toRLPItem(bytes memory self);toRLPItem(bytes memory self, bool strict);isNull(RLPItem memory self);isList(RLPItem memory self);isData(RLPItem memory self);isEmpty(RLPItem memory self);items(RLPItem memory self);iterator(RLPItem memory self);toBytes(RLPItem memory self);toData(RLPItem memory self);toList(RLPItem memory self);toAscii(RLPItem memory self);toUint(RLPItem memory self);toBool(RLPItem memory self);toByte(RLPItem memory self);toInt(RLPItem memory self);toAddress(RLPItem memory self);_payloadOffset(RLPItem memory self);_itemLength(uint memPtr);_decode(RLPItem memory self);_copyToBytes(uint btsPtr, bytes memory tgt, uint btsLen);_validate(RLPItem memory self);RLPReaderTest();testItemStrict(bytes rlp);testFirst(bytes rlp);testIsList(bytes rlp);testIsData(bytes rlp);testIsNull(bytes rlp);testIsEmpty(bytes rlp);testItems(bytes rlp);testSubItem(bytes rlp, uint index);testToData(bytes rlp);testToUint(bytes rlp);testToInt(bytes rlp);testToAddress(bytes rlp);testToByte(bytes rlp);testToBool(bytes rlp);_testItem(RLP.RLPItem item);testItem(bytes rlp);getItem(bytes rlp, uint itemIndex);Agt();parseBlockHeader( bytes rlpHeader );TestPool( address[3] _owners );declareNewerVersion();register( address paymentAddress );canRegister(address sender);isRegistered(address sender);getMinerId(address sender);getClaimSeed(address sender);submitClaim( uint numShares, uint difficulty, uint min, uint max, uint augMerkle );setEpochData( uint128[] merkleRoot, uint64[] fullSizeIn128Resultion, uint64[] branchDepth, uint[] epoch );getEpochData( uint epoch );verifyExtraData( bytes32 extraData, bytes32 minerId, uint difficulty );getShareIndex(address sender);setSubsidy( uint factor );doPayment( uint numShares, uint difficulty, address paymentAddress )"
p-acs/ethereum-android-sample,app/src/test/resources/SimpleOwnedStorage.sol,owned();SimpleOwnedStorage(string d);get();set(string d);currentOwner()
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.4.24/etherTransferInLoop.sol,transferInForLoop(uint index);transferInWhileLoop(uint index);transferInDoWhileLoop(uint index)
airalab/core,contracts/ens/ENS.sol,"owner(bytes32 _node);resolver(bytes32 _node);ttl(bytes32 _node);setOwner(bytes32 _node, address _owner);setSubnodeOwner(bytes32 _node, bytes32 _label, address _owner);setResolver(bytes32 _node, address _resolver);setTTL(bytes32 _node, uint64 _ttl)"
SafecontractDev/protocol,contracts/bancor_contracts/CrowdsaleController.sol,"CrowdsaleController(ISmartToken _token, uint256 _startTime, address _beneficiary, address _btcs, bytes32 _realEtherCapHash);computeRealCap(uint256 _cap, uint256 _key);enableRealCap(uint256 _cap, uint256 _key);computeReturn(uint256 _contribution);contributeETH();contributeBTCs();processContribution()"
OpenSTFoundation/SimpleTokenSale,contracts/Trustee.sol,"Trustee(SimpleToken _tokenContract);isRevoke(address _address);setRevokeAddress(address _revokeAddress);grantAllocation(address _account, uint256 _amount, bool _revokable);revokeAllocation(address _account);processAllocation(address _account, uint256 _amount);reclaimTokens()"
ultra-koder/JobMarket,dapp/contracts/jobmarket.sol,"JobMarket();newEmployer(bytes32 _name);newJob(bytes32 _name, bytes32 _description);getJobs();getJobName(uint id);getJobDescription(uint id);getJobStatus(uint id);getJobValue(uint id);getJobEmployerName(uint id);getJobWorkerName(uint id);getJobTotalSkills(uint id);getSkillName(uint id);getJobSkills(uint id);addJobSkill(uint32 jobID, bytes32 name);addSkill(bytes32 name)"
Alonski/CoinPanion,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
boisde/Greed_Island,party/contracts/mocks/GodModeMock.sol,initialize(ISetToken _setToken);removeModule()
CMLTeam/ICOsurance,truffle/contracts/InsuranceMasterContract.sol,InsuranceMasterContract();createNew(string icoSymbol);validateBySymbol(string icoSymbol);verify(address icoTokenAddr)
status-im/status-go,services/typeddata/eip712example/example.sol,"hash(EIP712Domain eip712Domain);hash(Person person);hash(Mail mail);verify(uint8 v, bytes32 r, bytes32 s)"
RyuuGan/sol-merger,test/contracts/GlobalRenamedImports.sol,MyOwned()
stevejaxon/ethereum-tutorials,contracts/stackexchange/AbstractFunctionModifierBug.sol,"getBalance(address _address);setBalance(address _address, uint256 _amount);getBalance(address _address);setBalance(address _address, uint256 _amount)"
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs6.sol,"addThing(string description, string url, string filehash, bytes32 filename)"
eris-ltd/eris,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs6.sol,"addThing(string description, string url, string filehash, bytes32 filename)"
monax/monax,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs6.sol,"addThing(string description, string url, string filehash, bytes32 filename)"
eris-ltd/eris-cli,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs6.sol,"addThing(string description, string url, string filehash, bytes32 filename)"
monax/cli,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs6.sol,"addThing(string description, string url, string filehash, bytes32 filename)"
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs6.sol,"addThing(string description, string url, string filehash, bytes32 filename)"
LykkeCity/EthereumApiDotNetCore,src/ContractBuilder/contracts/token/DENT/BurnableToken.sol,burn(uint burnAmount)
michinbear/solidity,test/compilationTests/gnosis/Markets/StandardMarket.sol,"StandardMarket(address _creator, Event _eventContract, MarketMaker _marketMaker, uint24 _fee);fund(uint _funding);close();withdrawFees();buy(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint maxCost);sell(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint minProfit);shortSell(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint minProfit);calcMarketFee(uint outcomeTokenCost)"
elementrem/solidity,test/compilationTests/gnosis/Markets/StandardMarket.sol,"StandardMarket(address _creator, Event _eventContract, MarketMaker _marketMaker, uint24 _fee);fund(uint _funding);close();withdrawFees();buy(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint maxCost);sell(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint minProfit);shortSell(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint minProfit);calcMarketFee(uint outcomeTokenCost)"
michinbear/solidity,test/compilationTests/corion/premium.sol,"receiveCorionPremiumToken(address, uint256, bytes);approvedCorionPremiumToken(address, uint256, bytes);replaceModule(address addr);premium(bool forReplace, address moduleHandler, address dbAddress, address icoContractAddr, address[] genesisAddr, uint256[] genesisValue);closeIco();approve(address spender, uint256 amount, uint256 nonce);approveAndCall(address spender, uint256 amount, uint256 nonce, bytes extraData);_approve(address spender, uint256 amount, uint256 nonce);allowance(address owner, address spender);transfer(address to, uint256 amount);transferFrom(address from, address to, uint256 amount);transfer(address to, uint256 amount, bytes extraData);transferToContract(address from, address to, uint256 amount, bytes extraData);_transfer(address from, address to, uint256 amount);mint(address owner, uint256 value);_mint(address owner, uint256 value);isContract(address addr);balanceOf(address owner);totalSupply()"
elementrem/solidity,test/compilationTests/corion/premium.sol,"receiveCorionPremiumToken(address, uint256, bytes);approvedCorionPremiumToken(address, uint256, bytes);replaceModule(address addr);premium(bool forReplace, address moduleHandler, address dbAddress, address icoContractAddr, address[] genesisAddr, uint256[] genesisValue);closeIco();approve(address spender, uint256 amount, uint256 nonce);approveAndCall(address spender, uint256 amount, uint256 nonce, bytes extraData);_approve(address spender, uint256 amount, uint256 nonce);allowance(address owner, address spender);transfer(address to, uint256 amount);transferFrom(address from, address to, uint256 amount);transfer(address to, uint256 amount, bytes extraData);transferToContract(address from, address to, uint256 amount, bytes extraData);_transfer(address from, address to, uint256 amount);mint(address owner, uint256 value);_mint(address owner, uint256 value);isContract(address addr);balanceOf(address owner);totalSupply()"
stanta/darfchain,ICO/contracts/BonusFinalizeAgent.sol,"BonusFinalizeAgent(CrowdsaleToken _token, Crowdsale _crowdsale, uint _bonusBasePoints, address _teamMultisig);isSane();finalizeCrowdsale()"
dltdojo/courses,crypto/hash/T_Hash.sol,""
AlphaDinoRC/rockchain,contracts/Migrations.sol,setCompleted(uint256 completed);upgrade(address newAddress)
EruGuru/CreativeCommonPlace,Solidity/contracts.sol,"RegisterIP(bytes32 _enterHash, string _distLicense);newCreator();kill();changeLibAddress(address _LibAddress);RegisterIP(bytes32 _enterHash, string _distLicense);changeLibAddress(address _LibAddress);newCreator()"
manishbisht/Udacity,Blockchain Developer Nanodegree/P6 - Architect a Blockchain Supply Chain Solution/Part B/Starter_Code/project-6/contracts/core/Ownable.sol,owner();addressofsender();isOwner();renounceOwnership();transferOwnership(address newOwner);_transferOwnership(address newOwner)
melonproject/protocol,contracts/mock/integratees/utils/MockIntegrateeBase.sol,"__getRate(address _baseAsset, address _quoteAsset)"
mexskican/dapp,contracts/test/TestTrusttoken.sol,testInitialTokenBalance();testTransferToken()
eris-ltd/eris-compilers,tests/faultyContract.sol,""
eris-ltd/lllc-server,tests/faultyContract.sol,""
olivier-schmitt/solc-maven-plugin,src/test/resources/contracts/basic/SimpleStorage.sol,set(uint x);get()
orbro/eth-enablers,ethereum-examples-master/solidity/EthBtcEscrow.sol,"EthBtcEscrow();getMinConfirmationsByAddr(address _ethAddr);escrow(uint _mBTC, string _btcAddr, address _ethAddr, uint _timestampLimit);__callback(bytes32 myid, string result, bytes proof)"
OpenSTFoundation/SimpleTokenSale,contracts/Bonuses.sol,"Bonuses(SimpleToken _simpleToken);add(address[] _addresses, uint[] _amounts);lock();approve();disapprove();process(uint256 _from);remainingTotalBonuses();getProcessablesSize()"
dltdojo/courses,ethereum/solidity/T180_StructCrowdFunding.sol,"newCampaign(address beneficiary, uint goal);contribute(uint campaignID);checkGoalReached(uint campaignID);contribute(CrowdFunding cf , uint campaignId, uint _amount);testGoalReached()"
levanthanh3005/UCALP,Token/MyAdvancedUCAL.sol,"owned();transferOwnership(address newOwner);receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);transfer(address _to, uint256 _value);approve(address _spender, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);transferFrom(address _from, address _to, uint256 _value);burn(address _from, uint256 _value);burnFrom(address _from, uint256 _value);initialize();Time_call();setMinCustomerBalanceETH(uint256 newMinCustomerBalanceETH);setPayBackRate(uint256 newPayBackRate);setUFee(uint256 newUFee);transfer(address _to, uint256 _amount, string msgText);sendSupportETH(address _to,uint256 _value);transferFrom(address _from, address _to, uint256 _value);mintToken(address target, uint256 mintedAmount);freezeAccount(address target, bool freeze);setPrices(uint256 newSellPrice, uint256 newBuyPrice);buy();sell(uint256 amount)"
daostack/daostack,contracts/test/ERC20Mock.sol,""
d10r/blockvote,setup/contracts/blockvote.sol,"Election(string _name);addCandidate(string _name);startElection();stopElection();vote(string _token, string _vote, uint _candidateId);getResult();publishResult(string _result, string _privateKey);alreadyVoted(string _token);isTokenValid(string _token);voteToCandidateIndex(uint _voterId);compareStrings(string _a, string _b);testFunc();multiply(uint _n1, uint _n2);testEvents()"
iam-dev/ERC23,installed_contracts/zeppelin-solidity/contracts/ReentrancyGuard.sol,""
gmo-blockchain/solidity,contracts/FileObjectField_v2.sol,"setDefault(bytes32 _id);existIdAtCurrentVersion(bytes32 _id);setTmpWriteTimestamp(bytes32 _id, uint _tmpWriteTimestamp);getTmpWriteTimestamp(bytes32 _id);setWriteTimestamp(bytes32 _id, uint _writeTimestamp);getWriteTimestamp(bytes32 _id)"
PeculiumPCL/Peculium,contracts/v0.7/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
PeculiumPCL/Peculium,contracts/v0.5/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
PeculiumPCL/Peculium,contracts/v0.4/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
PeculiumPCL/Peculium,contracts/v0.6/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
PeculiumPCL/Peculium,contracts/v0.3/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
PeculiumPCL/Peculium,contracts/v0.2/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
Neurone/persians,contracts/TokenNotifier.sol,"receiveApproval(address from, uint256 _amount, address _token, bytes _data)"
montyly/manticore,tests/ethereum/contracts/detectors/etherleak_true_pos_msgsender1.sol,"set(uint256 key, uint256 value);withdrawfunds()"
trailofbits/manticore,tests/ethereum/contracts/detectors/etherleak_true_pos_msgsender1.sol,"set(uint256 key, uint256 value);withdrawfunds()"
pipermerriam/pyethereum,ethereum/tests/contracts/seven_contract_without_import.sol,seven();test()
shahankhatch/pyethereum,ethereum/tests/contracts/seven_contract_without_import.sol,seven();test()
karlfloersch/pyethereum,ethereum/tests/contracts/seven_contract_without_import.sol,seven();test()
nirenzang/Serpent-Pyethereum-Tutorial,pyethereum/ethereum/tests/contracts/seven_contract_without_import.sol,seven();test()
blockchain-IoT/blockchain-IoT-core,contracts/MachineOwner.sol,"createNewMachine(ERC20Basic _token, string _model, string _make, bytes32 _id)"
James-Sangalli/OpenRep,contracts/proofOfBurn.sol,"showBurnedCoins(address user);burnCoins();burnedBitcoin(address burner, uint value)"
input-output-hk/etc-client,src/evmTest/resources/solidity/Throw.sol,justThrow()
b-mueller/mythril,tests/testdata/input_contracts/nonascii.sol,""
paulyc/sol_machine,test/test_harness.sol,TestHarness(function()
TrueFlip/trueflip-contracts,contracts/TrueFlipICO.sol,"toString(address x);getBonus();setExchangeRate(uint rate);calculateTokens(uint investmentInSatoshi);doInvestment(uint investmentInSatoshi, address beneficiary, string investorId, uint investmentId, bool transfer);investment(uint investmentInSatoshi, address beneficiary, string investorId, uint investmentId);incrementCounters(uint investment, uint tokenCount);setTeamAddress(address newAddress);isActive();finalizeICO();TrueFlipICO(address ownerAddress, address tokenAddress, address teamAddress_, address advisoryAddress_, address escrowAddress_, uint startBlock_)"
SilentCicero/wafr,src/tests/solidityTests/gasUsage/examples/tests/TorontoRules_test.sol,"newProposal(address _board, string _name, address _proxy, uint _debatePeriod, address _destination, uint _value, bytes _calldata);vote(address _board, uint _proposalID, uint _position);execute(address _board, uint _proposalID, bytes _calldata);setupRules();setup();test_curators();test_openRegistry();test_TorontoRules();test_curatorDoesVeto();test_curatorDoesNotVeto();test_OverSixtyPercent();test_FiftySixPercent()"
WingsDao/contracts,contracts/forecasts/ForecastingAbstraction.sol,"add(uint _amount, bytes32 _message);getByUser(address _user);get(uint _index)"
silasdavis/eris-db,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs5.sol,"addThing(string memory description, string memory url, bytes32 filehash, string memory filename)"
silasdavis/burrow,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs5.sol,"addThing(string memory description, string memory url, bytes32 filehash, string memory filename)"
eris-ltd/eris-db,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs5.sol,"addThing(string memory description, string memory url, bytes32 filehash, string memory filename)"
rohithpr/cocoon,Cocoon.sol,"transfer(address _to, uint256 _value);transfer_ether(address _receiver, uint _amount)"
KudosProject/kudos-token,contracts/KudosTokenLockup.sol,"KudosTokenLockup(address _tokenContractAddress, address _beneficiary);release();fundsAreAvailable()"
locals-world/locals-app,truffle/contracts/localsService.sol,"localsService();register(string _name, address _address);addressOf(string name);nameOf(address addr)"
machinomy/machinomy,packages/contracts/contracts/Unidirectional.sol,"open(bytes32 channelId, address receiver, uint256 settlingPeriod);canDeposit(bytes32 channelId, address origin);deposit(bytes32 channelId);canStartSettling(bytes32 channelId, address origin);startSettling(bytes32 channelId);canSettle(bytes32 channelId);settle(bytes32 channelId);canClaim(bytes32 channelId, uint256 payment, address origin, bytes signature);claim(bytes32 channelId, uint256 payment, bytes signature);isPresent(bytes32 channelId);isAbsent(bytes32 channelId);isSettling(bytes32 channelId);isOpen(bytes32 channelId);paymentDigest(bytes32 channelId, uint256 payment);recoveryPaymentDigest(bytes32 channelId, uint256 payment)"
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/test-helpers/StoppableMock.sol,StoppableMock();normalProcess();drasticMeasure()
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/test-helpers/StoppableMock.sol,StoppableMock();normalProcess();drasticMeasure()
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/contracts/token/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
pash7ka/zeppelin-solidity,contracts/token/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
iswarm/p2pCny,contracts/token/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
readevalprint/aragon-core,contracts/zeppelin/token/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
pz7/liquet,node_modules/zeppelin-solidity/contracts/token/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/token/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
dmx374/zeppelin-solidity,contracts/token/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
cashpokerpro-dev/cash-smartcontracts,contracts/token/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
cinderblockchain/cindertoken,contracts/token/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
sirasistant/market_consensys_academy,contracts/AllowedTokenManager.sol,isAllowedToken(address account);insertAllowedTokenInternal(address account);removeAllowedTokenInternal(address account);getAllowedTokensCount();getAllowedTokenAt(uint index)
gnosis/gnosis-contracts,contracts/Oracles/UltimateOracleFactory.sol,""
shekhar-shubhendu/supply-chain,contracts/UserRegistry.sol,""
gmo-blockchain/solidity,contracts/ContractNameService.sol,"setContract(bytes32 _name, uint _version, address _main, address _logic);isVersionContract(address _sender, bytes32 _name);isVersionLogic(address _sender, bytes32 _name);getContract(bytes32 _name, uint _version);getLatestVersion(bytes32 _name);getLatestContract(bytes32 _name)"
SilentCicero/wafr,src/tests/solidityTests/campaign/Campaign.sol,owner();version();name();contributeMethodABI();refundMethodABI();payoutMethodABI();beneficiary();expiry();fundingGoal();amountRaised()
iam-dev/ERC23,installed_contracts/zeppelin-solidity/contracts/DayLimit.sol,DayLimit(uint256 _limit);_setDailyLimit(uint256 _newLimit);_resetSpentToday();underLimit(uint256 _value);today()
eduelias/solidity-contracts,Signer.sol,Sign();AgreementPen(address contractAddress);Sign()
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/token/ERC20/TokenVesting.sol,release(ERC20Basic _token);revoke(ERC20Basic _token);releasableAmount(ERC20Basic _token);vestedAmount(ERC20Basic _token)
kleroterion/dapp,contracts/Arbitrated/Arbitrable.sol,Arbitrable(Court _court);ruleA(uint256 disputeID);ruleB(uint256 disputeID)
CMLTeam/ICOsurance,truffle/contracts/ERC20.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
mothershipcx/contracts,contracts/interface/ERC20Token.sol,"totalSupply();totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
maxwedwards/block-journal,OldFiles/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
TrustyChain/ibhbr,project/contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
jonnycrunch/eHealthWallet,server/contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
ownage-ltd/ether-router,contracts/test/SenderChecker.sol,checkSender()
jscottmiller/patronage,contracts/RevenueSharing.sol,"RevenueSharingContract();withdrawal();allocateDividends();transfer(address oldOwner, address newOwner, uint shares);reserve(address owner, uint shares);unreserve(address owner, uint shares);findShareholder(address owner);allocateShareholder(address owner, uint32 shares)"
iam-dev/ERC23,installed_contracts/zeppelin-solidity/contracts/ownership/HasNoTokens.sol,"tokenFallback(address from_, uint256 value_, bytes data_)"
adklempner/solidity-license,contracts/zeppelin/token/SimpleToken.sol,SimpleToken()
michinbear/solidity,test/compilationTests/zeppelin/token/SimpleToken.sol,SimpleToken()
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/token/SimpleToken.sol,SimpleToken()
elementrem/solidity,test/compilationTests/zeppelin/token/SimpleToken.sol,SimpleToken()
adamdossa/ProfitSharingContract,installed_contracts/zeppelin/contracts/token/SimpleToken.sol,SimpleToken()
SilentCicero/wafr,src/tests/solidityDepTest/something.sol,""
axic/etherboard,etherboard.sol,"setPixelBlock(uint[] x, uint[] y, uint[] color, uint[] price);getPixel(uint x, uint y);getRow(uint y)"
alice-si/contracts,contracts/alice/bonds/InvestmentWallet.sol,"invest(uint _amount, string _projectName);redeemCoupons(uint _amount, string _projectName)"
lucywe/rootcore-crowdsale,solidity/contracts/TokenHolder.sol,"TokenHolder();withdrawTokens(IERC20Token _token, address _to, uint256 _amount)"
eris-ltd/eris-db,execution/solidity/ecrecover.sol,"recoverSigningAddress(bytes32 msgDigest, uint8 v, bytes32 r, bytes32 s)"
daostack/daostack,contracts/schemes/ContributionRewardExt.sol,"executeProposal(bytes32 _proposalId, int256 _decision);redeemReputation(bytes32 _proposalId);redeemNativeToken(bytes32 _proposalId);redeemEther(bytes32 _proposalId);redeemExternalToken(bytes32 _proposalId);redeemReputationByRewarder(bytes32 _proposalId, address _beneficiary, uint256 _reputation);redeemNativeTokenByRewarder(bytes32 _proposalId, address _beneficiary, uint256 _amount);redeemEtherByRewarder(bytes32 _proposalId, address payable _beneficiary, uint256 _amount);redeemExternalTokenByRewarder(bytes32 _proposalId, address _beneficiary, uint256 _amount);redeem(bytes32 _proposalId, bool[4] memory _whatToRedeem);getProposalEthReward(bytes32 _proposalId);getProposalExternalTokenReward(bytes32 _proposalId);getProposalExternalToken(bytes32 _proposalId);getProposalReputationReward(bytes32 _proposalId);getProposalNativeTokenReward(bytes32 _proposalId);getProposalAcceptedByVotingMachine(bytes32 _proposalId)"
jmeis/solidity-examples,contracts/blind-auction.sol,"bid(bytes32 _blindedBid);placeBid(address bidder, uint value);auctionEnd()"
jmeis/solidity,contracts/blind-auction.sol,"bid(bytes32 _blindedBid);placeBid(address bidder, uint value);auctionEnd()"
ethereum/dapp-bin,library/iterable_mapping.sol,"insert(itmap storage self, uint key, uint value);remove(itmap storage self, uint key);contains(itmap storage self, uint key);iterate_start(itmap storage self);iterate_valid(itmap storage self, uint keyIndex);iterate_next(itmap storage self, uint keyIndex);iterate_get(itmap storage self, uint keyIndex);insert(uint k, uint v);sum()"
livepeer/protocol,contracts/GenesisManager.sol,start();end()
OtterHive/EtherGit,contracts/EtherGit.sol,"EtherGit(address _proxy);createRepository(bytes32 name, bytes data)"
NathanLewis/surefair,contracts/cropOracle.sol,"CropOracle(address creator);getOracleDetails();getUserQuoteIds(address _client);getQuote(address _client, uint64 _quoteId);createQuote(uint256 gpsLat, uint256 gpsLong, bytes32 _ipfsHash );verifyClaim(uint64 _quoteId)"
windingtree/LifToken,contracts/LifToken.sol,"burn(uint256 _value);burn(address burner, uint256 _value)"
Dsensor/resolutionwallet,src/server/smartcontracts/permissions-contract.sol,"setdataToken(address receiver, tokenin);grantPermission(address addr)"
Spreadway/core,flow_auth/contracts/HelloWorld.sol,HelloWorld();getMessage();getLastCaller();getCreator();getTotalGas();setMessage(string newMessage)
boisde/Greed_Island,party/contracts/protocol/integration/CompoundLikeGovernanceAdapter.sol,"getVoteCalldata(uint256 _proposalId, bool _support, bytes memory /* _data */);getDelegateCalldata(address _delegatee);getRegisterCalldata(address _setToken);getRevokeCalldata();getProposeCalldata(bytes memory _proposalData)"
marvinfy/ConsentDirectives,contracts/CategoryCatalog.sol,"CategoryCatalog();Add(Category category);Remove(uint i);RemoveAll();Update(uint i, Category category);GetCount();GetAll();SetRecordType(uint32 recordType);SetRecord(address record);SetAccessType(uint32 accessType);SetWhy(uint32 why);AddOrigin(address origin)"
duaraghav8/Solium,test/lib/rules/indentation/accept/one-line-function-call.sol,foo();bar()
etherisc/flightDelay,test-available/Test_FlightDelayDatabase.sol,"test_initialize();test_set_get_PremiumFactors();test_set_get_Policy();test_set_get_OraclizeCallback();getOraclizeCallback(bytes32 _queryId);getOraclizePolicyId(bytes32 _queryId);checkTime(bytes32 _queryId, bytes32 _riskId, uint _offset)"
TruLtd/tru-reputation-token,contracts/supporting/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
adridadou/eth-propeller-core,src/test/resources/contractEvents.sol,createEvent(string memory value)
livepeer/protocol,test/unit/TestEarningsPool.sol,beforeEach();test_init();test_addToFeePool();test_addToFeePool_zero();test_addToFeePool_noDelegatorFees();test_addToFeePool_noTranscoderFees();test_addToRewardPool();test_addToRewardPool_zero();test_addToRewardPool_noDelegatorRewards();test_addToRewardPool_noRewards()
dltdojo/courses,ethereum/solidity/T140_Modifier.sol,info();Foo();funForOwner();changeOwner(address newOwner);endContract(address legacyAddress);funForOwner();endContract(address legacyAddress)
redsquirrel/augur-core,src/Controller.sol,"Controlled();setController(Controller _controller);suicideFunds(address _target);Controller();addToWhitelist(address _target);removeFromWhitelist(address _target);assertIsWhitelisted(address _target);setValue(bytes32 _key, address _value);removeValue(bytes32 _key);lookup(bytes32 _key);assertOnlySpecifiedCaller(address _caller, bytes32 _allowedCaller);suicide(Controlled _target, address _destination);updateController(Controlled _target, Controller _newController);transferOwnership(address _newOwner);switchModeSoOnlyEmergencyStopsAndEscapeHatchesCanBeUsed();emergencyStop();release();stopInEmergency();onlyInEmergency()"
ConsenSys/dapp-store-contracts,contracts/EternalDB.sol,"EternalDB();transfer_ownership(address _admin);count();has(uint id);new_entry();add(uint id, uint key, uint value);get_length(uint id, uint key);get_entry(uint id, uint key, uint index);get_all(uint id, uint key);clear(uint id, uint key);delete_entry(uint id, uint key, uint index)"
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.4.24/inheritance.sol,"s();getX();getY(uint z, bool r);getY(string storage n);d()"
soad003/browser-solidity,test/staticanalysis/test-contracts/inheritance.sol,"s();getX();getY(uint z, bool r);getY(string storage n);d()"
triage/KPCSEthereum,contracts/Participant.sol,"Participant(string _name, address _administrator);getType();getImportingAuthority();getExportingAuthority();isAcceptedImportingAuthority(address authority);isAcceptedExportingAuthority(address authority);registerAsImportingAuthority(address authority);registerAsExportingAuthority(address authority)"
GuigsEvt/CrowdsaleEthereum,contracts/CappedCrowdsale.sol,CappedCrowdsale(uint256 _cap);validPurchase();hasEnded()
BlockTube/blocktube-client.0.3,app/contracts/blocktube.sol,"blocktube(uint256 _initialSupply, string _tokenName, uint8 _decimalUnits, string _tokenSymbol);like(address _clipaddr, uint256 _value);transfer(address _to, uint256 _value);addclip(address _clipaddr)"
CORIONplatform/solidity,providerRewardLib.sol,"_getClientSupply(address clientAddress, uint256 schellingRound, uint256 oldAmount);_getClientProviderUID(address clientAddress);_getClientLastPaidRate(address clientAddress);_getSenderStatus(uint256 providerUID);_getClientPaidUpTo(address clientAddress);_setClientPaidUpTo(address clientAddress, uint256 paidUpTo);_setClientLastPaidRate(address clientAddress, uint8 lastPaidRate);_setClientSupply(address clientAddress, uint256 roundID, uint256 amount);_setClientSupply(address clientAddress, uint256 amount);_getProviderOwner(uint256 providerUID);_getProviderClosed(uint256 providerUID);_getProviderAdmin(uint256 providerUID);_getProviderPriv(uint256 providerUID);_getProviderSupply(uint256 providerUID);_getProviderSupply(uint256 providerUID, uint256 schellingRound, uint256 oldAmount);_setProviderSupply(uint256 providerUID, uint256 amount);_setProviderSupply(uint256 providerUID, uint256 schellingRound, uint256 amount);_getProviderIsForRent(uint256 providerUID);_getProviderRateHistory(uint256 providerUID, uint256 schellingRound, uint8 oldRate);_getCurrentSchellingRound();_getSchellingRoundDetails(uint256 roundID);_getSchellingRoundSupply();_setSchellingRoundSupply(uint256 amount);providerRewardLib(address moduleHandlerAddr);getReward(address beneficiary, uint256 providerUID, uint256 roundLimit);appendSupplyChanges(address client, bool add, uint256 amount);appendSchellingSupplyChanges(uint256 providerSupply, uint256 newProviderSupply, bool priv);_appendSchellingSupplyChanges(uint256 providerSupply, uint256 newProviderSupply, bool priv);checkReward(address client, uint256 providerUID, uint256 roundLimit);checkProviderOwnerSupply(uint256 balance, bool priv);checkForInterest(uint256 supply, bool priv);getTokenBalance(address addr);checkReward(uint256 providerUID, uint256 roundLimit)"
iam-dev/ERC23,installed_contracts/zeppelin-solidity/contracts/lifecycle/Migrations.sol,setCompleted(uint256 completed);upgrade(address newAddress)
EtherReal-ID/EtherReal-ID,sol/pretorian.sol,"Pretorian(string name,string id,string passport);resetRequest(string id);checkRequest(string name,string id,stirng location);registerWallet(address a,address owner);deleteWallet(address a,address owner);WHOIS(address a)"
m1nam1/UTCoin,contracts/UTCoin.sol,UTCoin()
orbro/eth-enablers,solidity-baby-steps-master/contracts/21_value_incrementer2.sol,increment(int howmuch);getWhatHappened();getIteration();kill()
woshidama323/hello-github,back/OraclizeAddrResolverI.sol,getAddress()
fkbenjamin/pc-firebase-starter,contracts/Storage.sol,"setCitizen(address _citizen);setCountry(address _country);setImmigration(address _immigration);setEmbassy(address _embassy);updatePassport(address _owner, uint _country, bytes32 _hashedPassport, bool _valid);visaOfferingsLength(uint _country);deleteVisaOffering(uint _country, uint index);visaLength(address _owner, uint _country);createVisa(address _owner, uint _country, bytes32 _identifier, uint _price)"
SmartChainX/ChainBlockchain,Contracts/ICO/TimeVault.sol,"TimeVault(address _teamMultisig, StandardToken _token, uint _unlockedAt);getTokenBalance();unlock()"
OR13/car2go,contracts/IndexedEnumerableSetLib.sol,"get(IndexedEnumerableSet storage self, uint index);set(IndexedEnumerableSet storage self, uint index, address value);add(IndexedEnumerableSet storage self, address value);remove(IndexedEnumerableSet storage self, address value);first(IndexedEnumerableSet storage self);last(IndexedEnumerableSet storage self);pop(IndexedEnumerableSet storage self, uint index);indexOf(IndexedEnumerableSet storage self, address value);contains(IndexedEnumerableSet storage self, address value);size(IndexedEnumerableSet storage self)"
transmute-industries/eth-faucet,contracts/IndexedEnumerableSetLib.sol,"get(IndexedEnumerableSet storage self, uint index);set(IndexedEnumerableSet storage self, uint index, address value);add(IndexedEnumerableSet storage self, address value);remove(IndexedEnumerableSet storage self, address value);first(IndexedEnumerableSet storage self);last(IndexedEnumerableSet storage self);pop(IndexedEnumerableSet storage self, uint index);indexOf(IndexedEnumerableSet storage self, address value);contains(IndexedEnumerableSet storage self, address value);size(IndexedEnumerableSet storage self)"
asinyagin/solidity,std/Token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
boisde/Greed_Island,party/contracts/protocol/modules/WrapModule.sol,initialize(ISetToken _setToken);removeModule()
nelladragon/scab,contracts/message_engine/MsgEngine.sol,"MsgEngine(uint8 proposals);sendMsg(address _recipient, string _message);getMsg(address _recipient);consumeMsg();inboxIsEmpty(address _recipient);inboxSize(address _recipient);setSignedPublicEncKey(string key);getSignedPublicEncKey(address addr);inboxIsEmptyL(Inbox inbox);check()"
BeBlockTech/Anemoi,Master/contracts/Pausable.sol,pause();unpause()
woshidama323/hello-github,back/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
woshidama323/hello-github,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
daostack/daostack,contracts/utils/RepAllocation.sol,"addBeneficiary(address _beneficiary, uint256 _amount);addBeneficiaries(address[] memory _beneficiaries, uint256[] memory _amounts);freeze();balanceOf(address _beneficiary)"
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/crowdsale/emission/AllowanceCrowdsale.sol,remainingTokens()
EthWorks/ethereum.rb,spec/fixtures/ContractWithError.sol,""
orbro/eth-enablers,solidity-stringutils-master/strings.sol,"memcpy(uint dest, uint src, uint len);toSlice(string self);len(bytes32 self);copy(slice self);toString(slice self);len(slice self);empty(slice self);compare(slice self, slice other);equals(slice self, slice other);nextRune(slice self, slice rune);nextRune(slice self);ord(slice self);keccak(slice self);startsWith(slice self, slice needle);beyond(slice self, slice needle);endsWith(slice self, slice needle);until(slice self, slice needle);findPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);rfindPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);find(slice self, slice needle);rfind(slice self, slice needle);split(slice self, slice needle, slice token);split(slice self, slice needle);rsplit(slice self, slice needle, slice token);rsplit(slice self, slice needle);count(slice self, slice needle);contains(slice self, slice needle);concat(slice self, slice other);join(slice self, slice[] parts)"
Majoolr/ethereum-libraries,BasicMathLib/truffle/test/TestBasicMathLib.sol,beforeAll();testMinusFunction();testPlusFunction();testDividedByFunction();testTimesFunction()
silasdavis/eris-db,tests/jobs_fixtures/app22-bytes_edge_cases/storage.sol,setString(bytes memory x);getString()
silasdavis/burrow,tests/jobs_fixtures/app22-bytes_edge_cases/storage.sol,setString(bytes memory x);getString()
eris-ltd/eris-db,tests/jobs_fixtures/app22-bytes_edge_cases/storage.sol,setString(bytes memory x);getString()
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/contracts/lifecycle/Pausable.sol,pause();unpause()
pash7ka/zeppelin-solidity,contracts/lifecycle/Pausable.sol,pause();unpause()
readevalprint/aragon-core,contracts/zeppelin/lifecycle/Pausable.sol,pause();unpause()
pz7/liquet,node_modules/zeppelin-solidity/contracts/lifecycle/Pausable.sol,pause();unpause()
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/lifecycle/Pausable.sol,pause();unpause()
dmx374/zeppelin-solidity,contracts/lifecycle/Pausable.sol,pause();unpause()
cashpokerpro-dev/cash-smartcontracts,contracts/lifecycle/Pausable.sol,pause();unpause()
cinderblockchain/cindertoken,contracts/lifecycle/Pausable.sol,pause();unpause()
Michikoid/michikoid-cli,test/fixtures/contracts/DualIndex.sol,""
zchn/ethereum-analyzer,examples/co2.unica.it/ethereum/OddsAndEvens_0.4.2.sol,OddsAndEvens();play(uint number);andTheWinnerIs();getProfit()
nomilous/huff,example/greeter.sol,"greeter(string _greeting);greet();greet();echo(string value1, string value2);update(string value)"
dltdojo/courses,ethereum/solidity/T999_ZkSnarks.sol,"C(x, w);claim(bytes32 vk, bytes32 x, bytes32 prf)"
DOkwufulueze/eth-vue,contracts/UserAuthManager.sol,""
lifechange-io/christ-coin,contracts/Shared.sol,""
SilentCicero/wafr,src/tests/solidityTests/gasUsage/examples/tests/HumanStandardTokenDispersal_test.sol,test_dispersal()
boisde/Greed_Island,party/contracts/mocks/protocol/module/ManagerIssuanceHookMock.sol,"invokePreIssueHook(ISetToken _setToken, uint256 _issueQuantity, address _sender, address _to);invokePreRedeemHook(ISetToken _setToken, uint256 _redeemQuantity, address _sender, address _to)"
EthereumEx/blockchain-060,Contracts/ErrorContract.sol,"ErrorContract();ThrowError();AddValues(uint a, uint b);ConsumeGas(uint iterations)"
Niky4000/UsefulUtils,projects/tutorials-master/tutorials-master/ethereum/src/main/resources/solidity/Greeting.sol,Greeting(string _message);greet();setGreeting(string _message)
saikyerubandi/smart-contract-beginner,test/TestPiggyBank.sol,testNewAccountHasZeroBalance();testBalanceAfterDeposit();testDepositCanbeWithdrawn();testBalanceCanbeWithdrawn()
LykkeCity/EthereumApiDotNetCore,src/ContractBuilder/contracts/depositContract.sol,"TokenTransferContract(address coinAdapterAddress, address externalTokenAddress);cashin()"
acebusters/safe-token-sale,contracts/controller/PowerEnabled.sol,"PowerEnabled(address _powerAddr, address _pullAddr, address _storageAddr, address _nutzAddr);setMaxPower(uint256 _maxPower);setDowntime(uint256 _downtime);dilutePower(uint256 _amountBabz, uint256 _amountPower);_slashPower(address _holder, uint256 _value, bytes32 _data);slashPower(address _holder, uint256 _value, bytes32 _data);slashDownRequest(uint256 _pos, address _holder, uint256 _value, bytes32 _data);powerUp(address _sender, address _from, uint256 _amountBabz);powerTotalSupply();_vestedDown(uint256 _total, uint256 _left, uint256 _start, uint256 _now);createDownRequest(address _owner, uint256 _amountPower);downTick(address _holder, uint256 _now)"
duaraghav8/Solium,test/lib/rules/indentation/reject/multiline-call-expression.sol,Counter();inc();incBy(uint n);incByTwo()
Majoolr/ethereum-libraries,ArrayUtilsLib/truffle/test/TestArrayUtilsLib.sol,beforeAll();testSumElementsFunction();testGetMaxFunction();testGetMinFunction();testSortedIndexOfFunction()
commodityadnetwork/CDX,contracts/TokenPool.sol,"TokenPool(address token_, address tokenVault_, address roles);addParticipant(address participant);removeParticipant(address participant);transfer(address dest, uint wad)"
ResourceHog/futarchy,contracts/Owned.sol,Owned()
josiahwood/futarchy,contracts/Owned.sol,Owned()
silasdavis/eris-db,tests/jobs_fixtures/app32-overwriting_jobs_and_checking_notification/app32.sol,f()
silasdavis/burrow,tests/jobs_fixtures/app32-overwriting_jobs_and_checking_notification/app32.sol,f()
eris-ltd/eris-db,tests/jobs_fixtures/app32-overwriting_jobs_and_checking_notification/app32.sol,f()
aragon/aragon-core,contracts/test/mocks/EVMScriptRegistryConstantsMock.sol,getEVMScriptRegistryAppId()
gmo-blockchain/solidity,contracts/FileObjectLogic_v2.sol,"create(address _sender, bytes32 _id, address _owner, bytes32 _nameHash, bytes32 _hash, address _cns, bytes32 _contractName);setHashByWriter(address _sender, bytes32 _id, address _writer, bytes32 _hash);setHashByProvider(address _sender, bytes32 _id, bytes32 _hash);getWriteTimestamp(bytes32 _id);setHash(address _sender, bytes32 _id, address _writer, bytes32 _hash, uint _targetIdx, uint _compareIdx)"
UrsZeidler/smart-contract-examples,openLibrary/src/test/resources/mix/contracts.sol,"Library();registerManager(address _address);unregisterManager(address _address);registerEmployee(address _address);unregisterEmployee(address _address);registerUser(address _address,string _name);unregisterUser(address _address);addBook(string _titel);changeBookState(uint id,uint _state);borrowBook(uint id,address _address);returnBook(uint id,address _address);getBook(uint _id);getBookForUser(uint id);getBorrowedBooksCount(uint id);getUserName(uint id)"
aragon/aragon-core,contracts/common/DepositableDelegateProxy.sol,""
ixofoundation/tge-server,contracts/Authentication.sol,login();signup(bytes32 name);update(bytes32 name)
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/contracts/token/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
readevalprint/aragon-core,contracts/zeppelin/token/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
pz7/liquet,node_modules/zeppelin-solidity/contracts/token/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/token/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
dmx374/zeppelin-solidity,contracts/token/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
aragon/aragon-core,contracts/test/mocks/InitializableStorageMock.sol,initialize();getInitializationBlockPosition()
karalabe/etherapis,contracts/channels.sol,"userServicesLength(address addr);servicesLength();getService(uint serviceId);addService(string name, string endpoint, uint price, uint cancellationTime);makeSubscriptionId(address from, uint serviceId);getHash(address from, uint serviceId, uint nonce, uint value);verifySignature(bytes32 subscriptionId, uint nonce, uint value, uint8 v, bytes32 r, bytes32 s);verifyPayment(bytes32 subscriptionId, uint nonce, uint value, uint8 v, bytes32 r, bytes32 s);claim(bytes32 subscriptionId, uint nonce, uint value, uint8 v, bytes32 r, bytes32 s);deposit(bytes32 subscriptionId);cancel(bytes32 subscriptionId);reclaim(bytes32 subscriptionId);getSubscription(bytes32 subscriptionId);getSubscriptionValue(bytes32 subscriptionId);getSubscriptionNonce(bytes32 subscriptionId);getSubscriptionOwner(bytes32 subscriptionId);getSubscriptionServiceId(bytes32 subscriptionId);getSubscriptionClosedAt(bytes32 subscriptionId);isValidSubscription(bytes32 subscriptionId);userSubscriptionsLength(address addr);subscribe(uint serviceId)"
coincrowd-it/ico,contracts/CoinCrowdICO.sol,"ambassadorsNumber();numPurchasesOf(address buyer);CoinCrowdICO(address contractAddress, uint256 initialValue, uint256 end);updateValue(uint256 newValue);updateUpdater(address newUpdater);updateEndTime(uint256 newEnd);buy(address buyer, address ambassadorContr);addAmbassador(address ambassador);withdraw(address to, uint256 value);withdrawTokens(address to, uint256 value)"
aragon/aragon-network-token,packages/sale/contracts/ANPlaceholder.sol,"ANPlaceholder(address _sale, address _ant);changeController(address network);proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount)"
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs9.sol,"addThing(bytes32 description, string url, bytes32 filehash, string filename)"
eris-ltd/eris,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs9.sol,"addThing(bytes32 description, string url, bytes32 filehash, string filename)"
monax/monax,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs9.sol,"addThing(bytes32 description, string url, bytes32 filehash, string filename)"
eris-ltd/eris-cli,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs9.sol,"addThing(bytes32 description, string url, bytes32 filehash, string filename)"
monax/cli,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs9.sol,"addThing(bytes32 description, string url, bytes32 filehash, string filename)"
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs9.sol,"addThing(bytes32 description, string url, bytes32 filehash, string filename)"
boisde/Greed_Island,party/contracts-crued/protocol/modules/BasicIssuanceModule.sol,removeModule()
AustP/autocomplete-solidity,spec/files/test.sol,"TestContract(address _owner, uint _amount);anotherFunction();someFunction()"
daostack/daostack,contracts/schemes/ReputationFromToken.sol,"initialize(Avatar _avatar, IERC20 _tokenContract, CurveInterface _curve, bytes32 _agreementHash);redeem(address _beneficiary, bytes32 _agreementHash);_redeem(address _beneficiary, address _redeemer, bytes32 _agreementHash)"
Nethereum/Nethereum,src/Nethereum.Tutorials/Nethereum.Tutorials.Core/Deployment/contracts/test.sol,test(int multiplier);multiply(int a)
boisde/Greed_Island,party/contracts/interfaces/IStakingAdapter.sol,getSpenderAddress(address _stakingContract)
DigixGlobal/ethereum-ruby,contracts/classic/Digixbot.sol,"getBotContract();getUserId(address _address);withdrawCoin(bytes32 _user,uint256 _amount);depositCoin(bytes32 _uid,uint256 _amt);getBalance(bytes32 _uid);totalBalance();getConfig();getUsersContract();sendCoin(bytes32 _sender,bytes32 _recipient,uint256 _amt);Digixbot(address _config);getConfig();addUser(bytes32 _userid);setUserAccount(bytes32 _userid, address _account);getUserAccount(bytes32 _userid);getUsersContract();getCoinWallet(bytes4 _coin);userCheck(bytes32 _id);sendCoin(bytes4 _coin, bytes32 _from, bytes32 _to, uint _amount);withdrawCoin(bytes4 _coin, bytes32 _userid, uint _amount);getCoinBalance(bytes4 _coin, bytes32 _userid);getTotalBalance(bytes4 _coin);accountLockCheck(bytes32 _id);tipLockCheck(bytes32 _id);lockAccount(bytes32 _id);lockTip(bytes32 _id);unlockAccount();unlockTip()"
EthWorks/ethereum.rb,contracts/classic/Digixbot.sol,"getBotContract();getUserId(address _address);withdrawCoin(bytes32 _user,uint256 _amount);depositCoin(bytes32 _uid,uint256 _amt);getBalance(bytes32 _uid);totalBalance();getConfig();getUsersContract();sendCoin(bytes32 _sender,bytes32 _recipient,uint256 _amt);Digixbot(address _config);getConfig();addUser(bytes32 _userid);setUserAccount(bytes32 _userid, address _account);getUserAccount(bytes32 _userid);getUsersContract();getCoinWallet(bytes4 _coin);userCheck(bytes32 _id);sendCoin(bytes4 _coin, bytes32 _from, bytes32 _to, uint _amount);withdrawCoin(bytes4 _coin, bytes32 _userid, uint _amount);getCoinBalance(bytes4 _coin, bytes32 _userid);getTotalBalance(bytes4 _coin);accountLockCheck(bytes32 _id);tipLockCheck(bytes32 _id);lockAccount(bytes32 _id);lockTip(bytes32 _id);unlockAccount();unlockTip()"
marekkirejczyk/ethereum.rb,contracts/classic/Digixbot.sol,"getBotContract();getUserId(address _address);withdrawCoin(bytes32 _user,uint256 _amount);depositCoin(bytes32 _uid,uint256 _amt);getBalance(bytes32 _uid);totalBalance();getConfig();getUsersContract();sendCoin(bytes32 _sender,bytes32 _recipient,uint256 _amt);Digixbot(address _config);getConfig();addUser(bytes32 _userid);setUserAccount(bytes32 _userid, address _account);getUserAccount(bytes32 _userid);getUsersContract();getCoinWallet(bytes4 _coin);userCheck(bytes32 _id);sendCoin(bytes4 _coin, bytes32 _from, bytes32 _to, uint _amount);withdrawCoin(bytes4 _coin, bytes32 _userid, uint _amount);getCoinBalance(bytes4 _coin, bytes32 _userid);getTotalBalance(bytes4 _coin);accountLockCheck(bytes32 _id);tipLockCheck(bytes32 _id);lockAccount(bytes32 _id);lockTip(bytes32 _id);unlockAccount();unlockTip()"
charles-cooper/raiden,raiden/smart_contracts/HumanStandardToken.sol,"approveAndCall(address _spender, uint256 _value, bytes _extraData)"
akscanb/smrtprpty,contracts/smartProperty.sol,"receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);transfer(address _to, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);transferFrom(address _from, address _to, uint256 _value);withDraw();dilute(uint256 shares);creditDividends(uint256 value);pay()"
isvirin/neurodao,NeuroDAO2.sol,"owned();changeOwner(address _owner);confirmOwner();balanceOf(address who);transfer(address to, uint value);allowance(address owner, address spender);transferFrom(address from, address to, uint value);approve(address spender, uint value);ManualMigration(address _original);migrateManual(address _who, bool _isTeam);sealManualMigration(bool force);beforeBalanceChanges(address _who);Crowdsale(address _original);Token(address _original, uint _startTime);availableTokens(address _who);firstYearPeriods();balanceOf(address _who);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);burn(uint256 _value);migrateFrom(address _from, uint256 _value);TokenMigration(address _original, uint _startTime);migrate();setMigrationAgent(address _agent);NeuroDAO(address _original, uint _startTime);withdraw();freezeTheMoment();freezedBalanceOf(address _who);killMe();Adapter(address _neuroDAO, address _erc20contract, address _masterHolder);killMe();giveMeTokens()"
aragon/aragon-core,contracts/test/mocks/AppStorageMock.sol,setKernelExt(IKernel _kernel);setAppIdExt(bytes32 _appId);getKernelPosition();getAppIdPosition()
MarketProject/MarketProtocol,contracts/tokens/UpgradeableTokenMock.sol,"upgradeFrom(address from, uint256 value)"
dbrainio/Soltsice,contracts/DummyContract.sol,"getPrivate();setPrivate(uint _newValue);getPublic();setPublic(uint _newValue);ArrayTypesTest(uint[10] memory _array);funcArrayInArguments(address[] calldata _array);funcArrayInArguments(address[] calldata _array, address[] calldata _array2)"
redsquirrel/augur-core,src/reporting/DisputeBondToken.sol,"initialize(Market _market, address _bondHolder, uint256 _bondAmount, bytes32 _payoutDistributionHash);withdraw();withdrawToBranch(Branch _shadyBranch);getTypeName();getMarket();getBranch();getReputationToken();getBondHolder();getDisputedPayoutDistributionHash();getBondRemainingToBePaidOut();balanceOf(address _address);transfer(address _destinationAddress, uint256 _attotokens)"
Arctek/eth_splitter,contracts/Ownable.sol,Ownable();setOwner(address newOwner)
coeniebeyers/QuorumNostroDemo,app/privateToken.sol,"receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);transfer(address _to, uint256 _value);approve(address _spender, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);transferFrom(address _from, address _to, uint256 _value)"
SilentCicero/wafr,src/tests/solidityTests/setupMethod/test.setupMethod.sol,test_startBool();setup();test_startNumber()
DonorToken/DonorToken,test/helpers/SafeERC20Helper.sol,"transfer(address, uint256);transferFrom(address, address, uint256);approve(address, uint256);balanceOf(address);allowance(address, address);transfer(address, uint256);transferFrom(address, address, uint256);approve(address, uint256);balanceOf(address);allowance(address, address);doFailingTransfer();doFailingTransferFrom();doFailingApprove();doSucceedingTransfer();doSucceedingTransferFrom();doSucceedingApprove()"
stevejaxon/ethereum-tutorials,contracts/channels/signeth/GetTogetherCoupon.sol,"deposit();withdraw(uint _amount);balanceOf(address _account);totalStaked(address _getTogether);stakedAmount(address _getTogether, address _account);registerForGetTogether(address _getTogether);stake(uint _amount, address _getTogether);redeemStake(address _getTogether, address _to, uint256 _value, uint8 _v, bytes32 _r, bytes32 _s);recoverAddressOfSigner(address _getTogether, address _to, uint256 _value, uint8 _v, bytes32 _r, bytes32 _s);recover(bytes32 h, uint8 v, bytes32 r, bytes32 s)"
jeje/solidity-code-quality,core/src/test/antlr/FallbackContract.sol,""
chentschel/ethgames-contracts,contracts/Affiliable.sol,"updateAffiliate(address affiliateAddr, uint8 share)"
status-im/status-network-token,contracts/MiniMeToken.sol,"proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);Controlled();changeController(address _newController);receiveApproval(address from, uint256 _amount, address _token, bytes _data);transfer(address _to, uint256 _amount);balanceOf(address _owner);approve(address _spender, uint256 _amount);totalSupply();balanceOfAt(address _owner, uint _blockNumber);totalSupplyAt(uint _blockNumber);enableTransfers(bool _transfersEnabled);isContract(address _addr);min(uint a, uint b);getBlockNumber();claimTokens(address _token)"
cruskit/truffle-voting-example,contracts/Ballot.sol,Ballot(bytes32[] proposalNames);giveRightToVote(address voter);vote(uint proposal);winningProposal();winnerName()
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/ownership/Heritable.sol,setHeir(address _newHeir);heir();heartbeatTimeout();timeOfDeath();removeHeir();proclaimDeath();heartbeat();claimHeirOwnership();setHeartbeatTimeout(uint256 _newHeartbeatTimeout);ownerLives()
zchn/ethereum-analyzer,examples/solidity.readthedocs.io/control-structures/tuple.sol,f();g()
wpypeiyao/Identity-On-Blockchain,app/contracts/TokenFunctions.sol,"TokenFunctions();setTimeLimited(uint newTimeLimited);getManagerPubkey();newUserAccount(bytes32 Identity, bytes32 Name, bytes32 PubKey_x1, bytes32 PubKey_x2, bytes32 PubKey_y1, bytes32 PubKey_y2);LoginCheck(bytes32 Identity);getAddress(bytes32 Identity);getMyName(bytes32 Identity);getMyPubKey(bytes32 Identity);setMyName(bytes32 Identity, bytes32 newName);getAddressFromName(bytes32 name);checkNameOccupied(bytes32 name);setMyPubKey(bytes32 Identity, bytes32 PubKey_x1, bytes32 PubKey_x2, bytes32 PubKey_y1, bytes32 PubKey_y2);AddSocialAccount(bytes32 Identity, bytes32 newApp, bytes32 newUsername, bytes32 newPassword);AltSocialAccountPw(bytes32 Identity, bytes32 targetApp, bytes32 targetUsername, bytes32 newPassword);DelSocialAccount(bytes32 Identity, bytes32 delApp, bytes32 delUsername);getSocialAccountPw(bytes32 Identity, bytes32 targetApp, bytes32 targetUsername);getAllSocialAccounts(bytes32 Identity);AddContact(bytes32 Identity, address newCAddress);AlterContactName(bytes32 Identity, address targetAddress, bytes32 altCName);deleteContact(bytes32 Identity, address targetAddress);getTargetContactPubKey(bytes32 Identity, address targetAddress);getAllContact(bytes32 Identity);AddSharedAccount(bytes32 Identity, address receiverAddress, bytes32 targetApp, bytes32 targetUsername, bytes32 targetPassword);deleteSharedAccount(bytes32 Identity, bytes32 targetApp, bytes32 targetUsername);getSharedAccountPw(bytes32 Identity, bytes32 targetApp, bytes32 targetUsername);getAllSharedAccounts(bytes32 Identity)"
pash7ka/zeppelin-solidity,contracts/token/TokenTimelock.sol,"TokenTimelock(ERC20Basic _token, address _beneficiary, uint64 _releaseTime);release()"
iswarm/p2pCny,contracts/token/TokenTimelock.sol,"TokenTimelock(ERC20Basic _token, address _beneficiary, uint64 _releaseTime);release()"
jpentland/lendr,sol/Lendr.sol,"Lendr(string name, string friend2_address);confirmFriendship(string name);setQuantity(string item, int quantity);confirm(string item, int quantity)"
ryepdx/coinlock,coinlock.sol,owned();lock(uint _expiration);redeem()
commodityadnetwork/CDX,contracts/Token.sol,"Token(string name_, bytes32 symbol_);setLogic(TokenLogic logic_);setOwner(address owner_);totalSupply();balanceOf( address who );allowance( address owner, address spender );transfer(address dst, uint wad);transferFrom(address src, address dst, uint wad);approve(address guy, uint wad);push(address dst, uint128 wad);pull(address src, uint128 wad);mint(uint128 wad);burn(uint128 wad);setName(string name_);setSymbol(bytes32 symbol_);transferEth(address dst, uint wad);triggerTansferEvent(address src,  address dst, uint wad);payout(address dst)"
aragon/aragon-core,contracts/test/mocks/AppProxyPinnedStorageMock.sol,setPinnedCodeExt(address _pinnedCode);getPinnedCodePosition();pinnedCodeExt()
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.5/library.sol,"insert(Data storage self, uint value);remove(Data storage self, uint value);contains(Data storage self, uint value);register(uint value)"
ilerik/cryptowedding,contracts/multisig.sol,"TransferTo(address recipient, uint256 amount);DecreaseTheAllowance(address recipient, uint256 amount);IncreaseWithdrawalAmount(uint256 amount);DecreaseWithdrawalAmount(uint256 amount);Withdrawal(address to, uint256 amount);createClaim(address to, uint256 amount);deactivateClaim();JustifyClaim(address to);JustifyClaimWithWitness(uint8 claimNumber);resetMistCallLoad()"
adridadou/eth-contract-api,src/test/resources/contract.sol,myMethod(string value);getEnumValue();getT();getM();getOwner();getArray();getSet();throwMe();getInitTime(uint time);getAccountAddress(address addr)
BeBlockTech/Anemoi,Master/contracts/AnemoiToken.sol,"IndorseToken();transfer(address _to, uint _value);approve(address _spender, uint _value)"
ebloc/AutonomousSoftwareOrg,AutonomousSoftwareOrg.sol,"AutonomousSoftwareOrg(bytes32 name,uint8 m,uint8 n, bytes32 url);ProposeProposal(bytes32 title,bytes32 url,uint256 prophash,uint requestedfund, uint deadline);VoteForProposal(uint propno);WithdrawProposalFund(uint propno);BecomeMemberCandidate(bytes32 url);VoteMemberCandidate(uint memberno);DelVoteMemberCandidate(uint memberno);Donate();Cite(bytes32 doinumber);UseBySoftware(address addr);addSoftwareExecRecord(bytes32 softwareversion,bytes32 url,uint256 inputhash,uint256 outputhash);addSoftwareVersionRecord(bytes32 url,bytes32 version,uint256 sourcehash);getSoftwareExecRecord(uint32 id);getSoftwareExecRecordLength();getSoftwareVersionRecords(uint32 id);geSoftwareVersionRecordsLength();getAutonomousSoftwareOrgInfo();getMemberInfoLength();getMemberInfo(uint memberno);getCandidateMemberInfo(uint memberno);getProposalsLength();getProposal(uint propno);getDonationLength();getDonationInfo(uint donationno);getCitationLength();getCitation(uint citeno);getUsedBySoftwareLength();getUsedBySoftware(uint usedbysoftwareno)"
DonorToken/DonorToken,test/helpers/BasicTokenMock.sol,"BasicTokenMock(address initialAccount, uint256 initialBalance)"
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/ownership/Superuser.sol,isSuperuser(address _addr);transferSuperuser(address _newSuperuser);transferOwnership(address _newOwner)
ElcoinCurrency/ElcoinContract,contracts/PosRewards.sol,"rewardTo(address _to, uint _amount);PosRewards();setStartTime(uint _startTime);setCycleLimit(uint _cycleLimit);setBannedCycles(uint[] _cycles);setMinimalRewardedBalance(uint _balance);kill();getRate(uint cycle);currentCycle();_isCycleValid(uint _cycle);getInterest(uint amount, uint cycle);transfer(address _from, address _to);_storeBalanceRecord(address _addr);getMinimalBalance(uint _cycle, address _addr);getAccountInfo(uint _cycle, uint _position);getRewardsCount(uint _cycle);sendReward(uint _cycle, uint _position)"
shahankhatch/dapp-bin,registrar/Registrar.sol,owner(string _name);addr(string _name);subRegistrar(string _name);content(string _name)
LianaHus/dapp-bin,registrar/Registrar.sol,owner(string _name);addr(string _name);subRegistrar(string _name);content(string _name)
RepublicMaster/dapp-bin,registrar/Registrar.sol,owner(string _name);addr(string _name);subRegistrar(string _name);content(string _name)
ethereum/dapp-bin,registrar/Registrar.sol,owner(string _name);addr(string _name);subRegistrar(string _name);content(string _name)
vaporry/dapp-bin,registrar/Registrar.sol,owner(string _name);addr(string _name);subRegistrar(string _name);content(string _name)
SmartChainX/ChainBlockchain,Contracts/Base/StandardToken.sol,"transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);balanceOf(address _owner);approve(address _spender, uint _value);allowance(address _owner, address _spender)"
gnosis/gnosis-contracts,contracts/Oracles/Oracle.sol,isOutcomeSet();getOutcome()
rootprojectco/backend,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address newAddress)
robmyers/artworld-ethereum,old/src/is-art/contracts/IsArt.sol,""
TrueBitFoundation/webasm-solidity,contracts/DepositsManager.sol,"getDeposit(address who);makeDeposit();withdrawDeposit(uint amount);addDeposit(address a, uint d);subDeposit(address a, uint d);transferDeposit(address a, address b, uint amount)"
papyrusglobal/smartcontracts,contracts/dao/RegistryProvider.sol,replaceChannelParticipantRegistry(address registry);replaceMemberRegistry(address registry);replaceVerifierRegistry(address registry);replaceDSPRegistry(address registry);replaceSSPRegistry(address registry);replaceAdvertiserRegistry(address registry);replacePublisherRegistry(address registry);replaceChannelManager(address _channelManager);getChannelParticipantRegistry();getMemberRegistry();getVerifierRegistry();getDSPRegistry();getSSPRegistry();getAdvertiserRegistry();getPublisherRegistry();getChannelManager()
Ethbet/ethbet,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Ethbet/ethbet,alpha/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
bluedroplet/blobstore-ethereum,src/MixItemStoreIpfsSha256Proxy.sol,"getNewItemId(address owner, bytes32 nonce);create(bytes32 flagsNonce, bytes32 ipfsHash);createNewRevision(bytes32 itemId, bytes32 ipfsHash);updateLatestRevision(bytes32 itemId, bytes32 ipfsHash);retractLatestRevision(bytes32 itemId);restart(bytes32 itemId, bytes32 ipfsHash);retract(bytes32 itemId);transfer(bytes32 itemId, address recipient);disown(bytes32 itemId);setEnforceRevisions(bytes32 itemId);setNotRetractable(bytes32 itemId);setNotTransferable(bytes32 itemId);transferEnable(bytes32 itemId);transferDisable(bytes32 itemId);setNotUpdatable(bytes32 itemId);getAbiVersion();getContractId();getInUse(bytes32 itemId);getItem(bytes32 itemId);getFlags(bytes32 itemId);getUpdatable(bytes32 itemId);getEnforceRevisions(bytes32 itemId);getRetractable(bytes32 itemId);getTransferable(bytes32 itemId);getOwner(bytes32 itemId);getRevisionCount(bytes32 itemId);getRevisionTimestamp(bytes32 itemId, uint revisionId);getAllRevisionTimestamps(bytes32 itemId);getRevisionIpfsHash(bytes32 itemId, uint revisionId);getAllRevisionIpfsHashes(bytes32 itemId)"
link-blockchain/blobstore,src/MixItemStoreIpfsSha256Proxy.sol,"getNewItemId(address owner, bytes32 nonce);create(bytes32 flagsNonce, bytes32 ipfsHash);createNewRevision(bytes32 itemId, bytes32 ipfsHash);updateLatestRevision(bytes32 itemId, bytes32 ipfsHash);retractLatestRevision(bytes32 itemId);restart(bytes32 itemId, bytes32 ipfsHash);retract(bytes32 itemId);transfer(bytes32 itemId, address recipient);disown(bytes32 itemId);setEnforceRevisions(bytes32 itemId);setNotRetractable(bytes32 itemId);setNotTransferable(bytes32 itemId);transferEnable(bytes32 itemId);transferDisable(bytes32 itemId);setNotUpdatable(bytes32 itemId);getAbiVersion();getContractId();getInUse(bytes32 itemId);getItem(bytes32 itemId);getFlags(bytes32 itemId);getUpdatable(bytes32 itemId);getEnforceRevisions(bytes32 itemId);getRetractable(bytes32 itemId);getTransferable(bytes32 itemId);getOwner(bytes32 itemId);getRevisionCount(bytes32 itemId);getRevisionTimestamp(bytes32 itemId, uint revisionId);getAllRevisionTimestamps(bytes32 itemId);getRevisionIpfsHash(bytes32 itemId, uint revisionId);getAllRevisionIpfsHashes(bytes32 itemId)"
Vourhey/learning-center,sol/DevConSchoolReward.sol,"newDeveloper(address _developer, string _project);payReward()"
zetherz/eth-match,test/helpers/BurnableTokenMock.sol,"BurnableTokenMock(address initialAccount, uint initialBalance)"
Blocklancer/Blocklancer-Contracts,solidity/MigrationAgent.sol,"totalSupply();totalSupply();finalizeMigration();createToken(address from, uint256 amount);MigrationAgent(address _oldBlocklancerToken);totalSupply();setNewTokenAddress(address _NewBlocklancerToken);safetyCheck(uint256 _value);migrateFrom(address _from, uint256 _value);finalizeMigration()"
ingamx/onecarpayment,KarTokenContract.Test.sol,"owned();transferOwnership(address newOwner);receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);_transfer(address _from, address _to, uint _value);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);burn(uint256 _value);burnFrom(address _from, uint256 _value);_transfer(address _from, address _to, uint _value);mintToken(address target, uint256 mintedAmount);freezeAccount(address target, bool freeze);setPrices(uint256 newSellPrice, uint256 newBuyPrice);buy();sell(uint256 amount)"
naddison36/digital-dollar-ethereum,contracts/AssetBackedTokens.sol,"AssetBackedTokens(string _symbol, uint8 _decimals, address _settlementInstitution);balanceOf(address _tokenHolder);allowance(address tokenHolder, address thirdParty);transfer(address receivingTokenHolder, uint amount);transferFrom(address sendingTokenHolder, address receivingTokenHolder, uint amount);xfer(address sendingTokenHolder, address receivingTokenHolder, uint amount);transferAssets(address sendingAssetHolder, address receivingAssetHolder, uint amount);approve(address thirdParty, uint amount);updateSettlementInstitution(address newSettlementInstitutionAddress);updateAssets(address assetHolder, int amount);settleAssets();getAssetBalances(address assetHolder);updateTokens(address tokenHolder, int amount);cleanAssetHolders();getAssetHolders()"
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/DayLimit.sol,DayLimit(uint _limit);_setDailyLimit(uint _newLimit);_resetSpentToday();underLimit(uint _value);today()
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/DayLimit.sol,DayLimit(uint _limit);_setDailyLimit(uint _newLimit);_resetSpentToday();underLimit(uint _value);today()
adrianbrink/tendereum,vendor/github.com/cosmos/tendereum/vendor/github.com/ethereum/go-ethereum/tests/testdata/src/VMTestsFiller/loop-mul.sol,"testMulMod(uint x, uint y, uint k, uint n);testDivAdd(uint x, uint y, uint k, uint n);testMul(uint x, uint y, uint n);testAdd(uint x, uint y, uint n)"
adrianbrink/tendereum,vendor/github.com/ethereum/go-ethereum/tests/testdata/src/VMTestsFiller/loop-mul.sol,"testMulMod(uint x, uint y, uint k, uint n);testDivAdd(uint x, uint y, uint k, uint n);testMul(uint x, uint y, uint n);testAdd(uint x, uint y, uint n)"
lifechange-io/christ-coin,contracts/Ledger.sol,"setController(address _address);transfer(address _from, address _to, uint _value);transferFrom(address _spender, address _from, address _to, uint _value);approve(address _owner, address _spender, uint _value);allowance(address _owner, address _spender);burn(address _from, uint _amount);mint(address _to, uint _amount)"
ise-ethereum/on-chain-chess,contract/Auth.sol,"verifySig(address account, bytes32 hash, bytes sig);getAddress(bytes32 hash, uint8 v, bytes32 r, bytes32 s);verify(address account, bytes32 hash, uint8 v, bytes32 r, bytes32 s)"
bokkypoobah/TokenTrader,testing/test_20170125_0829/TokenSellerFactory.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);approve(address _spender, uint _value);allowance(address _owner, address _spender);Owned();transferOwnership(address newOwner);makerWithdrawAsset(uint256 tokens);makerWithdrawEther(uint256 ethers);takerBuyAsset();verify(address tradeContract);TokenSeller(seller)"
rmerom/PutYourMoneyWhereYourContractIs,contracts/EnvironmentProd.sol,blockDotBlockHash(uint forBlockNumber);blockDotCoinbase();blockDotDifficulty();blockDotGasLimit();blockDotNumber();blockDotTimestamp();now()
ethereum/dapp-bin,registrar/FixedFeeRegistrar.sol,"addr(string _name);name(address _owner);owner(string _name);addr(string _name);subRegistrar(string _name);content(string _name);name(address _owner);reserve(string _name);disown(string _name, address _refund);setOwner(string _name, address _newOwner);setAddr(string _name, address _a);setSubRegistrar(string _name, address _registrar);setContent(string _name, bytes32 _content);setName(string _name);record(string _name);addr(string _name);subRegistrar(string _name);content(string _name);owner(string _name);name(address _owner);m_record(string _name)"
trailofbits/greenhorn,csaw-2017/ETHERSNOOB/sources/ethersnoob1.sol,"set(uint data, uint data2, uint data3);get_flag();get()"
livepeer/protocol,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
SilentCicero/wafr,src/tests/solidityTests/gasUsage/examples/OpenRegistry.sol,register(address _someMember);numMembers()
trailofbits/greenhorn,grehack-2017/bounty/Bounty.sol,"win();get_reward(address chall);get_solved(address chall);add_bounty(uint reward, bytes32 chall);increase_bounty(address chall);remove_bounty();bounty_solve(address chall, bytes32 solution)"
ethermarket/democracy,src/base/action.sol,execute();remove();_execute()
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.4.24/forgottenReturn.sol,"Sheep(string _name, string _dna);geneticallyEngineer(string _dna)"
soad003/browser-solidity,test/staticanalysis/test-contracts/forgottenReturn.sol,"Sheep(string _name, string _dna);geneticallyEngineer(string _dna)"
cryptape/cita,scripts/contracts/src/user_management/AllGroups.sol,insert(address _group);drop(address _group);queryGroups()
MarketProject/MarketProtocol,contracts/tokens/InitialAllocationCollateralToken.sol,getInitialAllocation();isAllocationClaimed(address claimee)
LOOMIA/loomia,ethereum/test/StandardToken.sol,"isToken();transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);balanceOf(address _owner);approve(address _spender, uint _value);allowance(address _owner, address _spender)"
OpenSTFoundation/SimpleTokenSale,contracts/OpsManaged.sol,OpsManaged();isAdmin(address _address);isOps(address _address);isOwnerOrOps(address _address);setAdminAddress(address _adminAddress);setOpsAddress(address _opsAddress)
eris-ltd/eris-db,tests/compilers_fixtures/contractImport4.sol,getVariables()
montyly/manticore,tests/ethereum/contracts/detectors/delegatecall_not_ok1.sol,setaddr(address a);default_call(bytes data);f()
trailofbits/manticore,tests/ethereum/contracts/detectors/delegatecall_not_ok1.sol,setaddr(address a);default_call(bytes data);f()
bcosorg/bcos,tool/LibString.sol,"memcpy(uint dest, uint src, uint len);findPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);length(string _self);compare(string _self, string _str);compareNoCase(string _self, string _str);equals(string _self, string _str);equalsNoCase(string _self, string _str);substr(string _self, uint _start, uint _len);concat(string _self, string _str);concat(string _self, string _str1, string _str2);concat(string _self, string _str1, string _str2, string _str3);trim(string _self);trim(string _self, string _chars);split(string _self, string _delim, string[] storage _array);indexOf(string _self, string _str);indexOf(string _self, string _str, uint pos);toInt(string _self);toAddress(string _self);toKeyValue(string _self, string _key);toKeyValue(string[] storage _self, string _key);getStringValueByKey(string _self, string _key);getIntValueByKey(string _self, string _key);getArrayValueByKey(string _self, string _key);getArrayValueByKey(string _self, string _key, string[] storage _array);keyExists(string _self, string _key);storageToUint(string _self);inArray(string _self, string[] storage _array);inArrayNoCase(string _self, string[] storage _array);addrToAsciiString(address x);toChar(byte b);toUpper(string _self);toLower(string _self)"
bcosorg/bcos,systemcontractv2/LibString.sol,"memcpy(uint dest, uint src, uint len);findPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);length(string _self);compare(string _self, string _str);compareNoCase(string _self, string _str);equals(string _self, string _str);equalsNoCase(string _self, string _str);substr(string _self, uint _start, uint _len);concat(string _self, string _str);concat(string _self, string _str1, string _str2);concat(string _self, string _str1, string _str2, string _str3);trim(string _self);trim(string _self, string _chars);split(string _self, string _delim, string[] storage _array);indexOf(string _self, string _str);indexOf(string _self, string _str, uint pos);toInt(string _self);toAddress(string _self);toKeyValue(string _self, string _key);toKeyValue(string[] storage _self, string _key);getStringValueByKey(string _self, string _key);getIntValueByKey(string _self, string _key);getArrayValueByKey(string _self, string _key);getArrayValueByKey(string _self, string _key, string[] storage _array);keyExists(string _self, string _key);storageToUint(string _self);inArray(string _self, string[] storage _array);inArrayNoCase(string _self, string[] storage _array);addrToAsciiString(address x);toChar(byte b);toUpper(string _self);toLower(string _self)"
BancoSabadell/bs-token-data,contracts/Admin.sol,init(address permissionManagerAddress)
YusukeMukoyama/boiler-trade-dapp,app/client/lib/contracts/MultiplyContract.sol,""
livepeer/protocol,contracts/verification/LivepeerVerifier.sol,"LivepeerVerifier(address _controller, address _solver, string _verificationCodeHash);setVerificationCodeHash(string _verificationCodeHash);setSolver(address _solver);__callback(uint256 _requestId, bytes32 _result);getPrice()"
GuigsEvt/CrowdsaleEthereum,contracts/FinalizableCrowdsale.sol,finalize();finalization()
eris-ltd/eris-db,tests/jobs_fixtures/expected-failure-revert/revert.sol,""
Dsensor/resolutionwallet,src/server/smartcontracts/quotescredits-contract.sol,QuotesCredits();getCredits();getQuotes();remove()
DCReum/dcreum.github.io,contracts/workflow.sol,canExecute(uint32 actId);execute(uint32 id);sudoku();getWorkflowName();getActivityCount(uint i);getActivityName(uint i);isIncluded(uint i);isExecuted(uint i);isPending(uint i);getIncludes(uint i);getExcludes(uint i);getResponses(uint i);getConditions(uint i);getMilestones(uint i);getAccountWhitelist(uint i);isAuthDisabled(uint i)
szerintedmi/numbergame,contracts/NumberGame.sol,"NumberGame();function();getOraclizeCbAddress();latestRoundId();getRequiredBetAmount(uint roundId);getTotalPot(uint _roundId);getWinnablePot(uint _roundId);getFeeAmount(uint _roundId);getOraclizePrice(string _dataSource);getGameInfo();getRoundInfo(uint roundId);getBet(uint roundId, address playerAddress);setNextRoundLength(uint _nextRoundLength);setNextRoundFee(uint32 _nextRoundFee);startNewRound();verifyBet(uint roundId, uint value);placeBet(uint roundId, string encryptedBet);__callback(bytes32 queryId, string result);revealBet(address playerAddress, string result);checkAndCloseRound(bool forceClose);deductFee();payWinner();refundPlayers(uint _totalRefund)"
redsquirrel/augur-core,src/extensions/Register.sol,register()
Nermannen/eth-e-voting-project,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
D-Transport/smart-contract,test/TestDTransport.sol,testWIP()
VelocityMarket/Options-Contract,Contracts/pricegeth.sol,getPrices(uint blockNumber);queryTimestamp(uint40 timestamp);USDBTC(uint blockNumber);BTCETH(uint blockNumber);BTCETC(uint blockNumber);BTCDOGE(uint blockNumber)
LOOMIA/loomia,tiletoken/src/contracts/TileDistribution.sol,"TileDistribution(address[] _vestingAddress, address _timelockAddress);batchDistributeTokens(address[] _beneficiaryWallets, uint256[] _amounts);distributeTokens(address _beneficiaryWallet, uint256 _amount);getTokenVestingAddressesLength();createVestingContract(address[] _beneficiaryWallet);createTimeLockContract(address _beneficiaryWallet);createTokenContract()"
ethermarket/democracy,src/base/persistentProtectedContract.sol,remove()
silasdavis/eris-db,tests/jobs_fixtures/app09-basic_solidity_imports/contracts/base.sol,set(uint x);get()
silasdavis/burrow,tests/jobs_fixtures/app09-basic_solidity_imports/contracts/base.sol,set(uint x);get()
eris-ltd/eris-db,tests/jobs_fixtures/app09-basic_solidity_imports/contracts/base.sol,set(uint x);get()
adridadou/eth-propeller-core,src/test/resources/contract.sol,myMethod(string memory value);getEnumValue();getT();getM();getOwner();getArray();getSet();throwMe();getInitTime(uint time);getAccountAddress(address addr)
district0x/name-bazaar,resources/public/contracts/src/strings.sol,"memcpy(uint dest, uint src, uint len);toSlice(string memory self);len(bytes32 self);copy(slice memory self);toString(slice memory self);len(slice memory self);empty(slice memory self);compare(slice memory self, slice memory other);equals(slice memory self, slice memory other);nextRune(slice memory self, slice memory rune);nextRune(slice memory self);ord(slice memory self);keccak(slice memory self);startsWith(slice memory self, slice memory needle);beyond(slice memory self, slice memory needle);endsWith(slice memory self, slice memory needle);until(slice memory self, slice memory needle);findPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);rfindPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);find(slice memory self, slice memory needle);rfind(slice memory self, slice memory needle);split(slice memory self, slice memory needle, slice memory token);split(slice memory self, slice memory needle);rsplit(slice memory self, slice memory needle, slice memory token);rsplit(slice memory self, slice memory needle);count(slice memory self, slice memory needle);contains(slice memory self, slice memory needle);concat(slice memory self, slice memory other);join(slice memory self, slice[] memory parts)"
zeroqn/aa-apply,contracts/SharedLibrary.sol,"withdrawFrom(address from, address to, address[] _tokens)"
daostack/daostack,contracts/universalSchemes/SchemeRegistrar.sol,"executeProposal(bytes32 _proposalId, int256 _param);proposeToRemoveScheme(Avatar _avatar, address _scheme, string memory _descriptionHash)"
dltdojo/courses,ethereum/dapps/token/T99_ERC23.sol,"tokenFallback(address _from, uint _value, bytes _data);balanceOf(address who);name();symbol();decimals();totalSupply();transfer(address to, uint value);transfer(address to, uint value, bytes data);safeAdd(uint256 x, uint256 y);safeSub(uint256 x, uint256 y);safeMul(uint256 x, uint256 y);name();symbol();decimals();totalSupply();transfer(address _to, uint _value, bytes _data);transfer(address _to, uint _value);isContract(address _addr);transferToAddress(address _to, uint _value, bytes _data);transferToContract(address _to, uint _value, bytes _data);balanceOf(address _owner)"
gmo-blockchain/solidity,contracts/DataObjectLogic_v2.sol,"create(address _sender, bytes32 _id, address _owner, bytes32 _hash, address _cns, bytes32 _contractName);setHashByWriter(address _sender, bytes32 _id, address _writer, bytes32 _hash);setHashByProvider(address _sender, bytes32 _id, bytes32 _hash);getWriteTimestamp(bytes32 _id);setHash(address _sender, bytes32 _id, address _writer, bytes32 _hash, uint _targetIdx, uint _compareIdx)"
RyuuGan/sol-merger,test/compiled/circular/Circular1.sol,""
aragon/aragon-network-token,packages/v2/contracts/ANTv2.sol,"_validateSignedData(address signer, bytes32 encodeData, uint8 v, bytes32 r, bytes32 s);_changeMinter(address newMinter);_mint(address to, uint256 value);_burn(address from, uint value);_approve(address owner, address spender, uint256 value);_transfer(address from, address to, uint256 value);getChainId();getDomainSeparator();mint(address to, uint256 value);changeMinter(address newMinter);burn(uint256 value);approve(address spender, uint256 value);transfer(address to, uint256 value);transferFrom(address from, address to, uint256 value);permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)"
Majoolr/ethereum-libraries,StringUtilsLib/truffle/test/TestStringUtilsLibTwo.sol,testUntil();testFind();testRfind();testSplit();testRsplit();testCount();testContains();testConcat();testJoin()
program017/Komhar,arrayimplementation.sol,ArrayRR();setArray(uint8[10] incoming);getArraySettingResult();getArray();getValue(uint8 x);kill()
axic/tinyoracle,contracts/lookup.sol,setOwner(address _owner);TinyOracleLookup();setQueryAddress(address addr);getQueryAddress();setResponseAddress(address addr);getResponseAddress();kill()
montyly/manticore,tests/ethereum/contracts/detectors/selfdestruct_true_pos.sol,setOwner();kill()
trailofbits/manticore,tests/ethereum/contracts/detectors/selfdestruct_true_pos.sol,setOwner();kill()
bitcoinmeetups/dapp-bin,registrar/urlhint.sol,"url(hash _hash);suggestUrl(hash _hash, string32 _url)"
chriseth/dapp-bin,registrar/urlhint.sol,"url(hash _hash);suggestUrl(hash _hash, string32 _url)"
pooleja/SolidityPlayground,contracts/Hub.sol,"Hub();UpdatePlatformContract(string key, address value)"
triage/KPCSEthereum,contracts/KPCSAdministrator.sol,KPCSAdministrator(string _name)
EMAXio/cosigner,cosigner-ethereum-token-storage/SolidityContracts/V4/StorageAdmin.sol,"deleteContract(uint8[] sigV, bytes32[] sigR, bytes32[] sigS)"
Braveno/cosigner,cosigner-ethereum-token-storage/SolidityContracts/V4/StorageAdmin.sol,"deleteContract(uint8[] sigV, bytes32[] sigR, bytes32[] sigS)"
EMAXio/heimdal,cosigner-ethereum-token-storage/SolidityContracts/V4/StorageAdmin.sol,"deleteContract(uint8[] sigV, bytes32[] sigR, bytes32[] sigS)"
Getline-Network/getline,dapp/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address newAddress)
livepeer/protocol,contracts/token/MerkleMine.sol,"start();generate(address _recipient, bytes _merkleProof);callerTokenAmountAtBlock(uint256 _blockNumber)"
elementrem/solidity,test/compilationTests/MultiSigWallet/MultiSigWalletWithDailyLimitFactory.sol,"create(address[] _owners, uint _required, uint _dailyLimit)"
ChicoBitcoinJoe/Matriarch,contracts/Matriarch.sol,"registerMeDao(address _meDao);updateMeDao(address _newMeDao);updateDescriptionHash(string _description_hash);isVetted(address _account);vet(address _ceo, bool _vetted)"
aragon/aragon-core,contracts/test/mocks/DepositableStorageMock.sol,setDepositableExt(bool _depositable);getDepositablePosition()
Juzix/BlockChain-Demo,contracts/token/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
b-mueller/mythril,tests/testdata/input_contracts/calls.sol,thisisfine();reentrancy();calluseraddress(address addr);callstoredaddress();setstoredaddress(address addr)
mothershipcx/contracts,contracts/interface/TokenController.sol,"proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount)"
silasdavis/eris-db,tests/jobs_fixtures/app56-embedded-constructors/contract.sol,createD()
silasdavis/burrow,tests/jobs_fixtures/app56-embedded-constructors/contract.sol,createD()
eris-ltd/eris-db,tests/jobs_fixtures/app56-embedded-constructors/contract.sol,createD()
michinbear/solidity,test/compilationTests/zeppelin/ReentrancyGuard.sol,""
elementrem/solidity,test/compilationTests/zeppelin/ReentrancyGuard.sol,""
cryptolu/findel,marketplace.sol,"register();isRegistered();storeWithId(Description dsc);getBalance(address user);getMyBalance();getDescriptionInfo(bytes32 dscId);getFincontractInfo(bytes32 fctId);getTimestamp();Zero();One(Currency _curr);Give(bytes32 _dscId_1);And(bytes32 _dscId_1, bytes32 _dscId_2);Or(bytes32 _dscId_1, bytes32 _dscId_2);Scale(int _scaleCoeff, bytes32 _dscId);ScaleObs(address _gateway, bytes32 _dscId);If(address _gatewayBool, bytes32 _dscId_1, bytes32 _dscId_2);Timebound(uint lowerBound, uint upperBound, bytes32 _dscId_1);At(uint exactTime, bytes32 _dscId_1);Before(uint upperBound, bytes32 _dscId_1);After(uint lowerBound, bytes32 _dscId_1);createFincontractWithParties(address _issuer, address _owner, bytes32 _dscId);createFincontract(bytes32 _dscId);issueFor(bytes32 _fctId, address _proposedOwner);own(bytes32 fctId);join(bytes32 fctId);enforcePayment(address issuer, address owner, Currency currency, int amount);executeRecursive(address issuer, address owner, bytes32 dscId, int scaleCoeffAcc);execute(bytes32 fctId);choose(bytes32 fctIdOr, bool chooseFirst);executeOr(bytes32 fctIdOr, bool chooseFirst);deleteFincontract(bytes32 fctId);simpleTest(address addr);complexScaleObsTest(address addr);timeboundTest(address addr, uint lowerBound, uint upperBound);setGatewayI(address _addr);setGatewayB(address _addr);getValue();getTimestamp();getProof();newProof();newValue();update();newBooleanValue();newProof();newValue();newProof();newValue();newProof();newValue();newProof();newValue()"
sonm-io/core,blockchain/source/contracts/SNMMasterchain.sol,"balanceOf(address who);transfer(address to, uint value);transfer(address _to, uint _value);balanceOf(address _owner);allowance(address owner, address spender);transferFrom(address from, address to, uint value);approve(address spender, uint value);transferFrom(address _from, address _to, uint _value);approve(address _spender, uint _value);allowance(address _owner, address _spender);SNMMasterchain(address _ico);mint(address _holder, uint _value);defrost();transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);approve(address _spender, uint _value)"
aletheia-foundation/aletheia-app,contracts/CheapManuscript.sol,"MinimalManuscript(bytes32 _da);isOwner(address account);authorSigned(address _author);dataAddress();addAuthor(address newAuthor);citePaper(address citee);removeCitation(address citee);removeAuthor(address author);signAuthorship();citationCount();authorCount();author(uint authorIdx);citation(uint paperIdx);removeItemByIndex(address[] storage someList, uint i);findItem(address[] someList, address item)"
etherfundme/dapp,contracts/EtherFundMeIssueTokensCrowdfunding.sol,"getState();isGoalReached();invest();finalize();refund();halt();unhalt();addMilestone(uint _start, uint _end, uint _bonus);getCurrentMilestone();balanceOf(address _owner);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);approve(address _spender, uint _value);allowance(address _owner, address _spender)"
wpypeiyao/Identity-On-Blockchain,app/contracts/UserAccount.sol,"UserAccount(bytes32 Name, bytes32 PubKey_x1, bytes32 PubKey_x2, bytes32 PubKey_y1, bytes32 PubKey_y2);setName(bytes32 newName);setPublicKey(bytes32 PubKey_x1, bytes32 PubKey_x2, bytes32 PubKey_y1, bytes32 PubKey_y2);getPublicKey();getBalance();AddSocialAccount(bytes32 newApp, bytes32 newUsername, bytes32 newPassword);AltSocialAccountPw(bytes32 targetApp, bytes32 targetUsername, bytes32 newPassword);DelSocialAccount(bytes32 delApp, bytes32 delUsername);getSocialAccountPw(bytes32 targetApp, bytes32 targetUsername);getSocialAccountByIndex(uint index);getSocialAccountsLength();AddContact(address newCAddress, bytes32 newCName, bytes32 PubKey_x1, bytes32 PubKey_x2, bytes32 PubKey_y1, bytes32 PubKey_y2);AlterContactName(address targetAddress, bytes32 altCName);AlterContactPubkey(address targetAddress, bytes32 PubKey_x1, bytes32 PubKey_x2, bytes32 PubKey_y1, bytes32 PubKey_y2);deleteContact(address targetAddress);getTargetContactPubKey(address targetAddress);getContactByIndex(uint index);getContactAddressByIndex(uint index);getContactsLength();AddSharedAccount(bytes32 newApp, bytes32 newUsername, bytes32 newPassword, address SenderAddress);deleteSharedAccount(bytes32 delApp, bytes32 delUsername, uint timeLimited);getSharedAccountPw(bytes32 targetApp, bytes32 targetUsername);getSharedAccounByIndex(uint index);getSharedAccountsLength()"
Dsummers91/Dist-Trade-2017,installed_contracts/tokens/contracts/TokenTester.sol,TokenTester()
amisolution/Test,AMISconverter.sol,"proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value);proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);convert(uint _amount)"
SmartChainX/ChainBlockchain,Contracts/Base/Ownable.sol,Ownable();transferOwnership(address newOwner)
drcode/ethereum-order-statistic-tree,OrderStatisticTree.sol,"OrderStatisticTree();update_count(uint value);update_counts(uint value);update_height(uint value);balance_factor(uint value);rotate(uint value,bool dir);rebalance_insert(uint n_value);rebalance_delete(uint p_value,bool side);fix_parents(uint parent,bool side);insert_helper(uint p_value,bool side,uint value);insert(uint value);rightmost_leaf(uint value);zero_out(uint value);remove_branch(uint value,uint left,uint right);remove_helper(uint value);remove(uint value);rank(uint value);select_at(uint pos);duplicates(uint value);count();in_top_n(uint value,uint n);percentile(uint value);at_percentile(uint percentile);permille(uint value);at_permille(uint permille);median();node_left_child(uint value);node_right_child(uint value);node_parent(uint value);node_side(uint value);node_height(uint value);node_count(uint value);node_dupes(uint value)"
MarketProject/MarketProtocol,contracts/MarketContractRegistryInterface.sol,addAddressToWhiteList(address contractAddress);isAddressWhiteListed(address contractAddress)
iam-dev/ERC23,installed_contracts/zeppelin-solidity/test/mocks/SafeMathMock.sol,"multiply(uint256 a, uint256 b);subtract(uint256 a, uint256 b);add(uint256 a, uint256 b)"
annihilatio/ido,contracts/Token.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);transferFrom(address _from, address _to, uint _value);balanceOf(address _owner);approve_fixed(address _spender, uint _currentValue, uint _value);approve(address _spender, uint _value);allowance(address _owner, address _spender);set(address _address);unSet(address _address);addOperator(address _address);removeOperator(address _address);tgeSetLive();tgeSetFinished();updateStatus();burn(uint _amount);transfer(address _to, uint _value);multiTransfer(address[] dests, uint[] values);withdrawFrozen();setWhitelist(address _address);setFreeze();tgeStageBlockLeft();tgeCurrentPartInvestor();tgeNextPartInvestor();tgeCurrentStage();_mint(uint _amountProject, uint _amountFounders, uint _amountSender)"
iurimatias/embark-framework,dapps/tests/contracts/contracts/test.sol,"add(uint _a, uint _b);testAdd();changeAddress(address _addr)"
DroneEmployee/contracts,ros/DroneEmployeeROS.sol,"incomingMessage(Message _msg);DroneEmployeeROS(address _endpoint, address _controller, address _drone);flight(Checkpoint[] _checkpoints);setRoute(RouteResponse _response);flightDone(uint32 _route_id)"
wilmveel/praetorian-contracts,contracts/Party.sol,Party();getChallenges();addChallenge(address challenge)
orbro/eth-enablers,DAO-develop/simpleWithdrawTrustee.sol,withdraw();trusteeWithdraw(uint _amount)
manojpramesh/solidity-contracts,contracts/hello-world/hello-world.sol,HelloWorld(string _greeting);greet();setGreeting(string _newgreeting);kill()
QTBlockchain/SolidityNWeb3,SmartContracts/March2018/CarRoute/contracts/MapDemo.sol,MapDemo();setSomeValues();getWord(uint number)
aragon/aragon-network-token,packages/controller/mocks/ANT.sol,"totalSupply();balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value);safeMul(uint a, uint b);safeDiv(uint a, uint b);safeSub(uint a, uint b);safeAdd(uint a, uint b);assert(bool assertion);receiveApproval(address _from, uint256 _amount, address _token, bytes _data);Controlled();changeController(address _newController);saleFinalized();SaleWallet(address _multisig, uint _finalBlock, address _tokenSale);withdraw();doWithdraw();proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);ANPlaceholder(address _sale, address _ant);changeController(address network);proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);transfer(address _to, uint256 _amount);balanceOf(address _owner);approve(address _spender, uint256 _amount);totalSupply();balanceOfAt(address _owner, uint _blockNumber);totalSupplyAt(uint _blockNumber);min(uint a, uint b);enableTransfers(bool _transfersEnabled);isContract(address _addr);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);spendableBalanceOf(address _holder);setCanCreateGrants(address _addr, bool _allowed);doSetCanCreateGrants(address _addr, bool _allowed);changeVestingWhitelister(address _newWhitelister);revokeTokenGrant(address _holder, uint _grantId);tokenGrantsCount(address _holder);tokenGrant(address _holder, uint _grantId);vestedTokens(TokenGrant grant, uint64 time);nonVestedTokens(TokenGrant grant, uint64 time);lastTokenIsTransferableDate(address holder);transferableTokens(address holder, uint64 time)"
daostack/daostack,contracts/test/SafeERC20Mock.sol,"transfer(address _to, uint256 _value);transferWithFix(address _to, uint256 _value);transferFromWithFix(address _from, address _to, uint256 _value);approveWithFix(address _spender, uint256 _value)"
michinbear/solidity,test/compilationTests/MultiSigWallet/MultiSigWallet.sol,"MultiSigWallet(address[] _owners, uint _required);addOwner(address owner);removeOwner(address owner);replaceOwner(address owner, address newOwner);changeRequirement(uint _required);submitTransaction(address destination, uint value, bytes data);confirmTransaction(uint transactionId);revokeConfirmation(uint transactionId);executeTransaction(uint transactionId);isConfirmed(uint transactionId);addTransaction(address destination, uint value, bytes data);getConfirmationCount(uint transactionId);getTransactionCount(bool pending, bool executed);getOwners();getConfirmations(uint transactionId);getTransactionIds(uint from, uint to, bool pending, bool executed)"
shellygr/ECFChecker,RunningExample/SimpleDAO-and-Mallory.sol,donate(address to);withdraw(uint amount);queryCredit(address to);Mallory(SimpleDAO addr);getJackpot()
bitsanity/gungadin,ethereum/publisher/Publisher.sol,"transfer( address to, uint amount );transferFrom( address from, address to, uint amount );isMember( address pusher );changeOwner( address payable newOwner );setFee( uint256 _fee );setDao( uint256 _dao );setTreasury( address payable _treasury );setMembership( address _contract );setTokenFee( uint256 _fee );setToken( address _token );withdraw( uint256 amount );sendTok( address _tok, address _to, uint256 _qty )"
SilentCicero/wafr,src/tests/solidityTests/assertEq/test.assertEq.uint.sol,setup();test_validEmptyEqEmpty();test_invalidEmptyNotOne();test_invalidEmptyEqVal();test_invalidAddressNotZero();test_invalidBalanceNotZero();test_twoValidEqUint();test_validContractBalance();test_threeInvalidEqUint();test_threeValidEqUint();test_fourInvalidEqUint();test_fourValidEqUint()
dltdojo/courses,ethereum/dapps/ico/T999_crowsale.sol,buyTokens(address beneficiary)
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/inheritance/contracts/Branch.sol,""
Dicoiner/irianna-solidity,contracts/lifecycle/Pausable.sol,pause();unpause()
erooijak/ethlance,resources/public/contracts/src/ethlanceSearchFreelancers.sol,EthlanceSearchFreelancers(address _ethlanceDB)
cgewecke/solcover,test/sources/zeppelin/Ownable.sol,Ownable();transfer(address newOwner)
JoinColony/solcover,test/sources/zeppelin/Ownable.sol,Ownable();transfer(address newOwner)
ajlopez/EthSharpVm,Samples/CompDecomp/greeter.sol,greeter();setMessage(string g);greet()
jbaylina/EIP165Cache,test/EIP165Implementer.sol,""
bluedroplet/ethereum-account-key-value,account_key_value.sol,"valueSet(string key, bytes value);valueDelete(string key);valueGet(string key);valueGet(address account, string key)"
drupalnomad/ethereum-account-key-value,account_key_value.sol,"valueSet(string key, bytes value);valueDelete(string key);valueGet(string key);valueGet(address account, string key)"
shahankhatch/dapp-bin,future_solidity/queue.sol,length();capacity();push(uint /*Value*/ data);pop()
LianaHus/dapp-bin,future_solidity/queue.sol,length();capacity();push(uint /*Value*/ data);pop()
RepublicMaster/dapp-bin,future_solidity/queue.sol,length();capacity();push(uint /*Value*/ data);pop()
ethereum/dapp-bin,future_solidity/queue.sol,length();capacity();push(uint /*Value*/ data);pop()
vaporry/dapp-bin,future_solidity/queue.sol,length();capacity();push(uint /*Value*/ data);pop()
customizablebasicincome/cbi-tokensale,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
mcgoddard/connect4eth,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
s-tikhomirov/solar-token,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
whachoe/eth_tutorial_game,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
ajagesser/contracts,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
sarbogast/angular-metacoin,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
anniemwu/chainge,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
jshacks/blockchain-Evote,smart-contracts/cryptovote/test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
motionwerkGmbH/ethermint,pegzone/solidity/test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
leopoldjoy/react-ethereum-dapp-example,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
deadmenswitch/dms,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
Jonathan56/mosasik_ethereum_demo,ethereum/test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
OT-Future/ethereum-resource,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
qjflores/singularity,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
Stennuts66/gamma,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
Lawlez/solidity-contracts,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
charlieknoll/dgpv2,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
BeBlockTech/Anemoi,BeBlock-Master/WePowerPresaleContractAudit-master/test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
DavidBurela/truffledevops,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
onyb/ethane,core/test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
SafecontractDev/protocol,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
willdavidc/prometh,truffle/test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
globaljobcoin/GJC,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
ganchix/ETH_16_Ethereum,UNIT-4/frist_project/test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
ganchix/ETH_16_Ethereum,UNIT-5/shopfrontProject/test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
y12studio/dltdojo,dockerfiles/truffle/v320/ddjtab/test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
davidoevans/react-redux-dapp,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
spdz/ethereum_class_01,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
victorsintnicolaas/RVR,temp/test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
ramilexe/ethermint,pegzone/solidity/test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
gichiba/Mattereum_Hackday_Moon,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
vanderthiel/techdays-2017-demo,identity/test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
corbinpage/ethereum-play,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
Solvocracy/solvocracy-dapp,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
pooleja/SolidityPlayground,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
AndriianChestnykh/DebtManager,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
ChristopheDemangeot/SupplyChainBC,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
Spreadway/core,new_prophets/test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
cruskit/truffle-voting-example,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
thekaleidoscope/Hello-Ethereum,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
hsavit1/gosofi_webpage,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
ksteigerwald/event-logger-dapp,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
thanhson1085/DemoCoin,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
Alonski/CoinPanion,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
Atzen2/hacking-law-proto,truffle/test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
tonymichaelhead/Legatum,LegatumClient/test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
cpetty-Novetta/raffle-dapp,imports/smart-contracts/test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
dltdojo/courses,ethereum/truffle/multisig/test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
kyamuise/mugen-money,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
mediachain/cccoin,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
Ethbet/ethbet,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
dukoolio/d3health_code,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
quanticpanda/TCI_truffle,tmp/test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
nandakishore2009/smart-will,solidity/test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
AbhishekShah212/learningspace,ethereum/solidity/truffle/test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
Nermannen/eth-e-voting-project,Backups/Backup/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
QTBlockchain/SolidityNWeb3,SmartContracts/helloworld/test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
QTBlockchain/SolidityNWeb3,patterns/test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
QTBlockchain/SolidityNWeb3,SmartContracts/mynewcontract/test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
QTBlockchain/SolidityNWeb3,SmartContracts/debugtest/test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
QTBlockchain/SolidityNWeb3,SmartContracts/truffleboxdemo/test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
QTBlockchain/SolidityNWeb3,Projects/Reference/test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
alantsv/gercom-ico,gercoin/test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
ArjunBhuptani/VILLJ,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
DramaticLiberty/GreenChain,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
aquiladev/browniecoin,contracts/test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
prashantpawar/truffle-octo-robot,test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
Spreadway/core,eth/voting.sol,Voting(bytes32[] candidateNames);totalVotesFor(bytes32 candidate);voteForCandidate(bytes32 candidate);validCandidate(bytes32 candidate)
nud3l/verifying-computation-solidity,contracts/Judge.sol,"resolveDispute(uint _input1, uint _input2, uint _result, uint _operation)"
dmx374/zeppelin-solidity,contracts/token/VestedToken.sol,"revokeTokenGrant(address _holder, uint256 _grantId);transferableTokens(address holder, uint64 time);tokenGrantsCount(address _holder);tokenGrant(address _holder, uint256 _grantId);vestedTokens(TokenGrant grant, uint64 time);nonVestedTokens(TokenGrant grant, uint64 time);lastTokenIsTransferableDate(address holder)"
DonorToken/DonorToken,test/helpers/ERC23TokenMock.sol,"tokenFallback(address _from, uint256 _value, bytes _data)"
robmyers/artworld-ethereum,dapps/lottery-symbol/contracts/LotterySymbol.sol,""
Fermion-Project/Light-Wallet,contracts/MultiSigWalletWithDailyLimit.sol,"MultiSigWalletWithDailyLimit(address[] _owners, uint _required, uint _dailyLimit);changeDailyLimit(uint _dailyLimit);executeTransaction(uint transactionId);isUnderLimit(uint amount);calcMaxWithdraw()"
Majoolr/ethereum-libraries,VestingLib/truffle/contracts/CrowdsaleToken.sol,"name();symbol();decimals();totalSupply();initialSupply();balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint256 value);transferFrom(address from, address to, uint value);approve(address spender, uint256 value);approveChange(address spender, uint256 valueChange, bool increase);changeOwner(address newOwner);burnToken(uint256 amount)"
JackBekket/Kort,Registrator.sol,owned();transferOwnership(address newOwner);setNotarius(address notarius);safeWithdrawal()
globaljobcoin/GJC,contracts/token/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
DCReum/dcreum.github.io,contracts/monolith/monolith-bitvectors-packed.sol,"getWorkflowCount();getWorkflowName(uint256 workflowId);getActivityCount(uint256 workflowId);getActivityName(uint256 workflowId, uint256 activityId);isIncluded(uint256 workflowId, uint256 activityId);isExecuted(uint256 workflowId, uint256 activityId);isPending(uint256 workflowId, uint256 activityId);getRelations(uint256 relations);getIncludes(uint256 workflowId, uint256 activityId);getExcludes(uint256 workflowId, uint256 activityId);getResponses(uint256 workflowId, uint256 activityId);getConditions(uint256 workflowId, uint256 activityId);getMilestones(uint256 workflowId, uint256 activityId);getAccountWhitelist(uint256 workflowId, uint256 activityId);isAuthDisabled(uint256 workflowId, uint256 activityId);canExecute(uint256 workflowId, uint256 activityId);execute(uint256 workflowId, uint256 activityId)"
zetherz/eth-match,test/helpers/DayLimitMock.sol,DayLimitMock(uint256 _value);attemptSpend(uint256 _value);setDailyLimit(uint256 _newLimit);resetSpentToday()
web3j/web3j,codegen/src/test/resources/solidity/complexstoragenew/ComplexStorageNew.sol,setFoo(Foo _toSet);setNaz(Naz _naz);setBar(Bar _toSet);setBaz(Baz _toSet);setBoz(Boz _toSet);setNuu(Nuu _toSet);getFoo();getFooBar();getFooUint()
dltdojo/courses,ethereum/solidity/T102_Storage.sol,set(uint x)
reiven/nerdearla17---solidity,contracts/nerdearla.sol,"safeSub(uint a, uint b);safeAdd(uint a, uint b);Nerdearla();totalSupply();transfer(address _to, uint _value);balanceOf(address _owner)"
marekkirejczyk/ethereum.rb,spec/fixtures/greeter.sol,mortal();kill();greeter(string _greeting);greet()
b-mueller/mythril,tests/testdata/input_contracts/underflow.sol,"sendeth(address _to, uint _value);balanceOf(address _owner)"
duaraghav8/soltar,examples/full-contract/full-contract-output.sol,""
ethermarket/democracy,src/base/permissionsProviderProperty.sol,senderIsProvider()
ryepdx/etherlab,lib/base/permissionsProviderProperty.sol,senderIsProvider()
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/token/ERC20/StandardToken.sol,"approve(address _spender, uint256 _value)"
SerCeMan/intellij-solidity,src/test/resources/fixtures/parser/functions.sol,""
boisde/Greed_Island,party/contracts/mocks/OracleAdapterMock.sol,"getPrice(address _assetOne, address _assetTwo)"
kierenh/vue-dark-chocolate,contracts/Owned.sol,Owned();remove();transferOwnership(address newOwner)
melonproject/protocol,contracts/fund/policies/utils/AddressListPolicyMixin.sol,"getList(address _policyManager);isInList(address _policyManager, address _item);__addToList(address[] memory _items);__removeFromList(address[] memory _items)"
A-StadLabs/poezenclub,app/contracts/PoesCoin.sol,"token(uint supply);sendCoin(address receiver, uint amount)"
papyrusglobal/smartcontracts,contracts/PapyrusRegistry.sol,"updateChannelParticipantRegistry(address contractAddress, string contractAbi);updateMemberRegistry(address contractAddress, string contractAbi);updateVerifierRegistry(address contractAddress, string contractAbi);updateDSPRegistry(address contractAddress, string contractAbi);updateSSPRegistry(address contractAddress, string contractAbi);updateAdvertiserRegistry(address contractAddress, string contractAbi);updatePublisherRegistry(address contractAddress, string contractAbi);updateToken(address contractAddress, string contractAbi);updateDAO(address contractAddress, string contractAbi);updateChannelManager(address contractAddress, string contractAbi);updateRtbSettlementAbi(string contractAbi)"
evoluchain/meetup-sc-testing,contracts/HelloWorld.sol,"HelloWorld();transfer(address _to, uint _value);balanceOf(address _owner)"
becodemonkey/solidity,contracts/token/MintToken.sol,"mint(address _to, uint256 _amount);finishMinting()"
willdavidc/prometh,truffle/contracts/prometheus.sol,createPrometh(address _contractAddress);sayHi();promethCount()
esdrasedu/carlin,contracts/Meetups.sol,join();leave();done();cancel();withdraw();kill()
GX-Coin/SmartContract,GxOwned.sol,GxOwned(address deploymentAdminsAddress);isOwner(address accountAddress);addOwner(address accountAddress);removeOwner(address accountAddress)
zchn/ethereum-analyzer,examples/analysis-benchmark/selfdestruct-over-suicide.sol,owned();kill()
raineorshine/solgraph,test/in/Send.sol,Foo()
montyly/manticore,tests/ethereum/contracts/714.sol,""
trailofbits/manticore,tests/ethereum/contracts/714.sol,""
eddieoz/workshop-1hackathon-BC-2016,contracts/pokecentral.sol,"owned();transferOwnership(address newOwner);updatePokeMarketAddress(address marketAddress);PokeCentral(address account1Demo, address account2Demo);newPokemon(uint pokemonNumber, uint cp, uint hp );updatePokemon(uint _pokemonID, uint _cp, uint _hp );newPokemonMaster(address pokemonMaster);transferPokemon(address _from, address _to, uint256 _pokemonID);addPokemonToMaster(address _pokemonOwner, uint256 _pokemonID);delPokemonFromMaster(address _pokemonOwner, uint256 _pokemonID);listPokemons( address _pokeOwner );qtdePokemons( address _pokeOwner);qtdePokemonsMapping( address _pokeOwner);cleanArray(uint[] pokeList)"
madhav1234/solidity-examples,transaction.sol,"send(address receiver, uint amount);send_to_darshil()"
Opus-foundation/contracts,contracts/OpusDemoToken.sol,"OpusToken(address _multisig);start();halt();unhalt();buy();buyRecipient(address recipient);burn(uint256 _value);proposeFoundationTransfer(address newFoundation);cancelFoundationTransfer();acceptFoundationTransfer();setMultisig(address addr);transfer(address _to, uint256 _value, bytes _data);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);returnRate();perAddressCap();requestToken()"
SilentCicero/wafr,src/tests/solidityTests/assertFalse/test.assertFalse.sol,test_oneValidAssertFalse();test_twoValidAssertFalse();test_threeValidAssertFalse();test_oneTrueFalse();test_oneInvalidAssertFalse();test_twoInvalidAssertFalse();test_threeInvalidAssertFalse()
pacifics/Dao,PassContractor.sol,"Client();Project();numberOfProposals();closeSetup();updateRecipient(address _newRecipient);withdraw(uint _amount);updateProjectDescription(string _projectDescription, bytes32 _hashOfTheDocument);PassContractorCreator(PassDao _passDao, PassProjectCreator _projectCreator);numberOfContractors()"
charles-cooper/raiden,raiden/smart_contracts/ChannelManagerLibrary.sol,"getChannelWith(Data storage self, address partner);deleteChannel(Data storage self, address partner);partyHash(address address_one, address address_two)"
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/examples/GoodFailEarly.sol,getSalary(string name)
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/examples/GoodFailEarly.sol,getSalary(string name)
pash7ka/zeppelin-solidity,contracts/payment/SplitPayment.sol,"SplitPayment(address[] _payees, uint256[] _shares);addPayee(address _payee, uint256 _shares);claim()"
iswarm/p2pCny,contracts/payment/SplitPayment.sol,"SplitPayment(address[] _payees, uint256[] _shares);addPayee(address _payee, uint256 _shares);claim()"
olegkorol/ethereum-contracts,contracts/Voting.sol,Voting(bytes32[] candidateNames);totalVotesFor(bytes32 candidate);voteForCandidate(bytes32 candidate);validCandidate(bytes32 candidate)
FedCoup/FedCoup,installed_contracts/zeppelin/contracts/token/BasicToken.sol,"transfer(address _to, uint _value);balanceOf(address _owner)"
EMAXio/cosigner,cosigner-ethereum-token-storage/SolidityContracts/V4/StorageToken.sol,"deposit(address to, uint256 value);internalTransfer();balanceOf(address owner);deleteContract(uint8[] sigV, bytes32[] sigR, bytes32[] sigS)"
Braveno/cosigner,cosigner-ethereum-token-storage/SolidityContracts/V4/StorageToken.sol,"deposit(address to, uint256 value);internalTransfer();balanceOf(address owner);deleteContract(uint8[] sigV, bytes32[] sigR, bytes32[] sigS)"
EMAXio/heimdal,cosigner-ethereum-token-storage/SolidityContracts/V4/StorageToken.sol,"deposit(address to, uint256 value);internalTransfer();balanceOf(address owner);deleteContract(uint8[] sigV, bytes32[] sigR, bytes32[] sigS)"
BlockTube/blocktube-client.0.3,app/contracts/blocktubeUser.sol,blocktubeUser();setProfileHash(string _hash);getProfileHash(address useraddress);kill()
QTBlockchain/SolidityNWeb3,patterns/contracts/ContractFactory.sol,"ChildContract(uint8 id, address own, bytes32 nm);isOwner(address addr);ContractFactory(uint8  numParts, uint8   price);purchase(bytes32 name);getInfo(uint8 childIndex);getChildContractAddress(uint8 childIndex);getOwnerName(uint8 childIndex);getChildrenCount()"
kierenh/vue-dark-chocolate,contracts/TradeRegister.sol,"TradeRegister();getTradesByAddress(address trader);createTrade(bytes32 referenceCode, uint issueDate, uint offerExpiry, address vendor, address counterparty);certifyTradeAsCounterparty(bytes32 referenceCode, address counterparty);getTradeByReferenceCode(bytes32 referenceCode);getTradeByIndex(uint index);getTradeCount()"
gnosis/gnosis-contracts,contracts/Oracles/CentralizedOracle.sol,replaceOwner(address newOwner);setOutcome(int _outcome);isOutcomeSet();getOutcome()
TrueBitFoundation/webasm-solidity,contracts/common.sol,"readPosition(uint hint);readFrom(uint hint);writePosition(uint hint);writeStuff(uint hint, uint v);handlePointer(uint hint, uint ptr);getImmed(bytes32 op);performFetch();performInit();getHint(uint n);performALU();performUpdatePC();performUpdateStackPtr();performUpdateCallPtr();performUpdateMemsize();performPhase()"
bokkypoobah/TokenTrader,testing/test_20170115_1619/TokenTraderFactory.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);approve(address _spender, uint _value);allowance(address _owner, address _spender);Owned();transferOwnership(address newOwner);makerDepositEther();makerWithdrawAsset(uint256 tokens);makerWithdrawEther(uint256 ethers);takerBuyAsset();takerSellAsset(uint256 etherValueOfTokensToSell);verify(address tradeContract);TokenTrader(trader)"
daostack/daostack,contracts/universalSchemes/UniversalScheme.sol,getParametersFromController(Avatar _avatar)
yoLUkAsss/DEscrutinio,contracts/User.sol,"User(bytes32 e, bytes32 pass, uint cat);getUser();loginVerify(bytes32 pass);login(bytes32 pass);logout();isAutoridadElectoral();isPresidenteDeMesa();isFiscal();destroy(address parent);setCategoryVerify(uint cat);setCategory(uint cat);setDistrito(uint id);setEscuela(uint id);setMesa(uint id)"
triage/KPCSEthereum,contracts/ParticipantAgent.sol,"ParticipantAgent(string _name, address _administrator);getType()"
gnosis/solidity-arithmetic,test/TestArithmetic.sol,doNotThrowOnValidDiv();doThrowOnDivByZero();testOverflowResistantFraction()
FiatCentralBank/fiatcoin,contracts/OpenBids.sol,getBidsLength();getBid(uint index);getBid(uint index);searchAddress(address addr);bid(uint _fiat);quickSortBids();calculateWinners();setAllowances();withdraw();auctionEnd()
adklempner/solidity-license,contracts/zeppelin/Bounty.sol,createTarget();deployContract();claim(Target target);checkInvariant()
adamdossa/ProfitSharingContract,installed_contracts/zeppelin/contracts/Bounty.sol,createTarget();deployContract();claim(Target target);checkInvariant()
shahankhatch/weifund-contracts,src/contracts/CurationRegistry.sol,"approve(address _service);curatorAddressOf(uint256 _curatorID);curatorIDOf(address _curator);serviceApprovedBy(address _curator, address _service);serviceAddressOf(address _curator, uint _approvalID);approve(address _service);curatorAddressOf(uint256 _curatorID);curatorIDOf(address _curator);serviceApprovedBy(address _curator, address _service);serviceAddressOf(address _curator, uint _approvalID)"
ethereum/remix,remix-tests/tests/examples_1/simple_storage.sol,set(uint x);get()
bcosorg/bcos,systemcontractv2/Authority.sol,"setUserGroup(address user, address group);getUserGroup(address user);enable();process(address origin, address from, address to, string func, string input);newGroup()"
CoMakery/comakery-ethereum,contracts/DynamicToken.sol,"balanceOf(address _owner);transfer(address _to, uint256 _amount);transferFrom(address _from, address _to, uint256 _amount);approve(address _spender, uint256 _amount);DynamicToken();getAccounts();balanceOf(address _owner);allowance(address _owner, address _spender);issue(address _to, uint256 _amount, string _proofId);setMaxSupply(uint256 _maxSupply);lockMaxSupply();transfer(address _to, uint256 _amount);approve(address _spender, uint256 _amount);transferFrom(address _from, address _to, uint256 _amount);burn(uint256 _amount);lockContractOwner();transferContractOwnership(address _newOwner);lockOpen();upgrade(address _upgradedContract);close();destroyContract();_transfer(address _from, address _to, uint256 _amount);_indexAccount(address _account);_indexProofId(string _proofId)"
darcius/rocketpool-crowdsale,contracts/RocketPoolToken.sol,"RocketPoolToken();validateContribution(uint256 _value);validateClaimTokens(address _sender);mint(address _to, uint _amount);getRemainingTokens();setSaleContractFinalised(address _sender);setSaleContractDepositAddressVerified(address _verifyAddress);getSaleContractIsFinalised(address _salesAgentAddress);getSaleContractTargetEtherMin(address _salesAgentAddress);getSaleContractTargetEtherMax(address _salesAgentAddress);getSaleContractDepositEtherMin(address _salesAgentAddress);getSaleContractDepositEtherMax(address _salesAgentAddress);getSaleContractDepositAddress(address _salesAgentAddress);getSaleContractDepositAddressVerified(address _salesAgentAddress);getSaleContractStartBlock(address _salesAgentAddress);getSaleContractEndBlock(address _salesAgentAddress);getSaleContractTokensLimit(address _salesAgentAddress);getSaleContractTokensMinted(address _salesAgentAddress)"
polybioz/github-bounty,oraclizeAPI.sol,"query(uint _timestamp, string _datasource, string _arg);query_withGasLimit(uint _timestamp, string _datasource, string _arg, uint _gaslimit);queryN(uint _timestamp, string _datasource, bytes _argN);queryN_withGasLimit(uint _timestamp, string _datasource, bytes _argN, uint _gaslimit);getPrice(string _datasource);getPrice(string _datasource, uint gaslimit);useCoupon(string _coupon);setProofType(byte _proofType);setConfig(bytes32 _config);setCustomGasPrice(uint _gasPrice);getAddress();oraclize_setNetwork(uint8 networkID);__callback(bytes32 myid, string result);__callback(bytes32 myid, string result, bytes proof);oraclize_getPrice(string datasource);oraclize_getPrice(string datasource, uint gaslimit);oraclize_query(string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2, uint gaslimit);oraclize_query(string datasource, string[] argN);oraclize_query(uint timestamp, string datasource, string[] argN);oraclize_query(uint timestamp, string datasource, string[] argN, uint gaslimit);oraclize_query(string datasource, string[] argN, uint gaslimit);oraclize_query(string datasource, string[1] args);oraclize_query(uint timestamp, string datasource, string[1] args);oraclize_query(uint timestamp, string datasource, string[1] args, uint gaslimit);oraclize_query(string datasource, string[1] args, uint gaslimit);oraclize_query(string datasource, string[2] args);oraclize_query(uint timestamp, string datasource, string[2] args);oraclize_query(uint timestamp, string datasource, string[2] args, uint gaslimit);oraclize_query(string datasource, string[2] args, uint gaslimit);oraclize_query(string datasource, string[3] args);oraclize_query(uint timestamp, string datasource, string[3] args);oraclize_query(uint timestamp, string datasource, string[3] args, uint gaslimit);oraclize_query(string datasource, string[3] args, uint gaslimit);oraclize_query(string datasource, string[4] args);oraclize_query(uint timestamp, string datasource, string[4] args);oraclize_query(uint timestamp, string datasource, string[4] args, uint gaslimit);oraclize_query(string datasource, string[4] args, uint gaslimit);oraclize_query(string datasource, string[5] args);oraclize_query(uint timestamp, string datasource, string[5] args);oraclize_query(uint timestamp, string datasource, string[5] args, uint gaslimit);oraclize_query(string datasource, string[5] args, uint gaslimit);oraclize_cbAddress();oraclize_setProof(byte proofP);oraclize_setCustomGasPrice(uint gasPrice);oraclize_setConfig(bytes32 config);getCodeSize(address _addr);parseAddr(string _a);strCompare(string _a, string _b);indexOf(string _haystack, string _needle);strConcat(string _a, string _b, string _c, string _d, string _e);strConcat(string _a, string _b, string _c, string _d);strConcat(string _a, string _b, string _c);strConcat(string _a, string _b);parseInt(string _a);parseInt(string _a, uint _b)"
faulteh/ethereum-talk-taslug-sept2015,code/election.sol,"mortal();kill();election(string _question, string s1, string s2, string s3);register();vote(uint selection);getQuestion();getSelection(uint selection);getResult(uint selection)"
lastisme/lastisme.github.io,contracts/lastisme.sol,"owned();transferOwnership(address newOwner);LastIsMe(uint _priceParam, uint _blocksParam);buyTicket(address _ref);finance();allData();baseData();elapsed();remaining();totalWinners();updateLeftLottery( address _newValue);updateRightLottery( address _newValue);setLotteryFee(uint _newValue);setHouseFee(uint _newValue)"
juchiyama/cmkt,contracts/vendor.sol,"Vendor(bytes _ipfsHash,uint _subscriptionMax)"
stevejaxon/ethereum-tutorials,contracts/ContractCallerProxy.sol,ContractCallerProxy(address _target);execute()
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/lifecycle/Destructible.sol,destroy();destroyAndSend(address _recipient)
montyly/manticore,tests/ethereum/contracts/735.sol,setme();sui()
trailofbits/manticore,tests/ethereum/contracts/735.sol,setme();sui()
CORIONplatform/solidity,premium.sol,"connectModule();replaceModule(address addr);premium(address moduleHandlerAddr, address dbAddress);approve(address spender, uint256 amount, uint256 nonce);approveAndCall(address spender, uint256 amount, uint256 nonce, bytes extraData);transfer(address to, uint256 amount);transferFrom(address from, address to, uint256 amount);transfer(address to, uint256 amount, bytes extraData);burn(uint256 value);transferToContract(address from, address to, uint256 amount, bytes extraData);_transfer(address from, address to, uint256 amount);_burn(address owner, uint256 value);_approve(address spender, uint256 amount, uint256 nonce);isContract(address addr);checkContract(address addr);balanceOf(address owner);allowance(address owner, address spender);totalSupply()"
DES-simeon/branche-contracts,routing_contract.sol,checkGoalReached();getBenificiary()
LykkeCity/EthereumApiDotNetCore,src/ContractBuilder/contracts/Erc223DepositContract.sol,"transferTokens(address _tokenAddress, address _to, uint256 _amount);tokenFallback(address _from, uint _value, bytes _data)"
RyuuGan/sol-merger,test/compiled/LocalImportsWithSPDX.sol,Ownable();transferOwnership(address newOwner);MyOwned()
linneacfritz/swob,swob/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
chrisdotn/jsmnSol,test/TestUnicode.sol,testUmlaut();testDiacritcs()
michinbear/solidity,test/compilationTests/corion/provider.sol,"connectModule();transferEvent(address from, address to, uint256 value);newSchellingRoundEvent(uint256 roundID, uint256 reward);provider(address _moduleHandler);configure(announcementType a, uint256 b);getUserDetails(address addr, uint256 schellingRound);rightForInterest(uint256 value, bool priv);setRightForInterest(uint256 oldValue, uint256 newValue, bool priv);checkCorrectRate(bool priv, uint8 rate);createProvider(bool priv, string name, string website, string country, string info, uint8 rate, bool isForRent, address admin);setProviderDetails(address addr, string website, string country, string info, uint8 rate, address admin);getProviderInfo(address addr, uint256 height);getProviderDetails(address addr, uint256 height);getProviderCurrentSupply(address addr);closeProvider();allowUsers(address provider, address[] addr);disallowUsers(address provider, address[] addr);joinProvider(address provider);partProvider();checkReward(address addr);getReward(address beneficiary, uint256 limit, address provider);getClientReward(uint256 limit);getProviderReward(address addr, uint256 limit);checkFloatingSupply(address providerAddress, uint256 providerHeight, bool neg, uint256 value);checkFloatingOwnSupply(address providerAddress, uint256 providerHeight, bool neg, uint256 value);TEMath(uint256 a, uint256 b, bool neg);transferEvent_(address addr, uint256 value, bool neg);getTokenBalance(address addr);checkICO()"
elementrem/solidity,test/compilationTests/corion/provider.sol,"connectModule();transferEvent(address from, address to, uint256 value);newSchellingRoundEvent(uint256 roundID, uint256 reward);provider(address _moduleHandler);configure(announcementType a, uint256 b);getUserDetails(address addr, uint256 schellingRound);rightForInterest(uint256 value, bool priv);setRightForInterest(uint256 oldValue, uint256 newValue, bool priv);checkCorrectRate(bool priv, uint8 rate);createProvider(bool priv, string name, string website, string country, string info, uint8 rate, bool isForRent, address admin);setProviderDetails(address addr, string website, string country, string info, uint8 rate, address admin);getProviderInfo(address addr, uint256 height);getProviderDetails(address addr, uint256 height);getProviderCurrentSupply(address addr);closeProvider();allowUsers(address provider, address[] addr);disallowUsers(address provider, address[] addr);joinProvider(address provider);partProvider();checkReward(address addr);getReward(address beneficiary, uint256 limit, address provider);getClientReward(uint256 limit);getProviderReward(address addr, uint256 limit);checkFloatingSupply(address providerAddress, uint256 providerHeight, bool neg, uint256 value);checkFloatingOwnSupply(address providerAddress, uint256 providerHeight, bool neg, uint256 value);TEMath(uint256 a, uint256 b, bool neg);transferEvent_(address addr, uint256 value, bool neg);getTokenBalance(address addr);checkICO()"
airalab/core,contracts/Migrations.sol,setCompleted(uint256 _completed);upgrade(address _new_address)
mothershipcx/contracts,contracts/interface/Burnable.sol,Burnable();changeBurner(address _newBurner)
mothershipcx/contracts,etherscan/Contribution.sol,"mul(uint a, uint b);div(uint a, uint b);sub(uint a, uint b);add(uint a, uint b);Controlled();changeController(address _newController);refund(address th, uint amount);proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);totalSupply();totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);Burnable();changeBurner(address _newBurner);totalSupplyAt(uint _blockNumber);generateTokens(address _owner, uint _amount);destroyTokens(address _owner, uint _amount);enableTransfers(bool _transfersEnabled);claimTokens(address _token);finalize();Contribution();proxyPayment(address _th);onTransfer(address, address, uint256);onApprove(address, address, uint256);doBuy(address _th);isContract(address _addr);refund();finalize();percent(uint256 p);tokensIssued();tokensForSale();getBlockNumber();claimTokens(address _token);pauseContribution();resumeContribution()"
Souptacular/motivate-dapp,contracts/motivate.sol,registerUser()
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.4.24/blockLevelCompare.sol,""
NathanLewis/surefair,Insurance - Copy.sol,"getClientData(address client);verifyClaim(uint64 quoteId);addOracle(address oracleAddress);getAcceptedOracles();insureClient(address _oracle, address _client, uint64 _oracleQuoteId);clientClaim(uint256 _client, uint64 _contractId);Syndicate();name();symbol();decimals();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);getStats()"
GX-Coin/SmartContract,GxOwnedIterable.sol,isOwner(address accountAddress);addOwner(address accountAddress);removeOwner(address accountAddress);iterateStart();iterateValid(uint keyIndex);iterateNext(uint keyIndex);iterateGet(uint keyIndex)
alantsv/gercom-ico,gercoin/contracts/GERCoinCrowdsale.sol,"GERCoinCrowdsale(uint256 _startBlock, uint256 _endBlock, uint256 _rate, address _wallet);createTokenContract()"
boisde/Greed_Island,party-hardhat/contracts/Counter.sol,getCount();countUp();countDown()
adridadou/eth-propeller-ethj,src/test/resources/contract.sol,myMethod(string value);getEnumValue();getT();getM();getOwner();getArray();getSet();throwMe();getInitTime(uint time);getAccountAddress(address addr)
bas-vk/go-ethereum,contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
uthercoin/go-uther,release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
shahankhatch/go-ethereum,contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
TOMOAKI12345/go-ethereum,release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
jaakmusic/go-ethereum,release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
etherapis/etherapis,vendor/github.com/ethereum/go-ethereum/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
maran/go-ethereum,contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
karalabe/go-ethereum,contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
SaferLuo/EtherIOT,release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
permaledger/go-perma,release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
mikeyb/go-ethereum,release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
Pegascoin/go-Pegascoin,release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
shiftcurrency/go-ethereum,release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
kejace/go-ethereum,contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
gophergala2016/etherapis,vendor/github.com/ethereum/go-ethereum/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
kobigurk/tmsp-ethereum,vendor/github.com/ethereum/go-ethereum/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
dltdojo/courses,ethereum/solidity/T132_MyWalletInternalTx.sol,transfer(address to)
zeroqn/aa-apply,contracts/PayrollDB.sol,"getAllowedContractsCount();setAllowedContract(address[] _contracts);addAllowedContracts(address[] _contracts);validContracts(address[] _contracts);getUIntValue(bytes32 key);setUIntValue(bytes32 key, uint value);delUIntValue(bytes32 key);addUIntValue(bytes32 key, uint value);subUIntValue(bytes32 key, uint value);mulUIntValue(bytes32 key, uint value);divUIntValue(bytes32 key, uint value);getAddressValue(bytes32 key);setAddressValue(bytes32 key, address value);delAddressValue(bytes32 key);getBooleanValue(bytes32 record);setBooleanValue(bytes32 record, bool value);deleteBooleanValue(bytes32 record)"
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/inheritance/contracts/LeafB.sol,""
pipermerriam/ethereum-alarm-clock,contracts/Library/RequestLib.sol,"serialize(Request storage self);execute(Request storage self);getEXECUTION_GAS_OVERHEAD();requiredExecutionGas(Request storage self);isCancellable(Request storage self);cancel(Request storage self);isClaimable(Request storage self);claim(Request storage self);refundClaimDeposit(Request storage self);sendFee(Request storage self);sendBounty(Request storage self);canSendOwnerEther(Request storage self);sendOwnerEther(Request storage self, address recipient);sendOwnerEther(Request storage self);_sendOwnerEther(Request storage self, address recipient)"
iam-dev/ERC23,installed_contracts/zeppelin-solidity/contracts/token/CappedToken.sol,"CappedToken(uint256 _cap);mint(address _to, uint256 _amount)"
b-mueller/mythril,tests/testdata/input_contracts/overflow.sol,"sendeth(address _to, uint _value);balanceOf(address _owner)"
Yann-Liang/browser-solidity,contracts/src/gmbh/company.sol,add(uint8 _numProposals)
serapath-contribution/browser-solidity,contracts/src/gmbh/company.sol,add(uint8 _numProposals)
aragon/aragon-core,contracts/test/mocks/LifecycleMock.sol,initializeMock();petrifyMock()
Dicoiner/irianna-solidity,contracts/ReentrancyGuard.sol,""
tomaaron/raiden,raiden/smart_contracts/Registry.sol,addAsset(address asset_address);channelManagerByAsset(address asset_address);assetAddresses();channelManagerAddresses()
saulbein/web3j,core/src/test/resources/solidity/fibonacci/Fibonacci.sol,fibonacci(uint number);fibonacciNotify(uint number)
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/test/helpers/BasicTokenMock.sol,"BasicTokenMock(address initialAccount, uint256 initialBalance)"
pash7ka/zeppelin-solidity,test/helpers/BasicTokenMock.sol,"BasicTokenMock(address initialAccount, uint256 initialBalance)"
Dicoiner/irianna-solidity,test/helpers/BasicTokenMock.sol,"BasicTokenMock(address initialAccount, uint256 initialBalance)"
pz7/liquet,node_modules/zeppelin-solidity/test/helpers/BasicTokenMock.sol,"BasicTokenMock(address initialAccount, uint256 initialBalance)"
dmx374/zeppelin-solidity,test/helpers/BasicTokenMock.sol,"BasicTokenMock(address initialAccount, uint256 initialBalance)"
cashpokerpro-dev/cash-smartcontracts,test/helpers/BasicTokenMock.sol,"BasicTokenMock(address initialAccount, uint256 initialBalance)"
aragon/aragon-network-token,packages/v2/contracts/ANTv2Migrator.sol,"initiate();migrate(uint256 _amount);migrateAll();receiveApproval(address _from, uint256 _amount, address _token, bytes calldata /*_data*/);_migrate(address _from, uint256 _amount)"
orbro/eth-enablers,randomNum.sol,"randomGen(uint seed);multiBlockRandomGen(uint seed, uint size)"
cniemann/etherpricebet,contracts/Mortal.sol,Mortal();kill()
ProjectEntropy/contracts,contracts/tokens/Token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
prashantpawar/truffle-octo-robot,contracts/stateMachine.sol,nextStage()
jaakmusic/go-ethereum,swarm/services/ens/contract/ens.sol,"Set(bytes32 host, bytes32 content)"
benkico/pre-ico,BenkiICO.sol,"totalSupply();balanceOf(address owner);transfer(address to, uint256 value);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);allowance(address owner, address spender);issueTokens(address _for, uint tokenCount);changeEmissionContractAddress(address newAddress);fund();fundBTC(address beneficiary, uint _tokenCount);finishCrowdsale();changeBaseTokenPrice(uint valueInWei);startICO();BenkiICO(address _multisig)"
ageyev/Solidity.Examples,ProofOfExistence.sol,ProofOfExistence()
Lunyr/crowdsale-contracts,contracts/LunyrToken.sol,"upgradeFrom(address _from, uint256 _value);LUNVault(address _lunyrMultisig);unlock();balanceOf(address who);transfer(address to, uint256 value);transferFrom(address from, address to, uint value);approve(address spender, uint256 value);allowance(address owner, address spender);upgrade(uint256 value);setUpgradeAgent(address agent);setUpgradeMaster(address master);setMultiSigWallet(address newWallet);create();finalizeCrowdfunding();refund();getState()"
uzyn/ERC20-TST,ERC20.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/test-helpers/StandardTokenMock.sol,"StandardTokenMock(address initialAccount, uint initialBalance)"
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/test-helpers/StandardTokenMock.sol,"StandardTokenMock(address initialAccount, uint initialBalance)"
montyly/manticore,tests/ethereum/contracts/detectors/retval_not_ok.sol,call();callchecked()
trailofbits/manticore,tests/ethereum/contracts/detectors/retval_not_ok.sol,call();callchecked()
trailofbits/greenhorn,csaw-2017/ETHERSNOOB/sources/ethersnoob4.sol,"set(uint data, uint data2, uint data3);get_flag();get()"
WingsDao/contracts,contracts/MultiSigWallet/MultiSigWalletWithDailyLimit.sol,"MultiSigWalletWithDailyLimit(address[] _owners, uint _required, uint _dailyLimit);changeDailyLimit(uint _dailyLimit);executeTransaction(uint transactionId);isUnderLimit(uint amount);calcMaxWithdraw()"
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/build/Assert.sol,"addMod(uint a, uint b, uint modulus);testAdd();testAdd();fail(string memory message);equal(string memory a, string memory b, string memory message);notEqual(string memory a, string memory b, string memory message);isEmpty(string memory str, string memory message);isNotEmpty(string memory str, string memory message);equal(bytes32 a, bytes32 b, string memory message);notEqual(bytes32 a, bytes32 b, string memory message);isZero(bytes32 bts, string memory message);isNotZero(bytes32 bts, string memory message);equal(address a, address b, string memory message);notEqual(address a, address b, string memory message);isZero(address addr, string memory message);isNotZero(address addr, string memory message);isTrue(bool b, string memory message);isFalse(bool b, string memory message);equal(bool a, bool b, string memory message);notEqual(bool a, bool b, string memory message);equal(uint a, uint b, string memory message);notEqual(uint a, uint b, string memory message);isAbove(uint a, uint b, string memory message);isAtLeast(uint a, uint b, string memory message);isBelow(uint a, uint b, string memory message);isAtMost(uint a, uint b, string memory message);isZero(uint number, string memory message);isNotZero(uint number, string memory message);equal(int a, int b, string memory message);notEqual(int a, int b, string memory message);isAbove(int a, int b, string memory message);isAtLeast(int a, int b, string memory message);isBelow(int a, int b, string memory message);isAtMost(int a, int b, string memory message);isZero(int number, string memory message);isNotZero(int number, string memory message);equal(uint[] memory arrA, uint[] memory arrB, string memory message);notEqual(uint[] memory arrA, uint[] memory arrB, string memory message);lengthEqual(uint[] memory arr, uint length, string memory message);lengthNotEqual(uint[] memory arr, uint length, string memory message);equal(int[] memory arrA, int[] memory arrB, string memory message);notEqual(int[] memory arrA, int[] memory arrB, string memory message);lengthEqual(int[] memory arr, uint length, string memory message);lengthNotEqual(int[] memory arr, uint length, string memory message);equal(address[] memory arrA, address[] memory arrB, string memory message);notEqual(address[] memory arrA, address[] memory arrB, string memory message);lengthEqual(address[] memory arr, uint length, string memory message);lengthNotEqual(address[] memory arr, uint length, string memory message);equal(address payable[] memory arrA, address payable[] memory arrB, string memory message);notEqual(address payable[] memory arrA, address payable[] memory arrB, string memory message);lengthEqual(address payable[] memory arr, uint length, string memory message);lengthNotEqual(address payable[] memory arr, uint length, string memory message);equal(bytes32[] memory arrA, bytes32[] memory arrB, string memory message);notEqual(bytes32[] memory arrA, bytes32[] memory arrB, string memory message);lengthEqual(bytes32[] memory arr, uint length, string memory message);lengthNotEqual(bytes32[] memory arr, uint length, string memory message);balanceEqual(address a, uint b, string memory message);balanceNotEqual(address a, uint b, string memory message);balanceIsZero(address a, string memory message);balanceIsNotZero(address a, string memory message)"
status-im/status-network-token,contracts/DevTokensHolder.sol,"DevTokensHolder(address _owner, address _contribution, address _snt);collectTokens();months(uint256 m);getTime();claimTokens(address _token)"
ledgerlabs/toy-state-channels,contracts/UnanimousConsent.sol,"UnanimousConsent(address[] _participants);addAction(address _target, bytes4 _methodSignature, bytes32[] _calldata);eval(bytes32[] _actionHashes);consent(bytes32[] _hashes);changeParticipants(address[] _participants);cleanActions(bytes32[] _actionHashes);cleanConsents(bytes32[] _hashes, address[] _participants);kill(address _recipient)"
cgewecke/solcover,test/sources/if/else-with-brackets.sol,a(uint x)
JoinColony/solcover,test/sources/if/else-with-brackets.sol,a(uint x)
adklempner/solidity-license,contracts/zeppelin/token/TokenOption.sol,"TokenOption(ERC20Basic _token, uint _rate);buy()"
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/token/TokenOption.sol,"TokenOption(ERC20Basic _token, uint _rate);buy()"
adamdossa/ProfitSharingContract,installed_contracts/zeppelin/contracts/token/TokenOption.sol,"TokenOption(ERC20Basic _token, uint _rate);buy()"
scmo/apayment-backend,smart-contracts/dp_math.sol,"add(uint256 x, uint256 y);sub(uint256 x, uint256 y);mul(uint256 x, uint256 y);div(uint256 x, uint256 y);min(uint256 x, uint256 y);max(uint256 x, uint256 y);hadd(uint128 x, uint128 y);hsub(uint128 x, uint128 y);hmul(uint128 x, uint128 y);hdiv(uint128 x, uint128 y);hmin(uint128 x, uint128 y);hmax(uint128 x, uint128 y);imin(int256 x, int256 y);imax(int256 x, int256 y);wadd(uint128 x, uint128 y);wsub(uint128 x, uint128 y);wmul(uint128 x, uint128 y);wdiv(uint128 x, uint128 y);wmin(uint128 x, uint128 y);wmax(uint128 x, uint128 y);radd(uint128 x, uint128 y);rsub(uint128 x, uint128 y);rmul(uint128 x, uint128 y);rdiv(uint128 x, uint128 y);rpow(uint128 x, uint64 n);rmin(uint128 x, uint128 y);rmax(uint128 x, uint128 y);cast(uint256 x)"
status-im/status-network-token,contracts/SNT.sol,SNT(address _tokenFactory)
aragon/aragon-core,contracts/evmscript/executors/CallsScript.sol,"execScript(bytes _script, bytes, address[] _blacklist);executorType()"
careerxon/code,StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
maxxflyer/FLOOD,ADV.sol,"ADV();addAdv(address a,string s);getAdv(address a);verifyOwnership(address a);removeAdv(address a);censorAndCover(address a,uint u,string default);getCensored(address a,uint u)"
boisde/Greed_Island,party/contracts-crued/protocol/SetToken.sol,"addComponent(address _component);removeComponent(address _component);editDefaultPositionUnit(address _component, int256 _realUnit);addExternalPositionModule(address _component, address _positionModule);editPositionMultiplier(int256 _newMultiplier);mint(address _account, uint256 _quantity);burn(address _account, uint256 _quantity);lock();unlock();addModule(address _module);removeModule(address _module);removePendingModule(address _module);initializeModule();setManager(address _manager);getComponents();getDefaultPositionRealUnit(address _component);getExternalPositionRealUnit(address _component, address _positionModule);getExternalPositionModules(address _component);getExternalPositionData(address _component,address _positionModule);getModules();isComponent(address _component);isExternalPositionModule(address _component, address _module);isInitializedModule(address _module);isPendingModule(address _module);getPositions();getTotalComponentRealUnits(address _component);_defaultPositionVirtualUnit(address _component);_externalPositionModules(address _component);_externalPositionVirtualUnit(address _component, address _module);_externalPositionData(address _component, address _module);_convertRealToVirtualUnit(int256 _realUnit);_convertVirtualToRealUnit(int256 _virtualUnit);_getPositionCount();_validateOnlyModule();_validateOnlyManager();_validateWhenLockedOnlyLocker()"
orbro/eth-enablers,solidity-baby-steps-master/contracts/35_coin_flipper.sol,CoinFlipper();getEndowmentBalance();sha(uint128 wager);betAndFlip();getLastBlockNumberUsed();getLastBlockHashUsed();getResultOfLastFlip();getPlayerGainLossOnLastFlip();kill()
LykkeCity/EthereumApiDotNetCore,src/ContractBuilder/contracts/coinContract.sol,"ColorCoin(address exchangeContractAddress, address externalTokenAddress);cashin(address receiver, uint amount);cashout(address from, address to, uint amount)"
daostack/daostack,contracts/schemes/FixedReputationAllocation.sol,"initialize(Avatar _avatar, uint256 _reputationReward, uint256 _redeemEnableTime);redeem(address _beneficiary);addBeneficiary(address _beneficiary);addBeneficiaries(address[] memory _beneficiaries);enable()"
dxzdanny2407/Ethereum-Voting-DApp,contracts/Voting.sol,Voting(bytes32[] candidateNames);totalVotesFor(bytes32 candidate);voteForCandidate(bytes32 candidate);validCandidate(bytes32 candidate)
stanta/darfchain,ICO/contracts/MintableToken.sol,"mint(address receiver, uint amount);setMintAgent(address addr, bool state)"
woshidama323/hello-github,back/OraclizeI.sol,"query(uint _timestamp, string _datasource, string _arg);query_withGasLimit(uint _timestamp, string _datasource, string _arg, uint _gaslimit);queryN(uint _timestamp, string _datasource, bytes _argN);queryN_withGasLimit(uint _timestamp, string _datasource, bytes _argN, uint _gaslimit);getPrice(string _datasource);getPrice(string _datasource, uint gaslimit);setProofType(byte _proofType);setCustomGasPrice(uint _gasPrice);randomDS_getSessionPubKeyHash()"
jo-tud/FamilyResourceContract,contracts/FamilyResourceContract.sol,"FamilyResourceControl(uint _contractStart, uint _renewalPeriod, uint _requiredMarbles, uint _requiredExtraMarbles, uint[] _allowedDays);cumReqMarbles();currentDay();awardMarble(uint whatMarble, address goodChild);canUseResource(address goodChild);useNeonMarbles(address goodChild);addParent(address furtherParent);removeParent(address realParent);marbleBalance(address goodChild);remove()"
silasdavis/eris-db,tests/jobs_fixtures/app41-filename-too-long/test.sol,""
silasdavis/burrow,tests/jobs_fixtures/app41-filename-too-long/test.sol,""
Project-WikiGit/WikiGit,dev/contracts/member_handler.sol,"MemberHandler(string _creatorUserName, address _mainAddr);setSelfAsContributor(string userName);setSelfAsPureShareholder(string _userName);removeMemberWithAddress(address _addr);alterBannedStatus(address _addr, bool _newStatus);incMemberGoodRep(address _addr, uint _amount);incMemberBadRep(address _addr, uint _amount);changeMemberGroup(uint _id, string _newGroupName);changeSelfName(string _newName);changeSelfAddress(address _newAddress);getMemberAtAddress(address _addr);getGroupRight(string _groupName, string _right);memberHasRight(address _addr, string _right);memberGroupNameHash(address _addr);getMemberListCount()"
QTBlockchain/SolidityNWeb3,SmartContracts/HelloTruffle/contracts/SampleContractOther.sol,SampleContractOther()
montyly/manticore,tests/ethereum/contracts/detectors/etherleak_true_neg2.sol,fakeconstructor();withdrawfunds()
trailofbits/manticore,tests/ethereum/contracts/detectors/etherleak_true_neg2.sol,fakeconstructor();withdrawfunds()
kpnDataScienceLab/labday2017-ethereum,manual-chain-interaction/ethsimple/test.sol,multiply(uint a);getCallCount()
ProBonoPublicoWorld/ico-contracts,test/utils/MultiBonusCrowdsaleMock.sol,MultiBonusCrowdsaleMock()
michinbear/solidity,test/compilationTests/zeppelin/token/LimitedTransferToken.sol,"transferableTokens(address holder, uint64 time);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);transferableTokens(address holder, uint64 time)"
elementrem/solidity,test/compilationTests/zeppelin/token/LimitedTransferToken.sol,"transferableTokens(address holder, uint64 time);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);transferableTokens(address holder, uint64 time)"
LykkeCity/EthereumApiDotNetCore,src/ContractBuilder/contracts/token/nonEmissiveToken.sol,""
pipermerriam/populus,tests/fixtures/RemapImported.sol,RemapImported();RemapImportedNotUsed()
RyuuGan/sol-merger,test/compiled/MultiImports.sol,"totalSupply();balanceOf(address _who);transfer(address _to, uint256 _value);mul(uint256 _a, uint256 _b);div(uint256 _a, uint256 _b);sub(uint256 _a, uint256 _b);add(uint256 _a, uint256 _b);totalSupply();transfer(address _to, uint256 _value);balanceOf(address _owner);allowance(address _owner, address _spender);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);approve(address _spender, uint256 _value);MyToken()"
dmx374/zeppelin-solidity,contracts/token/LimitedTransferToken.sol,"transferableTokens(address holder, uint64 time);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);transferableTokens(address holder, uint64 time)"
boisde/Greed_Island,party/contracts/protocol/modules/UniswapYieldStrategy.sol,"engage();disengage();reap();rebalance();rebalanceSome(uint256 _sellTokenQuantity);unstakeAndRedeem(uint256 _setTokenQuantity);removeModule();_engage();_rebalance(uint256 _sellTokenQuantity);_approveAndAddLiquidity(uint256 _assetOneQuantity, uint256 _assetTwoQuantity);_approveAndRemoveLiquidity(uint256 _liquidityQuantity);_approveAndStake(uint256 _lpTokenQuantity);_unstake(uint256 _lpTokenQuantity);_handleReward();_calculateEngageQuantities();_calculateDisengageLPQuantity();_getDesiredSingleAssetReserve();_getLPReserveExchangeRate();_getTotalLPReserves();_updatePositions();_getReservesSafe()"
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.4.24/forLoopIteratesOverDynamicArray.sol,shiftArrItem(uint index)
blockchain-IoT/blockchain-IoT-core,contracts/MachineToken.sol,MachineToken()
iswarm/p2pCny,BothSigners.sol,""
dob/auctionhouse,contracts/AuctionHouse.sol,"AuctionHouse();partyOwnsAsset(address _party, address _contract, string _recordId);getAuction(uint idx);getAuctionCount();getStatus(uint idx);getAuctionsCountForUser(address addr);getAuctionIdForUserAndIdx(address addr, uint idx);getActiveContractRecordConcat(string _contractRecordConcat);activateAuction(uint auctionId);cancelAuction(uint auctionId);getBidCountForAuction(uint auctionId);getBidForAuctionByIdx(uint auctionId, uint idx);placeBid(uint auctionId);getRefundValue();withdrawRefund();endAuction(uint auctionId);strConcat(string _a, string _b);addrToString(address x)"
vsimetka/MVP,CampaignToken.sol,CampaignToken();seal();sealed()
iam-dev/ERC23,installed_contracts/zeppelin-solidity/contracts/ownership/Claimable.sol,transferOwnership(address newOwner);claimOwnership()
LykkeCity/EthereumApiDotNetCore,src/ContractBuilder/contracts/token/Erc223/nonEmissiveToken.sol,""
kowala-tech/kUSD,client/contracts/bindings/oracle/testfiles/contracts/ConsensusMock.sol,ConsensusMock(bool _superNode);isSuperNode(address identity)
kowala-tech/kUSD,client/contracts/truffle/contracts/test/ConsensusMock.sol,ConsensusMock(bool _superNode);isSuperNode(address identity)
ManyCoin/ManyCoin,contracts/chequebook/contract/chequebook.sol,"cash(address beneficiary, uint256 amount, uint8 sig_v, bytes32 sig_r, bytes32 sig_s)"
BattleDrome/token_and_ico,FAMEToken.sol,FAMEToken();burn(uint _value)
lastisme/lastisme.github.io,contracts/token.sol,"receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);del(uint _idx);totalOwners();transfer(address _to, uint256 _value)"
NoteGio/openrelay,js/contracts/exchange.sol,"Exchange(address _zrxToken, address _tokenTransferProxy);getOrderHash(address[5] orderAddresses, uint[6] orderValues);isRoundingError(uint numerator, uint denominator, uint target);getPartialAmount(uint numerator, uint denominator, uint target);getUnavailableTakerTokenAmount(bytes32 orderHash)"
topliceanu/learn,solidity/Faucet.sol,destroy();withdraw(uint withdraw_amount)
melonproject/protocol,contracts/integrations/interfaces/IZeroExV3.sol,"cancelled(bytes32);cancelOrder(Order calldata);filled(bytes32);getAssetProxy(bytes4);getOrderInfo(Order calldata);isValidOrderSignature(Order calldata, bytes calldata);preSign(bytes32);protocolFeeCollector();protocolFeeMultiplier();setProtocolFeeMultiplier(uint256 _feeMultiplier)"
bokkypoobah/TokenTrader,testing/test_20170125_0829/TokenTraderFactory.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);approve(address _spender, uint _value);allowance(address _owner, address _spender);Owned();transferOwnership(address newOwner);makerDepositEther();makerWithdrawAsset(uint256 tokens);makerWithdrawEther(uint256 ethers);takerBuyAsset();takerSellAsset(uint256 etherValueOfTokensToSell);verify(address tradeContract);TokenTrader(trader)"
erooijak/ethlance,resources/public/contracts/src/ethlanceUser2.sol,""
iurimatias/embark-framework,dapps/tests/app/some_folder/test_contract.sol,SimpleStorage(uint initialValue);set(uint x);get()
zeroqn/aa-apply,contracts/oraclizeAPI.lib.sol,"query(uint _timestamp, string _datasource, string _arg);query_withGasLimit(uint _timestamp, string _datasource, string _arg, uint _gaslimit);queryN(uint _timestamp, string _datasource, bytes _argN);queryN_withGasLimit(uint _timestamp, string _datasource, bytes _argN, uint _gaslimit);getPrice(string _datasource);getPrice(string _datasource, uint gaslimit);setProofType(byte _proofType);setConfig(bytes32 _config);setCustomGasPrice(uint _gasPrice);getAddress();proofType_NONE();proofType_TLSNotary();proofStorage_IPFS();getOAR();getCON();oraclize_setNetwork();oraclize_getPrice(string datasource);oraclize_getPrice(string datasource, uint gaslimit);oraclize_query(string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg);oraclize_query(string datasource, string arg, uint gaslimit);oraclize_query(uint timestamp, string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2);oraclize_query(string datasource, string arg1, string arg2, uint gaslimit);oraclize_query(uint timestamp, string datasource, string arg1, string arg2, uint gaslimit);oraclize_query(string datasource, string[] argN);oraclize_query(uint timestamp, string datasource, string[] argN);oraclize_query(string datasource, string[] argN, uint gaslimit);oraclize_query(uint timestamp, string datasource, string[] argN, uint gaslimit);oraclize_cbAddress();oraclize_setProof(byte proofP);oraclize_setCustomGasPrice(uint gasPrice);oraclize_setConfig(bytes32 config);getCodeSize(address _addr);parseAddr(string _a);strCompare(string _a, string _b);indexOf(string _haystack, string _needle);strConcat(string _a, string _b, string _c, string _d, string _e);strConcat(string _a, string _b, string _c, string _d);strConcat(string _a, string _b, string _c);strConcat(string _a, string _b);parseInt(string _a);parseInt(string _a, uint _b)"
PeculiumPCL/Peculium,contracts/v0.1/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
aletheia-foundation/aletheia-app,contracts/Accessible.sol,grantAccess(address newAccount);removeAccess(address removeAccount)
rfikki/demo-solidity,demo.sol,"mortal();kill();User(string _name);registerToProvider(address _providerAddress);setDebt(uint256 _debt);payToProvider(address _providerAddress);unsubscribe(address _providerAddress);setDebt(uint256 _debt, address _userAddress)"
gleim/DAO,PFOffer.sol,getTotalCosts();getOneTimeCosts();getMinDailyWithdrawLimit();getDailyWithdrawLimit();getContractor();getHashOfTheProposalDocument();getLastPayment();getDateOfSignature();getClient();getOriginalClient();getIsContractValid();getOneTimeCostsPaid();getWasApprovedBeforeDeadline();getProposalID();sign();setDailyWithdrawLimit(uint128 _dailyWithdrawLimit);returnRemainingEther();getDailyPayment();getOneTimePayment();watchProposal(uint _proposalID);checkVoteStatus();updateClientAddress(DAO _newClient)
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/token/StandardToken.sol,"transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);balanceOf(address _owner);approve(address _spender, uint _value);allowance(address _owner, address _spender)"
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/token/StandardToken.sol,"transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);balanceOf(address _owner);approve(address _spender, uint _value);allowance(address _owner, address _spender)"
FedCoup/FedCoup,installed_contracts/zeppelin/contracts/lifecycle/Destructible.sol,destroy()
aragon/aragon-core,contracts/lib/ens/ENS.sol,"ENS();owner(bytes32 node);resolver(bytes32 node);ttl(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);setTTL(bytes32 node, uint64 ttl)"
EthTrader/dappening,contracts/Controlled.sol,Controlled();changeController(address _newController)
pipermerriam/ethereum-datetime,contracts/DateTime.sol,"isLeapYear(uint16 year);leapYearsBefore(uint year);getDaysInMonth(uint8 month, uint16 year);parseTimestamp(uint timestamp);getYear(uint timestamp);getMonth(uint timestamp);getDay(uint timestamp);getHour(uint timestamp);getMinute(uint timestamp);getSecond(uint timestamp);getWeekday(uint timestamp);toTimestamp(uint16 year, uint8 month, uint8 day);toTimestamp(uint16 year, uint8 month, uint8 day, uint8 hour);toTimestamp(uint16 year, uint8 month, uint8 day, uint8 hour, uint8 minute);toTimestamp(uint16 year, uint8 month, uint8 day, uint8 hour, uint8 minute, uint8 second)"
elementrem/solidity,test/compilationTests/zeppelin/crowdsale/Crowdsale.sol,"Crowdsale(uint256 _startBlock, uint256 _endBlock, uint256 _rate, address _wallet);createTokenContract();buyTokens(address beneficiary);forwardFunds();validPurchase();hasEnded()"
aragon/aragon-core,contracts/factory/ENSFactory.sol,newENS(address _owner)
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/monorepo/errorproject/contracts/Importer.sol,""
prashantpawar/truffle-octo-robot,contracts/BrehonContract.sol,"acceptContract();deposit();startContract();raiseDispute();adjudicate(uint _awardPartyA, uint _awardPartyB);claimFunds();raiseAppeal();proposeSettlement(uint _awardPartyA, uint _awardPartyB);acceptSettlement()"
Dicoiner/irianna-solidity,contracts/lifecycle/Destructible.sol,Destructible();destroy();destroyAndSend(address _recipient)
silasdavis/burrow,docs/example/basic-app/simplestorage.sol,"set(uint value);get();testAndSet(uint expected, uint newValue)"
eris-ltd/eris-db,docs/example/basic-app/simplestorage.sol,"set(uint value);get();testAndSet(uint expected, uint newValue)"
livepeer/protocol,contracts/token/ILivepeerToken.sol,"mint(address _to, uint256 _amount);burn(uint256 _amount)"
orbro/eth-enablers,solidity-baby-steps-master/contracts/47_string_passer.sol,"getDescription();StringPasser(uint8[] incmap);getTileDescription(uint8 x, uint8 y);kill()"
input-output-hk/etc-client,src/evmTest/resources/solidity/Caller.sol,"setFoo(uint v);getFoo();makeACall(address calleeAddr, uint fooVal)"
melonproject/protocol,contracts/fund/fees/ManagementFee.sol,"addFundSettings(bytes calldata _encodedSettings);identifier();settle(bytes calldata);__calcSettlementSharesDue(address _feeManager, uint256 _sharesQuantity)"
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app24-multiple_inheritance_and_intermingling_contracts/one.sol,i()
eris-ltd/eris,tests/jobs_fixtures/app24-multiple_inheritance_and_intermingling_contracts/one.sol,i()
monax/monax,tests/jobs_fixtures/app24-multiple_inheritance_and_intermingling_contracts/one.sol,i()
eris-ltd/eris-cli,tests/jobs_fixtures/app24-multiple_inheritance_and_intermingling_contracts/one.sol,i()
monax/cli,tests/jobs_fixtures/app24-multiple_inheritance_and_intermingling_contracts/one.sol,i()
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app24-multiple_inheritance_and_intermingling_contracts/one.sol,i()
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/contracts/ownership/CanReclaimToken.sol,reclaimToken(ERC20Basic token)
pash7ka/zeppelin-solidity,contracts/ownership/CanReclaimToken.sol,reclaimToken(ERC20Basic token)
iswarm/p2pCny,contracts/ownership/CanReclaimToken.sol,reclaimToken(ERC20Basic token)
readevalprint/aragon-core,contracts/zeppelin/ownership/CanReclaimToken.sol,reclaimToken(ERC20Basic token)
pz7/liquet,node_modules/zeppelin-solidity/contracts/ownership/CanReclaimToken.sol,reclaimToken(ERC20Basic token)
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/ownership/CanReclaimToken.sol,reclaimToken(ERC20Basic token)
cashpokerpro-dev/cash-smartcontracts,contracts/ownership/CanReclaimToken.sol,reclaimToken(ERC20Basic token)
cinderblockchain/cindertoken,contracts/ownership/CanReclaimToken.sol,reclaimToken(ERC20Basic token)
district0x/name-bazaar,resources/public/contracts/src/AuctionOffering.sol,bid();withdraw(address payable _address);finalize();reclaimOwnership();hasNoBids();pendingReturns(address bidder)
daostack/daostack,contracts/test/UniversalSchemeMock.sol,"genericCall(Avatar _avatar, address _contract, uint256 _a, address _b, bytes32 _c, uint256 _value);genericCallDirect(Avatar _avatar, address _contract, uint256 _a, address _b, bytes32 _c, uint256 _value)"
sonm-io/token,contracts/TokenManager.sol,"TokenManager(address[] _owners, uint _required);tokenWithdrawEther(address _token);tokenSetCrowdsaleManager(address _token, address _mgr)"
asseth/dao1901,archive_hackaton_blockfest/truffle/contracts/Ballot.sol,"Ballot(uint8 _numProposals);giveRightToVote(address voter);delegate(address to);vote(uint8 proposal, bool choice);winningProposal(uint proposal);getNumberVote(uint proposal)"
SerCeMan/intellij-solidity,src/test/resources/fixtures/parser/callChain.sol,b()
WeTrustPlatform/rosca-contracts,contracts/test/ExampleToken.sol,"ExampleToken(address[] accounts);injectTokens(address to, uint256 howMuch);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
AustP/autocomplete-solidity,spec/files/ballot.sol,Ballot(uint8 _numProposals);giveRightToVote(address voter);delegate(address to);vote(uint8 proposal);winningProposal()
Spreadway/core,eth/smartcollection-master/EasyCrowdsale.sol,"owned();changeOwner(address _owner);Crowdsale();EasyToken();transfer(address _to, uint256 _value);EasyCrowdsale();withdraw();killMe()"
dltdojo/courses,ethereum/truffle/mytoken/contracts/MyToken.sol,MyToken()
bokkypoobah/TokenTrader,testing/test_20170205_1849/TestERC20Token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _amount);approve(address _spender, uint256 _amount);allowance(address _owner, address _spender);withdrawEthers(uint256 ethers)"
bokkypoobah/TokenTrader,testing/test_20170125_0829/TestERC20Token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _amount);approve(address _spender, uint256 _amount);allowance(address _owner, address _spender);withdrawEthers(uint256 ethers)"
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/token/ERC721/ERC721Token.sol,"name();symbol();tokenURI(uint256 _tokenId);totalSupply();tokenByIndex(uint256 _index);_setTokenURI(uint256 _tokenId, string _uri);addTokenTo(address _to, uint256 _tokenId);removeTokenFrom(address _from, uint256 _tokenId);_mint(address _to, uint256 _tokenId);_burn(address _owner, uint256 _tokenId)"
AragonOne/zeppelin-solidity,contracts/lifecycle/Stoppable.sol,emergencyStop();release()
TrueBitFoundation/webasm-solidity,contracts/resubmit.sol,"solved(uint id, bytes32[] files);rejected(uint id);getRoot(bytes32 id);getNameHash(bytes32 id);getInteractive();defaultParameters(uint id);add(bytes32 init, CodeType ct, Storage cs, string stor);addWithParameters(bytes32 init, CodeType ct, Storage cs, string stor, uint8 stack, uint8 mem, uint8 globals, uint8 table, uint8 call);resubmit(uint old_id);requireFile(uint id, bytes32 hash, Storage st);getUploadNames(uint id);getUploadTypes(uint id);taskInfo(uint unq);getVMParameters(uint id);nextTask();getSolver(uint id);solveIO(uint id, bytes32 code, bytes32 size, bytes32 name, bytes32 data);solutionInfo(uint unq);getCodeType(uint id);getCodeStorage(uint id);challenge(uint id);queryChallenge(bytes32 uniq);getChallenges(uint id);uploadFile(uint id, uint num, bytes32 file_id, bytes32[] name_proof, bytes32[] data_proof, uint file_num);finalizeTask(uint id);claimDeposit(bytes32 cid);claimSolverDeposit(bytes32 cid);tick()"
Souptacular/constructblockchainscavengerhunt,scavenger_hunt/ConstructHuntStart.sol,ConstructHuntStart();getContractInfo()
KPull/eth-membership-tokens,contracts/Application.sol,submitApplication(address _applicant);withdrawApplication(address _applicant);hasOpenApplication(address _applicant)
silasdavis/eris-db,tests/jobs_fixtures/expected-failure-revert/revert.sol,""
silasdavis/burrow,tests/jobs_fixtures/expected-failure-revert/revert.sol,""
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.5/modifier1.sol,b(address a)
redsquirrel/augur-core,src/libraries/token/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
adridadou/eth-propeller-ethj,src/test/resources/c1.sol,""
zetherz/eth-match,test/helpers/StandardTokenMock.sol,"StandardTokenMock(address initialAccount, uint256 initialBalance)"
tokenai/tokenai-network-token,contracts/Ownable.sol,Ownable();changeOwner(address _newOwner);acceptOwnership()
chrisdotn/jsmnSol,test/TestReturnValues.sol,testNotEnoughMemory();testUnescapedQuoteInString();testEscapedQuoteInString();testNumberOfElements()
PeculiumPCL/Peculium,contracts/v0.1/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
robmyers/artworld-ethereum,old/src/univalent-aesthetic.sol,""
qjflores/mealbot,contracts/MealBot.sol,"addUser(bytes32 _firstName, bytes32 _lastName, uint _balance);getUsers()"
Capillar/capillar-solidity,contracts/external/ERC20.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
ethereum/remix,remix-debug/test/sol/ballot.sol,Ballot(uint8 _numProposals);giveRightToVote(address toVoter);delegate(address to);vote(uint8 toProposal);winningProposal()
mdmshf/Komhar,ballot.sol,Ballot(uint8 _numProposals);giveRightToVote(address toVoter);delegate(address to);vote(uint8 toProposal);winningProposal()
adklempner/solidity-license,contracts/zeppelin/crowdsale/RefundableCrowdsale.sol,RefundableCrowdsale(uint256 _goal);forwardFunds();claimRefund();finalization();goalReached()
adamdossa/ProfitSharingContract,installed_contracts/zeppelin/contracts/crowdsale/RefundableCrowdsale.sol,RefundableCrowdsale(uint256 _goal);forwardFunds();claimRefund();finalization();goalReached()
adklempner/solidity-license,contracts/zeppelin/token/LimitedTransferToken.sol,"transferableTokens(address holder, uint64 time);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);transferableTokens(address holder, uint64 time)"
adamdossa/ProfitSharingContract,installed_contracts/zeppelin/contracts/token/LimitedTransferToken.sol,"transferableTokens(address holder, uint64 time);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);transferableTokens(address holder, uint64 time)"
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/inheritance/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
dmx374/zeppelin-solidity,contracts/crowdsale/FinalizableCrowdsale.sol,finalize();finalization()
AlphaDinoRC/rockchain,contracts/ROKToken.sol,"ROKToken();transfer(address _to, uint256 _value);balanceOf(address _owner);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);unlockTransfer(address _spender, uint256 _value);allowance(address _owner, address _spender);burn(uint256 _value)"
web3j/web3j,codegen/src/test/resources/solidity/arrays/Arrays.sol,fixedReverse(uint[10] input);dynamicReverse(uint[] input);multiDynamic(uint[2][] input);multiFixed(uint[2][6] input);returnArray()
silasdavis/eris-db,tests/jobs_fixtures/app26-factories_single_constructor_and_overwriting_testing/GSFactory.sol,create(uint initialValue);getLast()
silasdavis/burrow,tests/jobs_fixtures/app26-factories_single_constructor_and_overwriting_testing/GSFactory.sol,create(uint initialValue);getLast()
eris-ltd/eris-db,tests/jobs_fixtures/app26-factories_single_constructor_and_overwriting_testing/GSFactory.sol,create(uint initialValue);getLast()
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app24-multiple_inheritance_and_intermingling_contracts/two.sol,ii()
eris-ltd/eris,tests/jobs_fixtures/app24-multiple_inheritance_and_intermingling_contracts/two.sol,ii()
monax/monax,tests/jobs_fixtures/app24-multiple_inheritance_and_intermingling_contracts/two.sol,ii()
eris-ltd/eris-cli,tests/jobs_fixtures/app24-multiple_inheritance_and_intermingling_contracts/two.sol,ii()
monax/cli,tests/jobs_fixtures/app24-multiple_inheritance_and_intermingling_contracts/two.sol,ii()
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app24-multiple_inheritance_and_intermingling_contracts/two.sol,ii()
toshikase/swap-trade,app/client/templates/views/call_option.sol,""
YusukeMukoyama/boiler-trade-dapp,app/client/templates/views/call_option.sol,""
cgewecke/solcover,test/sources/function/multiple.sol,""
JoinColony/solcover,test/sources/function/multiple.sol,""
etienneburdet/dataTriTus,dataTritus.sol,"owned();transferOwnership(address newOwner);kill();addWasteType(string wasteName);addContractor(address _addr, uint _type);addBin(tokenDechet _tokenAddr, uint _id);binScan(uint _binid, address _scannerAddr);mintToken(address target, uint256 mintedAmount);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value)"
ConsenSys/dapp-store-contracts,contracts/UserModel.sol,"UserModel(SimpleIndex _address_index);create(uint[101][] attributes);validate(address sender, uint id, uint[101][] attributes);id_for_address(address _address);replace(address replacement)"
D-Nice/solidity-helper-functions,helpers/reclaim.sol,"Reclaimer(bytes32 _reclaimHash);reclaimOwnership(string _input, string _salt, bytes32 _newHash)"
BeBlockTech/Anemoi,BeBlock-Master/WePowerPresaleContractAudit-master/contracts/PreSale.sol,"PreSale(address _wct);proxyPayment(address _th);onTransfer(address, address, uint256);onApprove(address, address, uint256);doBuy(address _th);isContract(address _addr);finalize();tokensForSale();getBlockNumber();claimTokens(address _token);pauseContribution(bool _paused);allowTransfers(bool _transferable)"
BeBlockTech/Anemoi,BeBlock-Master/WePowerPresaleContractAudit-master/audit/test/PreSale.sol,"PreSale(address _wct);proxyPayment(address _th);onTransfer(address, address, uint256);onApprove(address, address, uint256);doBuy(address _th);isContract(address _addr);finalize();tokensForSale();getBlockNumber();claimTokens(address _token);pauseContribution(bool _paused);allowTransfers(bool _transferable)"
b-mueller/mythril,solidity_examples/BECToken.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);balanceOf(address who);transfer(address to, uint256 value);transfer(address _to, uint256 _value);balanceOf(address _owner);allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);transferOwnership(address newOwner);pause();unpause();transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);batchTransfer(address[] memory _receivers, uint256 _value)"
NathanLewis/surefair,contracts/Insurance.sol,"getQuote(address client, uint64 quoteId);verifyClaim(uint64 quoteId);CropOracle(address creator);getOracleDetails();getUserQuoteIds(address _client);getQuote(address _client, uint64 _quoteId);createQuote(uint256 gpsLat, uint256 gpsLong, bytes32 _ipfsHash );verifyClaim(uint64 _quoteId);MacBookOracle();getOracleDetails();getUserQuoteIds(address _client);getQuote(address _client, uint64 _quoteId);createQuote(uint256 _macbookYear, bytes32 _serial_number, bytes32 _ipfsHash);verifyClaim(uint64 _quoteId);Syndicate(uint256 maxFund);isContract(address addr);getInsuranceContracts();addOracle(address oracleAddress);getOracles();getInsuranceIDsByClient(address _client);getInsuranceDataByID(uint64 insuranceID);insureClient(address _oracle, uint64 _oracleQuoteId);clientClaim(address _client, uint64 _contractId);redeemFromEscrow(uint64 _contractId);dividendsOwing(address account);paymentsOwed(address account);updateAccount(address account);disburse(uint256 amount);drawDown(uint256 amount);getEscrowBalance();name();symbol();decimals();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);getStats();SFEscrow();getBalance();deposit(uint256 amount);redeem(uint256 amount);payout(address payee, uint256 amount)"
AnnaIsAWang/LedgerLabsCoops2016,Identity/Identity.sol,"Identity();register(string username);changeOwner(string username, address addr);getCurrentOwner(string username);kill()"
RealEstateAssetLedger/real_contract,contracts/mocks/TeamTokensHolderMock.sol,"TeamTokensHolderMock(address _owner, address _crowdsale, address _real);getTime();setMockedDate(uint256 date)"
EMAXio/cosigner,cosigner-ethereum-token-storage/SolidityContracts/Old/TokenAdminContract.sol,"calculateTxHash();calculateHash(address[] hashTransactions, uint[] hashValues);calculateAdminTxHash();confirmTransactionSig();confirmTransaction();confirmAdminTx(uint nonce);ownerIndexBit(address addr);isOwner(address addr);getNonce();getSecurityValue();getOwners();balanceOf(address _owner);totalSupply();TokenAdminContract(address _admin, address[] _owners, uint _required, uint _securityValue);deleteContract(uint nonce, address newAdminContract, uint8[] sigV, bytes32[] sigR, bytes32[] sigS);deposit(address _from, address _to, uint256 _value)"
Braveno/cosigner,cosigner-ethereum-token-storage/SolidityContracts/Old/TokenAdminContract.sol,"calculateTxHash();calculateHash(address[] hashTransactions, uint[] hashValues);calculateAdminTxHash();confirmTransactionSig();confirmTransaction();confirmAdminTx(uint nonce);ownerIndexBit(address addr);isOwner(address addr);getNonce();getSecurityValue();getOwners();balanceOf(address _owner);totalSupply();TokenAdminContract(address _admin, address[] _owners, uint _required, uint _securityValue);deleteContract(uint nonce, address newAdminContract, uint8[] sigV, bytes32[] sigR, bytes32[] sigS);deposit(address _from, address _to, uint256 _value)"
EMAXio/heimdal,cosigner-ethereum-token-storage/SolidityContracts/Old/TokenAdminContract.sol,"calculateTxHash();calculateHash(address[] hashTransactions, uint[] hashValues);calculateAdminTxHash();confirmTransactionSig();confirmTransaction();confirmAdminTx(uint nonce);ownerIndexBit(address addr);isOwner(address addr);getNonce();getSecurityValue();getOwners();balanceOf(address _owner);totalSupply();TokenAdminContract(address _admin, address[] _owners, uint _required, uint _securityValue);deleteContract(uint nonce, address newAdminContract, uint8[] sigV, bytes32[] sigR, bytes32[] sigS);deposit(address _from, address _to, uint256 _value)"
tarrencev/GameScoreDAO,CreateGame.sol,"Games(uint minVoters_, uint minConfirmTime_);proposeGame(string homeParticipant, string awayParticipant, uint gameStartTime, bytes transactionBytecode);vote(uint proposalId, bool inSupport);executeGameProposal(uint proposalId, bytes transactionBytecode)"
raineorshine/solgraph,test/in/View.sol,Foo()
isvirin/neurodao,CRUB/CryptoRUB.sol,"owned();changeOwner(address _owner);confirmOwner();Token();transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);approve(address _spender, uint _value);allowance(address _owner, address _spender);burn(uint _value);CryptoRUB();addOfficer(address _officer);removeOfficer(address _officer);emit(uint _value);transferFund(address _to, uint _value)"
Spreadway/core,eth/neurodao-master/CRUB/CryptoRUB.sol,"owned();changeOwner(address _owner);confirmOwner();Token();transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);approve(address _spender, uint _value);allowance(address _owner, address _spender);burn(uint _value);CryptoRUB();addOfficer(address _officer);removeOfficer(address _officer);emit(uint _value);transferFund(address _to, uint _value)"
silasdavis/eris-db,tests/dump/undeclared.sol,setFoobar(int n);getFoobar();foo()
Fermion-Project/Light-Wallet,contracts/MultiSigWalletFactory.sol,"create(address[] _owners, uint _required)"
Fermion-Project/Light-Wallet,source_gnosis/contracts/MultiSigWalletFactory.sol,"create(address[] _owners, uint _required)"
tomashaber/raiden,raiden/smart_contracts/EndpointRegistry.sol,"registerEndpoint(string socket);findEndpointByAddress(address eth_address);findAddressByEndpoint(string socket);equals(string a, string b)"
jeje/solidity-code-quality,core/src/test/antlr/PayableContract.sol,PayableContract();getCash()
gnidan/interval-trees-solidity,test/intervals/TestListLib.sol,""
adridadou/eth-propeller-core,src/test/resources/ContractDefinitions.sol,"getOwner();kill();getWarrantyPrice(/*string productId,*/ uint startDate, uint endDate, uint productPrice);isInsurance(address insurance);createInsurance(string memory name, address priceCalculator);setInsuranceState(address insuranceAddress, InsuranceStatus status);getInsurance(uint index);getInsuranceByAddress(address insuranceAddress);getInsuranceStatus(address insuranceAddress);getWarrantyPrice(address insuranceAddress, uint startDate, uint endDate, uint productPrice);getInsuranceBalance(address insuranceAddress);increaseSalesBalance(address insurance, uint amount);decreaseSalesBalance(address insurance, uint amount);increasePaymentsBalance(address insurance, uint amount);decreasePaymentsBalance(address insurance, uint amount);increaseClaimsBalance(address insurance, uint amount);decreaseClaimsBalance(address insurance, uint amount);setSubContractAddresses(address _insuranceManager);isInsurance(address insurance);requestRegistration(string memory companyName, address insurance);getInsurance(address retailer, uint idx);getRequestState(address retailer, address insurance);setRequestState(address retailer, RetailerStatus status);getRetailerStatus(address retailer, address insurance);getRetailerStatus(address retailer);getRetailer(uint index, address insuranceAddress);getRetailerByAddress(address retailerAddress, address insuranceAddress);getRetailerBalances(address retailer, address insurance);getRetailerTotalBalances(address retailerAddress);increaseSalesBalance(address retailer, address insurance, uint price);decreaseSalesBalance(address retailer, address insurance, uint price);increasePaymentsBalance(address retailer, address insurance, uint amount);decreasePaymentsBalance(address retailer, address insurance, uint amount);increaseClaimsBalance(address retailer, address insurance, uint amount);decreaseClaimsBalance(address retailer, address insurance, uint amount);setSubContractAddresses(address _insuranceManager, address _retailerManager);isInsurance(address insurance);isRegisteredRetailer(address insurance, address retailer);getRole(address user);getWarrantyQuote(/*string productId, */address insurance, uint startDate, uint endDate, uint productPrice);createWarranty(string memory productId, string memory serialNumber, address insurance, uint startDate, uint endDate, uint productPrice);confirmWarranty(string memory productId, string memory serialNumber, string memory policyNumber);cancelWarranty(string memory productId, string memory serialNumber, address insuranceAddress);getWarranty(string memory productId, string memory serialNumber, address insurance);getWarrantyByIndex(uint idx);isWarrantyValid(address insurance, string memory productId, string memory serialNumber);createClaim(string memory productId, string memory serialNumber, address insurance, uint amount, string memory description);getClaim(string memory productId, string memory serialNumber, address insurance, uint idx)"
pipermerriam/pyethereum,ethereum/tests/contracts/seven_contract.sol,test()
shahankhatch/pyethereum,ethereum/tests/contracts/seven_contract.sol,test()
karlfloersch/pyethereum,ethereum/tests/contracts/seven_contract.sol,test()
nirenzang/Serpent-Pyethereum-Tutorial,pyethereum/ethereum/tests/contracts/seven_contract.sol,test()
melonproject/protocol,contracts/fund/policies/risk-management/AdapterWhitelist.sol,addFundSettings(bytes calldata _encodedSettings);identifier();validateRule(bytes calldata _encodedArgs)
DroneEmployee/contracts,src/AirTrafficController.sol,setRoutePrice(uint _price);placeToken();pay(address _drone);release(address _drone)
elementrem/solidity,test/compilationTests/zeppelin/lifecycle/TokenDestructible.sol,TokenDestructible();destroy(address[] tokens)
lzxm160/test-dapp,contracts/testsol.sol,Ballot(bytes32[] proposalNames);testmsg();testdata();testvalue();testGasPrice();testgas();testtxorigin();giveRightToVote(address voter);delegate(address to);vote(uint proposalIndex);winningProposal();winnerName()
melonproject/protocol,contracts/fund/policies/risk-management/AdapterBlacklist.sol,addFundSettings(bytes calldata _encodedSettings);identifier();validateRule(bytes calldata _encodedArgs)
dltdojo/courses,ethereum/solidity/T250_Ballot.sol,"vote(Ballot ballot, uint8 proposal);Ballot(uint8 _numProposals);giveRightToVote(address voter);delegate(address to);vote(uint8 proposal);winningProposal()"
mothershipcx/contracts,contracts/ReferalsTokenHolder.sol,"ReferalsTokenHolder(address _msp);spread(address[] _addresses, uint256[] _amounts);claimTokens(address _token)"
eminogrande/token-contract,src/contracts/prefilled-token.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value)"
lifechange-io/christ-coin,contracts/Zeppelin/Ownable.sol,Ownable();transferOwnership(address newOwner)
mhhf/dapple,test/_fixtures/testenv/golden_package/.dapple/packages/pkg/contracts/example.sol,""
nexusdev/dapple,test/_fixtures/testenv/golden_package/.dapple/packages/pkg/contracts/example.sol,""
crown42/crown42.github.io,SimpleStorage.sol,set(uint x);get()
patrizz/FinancialRegistryService,src/main/solidity/SimpleContract-storage.sol,set(uint x);get()
tokenai/tokenai-network-token,contracts/LimitedTransferToken.sol,"transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);transferableTokens(address holder, uint64 time)"
ethermarket/ethertdd.js,contracts/example.sol,"example();setName(bytes32 name, address newAddress);setOwner(address newOwner);setFee(uint32 newFee);isOwner();withdraw(uint32 amount)"
SilentCicero/wafr,src/tests/solidityTests/gasUsage/examples/DecayingQuorumRules.sol,""
batlinal/ftt,contracts/ServiceTask.sol,ServiceTask(string _name);settle();refund()
thunder-network/thunder-network.github.io,contracts/Channel.sol,"validateMessage(string m, bytes32 h, uint8 v, bytes32 r, bytes32 s);getBlanace()"
Morgan-iv/Main-source-folder,Solidity/difficult/4check.sol,"UnilotBonusTailEther(address calculatorContractAddress);importPlayers(address game, address[] players);getPlayerDetails(address player);getPrizeAmount();calcaultePrizes();getWinners();finish();revoke()"
aletheia-foundation/aletheia-app,contracts/MinimalManuscript.sol,"MinimalManuscript();init(bytes32 _da, string _title);isOwner(address account);authorSigned(address _author);dataAddress();title();authors();addAuthor(address newAuthor);citePaper(address citee);removeCitation(address citee);removeAuthor(address author);signAuthorship();citationCount();authorCount();author(uint authorIdx);citation(uint paperIdx);removeItemByIndex(address[] storage someList, uint i);findItem(address[] someList, address item)"
akscanb/smrtprpty,contracts/token.sol,"owned();transferOwnership(address newOwner);receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);transfer(address _to, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);transferFrom(address _from, address _to, uint256 _value);withDraw();pay()"
mit-dci/Smart-Property,contracts/token.sol,"owned();transferOwnership(address newOwner);receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);transfer(address _to, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);transferFrom(address _from, address _to, uint256 _value);withDraw();pay()"
cgewecke/solcover,test/sources/zeppelin/DayLimit.sol,DayLimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today()
JoinColony/solcover,test/sources/zeppelin/DayLimit.sol,DayLimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today()
WeiLend/WeiLend,WeiCoin.sol,"onNewLoan(uint lid, address addr);onContribute(uint lid, address addr, uint amount);onRefund(uint lid, address addr, uint amount);onPayout(uint lid, uint amount);onpayInstallment(uint lid, address addr, uint installment);sendCoinFrom(address _from, uint _val, address _to);sendCoin(uint _val, address _to);coinBalance();coinBalanceOf(address _a);approve(address _a);isApproved(address _proxy);isApprovedFor(address _target, address _proxy);WeiCoin(address _weilendAddress, uint _initAmount, uint _blockReward, uint _weiRatio);sendCoinFrom(address _from, uint _val, address _to);sendCoin(uint _val, address _to);onNewLoan(uint _lid, address _addr);onContribute(uint _lid, address _addr, uint _amount);onRefund(uint _lid, address _addr, uint _amount);onpayInstallment(uint _lid, address _addr, uint _installment);coinBalance();coinBalanceOf(address _a);approve(address _a);isApproved(address _proxy);isApprovedFor(address _target, address _proxy)"
etherex/pyepm,test/fixtures/wallet.sol,"multiowned();revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);reorganizeOwners();clearPending();daylimit();setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today();changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);Wallet(bytes32 identifier);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);clearPending()"
GovernX/governx-contracts,src/contracts/LiquidDemocracyController.sol,"minimumQuorum();canPropose(address _sender, uint256 _proposalID);canVote(address _sender, uint256 _proposalID);canExecute(address _sender, uint256 _proposalID);voteTime(uint256 _proposalID);votingWeightOf(address _sender, uint256 _proposalID, uint256 _index, uint256 _data);hasWon(address _sender, uint256 _proposalID);delegate(address _to, uint256 _proposalID)"
aletheia-foundation/aletheia-app,contracts/CommunityVotes.sol,"CommunityVotes(uint _votingDuration);createVoting(bytes32 ipfsHash);votingActive(bytes32 ipfsHash);vote(bytes32 ipfsHash, address _voter, bool _vote);getVote(bytes32 ipfsHash, address _voter);getVoting(bytes32 ipfsHash)"
natzei/constant-deposit-lottery,lottery/solidity/Lottery.sol,"Lottery(uint8 _L, uint _deposit);register(bytes32[] secrets);timeoutRegistration();getMatch();getMatchIdx();getMatchData();goForward();getSecretAtLevel(uint level);lotteryWinner();refund();allRefunded();getNumberOfParticipantsPerLevel();revealX(uint number, uint salt);revealY(uint number, uint salt);timeoutX();timeoutY();timeoutXEnabled();timeoutYEnabled();setWinner();winner()"
daostack/daostack,contracts/test/ExternalTokenLockerMock.sol,"lock(uint256 _amount, address _beneficiary);balanceOf(address _beneficiary)"
mixbytes/storiqa_ico,contracts/STQPreICOBase.sol,"STQPreICOBase(address token);createMorePaymentChannels(uint limit);amIOwner();iaOnInvested(address investor, uint payment, bool usingPaymentChannel);calculateTokens(address /*investor*/, uint payment, uint extraBonuses);getLargePaymentBonus(uint payment);mustApplyTimeCheck(address investor, uint /*payment*/);getPreICOBonus()"
Storiqa/ico_smart_contract,contracts/STQPreICOBase.sol,"STQPreICOBase(address token);createMorePaymentChannels(uint limit);amIOwner();iaOnInvested(address investor, uint payment, bool usingPaymentChannel);calculateTokens(address /*investor*/, uint payment, uint extraBonuses);getLargePaymentBonus(uint payment);mustApplyTimeCheck(address investor, uint /*payment*/);getPreICOBonus()"
GX-Coin/SmartContract,GxAdmins.sol,iterateStart();iterateValid(uint keyIndex);iterateGet(uint keyIndex);GxAdmins(address deploymentAdminsAddress);upgrade(GxAdminsPrevious gxAdminsToUpgrade);isAdmin(address accountAddress);add(address newAddress);remove(address removedAddress)
paulyc/sol_machine,contracts/constants.sol,""
OpenSTFoundation/SimpleTokenSale,contracts/Pausable.sol,pause();unpause()
robmyers/artworld-ethereum,old/src/art-is/contracts/ArtIs.sol,""
Yann-Liang/browser-solidity,contracts/app/ethereum/constitution.sol,Found(uint8 _numProposals)
serapath-contribution/browser-solidity,contracts/app/ethereum/constitution.sol,Found(uint8 _numProposals)
duaraghav8/Solium,test/lib/rules/quotes/double-full.sol,""
mothershipcx/contracts,etherscan/MultiSigWallet.sol,"MultiSigWallet(address[] _owners, uint _required);addOwner(address owner);removeOwner(address owner);replaceOwner(address owner, address newOwner);changeRequirement(uint _required);submitTransaction(address destination, uint value, bytes data);confirmTransaction(uint transactionId);revokeConfirmation(uint transactionId);executeTransaction(uint transactionId);isConfirmed(uint transactionId);addTransaction(address destination, uint value, bytes data);getConfirmationCount(uint transactionId);getTransactionCount(bool pending, bool executed);getOwners();getConfirmations(uint transactionId);getTransactionIds(uint from, uint to, bool pending, bool executed)"
zeroqn/aa-apply,contracts/PaymentServLibrary.sol,"calculatePayrollBurnrate(Payment storage self);calculatePayrollRunwayInMonths(Payment storage self);calculatePayrollRunway(Payment storage self);getEmployeeTokens(Payment storage self, uint256 employeeId);getEmployeeTokensAlloc(Payment storage self, uint256 employeeId);setDB(Payment storage self, address _db);setEscapeHatch(Payment storage self, address _hatch);escapeHatch(Payment storage self);emergencyWithdraw(Payment storage self, address to);updateExchangeRates(Payment storage self)"
Xorek/SmartContract,UserList.sol,UserList();CreateUser(string user_id);GetUserConAddr(string user_id)
alice-si/contracts,contracts/alice/OwnableWithRecovery.sol,transferOwnership(address _newOwner)
b-mueller/mythril,solidity_examples/WalletLibrary.sol,"revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);setDailyLimit(uint _newLimit);execute(address _to, uint _value, bytes calldata _data);confirm(bytes32 _h);initMultiowned(address[] memory _owners, uint _required);revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);getOwner(uint ownerIndex);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);initDaylimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();initWallet(address[] memory _owners, uint _required, uint _daylimit);kill(address payable _to);execute(address _to, uint _value, bytes calldata _data);create(uint _value, bytes memory _code);confirm(bytes32 _h);confirmAndCheck(bytes32 _operation);reorganizeOwners();underLimit(uint _value);today();clearPending()"
sonm-io/core,blockchain/source/contracts/AddressHashMap.sol,"write(bytes32 _key, address _value);read(bytes32 _key)"
stevejaxon/ethereum-tutorials,contracts/channels/signeth/Coupon.sol,"balanceOf(address _account);totalStaked(address _getTogether);stakedAmount(address _getTogether, address _account);deposit();withdraw(uint _amount);registerForGetTogether(address _getTogether);redeemStake(address _getTogether, address _to, uint256 _value, uint8 _v, bytes32 _r, bytes32 _s)"
PeculiumPCL/Peculium,contracts/v0.4/Peculium.sol,"Peculium();buyTokenPreIco(address toAddress, uint256 _vamounts);buyTokenIco(address toAddress, uint256 _vamounts);buyTokenPostIco(address toAddress, uint256 _vamounts);airdropsTokens(address[] _vaddr, uint256[] _vamounts);payBounty();approveAndCall(address _spender, uint256 _value, bytes _extraData);teamPayment(address teamaddr);getBlockTimestamp();stopBatchAssign();balanceOf(address _owner);getOwnerInfos();killContract()"
MzansiRe/iMali,contracts/RefundVault.sol,RefundVault(address _wallet);deposit(address investor);close();enableRefunds();refund(address investor)
mit-dci/Smart-Property,contracts/smartProperty.sol,"receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);transfer(address _to, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);transferFrom(address _from, address _to, uint256 _value);withDraw();dilute(uint256 shares);creditDividends(uint256 value);pay()"
livepeer/protocol,contracts/rounds/RoundsManager.sol,RoundsManager(address _controller);setRoundLength(uint256 _roundLength);setRoundLockAmount(uint256 _roundLockAmount);initializeRound();blockNum();blockHash(uint256 _block);currentRound();currentRoundStartBlock();currentRoundInitialized();currentRoundLocked();bondingManager();minter()
rootprojectco/backend,contracts/reservation/IMintableToken.sol,"mint(address _to, uint256 _amount);finishMinting()"
marvinfy/ConsentDirectives,contracts/PatientFactory.sol,PatientFactory();MakePatient();DeletePatient();GetPatient()
BiathlonHelsinki/BiathlonContract,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
pipermerriam/ethereum-alarm-clock,contracts/Library/PaymentLib.sol,"hasFeeRecipient(PaymentData storage self);getFee(PaymentData storage self);getBounty(PaymentData storage self);getBountyWithModifier(PaymentData storage self, uint8 _paymentModifier);sendFee(PaymentData storage self);sendBounty(PaymentData storage self);validateEndowment(uint _endowment, uint _bounty, uint _fee, uint _callGas, uint _callValue, uint _gasPrice, uint _gasOverhead)"
splix/toporick,contracts/BasicSign.sol,"SimpleSign();createDocument(uint256 nonce);removeDocument(uint256 docId);addSignature(uint256 docId, bytes16 _type, bytes _sign);getDocumentDetails(uint256 docId);getSignsCount(uint256 docId);getSignDetails(uint256 docId, uint8 signId);getSignData(uint256 docId, uint8 signId);generateId(uint256 nonce)"
creditbit-dev/credit2.0,contracts/CreditFUND.sol,"lockBalance(uint _amount, uint _lockForBlocks);claimBondReward();balanceOf(address _owner);lockedBalanceOf(address _owner);transfer(address _to, uint256 _value);CreditDAOfund(address _creditDao);withdrawReward(address _destination);lockTokens(uint _multiplier);claimBondReward();setCreditDaoAddress(address _creditDaoAddress);setCreditBitContract(address _creditBitAddress);setCreditBondContract(address _creditBondAddress);setDao(address _newDaoAddress);getCreditBitAddress();getCreditBondAddress();getCurrentBalance()"
gnosis/solidity-arithmetic,test/ThrowProxy.sol,ThrowProxy(address _target);execute()
WeiLend/WeiLend,WeiLend.sol,"onNewLoan(uint lid, address addr, uint goal);onContribute(uint lid, address addr, uint amount);onRefund(uint lid, address addr, uint amount);onPayout(uint lid, uint amount);onpayInstallment(uint lid, address addr, uint balance);newLoan(bytes32 _operationName, bytes32 _website, bytes32 _video, address _beneficiary, uint _goal, uint _timelimit_m, uint _category, uint _interest_rate, uint _grace_period_m, uint _tenor_a, address _config);contribute(uint _lid, address _addr);refund(uint _lid);payout(uint _lid);payInstallment(uint _lid);userLoans(address _addr, uint _u_lid)"
duaraghav8/Solium,test/lib/rules/quotes/double-quoted.sol,""
adridadou/eth-propeller-core,src/test/resources/c3.sol,""
iurimatias/embark-framework,dapps/tests/app/app/contracts/ownable.sol,transferOwnership(address newOwner)
SilentCicero/wafr,src/tests/solidityTests/gasUsage/Rules.sol,"hasWon(uint _proposalID);canVote(address _sender, uint _proposalID);canPropose(address _sender);votingWeightOf(address _sender, uint _proposalID)"
SilentCicero/wafr,src/tests/solidityTests/boardroom/boardroom/Rules.sol,"hasWon(uint _proposalID);canVote(address _sender, uint _proposalID);canPropose(address _sender);votingWeightOf(address _sender, uint _proposalID)"
darcius/rocketpool-crowdsale,contracts/sales/RocketPoolReserveFund.sol,RocketPoolReserveFund(address _tokenContractAddress);claimReserveTokens()
LOOMIA/loomia,ethereum/test/MintableToken.sol,"mint(address _to, uint256 _amount);finishMinting()"
slockit/smart-contract,USN.sol,setRewardDivisor(uint _rewardDivisor);setDeploymentReward(uint _deploymentReward);getRewardDivisor();getDeploymentReward()
michinbear/solidity,test/compilationTests/gnosis/Oracles/Oracle.sol,isOutcomeSet();getOutcome()
elementrem/solidity,test/compilationTests/gnosis/Oracles/Oracle.sol,isOutcomeSet();getOutcome()
Majoolr/ethereum-libraries,ArrayUtilsLib/truffle/contracts/Array8Lib.sol,"sumElements(uint8[] storage self);getMax(uint8[] storage self);getMin(uint8[] storage self);indexOf(uint8[] storage self, uint8 value, bool isSorted);getParentI(uint256 index);getLeftChildI(uint256 index);heapSort(uint8[] storage self);uniq(uint8[] storage self)"
jamespic/ethereum-tools,simple_contracts.sol,"a();x(bool y);x(bool y);x(bool y);x(int a, int b);y()"
bluedroplet/blobstore-ethereum,src/MixItemStoreIpfsSha256.sol,"getNewItemId(address owner, bytes32 nonce);create(bytes32 flagsNonce, bytes32 ipfsHash);_setPackedTimestamp(bytes32 itemId, uint offset);createNewRevision(bytes32 itemId, bytes32 ipfsHash);updateLatestRevision(bytes32 itemId, bytes32 ipfsHash);retractLatestRevision(bytes32 itemId);_deleteAllPackedRevisionTimestamps(bytes32 itemId);restart(bytes32 itemId, bytes32 ipfsHash);retract(bytes32 itemId);transferEnable(bytes32 itemId);transferDisable(bytes32 itemId);transfer(bytes32 itemId, address recipient);disown(bytes32 itemId);setNotUpdatable(bytes32 itemId);setEnforceRevisions(bytes32 itemId);setNotRetractable(bytes32 itemId);setNotTransferable(bytes32 itemId);getAbiVersion();getContractId();getInUse(bytes32 itemId);_getAllRevisionIpfsHashes(bytes32 itemId);_getRevisionTimestamp(bytes32 itemId, uint revisionId);_getAllRevisionTimestamps(bytes32 itemId);getItem(bytes32 itemId);getFlags(bytes32 itemId);getUpdatable(bytes32 itemId);getEnforceRevisions(bytes32 itemId);getRetractable(bytes32 itemId);getTransferable(bytes32 itemId);getOwner(bytes32 itemId);getRevisionCount(bytes32 itemId);getRevisionTimestamp(bytes32 itemId, uint revisionId);getAllRevisionTimestamps(bytes32 itemId);getRevisionIpfsHash(bytes32 itemId, uint revisionId);getAllRevisionIpfsHashes(bytes32 itemId)"
link-blockchain/blobstore,src/MixItemStoreIpfsSha256.sol,"getNewItemId(address owner, bytes32 nonce);create(bytes32 flagsNonce, bytes32 ipfsHash);_setPackedTimestamp(bytes32 itemId, uint offset);createNewRevision(bytes32 itemId, bytes32 ipfsHash);updateLatestRevision(bytes32 itemId, bytes32 ipfsHash);retractLatestRevision(bytes32 itemId);_deleteAllPackedRevisionTimestamps(bytes32 itemId);restart(bytes32 itemId, bytes32 ipfsHash);retract(bytes32 itemId);transferEnable(bytes32 itemId);transferDisable(bytes32 itemId);transfer(bytes32 itemId, address recipient);disown(bytes32 itemId);setNotUpdatable(bytes32 itemId);setEnforceRevisions(bytes32 itemId);setNotRetractable(bytes32 itemId);setNotTransferable(bytes32 itemId);getAbiVersion();getContractId();getInUse(bytes32 itemId);_getAllRevisionIpfsHashes(bytes32 itemId);_getRevisionTimestamp(bytes32 itemId, uint revisionId);_getAllRevisionTimestamps(bytes32 itemId);getItem(bytes32 itemId);getFlags(bytes32 itemId);getUpdatable(bytes32 itemId);getEnforceRevisions(bytes32 itemId);getRetractable(bytes32 itemId);getTransferable(bytes32 itemId);getOwner(bytes32 itemId);getRevisionCount(bytes32 itemId);getRevisionTimestamp(bytes32 itemId, uint revisionId);getAllRevisionTimestamps(bytes32 itemId);getRevisionIpfsHash(bytes32 itemId, uint revisionId);getAllRevisionIpfsHashes(bytes32 itemId)"
shahankhatch/dapp-bin,getting started/token.sol,"token();sendToken(address receiver, uint amount);claimMiningReward()"
LianaHus/dapp-bin,getting started/token.sol,"token();sendToken(address receiver, uint amount);claimMiningReward()"
RepublicMaster/dapp-bin,getting started/token.sol,"token();sendToken(address receiver, uint amount);claimMiningReward()"
frozeman/ethereum-smart-contracts,getting started/token.sol,"token();sendToken(address receiver, uint amount);claimMiningReward()"
ethereum/dapp-bin,getting started/token.sol,"token();sendToken(address receiver, uint amount);claimMiningReward()"
vaporry/dapp-bin,getting started/token.sol,"token();sendToken(address receiver, uint amount);claimMiningReward()"
HamzaYasin1/ERC20-token-fixed-supply,MyToken.sol,"MyToken();createTokens();totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
DOkwufulueze/eth-vue,contracts/zeppelin/lifecycle/Destructible.sol,""
TrueFlip/trueflip-contracts,contracts/TrueFlipToken.sol,"setMintAddress(address newAddress);TrueFlipToken(address ownerAddress);mint(address beneficiary, uint amount, bool transfer);finalize();requestWithdrawal(address beneficiary, uint amount);withdrawTokens()"
crypto-coder/Tokens,Token_Contracts/contracts/StairStepDecayingTokenFunction.sol,"StairStepDecayingTokenFunction();getFunctionType();executeDecayFunction(uint256 _amount, int256 _rangeLength, int256 _distanceInRange, uint256 _startPercent, uint256 _endPercent)"
aragon/aragon-core,contracts/test/mocks/KernelDepositableMock.sol,enableDeposits()
adklempner/automte-exchange-contracts,contracts/DisputeResolver.sol,"DisputeResolver(address[] _owners, address _disputeInterface);setOraclizeGasPrice(uint gasPrice);setOraclizeGasLimit(uint gasLimit);withdraw(uint amount);assignDispute(string _uid, address _seller, string country);assignDispute(string _uid, address _seller, string country, address assignee);__callback(bytes32 id, string result);resolveDisputeSeller(string uid);resolveDisputeBuyer(string uid);getOwner(uint ownerIndex);isOwner(address _addr);isContract(address addr)"
Neufund/Contracts,contracts/faucet/FaucetManager.sol,"FaucetManager(address faucet, address[] managers)"
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/ReentrancyGuard.sol,""
Majoolr/ethereum-libraries,CrowdsaleLib/DirectCrowdsale/v1.0.0/DirectCrowdsaleLib.sol,"receivePurchase(DirectCrowdsaleStorage storage self, uint256 _amount);setTokenExchangeRate(DirectCrowdsaleStorage storage self, uint256 _exchangeRate);setTokens(DirectCrowdsaleStorage storage self);withdrawTokens(DirectCrowdsaleStorage storage self);withdrawLeftoverWei(DirectCrowdsaleStorage storage self);withdrawOwnerEth(DirectCrowdsaleStorage storage self);crowdsaleActive(DirectCrowdsaleStorage storage self);crowdsaleEnded(DirectCrowdsaleStorage storage self);validPurchase(DirectCrowdsaleStorage storage self)"
status-im/status-network-token,contracts/SGTExchanger.sol,"SGTExchanger(address _sgt, address _snt, address _statusContribution);collect();proxyPayment(address);onTransfer(address, address, uint256);onApprove(address, address, uint256);getBlockNumber();claimTokens(address _token)"
silasdavis/eris-db,tests/jobs_fixtures/app35-library_handling/multi-lib-consumer.sol,basicFunctionReturn()
silasdavis/burrow,tests/jobs_fixtures/app35-library_handling/multi-lib-consumer.sol,basicFunctionReturn()
eris-ltd/eris-db,tests/jobs_fixtures/app35-library_handling/multi-lib-consumer.sol,basicFunctionReturn()
Matchpool/contracts,contracts/Contribution.sol,"toggleHalt(bool _halted);getPriceRate();processPurchase(uint _rate, uint _remaining);preBuy();drain()"
lifechange-io/christ-coin,contracts/Controller.sol,"Controller(address _token, address _ledger, address _crowdsale);setToken(address _address);setLedger(address _address);setCrowdsale(address _address);init();totalSupply();balanceOf(address _owner);allowance(address _owner, address _spender);transfer(address _from, address _to, uint _value);transferWithEvent(address _from, address _to, uint _value);transferFrom(address _spender, address _from, address _to, uint _value);approve(address _owner, address _spender, uint _value);burn(address _owner, uint _amount);mintWithEvent(address _to, uint _amount);startVesting(uint _amount, uint _duration);withdrawVested(address _withdrawTo)"
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.5/blockLevelCompare.sol,""
marekkirejczyk/ethereum.rb,spec/fixtures/ContractWithError.sol,""
pipermerriam/ethereum-alarm-clock,contracts/Scheduler/BlockScheduler.sol,""
daostack/daostack,contracts/globalConstraints/GlobalConstraintInterface.sol,"pre( address _scheme, bytes32 _params, bytes32 _method );post( address _scheme, bytes32 _params, bytes32 _method );when()"
TheRougeProject/RougeTokens,test/TestRGXToken.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewRGXToken()
Dicoiner/irianna-solidity,contracts/ownership/Contactable.sol,setContactInformation(string info)
cryptape/cita,scripts/contracts/src/system/NodeManager.sol,"setStake(address _node, uint64 stake);approveNode(address _node);deleteNode(address _node);listNode();getStatus(address _node);listStake();stakePermillage(address _node)"
kinfoundation/kin-token,contracts/MultiSigWallet.sol,"MultiSigWallet(address[] _owners, uint _required);addOwner(address owner);removeOwner(address owner);replaceOwner(address owner, address newOwner);changeRequirement(uint _required);submitTransaction(address destination, uint value, bytes data);confirmTransaction(uint transactionId);revokeConfirmation(uint transactionId);executeTransaction(uint transactionId);isConfirmed(uint transactionId);addTransaction(address destination, uint value, bytes data);getConfirmationCount(uint transactionId);getTransactionCount(bool pending, bool executed);getOwners();getConfirmations(uint transactionId);getTransactionIds(uint from, uint to, bool pending, bool executed)"
stanta/darfchain,ICO/contracts/ReleasableToken.sol,"setReleaseAgent(address addr);setTransferAgent(address addr, bool state);releaseTokenTransfer();transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value)"
hugoroussel/popcontract,popcontract.sol,mortal();kill();popcontract();getOrganizersAddresses();getSignedConfiguration();configSignOrganizers();signWholeConfiguration();isOrganizer(address sender);publicKeyConsensus()
Neufund/Contracts,contracts/trader/EthEurTrader.sol,"EthEurTrader(EuroToken euroToken_);set_trader(address trader_);traded(address client, uint256 amount)"
WeiFund/WeiFund,app/client/lib/contracts/WeiController.sol,"newCampaign(uint _campaignID, address _owner, uint _fundingGoal);contribute(uint _campaignID, address _contributor, address _beneficiary, uint _amountContributed);refund(uint _campaignID, address _contributor, uint _amountRefunded);payout(uint _campaignID, uint _amountPaid);totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);newCampaign(string _name, address _beneficiary, uint _fundingGoal, uint _expiry, address _config);contribute(uint _campaignID, address _beneficiary);refund(uint _campaignID, uint _contribution);payout(uint _campaignID);operatorCampaignID(address _operator, uint _campaignIndex);totalCampaignsBy(address _operator);totalContributionsBy(uint _campaignID, address _contributor);totalCampaigns();contributionAt(uint _campaignID, uint _contributionID);createdAt(uint _campaignID);contributionID(uint _campaignID, address _contributor, uint _contributionIndex);ownerOf(uint _campaignID);beneficiaryOf(uint _campaignID);configOf(uint _campaignID);amountRaisedBy(uint _campaignID);fundingGoalOf(uint _campaignID);expiryOf(uint _campaignID);totalContributors(uint _campaignID);isContributor(uint _campaignID, address _contributor);isOwner(uint _campaignID, address _owner);hasFailed(uint _campaignID);isSuccess(uint _campaignID);isActive(uint _campaignID);isPaidOut(uint _campaignID);totalRefunded(uint _campaignID);isRefunded(uint _campaignID);newCampaign(uint _campaignID, address _owner, uint _fundingGoal);contribute(uint _campaignID, address _contributor, address _beneficiary, uint _amountContributed);claimTokens();refund(uint _campaignID, address _contributor, uint _amountRefunded);payout(uint _campaignID, uint _amountPaid)"
aragon/aragon-core,contracts/acl/ACLSyntaxSugar.sol,"arr();arr(bytes32 _a);arr(bytes32 _a, bytes32 _b);arr(address _a);arr(address _a, address _b);arr(address _a, uint256 _b, uint256 _c);arr(address _a, uint256 _b, uint256 _c, uint256 _d);arr(address _a, uint256 _b);arr(address _a, address _b, uint256 _c, uint256 _d, uint256 _e);arr(address _a, address _b, address _c);arr(address _a, address _b, uint256 _c);arr(uint256 _a);arr(uint256 _a, uint256 _b);arr(uint256 _a, uint256 _b, uint256 _c);arr(uint256 _a, uint256 _b, uint256 _c, uint256 _d);arr(uint256 _a, uint256 _b, uint256 _c, uint256 _d, uint256 _e);decodeParamOp(uint256 _x);decodeParamId(uint256 _x);decodeParamsList(uint256 _x)"
lifechange-io/christ-coin,contracts/Zeppelin/Pausable.sol,pause();unpause()
chenlian2015/eosEthMarketSample,contracts/OLAddressPublicAddressManager.sol,getOuLianPublicAddress()
mixbytes/storiqa_ico,contracts/token/MintableMultiownedToken.sol,"MintableMultiownedToken(address[] _owners, uint _signaturesRequired, address _minter);requestDividends();transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);mint(address _to, uint256 _amount);disableMinting();emissionInternal(uint256 _tokensCreated);mintInternal(address _to, uint256 _amount);payDividendsTo(address _to);calculateDividendsFor(address _for);getLastEmissionNum()"
Storiqa/ico_smart_contract,contracts/token/MintableMultiownedToken.sol,"MintableMultiownedToken(address[] _owners, uint _signaturesRequired, address _minter);requestDividends();transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);mint(address _to, uint256 _amount);disableMinting();emissionInternal(uint256 _tokensCreated);mintInternal(address _to, uint256 _amount);payDividendsTo(address _to);calculateDividendsFor(address _for);getLastEmissionNum()"
ryepdx/the-tao,contracts/tests/factory.sol,setUp();testCreateAuthority();testCreateToken();testSetupMultisig()
Neurone/persians,contracts/TokenERC20.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);balanceOf(address _owner)"
alantsv/gercom-ico,gercoin/contracts/GERCoin.sol,""
bitcoinmeetups/dapp-bin,wallet/wallet.sol,"multiowned(uint _required, address[] _owners);confirm(hash _operation);changeOwner(address _from, address _to);daylimit();setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today();changeOwner(address _from, address _to);execute(address _to, uint _value, string _data);confirm(hash _h);Wallet(address[] _owners);kill(address _to);execute(address _to, uint _value, byte[] _data);confirm(hash _h);confirm(hash _h, address _to, uint _value, bytes[] _data)"
chriseth/dapp-bin,wallet/wallet.sol,"multiowned(uint _required, address[] _owners);confirm(hash _operation);changeOwner(address _from, address _to);daylimit();setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today();changeOwner(address _from, address _to);execute(address _to, uint _value, string _data);confirm(hash _h);Wallet(address[] _owners);kill(address _to);execute(address _to, uint _value, byte[] _data);confirm(hash _h);confirm(hash _h, address _to, uint _value, bytes[] _data)"
ledgerlabs/toy-state-channels,contracts/Adjudicator.sol,"Adjudicator(CompareOp _compareOp, address _owner, uint _timeout);submit(bytes32[] _state);unfreeze();finalize();kill(address _recipient)"
jellegerbrandy/daostack,contracts/MintableToken.sol,mint(uint256 _amount)
jimy74/Chablex,Smart Contracts/CongressOwned.sol,"CongressOwned();getMembersCount();addElectedMember(address targetMember, string memberName);addMember(address targetMember, string memberName);removeMember(address targetMember);getTime();newProposal( address candidateAddress,string candidateName);vote(uint256 proposalID,bool supportsProposal,string justificationText);executeProposal(uint256 proposalID);getVoteFromProposal(uint256 idProposal, uint256 idVote)"
ethbets/ebets,contracts/ebets.sol,"Ebets();modifyCategory(uint betIdx, string oldCategory, string newCategory);toggleFeatured(uint betIdx, string category);getBetsByCategory(string category);removeBet(string category, uint index)"
b-mueller/mythril,solidity_examples/returnvalue.sol,callnotchecked();callchecked()
b-mueller/mythril,tests/testdata/input_contracts/returnvalue.sol,callnotchecked();callchecked()
cgewecke/solcover,test/sources/if/else-without-brackets.sol,a(uint x)
JoinColony/solcover,test/sources/if/else-without-brackets.sol,a(uint x)
pash7ka/zeppelin-solidity,contracts/crowdsale/CappedCrowdsale.sol,CappedCrowdsale(uint256 _cap);validPurchase();hasEnded()
readevalprint/aragon-core,contracts/zeppelin/crowdsale/CappedCrowdsale.sol,CappedCrowdsale(uint256 _cap);validPurchase();hasEnded()
pz7/liquet,node_modules/zeppelin-solidity/contracts/crowdsale/CappedCrowdsale.sol,CappedCrowdsale(uint256 _cap);validPurchase();hasEnded()
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/crowdsale/CappedCrowdsale.sol,CappedCrowdsale(uint256 _cap);validPurchase();hasEnded()
cashpokerpro-dev/cash-smartcontracts,contracts/crowdsale/CappedCrowdsale.sol,CappedCrowdsale(uint256 _cap);validPurchase();hasEnded()
cinderblockchain/cindertoken,contracts/crowdsale/CappedCrowdsale.sol,CappedCrowdsale(uint256 _cap);validPurchase();hasEnded()
NoteGio/openrelay,js/contracts/base/IssueToken.sol,"IssueToken(string _name, string _symbol);issue(uint256 quantity)"
DRI-project/RICO,contracts/PoDs/TokenMintPoD.sol,TokenMintPoD();finalize();processDonate(address _user);getBalanceOfToken(address _user)
Communication-Systems-Group/solidity-examples,example7.sol,"mint(address recipient, uint value);transfer(address to, uint value);balance(address addr)"
iExecBlockchainComputing/rlc-token,contracts/Pausable.sol,emergencyStop();release()
loiluu/peacerelay,contracts/Pausable.sol,emergencyStop();release()
chengtalent/ethereumj,starter/src/main/resources/sol/BasicIterator.sol,BasicIterator();getSum();kill()
turboprep/geth-tutorial,nugget1/nugget.sol,"nugget(uint supply);sendNugget(address receiver, uint amount)"
BitySA/whetcwithdraw,address_authorization/whauthorizeaddress.sol,Owned();changeOwner(address _newOwner);getOwner();authorizeAddress(address _authorizedAddress);getCodeSize(address _addr);close();getIsClosed()
silasdavis/eris-db,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs2.sol,"addThing(string memory description, bytes32 url, bytes32 filehash, string memory filename)"
silasdavis/burrow,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs2.sol,"addThing(string memory description, bytes32 url, bytes32 filehash, string memory filename)"
eris-ltd/eris-db,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs2.sol,"addThing(string memory description, bytes32 url, bytes32 filehash, string memory filename)"
serapath-contribution/browser-solidity,contracts/folder1/contract_chrome.sol,""
serapath-contribution/browser-solidity,contracts/folder1/contract2.sol,""
serapath-contribution/browser-solidity,contracts/folder1/contract_chrome_toremove.sol,""
serapath-contribution/browser-solidity,contracts/folder1/contract_firefox_toremove.sol,""
serapath-contribution/browser-solidity,contracts/folder1/contract_firefox.sol,""
ChronoBank/LX-SC,contracts/helpers/Mock.sol,"ignore(bytes4 _sig, bool _enabled);expect(address _from, uint _value, bytes _input, bytes32 _return);assertExpectations();expectationsLeft();resetCallsCount()"
GovernX/governx-contracts,src/contracts/utils/Owned.sol,Owned();isOwner(address addr);transfer(address _owner)
airalab/core,contracts/robonomics/interface/ILiability.sol,""
justmake/smart_contract,interfaces/IOwned.sol,owner();transferOwnership(address _newOwner);acceptOwnership()
5chdn/greeter-erica,sol/erica.sol,""
Neufund/Contracts,contracts/neufund/Proposition.sol,delegateVote()
burnoutcoin/go-burnout,contracts/ens/contract/ens.sol,"ENS(address owner);owner(bytes32 node);resolver(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);FIFSRegistrar(address ensAddr, bytes32 node);register(bytes32 subnode, address owner);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);PublicResolver(address ensAddr);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash)"
gmo-blockchain/solidity,contracts/Utils.sol,"transferUniqueId(bytes32 _id);recoverAddress(bytes32 _hash, bytes _sign)"
bcosorg/bcos,systemcontractv2/Base.sol,""
SwapyNetwork/swapy-exchange-protocol,contracts/investment/AssetEvents.sol,""
Dsummers91/openfund,blockchain/contracts/OpenFund.sol,"OpenFund(bytes32 _user, string _repo);__callback(bytes32 myid, string result);executeWithdrawal();updateAddress();withdraw(uint value)"
pipermerriam/populus,tests/fixtures/mortal.sol,kill()
etherisc/flightDelay,contracts/FlightDelayAccessController.sol,"FlightDelayAccessController(address _controller);setContracts();setPermissionById(uint8 _perm, bytes32 _id);fixPermission(address _target, address _accessor, uint8 _perm, bool _access);setPermissionById(uint8 _perm, bytes32 _id, bool _access);setPermissionByAddress(uint8 _perm, address _addr);setPermissionByAddress(uint8 _perm, address _addr, bool _access);checkPermission(uint8 _perm, address _addr)"
LuoZijun/solidity-sc2-replay-reader,src/token.sol,"Token();issue(address account, uint amount);transfer(address to, uint amount);getBalance(address account)"
crypto-coder/Tokens,Token_Contracts/contracts/TokenTester.sol,TokenTester()
adklempner/solidity-license,contracts/zeppelin/ownership/NoOwner.sol,""
michinbear/solidity,test/compilationTests/zeppelin/ownership/NoOwner.sol,""
adamdossa/ProfitSharingContract,installed_contracts/zeppelin/contracts/ownership/NoOwner.sol,""
dacplayproject/play-dapp,src/PlayDapp.t.sol,setUp();testFail_basic_sanity();test_basic_sanity()
chenlian2015/eosEthMarketSample,contracts/OLSuperManager.sol,"getSuperManager();setUserServerPermission(address user, string server);removePermission(address user, string server);isUserHasPermissonToModify(address user, string server)"
gnosis/gnosis-contracts,contracts/Oracles/UltimateOracle.sol,"setForwardedOutcome();challengeOutcome(int _outcome);voteForOutcome(int _outcome, uint amount);withdraw();isChallengePeriodOver();isFrontRunnerPeriodOver();isChallenged();isOutcomeSet();getOutcome()"
SilentCicero/meteor-dapp-pricefeed,pricefeed.sol,Owned();Priced(uint p);setPrice(uint p);Duration(uint d);setDuration(uint d);subscribe(address addr);kill();named(bytes32 name);payout(address addr);set(uint newInfo);subscribe(address addr);get();payout(address addr);duration();subscribe(address addr);kill();subscribers(address );set(uint256 newInfo);get();setPrice(uint256 p);numSubscribed();price();balance();setDuration(uint256 d)
Great-Hill-Corporation/daodeepdive,assets/contracts/00-AutoSplitCurator.sol,"balanceOf(address _owner);transfer(address _to, uint256 _amount);halveMinQuorum();changeAllowedRecipients(address _recipient, bool _allowed);getNewDAOAddress(uint _proposalID);newProposal(address _recipient, uint _amount, string _description, bytes _transactionData, uint _debatingPeriod, bool _newCurator);vote(uint _proposalID, bool _supportsProposal);splitDAO(uint _proposalID, address _newCurator);executeProposal(uint _proposalID, bytes _transactionData);AutoSplitCurator(address _parentDaoAddress);startSplit();executeParentDaoSplit();prepareWithdrawProposalGivenSplitProposalId();executeChildDaoProposal();__callback(bytes32 myid, string result);withdrawDao();withdrawChildDao();withdrawEth();setProposalDeposit(uint _proposalDeposit)"
iam-dev/ERC23,installed_contracts/zeppelin-solidity/contracts/token/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);increaseApproval(address _spender, uint _addedValue);decreaseApproval(address _spender, uint _subtractedValue)"
sonm-io/core,blockchain/source/contracts/SimpleGatekeeperWithLimit.sol,"ChangeKeeperLimit(address _keeper, uint256 _limit);FreezeKeeper(address _keeper);UnfreezeKeeper(address _keeper);Payin(uint256 _value);PayinTargeted(uint256 _value, address _target);Payout(address _to, uint256 _value, uint256 _txNumber);SetFreezingTime(uint256 _freezingTime);GetFreezingTime();SetCommission(uint256 _commission);GetCommission();TransferCommission();underLimit(address _keeper, uint256 _value);today();kill()"
montyly/manticore,tests/ethereum/contracts/consensys_benchmark/integer_overflow_storagepacking.sol,C()
trailofbits/manticore,tests/ethereum_bench/consensys_benchmark/integer_overflow_storagepacking.sol,C()
furusiyya/Notary-Platform,contracts/Relay.sol,Relay()
NTRYPlatform/ntry-solidity,contracts/Relay.sol,Relay()
suntechsoft/dmarket-smartcontract,contracts/v0.2/DMToken.sol,"mint(address _to, uint256 _amount);DMToken()"
rsksmart/rskj,rskj-core/src/test/resources/dsl/empty.sol,""
boisde/Greed_Island,party/contracts/interfaces/external/IWETH.sol,deposit()
SafecontractDev/protocol,contracts/interfaces/IRewardDAO.sol,"onDeposit(uint _amount);getEthBalance();claim();deposit(address _token, uint _amount);withdraw()"
iam-dev/ERC23,installed_contracts/zeppelin-solidity/contracts/token/DetailedERC20.sol,""
btalabs/trustnet,trustnet.sol,"trustNet();getClaims(string target);makeCode(uint _id, string definition);editCode(uint _id, string definition);getCode(uint _id);makeAdmin(address newAdmin);revokeAdmin(address revokedAdmin);isAdmin(address queryAddr)"
readevalprint/aragon-core,contracts/apps/AppStorage.sol,""
raiden-network/raiden-token,contracts/test/gnosis_multisig_wallet.sol,"MultiSigWallet(address[] _owners, uint _required);addOwner(address owner);removeOwner(address owner);replaceOwner(address owner, address newOwner);changeRequirement(uint _required);submitTransaction(address destination, uint value, bytes data);confirmTransaction(uint transactionId);revokeConfirmation(uint transactionId);executeTransaction(uint transactionId);isConfirmed(uint transactionId);addTransaction(address destination, uint value, bytes data);getConfirmationCount(uint transactionId);getTransactionCount(bool pending, bool executed);getOwners();getConfirmations(uint transactionId);getTransactionIds(uint from, uint to, bool pending, bool executed)"
aragon/aragon-network-token,packages/sale/contracts/interface/Controlled.sol,Controlled();changeController(address _newController)
pembient/pembicoin,tests/Reentrant.sol,Reentrant(PembiCoinICO _victim);arm();disarm();requestRefund()
montyly/manticore,tests/ethereum/contracts/consensys_benchmark/reentrancy_dao_fixed.sol,withdrawAll();deposit()
trailofbits/manticore,tests/ethereum_bench/consensys_benchmark/reentrancy_dao_fixed.sol,withdrawAll();deposit()
becodemonkey/solidity,test/TestToken.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);Ownable();changeOwner(address _newOwner);claimOwnership();balanceOf(address who);transfer(address to, uint256 value);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);allowance(address owner, address spender);balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);mint(address _to, uint256 _amount);finishMinting();TestToken()"
SilentCicero/wafr,src/tests/solidityTests/gasUsage/examples/TokenFreezerRules.sol,""
acebusters/safe-token-sale,contracts/satelites/Nutz.sol,"balanceOf(address _owner);totalSupply();activeSupply();allowance(address _owner, address _spender);floor();ceiling();powerPool();_checkDestination(address _from, address _to, uint256 _value, bytes _data);powerDown(address powerAddr, address _holder, uint256 _amountBabz);asyncSend(address _pullAddr, address _dest, uint256 _amountWei);approve(address _spender, uint256 _amountBabz);transfer(address _to, uint256 _amountBabz, bytes _data);transfer(address _to, uint256 _amountBabz);transData(address _to, uint256 _amountBabz, bytes _data);transferFrom(address _from, address _to, uint256 _amountBabz, bytes _data);transferFrom(address _from, address _to, uint256 _amountBabz);purchase(uint256 _price);sell(uint256 _price, uint256 _amountBabz);powerUp(uint256 _amountBabz)"
silasdavis/eris-db,tests/jobs_fixtures/app27-multiple_imports_and_multiple_constructor_different_factory_types/contracts/GSMulti.sol,"set(uint first, uint second);getFirst();getSecond()"
silasdavis/burrow,tests/jobs_fixtures/app27-multiple_imports_and_multiple_constructor_different_factory_types/contracts/GSMulti.sol,"set(uint first, uint second);getFirst();getSecond()"
eris-ltd/eris-db,tests/jobs_fixtures/app27-multiple_imports_and_multiple_constructor_different_factory_types/contracts/GSMulti.sol,"set(uint first, uint second);getFirst();getSecond()"
Cryptonomica/cryptonomica,src/main/webapp/bills-of-exchange/contracts/BillsOfExchangeFactory.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);mod(uint256 a, uint256 b);onTokenTransfer(address from, uint256 amount, bytes calldata data);tokenFallback(address _from, uint _value, bytes calldata _data);transferFrom(address _from, address _to, uint256 _value);transfer(address _to, uint256 _value);transfer(address _to, uint _value, bytes calldata _data);transferAndCall(address _to, uint256 _value, bytes memory _extraData);transferAllAndCall(address _to, bytes calldata _extraData);approve(address _spender, uint256 _value);approve(address _spender, uint256 _currentValue, uint256 _value);burnTokensFrom(address _from, uint256 _value);burnTokens(uint256 _value);revokedOn(address _address);keyCertificateValidUntil(address _address);changeCryptonomicaVerificationContractAddress(address _newAddress);addAdmin(address _newAdmin);removeAdmin(address _oldAdmin);setWithdrawalAddress(address payable _withdrawalAddress);fixWithdrawalAddress(address _withdrawalAddress);withdrawAllToWithdrawalAddress();changePrice(uint256 _newPrice);signDisputeResolutionAgreement(string calldata _signatoryName);accept(string calldata _linkToSignersAuthorityToRepresentTheDrawee)"
bas-vk/go-ethereum,contracts/ens/contract/ens.sol,"ENS(address owner);owner(bytes32 node);resolver(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);FIFSRegistrar(address ensAddr, bytes32 node);register(bytes32 subnode, address owner);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);PublicResolver(address ensAddr);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash)"
WhaleCoinOrg/WhaleCoin,contracts/ens/contract/ens.sol,"ENS(address owner);owner(bytes32 node);resolver(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);FIFSRegistrar(address ensAddr, bytes32 node);register(bytes32 subnode, address owner);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);PublicResolver(address ensAddr);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash)"
farazdagi/status-go,vendor/github.com/ethereum/go-ethereum/contracts/ens/contract/ens.sol,"ENS(address owner);owner(bytes32 node);resolver(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);FIFSRegistrar(address ensAddr, bytes32 node);register(bytes32 subnode, address owner);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);PublicResolver(address ensAddr);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash)"
kobigurk/go-ethereum,contracts/ens/contract/ens.sol,"ENS(address owner);owner(bytes32 node);resolver(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);FIFSRegistrar(address ensAddr, bytes32 node);register(bytes32 subnode, address owner);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);PublicResolver(address ensAddr);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash)"
shahankhatch/go-ethereum,contracts/ens/contract/ens.sol,"ENS(address owner);owner(bytes32 node);resolver(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);FIFSRegistrar(address ensAddr, bytes32 node);register(bytes32 subnode, address owner);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);PublicResolver(address ensAddr);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash)"
Bo-Ye/go-ethereum,contracts/ens/contract/ens.sol,"ENS(address owner);owner(bytes32 node);resolver(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);FIFSRegistrar(address ensAddr, bytes32 node);register(bytes32 subnode, address owner);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);PublicResolver(address ensAddr);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash)"
jpitts/go-ethereum,contracts/ens/contract/ens.sol,"ENS(address owner);owner(bytes32 node);resolver(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);FIFSRegistrar(address ensAddr, bytes32 node);register(bytes32 subnode, address owner);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);PublicResolver(address ensAddr);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash)"
tooooolong/go-ethereum,contracts/ens/contract/ens.sol,"ENS(address owner);owner(bytes32 node);resolver(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);FIFSRegistrar(address ensAddr, bytes32 node);register(bytes32 subnode, address owner);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);PublicResolver(address ensAddr);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash)"
kingsi-goderia/go-ethereum,contracts/ens/contract/ens.sol,"ENS(address owner);owner(bytes32 node);resolver(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);FIFSRegistrar(address ensAddr, bytes32 node);register(bytes32 subnode, address owner);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);PublicResolver(address ensAddr);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash)"
maran/go-ethereum,contracts/ens/contract/ens.sol,"ENS(address owner);owner(bytes32 node);resolver(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);FIFSRegistrar(address ensAddr, bytes32 node);register(bytes32 subnode, address owner);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);PublicResolver(address ensAddr);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash)"
maichain/listener,vendor/github.com/ethereum/go-ethereum/contracts/ens/contract/ens.sol,"ENS(address owner);owner(bytes32 node);resolver(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);FIFSRegistrar(address ensAddr, bytes32 node);register(bytes32 subnode, address owner);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);PublicResolver(address ensAddr);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash)"
gluk256/go-ethereum,contracts/ens/contract/ens.sol,"ENS(address owner);owner(bytes32 node);resolver(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);FIFSRegistrar(address ensAddr, bytes32 node);register(bytes32 subnode, address owner);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);PublicResolver(address ensAddr);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash)"
yondonfu/go-ethereum,contracts/ens/contract/ens.sol,"ENS(address owner);owner(bytes32 node);resolver(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);FIFSRegistrar(address ensAddr, bytes32 node);register(bytes32 subnode, address owner);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);PublicResolver(address ensAddr);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash)"
karalabe/go-ethereum,contracts/ens/contract/ens.sol,"ENS(address owner);owner(bytes32 node);resolver(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);FIFSRegistrar(address ensAddr, bytes32 node);register(bytes32 subnode, address owner);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);PublicResolver(address ensAddr);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash)"
wangluinc/ethermint,vendor/github.com/ethereum/go-ethereum/contracts/ens/contract/ens.sol,"ENS(address owner);owner(bytes32 node);resolver(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);FIFSRegistrar(address ensAddr, bytes32 node);register(bytes32 subnode, address owner);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);PublicResolver(address ensAddr);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash)"
dubaicoin-dbix/go-dubaicoin,contracts/ens/contract/ens.sol,"ENS(address owner);owner(bytes32 node);resolver(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);FIFSRegistrar(address ensAddr, bytes32 node);register(bytes32 subnode, address owner);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);PublicResolver(address ensAddr);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash)"
illya13/ethermint,vendor/github.com/ethereum/go-ethereum/contracts/ens/contract/ens.sol,"ENS(address owner);owner(bytes32 node);resolver(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);FIFSRegistrar(address ensAddr, bytes32 node);register(bytes32 subnode, address owner);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);PublicResolver(address ensAddr);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash)"
blackzid/go-ethereum,contracts/ens/contract/ens.sol,"ENS(address owner);owner(bytes32 node);resolver(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);FIFSRegistrar(address ensAddr, bytes32 node);register(bytes32 subnode, address owner);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);PublicResolver(address ensAddr);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash)"
noeleon930/go-ethereum,contracts/ens/contract/ens.sol,"ENS(address owner);owner(bytes32 node);resolver(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);FIFSRegistrar(address ensAddr, bytes32 node);register(bytes32 subnode, address owner);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);PublicResolver(address ensAddr);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash)"
Getline-Network/getline,vendor/github.com/ethereum/go-ethereum/contracts/ens/contract/ens.sol,"ENS(address owner);owner(bytes32 node);resolver(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);FIFSRegistrar(address ensAddr, bytes32 node);register(bytes32 subnode, address owner);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);PublicResolver(address ensAddr);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash)"
lab2528/go-oneTime,contracts/ens/contract/ens.sol,"ENS(address owner);owner(bytes32 node);resolver(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);FIFSRegistrar(address ensAddr, bytes32 node);register(bytes32 subnode, address owner);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);PublicResolver(address ensAddr);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash)"
micahaza/go-ethereum,contracts/ens/contract/ens.sol,"ENS(address owner);owner(bytes32 node);resolver(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);FIFSRegistrar(address ensAddr, bytes32 node);register(bytes32 subnode, address owner);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);PublicResolver(address ensAddr);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash)"
CTCDEVTEAM/adtonethereum,contracts/ens/contract/ens.sol,"ENS(address owner);owner(bytes32 node);resolver(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);FIFSRegistrar(address ensAddr, bytes32 node);register(bytes32 subnode, address owner);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);PublicResolver(address ensAddr);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash)"
Nepal-Blockchain/go-ethereum,contracts/ens/contract/ens.sol,"ENS(address owner);owner(bytes32 node);resolver(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);FIFSRegistrar(address ensAddr, bytes32 node);register(bytes32 subnode, address owner);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);PublicResolver(address ensAddr);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash)"
etherite/go-etherite,contracts/ens/contract/ens.sol,"ENS(address owner);owner(bytes32 node);resolver(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);FIFSRegistrar(address ensAddr, bytes32 node);register(bytes32 subnode, address owner);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);PublicResolver(address ensAddr);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash)"
xenioplatform/go-xenio,contracts/ens/contract/ens.sol,"ENS(address owner);owner(bytes32 node);resolver(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);FIFSRegistrar(address ensAddr, bytes32 node);register(bytes32 subnode, address owner);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);PublicResolver(address ensAddr);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash)"
shellygr/ECFChecker,contracts/ens/contract/ens.sol,"ENS(address owner);owner(bytes32 node);resolver(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);FIFSRegistrar(address ensAddr, bytes32 node);register(bytes32 subnode, address owner);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);PublicResolver(address ensAddr);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash)"
Yuka-kkk/ethereum2017,contracts/ens/contract/ens.sol,"ENS(address owner);owner(bytes32 node);resolver(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);FIFSRegistrar(address ensAddr, bytes32 node);register(bytes32 subnode, address owner);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);PublicResolver(address ensAddr);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash)"
am2rican5/go-ethereum,contracts/ens/contract/ens.sol,"ENS(address owner);owner(bytes32 node);resolver(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);FIFSRegistrar(address ensAddr, bytes32 node);register(bytes32 subnode, address owner);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);PublicResolver(address ensAddr);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash)"
Lopastvertoleta/go-ethereum,contracts/ens/contract/ens.sol,"ENS(address owner);owner(bytes32 node);resolver(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);FIFSRegistrar(address ensAddr, bytes32 node);register(bytes32 subnode, address owner);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);PublicResolver(address ensAddr);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash)"
kejace/go-ethereum,contracts/ens/contract/ens.sol,"ENS(address owner);owner(bytes32 node);resolver(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);FIFSRegistrar(address ensAddr, bytes32 node);register(bytes32 subnode, address owner);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);PublicResolver(address ensAddr);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash)"
Alchemist-coin/go-alchemist,contracts/ens/contract/ens.sol,"ENS(address owner);owner(bytes32 node);resolver(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);FIFSRegistrar(address ensAddr, bytes32 node);register(bytes32 subnode, address owner);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);PublicResolver(address ensAddr);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash)"
etherbanking/go-etherbanking,contracts/ens/contract/ens.sol,"ENS(address owner);owner(bytes32 node);resolver(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);FIFSRegistrar(address ensAddr, bytes32 node);register(bytes32 subnode, address owner);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);PublicResolver(address ensAddr);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash)"
adrianbrink/tendereum,vendor/github.com/ethereum/go-ethereum/contracts/ens/contract/ens.sol,"ENS(address owner);owner(bytes32 node);resolver(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);FIFSRegistrar(address ensAddr, bytes32 node);register(bytes32 subnode, address owner);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);PublicResolver(address ensAddr);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash)"
adrianbrink/tendereum,vendor/github.com/cosmos/tendereum/vendor/github.com/ethereum/go-ethereum/contracts/ens/contract/ens.sol,"ENS(address owner);owner(bytes32 node);resolver(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);FIFSRegistrar(address ensAddr, bytes32 node);register(bytes32 subnode, address owner);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);PublicResolver(address ensAddr);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash)"
acebusters/safe-token-sale,test/helpers/ERC223ReceiverMock.sol,"tokenFallback(address _from, uint _value, bytes _data);forward(address _to, uint256 _value, uint256 _price)"
status-im/status-go,contracts/ens/contract/ENS.sol,"ENS();owner(bytes32 node);resolver(bytes32 node);ttl(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);setTTL(bytes32 node, uint64 ttl)"
vvelikodny/go-ethereum,contracts/ens/contract/ENS.sol,"ENS();owner(bytes32 node);resolver(bytes32 node);ttl(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);setTTL(bytes32 node, uint64 ttl)"
wuestholz/go-ethereum,contracts/ens/contract/ENS.sol,"ENS();owner(bytes32 node);resolver(bytes32 node);ttl(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);setTTL(bytes32 node, uint64 ttl)"
wealdtech/domainsale,contracts/ENS.sol,"ENS();owner(bytes32 node);resolver(bytes32 node);ttl(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);setTTL(bytes32 node, uint64 ttl)"
meta-network/go-meta,vendor/github.com/ethereum/go-ethereum/contracts/ens/contract/ENS.sol,"ENS();owner(bytes32 node);resolver(bytes32 node);ttl(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);setTTL(bytes32 node, uint64 ttl)"
getamis/go-ethereum,contracts/ens/contract/ENS.sol,"ENS();owner(bytes32 node);resolver(bytes32 node);ttl(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);setTTL(bytes32 node, uint64 ttl)"
fireblock/go-ethereum,contracts/ens/contract/ENS.sol,"ENS();owner(bytes32 node);resolver(bytes32 node);ttl(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);setTTL(bytes32 node, uint64 ttl)"
trinityfx/trinity,contracts/ens/contract/ENS.sol,"ENS();owner(bytes32 node);resolver(bytes32 node);ttl(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);setTTL(bytes32 node, uint64 ttl)"
ManyCoin/ManyCoin,contracts/ens/contract/ENS.sol,"ENS();owner(bytes32 node);resolver(bytes32 node);ttl(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);setTTL(bytes32 node, uint64 ttl)"
markya0616/go-ethereum,contracts/ens/contract/ENS.sol,"ENS();owner(bytes32 node);resolver(bytes32 node);ttl(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);setTTL(bytes32 node, uint64 ttl)"
web3j/web3j,core/src/main/resources/solidity/ens/ENS.sol,"ENS();owner(bytes32 node);resolver(bytes32 node);ttl(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);setTTL(bytes32 node, uint64 ttl)"
adridadou/eth-api,src/test/resources/contract.sol,myMethod(string value);getEnumValue();getT();getM();getOwner();getArray();getSet();throwMe();getInitTime(uint time);getAccountAddress(address addr)
nedodn/ethcrow,contracts/escrow.sol,"Escrow();makeTransaction(address receiver, uint deadline, uint collateral);acceptTransaction(uint id);receiverWithdrawal(uint id);senderWithdrawal(uint id);finalizeTransaction(uint id);refundTransaction(uint id);disputeTransaction(uint id, uint addedTime);getSentTransactionData(uint id);getRecTransactionData(uint id);getSentTransactions();getRecTransactions()"
eddieoz/workshop-1hackathon-BC-2016,contracts/pokeMarket.sol,"transferFrom(address _from, address _to, uint256 _value);transferPokemon(address _from, address _to, uint256 _pokemonID);owned();transferOwnership(address newOwner);pokeMarket(pokeCoinContract pokeCoinAddress, pokeCentralContract pokeCentralAddress);newSale(address pokeSellerAddress, uint pokemonID, uint pokemonSalePrice);stopSale(address pokeSellerAddress, uint pokemonID);buyPokemon(address pokeBuyerAddress, uint pokemonID);addPokemonToSellingList(address pokeSellerAddress, uint pokemonID);delPokemonFromSellingList(address pokeSellerAddress, uint pokemonID);updatePokecoinAndPokemarketAddresses(address newPokecoinAddress, address newPokecentralAddress);cleanArray(uint[] pokeList)"
tomashaber/raiden,raiden/smart_contracts/Registry.sol,addToken(address token_address);channelManagerByToken(address token_address);tokenAddresses();channelManagerAddresses()
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/crowdsale/validation/WhitelistedCrowdsale.sol,""
stanta/darfchain,ICO/contracts/PresaleFundCollector.sol,"PresaleFundCollector(address _owner, uint _freezeEndsAt, uint _weiMinimumLimit);invest();parcipateCrowdsaleInvestor(address investor);parcipateCrowdsaleAll();refund();setCrowdsale(Crowdsale _crowdsale)"
chai2/Midterm,contracts/Token.sol,"Token(uint256 _totalSupply, address buyerAddress);addSupply(address buyerAddress, uint256 _amount);burnToken(uint256 _amount);balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);refundApprove(address _refundee, uint256 _value);allowance(address _owner, address _spender)"
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/scenarios/solidity_testing/TestFailures.sol,testAssertFail();testAssertEqualFailure()
Capillar/capillar-solidity,contracts/TokenCAP.sol,"TokenCAP();totalSupply();balanceOf(address _adr);allowance(address _owner, address _spender);transfer(address _to, uint _amount);transferFrom(address _from, address _to, uint _amount);approve(address _spender, uint _amount);activeTokens();mintedTokens();burnedTokens();irreducibleOf(address _adr);mint(address _to, uint _amount);limitAccount(address _acc, uint _limit);burnNotDistrTokens(uint _amount);burnBalance(address _account)"
pooleja/SolidityPlayground,contracts/SellableFund.sol,"SellableFund(uint originalSalePrice);withdrawToken(ERC20 ownedToken, uint value);purchase();updatePrice(uint newSalePrice)"
aeronaero/aeron,contracts/ARNToken.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);balanceOf(address who);transfer(address to, uint256 value);allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);Aeron();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);burn(uint256 _value);freeze(uint256 _value);unfreeze(uint256 _value);freezeOf(address _owner)"
EthHead/ens.trade,public/contracts/ENSTradeHashIndex.sol,"entries(bytes32 _hash);transfer(bytes32 _hash, address newOwner);getCreationDate();Deed(address _owner);setOwner(address newOwner);setRegistrar(address newRegistrar);setBalance(uint newValue, bool throwOnFailure);closeDeed(uint refundRatio);destroyDeed();ENSTrade(Registrar _registrarAddress);setFeeAddress(address _feeAddress);setMinimumOfferPrice(uint _minimumOfferPrice);setFee(uint _fee);sha(string _string);newListing(string _name, uint256 _buyPrice, string _message);deList(bytes32 _hash);reclaim(bytes32 _hash);deleteRecord(bytes32 _hash);newOffer(bytes32 _hash, string _message);cancelOffer(bytes32 _hash);acceptOffer(bytes32 _hash, address _offerAddress, uint256 _offerValue);deleteOffer(bytes32 _hash, address _offerAddress);getDeed(bytes32 _hash);transferRecord(bytes32 _hash, address _toAddress, uint256 _value);getBuyPriceAndPreviousRecord(bytes32 _hash);getRecord(bytes32 _hash);getDeedInfo(address _deedAddress);getFullRecord(bytes32 _hash);getRecordOffers(bytes32 _hash);getOffer(bytes32 _hash, address _offerAddress)"
RyuuGan/sol-merger,test/compiled/LocalImports.sol,Ownable();transferOwnership(address newOwner);MyOwned()
Vourhey/learning-center,sol/Dealer.sol,"Dealer(address _dao, address _air);setDao(Core _dao);setToken(TokenEmission _air);delegateToken(address _address);pay(address _sender, uint _amount)"
orbro/eth-enablers,ethereum-datetime-master/contracts/api.sol,"isLeapYear(uint16 year);getYear(uint timestamp);getMonth(uint timestamp);getDay(uint timestamp);getHour(uint timestamp);getMinute(uint timestamp);getSecond(uint timestamp);getWeekday(uint timestamp);toTimestamp(uint16 year, uint8 month, uint8 day);toTimestamp(uint16 year, uint8 month, uint8 day, uint8 hour);toTimestamp(uint16 year, uint8 month, uint8 day, uint8 hour, uint8 minute);toTimestamp(uint16 year, uint8 month, uint8 day, uint8 hour, uint8 minute, uint8 second)"
corbinpage/ethereum-play,contracts/DropNotice.sol,"DropNotice(uint dropDate, string title, string description, string domain);getDropNotice();getDropNotices();getName();MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
airalab/DAO-IPCI,contracts/TokenWithValidityPeriod.sol,"setPeriod(uint _value);emission(uint _value);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint256 _value);burn(uint _value)"
michinbear/solidity,test/compilationTests/corion/tokenDB.sol,"increase(address owner, uint256 value);decrease(address owner, uint256 value);setAllowance(address owner, address spender, uint256 amount, uint256 nonce);getAllowance(address owner, address spender)"
ether-camp/ethereum-harmony,src/test/resources/contracts/std.sol,owned();changeOwner(address newOwner);kill();register(bytes32 name);unregister();addressOf(bytes32 name);nameOf(address addr);kill();nameRegAddress();named(bytes32 name);named(bytes32 name)
Neufund/Contracts,contracts/watchdog/WatchedWalletFactory.sol,""
triage/KPCSEthereum,contracts/ParticipantAuthority.sol,"ParticipantAuthority(string _name, address _administrator);isSenderRegisteredAgent(address sender);registerParticipantAgent(address agent);getType()"
FedCoup/FedCoup,installed_contracts/zeppelin/contracts/MultisigWallet.sol,"MultisigWallet(address[] _owners, uint _required, uint _daylimit);destroy(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);setDailyLimit(uint _newLimit);resetSpentToday();clearPending()"
readevalprint/aragon-core,contracts/kernel/Kernel.sol,"initialize(address _permissionsCreator);createPermission(address _entity, address _app, bytes4 _action, address _parent);grantPermission(address _entity, address _app, bytes4 _action, address _parent);revokePermission(address _entity, address _app, bytes4 _action);setAppCode(bytes32 _appId, address _code);upgradeKernel(address _newKernel);canPerform(address _entity, address _app, bytes4 _action);getAppCode(bytes32 _appId);_createPermission(address _entity, address _app, bytes4 _action, address _parent);_setPermission(address _entity, address _app, bytes4 _action, address _parent, bool _allowed)"
iam-dev/ERC23,test/helpers/Basic23TokenMock.sol,""
SerCeMan/intellij-solidity,src/test/resources/fixtures/parser/event.sol,""
Neufund/Contracts,contracts/trader/IEthEurTrader.sol,""
AragonOne/zeppelin-solidity,contracts/test-helpers/StandardTokenMock.sol,"StandardTokenMock(address initialAccount, uint initialBalance)"
RyuuGan/sol-merger,test/contracts/imports/SafeMathBasicTokenERC20Basic.sol,"mul(uint256 _a, uint256 _b);div(uint256 _a, uint256 _b);sub(uint256 _a, uint256 _b);add(uint256 _a, uint256 _b);totalSupply();balanceOf(address _who);transfer(address _to, uint256 _value);totalSupply();transfer(address _to, uint256 _value);balanceOf(address _owner)"
immesys/bw2,contracts/registry.sol,"UnpackDOT(bytes dot);GetDOTDelegatedRevoker(bytes32 dothash, uint8 index);UnpackEntity(bytes entity);GetEntityDelegatedRevoker(bytes32 vk, uint8 index);UnpackAccessDChain(bytes obj);GetDChainDOTHash(bytes32 chainhash, uint8 index);UnpackRevocation(bytes blob);ADChainGrants(bytes32 chainhash, bytes8 adps, bytes32 mvk, bytes urisuffix);GetDOTNumRevokableHashes(bytes32 dothash);GetDOTRevokableHash(bytes32 dothash, uint32 index);GetDChainNumRevokableHashes(bytes32 chainhash);GetDChainRevokableHash(bytes32 chainhash, uint32 index);AddRevocationBounty(bytes32 hash);AddDOT(bytes content);AddEntity(bytes content);CheckEntity(bytes32 vk);CheckDOT(bytes32 hash);AddChain(bytes content);RevokeEntity(bytes32 target, bytes content);RevokeDOT(bytes32 target, bytes content);Registry();SetPatentProperties(uint price, uint duration);NewPatent(bytes32 hash);WhoHoldsPatentFor(bytes32 hash);ClosePatent(bytes32 hash);Retire()"
manishbisht/Udacity,Blockchain Developer Nanodegree/P6 - Architect a Blockchain Supply Chain Solution/Part B/Starter_Code/project-6/contracts/accessControl/RetailerRole.sol,isRetailer(address account);addRetailer(address account);renounceRetailer();_addRetailer(address account);_removeRetailer(address account)
montyly/manticore,tests/ethereum/contracts/consensys_benchmark/eth_tx_order_dependence_multitx_1.sol,Benchmark();setReward();freezeReward();claimReward(uint256 submission)
trailofbits/manticore,tests/ethereum_bench/consensys_benchmark/eth_tx_order_dependence_multitx_1.sol,Benchmark();setReward();freezeReward();claimReward(uint256 submission)
Neufund/Contracts,contracts/kyc/IKYCRegistery.sol,state_of(address client);is_kyced(address client)
mayukhdifferent/Ethereum_smart_contract_dev,myKillerContract.sol,MyKillerContract();getCreator();kill()
web3j/web3j,codegen/src/test/resources/solidity/greeter/Greeter.sol,kill();newGreeting(string _greeting);greet()
montyly/manticore,tests/ethereum/contracts/consensys_benchmark/integer_overflow_mul.sol,run(uint256 input)
trailofbits/manticore,tests/ethereum_bench/consensys_benchmark/integer_overflow_mul.sol,run(uint256 input)
coeniebeyers/QuorumNostroDemo,app/usdZar.sol,"transferFrom(address _from, address _to, uint256 _value);USDZAR(uint256 rate_);addApproval(address requester, address tokenContract_, uint256 value, uint256 rate);receiveApproval(address requester, uint256 value, address tokenContract_, bytes extraData);setRate(uint256 _value);getRate()"
Sjors/dao-challenge,contracts/dao-account.sol,"tokenPrice();getOwnerAddress();getTokenBalance();buyTokens();transfer(uint256 tokens, DaoAccount recipient);receiveTokens(uint256 tokens);placeSellOrder(uint256 tokens, uint256 price);cancelSellOrder(SellOrder order);executeSellOrder(SellOrder order);terminate()"
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/examples/GoodPullPayments.sol,bid();withdrawBid()
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/examples/GoodPullPayments.sol,bid();withdrawBid()
FedCoup/FedCoup,installed_contracts/zeppelin/contracts/ownership/Contactable.sol,setContactInformation(string info)
erooijak/ethlance,resources/public/contracts/src/jobLibrary.sol,"getJobCount(address db);approveSponsorableJob(address db, uint jobId, address allowedUser, address[] allowedUsers);approveSponsorableJob(address db, uint jobId, address allowedUser);isSponsorableJobApproved(address db, uint jobId, address[] allowedUsers);getAllowedUsers(address db, uint jobId);isAllowedUser(address db, uint jobId, address addr);isSponsorable(address db, uint jobId);clearSponsorableJobApprovals(address db, uint jobId, address[] allowedUsers);getApprovals(address db, uint jobId);setSkills(address db, uint jobId, uint[] skills);getSkills(address db, uint jobId);addSponsorship(address db, uint jobId, uint sponsorId);addSponsorshipAmount(address db, uint jobId, uint amount);addSponsorshipsTotalRefunded(address db, uint jobId, uint amount);getSponsorshipsTotal(address db, uint jobId);getSponsorshipsBalance(address db, uint jobId);getSponsorshipsTotalRefunded(address db, uint jobId);subJobSponsorshipsBalance(address db, uint jobId, uint amount);refundSponsorship(address db, uint jobId, uint amount);getSponsorships(address db, uint jobId);getSponsorshipsSortedByAmount(address db, uint jobId);addContract(address db, uint jobId, uint contractId);getContracts(address db, uint jobId);getEmployer(address db, uint jobId);getCreatedOn(address db, uint jobId);getPaymentType(address db, uint jobId);setStatus(address db, uint jobId, uint8 status);setHiringDone(address db, uint jobId, address senderId);getStatus(address db, uint jobId);addTotalPaid(address db, uint jobId, uint amount);getReferenceCurrency(address db, uint jobId);hasMinBudget(address db, uint jobId, uint[] minBudgets);hasLanguage(address db, uint jobId, uint languageId);hasMinCreatedOn(address db, uint jobId, uint minCreatedOn);hasEmployerMinRating(address db, address employerId, uint minAvgRating);hasEmployerMinRatingsCount(address db, address employerId, uint minRatingsCount);statusPred(address db, uint[] args, uint jobId);getSponsorableJobs(address db);getEmployerJobsByStatus(address db, address userId, uint8 jobStatus);getEmployerJobsForFreelancerInvite(address db, address employerId, address freelancerId);getJobInvoicesByStatus(address db, uint jobId, uint8 invoiceStatus)"
EMAXio/cosigner,cosigner-ethereum-token-storage/SolidityContracts/V4/dappsys/erc20/erc20.sol,"totalSupply();balanceOf( address who );allowance( address owner, address spender );transfer( address to, uint value);transferFrom( address from, address to, uint value);approve( address spender, uint value )"
Braveno/cosigner,cosigner-ethereum-token-storage/SolidityContracts/V4/dappsys/erc20/erc20.sol,"totalSupply();balanceOf( address who );allowance( address owner, address spender );transfer( address to, uint value);transferFrom( address from, address to, uint value);approve( address spender, uint value )"
EMAXio/heimdal,cosigner-ethereum-token-storage/SolidityContracts/V4/dappsys/erc20/erc20.sol,"totalSupply();balanceOf( address who );allowance( address owner, address spender );transfer( address to, uint value);transferFrom( address from, address to, uint value);approve( address spender, uint value )"
acebusters/safe-token-sale,contracts/ownership/Governable.sol,Governable();addAdmin(address _admin);removeAdmin(address _admin)
holiman/cpp-ethereum,test/unittests/performance/rng.sol,test();rng()
boisde/Greed_Island,party/contracts/protocol/modules/StakingModule.sol,"issueHook(ISetToken _setToken, uint256 _setTokenQuantity, address _component);redeemHook(ISetToken _setToken, uint256 _setTokenQuantity, address _component);removeModule();hasStakingPosition(ISetToken _setToken, address _component, address _stakeContract);getStakingContracts(ISetToken _setToken, address _component);getStakingPosition(ISetToken _setToken, address _component, address _stakeContract);getStakingPositionUnit(ISetToken _setToken, address _component, address _stakeContract)"
orbro/eth-enablers,solidity-baby-steps-master/contracts/65_struct_and_for_loop_tester.sol,"StructAndFor();getElevation(uint8 x, uint8 y);kill()"
LykkeCity/EthereumApiDotNetCore,src/ContractBuilder/contracts/token/Erc223/contractReceiver.sol,"tokenFallback(address _from, uint _value, bytes _data)"
matiasinsaurralde/etherforum,contracts/giveaway.sol,registerAddress();registerForeignAddress( address foreignAddress )
SilentCicero/wafr,src/tests/solidityTests/gasUsage/examples/tests/CuratorRules_test.sol,"newProposal(address _board, string _name, address _proxy, uint _debatePeriod, address _destination, uint _value, bytes _calldata);vote(address _board, uint _proposalID, uint _position);execute(address _board, uint _proposalID, bytes _calldata);setupRules();setup();test_curators();test_openRegistry();test_CuratorRules();test_curatorDoesVeto();test_curatorDoesNotVeto()"
Nermannen/eth-e-voting-project,Backups/Backup/Voting.sol,Voting(bytes32[] candidateNames);totalVotesFor(bytes32 candidate);voteForCandidate(bytes32 candidate);validCandidate(bytes32 candidate)
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.4.24/deleteFromDynamicArray.sol,removeAtIndex();safeRemoveAtIndex(uint index)
loiluu/peacerelay,contracts/ETCToken.sol,"ETCToken(address peaceRelayAddr);setETCLockingAddr(address _etcLockingAddr);ownerCredit(address addr, uint _amount);mint(bytes32 blockHash, bytes rlpTxStack, uint[] txIndex, bytes prefix, bytes rlpTransaction);burn(uint256 _value, address etcAddr);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);balanceOf(address _owner);approve(address _spender, uint _value);allowance(address _owner, address _spender);getSig(bytes b);getAddress(bytes b);getTransactionDetails(bytes rlpTransaction);testGetTransactionDetails(bytes rlpTransaction)"
ocg1/assetx,005_FlatPricingExt.sol,"balanceOf(address who);transfer(address to, uint256 value);Ownable();transferOwnership(address newOwner);times(uint a, uint b);divides(uint a, uint b);minus(uint a, uint b);plus(uint a, uint b);halt();unhalt();isFinalizeAgent();isSane();finalizeCrowdsale();allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);CrowdsaleExt(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, bool _isUpdatable, bool _isWhiteListed);investInternal(address receiver, uint128 customerId);preallocate(address receiver, uint fullTokens, uint weiPrice);investWithSignedAddress(address addr, uint128 customerId, uint8 v, bytes32 r, bytes32 s);investWithCustomerId(address addr, uint128 customerId);invest(address addr);buyWithSignedAddress(uint128 customerId, uint8 v, bytes32 r, bytes32 s);buyWithCustomerId(uint128 customerId);buy();finalize();setFinalizeAgent(FinalizeAgent addr);setRequireCustomerId(bool value);setRequireSignedAddress(bool value, address _signerAddress);setEarlyParicipantWhitelist(address addr, bool status, uint minCap, uint maxCap);setEarlyParicipantsWhitelist(address[] addrs, bool[] statuses, uint[] minCaps, uint[] maxCaps);updateEarlyParicipantWhitelist(address addr, address contractAddr, uint tokensBought);updateJoinedCrowdsales(address addr);setLastCrowdsale(address addr);clearJoinedCrowdsales();updateJoinedCrowdsalesMultiple(address[] addrs);setStartsAt(uint time);setEndsAt(uint time);setPricingStrategy(PricingStrategy _pricingStrategy);setMultisig(address addr);loadRefund();refund();isMinimumGoalReached();isFinalizerSane();isPricingSane();getState();setOwnerTestValue(uint val);isCrowdsale();isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal);isBreakingInvestorCap(address receiver, uint tokenAmount);isCrowdsaleFull();assignTokens(address receiver, uint tokenAmount);isPricingStrategy();isSane(address crowdsale);isPresalePurchase(address purchaser);calculatePrice(uint value, uint weiRaised, uint tokensSold, address msgSender, uint decimals);FlatPricingExt(uint _oneTokenInWei, bool _isUpdatable);setLastCrowdsale(address addr);updateRate(uint newOneTokenInWei);calculatePrice(uint value, uint weiRaised, uint tokensSold, address msgSender, uint decimals)"
TrueBitFoundation/webasm-solidity,contracts/testUser.sol,"createFileWithContents(string name, uint nonce, bytes32[] arr, uint sz);getSize(bytes32 id);forwardData(bytes32 id, address a);idToString(bytes32 id);getInitHash(bytes32 bid);makeSimpleBundle(uint num, address code, bytes32 code_init, bytes32 file_id);add(bytes32 init, /* CodeType */ uint8 ct, /* Storage */ uint8 cs, string stor);add(bytes32 init, uint8 ct, uint8 cs);TestUser(address tb, address code_address, bytes32 init_hash);idToString(bytes32 id);doStuff();makeMerkle(bytes arr, uint idx, uint level);hashName(string name);debugStuff();consume(bytes32 /* file_id */, bytes32[] arr);solved(uint /* id */, bytes32 /* result */, bytes32 file)"
furusiyya/Notary-Platform,contracts/Ownable.sol,Ownable(address _owner);transferOwnership(address newOwner)
NTRYPlatform/ntry-solidity,contracts/Ownable.sol,Ownable(address _owner);transferOwnership(address newOwner)
ethbitcoin/goodbit,contracts/SafeMath.sol,"safeAdd(uint256 x, uint256 y);safeSubtract(uint256 x, uint256 y);safeMult(uint256 x, uint256 y)"
ethereum/remix,remix-tests/tests/examples_5/lib/EvenOdd.sol,check(int num)
boisde/Greed_Island,party/contracts/protocol/integration/OneInchExchangeAdapter.sol,getSpender()
chfast/cpp-ethereum,test/performance/fun.sol,nada(uint u);nada(uint u);useless(uint u);test();fun()
readevalprint/aragon-core,contracts/kernel/KernelProxy.sol,KernelProxy(address _kernelImpl)
FiatCentralBank/fiatcoin,contracts/time/DebugClock.sol,DebugClock(uint _date);set_time(uint _date);get_time()
eris-ltd/eris-sqlsol,examples/EggTracker/contracts/stdlib/linkedList.sol,"linkExist(linkedlist storage list, uint linkID);pushlink(linkedlist storage list, int pos, uint linkID, bytes32 data);findSlot(linkedlist storage list, int pos);findSlotFwd(linkedlist storage list, int pos);findSlotRev(linkedlist storage list, int pos);poplinkat(linkedlist storage list, int pos);poplink(linkedlist storage list, uint linkID);getlink(linkedlist storage list, uint linkID);getlinkdataat(linkedlist storage list, int pos);getlinkat(linkedlist storage list, int pos)"
orbro/eth-enablers,ethereum-examples-master/solidity/StopLoss.sol,"EtherStopLoss();krakenTicker();__callback(bytes32 myid, string result, bytes proof)"
Upchain/upchain-hackathon-starterpack,contracts/SampleRecipientThrow.sol,""
crypto-coder/Tokens,Token_Contracts/contracts/SampleRecipientThrow.sol,""
michinbear/solidity,test/compilationTests/zeppelin/ownership/Shareable.sol,"Shareable(address[] _owners, uint256 _required);revoke(bytes32 _operation);getOwner(uint256 ownerIndex);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);clearPending()"
elementrem/solidity,test/compilationTests/zeppelin/ownership/Shareable.sol,"Shareable(address[] _owners, uint256 _required);revoke(bytes32 _operation);getOwner(uint256 ownerIndex);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);clearPending()"
district0x/name-bazaar,resources/public/contracts/src/NameBazaarDevContracts.sol,isAuthorised(bytes32 node);register(bytes32 _hash)
EthTrader/dappening,contracts/Registry.sol,"Registry();add(bytes20 _username, address _owner);remove(bytes20 _username);addUserValueName(bytes20 _valueName);getOwner(bytes20 _username);getUserValue(bytes20 _username, uint _valueIdx);setUserValue(bytes20 _username, uint _valueIdx, uint _value)"
LoRexxar/Cobra-W,tests/vul_sol/jiachongzhi.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);approve(address _spender, uint _value);allowance(address _owner, address _spender);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);balanceOf(address _owner);approve(address _spender, uint _value);allowance(address _owner, address _spender);transferFrom(address _from, address _to, uint _value);ZRXToken()"
mycspring/ClaveChain,Chain/Id/IdClaveChain.sol,"IdClaveChain(address _clave);Register(bytes4 callback, bytes32 user, bytes32[8] encPassword);SendResult(uint64 id, bytes32 user, bytes32 hashSaltPassword)"
mixbytes/storiqa_ico,contracts/test_helpers/STQPreICO2TestHelper.sol,getCurrentTime();setTime(uint time);getWeiCollected();getMinimumFunds();getMaximumFunds()
Storiqa/ico_smart_contract,contracts/test_helpers/STQPreICO2TestHelper.sol,getCurrentTime();setTime(uint time);getWeiCollected();getMinimumFunds();getMaximumFunds()
Qipingsmile006/TianLianCoin,contracts/interface/IDestruction.sol,""
hvluu/cppcs480blockchainapp,IndieGameFunding.sol,"owned();transferOwnership(address newOwner);transfer(address _to, uint256 _value);mintToken(address _target, uint256 _mintedAmount);isGoalReached();fundTransfer()"
aragon/aragon-core,contracts/common/Initializable.sol,getInitializationBlock();hasInitialized();initialized();initializedAt(uint256 _blockNumber)
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.4.24/ballot_withoutWarnings.sol,winningProposal();winnerName()
soad003/browser-solidity,test/staticanalysis/test-contracts/ballot_withoutWarnings.sol,winningProposal();winnerName()
redsquirrel/augur-core,src/libraries/token/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
EthHead/ens.trade,public/contracts/ENSTrade.sol,"entries(bytes32 _hash);getCreationDate();Deed(address _owner);setOwner(address newOwner);setRegistrar(address newRegistrar);setBalance(uint newValue, bool throwOnFailure);closeDeed(uint refundRatio);destroyDeed();ENSTrade(Registrar _registrarAddress);setFeeAddress(address _feeAddress);setMinimumOfferPrice(uint _minimumOfferPrice);setFee(uint _fee);sha(string _string);newListing(string _name, uint _buyPrice, string _message);deList(address _deedAddress);reclaim(address _deedAddress);deleteRecord(address _deedAddress);newOffer(address _deedAddress, string _message);cancelOffer(address _deedAddress);acceptOffer(address _deedAddress, address _offerAddress, uint _offerValue);deleteOffer(address _deedAddress, address _offerAddress);transferRecord(address _deedAddress, address _toAddress, uint _value);getRecord(address _deedAddress);getRecordOffers(address _deedAddress);getOffer(address _deedAddress, address _offerAddress)"
LykkeCity/EthereumApiDotNetCore,src/ContractBuilder/contracts/mainExchangeNM.sol,"MainExchangeNM();cashout(uint id, address coinAddress, address client, address to, uint amount, bytes client_sign, bytes params);transfer(uint id, address coinAddress, address from, address to, uint amount, bytes sign, bytes params);transferWithChange(uint id, address coinAddress, address fromAddress, address toAddress, uint amount, uint change, bytes fromSign, bytes toSign, bytes params);changeMainContractInCoin(address coinContract, address newMainContract);_transferCoins(address contractAddress, address from, address to, uint amount);ping()"
illya13/parity-poa,contract/Products.sol,"registerProduct(uint id, string name);getProduct(uint id);getProducts(address manufacturer)"
illya13/ethermint,test/contract/Products.sol,"registerProduct(uint id, string name);getProduct(uint id);getProducts(address manufacturer)"
akhilss/embark-framework,test_app/app/contracts/token.sol,"Token( uint initial_balance );totalSupply();balanceOf( address who );transfer( address to, uint value);transferFrom( address from, address to, uint value);approve(address spender, uint value);allowance(address owner, address spender);safeToAdd(uint a, uint b)"
wpypeiyao/Identity-On-Blockchain,node_modules/embark/test_app/app/contracts/token.sol,"Token( uint initial_balance );totalSupply();balanceOf( address who );transfer( address to, uint value);transferFrom( address from, address to, uint value);approve(address spender, uint value);allowance(address owner, address spender);safeToAdd(uint a, uint b)"
zeroqn/aa-apply,contracts/mocks/ANTToken.sol,""
WishFinanceCom/WF-contracts,contracts/core/platform/WFAssetProxyInterface.sol,"__transferWithReference(address _to, uint _value, string _reference, address _sender);__transferFromWithReference(address _from, address _to, uint _value, string _reference, address _sender);__approve(address _spender, uint _value, address _sender);getLatestVersion();init(address _bmcPlatform, string _symbol, string _name);proposeUpgrade(address _newVersion)"
RyuuGan/sol-merger,test/contracts/imports/ownable.sol,Ownable();transferOwnership(address newOwner)
smoove/AddressOwnershipVerification,contracts/AddressOwnershipVerification.sol,"AddressOwnershipVerification();request(address transactee, uint32 deposit);getRequest(address transactor, address transactee);removeRequest(address transactor, address transactee);verify(address transactor, address transactee);revoke(address transactor, address transactee);_saveRequest(address transactor, address transactee, uint32 deposit);_deleteRequest(address transactor, address transactee);_requestExists(address transactee, uint32 deposit);_requestExistsReverse(address transactor, address transactee);_saveVerification(address transactor, address transactee, uint32 deposit);remove()"
slockit/DAO,TokenCreation.sol,createTokenProxy(address _tokenHolder);createTokenProxy(address _tokenHolder)
Spreadway/core,DAO-develop/TokenCreation.sol,createTokenProxy(address _tokenHolder);createTokenProxy(address _tokenHolder)
ashellwig/Ethereum-Mutual-Fund,TokenCreation.sol,createTokenProxy(address _tokenHolder);createTokenProxy(address _tokenHolder)
zchn/ethereum-analyzer,examples/slockit/TokenCreation.sol,createTokenProxy(address _tokenHolder);createTokenProxy(address _tokenHolder)
vechain-team/crowdsale-contracts,contracts/Token.sol,"totalSupply();totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
KuekenPartei/party-contracts,src/main/resources/mix/basics.sol,"Owned();getOwner();changeOwner(address newOwner);kill();Manageable();canAccess();addManager(address _newManagerAddress);removeManager(address _managerAddress);isManager(address _managerAddress);Multiowned(address[] _owners,uint _required);revoke(bytes32 _operation);changeOwner(address _from,address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);isOwner(address _addr);hasConfirmed(bytes32 _operation,address _owner);confirmAndCheck(bytes32 _operation);reorganizeOwners();clearPending()"
bionexus/SportsBlockDapp,contracts/BetDirectory.sol,BetDirectory();addBet(address betContractAddress);getBetById(uint id)
EMAXio/cosigner,cosigner-ethereum-token-storage/SolidityContracts/V4/dappsys/ds-stop/stop.sol,stop();start()
Braveno/cosigner,cosigner-ethereum-token-storage/SolidityContracts/V4/dappsys/ds-stop/stop.sol,stop();start()
EMAXio/heimdal,cosigner-ethereum-token-storage/SolidityContracts/V4/dappsys/ds-stop/stop.sol,stop();start()
eris-ltd/eris-db,tests/jobs_fixtures/app33-evm_connection_edb_permissions_and_roles_layer/permissions.sol,"hasBase(address addr, uint64 permFlag);setBase(address addr, uint64 permFlag, bool value);unsetBase(address addr, uint64 permFlag);setGlobal(uint64 permFlag, bool value);hasRole(address addr, string memory role);addRole(address addr, string memory role);removeRole(address addr, string memory role);addRole(address _account, string calldata _role);removeRole(address _account, string calldata _role);hasRole(address _account, string calldata _role);setBase(address _account, uint64 _permission, bool _set);unsetBase(address _account, uint64 _permission);hasBase(address _account, uint64 _permission);setGlobal(uint64 _permission, bool _set)"
mothershipcx/contracts,contracts/interface/Controlled.sol,Controlled();changeController(address _newController)
Juzix/BlockChain-Demo,contracts/interfaces/IRoleFilterManager.sol,"addActionToRole(string _moduleId, string _roleId, string _actionId);authorizeProcessor(address _from, address _to, string _funcHash, string _extraData);addOpenAction(string _moduleId, address _contractAddr, string _funcHash);addOpenAction(string _moduleName, string _moduleVersion, string _contractName, string _contractVersion, string _actionId);deleteOpenAction(string _moduleId, address _contractAddr, string _funcHash);deleteOpenAction(string _moduleName, string _moduleVersion, string _contractName, string _contractVersion, string _actionId);addAuthorizeRole(string _moduleId, string _roleId, string _actionInfo);addModule(string _json);updModule(string _json);delModule(string _moduleId);setModuleEnable(string _moduleId,uint _enable);setConntractEnable(string _contractId,uint _enable);addContract(string _json);addMenu(string _json);addAction(string _json);addRole(string _json);listAll();qryModules();qryModuleDetail(string _moduleId);qryModuleDetail(string _moduleName, string _moduleVersion);findByModuleText(string _moduleText);findByName(string _name);findContractByModName(string _moduleName, string _moduleVersion);findContractByModText(string _moduleText);listContractByModTextAndCttName(string _moduleText,string _cttName,uint _pageNum,uint _pageSize);getModuleCount();listContractByModuleId(string _moduleId);listContractByModuleName(string _moduleName, string _moduleVersion);changeModuleOwner(string _moduleName, string _moduleVersion, address _newOwner);moduleIsExist(string _moduleId)"
ArjunBhuptani/VILLJ,contracts/Villj.sol,"Villj();getProblem(uint _problemId);getSolution(uint _problemId, uint _solutionId);addProblem(string _name, string _description, string _imgUrl, string _userName, string _category);addSolution(uint _problemId, string _name, string _description, string _imgUrl, string _userName, string _fbId);castVote(uint _problemId, uint _solutionId);claimGrant(uint _problemId)"
cinderblockchain/cindertoken,test/TestCinderTokenSale.sol,testSaleHasOwnerOnCreation();testHasCinderToken();testInitialBalanceUsingNewContract();BlingTokenSale()
ethereum/remix,remix-tests/tests/examples_4/SafeMath.sol,"mul(uint256 _a, uint256 _b);div(uint256 _a, uint256 _b);sub(uint256 _a, uint256 _b);add(uint256 _a, uint256 _b);mod(uint256 a, uint256 b)"
MarketProject/MarketProtocol,contracts/tokens/UpgradeableTarget.sol,"upgradeFrom(address from, uint256 value)"
SilentCicero/wafr,src/tests/solidityTests/gasUsage/examples/StandardTokenFreezer.sol,freezeAllowance(uint _daysToThaw);extendFreezeBy(uint _days);withdrawBalance();balanceOf(address _from);frozenUntil(address _from);StandardTokenFreezer(address _token)
Itshalffull/eth-quadratic_voting,quadracticvoting.sol,QuadraticVoting()
osmode/ddash,ddash/source/nfocoin.sol,"owned();transferOwnership(address newOwner);receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);_transfer_token(address _from, address _to, uint _value);transfer_token(address _to, uint256 _value);transfer_token_from(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);burn(uint256 _value);burnFrom(address _from, uint256 _value);is_transaction(bytes32 _transaction_hash);get_transaction_count();get_eth_balance(address eth_addr);get_token_balance(address eth_addr);get_pvn_token_balance(address pvn_addr);_transfer(address _from, address _to, uint _value);mintToken(address target, uint256 mintedAmount);freezeAccount(address target, bool freeze);setPrices(uint256 newSellPrice, uint256 newBuyPrice);buy();sell(uint256 amount);randomGen(uint seed);get_transaction_by_row(uint row);set_master_exchange_rate(uint new_rate);greet_omar(uint _i)"
eris-ltd/eris-db,vent/test/eth/contracts/EventEmitter.sol,emitOne();emitTwo()
FekraTechnology/SmartSLA,05-Source Code/SMAG_Contract/contracts/ITDollar.sol,"receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);budgetAllocation();transfer(address _to, uint256 _value);approve(address _spender, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);transferFrom(address _from, address _to, uint256 _value)"
eris-ltd/eris-db,tests/jobs_fixtures/app54-static-call/Adoption.sol,adopt(uint petId);getAdopters()
boisde/Greed_Island,party/contracts/product/UniswapYieldHook.sol,"addAssetLimit(address _asset, uint256 _newLimit);editAssetLimit(address _asset, uint256 _newLimit);removeAssetLimit(address _asset);getAssets()"
segovro/ethyclos,shops.sol,""
troyth/embark-dappsforbeginners-demo,embark_demo/node_modules/embark-framework/tmp/embark_demo/app/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
troyth/embark-dappsforbeginners-demo,embark_demo/node_modules/embark-framework/tmp/embark_demo/dist/contracts/app/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
MarketProject/MarketProtocol,contracts/tokens/UpgradableToken.sol,upgrade(uint256 value);setUpgradeableTarget(address upgradeAddress)
web3j/web3j,codegen/src/test/resources/solidity/shipit/ShipIt.sol,""
web3j/web3j-maven-plugin,src/test/resources/import/Main.sol,""
brakmic/BlockchainStore,test/TestBaseStoreToken.sol,testBaseStoreTokenUsingDeployedContract();xtestTransferToken()
silasdavis/eris-db,tests/jobs_fixtures/app35-library_handling/lib-and-contract.sol,"insert(Data storage self, uint value);remove(Data storage self, uint value);contains(Data storage self, uint value);register(uint value)"
silasdavis/burrow,tests/jobs_fixtures/app35-library_handling/lib-and-contract.sol,"insert(Data storage self, uint value);remove(Data storage self, uint value);contains(Data storage self, uint value);register(uint value)"
eris-ltd/eris-db,tests/jobs_fixtures/app35-library_handling/lib-and-contract.sol,"insert(Data storage self, uint value);remove(Data storage self, uint value);contains(Data storage self, uint value);register(uint value)"
forensiclogic/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
mathieu-benoit/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
Jaganod/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
hglkrijger/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
iouri-s/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
samhodgkinson/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
Kegeruneku/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
mmarch/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
puneetsaraswat/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
iwooden/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
pateixei/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
vglafirov/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
BorisB2015/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
jmservera/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
hlmstone/stone-china-azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
sazeesha/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
asheniam/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
smartpcr/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
jwendl/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
krkhan/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
bwanner/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
travismc1/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
akurmi/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
mukulkgupta/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
grwilson/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
satyarapelly/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
richstep/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
gbowerman/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
haritshah33/azuretemplates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
moisedo/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
CJRocK/AzureSQLalwaysOn,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
olandese/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
tagliateller/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
uday31in/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
cerdmann-pivotal/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
jreid143/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
AbelHu/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
jackyjngwn/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
Envera/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
ShubhaVijayasarathy/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
grandhiramesh/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
eissi/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
CalCof/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
CharlPels/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
ishtein/azure-public,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
tracsman/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
jasonbw/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
arroyc/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
Alan-AcutePath/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
arsenvlad/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
Teodelas/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
zechariahks/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
ne-msft/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
jv1992/pqr,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
anhowe/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
alinefr/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
georgewallace/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
rlfmendes/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
svk2/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
krnese/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
letsignit/azure-deploy,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
zhongyi-zhang/azure-quickstart-templates,ethereum-consortium-blockchain-network/scripts/sample-contracts.sol,"StateHolder();changeOpenNumber(uint _newNumber);changeOpenString(string _newString);changeMyString(string _newString);Token();transfer(address _to, uint _amount)"
thanhson1085/DemoCoin,contracts/IcoContract.sol,"Ownable();transferOwnership(address newOwner);safeAdd(uint256 x, uint256 y);safeSubtract(uint256 x, uint256 y);safeMult(uint256 x, uint256 y);balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);balanceOf(address _owner);approve(address _spender, uint _value);allowance(address _owner, address _spender);pause();unpause();transfer(address _to, uint _value);approve(address _spender, uint _value);balanceOf(address _owner);setIcoContract(address _icoContract);sell(address _recipient, uint256 _value);CreateICO(address to, uint256 val);createTokens(address _beneficiary, uint256 _value);finalize()"
LOOMIA/loomia,ethereum/contracts/ERC20.sol,"balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value)"
Quiark/populus,tests/contracts/projects/test-01/contracts/Math.sol,"add(int a, int b)"
Upchain/upchain-hackathon-starterpack,contracts/StandardToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
duaraghav8/Solium,test/lib/rules/indentation/reject/mixed-tabs-spaces.sol,Counter();inc()
OpenMoneyDigital/OpenMoneyToken,contracts/OpenMoneyCrowdsale.sol,createTokenContract();finalization()
acebusters/safe-token-sale,contracts/satelites/Storage.sol,"setUInt(bytes32 _crate, bytes32 _key, uint256 _value);getUInt(bytes32 _crate, bytes32 _key);setAddress(bytes32 _crate, bytes32 _key, address _value);getAddress(bytes32 _crate, bytes32 _key);setBool(bytes32 _crate, bytes32 _key, bool _value);getBool(bytes32 _crate, bytes32 _key);setBal(bytes32 _crate, address _key, uint256 _value);getBal(bytes32 _crate, address _key)"
TrueBitFoundation/webasm-solidity,contracts/custom.sol,"dataMerkle(bytes32[] ctrl, uint idx, uint level);init(bytes32 state, uint /* state_size */, uint /* r3 */, address solver, address /* verifier */);clock(bytes32 id);resolved(bytes32 id, bytes32 state, uint size);submitProof(bytes32 id, bytes32[] args, uint sz);work(bytes32[] args)"
stanta/darfchain,ICO/contracts/Issuer.sol,"Issuer(address _owner, address _allower, StandardToken _token);issue(address benefactor, uint amount)"
y12studio/dltdojo,lib/Tiguan5Coin.sol,"mint(address receiver, uint amount);send(address receiver, uint amount)"
TruLtd/tru-reputation-token,contracts/Migrations.sol,setCompleted(uint completed);upgrade(address newAddress)
James-Sangalli/OpenRep,contracts/Reputation.sol,"addUser(string username, string location);trade(address vendor);giveReputation(address vendor, bool isPositive, string message);viewReputation(address user)"
OR13/car2go,contracts/MeshPointManager.sol,"MeshPointManager();getMeshPointByCreator();getMeshPointByName(string _name);getFaucets();createMeshPoint(string _name);requestAccess(address _meshPointAddress, address _requestorAddress );authorizeAccess(address _meshPointAddress, address _requestorAddress );revokeAccess(address _meshPointAddress, address _requestorAddress);killMeshPoint(address _address, string _name, address _creator)"
zetherz/eth-match,test/helpers-my/LibMock.sol,checkContract(address _addr)
DonorToken/DonorToken,test/helpers-my/LibMock.sol,checkContract(address _addr)
easyMINE/SmartContracts,contracts/Token/Token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
redsquirrel/augur-core,src/libraries/Typed.sol,getTypeName()
jonnycrunch/eHealthWallet,server/contracts/UportRegistry.sol,UportRegistry(address _previousPublishedVersion);setAttributes(bytes ipfsHash);getAttributes(address personaAddress)
sonm-io/core,blockchain/source/contracts/test/Dummy.sol,testOnlyOwner();testPublic();testOwnerOrAdministrator()
ldurback/RewardForum,contract.sol,"RewardForum(uint _initialSubscriptionFee);transferOwnership(address newOwner);changeSubscriptionFee(uint _newSubscriptionFee);paySubscriptionFee();deletePost(uint _postNum);createPost(uint _title, uint _text);voteWorth();vote(uint _postNum, bool upVote);sortTopPosts();getTitle(uint _postNum);getText(uint _postNum);getPoster(uint _postNum);getVotes(uint _postNum);hasVoted(uint _postNum);getTimestamp(uint _postNum);getSubscriptionFee();getSubscriptionLastPaid()"
becodemonkey/solidity,contracts/token/MultiSendToken.sol,"MultiSendToken();multisend(address[] _dests, uint256[] _values)"
qjflores/singularity,contracts/Bank.sol,"Bank(string _name);customerExchangeFiat(uint256 _amount, address _userAddress, string _transactionType);customerExchangeEther(uint256 _amount, address _userAddress, string _transactionType)"
asinyagin/solidity,std/owned.sol,owned()
gmo-blockchain/solidity,contracts/VersionContract.sol,"VersionContract(ContractNameService _cns, bytes32 _contractName);calcEnvHash(bytes32 _functionName)"
orbro/eth-enablers,etheropt.github.io-master/etheropt_contracts.sol,newContract(address addr);getContracts();disableContract(address addr)
0xASSET/SHIP,contracts/Presale.sol,"purchasePresale(address beneficiary, uint256 round);onPresaleComplete()"
RyuuGan/sol-merger,test/contracts/circular/Circular1.sol,""
sudokoin/sudokoin,sudokoin.sol,"allowance(address _owner, address _spender);balanceOf(address _owner);totalSupply();claimBoard(uint[81] _b);approve(address _spender, uint _value);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);burn(uint _value);burnFrom(address _from, uint _value);compressBoard(uint[81] _b);validateBoard(uint[81] _b);validateSet(uint _v1, uint _v2, uint _v3, uint _v4, uint _v5, uint _v6, uint _v7, uint _v8, uint _v9);setIncludes(uint _set, uint _number);addToSet(uint _set, uint _number);nextReward(uint _bNo)"
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/lifecycle/Pausable.sol,pause();unpause()
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.4.24/cross_contract.sol,foo();bar()
soad003/browser-solidity,test/staticanalysis/test-contracts/cross_contract.sol,foo();bar()
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/test-helpers/DayLimitMock.sol,DayLimitMock(uint _value);attemptSpend(uint _value);setDailyLimit(uint _newLimit);resetSpentToday()
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/test-helpers/DayLimitMock.sol,DayLimitMock(uint _value);attemptSpend(uint _value);setDailyLimit(uint _newLimit);resetSpentToday()
AragonOne/zeppelin-solidity,contracts/test-helpers/DayLimitMock.sol,DayLimitMock(uint _value);attemptSpend(uint _value);setDailyLimit(uint _newLimit);resetSpentToday()
aragon/aragon-network-token,packages/sale/installed_contracts/zeppelin/contracts/ownership/Ownable.sol,Ownable();transferOwnership(address newOwner)
FedCoup/FedCoup,installed_contracts/zeppelin/contracts/ownership/Ownable.sol,Ownable();transferOwnership(address newOwner)
pooleja/SolidityPlayground,contracts/zeppelin/ownership/Ownable.sol,Ownable();transferOwnership(address newOwner)
maraoz/zeppelin-solidity,contracts/ownership/Ownable.sol,Ownable();transferOwnership(address newOwner)
sonm-io/core,blockchain/source/contracts/Blacklist.sol,"Check(address _who, address _whom);Add(address _who, address _whom);Remove(address _whom);AddMaster(address _root);RemoveMaster(address _root);SetMarketAddress(address _market)"
mothershipcx/contracts,contracts/MSPPlaceholder.sol,"MSPPlaceHolder(address _controller, address _msp, address _contribution, address _sitExchanger);changeController(address _newController);refund(address th, uint amount);proxyPayment(address);onTransfer(address _from, address, uint256);onApprove(address _from, address, uint256);transferable(address _from);getTime();claimTokens(address _token)"
giulidb/ticket_dapp,contracts/ShowTickets.sol,"ShowTickets(uint _eventTime, uint _ticketPrice, uint _numTickets);getLeftTickets();buyTicket();checkin();getTicket(address user);withdraw();destroy()"
GazeCoin/GazeCoinTokenContract,contracts/GazeCoinCrowdsaleWhitelist.sol,Owned();transferOwnership(address _newOwner);acceptOwnership();addAdministrators(address _adminAddress);removeAdministrators(address _adminAddress);GazeCoinCrowdsaleWhitelist();enable(address[] _addresses);disable(address[] _addresses);seal()
dltdojo/courses,ethereum/solidity/T130_MsgSender.sol,testTodo();info();Foo();kill();Alice(address _fooAddress);testFooSend();testFooKill();kill();Bob(address _fooAddress);testFooSend();testFooKill();testAliceFooSend();testAliceFooKill()
melonproject/protocol,contracts/fund/hub/FundRouterMixin.sol,__getFeeManager(address _hub);__getPolicyManager(address _hub);__getPriceSource(address _hub);__getRegistry(address _hub);__getShares(address _hub);__getValueInterpreter(address _hub);__getVault(address _hub)
aletheia-foundation/aletheia-app,contracts/CloneFactory.sol,createClone(address target)
silasdavis/burrow,vent/test/EventsTest.sol,"addThing(string calldata _name, string calldata _description);addThings(string calldata _name, string calldata _description);removeThing(string calldata _name);removeThings(string calldata _name);count();description(string calldata _name)"
eris-ltd/eris-db,vent/test/EventsTest.sol,"addThing(string calldata _name, string calldata _description);addThings(string calldata _name, string calldata _description);removeThing(string calldata _name);removeThings(string calldata _name);count();description(string calldata _name)"
aragon/aragon-network-token,packages/v2/mocks/e2e/MultisigWallet.sol,"MultiSigWallet(address[] _owners, uint _required);addOwner(address owner);removeOwner(address owner);replaceOwner(address owner, address newOwner);changeRequirement(uint _required);submitTransaction(address destination, uint value, bytes data);confirmTransaction(uint transactionId);revokeConfirmation(uint transactionId);executeTransaction(uint transactionId);isConfirmed(uint transactionId);addTransaction(address destination, uint value, bytes data);getConfirmationCount(uint transactionId);getTransactionCount(bool pending, bool executed);getOwners();getConfirmations(uint transactionId);getTransactionIds(uint from, uint to, bool pending, bool executed)"
aragon/aragon-network-token,packages/controller/e2e/mocks/MultisigWallet.sol,"MultiSigWallet(address[] _owners, uint _required);addOwner(address owner);removeOwner(address owner);replaceOwner(address owner, address newOwner);changeRequirement(uint _required);submitTransaction(address destination, uint value, bytes data);confirmTransaction(uint transactionId);revokeConfirmation(uint transactionId);executeTransaction(uint transactionId);isConfirmed(uint transactionId);addTransaction(address destination, uint value, bytes data);getConfirmationCount(uint transactionId);getTransactionCount(bool pending, bool executed);getOwners();getConfirmations(uint transactionId);getTransactionIds(uint from, uint to, bool pending, bool executed)"
cgewecke/solcover,test/sources/conditional/multiline-consequent.sol,a()
JoinColony/solcover,test/sources/conditional/multiline-consequent.sol,a()
daukantas/cpp-ethereum,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
BreemsEmporiumMensToiletriesFragrances/cpp-ethereum,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
LefterisJP/cpp-ethereum,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
alexvandesande/cpp-ethereum,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
anthony-cros/cpp-ethereum,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
cyperx/cpp-ethereum,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
Sorceror32/.-git-clone-https-github.com-ethereum-cpp-ethereum,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
PaulGrey30/go-get--u-github.com-tools-godep,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
hanyoungpark/cpp-ethereum,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
gluk256/libethereum,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
Sorceror32/go-get--u-github.com-tools-godep,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
Bitorious/Genoil-cpp-ethereum,test/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
vaporry/libethereum,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
winsvega/libethereum,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
chfast/libethereum,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
expanse-project/cpp-expanse,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
imapp-pl/cpp-ethereum,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
pompomJuice/cpp-ethereum,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
tjade273/cpp-ethereum,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
EarthDollar/farmer,libethereum/test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
joeldo/cpp-ethereum,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
smartbitcoin/cpp-ethereum,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
ethers/cpp-ethereum,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
cinnamoncoin/cpp-ethereum,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
doublethinkco/cpp-ethereum,test/libethereum/test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
gluk256/cpp-ethereum,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
bobsummerwill/cpp-ethereum,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
eco/cpp-ethereum,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
CJentzsch/libethereum,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
kleetus/cpp-ethereum,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
chriseth/cpp-ethereum,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
mancoast/libethereum,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
subtly/cpp-ethereum-micro,test/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
yann300/cpp-ethereum,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
karek314/cpp-ethereum,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
d-das/cpp-ethereum,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
tpruvot/cpp-ethereum,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
chriseth/libethereum,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
xeddmc/cpp-ethereum,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
vaporry/cpp-ethereum,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
expanse-org/cpp-expanse,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
ashleyblackmore/cpp-ethereum,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
LianaHus/cpp-ethereum,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
PaulGrey30/.-git-clone-https-github.com-ethereum-cpp-ethereum,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
AmericanSundown/cpp-ethereum,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
LefterisJP/libethereum,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
arkpar/libethereum,test/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
rsksmart/rskj,rskj-core/TestGeneration/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
libdeos/deos-rsksmart,lib/rskj/rskj-core/TestGeneration/libethereum/StateTestsFiller/ManyFunctions.sol,start(uint seed);finish(uint seed);nextRand(uint seed)
DOkwufulueze/eth-vue,contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
toshikase/swap-trade,SwapTradeLine.sol,"MultiplyContract(      address _fixed_side,      address _floated_side,      uint _price,      uint _expired_date,      uint _fixed_rate,      uint _spread      )"
jpentland/BitBadge,app/contracts/Registry.sol,"Registry();registerIdentity(string username, string domain, string proof);deleteIdentity(string username, string domain);getAddr(string username, string domain);getProof(string username, string domain)"
mhhf/dapple,test/_fixtures/linker_test_package/src.linked/sol/linker_example.sol,LinkerExample()
nexusdev/dapple,test/_fixtures/linker_test_package/src.linked/sol/linker_example.sol,LinkerExample()
mhhf/dapple,test/_fixtures/testenv/golden_package/contracts/example.sol,Example( uint _arg );exampleFunction(uint arg2)
nexusdev/dapple,test/_fixtures/testenv/golden_package/contracts/example.sol,Example( uint _arg );exampleFunction(uint arg2)
dacplayproject/play-dapp,src/MigrateController.t.sol,setUp();testFail_basic_sanity();test_basic_sanity();testFail_interface_call();test_interface_call();testFail_mint_without_add_authority_to_controller();test_mint()
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app33-evm_connection_edb_permissions_and_roles_layer/permissions.sol,"addRole(address _account, bytes32 _role);removeRole(address _account, bytes32 _role);hasRole(address _account, bytes32 _role);setBase(address _account, uint64 _permission, bool _set);unsetBase(address _account, uint64 _permission);hasBase(address _account, uint64 _permission);setGlobal(uint64 _permission, bool _set);hasBase(address addr, uint64 permFlag);setBase(address addr, uint64 permFlag, bool value);unsetBase(address addr, uint64 permFlag);setGlobal(uint64 permFlag, bool value);hasRole(address addr, bytes32 role);addRole(address addr, bytes32 role);removeRole(address addr, bytes32 role)"
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app33-evm_connection_edb_permissions_and_roles_layer/permissions.sol,"addRole(address _account, bytes32 _role);removeRole(address _account, bytes32 _role);hasRole(address _account, bytes32 _role);setBase(address _account, uint64 _permission, bool _set);unsetBase(address _account, uint64 _permission);hasBase(address _account, uint64 _permission);setGlobal(uint64 _permission, bool _set);hasBase(address addr, uint64 permFlag);setBase(address addr, uint64 permFlag, bool value);unsetBase(address addr, uint64 permFlag);setGlobal(uint64 permFlag, bool value);hasRole(address addr, bytes32 role);addRole(address addr, bytes32 role);removeRole(address addr, bytes32 role)"
cgewecke/solcover,test/sources/statements/fn-argument.sol,a(bytes32 x)
JoinColony/solcover,test/sources/statements/fn-argument.sol,a(bytes32 x)
michinbear/solidity,test/compilationTests/zeppelin/crowdsale/RefundableCrowdsale.sol,RefundableCrowdsale(uint256 _goal);forwardFunds();claimRefund();finalization();goalReached()
cgewecke/solcover,test/sources/zeppelin/PullPayment.sol,"asyncSend(address dest, uint amount);withdrawPayments()"
WingsDao/contracts,contracts/zeppelin/PullPayment.sol,"asyncSend(address dest, uint amount);withdrawPayments()"
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/PullPayment.sol,"asyncSend(address dest, uint amount);withdrawPayments()"
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/PullPayment.sol,"asyncSend(address dest, uint amount);withdrawPayments()"
AragonOne/zeppelin-solidity,contracts/payment/PullPayment.sol,"asyncSend(address dest, uint amount);withdrawPayments()"
JoinColony/solcover,test/sources/zeppelin/PullPayment.sol,"asyncSend(address dest, uint amount);withdrawPayments()"
crypto-coder/Tokens,Token_Contracts/contracts/TimeDecayingTokenEnvironment.sol,TimeDecayingTokenEnvironment(uint256 _currentTime)
GX-Coin/SmartContract,GxManagedWalletInterface.sol,"pay(address _recipient, uint _amount)"
silasdavis/eris-db,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs1.sol,"addThing(string memory description, string memory url, string memory filehash, string memory filename)"
silasdavis/burrow,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs1.sol,"addThing(string memory description, string memory url, string memory filehash, string memory filename)"
eris-ltd/eris-db,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs1.sol,"addThing(string memory description, string memory url, string memory filehash, string memory filename)"
alice-si/contracts,contracts/alice/CuratedTransfers.sol,blockTransfer(uint _transferId);resumeTransfer(uint _transferId);confirmTransfer(uint _transferId)
GovernX/governx-contracts,src/contracts/tests/test.MultiSigController.sol,"set();SigUser(address _wallet);newProposal(string meta, bytes data);vote(uint256 _proposalID, uint256 _position, uint256 _weight);execute(uint256 _proposalID);addMember(address _member);removeMember(address _member);_addMember(address _member);_removeMember(address _member);setup()"
iam-dev/ERC23,installed_contracts/zeppelin-solidity/test/mocks/StandardTokenMock.sol,"StandardTokenMock(address initialAccount, uint256 initialBalance)"
boisde/Greed_Island,party/contracts/protocol/modules/BasicIssuanceModule.sol,removeModule()
dbrainio/Soltsice,contracts/MultiSigWallet.sol,"addOwner(address owner);removeOwner(address owner);replaceOwner(address owner, address newOwner);changeRequirement(uint _required);submitTransaction(address destination, uint value, bytes memory data);confirmTransaction(uint transactionId);revokeConfirmation(uint transactionId);executeTransaction(uint transactionId);isConfirmed(uint transactionId);addTransaction(address destination, uint value, bytes memory data);getConfirmationCount(uint transactionId);getTransactionCount(bool pending, bool executed);getOwners();getConfirmations(uint transactionId);getTransactionIds(uint from, uint to, bool pending, bool executed)"
eris-ltd/eris,docs/contracts_simple_idi/idi.sol,set(uint x);get()
monax/monax,docs/contracts_simple_idi/idi.sol,set(uint x);get()
eris-ltd/eris-cli,docs/contracts_simple_idi/idi.sol,set(uint x);get()
monax/cli,docs/contracts_simple_idi/idi.sol,set(uint x);get()
adklempner/solidity-license,contracts/zeppelin/lifecycle/TokenDestructible.sol,TokenDestructible();destroy(address[] tokens)
michinbear/solidity,test/compilationTests/zeppelin/lifecycle/TokenDestructible.sol,TokenDestructible();destroy(address[] tokens)
adamdossa/ProfitSharingContract,installed_contracts/zeppelin/contracts/lifecycle/TokenDestructible.sol,TokenDestructible();destroy(address[] tokens)
kyamuise/mugen-money,contracts/MugenMoney.sol,"getMoney(address _receiver, uint _amount);burnMoney()"
hunterlong/textmessage.eth,contract.sol,"owned();transferOwnership(address newOwner);TextMessage();changeCost(uint price);pauseContract();enableContract();withdraw();costWei();sendText(string phoneNumber, string textBody);sendMsg(string num, string body)"
lucywe/rootcore-crowdsale,solidity/contracts/helpers/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
chenlian2015/eosEthMarketSample,contracts/OLServerInterface.sol,"callServer(address callFrom, uint versionCaller)"
lifechange-io/christ-coin,contracts/Crowdsale.sol,"Crowdsale();setController(address _address);buyTokens(address _beneficiary);processPurchase(address _from, address _beneficiary, uint _weiAmount);getPurchase(uint _weiAmount, uint _tokensDistributed);validPurchase();hasEnded();addPresale(address _beneficiary, uint _weiAmount);finalizePresale();finalizeCrowdsale()"
hackatonIVCIMSC/Ethereum_Ricardian_Token,RicardianVoucher.sol,"transfer(address _to, uint _amount);approve(address _spender, uint _amount);transferFrom(address _from, address _to, uint _amount);balanceOf(address _owner);allowance(address _owner, address _spender)"
gnosis/gnosis-contracts,contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
SmartPool/contracts,SmartpoolVersion.sol,SmartpoolVersion( address[3] _owners );updatePoolContract( address newAddress );updateClientVersion( bytes32 version )
aragon/aragon-network-token,packages/sale/contracts/interface/ApproveAndCallReceiver.sol,"receiveApproval(address _from, uint256 _amount, address _token, bytes _data)"
redsquirrel/augur-core,src/factories/StackFactory.sol,initialize();createStack(Controller _controller)
adridadou/eth-contract-api,src/test/resources/launcheth.sol,"currentUser();kill();getNbNamespaces();getNamespace(uint id);getNbProjects(string namespace);getProject(string namespace, uint id);getNbVersions(string namespace, string project);getVersion(string namespace, string project, uint id);getOwner(string namespace);LegalContractManager();getSource(string namespace, string project, string version, string protocol);getChecksum(string namespace, string project, string version);canWrite(string namespace, address user);register(string namespace, string project, string version, string protocol, string source, string checksum);createNamespace(string namespace, address owner);registerProject(string namespace, string project);changeOwner(string namespace, address newOwner);stringsEqual(string storage _a, string memory _b)"
adridadou/eth-api,src/test/resources/launcheth.sol,"currentUser();kill();getNbNamespaces();getNamespace(uint id);getNbProjects(string namespace);getProject(string namespace, uint id);getNbVersions(string namespace, string project);getVersion(string namespace, string project, uint id);getOwner(string namespace);LegalContractManager();getSource(string namespace, string project, string version, string protocol);getChecksum(string namespace, string project, string version);canWrite(string namespace, address user);register(string namespace, string project, string version, string protocol, string source, string checksum);createNamespace(string namespace, address owner);registerProject(string namespace, string project);changeOwner(string namespace, address newOwner);stringsEqual(string storage _a, string memory _b)"
status-im/status-go,t/devtests/eventer/eventer.sol,emit(bytes32 topic)
paulyc/sol_machine,test/evm_stack_machine.sol,testStop();testAdd();testSub();testDiv()
daostack/daostack,contracts/universalSchemes/GlobalConstraintRegistrar.sol,"executeProposal(bytes32 _proposalId, int256 _param);proposeToRemoveGC(Avatar _avatar, address _gc, string memory _descriptionHash)"
xMrhyd3/Divisible,DivisibleGame.sol,"newGame( uint numberChosen, bool _isDivisible, uint _amountTip);playGame(uint numberChosen, uint gameID);endGame(bool isDivisibleResult, uint gameID);getGameDetails(uint gameID);getNumberOfGames();kill();function()"
GX-Coin/SmartContract,GxTradersInterface.sol,"addOrderContract(address gxOrdersAddress);add(address newAddress);remove(address removedAddress);contains(address lookupAddress);coinBalance(address mappedAddress);dollarBalance(address mappedAddress);setCoinBalance(address mappedAddress, uint32 coinBalance);setDollarBalance(address mappedAddress, int160 dollarBalance);addCoinAmount(address mappedAddress, uint32 coinAmount);addDollarAmount(address mappedAddress, int160 dollarAmount)"
pipermerriam/ethereum-alarm-clock,contracts/Interface/SchedulerInterface.sol,"schedule(address _toAddress, bytes _callData, uint[8] _uintArgs);computeEndowment(uint _bounty, uint _fee, uint _callGas, uint _callValue, uint _gasPrice)"
Veterapreneur/VeteranCoin,contracts/VeteranCoinSale.sol,"mul(uint a, uint b);div(uint a, uint b);sub(uint a, uint b);add(uint a, uint b);owned();transferOwnership(address _newOwner);balanceOf(address owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);burn(uint256 value);claimToken();buyTokens();tokenBalanceOf(address _beneficiary);balanceOf(address _beneficiary);refund(address _beneficiary, uint _tokens);adjustBonusPrice();checkFundingGoalReached();autoBurn();closeSale();openSale();safeWithdrawal();saleInProgress()"
Juzix/BlockChain-Demo,contracts/token/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner);totalSupply()"
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/test-helpers/BasicTokenMock.sol,"BasicTokenMock(address initialAccount, uint initialBalance)"
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/test-helpers/BasicTokenMock.sol,"BasicTokenMock(address initialAccount, uint initialBalance)"
AragonOne/zeppelin-solidity,contracts/test-helpers/BasicTokenMock.sol,"BasicTokenMock(address initialAccount, uint initialBalance)"
Great-Hill-Corporation/daodeepdive,assets/contracts/05-MultiSig.sol,"multiowned(address[] _owners, uint _required);revoke(bytes32 _operation);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);reorganizeOwners();clearPending();daylimit(uint _limit);setDailyLimit(uint _newLimit);resetSpentToday();underLimit(uint _value);today();changeOwner(address _from, address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);Wallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);clearPending()"
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.5/functionParameters.sol,"plus(uint a, uint b);eval(function (uint, uint);calc(uint x, uint y)"
Capillar/capillar-solidity,contracts/interfaces/iTokenCAP.sol,"activeTokens();mintedTokens();burnedTokens();irreducibleOf(address _adr);mint(address _to, uint _amount);limitAccount(address _acc, uint _limit);burnNotDistrTokens(uint _amount);burnBalance(address _account)"
reiven/nerdearla17---solidity,contracts/nerdearla_v2.sol,"owned();transferOwnership(address newOwner);safeSub(uint a, uint b);safeAdd(uint a, uint b);Nerdearla();totalSupply();transfer(address _to, uint _value);balanceOf(address _owner);mintToken(address target, uint256 mintedAmount)"
manojpramesh/solidity-contracts,contracts/darkdao.sol,"balanceOf(address _owner);transfer(address _to, uint256 _amount);transferFrom(address _from, address _to, uint256 _amount);approve(address _spender, uint256 _amount);balanceOf(address _owner);transfer(address _to, uint256 _amount);approve(address _spender, uint256 _amount);allowance(address _owner, address _spender);payOut(address _recipient, uint _amount);ManagedAccount(address _owner, bool _payOwnerOnly);payOut(address _recipient, uint _amount);createTokenProxy(address _tokenHolder);refund();divisor();createTokenProxy(address _tokenHolder);refund();divisor();receiveEther();newContract(address _newContract);changeAllowedRecipients(address _recipient, bool _allowed);changeProposalDeposit(uint _proposalDeposit);retrieveDAOReward(bool _toMembers);getMyReward();withdrawRewardFor(address _account);transferWithoutReward(address _to, uint256 _amount);halveMinQuorum();numberOfProposals();getNewDAOAddress(uint _proposalID);isBlocked(address _account);unblockMe();receiveEther();closeProposal(uint _proposalID);newContract(address _newContract);retrieveDAOReward(bool _toMembers);getMyReward();withdrawRewardFor(address _account);transfer(address _to, uint256 _value);transferWithoutReward(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);changeProposalDeposit(uint _proposalDeposit);changeAllowedRecipients(address _recipient, bool _allowed);isRecipientAllowed(address _recipient);actualBalance();minQuorum(uint _value);halveMinQuorum();createNewDAO(address _newCurator);numberOfProposals();getNewDAOAddress(uint _proposalID);isBlocked(address _account);unblockMe()"
cryptape/cita,scripts/contracts/src/system/VersionManager.sol,setProtocolVersion(uint32 _version);setVersion(uint32 _version);getProtocolVersion();getVersion()
burnoutcoin/go-burnout,contracts/release/contract.sol,"ReleaseOracle(address[] signers);signers();authProposals();authVotes(address user);currentVersion();proposedVersion();promote(address user);demote(address user);release(uint32 major, uint32 minor, uint32 patch, bytes20 commit);nuke();updateSigner(address user, bool authorize);updateRelease(uint32 major, uint32 minor, uint32 patch, bytes20 commit, bool release)"
Majoolr/ethereum-libraries,CrowdsaleLib/IICOLib/truffle/contracts/LinkedListLib.sol,"listExists(LinkedList storage self);nodeExists(LinkedList storage self, uint256 _node);sizeOf(LinkedList storage self);getNode(LinkedList storage self, uint256 _node);getAdjacent(LinkedList storage self, uint256 _node, bool _direction);getSortedSpot(LinkedList storage self, uint256 _node, uint256 _value, bool _direction);createLink(LinkedList storage self, uint256 _node, uint256 _link, bool _direction);insert(LinkedList storage self, uint256 _node, uint256 _new, bool _direction);remove(LinkedList storage self, uint256 _node);push(LinkedList storage self, uint256 _node, bool _direction);pop(LinkedList storage self, bool _direction)"
OpenSTFoundation/SimpleTokenSale,contracts/TokenSaleConfig.sol,""
Cryptonomica/cryptonomica,src/main/webapp/app/ethidtokens/EthID.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);mod(uint256 a, uint256 b);receiveApproval(address _from, uint256 _value, address _inContract, bytes _extraData);tokenFallback(address _from, uint256 _value, bytes _extraData);name();symbol();decimals();totalSupply();balanceOf(address _owner);allowance(address _owner, address _spender);changeOwnerStart(address _newOwner);changeOwnerAccept();takeDividends(uint256 valueInTokens);withdrawAllByOwner();transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);approveAllAndCall(address _spender, bytes _extraData);transferAndCall(address _to, uint256 _value, bytes _extraData);transferAllAndCall(address _to, bytes _extraData)"
Cryptonomica/cryptonomica,src/main/webapp/app/ethidtokens/backups/EthID.ver.1.0.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);mod(uint256 a, uint256 b);receiveApproval(address _from, uint256 _value, address _inContract, bytes _extraData);tokenFallback(address _from, uint256 _value, bytes _extraData);name();symbol();decimals();totalSupply();balanceOf(address _owner);allowance(address _owner, address _spender);changeOwnerStart(address _newOwner);changeOwnerAccept();takeDividends(uint256 valueInTokens);withdrawAllByOwner();transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);approveAllAndCall(address _spender, bytes _extraData);transferAndCall(address _to, uint256 _value, bytes _extraData);transferAllAndCall(address _to, bytes _extraData)"
cgewecke/solcover,test/sources/if/nested-if-missing-else.sol,"a(uint x,uint y, uint z)"
JoinColony/solcover,test/sources/if/nested-if-missing-else.sol,"a(uint x,uint y, uint z)"
ethereum/dapp-bin,coin/coin.sol,"sendCoinFrom(address _from, uint _val, address _to);sendCoin(uint _val, address _to);coinBalance();coinBalanceOf(address _a);approve(address _a);isApproved(address _proxy);isApprovedFor(address _target, address _proxy);sendCoinFrom(address _from, uint _val, address _to);sendCoin(uint _val, address _to);coinBalance();coinBalanceOf(address _a);approve(address _a);isApproved(address _proxy);isApprovedFor(address _target, address _proxy);GavCoin();mine();isApprovedFor(address _target,address _proxy);isApproved(address _proxy);sendCoinFrom(address _from,uint256 _val,address _to);mine();coinBalanceOf(address _a);sendCoin(uint256 _val,address _to);coinBalance();approve(address _a)"
AriseID/ariseid-core,contracts/chequebook/contract/chequebook.sol,""
OriginalMy/OriginalMyAccessControl,OriginalMyAccessControl.sol,"OriginalMyAccessControl();transferOwnership(address newOwner);enableSuperUser(address target, bool enable);enableManager(address target, bool enable);enableUser(address target, bool enable);isSuperUser(address target);isManager(address target);isUser(address target)"
AlphaDinoRC/rockchain,contracts/Pausable.sol,pause();unpause()
raiden-network/raiden,raiden/tests/smart_contracts/RpcTest.sol,fail_require();fail_assert();ret();ret_str();loop(uint reps);createEvent(uint _someId)
papyrusglobal/smartcontracts,contracts/common/MultiAccess.sol,"grantAccess(address to, bool access)"
PeculiumPCL/Peculium,contracts/v1.2/Delivery.sol,"Delivery();InitPeculiumAdress(address peculAdress);airdropsTokens(address[] _vaddr, uint256[] _vamounts)"
PeculiumPCL/Peculium,contracts/v2/Delivery.sol,"Delivery();InitPeculiumAdress(address peculAdress);airdropsTokens(address[] _vaddr, uint256[] _vamounts)"
Superdao-DAO/Superdao-Seed-Stage1,contracts/PromissoryToken.sol,"PromissoryToken( bytes32 _founderHash, address _cofounderAddress, uint _numOfBackers);cofounderSwitchAddress(address _newCofounderAddr);founderSwitchRequest(bytes32 _founderHash, bytes32 _oneTimesharedPhrase);cofounderApproveSwitchRequest(address _newFounderAddr, bytes32 _oneTimesharedPhrase);setPrepaid(address _backer, uint _tokenPrice, uint _tokenAmount, string _privatePhrase, uint _backerRank);claimPrepaid(uint _index, uint _boughtTokensPrice, uint _tokenAmount, string _privatePhrase, uint _backerRank);claim();checkBalance(address _backerAddress, uint index);approveWithdraw(uint _withdrawalID);withdraw(uint _totalAmount, bytes _reason, address[] _destination);redeem(uint _amount, address _backerAddr);getWithdrawalData(uint _withdrawalID)"
clawoflight/aursec,Ethereum/contracts/AURPackageRegistry.sol,"getCurrentConsensus(string packageID);submitPkgHash(string packageID, string pkgHash)"
erooijak/ethlance,resources/public/contracts/src/ethlanceConfig.sol,"EthlanceConfig(address _ethlanceDB);setConfigs(bytes32[] keys, uint[] vals);getConfigs(bytes32[] keys)"
jensenbox/singnet,dao/contracts/agent/AgentInterface.sol,"sendPacket(address target, bytes packet);appendPacket(bytes packet);getPacket(uint id);setJob(MarketJob _job)"
QTBlockchain/SolidityNWeb3,SmartContracts/March2018/FareContract/contracts/VisibilityDemo.sol,VisibilityDemo();IsThisPublic();IsThisPrivate();IsThisExternal();IsThisInternal()
apmilen/standard-token-sale,src/sale.t.sol,"SaleUser(StandardSale sale_);doBuy(uint wad);doTransfer(address to, uint256 amount);setToken(DSToken token_);doStop();time();addTime(uint extra);setUp();testSaleToken();testOwnerToken();testPublicBuy();testClaimTokens();testBuyManyTimes();testPostpone();testHitSoftCap();testFinalize();testTokenOwnershipAfterFinalize();testTransferAfterFinalize();testBuyExceedHardLimit();testFailTransferBeforeFinalize();testFailSoftLimit();testFailHardLimit();testFailStartTooEarly();testFailBuyAfterClose();time();addTime(uint extra);setUp();testSetPresale();testAppendTranch();testFailAppendTranch();testPreDistribute();testFailPreDistribute();testHitSoftCapPreDistribute();testHitPresaleCapPreDistribute();testFailHitPresaleCapPreDistribute();testHighestTranch();testHighestTranchNotExact();testMiddleTranch();testMiddleTranchNotExact();testLowestTranch();testHitSoftCapPresale();testHitPresaleCapPresale();testPresaleRefund();testRegularBuy();testUnsyncedRate()"
tomaaron/raiden,raiden/smart_contracts/NettingChannelLibrary.sol,"partner(Data storage self, address one_address);transferredAmount(Data storage self, address participant_address);addressAndBalance(Data storage self);processTransfer(Data storage self, Participant storage node1, Participant storage node2, bytes transfer);settle(Data storage self, address caller_address);getTransferRawAddress(bytes memory signed_transfer);decodeAndAssign(Participant storage sender, bytes transfer_raw);assignDirectTransfer(Participant storage participant, bytes memory message);assignMediatedTransfer(Participant storage participant, bytes memory message);assignRefundTransfer(Participant storage participant, bytes memory message);decodeLock(bytes lock);getNonce(bytes message);signatureSplit(bytes signature);slice(bytes a, uint start, uint end);kill(Data storage self)"
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app10-zero_returns_solidity/zero.sol,zeroInt();zeroUInt();zeroBytes();zeroAddress();zeroBool()
eris-ltd/eris,tests/jobs_fixtures/app10-zero_returns_solidity/zero.sol,zeroInt();zeroUInt();zeroBytes();zeroAddress();zeroBool()
monax/monax,tests/jobs_fixtures/app10-zero_returns_solidity/zero.sol,zeroInt();zeroUInt();zeroBytes();zeroAddress();zeroBool()
eris-ltd/eris-cli,tests/jobs_fixtures/app10-zero_returns_solidity/zero.sol,zeroInt();zeroUInt();zeroBytes();zeroAddress();zeroBool()
monax/cli,tests/jobs_fixtures/app10-zero_returns_solidity/zero.sol,zeroInt();zeroUInt();zeroBytes();zeroAddress();zeroBool()
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app10-zero_returns_solidity/zero.sol,zeroInt();zeroUInt();zeroBytes();zeroAddress();zeroBool()
iurimatias/embark-framework,dapps/tests/contracts/contracts/contract_args.sol,""
iudex/iudex,contracts/iudexAPI.sol,"addressToPersonId(address addr);register();linkAddress(address addr);unlinkAddress(address addr);linkAccount(uint8 accountProvider, string userId, string proofLocation);getScore(uint accountProvider, bytes32 id);refreshScore(uint8 accountProvider, bytes32 id);getIudex(address lookupAddr);getIudexScoreAll(address lookupAddr, bytes32 userId);getIudexScoreAll(address lookupAddr, address addr)"
DonorToken/DonorToken,test/helpers/PullPaymentMock.sol,"PullPaymentMock();callSend(address dest, uint256 amount)"
ownage-ltd/ether-router,contracts/test/Lost.sol,getNumbers()
input-output-hk/etc-client,src/evmTest/resources/solidity/PrecompiledContracts.sol,"usePrecompiledContracts(bytes32 hash, uint8 v, bytes32 r, bytes32 s)"
aragon/aragon-core,contracts/test/mocks/MockScriptExecutorApp.sol,"initialize();execute(bytes script);executeWithBan(bytes script, address[] memory blacklist);executeWithIO(bytes script, bytes input, address[] memory blacklist);getActionsCount(bytes script);getAction(bytes script, uint256 i)"
annihilatio/ido,contracts/MultiSigWallet.sol,"setToken(address _token);confirmSettingsChange(uint _txIndex);setFinishedTx();setLiveTx();setFreezeTx();transferTx(address _to, uint _value);setWhitelistTx(address _whitelist);addOwner(address _owner);removeOwner(address _owner);replaceOwner(address _owner, address _newOwner);changeRequirement(uint _required);submitTransaction(address destination, uint value, bytes data);addTransaction(address destination, uint value, bytes data);confirmTransaction(uint _transactionId);executeTransaction(uint _transactionId);revokeConfirmation(uint _transactionId);isConfirmed(uint _transactionId);isConfirmedSettingsRequest(uint _transactionId);viewSettingsChange(uint _txIndex);getConfirmationCount(uint _transactionId);getSettingsChangeConfirmationCount(uint _txIndex);getTransactionCount(bool pending, bool executed);getOwners();getConfirmations(uint _transactionId);getTransactionIds(uint from, uint to, bool pending, bool executed)"
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.5/forgottenReturn.sol,geneticallyEngineer(string memory _dna)
serapath-contribution/browser-solidity,contracts/contract2.sol,""
cosmos/fundraiser-lib,src/truffle/contracts/Fundraiser.sol,"Fundraiser(address _admin, address _treasury, uint _beginBlock, uint _endBlock, uint _weiPerAtom);isActive();donate(address _donor, address _returnAddress, bytes4 checksum);adjustRate(uint newRate);halt();unhalt();kill()"
FiatCentralBank/fiatcoin,contracts/ownership/NoOwner.sol,""
orbro/eth-enablers,DAO-develop/TokenCreation.sol,createTokenProxy(address _tokenHolder);refund();divisor();createTokenProxy(address _tokenHolder);refund();divisor()
zchn/ethereum-analyzer,examples/solidity.readthedocs.io/solidity-by-example/safe-remote-purchase.sol,Purchase();abort();confirmPurchase();confirmReceived()
WeiFund/WeiFund,contracts/WeiControllerFactory.sol,"newCampaign(uint _campaignID, address _owner, uint _fundingGoal);contribute(uint _campaignID, address _contributor, address _beneficiary, uint _amountContributed);refund(uint _campaignID, address _contributor, uint _amountRefunded);payout(uint _campaignID, uint _amountPaid);totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);newCampaign(string _name, address _beneficiary, uint _fundingGoal, uint _expiry, address _config);contribute(uint _campaignID, address _beneficiary);refund(uint _campaignID, uint _contribution);payout(uint _campaignID);operatorCampaignID(address _operator, uint _campaignIndex);totalCampaignsBy(address _operator);totalContributionsBy(uint _campaignID, address _contributor);totalCampaigns();contributionAt(uint _campaignID, uint _contributionID);createdAt(uint _campaignID);contributionID(uint _campaignID, address _contributor, uint _contributionIndex);ownerOf(uint _campaignID);beneficiaryOf(uint _campaignID);configOf(uint _campaignID);amountRaisedBy(uint _campaignID);fundingGoalOf(uint _campaignID);expiryOf(uint _campaignID);totalContributors(uint _campaignID);isContributor(uint _campaignID, address _contributor);isOwner(uint _campaignID, address _owner);hasFailed(uint _campaignID);isSuccess(uint _campaignID);isActive(uint _campaignID);isPaidOut(uint _campaignID);totalRefunded(uint _campaignID);isRefunded(uint _campaignID);newCampaign(uint _campaignID, address _owner, uint _fundingGoal);contribute(uint _campaignID, address _contributor, address _beneficiary, uint _amountContributed);claimTokens();refund(uint _campaignID, address _contributor, uint _amountRefunded);payout(uint _campaignID, uint _amountPaid);addService(address _service);ownerOf(address _service);isService(address _service)"
iam-dev/ERC23,installed_contracts/zeppelin-solidity/test/mocks/InsecureTargetBounty.sol,checkInvariant();deployContract()
yaronvel/smart_contracts,EZshirt/post_contract.sol,"PostIL( );submit( string _confirmation_number, int8 _day, int8 _month, int16 _year, string _king_name );__callback(bytes32 myid, string result);update(uint delay, string _confirmation_number);change_king_name( string new_name );set_for_sale( uint min_price );buy_king( );king_of_returning_shirts();is_king_found( );is_king_for_sale( );get_king_price( );get_king_address( );date_string( int8 _day, int8 _month, int16 _year )"
eris-ltd/eris-db,tests/compilers_fixtures/simpleContract.sol,f()
aragon/aragon-core,contracts/test/mocks/SafeMath64Mock.sol,"mulExt(uint64 _a, uint64 _b);divExt(uint64 _a, uint64 _b);subExt(uint64 _a, uint64 _b);addExt(uint64 _a, uint64 _b);modExt(uint64 _a, uint64 _b)"
vechain-team/crowdsale-contracts,contracts/Ven.sol,"VEN();totalSupply();isSealed();lastMintedTimestamp(address _owner);claimBonus(address _owner);balanceOf(address _owner);transfer(address _to, uint256 _amount);approve(address _spender, uint256 _amount);approveAndCall(address _spender, uint256 _value, bytes _extraData);allowance(address _owner, address _spender);mint(address _owner, uint256 _amount, bool _isRaw, uint32 timestamp);offerBonus(uint256 _bonus);seal();receiveApproval(address _from, uint256 _value, address _tokenContract, bytes _extraData)"
vvelikodny/go-ethereum,contracts/chequebook/contract/owned.sol,owned()
wuestholz/go-ethereum,contracts/chequebook/contract/owned.sol,owned()
meta-network/go-meta,vendor/github.com/ethereum/go-ethereum/contracts/chequebook/contract/owned.sol,owned()
getamis/go-ethereum,contracts/chequebook/contract/owned.sol,owned()
fireblock/go-ethereum,contracts/chequebook/contract/owned.sol,owned()
trinityfx/trinity,contracts/chequebook/contract/owned.sol,owned()
ethersphere/go-ethereum,contracts/chequebook/contract/owned.sol,owned()
ManyCoin/ManyCoin,contracts/chequebook/contract/owned.sol,owned()
elementrem/solidity,std/owned.sol,owned()
markya0616/go-ethereum,contracts/chequebook/contract/owned.sol,owned()
RyuuGan/sol-merger,test/compiled/GlobalComments.sol,myFunction()
anrodon/scts,contracts/Database.sol,"Database();addHandler(address _address, string _name, string _additionalInformation);storeProductReference(address productAddress)"
DavdRoman/Payroll,contracts/Employees/EmployeeStorage.sol,"getEmployee(address _address);add(address _address, uint _yearlyUSDSalary, uint _startDate);setAddress(address _address, address _newAddress);setAllocatedToken(address _address, address _token, uint _distribution);clearAllocatedAndSalaryTokens(address _address);setPeggedToken(address _address, address _token, uint _value);setSalaryToken(address _address, address _token, uint _value);setLatestTokenAllocation(address _address, uint _date);setLatestPayday(address _address, uint _date);setLatestTokenPayday(address _address, address _token, uint _date);setYearlyUSDSalary(address _address, uint _salary);getCount();getId(address _address);getAddress(uint _id);getAllocatedTokenCount(address _address);getAllocatedTokenAddress(address _address, uint _index);getAllocatedTokenValue(address _address, address _token);getPeggedTokenCount(address _address);getPeggedTokenAddress(address _address, uint _index);getPeggedTokenValue(address _address, address _token);getSalaryTokenCount(address _address);getSalaryTokenAddress(address _address, uint _index);getSalaryTokenValue(address _address, address _token);getLatestTokenAllocation(address _address);getLatestPayday(address _address);getLatestTokenPayday(address _address, address _token);getYearlyUSDSalary(address _address);getYearlyUSDSalariesTotal();getSalaryTokensTotalCount();getSalaryTokensTotalAddress(uint _index);getSalaryTokensTotalValue(address _token);remove(address _address)"
shellygr/ECFChecker,RunningExample/ECFSimpleDAO-and-Mallory.sol,donate(address to);withdraw(uint amount);queryCredit(address to);Mallory(SimpleDAO addr);getJackpot()
maraoz/zeppelin-solidity,test/helpers/MultisigWalletMock.sol,"MultisigWalletMock(address[] _owners, uint _required, uint _daylimit);changeOwner(address _from, address _to)"
digitaldonkey/register_drupal_ethereum,contracts/RegisterDrupal.sol,newUser(bytes32 hash);adminSetRegistrationDisabled(bool registrationDisabled);adminSetAccountAdministrator(address accountAdmin);adminRetrieveDonations();adminDeleteRegistry()
DonorToken/DonorToken,test/helpers/SafeMathMock.sol,"multiply(uint256 a, uint256 b);subtract(uint256 a, uint256 b);add(uint256 a, uint256 b)"
livepeer/protocol,contracts/test/ManagerProxyTargetMockV3.sol,"setAddress(address _value);setKv(uint256 _key, uint256 _value)"
dcntrlzd/helios,test/contracts/SimpleStorage.sol,set(uint x);get()
e-nettet/CustomerConsentWallet,datarequester/PayingBackContract.sol,PayingBackContract();destroy()
A-StadLabs/poezenclub,app/contracts/LocalsValidation.sol,LocalsValidation();addValidation();countValidations()
A-StadLabs/poezendemo,app/contracts/LocalsValidation.sol,LocalsValidation();addValidation();countValidations()
crypto-coder/Tokens,Token_Contracts/contracts/TimeDecayingTokenBoundary.sol,findActiveRange(address _environment)
dpilch/solmd,test/solmd/events/GavCoin.sol,"send(address to, uint256 valueInmGAV);setOwner(address _owner);mint()"
chenlian2015/eosEthMarketSample,contracts/OLLogTool.sol,"addLog(string log, string logContent);length();getTagAt(uint nIndex);getContentAt(uint nIndex);clear()"
ethermarket/ethertdd.py,contracts/example.sol,"example(uint initFee, address steward);setName(bytes32 name, address newAddress);setOwner(address newOwner);setFee(uint32 newFee);withdraw(uint32 amount);isOwner()"
SafecontractDev/protocol,contracts/bancor_contracts/helpers/TestUtils.sol,"TestUtils();testSafeAdd(uint256 _x, uint256 _y);testSafeSub(uint256 _x, uint256 _y);testSafeMul(uint256 _x, uint256 _y)"
enjin/contracts,solidity/contracts/helpers/TestUtils.sol,"TestUtils();testSafeAdd(uint256 _x, uint256 _y);testSafeSub(uint256 _x, uint256 _y);testSafeMul(uint256 _x, uint256 _y)"
RyuuGan/sol-merger,test/contracts/DoubleNamedImports.sol,"totalSupply();transfer(address _to, uint256 _value);balanceOf(address _owner)"
Vorxil/MarketStake,test/TestLedgerOverflowProtection.sol,beforeAll();beforeEach();afterEach();testAddPending();testRemovePending();testAddLocked();testRemoveLocked();testAddGains();testRemoveGains();testInvariantOverflow()
kowala-tech/kUSD,client/contracts/truffle/contracts/test/BalanceContract.sol,"tokenFallback(address _from, uint _value, bytes _data)"
triage/KPCSEthereum,contracts/Party.sol,"Party(string _name, address _administrator, string _contactDetails);getType()"
darcius/rocketpool-crowdsale,contracts/base/StandardToken.sol,"balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
trailofbits/greenhorn,csaw-2017/ETHERSNOOB/sources/ethersnoob6.sol,"set(uint data, uint data2, uint data3);get_flag();get()"
bitcoinbrisbane/BitPoker,BitPoker.ETH.Contracts/Cashier.sol,"Cashier();transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value)"
alexvandesande/one-button,contract.sol,press()
elementrem/solidity,test/compilationTests/zeppelin/ownership/HasNoEther.sol,HasNoElement();reclaimElement()
Majoolr/ethereum-libraries,ArrayUtilsLib/truffle/contracts/ArrayUtilsTestContract.sol,""
ultra-koder/JobMarket,dapp/contracts/set.sol,"setAdd(Set_ui32 storage self, uint32 elem);setAddUnique(Set_ui32 storage self, uint32 elem);setRemove(Set_ui32 storage self, uint32 val);setHas(Set_ui32 storage self, uint32 val);setIsEmpty(Set_ui32 storage self);setCompact(Set_ui32 storage self);setAdd(Set_addr storage self, address elem);setAddUnique(Set_addr storage self, address elem);setRemove(Set_addr storage self, address val);setHas(Set_addr storage self, address val);setIsEmpty(Set_addr storage self);setCompact(Set_addr storage self)"
ownage-ltd/ether-router,contracts/EtherRouter.sol,EtherRouter(Resolver _resolver)
shahankhatch/dapp-bin,registrar/GlobalRegistrar.sol,"addr(bytes32 _name);name(address _owner);owner(bytes32 _name);addr(bytes32 _name);subRegistrar(bytes32 _name);content(bytes32 _name);name(address _owner);onAuctionEnd(bytes32 _name);bid(bytes32 _name, address _bidder, uint _value);Registrar();onAuctionEnd(bytes32 _name);reserve(bytes32 _name);requiresAuction(bytes32 _name);transfer(bytes32 _name, address _newOwner);disown(bytes32 _name);setAddress(bytes32 _name, address _a, bool _primary);setSubRegistrar(bytes32 _name, address _registrar);setContent(bytes32 _name, bytes32 _content);owner(bytes32 _name);addr(bytes32 _name);subRegistrar(bytes32 _name);content(bytes32 _name);name(address _owner)"
RepublicMaster/dapp-bin,registrar/GlobalRegistrar.sol,"addr(bytes32 _name);name(address _owner);owner(bytes32 _name);addr(bytes32 _name);subRegistrar(bytes32 _name);content(bytes32 _name);name(address _owner);onAuctionEnd(bytes32 _name);bid(bytes32 _name, address _bidder, uint _value);Registrar();onAuctionEnd(bytes32 _name);reserve(bytes32 _name);requiresAuction(bytes32 _name);transfer(bytes32 _name, address _newOwner);disown(bytes32 _name);setAddress(bytes32 _name, address _a, bool _primary);setSubRegistrar(bytes32 _name, address _registrar);setContent(bytes32 _name, bytes32 _content);owner(bytes32 _name);addr(bytes32 _name);subRegistrar(bytes32 _name);content(bytes32 _name);name(address _owner)"
bitcoinmeetups/dapp-bin,gavmble/gavmble.sol,"Gavsino();bet(uint pIn256, hash key);claim(hash bet);recycle(hash key);winningsWithKey(hash key, hash bet);winnings(hash bet);empty();buyIn();cashOut(uint shares);sharesHeld();equity();valueOfShares();valueOf(uint s);sharesValue(uint v);totalShares();totalShares();sharesValue(uint256 wei);buyIn();cashOut(uint256 shares);winningsWithKey(hash256 key,hash256 bet);sharesHeld();valueOfShares();winnings(hash256 bet);claim(hash256 bet);bet(uint8 pIn256,hash256 key);empty()"
chriseth/dapp-bin,gavmble/gavmble.sol,"Gavsino();bet(uint pIn256, hash key);claim(hash bet);recycle(hash key);winningsWithKey(hash key, hash bet);winnings(hash bet);empty();buyIn();cashOut(uint shares);sharesHeld();equity();valueOfShares();valueOf(uint s);sharesValue(uint v);totalShares();totalShares();sharesValue(uint256 wei);buyIn();cashOut(uint256 shares);winningsWithKey(hash256 key,hash256 bet);sharesHeld();valueOfShares();winnings(hash256 bet);claim(hash256 bet);bet(uint8 pIn256,hash256 key);empty()"
shahankhatch/dapp-bin,gavmble/gavmble.sol,"Gavsino();bet(uint pIn256, hash key);claim(hash bet);recycle(hash key);winningsWithKey(hash key, hash bet);winnings(hash bet);empty();buyIn();cashOut(uint shares);sharesHeld();equity();valueOfShares();valueOf(uint s);sharesValue(uint v);totalShares();totalShares();sharesValue(uint256 wei);buyIn();cashOut(uint256 shares);winningsWithKey(hash256 key,hash256 bet);sharesHeld();valueOfShares();winnings(hash256 bet);claim(hash256 bet);bet(uint8 pIn256,hash256 key);empty()"
LianaHus/dapp-bin,gavmble/gavmble.sol,"Gavsino();bet(uint pIn256, hash key);claim(hash bet);recycle(hash key);winningsWithKey(hash key, hash bet);winnings(hash bet);empty();buyIn();cashOut(uint shares);sharesHeld();equity();valueOfShares();valueOf(uint s);sharesValue(uint v);totalShares();totalShares();sharesValue(uint256 wei);buyIn();cashOut(uint256 shares);winningsWithKey(hash256 key,hash256 bet);sharesHeld();valueOfShares();winnings(hash256 bet);claim(hash256 bet);bet(uint8 pIn256,hash256 key);empty()"
RepublicMaster/dapp-bin,gavmble/gavmble.sol,"Gavsino();bet(uint pIn256, hash key);claim(hash bet);recycle(hash key);winningsWithKey(hash key, hash bet);winnings(hash bet);empty();buyIn();cashOut(uint shares);sharesHeld();equity();valueOfShares();valueOf(uint s);sharesValue(uint v);totalShares();totalShares();sharesValue(uint256 wei);buyIn();cashOut(uint256 shares);winningsWithKey(hash256 key,hash256 bet);sharesHeld();valueOfShares();winnings(hash256 bet);claim(hash256 bet);bet(uint8 pIn256,hash256 key);empty()"
frozeman/ethereum-smart-contracts,gavmble/gavmble.sol,"Gavsino();bet(uint pIn256, hash key);claim(hash bet);recycle(hash key);winningsWithKey(hash key, hash bet);winnings(hash bet);empty();buyIn();cashOut(uint shares);sharesHeld();equity();valueOfShares();valueOf(uint s);sharesValue(uint v);totalShares();totalShares();sharesValue(uint256 wei);buyIn();cashOut(uint256 shares);winningsWithKey(hash256 key,hash256 bet);sharesHeld();valueOfShares();winnings(hash256 bet);claim(hash256 bet);bet(uint8 pIn256,hash256 key);empty()"
ethereum/dapp-bin,gavmble/gavmble.sol,"Gavsino();bet(uint pIn256, hash key);claim(hash bet);recycle(hash key);winningsWithKey(hash key, hash bet);winnings(hash bet);empty();buyIn();cashOut(uint shares);sharesHeld();equity();valueOfShares();valueOf(uint s);sharesValue(uint v);totalShares();totalShares();sharesValue(uint256 wei);buyIn();cashOut(uint256 shares);winningsWithKey(hash256 key,hash256 bet);sharesHeld();valueOfShares();winnings(hash256 bet);claim(hash256 bet);bet(uint8 pIn256,hash256 key);empty()"
vaporry/dapp-bin,gavmble/gavmble.sol,"Gavsino();bet(uint pIn256, hash key);claim(hash bet);recycle(hash key);winningsWithKey(hash key, hash bet);winnings(hash bet);empty();buyIn();cashOut(uint shares);sharesHeld();equity();valueOfShares();valueOf(uint s);sharesValue(uint v);totalShares();totalShares();sharesValue(uint256 wei);buyIn();cashOut(uint256 shares);winningsWithKey(hash256 key,hash256 bet);sharesHeld();valueOfShares();winnings(hash256 bet);claim(hash256 bet);bet(uint8 pIn256,hash256 key);empty()"
SilentCicero/wafr,src/tests/solidityTests/gasUsage/examples/tests/PolarBoardRoom_test.sol,"createHumanStandardToken(address _factory, uint256 _initialAmount, string _name, uint8 _decimals, string _symbol);approve(address _token, address _spender, uint256 _value);freezeAllowance(address _freezer, uint _daysToThaw);newProposal(address _board, string _name, address _proxy, uint _debatePeriod, address _destination, uint _value, bytes _calldata);vote(address _board, uint _proposalID, uint _position);transfer(address _token, address _to, uint256 _value);execute(address _board, uint _proposalID, bytes _calldata);setup();test_polarBoardInstance();test_spamApproveAndFreeze();test_spamFreeze();test_invalidProposalBytecode();test_doubleVotingFor();test_doubleVotingAgainst();test_invalidProposalDuration();test_invalidProposalValue();test_spamVoting();test_forAgainst();test_againstFor();test_invalidSuicide();test_voteSpammingAgainst();test_voteSpammingFor();test_validProposalExecution();test_invalidProposalExecution();test_validProxyOwnershipTransfer();test_invalidProxyOwnershipTransfer();test_validRuleChange();test_invalidRuleChange();test_validBoardFundTransfer();test_validProxyFundTransfer()"
status-im/status-go,vendor/github.com/ethereum/go-ethereum/contracts/checkpointoracle/contract/oracle.sol,GetLatestCheckpoint();GetAllAdmin()
rjl493456442/go-ethereum,contracts/checkpointoracle/contract/oracle.sol,GetLatestCheckpoint();GetAllAdmin()
matthieu/go-ethereum,contracts/checkpointoracle/contract/oracle.sol,GetLatestCheckpoint();GetAllAdmin()
expanse-org/go-expanse,contracts/checkpointoracle/contract/oracle.sol,GetLatestCheckpoint();GetAllAdmin()
prashantpawar/truffle,test/scenarios/contract_names/contract.sol,""
anniemwu/chainge,node_modules/truffle/test/scenarios/contract_names/contract.sol,""
hsavit1/gosofi_webpage,node_modules/truffle/test/scenarios/contract_names/contract.sol,""
DigixGlobal/truffle,test/scenarios/contract_names/contract.sol,""
jensenbox/singnet,dao/contracts/market/Escrow.sol,Escrow(address _beneficiary);releaseFunds()
tokyo-jesus/university,src/ethereum/greeter/greeter.sol,mortal();kill();greeter(string _greeting);greet()
daostack/daostack,contracts/votingMachines/VotingMachineCallbacks.sol,"mintReputation(uint256 _amount, address _beneficiary, bytes32 _proposalId);burnReputation(uint256 _amount, address _beneficiary, bytes32 _proposalId);balanceOfStakingToken(IERC20 _stakingToken, bytes32 _proposalId);getTotalReputationSupply(bytes32 _proposalId);reputationOf(address _owner, bytes32 _proposalId)"
pooleja/SolidityPlayground,contracts/zeppelin/token/ERC20.sol,"balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value)"
maraoz/zeppelin-solidity,contracts/token/ERC20.sol,"balanceOf(address who);allowance(address owner, address spender);transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value)"
duaraghav8/Solium,test/lib/rules/indentation/reject/config-two-spaces.sol,Counter();inc();abstractFunc();abstractFunc()
AnatoliyAksenov/KYCbit,contract/kycbit.sol,"CustomerInsert(string _BIK, address _hash, string _intID);BIKQuery(address _hash);AddressQuery(address _hash);IntIDQuery(address _hash);test()"
validitylabs/SimpleEthVote,contracts/Vote.sol,Vote();payOut()
tomashaber/raiden,raiden/smart_contracts/StandardToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);totalSupply()"
crypto-coder/Tokens,Token_Contracts/contracts/HumanStandardTokenFactory.sol,"HumanStandardTokenFactory();verifyHumanStandardToken(address _tokenContract);codeAt(address _addr);createHumanStandardToken(uint256 _initialAmount, string _name, uint8 _decimals, string _symbol)"
Spreadway/core,eth/OpenLongevity.sol,"owned();changeOwner(address _owner);confirmOwner();startTokensSale(address _crowdsaleOwner, uint _etherPrice);timeToFinishTokensSale();finishTokensSale(uint _investorsToProcess);withdrawBack();Token();transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);migrateFrom(address _from, uint256 _value);TokenMigration();migrate(uint256 _value);setMigrationAgent(address _agent);OpenLongevity();setDeploymentPriceYear(uint _price);deployProject(uint _yearReqFund, string _urlInfo);projectInfo(address _projectOwner);vote(address _projectOwner, bool _inSupport);rejectProject(address _projectOwner);finishVoting(address _projectOwner, uint _votesToProcess)"
thoschm/START-Summit-2017-Blockchain-Machine-Learning-Workshop,code/contract.sol,"getOwnUserState();getUserState(address target);setNewUserState(string message, bytes imgData, string tags)"
robmyers/artworld-ethereum,dapps/staking-ratio/contracts/StakingRatio.sol,stakeA();stakeB();myAStake();myBStake();withdrawA();withdrawB();withdrawAll()
boisde/Greed_Island,party/contracts/mocks/ExplicitERC20Mock.sol,""
dob/auctionhouse,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
montyly/manticore,tests/ethereum/contracts/consensys_benchmark/integer_overflow_minimal.sol,run(uint256 input)
trailofbits/manticore,tests/ethereum_bench/consensys_benchmark/integer_overflow_minimal.sol,run(uint256 input)
ethermarket/democracy,src/base/permissions.sol,getPermissionsProvider();setPermissionsProvider(address provider);permitted(address action)
Project-Oaken/water-meter-acorn,water-meter-acorn/solidity/WaterMeterAcorn.sol,"decrementDate();detectJanuary(uint8 month);getMeterInfoByMonth(uint8 month, uint year);transferContractOwnership(address _newOwner);kill()"
enjin/contracts,solidity/contracts/interfaces/ITokenHolder.sol,"withdrawTokens(IERC20Token _token, address _to, uint256 _amount)"
akhilss/embark-framework,test_app/app/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get();getS()
SilentCicero/wafr,src/tests/solidityTests/gasUsage/examples/tests/BondRules_test.sol,"newProposal(address _board, string _name, address _proxy, uint _debatePeriod, address _destination, uint _value, bytes _calldata);vote(address _board, uint _proposalID, uint _position);execute(address _board, uint _proposalID, bytes _calldata);depositBond(address _rules, uint _proposalID);setup();test_ShouldPassButNoBondSoFail();test_BondPostedAndOverMajority();test_BondPostedButNoMajority()"
gmo-blockchain/solidity,contracts/DataObjectField_v1.sol,"allowCnsContracts(bytes32 _id, address _cns, bytes32 _contractName);hashes(bytes32 _id);setDefault(bytes32 _id);existIdAtCurrentVersion(bytes32 _id);create(bytes32 _id, address _owner, bytes32[3] _hashes, bytes32 _readerId, bytes32 _writerId);remove(bytes32 _id);getIsRemoved(bytes32 _id);setAllowCnsContract(bytes32 _id, address _cns, bytes32 _contractName, bool _isAdded);isAllowCnsContract(address _cns, bytes32 _contractName, bytes32 _id);setOwner(bytes32 _id, address _owner);getOwner(bytes32 _id);setHash(bytes32 _id, uint _idx, bytes32 _hash);getHash(bytes32 _id, uint _idx);setReaderId(bytes32 _id, bytes32 _readerId);setWriterId(bytes32 _id, bytes32 _writerId);getReaderId(bytes32 _id);getWriterId(bytes32 _id)"
energychain/StromDAO-BusinessObject,smart_contracts/Delivery.sol,"Delivery(RoleLookup _roles,address _meterpoint,uint8 _mprole,uint256 _startTime,uint256 _endTime, uint256 _power);includeDelivery(Delivery _delivery);destructWith(Delivery _delivery)"
montyly/manticore,tests/ethereum/contracts/detectors/race_condition.sol,callStoredAddress();setStoredAddress(address addr)
trailofbits/manticore,tests/ethereum/contracts/detectors/race_condition.sol,callStoredAddress();setStoredAddress(address addr)
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/examples/BadPushPayments.sol,bid()
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/examples/BadPushPayments.sol,bid()
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/contracts/ownership/HasNoTokens.sol,"tokenFallback(address from_, uint256 value_, bytes data_)"
pash7ka/zeppelin-solidity,contracts/ownership/HasNoTokens.sol,"tokenFallback(address from_, uint256 value_, bytes data_)"
iswarm/p2pCny,contracts/ownership/HasNoTokens.sol,"tokenFallback(address from_, uint256 value_, bytes data_)"
readevalprint/aragon-core,contracts/zeppelin/ownership/HasNoTokens.sol,"tokenFallback(address from_, uint256 value_, bytes data_)"
pz7/liquet,node_modules/zeppelin-solidity/contracts/ownership/HasNoTokens.sol,"tokenFallback(address from_, uint256 value_, bytes data_)"
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/ownership/HasNoTokens.sol,"tokenFallback(address from_, uint256 value_, bytes data_)"
dmx374/zeppelin-solidity,contracts/ownership/HasNoTokens.sol,"tokenFallback(address from_, uint256 value_, bytes data_)"
cashpokerpro-dev/cash-smartcontracts,contracts/ownership/HasNoTokens.sol,"tokenFallback(address from_, uint256 value_, bytes data_)"
cinderblockchain/cindertoken,contracts/ownership/HasNoTokens.sol,"tokenFallback(address from_, uint256 value_, bytes data_)"
victorsintnicolaas/RVR,test/TestRVRCoin.sol,testConstructorUsingDeployedContract();testConstructorUsingNewContract();testDefaultWallet();testDeductCoin()
SafecontractDev/protocol,contracts/Balances.sol,"deposit(address _user, address _token, uint _amount);withdraw(address _user);queryBalance(address _account);isContract(address _addr);setSafeToken(address _newSafeToken)"
SilentCicero/wafr,src/tests/solidityTests/assertEq/test.assertEq.bytes.sol,setup();test_oneValidEqBytes();test_oneInvalidEqBytes();test_threeValidEqBytes();test_twoValidEqBytes();test_oneValidEqBytesNoLog();test_threeInvalidEqBytes();test_twoInvalidEqBytes()
rmi7/topscifivoter,contracts/TopSciFiVoter.sol,TopSciFiVoter();start(uint256 endTime);vote(bytes32 movieName);withdraw();getStatus()
crypto-coder/Tokens,Token_Contracts/contracts/GPSDecayingTokenEnvironment.sol,"GPSDecayingTokenEnvironment(uint256 _currentLatitude, uint256 _currentLongitude)"
digityler/blockinstruments,contracts/winstrument.sol,Instrument();validate();withdraw();trigger();recall();strToOperator(bytes32 str);strToUnderlierType(bytes32 str);resolveUnderlier(Underlier underlier);sumUnderliers(Underlier[] underliers);checkConditional(Conditional conditional);checkConjunction(Conditional[] conditionals);isConditionMet()
gpirescampos/hackforgood,truffle/contracts/RefID.sol,"owned();modifyOwner();kill();RefID(string _lat, string _long);hashBiometricTemplates(string _fingerPrint, string _faceRecon, string _iris);getPerson();updateLocation(string _lat, string _long)"
Jonathan56/mosasik_ethereum_demo,ethereum/contracts/Market.sol,add_participant();remove_participant();post_energy_balance(int amount);clear_market();_bill_all_participants()
web3j/web3j-maven-plugin,src/test/resources/issue-17/issue17main.sol,""
blockgeeks/workshop,src/auction/timerauction.sol,"TimerAuction(string _item, uint _durationMinutes);bid();end()"
mwensveen-nl/solidity-testing,src/test/resources/SelfDestructManager.sol,SelfDestructManager();give();endContract();SelfDestruct();endContract()
Quiark/populus,tests/solidity/projects/test-01/contracts/Example.sol,Example()
FiatCentralBank/fiatcoin,contracts/ownership/Claimable.sol,transferOwnership(address newOwner);claimOwnership()
silasdavis/eris-db,tests/jobs_fixtures/app23-save_tx_hash_of_call/storage.sol,set(int x);get()
silasdavis/burrow,tests/jobs_fixtures/app23-save_tx_hash_of_call/storage.sol,set(int x);get()
eris-ltd/eris-db,tests/jobs_fixtures/app23-save_tx_hash_of_call/storage.sol,set(int x);get()
alice-si/contracts,contracts/alice/MoratoriumTransfers.sol,"proposeTransfer(ERC20 token, address to, uint value);confirmTransfer(uint _transferId)"
etherisc/flightDelay,contracts/FlightDelayUnderwrite.sol,"FlightDelayUnderwrite(address _controller);setContracts();fund();scheduleUnderwriteOraclizeCall(uint _policyId, bytes32 _carrierFlightNumber);__callback(bytes32 _queryId, string _result, bytes _proof);externalDecline(uint _policyId, bytes32 _reason);decline(uint _policyId, bytes32 _reason, bytes _proof);underwrite(uint _policyId, uint[6] _statistics, bytes _proof)"
elementrem/solidity,test/compilationTests/corion/owned.sol,replaceOwner(address newOwner);isOwner()
iurimatias/embark-framework,packages/plugins/coverage/src/test/fixtures/contracts/ERC20.sol,"totalSupply();balanceOf(address account);transfer(address recipient, uint256 amount);allowance(address owner, address spender);approve(address spender, uint256 value);transferFrom(address sender, address recipient, uint256 amount);increaseAllowance(address spender, uint256 addedValue);decreaseAllowance(address spender, uint256 subtractedValue);_transfer(address sender, address recipient, uint256 amount);_mint(address account, uint256 amount);_burn(address account, uint256 value);_approve(address owner, address spender, uint256 value);_burnFrom(address account, uint256 amount)"
Neurone/persians,contracts/PersianToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);balanceOf(address _owner);allowance(address _owner, address _spender);contribute();claimToken();redeemEther();estimateBalanceOf(address _owner);isICOOpen();isICOEnded();PersianTokenICO(uint256 _icoStartBlock, uint256 _icoEndBlock)"
axic/shapeshiftbot,shapeshiftbot.sol,"setOwner(address _owner);ShapeshiftBot();__callback(bytes32 myid, string result);nibbleToChar(uint nibble);addressToBytes(address _address);transfer(string coin, string recipient);transfer(string coin, string recipient, bool acceptReturn);kill()"
adklempner/solidity-license,contracts/zeppelin/crowdsale/FinalizableCrowdsale.sol,finalize();finalization()
michinbear/solidity,test/compilationTests/zeppelin/crowdsale/FinalizableCrowdsale.sol,finalize();finalization()
elementrem/solidity,test/compilationTests/zeppelin/crowdsale/FinalizableCrowdsale.sol,finalize();finalization()
adamdossa/ProfitSharingContract,installed_contracts/zeppelin/contracts/crowdsale/FinalizableCrowdsale.sol,finalize();finalization()
maraoz/zeppelin-solidity,test/helpers/PullPaymentMock.sol,"PullPaymentMock();callSend(address dest, uint amount)"
onewed/unitycoin,contracts/UnityToken.sol,"UnityToken(uint256 _totalSupply);approve(address _spender, uint256 _value);transfer(address _to, uint256 _value);ownerSetOverride(address _address, bool enable);ownerSetVisible(string _name, string _symbol);ownerActivateToken();claimRefund(address _address)"
LOOMIA/loomia,ethereum/contracts/UpgradeAgent.sol,"isUpgradeAgent();upgradeFrom(address _tokenHolder, uint256 _amount)"
chenlian2015/eosEthMarketSample,contracts/OLLogToolInterface.sol,"addLog(string log, string logContent);length();getTagAt(uint nIndex);getContentAt(uint nIndex);clear()"
rfikki/demo-solidity,SingleValidator.sol,validate(address addr);validate(address addr);setOwner(address owner_);DataExternalValidation(address validator);addData(uint data_);setValidator(address validator)
iam-dev/ERC23,contracts/token/Basic23Token.sol,"transfer(address _to, uint _value, bytes _data);transfer(address _to, uint256 _value);balanceOf(address _owner);contractFallback(address _origin, address _to, uint _value, bytes _data);isContract(address _addr)"
prashantpawar/escrow-contract,contracts/Escrow.sol,"setBuyer(uint _amount);setSeller(uint _amount);getBuyer();getSeller();complete();cancel();createEscrowBySeller(address seller, uint amount);createEscrowByBuyer(address buyer, uint amount);setArbitratorI(address arbitrator)"
s-tikhomirov/pethreon,pethreon.sol,"Pethreon(uint _period);currentPeriod();getExpectedPayment(uint period);balanceAsSupporter();balanceAsCreator();deposit();withdraw(bool isSupporter, uint amount);withdrawAsSupporter(uint amount);withdrawAsCreator();canPledge(uint _weiPerPeriod, uint _periods);createPledge(address _creator, uint _weiPerPeriod, uint _periods);cancelPledge(address _creator);myPledgeTo(address _creator)"
Project-WikiGit/WikiGit,dev/contracts/truffle_migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
WeiFund/WeiFund,contracts/PersonaRegistry.sol,PersonaRegistry(address _previousPublishedVersion);setPersonaAttributes(bytes ipfsHash);getPersonaAttributes(address personaAddress)
stanta/darfchain,ICO/contracts/test/SimpleReleaseAgent.sol,SimpleReleaseAgent(ReleasableToken _token);release()
GX-Coin/SmartContract,GxTraders.sol,"iterateStart();iterateValid(uint keyIndex);iterateGet(uint keyIndex);coinBalance(address mappedAddress);dollarBalance(address mappedAddress);GxTraders(address greatCoinAddress);isDeploymentAdmin(address accountAddress);setEditable(bool editable);kill();upgrade(GxTradersPrevious gxTradersToUpgrade, uint256 keyIndexStart, uint256 keyIndexEnd);addOrderContract(address gxOrdersAddress);upgradeGreatCoin(address greatCoinAddress);add(address newAddress);remove(address removedAddress);contains(address lookupAddress);iterateStart();iterateValid(uint keyIndex);iterateNext(uint keyIndex);iterateGet(uint keyIndex);coinBalance(address mappedAddress);dollarBalance(address mappedAddress);setCoinBalance(address mappedAddress, uint32 coinBalance);setDollarBalance(address mappedAddress, int160 dollarBalance);addCoinAmount(address mappedAddress, uint32 coinAmount);addDollarAmount(address mappedAddress, int160 dollarAmount);length()"
Dicoiner/irianna-solidity,test/helpers/CappedCrowdsaleImpl.sol,""
silasdavis/burrow,js/test/get_set_smoke_test/GetSet.sol,testExist();setUint(uint input);getUint();setBytes(bytes32 input);getBytes();setString(string input);getString();setBool(bool input);getBool()
o0ragman0o/ITT,ERC20.sol,"totalSupply();symbol();name();decimalPlaces();transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);balanceOf(address _addr);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value)"
michinbear/solidity,std/Token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
ruchevits/solidity,std/Token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
iam-dev/ERC23,installed_contracts/zeppelin-solidity/contracts/payment/PullPayment.sol,"asyncSend(address dest, uint256 amount);withdrawPayments()"
cashpokerpro-dev/cash-smartcontracts,contracts/CashPokerProToken.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);balanceOf(address who);transfer(address to, uint256 value);transfer(address _to, uint256 _value);balanceOf(address _owner);allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);CashPokerProToken()"
erooijak/ethlance,resources/public/contracts/src/ethlanceSetter.sol,getConfig(bytes32 key)
dsperac/consensys-remittance,src/contracts/Remittance.sol,"registerChallenge(bytes32 challengeHash, uint deadline);solveChallenge(bytes32 password);hasDeadlinePassed(bytes32 challengeHash);requestRefund(bytes32 challengeHash);withdraw();killMe()"
CORIONplatform/solidity,tokenDB.sol,"increase(address owner, uint256 value);decrease(address owner, uint256 value);setAllowance(address owner, address spender, uint256 amount, uint256 nonce);getAllowance(address owner, address spender)"
ultra-koder/JobMarket,.c9/metadata/workspace/dapp/contracts/jobmarket.sol,""
kinfoundation/kin-token,test/helpers/KinTokenSaleMock.sol,"KinTokenSaleMock(address _fundingRecipient, uint256 _startTime);setTokensSold(uint256 _tokensSold);getTokenGranteesLength()"
KPull/eth-membership-tokens,contracts/owned.sol,changeOwner(address _owner)
SilentCicero/wafr,src/tests/solidityTests/campaign/StandardCampaign.sol,checkInvarience();contributeMsgValue();payoutToBeneficiary();claimRefundOwed(uint256 _contributionID);totalContributions();totalContributionsBySender(address _sender)
OR13/car2go,contracts/zeppelin/lifecycle/Killable.sol,kill()
transmute-industries/eth-faucet,contracts/zeppelin/lifecycle/Killable.sol,kill()
becodemonkey/solidity,contracts/token/ERC20.sol,"balanceOf(address who);transfer(address to, uint256 value);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);allowance(address owner, address spender)"
libdeos/deos-rsksmart,var/wiki/helloworld2.sol,HelloWorld();getBalance();deposit(uint amount)
dltdojo/courses,ethereum/solidity/T133_InternalCalls.sol,TestFoo();testInternalCall();kill()
ethbets/ebets,contracts/SimpleToken2.sol,"balanceOf(address _owner);transfer(address _to, uint256 _amount);approve(address _spender, uint256 _amount)"
papyrusglobal/smartcontracts,contracts/channel/ChannelManagerApi.sol,"requestClose(uint64 channelId);setBlockPart(uint64 channelId, uint64 blockId, bytes reference);setBlockResult(uint64 channelId, uint64 blockId, bytes32 resultHash);blockSettle(uint64 channelId, uint64 blockId, bytes result);blockResolveDispute(uint64 channelId, uint64 blockId, bytes result);channelProtocol(uint64 channelId);channelConfiguration(uint64 channelId);channelValidatorCount(uint64 channelId);channelValidator(uint64 channelId, uint64 validatorIndex);channelMasterKey(uint64 channelId);channelDisputeResolver(uint64 channelId);channelBlockPeriod(uint64 channelId);channelPartTimeout(uint64 channelId);channelResultTimeout(uint64 channelId);channelCloseTimeout(uint64 channelId);channelStartTimestamp(uint64 channelId);channelCloseTimestamp(uint64 channelId);channelSettlementEncrypted(uint64 channelId);isChannelOpened(uint64 channelId);isChannelClosing(uint64 channelId);isChannelClosed(uint64 channelId);blockPart(uint64 channelId, uint64 validatorIndex, uint64 blockId);blockResult(uint64 channelId, uint64 validatorIndex, uint64 blockId);blockSettlement(uint64 channelId, uint64 blockId);blockSettlementHash(uint64 channelId, uint64 blockId);isBlockCreated(uint64 channelId, uint64 blockId);isBlockFilled(uint64 channelId, uint64 blockId);isBlockCalculated(uint64 channelId, uint64 blockId);isBlockDisputed(uint64 channelId, uint64 blockId);isBlockSettled(uint64 channelId, uint64 blockId)"
lightswarm124/ethereumjs-sandbox,contracts/sol/ticker.sol,reset()
mwensveen-nl/solidity-testing,src/test/resources/Calculator.sol,Calculator();add(int _number);subtract(int _number);init(int _number);result();changeBlock(bool _block)
ledgerlabs/toy-state-channels,contracts/CallLib.sol,"doCall(address _target, uint _value, bytes4 _methodSignature, bytes32[] _calldata)"
prashantpawar/SoccerBet,app/contracts/soccer_bet.sol,"SoccerBet(address bettingPartyA, address bettingPartyB);depositFunds(Team t);setOutcome(Team t, uint8 posession)"
BeBlockTech/Anemoi,Master/contracts/Ownable.sol,Ownable();transferOwnership(address newOwner)
EverexIO/Chainy,contract/Chainy.sol,"concat(string _s1, string _s2);isValidChainyJson(string _json);owned();transferOwnership(address newOwner);Chainy();setChainyURL(string _url);getChainyURL();setConfig(string _key, uint256 _value);getConfig(string _key);setServiceAccount(address _address, bool _value);setReceiverAddress(address _address);releaseFunds();addChainyData(string json);getChainyTimestamp(string code);getChainyData(string code);getChainySender(string code);processFee();checkFormat(string json);generateShortLink()"
AustP/autocomplete-solidity,spec/files/bank.sol,"setDougAddress(address dougAddr);remove();Doug();addContract(bytes32 name, address addr);removeContract(bytes32 name);remove();contracts(bytes32 name);isFundManager();setPermission(address addr, uint8 perm);setPermission(address addr, uint8 perm);deposit(address addr);withdraw(address addr, uint amount);deposit(address userAddr);withdraw(address userAddr, uint amount);FundManager();deposit();withdraw(uint amount);setPermission(address addr, uint8 permLvl)"
remicoin/remicoin-contract,remicoin.sol,"balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);Owner();transferOwnership(address new_owner);RemiCoin(uint256 initial_supply, string _name, string _symbol, uint8 _decimal);balanceOf(address _owner);transfer(address to, uint value);transferFrom(address from, address to, uint value);allowance(address _owner, address _spender);approve(address _spender, uint256 _amount);mintToken(address target, uint256 mintedAmount);freezeAccount(address target, bool freeze);changeName(string _name);changeSymbol(string _symbol);changeDecimals(uint8 _decimals)"
robmyers/artworld-ethereum,dapps/schellingflags/contracts/SchellingFlags.sol,""
leviathan-project/LeviathanToken,leviathan.sol,"LeviathanToken( );distributeTokens( address to, uint256 amount );updateLocation( string location );isCompromised( address owner );getLocation( address owner );stake( uint256 value );markCompromised( );balanceOf( address owner );transfer( address to, uint256 value );transferFrom( address from, address to, uint256 value );approve( address spender, uint256 value );allowance( address owner, address spender )"
Neufund/Contracts,contracts/Registery.sol,"register(string name, address addr);remove(string name);lookup(string name)"
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/exec/contracts/Executable.sol,""
duaraghav8/Solium,test/lib/rules/indentation/reject/config-tabs.sol,Counter();inc();abstractFunc();abstractFunc()
OpenSTFoundation/SimpleTokenSale,contracts/ProcessableAllocations.sol,"adminAddress();processAllocation(address _grantee, uint256 _amount);ProcessableAllocations(TrusteeInterface _trusteeContract);addProcessableAllocation(address _grantee, uint256 _amount);getGrantees();getGranteesSize();lock();processProcessableAllocations()"
papyrusglobal/smartcontracts,contracts/common/SafeOwnable.sol,proposeOwnership(address newOwner);acceptOwnership();owner();ownerCandidate()
GX-Coin/SmartContract,GxAdminsProvider.sol,""
trust-tech/go-trustmachine,contracts/ens/contract/ens.sol,"ENS(address owner);owner(bytes32 node);resolver(bytes32 node);setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);FIFSRegistrar(address ensAddr, bytes32 node);register(bytes32 subnode, address owner);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);PublicResolver(address ensAddr);has(bytes32 node, bytes32 kind);addr(bytes32 node);content(bytes32 node);setAddr(bytes32 node, address addr);setContent(bytes32 node, bytes32 hash)"
willdavidc/prometh,truffle/contracts/agent.sol,promethCost();promethExecute()
GuigsEvt/CrowdsaleEthereum,contracts/GuigsToken.sol,"mint(address _to, uint256 _amount);endMinting();approve(address _spender, uint256 _value);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);burn(uint256 _value)"
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app26-factories_single_constructor_and_overwriting_testing/GSFactory.sol,create(uint initialValue);getLast()
eris-ltd/eris,tests/jobs_fixtures/app26-factories_single_constructor_and_overwriting_testing/GSFactory.sol,create(uint initialValue);getLast()
monax/monax,tests/jobs_fixtures/app26-factories_single_constructor_and_overwriting_testing/GSFactory.sol,create(uint initialValue);getLast()
eris-ltd/eris-cli,tests/jobs_fixtures/app26-factories_single_constructor_and_overwriting_testing/GSFactory.sol,create(uint initialValue);getLast()
monax/cli,tests/jobs_fixtures/app26-factories_single_constructor_and_overwriting_testing/GSFactory.sol,create(uint initialValue);getLast()
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app26-factories_single_constructor_and_overwriting_testing/GSFactory.sol,create(uint initialValue);getLast()
chriseth/dapp-bin,NatSpecReg/contract.sol,"register(bytes32 _code, bytes32 _abi);lookup(bytes32 _code)"
shahankhatch/dapp-bin,NatSpecReg/contract.sol,"register(bytes32 _code, bytes32 _abi);lookup(bytes32 _code)"
LianaHus/dapp-bin,NatSpecReg/contract.sol,"register(bytes32 _code, bytes32 _abi);lookup(bytes32 _code)"
RepublicMaster/dapp-bin,NatSpecReg/contract.sol,"register(bytes32 _code, bytes32 _abi);lookup(bytes32 _code)"
frozeman/ethereum-smart-contracts,NatSpecReg/contract.sol,"register(bytes32 _code, bytes32 _abi);lookup(bytes32 _code)"
ethereum/dapp-bin,NatSpecReg/contract.sol,"register(bytes32 _code, bytes32 _abi);lookup(bytes32 _code)"
vaporry/dapp-bin,NatSpecReg/contract.sol,"register(bytes32 _code, bytes32 _abi);lookup(bytes32 _code)"
aragon/aragon-core,contracts/test/mocks/KernelOverloadMock.sol,"newAppInstance(bytes32 _appId, address _appBase);newAppInstance(bytes32 _appId, address _appBase);newPinnedAppInstance(bytes32 _appId, address _appBase, bytes _initializePayload, bool _setDefault);newPinnedAppInstance(bytes32 _appId, address _appBase, bytes _initializePayload, bool _setDefault)"
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/token/ERC20/TokenTimelock.sol,release()
Spreadway/core,Prophets/myproject/contracts/ExampleToken.sol,ExampleToken()
ethers/btcrelay,examples/BitcoinProcessor.sol,"BitcoinProcessor(address trustedBTCRelay);processTransaction(bytes txn, uint256 txHash)"
orbro/eth-enablers,notareth-master/contract.sol,"Etherdoc();empty();newDocument(bytes32 hash);transferDocument(bytes32 hash, address recipient);documentExists(bytes32 hash);getDocument(uint docId);getLatest()"
maran/notareth,contract.sol,"Etherdoc();empty();newDocument(bytes32 hash);transferDocument(bytes32 hash, address recipient);documentExists(bytes32 hash);getDocument(uint docId);getLatest()"
Bunjin/DXF,multisigDailyLimit.sol,"MultiSigWallet(address[] _owners, uint _required);addOwner(address owner);removeOwner(address owner);changeRequirement(uint _required);submitTransaction(address destination, uint value, bytes data, uint nonce);confirmTransaction(bytes32 transactionHash);revokeConfirmation(bytes32 transactionHash);executeTransaction(bytes32 transactionHash);isConfirmed(bytes32 transactionHash);getNonce(address destination, uint value, bytes data);getConfirmationCount(bytes32 transactionHash);getTransactionCount(bool pending, bool executed);addTransaction(address destination, uint value, bytes data, uint nonce);addConfirmation(bytes32 transactionHash, address owner);getOwners();getConfirmations(bytes32 transactionHash);getTransactionHashes(uint from, uint to, bool pending, bool executed);MultiSigWalletWithDailyLimit(address[] _owners, uint _required, uint _dailyLimit);changeDailyLimit(uint _dailyLimit);executeTransaction(bytes32 transactionHash);underLimit(uint amount)"
lindqvust/dapp_projects,property_finder/PropertyToken.sol,"propertyToken();remove();mine(address owner);approve(address addr);isApproved(address addr);sendPToken(address receiver, uint amount);sendPTokenFrom(address sender, uint amount, address receiver);queryTokens();queryTokensOf(address addr)"
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.5/deleteFromDynamicArray.sol,removeAtIndex();safeRemoveAtIndex(uint index)
etherisc/flightDelay,contracts/FlightDelayAccessControllerInterface.sol,"setPermissionById(uint8 _perm, bytes32 _id);setPermissionById(uint8 _perm, bytes32 _id, bool _access);setPermissionByAddress(uint8 _perm, address _addr);setPermissionByAddress(uint8 _perm, address _addr, bool _access);checkPermission(uint8 _perm, address _addr)"
Majoolr/ethereum-libraries,StringUtilsLib/StringUtilsLib.sol,"memcpy(uint dest, uint src, uint len);toSlice(string self);len(bytes32 self);copy(slice self);toString(slice self);len(slice self);empty(slice self);compare(slice self, slice other);equals(slice self, slice other);nextRune(slice self, slice rune);nextRune(slice self);ord(slice self);keccak(slice self);startsWith(slice self, slice needle);beyond(slice self, slice needle);endsWith(slice self, slice needle);until(slice self, slice needle);findPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);rfindPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);find(slice self, slice needle);rfind(slice self, slice needle);split(slice self, slice needle, slice token);split(slice self, slice needle);rsplit(slice self, slice needle, slice token);rsplit(slice self, slice needle);count(slice self, slice needle);contains(slice self, slice needle);concat(slice self, slice other);join(slice self, slice[] parts)"
FekraTechnology/SmartSLA,05-Source Code/SMAG_Contract/contracts/HelperLib.sol,"convert(uint amount,uint conversionRate);isLeapYear(uint16 year);leapYearsBefore(uint year);getDaysInMonth(uint8 month, uint16 year);parseTimestamp(uint timestamp);getYear(uint timestamp);getMonth(uint timestamp);getDay(uint timestamp);getHour(uint timestamp);getMinute(uint timestamp);getSecond(uint timestamp);getWeekday(uint timestamp);toTimestamp(uint16 year, uint8 month, uint8 day);toTimestamp(uint16 year, uint8 month, uint8 day, uint8 hour);toTimestamp(uint16 year, uint8 month, uint8 day, uint8 hour, uint8 minute);toTimestamp(uint16 year, uint8 month, uint8 day, uint8 hour, uint8 minute, uint8 second);__throw()"
iam-dev/ERC23,installed_contracts/zeppelin-solidity/contracts/token/PausableToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);increaseApproval(address _spender, uint _addedValue);decreaseApproval(address _spender, uint _subtractedValue)"
enjin/contracts,solidity/contracts/ENJAllocation.sol,crowdfundAddress();incentivisationFundAddress();totalAllocated();ENJAllocation(address _tokenAddress);circulation()
QTBlockchain/SolidityNWeb3,SmartContracts/March2018/AbstractionDemo/contracts/CarFare.sol,"CarFare(uint16 distance,uint16 price);computeFare(uint16 distance);bookCab(uint distance)"
aragon/aragon-network-token,packages/v2/contracts/minters/ANJNoLockMinter.sol,"migrate(uint256 _amount);migrateAll();receiveApproval(address _from, uint256 _amount, address _token, bytes calldata /*_data*/);_migrate(address _from, uint256 _amount)"
maraoz/zeppelin-solidity,test/helpers/BasicTokenMock.sol,"BasicTokenMock(address initialAccount, uint initialBalance)"
airalab/core,contracts/misc/SharedCode.sol,proxy(address _shared)
daostack/daostack,contracts/schemes/ReputationAdmin.sol,"reputationMint(address[] calldata _beneficiaries, uint256[] calldata _amounts);reputationBurn(address[] calldata _beneficiaries, uint256[] calldata _amounts);_reputationMint(address _beneficiary, uint256 _amount);_reputationBurn(address _beneficiary, uint256 _amount)"
dltdojo/courses,ethereum/solidity/T190_LoopTuringComplete.sol,fillArray();getSum()
LOOMIA/loomia,ethereum/contracts/Ownable.sol,Ownable();transferOwnership(address newOwner)
Leondra/PXLT,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
nikita-fuchs/PLToken,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
aragon/aragon-network-token,packages/sale/installed_contracts/zeppelin/contracts/Bounty.sol,createTarget();deployContract();claim(Target target);checkInvariant()
pooleja/SolidityPlayground,contracts/zeppelin/Bounty.sol,createTarget();deployContract();claim(Target target);checkInvariant()
maraoz/zeppelin-solidity,contracts/Bounty.sol,createTarget();deployContract();claim(Target target);checkInvariant()
duaraghav8/Solium,test/lib/rules/indentation/accept/multiline-array.sol,Counter();inc()
taoteh1221/DFD_Geth_JSON,sol/token-default.sol,"token(uint supply);sendCoin(address receiver, uint amount)"
marvinfy/ConsentDirectives,contracts/ConsentDirective.sol,"SetWho(address who);GetTheWho();SetWhat(uint256 what);SetRecord(address record);ConsentDirective(address who, uint256 what);HasDelegateAuthority()"
silasdavis/eris-db,execution/solidity/revert.sol,RevertAt(uint32 i);RevertNoReason()
silasdavis/burrow,execution/solidity/revert.sol,RevertAt(uint32 i);RevertNoReason()
mixbytes/storiqa_ico,contracts/ownership/multiowned.sol,"multiowned(address[] _owners, uint _required);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);getOwner(uint ownerIndex);getOwners();isOwner(address _addr);amIOwner();revoke(bytes32 _operation);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);reorganizeOwners();clearPending();checkOwnerIndex(uint ownerIndex);makeOwnerBitmapBit(address owner);isOperationActive(bytes32 _operation);assertOwnersAreConsistent();assertOperationIsConsistent(bytes32 _operation)"
Storiqa/ico_smart_contract,contracts/ownership/multiowned.sol,"multiowned(address[] _owners, uint _required);changeOwner(address _from, address _to);addOwner(address _owner);removeOwner(address _owner);changeRequirement(uint _newRequired);getOwner(uint ownerIndex);getOwners();isOwner(address _addr);amIOwner();revoke(bytes32 _operation);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);reorganizeOwners();clearPending();checkOwnerIndex(uint ownerIndex);makeOwnerBitmapBit(address owner);isOperationActive(bytes32 _operation);assertOwnersAreConsistent();assertOperationIsConsistent(bytes32 _operation)"
rllola/meteor-dapp-wallet,fabcoin.sol,"FabCoin();send(address to, uint256 amount);balance(address who)"
stanta/darfchain,ICO/contracts/MintedTokenCappedCrowdsale.sol,"MintedTokenCappedCrowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, uint _maximumSellableTokens);isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal);isCrowdsaleFull();assignTokens(address receiver, uint tokenAmount)"
CMLTeam/ICOsurance,truffle/contracts/Crowdsale.sol,checkGoalReached();safeWithdrawal()
D-Transport/smart-contract,contracts/DTransport.sol,"DTransport();getCompany(uint index);getCompanyCount();getTerminal(uint index);getTerminalCount();validate(address terminal);register();getUser(uint index);getUsersCount();getAuthorizationDate(address user, address terminal);getValidation(address user, uint index)"
melonproject/protocol,contracts/fund/policies/compliance/UserWhitelist.sol,addFundSettings(bytes calldata _encodedSettings);identifier();updateFundSettings(bytes calldata _encodedSettings);validateRule(bytes calldata _encodedArgs)
status-im/status-network-token,contracts/test/ExternalToken.sol,ExternalToken(address _tokenFactory)
kinfoundation/kin-token,contracts/Ownable.sol,Ownable();requestOwnershipTransfer(address _newOwnerCandidate);acceptOwnership()
WingsDao/contracts,contracts/crowdsales/CrowdsaleAbstraction.sol,"createTokens(address recipient);setLimitations(uint _lockDataTimestamp, uint _startTimestamp, uint _endTimestamp);setForecasting(address _forecasting);addVestingAccount(address _account, uint _initialPayment, uint _payment);addVestingAllocation(address _account, uint _timestamp);releaseVestingAllocation();getVestingAccount(address _account);getVestingAllocation(address _account, uint _index);addPriceChange(uint _timestamp, uint _price);giveReward(address _account, uint _amount);withdraw(uint _amount);payback();isCapReached();isMinimalReached()"
dnulnets/consent2,sol/consent.sol,"Consent(address _giver, address _consentTemplate);setStatus(Status _status);getStatus();getTemplate();getGiver();getOwner();kill();ConsentFactory();getActiveConsentTemplates();getAllConsentTemplates();setConsentStatus(Consent _consent, Consent.Status _status);cancelConsent(Consent _consent);kill()"
livepeer/protocol,contracts/token/LivepeerTokenFaucet.sol,"LivepeerTokenFaucet(address _token, uint256 _requestAmount, uint256 _requestWait);addToWhitelist(address _addr);removeFromWhitelist(address _addr);request()"
ericvrp/SoliditySandbox,app/src/contracts/sandbox.sol,"distance(fixed lat1, fixed lon1, fixed lat2, fixed lon2, byte unit);contractBalance();paybackOwner();setPos(int x, int y, int z);distanceToPos(int x, int y, int z);sqrt(uint x)"
GovernX/governx-contracts,src/contracts/MultiSigController.sol,"MultiSigController(address _proxy, address[] _members, uint256 _required);changeVariables(uint256 _required);canPropose(address _sender, uint256 _proposalID);canVote(address _sender, uint256 _proposalID);canExecute(address _sender, uint256 _proposalID);votingWeightOf(address _sender, uint256 _proposalID, uint256 _position, uint256 _weight);hasWon(address _sender, uint256 _proposalID)"
ethermarket/democracy,src/base/protectedContract.sol,apiAuthorized();setApiAddress(address newApi);getPermissionsProvider();setPermissionsProvider(address provider);permittedSender()
ryepdx/etherlab,lib/base/protectedContract.sol,apiAuthorized();setApiAddress(address newApi);getPermissionsProvider();setPermissionsProvider(address provider);permittedSender()
mwensveen-nl/solidity-testing,src/test/resources/SelfDestruct.sol,SelfDestruct();give();endContract()
TripleSpeeder/StandingOrderDapp,contracts/StandingOrder.sol,"getEntitledFunds();getUnclaimedFunds();getOwnerFunds();collectFunds();WithdrawOwnerFunds(uint amount);Terminate();createStandingOrder(address _payee, uint _paymentAmount, uint _paymentInterval, uint _startTime, string _label);getNumOrdersByOwner();getOwnOrderByIndex(uint index);getNumOrdersByPayee();getPaidOrderByIndex(uint index)"
melonproject/protocol,contracts/integrations/interfaces/IZeroExV2.sol,ZRX_ASSET_DATA();filled(bytes32);cancelled(bytes32);getOrderInfo(Order calldata);getAssetProxy(bytes4);cancelOrder(Order calldata)
CORIONplatform/solidity,provider.sol,"replaceModule(address addr);transferEvent(address from, address to, uint256 value);newSchellingRoundEvent(uint256 roundID, uint256 reward);configureModule(announcementType aType, uint256 value, address addr);_isClientPaidUp(address clientAddress);_getClientProviderUID(address clientAddress);_joinToProvider(uint256 providerUID, address clientAddress);_partFromProvider(uint256 providerUID, address clientAddress);_checkForJoin(uint256 providerUID, address clientAddress, uint256 countLimitforPrivate);_getSenderStatus(uint256 providerUID);_openProvider(bool priv, string name, string website, uint256 country, string info, uint8 rate, bool isForRent, address admin);_closeProvider(address owner);_isProviderValid(uint256 providerUID);_getProviderOwner(uint256 providerUID);_getProviderClosed(uint256 providerUID);_getProviderAdmin(uint256 providerUID);_setProviderInvitedUser(uint256 providerUID, address clientAddress, bool status);_getProviderPriv(uint256 providerUID);_getProviderSupply(uint256 providerUID);provider(bool forReplace, address moduleHandlerAddr, address dbAddr, address rewardLibAddr);openProvider(bool priv, string name, string website, uint256 country, string info, uint8 rate, bool isForRent, address admin);closeProvider();setProviderDetails(uint256 providerUID, string name, string website, uint256 country, string info, uint8 rate, address admin);joinProvider(uint256 providerUID);partProvider();getReward(address beneficiary, uint256 providerUID, uint256 roundLimit);manageInvitations(uint256 providerUID, address[] invite, address[] revokeInvite);appendSupplyChanges(address client, bool _add, uint256 amount);checkProviderOwnerSupply(uint256 balance, bool priv);appendSchellingSupplyChanges(uint256 providerSupply, uint256 newProviderSupply, bool priv);checkCorrectRate(bool priv, uint8 rate);getTokenBalance(address addr);checkReward(uint256 providerUID, uint256 roundLimit)"
aragon/aragon-core,contracts/test/mocks/SafeMath8Mock.sol,"mulExt(uint8 _a, uint8 _b);divExt(uint8 _a, uint8 _b);subExt(uint8 _a, uint8 _b);addExt(uint8 _a, uint8 _b);modExt(uint8 _a, uint8 _b)"
AugustoL/ethereumjs,contracts/greeting.sol,smart();destroy();greeter(string _greeting);greet()
cgewecke/solcover,test/sources/zeppelin/Migrations.sol,setCompleted(uint completed);upgrade(address newAddress)
WingsDao/contracts,contracts/zeppelin/Migrations.sol,setCompleted(uint completed);upgrade(address newAddress)
JoinColony/solcover,test/sources/zeppelin/Migrations.sol,setCompleted(uint completed);upgrade(address newAddress)
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs10.sol,"addThing(string description, bytes32 url, string filehash, bytes32 filename)"
eris-ltd/eris,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs10.sol,"addThing(string description, bytes32 url, string filehash, bytes32 filename)"
monax/monax,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs10.sol,"addThing(string description, bytes32 url, string filehash, bytes32 filename)"
eris-ltd/eris-cli,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs10.sol,"addThing(string description, bytes32 url, string filehash, bytes32 filename)"
monax/cli,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs10.sol,"addThing(string description, bytes32 url, string filehash, bytes32 filename)"
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs10.sol,"addThing(string description, bytes32 url, string filehash, bytes32 filename)"
melonproject/protocol,contracts/factory/FundFactory.sol,createFeeManagerFor(address _manager);createFeeManager();createPolicyManagerFor(address _manager);createPolicyManager();createSharesFor(address _manager);createShares();createVaultFor(address _manager);createVault();completeFundSetupFor(address _manager);completeFundSetup();isValidFundName(string memory _name);__completeFundSetupFor(address _manager);__createFeeManagerFor(address _manager);__createPolicyManagerFor(address _manager);__createSharesFor(address _manager);__createVaultFor(address _manager);__hasPendingFund(address _manager)
TruLtd/tru-reputation-token,contracts/supporting/UpgradeAgent.sol,"isUpgradeAgent();upgradeFrom(address _from, uint256 _value)"
BlockchainLabsNZ/Unconf-DApp,contracts/strings.sol,"memcpy(uint dest, uint src, uint len);toSlice(string self);len(bytes32 self);copy(slice self);toString(slice self);len(slice self);empty(slice self);compare(slice self, slice other);equals(slice self, slice other);concat(slice self, slice other)"
Vorxil/MarketStake,contracts/MarketStake.sol,"changePrice(bytes32 id, uint newPrice);changeMinStake(bytes32 id, uint newMinimum);changeStakeRate(bytes32 id, uint newRate);changeTolerance(bytes32 id, uint newTolerance);shutdownMarket(bytes32 id);order(bytes32 id, uint amount, uint stakeOffer);confirm(bytes32 id);completeOrder(bytes32 id, uint reading);cancelOrder(bytes32 id);bilateralCancelOrder(bytes32 id);depositClient();withdrawClient();depositProvider();withdrawProvider();upgradeDuties()"
QTBlockchain/SolidityNWeb3,SmartContracts/March2018/FareContract/contracts/Discount.sol,Discount();discount();AddLocation(string location)
PeculiumPCL/Peculium,contracts/v0.7/Bounty.sol,"Bounty(uint256 amount);payBountyManager();airdropsTokens(address[] _vaddr, uint256[] _vamounts);payBounties(address[] _vaddr, uint256[] _vamounts)"
dmx374/zeppelin-solidity,contracts/token/PausableToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value)"
erooijak/ethlance,resources/public/contracts/src/ethlanceMessage.sol,EthlanceMessage(address _ethlanceDB)
dltdojo/courses,ethereum/solidity/T120_Contract.sol,add();testAdd();testFallbackThenAdd();testTransferGasIssue();testTransferGas()
chenlian2015/eosEthMarketSample,contracts/OLTestSynataxBB.sol,hello()
kleroterion/dapp,contracts/CourtBuyable.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);Court(address[] accounts, uint256[] tokens);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);blocked(address account);activateTokensForArbitration(uint256 tokens);activateTokensForJury(uint256 tokens);drawnArbiter(address account, uint256 r);drawnTokens(address account, uint256 r, uint256 t);createDispute(uint256 r);arbitrate(uint256 disputeID, bool voteA);untrustedExecuteRuling(uint256 disputeID);appealRuling(uint256 disputeID, uint256 r);voteRuling(uint256 disputeID, bool voteA);executeTokenRepartition(uint256 disputeID);penalizeInactiveArbitrators(address[] accounts, uint256[] disputeIDs);penalizeInactiveJuries(address[] accounts, uint256[] disputeIDs);nextSession();activationOpen();disputeOpen();voteOpen();appealOpen();penalizationOpen();executionOpen();getAppeals(uint256 disputeID);getHasVoted(uint256 disputeID, address account);getVoteStake(uint256 disputeID, uint256 appeal, uint256 voteID, bool stakeA);getVoteAccount(uint256 disputeID, uint256 appeal, uint256 voteID);activatedArbitrationTokens(address account);activatedJuryTokens(address account);nbDispute();Arbitrable(Court _court);ruleA(uint256 disputeID);ruleB(uint256 disputeID);TwoPartyArbitrable(Court _court, address _partyB, uint256 _timeToReac);ruleA(uint256 disputeID);ruleB(uint256 disputeID);executeRulingA(uint256 _disputeID);executeRulingB(uint256 _disputeID);actionA(uint256 _disputeID);actionB(uint256 _disputeID);clean();request(bytes32 _hashRandom);counterRequest(uint256 _secondRandom);createDispute(uint256 firstRandom);hash(uint256 n);executeDueToInactivity(bool executeA);appeal(bytes32 _hashRandom);counterAppeal(uint256 _secondRandom);createAppeal(uint256 firstRandom);ExampleTwoPartyArbitrable(Court _court, address _partyB, uint256 _timeToReac);actionA(uint256 _disputeID);actionB(uint256 _disputeID);ArbitratedBuy(uint256 _price, uint32 _daysToOppose, Court _court, uint256 _timeToReac);pay();actionA(uint256 _disputeID);actionB(uint256 _disputeID);releaseToSeller();releaseToBuyer();block();withdrawAfterTime();BuyableCourt(address[] accounts, uint256[] tokens);buyTokens()"
PeterBorah/smart-contract-security-examples,contracts/CircuitBreaker.sol,"CircuitBreaker(address _curator, address _authorizedSender, uint _period, uint _limit);transfer(uint amount, address to);updatePeriod();releasePendingTransfer(uint id);stopTransfer(uint id)"
stanta/darfchain,ICO/contracts/StandardToken.sol,"transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);balanceOf(address _owner);approve(address _spender, uint _value);allowance(address _owner, address _spender);addApproval(address _spender, uint _addedValue);subApproval(address _spender, uint _subtractedValue)"
Fermion-Project/Light-Wallet,source_gnosis/contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
Fermion-Project/Light-Wallet,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
jellegerbrandy/daostack,contracts/zeppelin-solidity/token/StandardToken.sol,"transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);balanceOf(address _owner);approve(address _spender, uint _value);allowance(address _owner, address _spender)"
cgewecke/solcover,test/sources/zeppelin/token/StandardToken.sol,"transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);balanceOf(address _owner);approve(address _spender, uint _value);allowance(address _owner, address _spender)"
WingsDao/contracts,contracts/zeppelin/token/StandardToken.sol,"transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);balanceOf(address _owner);approve(address _spender, uint _value);allowance(address _owner, address _spender)"
JoinColony/solcover,test/sources/zeppelin/token/StandardToken.sol,"transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);balanceOf(address _owner);approve(address _spender, uint _value);allowance(address _owner, address _spender)"
AnnaIsAWang/LedgerLabsCoops2016,PaymentChannel/PaymentChannel.sol,"PaymentChannel(address address0, address address1, uint _timeout);endContract(uint _payToZero, uint _nonce, uint8 v, bytes32 r, bytes32 s);finaliseContract();getHash(uint payToZero, uint nonce)"
BancoSabadell/bs-token-data,contracts/BSTokenData.sol,"BSTokenData(address permissionManagerAddress);setBalance(address account, uint256 balance);getBalance(address account);setTotalSupply(uint256 aTotalSupply);getTotalSupply();setAllowance(address account, address spender, uint256 amount);getAllowance(address account, address spender);freezeAccount(address account, bool freeze);frozenAccount(address account);freezeAccountForLogic(address account, bool freeze);frozenAccountForLogic(address account);addLogic(address logic);removeLogic(address logic)"
kabl/sol-dns,src/main/resources/contracts/SolDnsApp.sol,"register(bytes32 dnsName, bytes32 entry);deleteEntryByName(bytes32 dnsName);getEntryByName(bytes32 name);getOwnerByName(bytes32 dnsName)"
Vourhey/learning-center,sol/Lesson_6.sol,execute(Congress _congress)
ChicoBitcoinJoe/Matriarch,contracts/MeDao.sol,"proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);getWeight(address _voter);passed(uint _proposal_id);toggleTransfers();easyUpdateMatriarch(address newAddress)"
ChronoBank/LX-SC,contracts/base/BitOps.sol,"_hasFlag(uint _flags, uint _flag);_hasFlags(uint _flags, uint _flagsToCheck);_isSingleFlag(uint _flag);_isOddFlag(uint _flag);_isFullOrNull(uint _flags, uint _flag);_ifEvenThenOddTooFlags(uint _flags)"
DonorToken/DonorToken,test/helpers-my/ERC23ContractAccepter.sol,"tokenFallback(address /*_from*/, uint256 /*_value*/, bytes /*_data*/)"
cgewecke/eth-gas-reporter,mock/contracts/EtherRouter/EtherRouter.sol,setResolver(address _resolver)
raiden-network/raiden-token,contracts/distributor.sol,Distributor(address _auction_address);distribute(address[] addresses)
bluedroplet/tokenized-splitter-ethereum,tokenized_splitter.sol,"TokenizedSplitter(string tokenName, string tokenSymbol, uint248 tokenTotalSupply);allocateCash();cashout();transfer(address _to, uint256 _value);balanceOf(address _owner);cashBalanceOf(address _owner)"
alice-si/contracts,contracts/alice/CuratedWithWarnings.sol,blockTransfer(uint _transferId)
DigixGlobal/truffle,build/Assert.sol,"addMod(uint a, uint b, uint modulus);testAdd();testAdd();fail(string message);equal(string a, string b, string message);notEqual(string a, string b, string message);isEmpty(string str, string message);isNotEmpty(string str, string message);equal(bytes32 a, bytes32 b, string message);notEqual(bytes32 a, bytes32 b, string message);isZero(bytes32 bts, string message);isNotZero(bytes32 bts, string message);equal(address a, address b, string message);notEqual(address a, address b, string message);isZero(address addr, string message);isNotZero(address addr, string message);isTrue(bool b, string message);isFalse(bool b, string message);equal(bool a, bool b, string message);notEqual(bool a, bool b, string message);equal(uint a, uint b, string message);notEqual(uint a, uint b, string message);isAbove(uint a, uint b, string message);isAtLeast(uint a, uint b, string message);isBelow(uint a, uint b, string message);isAtMost(uint a, uint b, string message);isZero(uint number, string message);isNotZero(uint number, string message);equal(int a, int b, string message);notEqual(int a, int b, string message);isAbove(int a, int b, string message);isAtLeast(int a, int b, string message);isBelow(int a, int b, string message);isAtMost(int a, int b, string message);isZero(int number, string message);isNotZero(int number, string message);equal(uint[] arrA, uint[] arrB, string message);notEqual(uint[] arrA, uint[] arrB, string message);lengthEqual(uint[] arr, uint length, string message);lengthNotEqual(uint[] arr, uint length, string message);equal(int[] arrA, int[] arrB, string message);notEqual(int[] arrA, int[] arrB, string message);lengthEqual(int[] arr, uint length, string message);lengthNotEqual(int[] arr, uint length, string message);equal(address[] arrA, address[] arrB, string message);notEqual(address[] arrA, address[] arrB, string message);lengthEqual(address[] arr, uint length, string message);lengthNotEqual(address[] arr, uint length, string message);equal(bytes32[] arrA, bytes32[] arrB, string message);notEqual(bytes32[] arrA, bytes32[] arrB, string message);lengthEqual(bytes32[] arr, uint length, string message);lengthNotEqual(bytes32[] arr, uint length, string message);balanceEqual(address a, uint b, string message);balanceNotEqual(address a, uint b, string message);balanceIsZero(address a, string message);balanceIsNotZero(address a, string message);_report(bool result, string message);_stringsEqual(string a, string b);_itoa(int n, uint8 radix);_utoa(uint n, uint8 radix);_utoa(uint8 u);_ltoa(bool val);htoa(address addr);_tag(string value, string tag);_tag(int value, string tag);_tag(uint value, string tag);_tag(bool value, string tag);_appendTagged(string tagged, string str);_appendTagged(string tagged0, string tagged1, string str)"
iurimatias/embark-framework,packages/embark/src/test/contracts/contract_with_http_import.sol,SimpleStorage(uint initialValue);set(uint x);get()
woshidama323/hello-github,back/BetContract.sol,"toBytes(uint8 x);roundinfo();buy(uint256 _affCode);checkPrize(uint256 _pID, uint256 _affCode, bytes ticket);judge(uint256 pId, bytes ticket);withdraw();activate();updateNextRoundInfo();newRound();generateRandom()"
erkmos/moeda,contracts/MigrationAgent.sol,"migrateTo(address beneficiary, uint256 amount)"
credsign/credsign.github.io,contracts/Index.sol,add(uint256 contentID)
cashpokerpro-dev/cash-smartcontracts,contracts/token/TokenVesting.sol,"TokenVesting(address _beneficiary, uint256 _start, uint256 _cliff, uint256 _duration, bool _revocable);release(ERC20Basic token);revoke(ERC20Basic token);vestedAmount(ERC20Basic token)"
maraoz/zeppelin-solidity,test/helpers/StandardTokenMock.sol,"StandardTokenMock(address initialAccount, uint initialBalance)"
eminogrande/token-contract,src/contracts/human-standard-token.sol,"approveAndCall(address _spender, uint256 _value, bytes _extraData)"
montyly/manticore,tests/ethereum/contracts/consensys_benchmark/reentrancy_nostateeffect.sol,"run(uint256 param);run(address base, uint256 param)"
trailofbits/manticore,tests/ethereum_bench/consensys_benchmark/reentrancy_nostateeffect.sol,"run(uint256 param);run(address base, uint256 param)"
ownage-ltd/ether-router,contracts/test/List.sol,"setList(uint key, uint[] _data);getLength(uint key);getReturnSize(uint key);getAll(uint key)"
TruLtd/tru-reputation-token,src/0.1.5/TruCrowdSaleFull.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);isValid(address input);toString(address input);addressLength(address input);Ownable();transferOwnership(address newOwner);balanceOf(address who);transfer(address to, uint256 value);transfer(address _to, uint256 _value);balanceOf(address _owner);allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);increaseApproval(address _spender, uint _addedValue);decreaseApproval(address _spender, uint _subtractedValue);setReleaseAgent(address addr);setTransferAgent(address addr, bool state);releaseTokenTransfer();mint(address _to, uint256 _amount);finishMinting(bool _presale, bool _sale);isUpgradeAgent();upgradeFrom(address _from, uint256 _value);TruUpgradeableToken(address _upgradeMaster);upgrade(uint256 _value);setUpgradeAgent(address _agent);getUpgradeState();setUpgradeMaster(address _master);canUpgrade();TruReputationToken();changeBoardAddress(address _newAddress);canUpgrade();setUpgradeMaster(address _master);halt();unhalt();buy();updateWhitelist(address _purchaser, uint _status);changeEndTime(uint256 _endTime);hasEnded();checkSaleValid();validatePurchase(address _purchaser);forwardFunds();buyTokens(address _purchaser);finalise();completion()"
pash7ka/zeppelin-solidity,contracts/token/TokenVesting.sol,"TokenVesting(address _beneficiary, uint256 _start, uint256 _cliff, uint256 _duration, bool _revocable);release(ERC20Basic token);revoke(ERC20Basic token);releasableAmount(ERC20Basic token);vestedAmount(ERC20Basic token)"
iswarm/p2pCny,contracts/token/TokenVesting.sol,"TokenVesting(address _beneficiary, uint256 _start, uint256 _cliff, uint256 _duration, bool _revocable);release(ERC20Basic token);revoke(ERC20Basic token);releasableAmount(ERC20Basic token);vestedAmount(ERC20Basic token)"
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.4.24/thisLocal.sol,b(address a)
soad003/browser-solidity,test/staticanalysis/test-contracts/thisLocal.sol,b(address a)
adklempner/solidity-license,contracts/zeppelin/ownership/HasNoContracts.sol,reclaimContract(address contractAddr)
michinbear/solidity,test/compilationTests/zeppelin/ownership/HasNoContracts.sol,reclaimContract(address contractAddr)
elementrem/solidity,test/compilationTests/zeppelin/ownership/HasNoContracts.sol,reclaimContract(address contractAddr)
adamdossa/ProfitSharingContract,installed_contracts/zeppelin/contracts/ownership/HasNoContracts.sol,reclaimContract(address contractAddr)
etherisc/flightDelay,contracts/Owned.sol,Owned()
airalab/DAO-IPCI,contracts/Operated.sol,Operated(address _operator)
easyMINE/SmartContracts,contracts/Token/EasyMineToken.sol,burn(uint256 _value)
iurimatias/embark-framework,dapps/tests/contracts/contracts/some_contract.sol,""
matmoi/Roulette,contracts/Roulette.sol,Roulette(uint interval);getNextRoundTimestamp();getBetsCountAndValue();betSingle(uint number);betEven();betOdd();launch();getPayoutForType(BetType betType)
ethplay/ethplay,contracts/ownership/Ownable.sol,Ownable();transferOwnership(address newOwner)
NoteGio/openrelay,js/contracts/base/Ownable.sol,Ownable();transferOwnership(address newOwner)
Pavel-DV/ChronoMint,old/ChronoBankAsset.sol,"init(address _proxy);__transferWithReference(address _to, uint _value, string _reference, address _sender);_transferWithReference(address _to, uint _value, string _reference, address _sender);__transferFromWithReference(address _from, address _to, uint _value, string _reference, address _sender);_transferFromWithReference(address _from, address _to, uint _value, string _reference, address _sender);__approve(address _spender, uint _value, address _sender);_approve(address _spender, uint _value, address _sender)"
bshevchenko/ChronoMint,old/ChronoBankAsset.sol,"init(address _proxy);__transferWithReference(address _to, uint _value, string _reference, address _sender);_transferWithReference(address _to, uint _value, string _reference, address _sender);__transferFromWithReference(address _from, address _to, uint _value, string _reference, address _sender);_transferFromWithReference(address _from, address _to, uint _value, string _reference, address _sender);__approve(address _spender, uint _value, address _sender);_approve(address _spender, uint _value, address _sender)"
WishFinanceCom/WF-contracts,contracts/lockers/Lockup6m.sol,"emitError(bytes32 _message);_error(uint _errorCode, bytes32 _message);setupEventsHistory(address _eventsHistory);payIn();payOut(address _getter);getLockedFunds();getLockedFundsReleaseTime()"
yoLUkAsss/DEscrutinio,contracts/CountsCRUD.sol,"createCounts(bytes32 partido, address countsAddress);getCountsById(uint id);getCountsByName(bytes32 name);existsCountsById(uint id);existsCountsByName(bytes32 name);getAllCounts();setData(bytes32 candidate, uint distritoId, uint escuelaId, uint mesaId, uint8[] result)"
AleksandrLeonov/Baccara-Smart-Contract,player.sol,"Player();setResults(address name, uint result, uint[2] value);getGameResults();close()"
e-nettet/CustomerConsentWallet,contracts/AliasContract.sol,""
stanta/darfchain,ICO/contracts/RelaunchedCrowdsale.sol,"RelaunchedCrowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, uint _maximumSellableTokens);getRestoredTransactionStatus(uint _originalTxHash);setInvestorData(address _addr, uint _weiAmount, uint _tokenAmount, uint _originalTxHash);setInvestorDataAndIssueNewToken(address _addr, uint _weiAmount, uint _tokenAmount, uint _originalTxHash)"
nordledger/eireg,contracts/EInvoicingRegistry.sol,"EInvoicingRegistry();hasCompany(string vatId);getVatIdByAddress(string invoicingAddress);createCompany(string vatId);createInvoicingAddress(string vatId, string invoicingAddress);setCompanyData(string vatId, ContentType contentType, string data);setInvoicingAddressData(string vatId, string invoicingAddress, ContentType contentType, string data);getBusinessInformation(string vatId, ContentType contentType);getInvoicingAddressCount(string vatId);getInvoicingAddressByIndex(string vatId, uint idx);getAddressInformation(string invoicingAddress, ContentType contentType);updateRoutingPreference(string vatId, string preferences);getCompanyPreferences(string vatId);canUpdateCompany(string vatId, address sender);canUpdateInvoicingAddress(string invoicingAddress, address sender);canUpdateCompanyPreferences(string vatId, address sender);sendInvoice(string toInvoiceAddress, string fromInvoiceAddress, string invoiceId, string payload);getInvoice(string invoiceId)"
aragon/aragon-core,contracts/lib/math/SafeMath8.sol,"mul(uint8 _a, uint8 _b);div(uint8 _a, uint8 _b);sub(uint8 _a, uint8 _b);add(uint8 _a, uint8 _b);mod(uint8 a, uint8 b)"
FiatCentralBank/fiatcoin,contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
Dicoiner/irianna-solidity,contracts/token/LimitedTransferToken.sol,"transferableTokens(address holder, uint64 time);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);transferableTokens(address holder, uint64 time)"
QTBlockchain/SolidityNWeb3,SmartContracts/revisit/contracts/MathPractice.sol,MathPractice();getResult();addToResult(int value)
livepeer/protocol,contracts/libraries/MathUtils.sol,"validPerc(uint256 _amount);percOf(uint256 _amount, uint256 _fracNum, uint256 _fracDenom);percOf(uint256 _amount, uint256 _fracNum);percPoints(uint256 _fracNum, uint256 _fracDenom)"
charlieknoll/dgpv2,backup/SafeMath.sol,"assert(bool assertion);safeAdd(uint256 x, uint256 y);safeSubtract(uint256 x, uint256 y);safeMult(uint256 x, uint256 y)"
dltdojo/courses,ethereum/service/poa/T100_Token.sol,FooToken()
dltdojo/courses,ethereum/web3js/T100_Token.sol,FooToken()
aragon/aragon-core,contracts/test/mocks/AppStub.sol,initialize();requiresInitialization();setValue(uint i);setValueParam(uint i);getValue();getValue()
Juzix/BlockChain-Demo,contracts/sysbase/BaseModule.sol,"BaseModule();addModule(string _json);addContract(string _json);addMenu(string _json);addAction(string _json);addRole(string _json);updModule(string _json);moduleIsExist(string _json);addActionToRole(string _moduleId, string _roleId, string _actionId);changeModuleOwner(string _moduleName, string _moduleVersion, address _newOwner)"
creditbit-dev/credit2.0,contracts/CreditIDENTITY.sol,"CreditIDENTITY(address _creditDao);addAddressDescription(string _addressDescription);getFieldData(uint _index);addAccountData(string _field, bytes _data);addAddressMappingProposal(address _addressToMap);approveMappingProposal(address _addressThatMapped);getAccountData(address _accountAddress, string _field);getAddressDescription(address _queryAddress);addField(string _fieldName, uint _fieldType);toggleFieldActivation(string _fieldName);editAddressDescription(address _targetAddress, string _addressDescription);editAccountData(address _targetAddress, string _field, bytes _data);setCreditDao(address _newCreditDao);killContract()"
ElcoinCurrency/ElcoinContract,contracts/Elcoin.sol,"withdraw(address _to, uint _value);totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);unapprove(address _spender);allowance(address _owner, address _spender);Elcoin();_db();_setFeeStructure(uint _absMinFee, uint _feePercent, uint _absMaxFee);_rawTransfer(ElcoinDb _db, address _from, address _to, uint _value);_transfer(ElcoinDb _db, address _from, address _to, uint _value);_transferWithReward(ElcoinDb _db, address _from, address _to, uint _value);_recoverAccount(ElcoinDb _db, address _old, address _new);balanceOf(address _account);calculateFee(uint _amount);issueCoin(address _to, uint _value, uint _totalSupply);batchTransfer(address[] _to, uint[] _value);transfer(address _to, uint _value);transferPool(address _from, address _to, uint _value);rewardTo(address _to, uint _amount);recoverAccount(address _old, address _new);setFeeAddr(address _feeAddr);setFee(uint _absMinFee, uint _feePercent, uint _absMaxFee);setupTreasury(address _treasury, uint _txGasPriceLimit);updateRefundGas();setOperationsCallGas(uint _transfer);_refund(uint _value)"
evoluchain/meetup-sc-testing,contracts/TokenERC20/SampleRecipientSuccess.sol,"receiveApproval(address _from, uint256 _value, address _tokenContract, bytes _extraData)"
customizablebasicincome/cbi-tokensale,contracts/CBITokenCrowdsale.sol,"CBITokenCrowdsale(uint256 _startTime, uint256 _endTime, uint256 _rate, uint256 _goal, uint256 _cap, address _wallet);createTokenContract()"
mhhf/dapple,test/_fixtures/linker_test_package/.dapple/packages/pkg/src/sol/dapple_contract.sol,""
nexusdev/dapple,test/_fixtures/linker_test_package/.dapple/packages/pkg/src/sol/dapple_contract.sol,""
pacifics/Dao,PassManager.sol,removeOrder(uint _order);buyTokens()
ganchix/ETH_16_Ethereum,UNIT-5/shopfrontProject/contracts/Administrable.sol,Administrable(address administratorAddress);getAdministrator();setAdministrator(address newAdministrator)
wealdtech/domainsale,test/contracts/MockEnsRegistrar.sol,"setSubnodeOwner(bytes32 node, bytes32 hash, address owner);setOwner(bytes32 node, address owner);setResolver(bytes32 node, address resolver);owner(bytes32 node);Deed(address _owner);setOwner(address newOwner);setRegistrar(address newRegistrar);setBalance(uint newValue, bool throwOnFailure);closeDeed(uint refundRatio);destroyDeed();MockEnsRegistrar(AbstractENS _ens, bytes32 _rootNode);register(bytes32 hash);state(bytes32 hash);entries(bytes32 hash);deed(bytes32 hash);transfer(bytes32 hash, address newOwner);invalidate(bytes32 hash);_tryEraseSingleNode(bytes32 label)"
cgewecke/solcover,test/sources/zeppelin/Shareable.sol,"Shareable(address[] _owners, uint _required);revoke(bytes32 _operation);getOwner(uint ownerIndex);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);clearPending()"
WingsDao/contracts,contracts/zeppelin/Shareable.sol,"Shareable(address[] _owners, uint _required);revoke(bytes32 _operation);getOwner(uint ownerIndex);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);clearPending()"
JoinColony/solcover,test/sources/zeppelin/Shareable.sol,"Shareable(address[] _owners, uint _required);revoke(bytes32 _operation);getOwner(uint ownerIndex);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);clearPending()"
shahankhatch/dapp-bin,registrar/OwnedRegistrar.sol,"currentOwner();disown(string _name);setAddr(string _name, address _a);setSubRegistrar(string _name, address _registrar);setContent(string _name, bytes32 _content);record(string _name);addr(string _name);subRegistrar(string _name);content(string _name)"
LianaHus/dapp-bin,registrar/OwnedRegistrar.sol,"currentOwner();disown(string _name);setAddr(string _name, address _a);setSubRegistrar(string _name, address _registrar);setContent(string _name, bytes32 _content);record(string _name);addr(string _name);subRegistrar(string _name);content(string _name)"
RepublicMaster/dapp-bin,registrar/OwnedRegistrar.sol,"currentOwner();disown(string _name);setAddr(string _name, address _a);setSubRegistrar(string _name, address _registrar);setContent(string _name, bytes32 _content);record(string _name);addr(string _name);subRegistrar(string _name);content(string _name)"
ethereum/dapp-bin,registrar/OwnedRegistrar.sol,"currentOwner();disown(string _name);setAddr(string _name, address _a);setSubRegistrar(string _name, address _registrar);setContent(string _name, bytes32 _content);record(string _name);addr(string _name);subRegistrar(string _name);content(string _name)"
vaporry/dapp-bin,registrar/OwnedRegistrar.sol,"currentOwner();disown(string _name);setAddr(string _name, address _a);setSubRegistrar(string _name, address _registrar);setContent(string _name, bytes32 _content);record(string _name);addr(string _name);subRegistrar(string _name);content(string _name)"
Henri93/PennBlockchain-Smart-Contracts,Token EX/contracts/ERCToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
DonorToken/DonorToken,test/helpers/CappedCrowdsaleImpl.sol,""
y12studio/dltdojo,dockerfiles/truffle/v320/ddjtab/contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr);sendAliceBlue(address _to, uint16 _certid , uint256 _value, bytes _ipfsHash)"
aragon/aragon-core,contracts/test/helpers/Assert.sol,"addMod(uint a, uint b, uint modulus);testAdd();testAdd();fail(string message);equal(string a, string b, string message);notEqual(string a, string b, string message);isEmpty(string str, string message);isNotEmpty(string str, string message);equal(bytes32 a, bytes32 b, string message);notEqual(bytes32 a, bytes32 b, string message);isZero(bytes32 bts, string message);isNotZero(bytes32 bts, string message);equal(address a, address b, string message);notEqual(address a, address b, string message);isZero(address addr, string message);isNotZero(address addr, string message);isTrue(bool b, string message);isFalse(bool b, string message);equal(bool a, bool b, string message);notEqual(bool a, bool b, string message);equal(uint a, uint b, string message);notEqual(uint a, uint b, string message);isAbove(uint a, uint b, string message);isAtLeast(uint a, uint b, string message);isBelow(uint a, uint b, string message);isAtMost(uint a, uint b, string message);isZero(uint number, string message);isNotZero(uint number, string message);equal(int a, int b, string message);notEqual(int a, int b, string message);isAbove(int a, int b, string message);isAtLeast(int a, int b, string message);isBelow(int a, int b, string message);isAtMost(int a, int b, string message);isZero(int number, string message);isNotZero(int number, string message);equal(uint[] arrA, uint[] arrB, string message);notEqual(uint[] arrA, uint[] arrB, string message);lengthEqual(uint[] arr, uint length, string message);lengthNotEqual(uint[] arr, uint length, string message);equal(int[] arrA, int[] arrB, string message);notEqual(int[] arrA, int[] arrB, string message);lengthEqual(int[] arr, uint length, string message);lengthNotEqual(int[] arr, uint length, string message);equal(address[] arrA, address[] arrB, string message);notEqual(address[] arrA, address[] arrB, string message);lengthEqual(address[] arr, uint length, string message);lengthNotEqual(address[] arr, uint length, string message);equal(bytes32[] arrA, bytes32[] arrB, string message);notEqual(bytes32[] arrA, bytes32[] arrB, string message);lengthEqual(bytes32[] arr, uint length, string message);lengthNotEqual(bytes32[] arr, uint length, string message);balanceEqual(address a, uint b, string message);balanceNotEqual(address a, uint b, string message);balanceIsZero(address a, string message);balanceIsNotZero(address a, string message);_report(bool result, string message);_stringsEqual(string a, string b);_itoa(int n, uint8 radix);_utoa(uint n, uint8 radix);_utoa(uint8 u);_ltoa(bool val);htoa(address addr);_tag(string value, string tag);_tag(int value, string tag);_tag(uint value, string tag);_tag(bool value, string tag);_appendTagged(string tagged, string str);_appendTagged(string tagged0, string tagged1, string str)"
Vorxil/MarketStake,test/TestLedger.sol,beforeAll();clear();testInitialLedgerBalance();testAddPending();testRemovePending();testAddLocked();testRemoveLocked();testAddGains();testRemoveGains();testFreeSpace();testBalanceOf();testSupplyOf()
Capillar/capillar-solidity,contracts/basic/mortal.sol,remove()
TrueBitFoundation/webasm-solidity,contracts/manip.sol,"test();toMemory(uint a, uint b);storeN(uint8[] mem, uint addr, uint n, uint v);loadN(uint8[] mem, uint addr, uint n);fromMemory(uint8[] mem);typeSize(uint ty);store(uint8[] mem, uint addr, uint v, uint ty, uint packing);storeX(uint8[] mem, uint addr, uint v, uint hint);load(uint8[] mem, uint addr, uint ty, uint packing, bool sign_extend);loadX(uint8[] mem, uint addr, uint hint);test(uint a, uint b)"
rachel-ftw/solidity-intro-first-contract,simpleStorage.sol,set(uint x);get()
crown42/crown42.github.io,simplestorage.sol,set(uint x);get()
sjmackenzie/sputnikvm,docs/app_user/SimpleStorage.sol,set(uint x);get()
WingsDao/contracts,contracts/zeppelin/token/CrowdsaleToken.sol,createTokens(address recipient);getPrice()
RealEstateAssetLedger/real_contract,contracts/DevTokensHolder.sol,"DevTokensHolder(address _owner, address _contribution, address _real);collectTokens();months(uint256 m);getTime();claimTokens(address _token)"
mothershipcx/contracts,etherscan/MSP.sol,"totalSupply();totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);Controlled();changeController(address _newController);Burnable();changeBurner(address _newBurner);totalSupplyAt(uint _blockNumber);generateTokens(address _owner, uint _amount);destroyTokens(address _owner, uint _amount);enableTransfers(bool _transfersEnabled);claimTokens(address _token);proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);receiveApproval(address _from, uint256 _amount, address _token, bytes _data);transfer(address _to, uint256 _amount);balanceOf(address _owner);approve(address _spender, uint256 _amount);totalSupply();balanceOfAt(address _owner, uint _blockNumber);totalSupplyAt(uint _blockNumber);enableTransfers(bool _transfersEnabled);isContract(address _addr);min(uint a, uint b);getBlockNumber();claimTokens(address _token);MSP(address _tokenFactory)"
cashpokerpro-dev/cash-smartcontracts,contracts/CashPokerProICO.sol,"balanceOf(address who);transferFrom(address _from, address _to, uint256 _value);mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);Ownable();transferOwnership(address newOwner);pause();unpause();addPromo(bytes32 promoPublicKey, uint userPercentToken, address dealer, uint dealerPercentToken, uint dealerPercentETH);removePromo(bytes32 promoPublicKey);buyTokens(address beneficiary);sendTokens(address to, uint tokenAmount);getCountBonus(uint weiAmount);getTimeBonus(uint time);withdrawal(address to);holdTokenInvestorsCount();finalSendTokens()"
gnidan/interval-trees-solidity,test/TestExample.sol,beforeAll()
chfast/cpp-ethereum,test/performance/rc5.sol,"shift_left(uint32 v, uint32 n);shift_right(uint32 v, uint32 n);rotate_left(uint32 v, uint32 n);rotate_right(uint32 v, uint32 n);encrypt(uint32[26] S, uint32[4] inout);decrypt(uint32[26] S, uint32[4] inout);expand(uint32[4] L, uint32[26] S);test(uint32[26] S, uint32[4] msg)"
kakkarut/true-clinical,src/Regulator.sol,"Regulator();submitProposal(bytes32 _drugName, uint32 _startDate, uint32 _endDate);getProposalsCount();getProposalById(uint32 _id);acceptProposal(uint _id);rejectProposal(uint _id);submitCro(bytes32 _name, bytes32 _url);changeCroStatus(address _addr, uint8 _status);getCrosCounter();getCroById(uint _id)"
xas/ico-regroup,ProxyIcos/ProxyIcos.sol,"killedContract();version();setMaxCap(uint256 _maxCap);setAddresses(address _buyer, address _token);activateKillSwitch();withdraw(address user);sendToBuyer();getTheTokens()"
GovernX/governx-contracts,src/contracts/utils/Controller.sol,"newProposal(string _metadata, bytes _data);vote(uint256 _proposalID, uint256 _position, uint256 _weight);execute(uint256 _proposalID)"
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/test/helpers/PullPaymentMock.sol,"PullPaymentMock();callSend(address dest, uint256 amount)"
pash7ka/zeppelin-solidity,test/helpers/PullPaymentMock.sol,"PullPaymentMock();callSend(address dest, uint256 amount)"
Dicoiner/irianna-solidity,test/helpers/PullPaymentMock.sol,"PullPaymentMock();callSend(address dest, uint256 amount)"
pz7/liquet,node_modules/zeppelin-solidity/test/helpers/PullPaymentMock.sol,"PullPaymentMock();callSend(address dest, uint256 amount)"
dmx374/zeppelin-solidity,test/helpers/PullPaymentMock.sol,"PullPaymentMock();callSend(address dest, uint256 amount)"
cashpokerpro-dev/cash-smartcontracts,test/helpers/PullPaymentMock.sol,"PullPaymentMock();callSend(address dest, uint256 amount)"
status-im/status-network-token,contracts/test/SNTPlaceHolderMock.sol,"SNTPlaceHolderMock(address _owner, address _snt, address _contribution, address _sgtExchanger);getTime();setMockedTime(uint _t)"
woshidama323/hello-github,back/usingOraclize.sol,"oraclize_setNetwork(uint8 networkID);oraclize_setNetwork();__callback(bytes32 myid, string result);__callback(bytes32 myid, string result, bytes proof);oraclize_getPrice(string datasource);oraclize_getPrice(string datasource, uint gaslimit);oraclize_query(string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2, uint gaslimit);oraclize_query(string datasource, string[] argN);oraclize_query(uint timestamp, string datasource, string[] argN);oraclize_query(uint timestamp, string datasource, string[] argN, uint gaslimit);oraclize_query(string datasource, string[] argN, uint gaslimit);oraclize_query(string datasource, string[1] args);oraclize_query(uint timestamp, string datasource, string[1] args);oraclize_query(uint timestamp, string datasource, string[1] args, uint gaslimit);oraclize_query(string datasource, string[1] args, uint gaslimit);oraclize_query(string datasource, string[2] args);oraclize_query(uint timestamp, string datasource, string[2] args);oraclize_query(uint timestamp, string datasource, string[2] args, uint gaslimit);oraclize_query(string datasource, string[2] args, uint gaslimit);oraclize_query(string datasource, string[3] args);oraclize_query(uint timestamp, string datasource, string[3] args);oraclize_query(uint timestamp, string datasource, string[3] args, uint gaslimit);oraclize_query(string datasource, string[3] args, uint gaslimit);oraclize_query(string datasource, string[4] args);oraclize_query(uint timestamp, string datasource, string[4] args);oraclize_query(uint timestamp, string datasource, string[4] args, uint gaslimit);oraclize_query(string datasource, string[4] args, uint gaslimit);oraclize_query(string datasource, string[5] args);oraclize_query(uint timestamp, string datasource, string[5] args);oraclize_query(uint timestamp, string datasource, string[5] args, uint gaslimit);oraclize_query(string datasource, string[5] args, uint gaslimit);oraclize_query(string datasource, bytes[] argN);oraclize_query(uint timestamp, string datasource, bytes[] argN);oraclize_query(uint timestamp, string datasource, bytes[] argN, uint gaslimit);oraclize_query(string datasource, bytes[] argN, uint gaslimit);oraclize_query(string datasource, bytes[1] args);oraclize_query(uint timestamp, string datasource, bytes[1] args);oraclize_query(uint timestamp, string datasource, bytes[1] args, uint gaslimit);oraclize_query(string datasource, bytes[1] args, uint gaslimit);oraclize_query(string datasource, bytes[2] args);oraclize_query(uint timestamp, string datasource, bytes[2] args);oraclize_query(uint timestamp, string datasource, bytes[2] args, uint gaslimit);oraclize_query(string datasource, bytes[2] args, uint gaslimit);oraclize_query(string datasource, bytes[3] args);oraclize_query(uint timestamp, string datasource, bytes[3] args);oraclize_query(uint timestamp, string datasource, bytes[3] args, uint gaslimit);oraclize_query(string datasource, bytes[3] args, uint gaslimit);oraclize_query(string datasource, bytes[4] args);oraclize_query(uint timestamp, string datasource, bytes[4] args);oraclize_query(uint timestamp, string datasource, bytes[4] args, uint gaslimit);oraclize_query(string datasource, bytes[4] args, uint gaslimit);oraclize_query(string datasource, bytes[5] args);oraclize_query(uint timestamp, string datasource, bytes[5] args);oraclize_query(uint timestamp, string datasource, bytes[5] args, uint gaslimit);oraclize_query(string datasource, bytes[5] args, uint gaslimit);oraclize_cbAddress();oraclize_setProof(byte proofP);oraclize_setCustomGasPrice(uint gasPrice);oraclize_randomDS_getSessionPubKeyHash();getCodeSize(address _addr);parseAddr(string _a);strCompare(string _a, string _b);indexOf(string _haystack, string _needle);strConcat(string _a, string _b, string _c, string _d, string _e);strConcat(string _a, string _b, string _c, string _d);strConcat(string _a, string _b, string _c);strConcat(string _a, string _b);parseInt(string _a);parseInt(string _a, uint _b);oraclize_setNetworkName(string _network_name);oraclize_getNetworkName();oraclize_newRandomDSQuery(uint _delay, uint _nbytes, uint _customGasLimit);oraclize_randomDS_setCommitment(bytes32 queryId, bytes32 commitment);verifySig(bytes32 tosignh, bytes dersig, bytes pubkey);oraclize_randomDS_proofVerify__sessionKeyValidity(bytes proof, uint sig2offset);oraclize_randomDS_proofVerify__returnCode(bytes32 _queryId, string _result, bytes _proof);oraclize_randomDS_proofVerify__main(bytes proof, bytes32 queryId, bytes result, string context_name);copyBytes(bytes from, uint fromOffset, uint length, bytes to, uint toOffset);safer_ecrecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s);ecrecovery(bytes32 hash, bytes sig)"
adklempner/solidity-license,contracts/PostLicense.sol,"PostLicense();buyLicenseForETH();sellLicense();addAcceptedToken(address token, uint256 price, uint256 reimbursement);removeAcceptedToken(address token);getLicenseReimbursement(address token);getLicenseReimbursement();holdsValidLicense(address holder);getLicensePrice(address token);getLicensePrice();isAcceptedToken(address token)"
SafeContracts/TREX-token,AbstractToken.sol,"totalSupply();balanceOf(address owner);transfer(address to, uint256 value);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);allowance(address owner, address spender)"
locals-world/locals-app,truffle/contracts/localsTruth.sol,"localsTruth(address token, uint _verificationthresh);addVerification(address _hashowner, string _thehash, string _senderhash);seedVerification(string _thehash);checkVeracity(string _hash);kill()"
silasdavis/eris-db,tests/jobs_fixtures/app14-binding_abi_using_address_returns_pattern_single_instances/GSFactory.sol,set(uint x);get();create();getLast()
silasdavis/burrow,tests/jobs_fixtures/app14-binding_abi_using_address_returns_pattern_single_instances/GSFactory.sol,set(uint x);get();create();getLast()
eris-ltd/eris-db,tests/jobs_fixtures/app14-binding_abi_using_address_returns_pattern_single_instances/GSFactory.sol,set(uint x);get();create();getLast()
jellegerbrandy/daostack,contracts/Reputation.sol,"Reputation();reputationOf(address _owner);setReputation(address _account, uint256 _amount)"
Cryptonomica/cryptonomica,src/main/webapp/cryptoshares/contracts/Tests.sol,""
Xorek/SmartContract,User.sol,"User(address id_addr, address market_addr, address user_list_addr);getReceiptAmount(uint sheet_id_);getAvailableAmount(uint sheet_id_);freeze(uint sheet_id_, uint amount);listRequire(string user_id, uint sheet_id_, uint price, uint quo_qty);updateListReq(uint quo_id, uint deal_qty);delListReq(string user_id, uint quo_id, uint deal_qty);agreeNeg(string user_buy_id, uint neg_id)"
celeduc/dao_partnership,contracts/Partnership.sol,"proposeTransaction(address _to, uint _value, bytes _data, string _description);cancelTransaction(bytes32 _id);confirmTransaction(bytes32 _id);executeTransaction(bytes32 _id);distribute(address _recipient, uint _amount);distributeEvenly(uint _amount);repayLoan(address _recipient, uint _amount);withdraw(uint _amount);dissolve(address _beneficiary);isPartner(address _address)"
AlphaDinoRC/rockchain,test/RokToken.sol,"RokToken();burn(uint256 _value);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);balanceOf(address _owner);approve(address _spender, uint _value);allowance(address _owner, address _spender);setBalance(address _this, uint _value);setAllowance(address _owner, address _spender, uint value)"
GX-Coin/SmartContract,GxOwnedInterface.sol,isOwner(address accountAddress);addOwner(address accountAddress);removeOwner(address accountAddress)
GovernX/governx-contracts,src/contracts/utils/IPrivateServiceRegistry.sol,register(address _service);isService(address _service);services(uint256 _serviceId);ids(address _service)
montyly/manticore,tests/ethereum/contracts/detectors/retval_ok.sol,call();callchecked()
trailofbits/manticore,tests/ethereum/contracts/detectors/retval_ok.sol,call();callchecked()
michinbear/solidity,test/compilationTests/zeppelin/token/MintableToken.sol,"mint(address _to, uint256 _amount);finishMinting()"
elementrem/solidity,test/compilationTests/zeppelin/token/MintableToken.sol,"mint(address _to, uint256 _amount);finishMinting()"
InventionRegistry/buildingBloX,contracts/Blox.sol,put(string hash);get(string hash)
mitchellfchan/IKB,theRiver.sol,""
misrab/gethools,testdata/out.sol,"b();b();b();Sample();function();x(uint a, address b)"
web3j/web3j-maven-plugin,src/test/resources/issue-17/pkg1/Issue17relative1.sol,""
TruLtd/tru-reputation-token,contracts/TruSale.sol,"buy();updateWhitelist(address _purchaser, uint _status);changeEndTime(uint256 _endTime);hasEnded();checkSaleValid();validatePurchase(address _purchaser);forwardFunds();buyTokens(address _purchaser)"
tarsoqueiroz/NodeJS,Blockchain/Udemy/ethsolDevGuide/contracts/Inbox.sol,setMessage(string newMessage)
slockit/DAO,RewardOffer.sol,setRewardDivisor(uint _rewardDivisor);setDeploymentReward(uint _deploymentReward);getRewardDivisor();getDeploymentReward()
orbro/eth-enablers,DAO-develop/RewardOffer.sol,setRewardDivisor(uint _rewardDivisor);setDeploymentReward(uint _deploymentReward);getRewardDivisor();getDeploymentReward()
Spreadway/core,DAO-develop/RewardOffer.sol,setRewardDivisor(uint _rewardDivisor);setDeploymentReward(uint _deploymentReward);getRewardDivisor();getDeploymentReward()
ashellwig/Ethereum-Mutual-Fund,RewardOffer.sol,setRewardDivisor(uint _rewardDivisor);setDeploymentReward(uint _deploymentReward);getRewardDivisor();getDeploymentReward()
ganchix/ETH_16_Ethereum,UNIT-5/shopfrontProject/contracts/Pausable.sol,Pausable();isPaused();pause(bool pauseValue)
kr8os/token-sale-contracts,contracts/Locked.sol,Locked(uint _period)
modum-io/smartcontract,TemperatureMeasurementA_try1.sol,"done();generateReport(int8[] _temperatures, uint32[] _timestamps);verifyReport(uint16 series, int8[] _temperatures, uint32[] _timestamps);success();failed();nrMeasurements();nrFailures();failedTimestampSecondsAt(uint16 index);failedTimestampLength();failedTemperaturesAt(uint16 index);failedTemperaturesLength();temperatureRange();timestampFirst();timestampLast();hashLength();hashAt(uint16 index);shr(uint32 input, uint8 bits)"
DOkwufulueze/eth-vue,contracts/lib/arachnid/solidity-stringutils/strings.sol,"memcpy(uint dest, uint src, uint wordlen);toSlice(string memory self);len(bytes32 self);copy(slice memory self);toString(slice memory self);len(slice memory self);empty(slice memory self);compare(slice memory self, slice memory other);equals(slice memory self, slice memory other);nextRune(slice memory self, slice memory rune);nextRune(slice memory self);ord(slice memory self);keccak(slice memory self);startsWith(slice memory self, slice memory needle);beyond(slice memory self, slice memory needle);endsWith(slice memory self, slice memory needle);until(slice memory self, slice memory needle);findPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);rfindPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);find(slice memory self, slice memory needle);rfind(slice memory self, slice memory needle);split(slice memory self, slice memory needle, slice memory token);split(slice memory self, slice memory needle);rsplit(slice memory self, slice memory needle, slice memory token);rsplit(slice memory self, slice memory needle);count(slice memory self, slice memory needle);contains(slice memory self, slice memory needle);concat(slice memory self, slice memory other);join(slice memory self, slice[] memory parts)"
stevejaxon/ethereum-tutorials,contracts/Token.sol,"receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);transfer(address _to, uint256 _value);approve(address _spender, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);transferFrom(address _from, address _to, uint256 _value)"
chenlian2015/eosEthMarketSample,contracts/OLMarketServerInterface.sol,"callServer(string servarName, uint versionCaller);getFee(string servarName);preCheckAndPay(string servarName, uint versionCaller, address user);getCurrentVersion()"
cinderblockchain/cindertoken,contracts/token/TokenVesting.sol,"TokenVesting(address _beneficiary, uint256 _start, uint256 _cliff, uint256 _duration, bool _revocable);release(ERC20Basic token);revoke(ERC20Basic token);vestedAmount(ERC20Basic token)"
adridadou/eth-propeller-core,src/test/resources/conversionContract.sol,"strFunc(string memory str);uintFunc(uint uintValue);smallUintFunc(uint8 uintValue);intFunc(int intValue);addressFunc(address addr);addressPayableFunc(address addr);dateFunc(int dateValue);boolFunc(bool boolValue);arrayFunc(int[10] memory value);dynArrayFunc(int[] memory value);mixWithStringFunc(int test1, string memory test2, bool test3, string memory test4);complexReturnType(int test1, string memory test2, bool test3, string memory test4);bytesFunc(bytes memory value);signatureFunc(bytes memory value);mixStringAddressFunc(string memory str, address addr);recoverSimple(bytes32 hash, uint8 v, uint r, uint s);lstFunc(uint[] memory arr);recover(bytes32 hash, bytes memory sig)"
FekraTechnology/SmartSLA,05-Source Code/SMAG_Contract/contracts/DateTimeAPI.sol,"isLeapYear(uint16 year);getYear(uint timestamp);getMonth(uint timestamp);getDay(uint timestamp);getHour(uint timestamp);getMinute(uint timestamp);getSecond(uint timestamp);getWeekday(uint timestamp);toTimestamp(uint16 year, uint8 month, uint8 day);toTimestamp(uint16 year, uint8 month, uint8 day, uint8 hour);toTimestamp(uint16 year, uint8 month, uint8 day, uint8 hour, uint8 minute);toTimestamp(uint16 year, uint8 month, uint8 day, uint8 hour, uint8 minute, uint8 second)"
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/migrations/error/contracts/Abstract.sol,method()
LOOMIA/loomia,ethereum/contracts/BancorFormula.sol,"BancorFormula();calculatePurchaseReturn(uint256 _supply, uint256 _reserveBalance, uint32 _reserveRatio, uint256 _depositAmount);calculateSaleReturn(uint256 _supply, uint256 _reserveBalance, uint32 _reserveRatio, uint256 _sellAmount);power(uint256 _baseN, uint256 _baseD, uint32 _expN, uint32 _expD);ln(uint256 _numerator, uint256 _denominator);findPositionInMaxExpArray(uint256 _x);fixedExp(uint256 _x, uint8 _precision)"
iam-dev/ERC23,test/ReceiverTest.sol,beforeEach();testFallbackIsCalledOnTransfer();testCorrectFunctionIsCalledOnTransfer()
silasdavis/eris-db,tests/jobs_fixtures/app42-getting-setting-strings-dynamic-arrays/driver.sol,getName();getCars();setName(string memory name);addCar(bytes32 car);addCars(bytes32[] memory cars);getCarAmount()
silasdavis/burrow,tests/jobs_fixtures/app42-getting-setting-strings-dynamic-arrays/driver.sol,getName();getCars();setName(string memory name);addCar(bytes32 car);addCars(bytes32[] memory cars);getCarAmount()
eris-ltd/eris-db,tests/jobs_fixtures/app42-getting-setting-strings-dynamic-arrays/driver.sol,getName();getCars();setName(string memory name);addCar(bytes32 car);addCars(bytes32[] memory cars);getCarAmount()
LykkeCity/EthereumApiDotNetCore,src/ContractBuilder/contracts/interfaces/manyOwnersBaseContract.sol,addOwners(address[] owners);removeOwners(address[] owners);isOwner(address ownerAddress)
RyuuGan/sol-merger,test/contracts/LocalImportsWithComments.sol,MyOwned()
osmode/ddash,ddash/source/nilometer.sol,"owned();transferOwnership(address newOwner);get_proposal_count();get_record_count();get_record_by_row(uint row);get_proposal_by_row(uint row);Nilometer();function();changeVotingRules(address _fundsRecipient, uint _daysToWait);newRecord(uint waterLevel);executeProposal(uint proposalNumber)"
blockgeeks/workshop,src/contracts/helloworld.sol,HelloWorld(string greeting);sayHello();setGreeting(string greeting)
UrsZeidler/smart-contract-examples,pocketMoneyContract/src/main/resources/contracts/contracts.sol,PocketMoneyContract();claimPocketMoney();isInitalized()
pipermerriam/ethereum-datetime,contracts/api.sol,"isLeapYear(uint16 year);getYear(uint timestamp);getMonth(uint timestamp);getDay(uint timestamp);getHour(uint timestamp);getMinute(uint timestamp);getSecond(uint timestamp);getWeekday(uint timestamp);toTimestamp(uint16 year, uint8 month, uint8 day);toTimestamp(uint16 year, uint8 month, uint8 day, uint8 hour);toTimestamp(uint16 year, uint8 month, uint8 day, uint8 hour, uint8 minute);toTimestamp(uint16 year, uint8 month, uint8 day, uint8 hour, uint8 minute, uint8 second)"
iivvoo/ethic,example.sol,set_s(string new_s);get_s()
EthTrader/dappening,contracts/TokenController.sol,"onTransfer(address _from, address _to, uint _amount)"
KPull/eth-membership-tokens,contracts/SingleApproval.sol,"SingleApproval();addApprover(address _approver, string description);removeApprover(address _approver);addApplicationSource(ApplicationSource _source, string description);removeApplicationSource(ApplicationSource _source);submitApplication(address _applicant);withdrawApplication(address _applicant);hasOpenApplicationFromSource(address source, address _applicant);hasOpenApplication(address _applicant);rejectApplication(ApplicationSource _source, address _applicant, string description);approveApplication(ApplicationSource _source, address _applicant, string description)"
OtterHive/EtherGit,contracts/Repository.sol,""
kinfoundation/kin-token,contracts/KinFoundationVestingTrustee.sol,"KinFoundationVestingTrustee(KinToken _kin, address _kinFoundation);revoke();grant(uint256 _startTime);calculateVestedTokens(uint256 _time);unlockVestedTokens()"
kowala-tech/kUSD,client/contracts/truffle/contracts/consensus/token/CappedToken.sol,"CappedToken(uint256 _cap);mint(address _to, uint256 _amount)"
melonproject/protocol,contracts/registry/Registry.sol,"deregisterPrimitive(address _primitive);getRegisteredPrimitives();registerPrimitive(address _primitive);registerDerivativePriceSource(address _derivative, address _priceSource);primitiveIsRegistered(address _primitive);deregisterFee(address _fee);getRegisteredFees();registerFee(address _fee);feeIsRegistered(address _fee);deregisterPolicy(address _policy);getRegisteredPolicies();registerPolicy(address _policy);policyIsRegistered(address _policy);deregisterIntegrationAdapter(address _adapter);getRegisteredIntegrationAdapters();registerIntegrationAdapter(address _adapter);integrationAdapterIsRegistered(address _adapter);setFundFactory(address _fundFactory);setIncentive(uint256 _amount);setPriceSource(address _priceSource);setEngine(address _engine);setSharesRequestor(address _sharesRequestor);setValueInterpreter(address _valueInterpreter)"
zeroqn/aa-apply,contracts/PayrollInterface.sol,"removeEmployee(uint256 employeeId);addFunds();escapeHatch();addTokenFunds();getEmployeeCount();getEmployee(uint256 employeeId);calculatePayrollBurnrate();calculatePayrollRunway();payday();setExchangeRate(address token, uint256 usdExchangeRate)"
sirasistant/market_consensys_academy,contracts/Wallet.sol,"withdraw();withdrawTokens(address tokenAddress);transfer(address from,address to,uint amount);tokenTransfer(address from,address to,address tokenAddress,uint amount);addMoneyInternal(address account, uint amount);addTokenInternal(address account,address tokenAddress, uint amount)"
pipermerriam/populus,docs/assets/Donator.sol,Donator();donate(uint usd_rate)
manishbisht/Udacity,Blockchain Developer Nanodegree/P8 - Capstone - Real Estate Marketplace/eth-contracts/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
tailingchen/go-ethereum,tests/solidity/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
rjl493456442/go-ethereum,tests/solidity/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/src/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
kurkomisi/go-ethereum,tests/solidity/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
holiman/go-ethereum,tests/solidity/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
ethereum/go-ethereum,tests/solidity/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
matthieu/go-ethereum,tests/solidity/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
expanse-org/go-expanse,tests/solidity/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
artemistomaras/django-ethereum-events,example/contracts/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
acebusters/safe-token-sale,contracts/policies/PowerEvent.sol,"PowerEvent(address _controllerAddr, uint256 _startTime, uint256 _minDuration, uint256 _maxDuration, uint256 _softCap, uint256 _hardCap, uint256 _discount, uint256 _amountPower, address[] _milestoneRecipients, uint256[] _milestoneShares);checkMilestones(address[] _milestoneRecipients, uint256[] _milestoneShares);tick();startCollection();stopCollection();completeFailed();completeClosed()"
TruLtd/tru-reputation-token,src/current/TruPreSaleFull.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);transferOwnership(address newOwner);balanceOf(address who);transfer(address to, uint256 value);transfer(address _to, uint256 _value);balanceOf(address _owner);allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);increaseApproval(address _spender, uint _addedValue);decreaseApproval(address _spender, uint _subtractedValue);setReleaseAgent(address addr);setTransferAgent(address addr, bool state);releaseTokenTransfer();mint(address _to, uint256 _amount);finishMinting(bool _presale, bool _sale);isUpgradeAgent();upgradeFrom(address _from, uint256 _value);upgrade(uint256 _value);setUpgradeAgent(address _agent);getUpgradeState();setUpgradeMaster(address _master);canUpgrade();changeBoardAddress(address _newAddress);canUpgrade();setUpgradeMaster(address _master);halt();unhalt();buy();updateWhitelist(address _purchaser, uint _status);changeEndTime(uint256 _endTime);hasEnded();checkSaleValid();validatePurchase(address _purchaser);forwardFunds();buyTokens(address _purchaser);finalise();completion()"
TruLtd/tru-reputation-token,src/0.1.12/TruPreSaleFull.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);transferOwnership(address newOwner);balanceOf(address who);transfer(address to, uint256 value);transfer(address _to, uint256 _value);balanceOf(address _owner);allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);increaseApproval(address _spender, uint _addedValue);decreaseApproval(address _spender, uint _subtractedValue);setReleaseAgent(address addr);setTransferAgent(address addr, bool state);releaseTokenTransfer();mint(address _to, uint256 _amount);finishMinting(bool _presale, bool _sale);isUpgradeAgent();upgradeFrom(address _from, uint256 _value);upgrade(uint256 _value);setUpgradeAgent(address _agent);getUpgradeState();setUpgradeMaster(address _master);canUpgrade();changeBoardAddress(address _newAddress);canUpgrade();setUpgradeMaster(address _master);halt();unhalt();buy();updateWhitelist(address _purchaser, uint _status);changeEndTime(uint256 _endTime);hasEnded();checkSaleValid();validatePurchase(address _purchaser);forwardFunds();buyTokens(address _purchaser);finalise();completion()"
silasdavis/eris-db,tests/jobs_fixtures/app54-static-call/AdoptionTest.sol,adopt(uint petId);getAdopters();adopters(uint);testGetAdopterAddressByPetId()
silasdavis/burrow,tests/jobs_fixtures/app54-static-call/AdoptionTest.sol,adopt(uint petId);getAdopters();adopters(uint);testGetAdopterAddressByPetId()
Neufund/Contracts,contracts/lib/Multiplexer.sol,"Multiplexer(address target_, address[] managers_);multiplex_target(address target_);multiplex_add(address manager);multiplex_remove(address manager)"
DonorToken/DonorToken,test/helpers/ForceEther.sol,ForceEther();destroyAndSend(address _recipient)
robmyers/artworld-ethereum,tokens/contracts/MyToken.sol,"owned();transferOwnership(address newOwner);sendApproval(address _from, uint256 _value, address _token);MyToken(uint256 initialSupply, string tokenName, uint8 decimalUnits, string tokenSymbol /*, address centralMinter*/);transfer(address _to, uint256 _value);approve(address _spender, uint256 _value);transferFrom(address _from, address _to, uint256 _value);mintToken(address target, uint256 mintedAmount);freezeAccount(address target, bool freeze);setPrices(uint256 newSellPrice, uint256 newBuyPrice);buy();sell(uint256 amount)"
gnosis/gnosis-contracts,contracts/Tokens/OutcomeToken.sol,"issue(address _for, uint outcomeTokenCount);revoke(address _for, uint outcomeTokenCount)"
chenlian2015/eosEthMarketSample,contracts/OLRandomContractCallBackInterface.sol,callBackForRequestRandom(bytes32 randomValue);getCurrentVersion()
manosamy/enslisting,contracts/ListingRegistry.sol,"updateService(address _listingService, address _escrowService);abandon();ListingRegistry(uint8 _version, uint8 _listingDBVersion, uint8 _listingServiceVersion, uint8 _escrowServiceVersion);abandon();abandonListingService(uint serviceVersion);abandonEscrowService(uint serviceVersion);assignListingDB(address _listingDB);getListingDB(uint8 _version);getListingService(uint8 _version);authorizeListingService(address _listingService);authorizeEscrowService(address _escrowService)"
loxal/FreeEthereum,free-ethereum-core/src/test/resources/solidity/file1.sol,test()
ethereum/ethereumj,ethereumj-core/src/test/resources/solidity/file1.sol,test()
marcegarba/ethereumj,ethereumj-core/src/test/resources/solidity/file1.sol,test()
martintreurnicht/ethereumj,ethereumj-core/src/test/resources/solidity/file1.sol,test()
dbenrosen/EtherPay,ethereumj-core/src/test/resources/solidity/file1.sol,test()
loxal/ethereumj,ethereumj-core/src/test/resources/solidity/file1.sol,test()
enjin/contracts,solidity/contracts/ERC20Token.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value)"
SafecontractDev/protocol,contracts/bancor_contracts/TokenHolder.sol,"TokenHolder();withdrawTokens(IERC20Token _token, address _to, uint256 _amount)"
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/test/helpers/SecureTargetBounty.sol,checkInvariant();deployContract()
pash7ka/zeppelin-solidity,test/helpers/SecureTargetBounty.sol,checkInvariant();deployContract()
Dicoiner/irianna-solidity,test/helpers/SecureTargetBounty.sol,checkInvariant();deployContract()
pz7/liquet,node_modules/zeppelin-solidity/test/helpers/SecureTargetBounty.sol,checkInvariant();deployContract()
dmx374/zeppelin-solidity,test/helpers/SecureTargetBounty.sol,checkInvariant();deployContract()
cashpokerpro-dev/cash-smartcontracts,test/helpers/SecureTargetBounty.sol,checkInvariant();deployContract()
cinderblockchain/cindertoken,test/helpers/SecureTargetBounty.sol,checkInvariant();deployContract()
ethereum/remix,remix-tests/tests/examples_2/simple_storage.sol,set(uint x);get()
ConsenSys/dapp-store-contracts,contracts/DappModel.sol,"DappModel(SimpleIndex _nym_index);create(uint[101][] attributes);validate(address sender, uint id, uint[101][] attributes);id_for_nym(uint nym);replace(address replacement)"
kowala-tech/kUSD,client/contracts/truffle/contracts/token/Token.sol,"name();symbol();decimals();totalSupply();transfer(address _to, uint _value, bytes _data);transfer(address _to, uint _value, bytes _data, string _custom_fallback);transfer(address _to, uint _value);isContract(address _addr);transferToAddress(address _to, uint _value, bytes _data);transferToContract(address _to, uint _value, bytes _data);balanceOf(address _owner)"
Neurone/persians,contracts/TokenEIP20.sol,"name();symbol();decimals();totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
LykkeCity/EthereumApiDotNetCore,src/ContractBuilder/contracts/mainExchange.sol,"MainExchange();cashout(uint id, address coinAddress, address client, address to, uint amount, bytes client_sign, bytes params);transfer(uint id, address coinAddress, address from, address to, uint amount, bytes sign, bytes params);transferWithChange(uint id, address coinAddress, address fromAddress, address toAddress, uint amount, uint change, bytes fromSign, bytes toSign, bytes params);changeMainContractInCoin(address coinContract, address newMainContract);_transferCoins(address contractAddress, address from, address to, uint amount);_checkClientSign(address client_addr, bytes32 hash, bytes sig);ping()"
silasdavis/eris-db,tests/jobs_fixtures/app40-simple-storage/simple_storage.sol,set(uint x);get()
silasdavis/burrow,tests/jobs_fixtures/app40-simple-storage/simple_storage.sol,set(uint x);get()
chai2/Midterm,contracts/Queue.sol,Queue(uint _time);qsize();empty();getFirst();checkPlace();checkTime();dequeue();enqueue(address addr)
eris-ltd/eris-db,execution/solidity/zero_reset.sol,setInt(int x);setIntToZero();getInt();setUint(uint x);setUintToZero();getUint()
blockgeeks/workshop,src/contracts/dragonstone.sol,"create(address receiver, uint amount);transfer(address receiver, uint amount)"
tarsoqueiroz/NodeJS,Blockchain/Ethereum/web3App/smartContract/src/Bike.sol,transfer(address newOwner);kill()
GenesysLabs/TheKiwi,contracts/Kiwi.sol,"Kiwi(address _company, uint256 _token_eth, string _name, string _symbol, uint8 _decimals, uint8 _percentToHold);approve(address _spender, uint256 _value);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);buyTokens(address _to);setCompany(address newCompany);sellTokens(uint256 _amount);checkWithdrawalAvailability(address _address);withdraw()"
Majoolr/ethereum-libraries,BasicMathLib/truffle/contracts/BasicMathTestContract.sol,"getTimes(uint256 a, uint256 b);getDividedBy(uint256 a, uint256 b);getPlus(uint256 a, uint256 b);getMinus(uint256 a, uint256 b)"
michinbear/solidity,test/compilationTests/gnosis/Oracles/DifficultyOracle.sol,DifficultyOracle(uint _blockNumber);setOutcome();isOutcomeSet();getOutcome()
elementrem/solidity,test/compilationTests/gnosis/Oracles/DifficultyOracle.sol,DifficultyOracle(uint _blockNumber);setOutcome();isOutcomeSet();getOutcome()
iam-dev/ERC23,installed_contracts/zeppelin-solidity/test/mocks/PullPaymentMock.sol,"PullPaymentMock();callSend(address dest, uint256 amount)"
Souptacular/motivate-dapp,contracts/goalReg.sol,resolveName(string name);addGoal()
redsquirrel/augur-core,src/factories/TopicsFactory.sol,createTopics(Controller _controller)
aragon/aragon-network-token,packages/controller/contracts/ANTController.sol,"generateTokens(address _owner, uint256 _amount);changeMinter(address _newMinter);proxyPayment(address /* _owner */);onTransfer(address /* _from */, address /* _to */, uint /* _amount */);onApprove(address /* _owner */, address /* _spender */, uint /* _amount */);_changeMinter(address _newMinter)"
Cryptonomica/cryptonomica,src/main/webapp/app/ethidtokens/backups/EthID.sol.backup.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);mod(uint256 a, uint256 b);receiveApproval(address _from, uint256 _value, address _inContract, bytes _extraData);tokenFallback(address _from, uint256 _value, bytes _extraData);name();symbol();decimals();totalSupply();balanceOf(address _owner);allowance(address _owner, address _spender);changeOwnerStart(address _newOwner);changeOwnerAccept();takeDividends(uint256 valueInTokens);withdrawAllByOwner();transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);approveAllAndCall(address _spender, bytes _extraData);transferAndCall(address _to, uint256 _value, bytes _extraData);transferAllAndCall(address _to, bytes _extraData)"
airalab/DAO-IPCI,contracts/builder/BuilderCommitment.sol,""
DRI-project/RICO,contracts/MintableToken.sol,"MintableToken();init(string _name, string _symbol, uint8 _decimals, address _projectOwner);mint(address _to, uint256 _amount);finishMinting();tokenTransfer(address _token)"
Majoolr/ethereum-libraries,ArrayUtilsLib/truffle/contracts/Array128Lib.sol,"sumElements(uint128[] storage self);getMax(uint128[] storage self);getMin(uint128[] storage self);indexOf(uint128[] storage self, uint128 value, bool isSorted);getParentI(uint256 index);getLeftChildI(uint256 index);heapSort(uint128[] storage self);uniq(uint128[] storage self)"
zchn/ethereum-analyzer,examples/co2.unica.it/ethereum/Bob_0.4.2.sol,"insert(Data storage self, uint value);remove(Data storage self, uint value);contains(Data storage self, uint value);version();getSet();setResult(uint8 res);setProvider(address arg);getVersion()"
adamscottbaxter/rock_paper_ether,rock_paper_ether.sol,"nextStage();RockPaperScissors(address _player1, address _player2, uint _bet);playerOneCommit(bytes32 commitHash);playerTwoCommit(bytes32 commitHash);playerOneReveal(bytes32 gameThrow, bytes32 secret);playerTwoReveal(bytes32 gameThrow, bytes32 secret);determineWinner();returnFunds();splitFunds();reset()"
RyuuGan/sol-merger,test/contracts/AbstractContract.sol,utterance();utterance()
papyrusglobal/smartcontracts,contracts/PapyrusTokenTest.sol,"transferAndCall(address to, uint256 value, bytes data);transfer(address to, uint256 value);transferFrom(address from, address to, uint256 value);airdrop(address[] recipients, uint256[] values);mint(address receiver, uint256 value);burn(uint256 value);burnByOwner(address burner, uint256 value);claimTokens(address token, address to);revokeControlByOwner();setMintable(bool mintable);setTransferable(bool transferable);setBridgeContract(address bridgeContract);renounceOwnership();controllableByOwner();mintable();transferable();bridgeContract();totalMinted();totalBurnt();getTokenInterfacesVersion();contractFallback(address from, address receiver, uint256 value, bytes data);isContract(address account)"
ethereum/remix,remix-analyzer/test/analysis/test-contracts/solidity-v0.5/cross_contract.sol,foo();bar()
crypto-coder/Tokens,Token_Contracts/contracts/TimeDecayingTokenFactory.sol,"TimeDecayingTokenFactory(bool _useTheDefaultRegistry, address _logger)"
brett-harvey/Smart-Contracts,Ethereum-based-Roll4Win/node_modules/truffle/test/sources/monorepo/node_modules/nodepkg/ImportOfImport.sol,""
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs4.sol,"addThing(string description, bytes32 url, string filehash, string filename)"
eris-ltd/eris,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs4.sol,"addThing(string description, bytes32 url, string filehash, string filename)"
monax/monax,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs4.sol,"addThing(string description, bytes32 url, string filehash, string filename)"
eris-ltd/eris-cli,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs4.sol,"addThing(string description, bytes32 url, string filehash, string filename)"
monax/cli,tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs4.sol,"addThing(string description, bytes32 url, string filehash, string filename)"
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app29-mixing_bytes_strings_and_mixed_type_solidity_structs/structs4.sol,"addThing(string description, bytes32 url, string filehash, string filename)"
GX-Coin/SmartContract,GxUsesConstants.sol,setConstantsContract(address constantsAddress)
Majoolr/ethereum-libraries,LinkedListLib/truffle/test/TestLinkedListLib.sol,beforeAll();testEmptyExists();testEmptySize();testEmptySortedSpot();testInsert();testGetSortedSpot();testSortedInsert();testGetAdjacent();testRemove();testPushPop()
TrueBitFoundation/webasm-solidity,contracts/merkle.sol,"process(bytes32 leaf, bytes[] inst);slice(bytes arr, uint i, uint n);dataMerkle(uint[] ctrl, uint idx, uint level);test(bytes dta);init(bytes32 state, uint /* state_size */, uint /* r3 */, address solver, address /* verifier */);clock(bytes32 id);resolved(bytes32 id, bytes32 state, uint size);submitProof(bytes32 id, bytes32 leaf, uint[] ctrl, bytes inst, uint sz)"
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/crowdsale/validation/IndividuallyCappedCrowdsale.sol,"setUserCap(address _beneficiary, uint256 _cap);getUserCap(address _beneficiary);getUserContribution(address _beneficiary)"
livepeer/protocol,contracts/token/IMinter.sol,"createReward(uint256 _fracNum, uint256 _fracDenom);trustedTransferTokens(address _to, uint256 _amount);trustedBurnTokens(uint256 _amount);trustedWithdrawETH(address _to, uint256 _amount);depositETH();setCurrentRewardTokens();getController()"
stevejaxon/ethereum-tutorials,contracts/channels/signeth/BlockTogether.sol,"BlockTogether(address _coupon, uint _getTogetherDate, uint _maxCapacity, uint _stakeRequired);attendeesList();canCancel(uint datetime);amountOfStakeReturnedOnCancellation(uint datetime);whenStakeCanBeReturned();amountOfStakeToBeReturned(address attendee, uint datetime);register();cancelRegistration();cancelGetTogether()"
michinbear/solidity,test/compilationTests/gnosis/Oracles/CentralizedOracle.sol,"CentralizedOracle(address _owner, bytes _ipfsHash);replaceOwner(address newOwner);setOutcome(int _outcome);isOutcomeSet();getOutcome()"
elementrem/solidity,test/compilationTests/gnosis/Oracles/CentralizedOracle.sol,"CentralizedOracle(address _owner, bytes _ipfsHash);replaceOwner(address newOwner);setOutcome(int _outcome);isOutcomeSet();getOutcome()"
soad003/browser-solidity,test/staticanalysis/test-contracts/globals.sol,duper();blub()
darcius/rocketpool-crowdsale,contracts/base/SalesAgent.sol,getContributionOf(address _owner);setDepositAddressVerify()
iam-dev/ERC23,test/helpers/Standard23TokenMock.sol,""
Dsummers91/family-wallet-etherum-contract,contracts/FamilyWallet.sol,nextAllowancePeriod(bool force);getAllowance();approveRefund();refundBalance(address addr);getChildByAddress(address addr);getAdultByAddress(address addr);getChild(address addr);getAllowanceAmount(address addr);getChildsAmount(address addr);getDefaultAllowance(string addr)
jensenbox/singnet,dao/contracts/market/MarketJob.sol,deposit(uint256 amount);setJobCompleted(bytes _jobResult);setJobAccepted();withdraw()
mixbytes/storiqa_ico,contracts/STQPreICO.sol,"STQPreICO(address token, address funds);getMinimumFunds();getMaximumFunds();getStartTime();getEndTime();getPreICOBonus()"
Storiqa/ico_smart_contract,contracts/STQPreICO.sol,"STQPreICO(address token, address funds);getMinimumFunds();getMaximumFunds();getStartTime();getEndTime();getPreICOBonus()"
zetherz/eth-match,test/helpers/PausableTokenMock.sol,"PausableTokenMock(address initialAccount, uint initialBalance)"
SilentCicero/wafr,src/tests/solidityTests/assertTrue/test.assertTrueSmall.sol,test_oneFalseAssert();test_oneTrueAssert();test_oneTrueAndFalseAssert()
QTBlockchain/SolidityNWeb3,SmartContracts/revisit/contracts/SavingsBank.sol,SavingsBank();getBalance(uint8 accountNumber);addAccountWithBalance(uint16 balance);getAccountCount()
adridadou/hackethon-2016,contracts/Pubcrawl.sol,""
district0x/name-bazaar,resources/public/contracts/src/OfferingFactory.sol,"registerSubnameOffering(bytes32 node, bytes32 labelHash, address newOffering, uint version);namehash(string memory name);getLabelHash(string memory name)"
beia/beialand,practice/beia-practical/blockchain-contract/contracts/DataSet.sol,store(string memory newData);get(uint index)
cgewecke/solcover,test/sources/statements/tuple.sol,a()
JoinColony/solcover,test/sources/statements/tuple.sol,a()
aragon/aragon-core,contracts/test/mocks/ENSConstantsMock.sol,getEnsRoot();getEthTldLabel();getEthTldNode();getPublicResolverLabel();getPublicResolverNode()
aragon/aragon-core,contracts/test/mocks/KeccakConstants.sol,""
ethersphere/go-ethereum,contracts/ens/contract/ENSRegistry.sol,"setOwner(bytes32 node, address owner);setSubnodeOwner(bytes32 node, bytes32 label, address owner);setResolver(bytes32 node, address resolver);setTTL(bytes32 node, uint64 ttl);owner(bytes32 node);resolver(bytes32 node);ttl(bytes32 node)"
DavdRoman/Payroll,test/mocks/EmployeeStorageMock.sol,mock_resetLatestTokenAllocation(address _address);mock_resetLatestPayday(address _address);mock_throwIfNotRemoved(address _address)
maraoz/zeppelin-solidity,test/helpers/SafeMathMock.sol,"multiply(uint a, uint b);subtract(uint a, uint b);add(uint a, uint b)"
cmditch/elm-web3,tests/solidity/ComplexStorage.sol,"setValues(uint _uintVal, int _intVal, bool _boolVal, int224 _int224Val, bool[2] memory _boolVectorVal, int[] memory _intListVal, string memory _stringVal, string memory _emptyString, bytes16 _bytes16Val, bytes2[4][] memory _bytes2VectorListVal)"
ocg1/assetx,003_CrowdsaleTokenExt.sol,"balanceOf(address who);transfer(address to, uint256 value);Ownable();transferOwnership(address newOwner);safeMul(uint a, uint b);safeDiv(uint a, uint b);safeSub(uint a, uint b);safeAdd(uint a, uint b);allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);isToken();transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);balanceOf(address _owner);approve(address _spender, uint _value);allowance(address _owner, address _spender);isUpgradeAgent();upgradeFrom(address _from, uint256 _value);UpgradeableToken(address _upgradeMaster);upgrade(uint256 value);setUpgradeAgent(address agent);getUpgradeState();setUpgradeMaster(address master);canUpgrade();setReleaseAgent(address addr);setTransferAgent(address addr, bool state);releaseTokenTransfer();transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);times(uint a, uint b);divides(uint a, uint b);minus(uint a, uint b);plus(uint a, uint b);setReservedTokensList(address addr, uint inTokens, uint inPercentageUnit, uint inPercentageDecimals);getReservedTokensListValInTokens(address addr);getReservedTokensListValInPercentageUnit(address addr);getReservedTokensListValInPercentageDecimals(address addr);setReservedTokensListMultiple(address[] addrs, uint[] inTokens, uint[] inPercentageUnit, uint[] inPercentageDecimals);mint(address receiver, uint amount);setMintAgent(address addr, bool state);CrowdsaleTokenExt(string _name, string _symbol, uint _initialSupply, uint _decimals, bool _mintable, uint _globalMinCap);releaseTokenTransfer();canUpgrade();setTokenInformation(string _name, string _symbol)"
evoluchain/meetup-sc-testing,contracts/TokenERC20/Token.sol,"balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
deadmenswitch/dms,contracts/DMSContract.sol,"DMSContract();CreateDMSContract(address beneficiary, bytes32 data, uint32 initial_expiration_time);kick(uint32 new_expiration_time);getTimeLeft();getExpirationTimeFromAddress(address sender);getExpirationTime();isAddressExpired(address sender, uint32 now_time);getDataFromAddress(address sender)"
PeculiumPCL/Peculium,contracts/v0.7/Peculium.sol,"Peculium();receiveEtherFormOwner();sendEtherToOwner();buyTokens(address beneficiary, uint256 weiAmount);sendTokenUpdate(address toAddress, uint256 amountTo_Send);buyTokenPreIco(address toAddress, uint256 _vamounts);buyTokenIco(address toAddress, uint256 _vamounts);updateReserveToken();approveAndCall(address _spender, uint256 _value, bytes _extraData);getBlockTimestamp();stakeholderPayment(address stakeholderaddr);payBountyManager();airdropsTokens(address[] _vaddr, uint256[] _vamounts);payBounties(address[] _vaddr, uint256[] _vamounts);stopSale();restartSale();changeRage(uint256 newrate);getOwnerInfos();finalize();getEtherBalance();destroy();destroyAndSend(address _recipient)"
airalab/DAO-IPCI,contracts/Docs.sol,"append(string txId, string ipfs);getIndex(string txId)"
qingche123/DNA,vm/evm/test_case/coin/coin.sol,"Coin();mint(address receiver, uint amount);send(address receiver, uint amount)"
luodanwg/DNA,vm/evm/test_case/coin/coin.sol,"Coin();mint(address receiver, uint amount);send(address receiver, uint amount)"
dreamfly281/DNA,vm/evm/test_case/coin/coin.sol,"Coin();mint(address receiver, uint amount);send(address receiver, uint amount)"
terzim/WeiLend,WeiLend.sol,"newLoan(bytes32 _operationName, address _beneficiary, uint _goal, uint _timelimit_m, uint _category, uint _interest_rate, uint _grace_period_m, uint _tenor_a);contribute(uint _lid);refund(uint _lid);payout(uint _lid);payInstallment(uint _lid)"
shahankhatch/dapp-bin,p2plending/WeiLend.sol,"newLoan(bytes32 _operationName, address _beneficiary, uint _goal, uint _timelimit_m, uint _category, uint _interest_rate, uint _grace_period_m, uint _tenor_a);contribute(uint _lid);refund(uint _lid);payout(uint _lid);payInstallment(uint _lid)"
LianaHus/dapp-bin,p2plending/WeiLend.sol,"newLoan(bytes32 _operationName, address _beneficiary, uint _goal, uint _timelimit_m, uint _category, uint _interest_rate, uint _grace_period_m, uint _tenor_a);contribute(uint _lid);refund(uint _lid);payout(uint _lid);payInstallment(uint _lid)"
RepublicMaster/dapp-bin,p2plending/WeiLend.sol,"newLoan(bytes32 _operationName, address _beneficiary, uint _goal, uint _timelimit_m, uint _category, uint _interest_rate, uint _grace_period_m, uint _tenor_a);contribute(uint _lid);refund(uint _lid);payout(uint _lid);payInstallment(uint _lid)"
frozeman/ethereum-smart-contracts,p2plending/WeiLend.sol,"newLoan(bytes32 _operationName, address _beneficiary, uint _goal, uint _timelimit_m, uint _category, uint _interest_rate, uint _grace_period_m, uint _tenor_a);contribute(uint _lid);refund(uint _lid);payout(uint _lid);payInstallment(uint _lid)"
ethereum/dapp-bin,p2plending/WeiLend.sol,"newLoan(bytes32 _operationName, address _beneficiary, uint _goal, uint _timelimit_m, uint _category, uint _interest_rate, uint _grace_period_m, uint _tenor_a);contribute(uint _lid);refund(uint _lid);payout(uint _lid);payInstallment(uint _lid)"
vaporry/dapp-bin,p2plending/WeiLend.sol,"newLoan(bytes32 _operationName, address _beneficiary, uint _goal, uint _timelimit_m, uint _category, uint _interest_rate, uint _grace_period_m, uint _tenor_a);contribute(uint _lid);refund(uint _lid);payout(uint _lid);payInstallment(uint _lid)"
status-im/status-network-token,contracts/SNTPlaceHolder.sol,"SNTPlaceHolder(address _owner, address _snt, address _contribution, address _sgtExchanger);changeController(address _newController);proxyPayment(address);onTransfer(address _from, address, uint256);onApprove(address _from, address, uint256);transferable(address _from);getTime();claimTokens(address _token)"
manishbisht/Udacity,Blockchain Developer Nanodegree/P7 - FlightSurety/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
DivvyDAO/minime,contracts/MiniMeToken.sol,"proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);Controlled();changeController(address _newController);transfer(address _to, uint256 _amount);balanceOf(address _owner);approve(address _spender, uint256 _amount);totalSupply();balanceOfAt(address _owner, uint _blockNumber);totalSupplyAt(uint _blockNumber);enableTransfers(bool _transfersEnabled);isContract(address _addr)"
iExecBlockchainComputing/rlc-token,contracts/PullPayment.sol,"asyncSend(address dest, uint amount);withdrawPayments()"
charlieknoll/dgpv2,backup/UsDollarMock.sol,""
sonm-io/core,blockchain/source/contracts/TestnetFaucet.sol,"getTokens();mintToken(address target, uint256 mintedAmount);getTokenAddress()"
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/examples/BadFailEarly.sol,getSalary(string name)
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/examples/BadFailEarly.sol,getSalary(string name)
customizablebasicincome/cbi-tokensale,contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
whachoe/eth_tutorial_game,contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
ajagesser/contracts,contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
Jonathan56/mosasik_ethereum_demo,ethereum/contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
OT-Future/ethereum-resource,contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
Stennuts66/gamma,contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
Lawlez/solidity-contracts,contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
BeBlockTech/Anemoi,Master/contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
DavidBurela/truffledevops,contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
ganchix/ETH_16_Ethereum,UNIT-5/shopfrontProject/contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
ganchix/ETH_16_Ethereum,UNIT-4/frist_project/contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
gichiba/Mattereum_Hackday_Moon,contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
vanderthiel/techdays-2017-demo,identity/contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
ChristopheDemangeot/SupplyChainBC,contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
cruskit/truffle-voting-example,contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
thekaleidoscope/Hello-Ethereum,contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
hedgepigdaniel/gnomocracy,src/contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
dltdojo/courses,ethereum/truffle/multisig/contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
Ethbet/ethbet,contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
quanticpanda/TCI_truffle,tmp/contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
nandakishore2009/smart-will,solidity/contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
AbhishekShah212/learningspace,ethereum/solidity/truffle/contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
QTBlockchain/SolidityNWeb3,SmartContracts/mynewcontract/contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
QTBlockchain/SolidityNWeb3,patterns/contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
aquiladev/browniecoin,contracts/contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
alice-si/contracts,contracts/alice/DigitalEURToken.sol,"mint(address _to, uint256 _value);burn(address _from, uint256 _value)"
miller46/digital-identity,contracts/ERC725.sol,"getKeyType(address _key);getKeysByType(uint256 _type);addKey(address _key, uint256 _type);removeKey(address _key);replaceKey(address _oldKey, address _newKey);execute(address _to, uint256 _value, bytes32 _data);approve(bytes32 _id, bool _approve)"
ganchix/ETH_16_Ethereum,UNIT-4/remittanceProject/contracts/Deadline.sol,Deadline(uint duration);getDeadline();isExpiredDeadline()
boisde/Greed_Island,party/contracts/mocks/integrations/AmmAdapterMock.sol,"joinPool(uint256 poolAmountOut, uint256[] calldata maxAmountsIn);exitPool(uint256 poolAmountIn, uint256[] calldata minAmountsOut);isValidPool(address _pool);getSpenderAddress(address /* _pool */);mintTo(address _to, uint256 _quantity);setMintLessThanMinimum();setApprovedToken(address _token)"
stevejaxon/ethereum-tutorials,contracts/channels/state/SimpleStateChannel.sol,SimpleStateChannel()
erooijak/ethlance,resources/public/contracts/src/ethlanceViews.sol,"EthlanceViews(address _ethlanceDB);getFreelancerContracts(address userId, uint[] contractStatuses, uint[] jobStatuses);getEmployerContracts(address userId, uint[] contractStatuses, uint[] jobStatuses);getFreelancerInvoices(address userId, uint8 invoiceStatus);getEmployerInvoices(address userId, uint8 invoiceStatus);getJobContracts(uint jobId, uint8 contractStatus);getJobInvoices(uint jobId, uint8 invoiceStatus);getFreelancersJobContracts(address[] userIds, uint jobId);getContractInvoices(uint contractId, uint8 invoiceStatus);getContractMessages(uint contractId);getEmployerJobs(address userId, uint8 jobStatus);getSkillNames(uint offset, uint limit);getSkillCount();getEmployerJobsForFreelancerInvite(address employerId, address freelancerId);getJobSponsorships(uint jobId);getJobApprovals(uint jobId);getUserSponsorships(address userId);getSponsorableJobs()"
district0x/name-bazaar,resources/public/contracts/src/UsedByFactories.sol,"setFactories(address[] calldata factories, bool _isFactory)"
adridadou/eth-contract-api,src/test/resources/contractEvents.sol,createEvent(string value)
SafecontractDev/protocol,contracts/bancor_contracts/interfaces/ITokenHolder.sol,"withdrawTokens(IERC20Token _token, address _to, uint256 _amount)"
eris-ltd/eris-db,execution/solidity/big_mod.sol,"expmod(int256 base, int256 e, int256 m, int256 proof)"
bcosorg/bcos,systemcontractv2/TransactionFilterBase.sol,"process(address origin, address from, address to, string func, string input);setName(string n);setVersion(string v)"
mhhf/dapple,test/_fixtures/mocktest.sol,expectEventsExact(address _target);fail();assertTrue(bool what);testPass();testFail();testThrowSomething();testThrowSomething();throwFoo();throwFooBar();noevent();setUp();testEvent();setUp();testEvent();setUp();testEvent();setUp();testEvent()
nexusdev/dapple,test/_fixtures/mocktest.sol,expectEventsExact(address _target);fail();assertTrue(bool what);testPass();testFail();testThrowSomething();testThrowSomething();throwFoo();throwFooBar();noevent();setUp();testEvent();setUp();testEvent();setUp();testEvent();setUp();testEvent()
TruLtd/tru-reputation-token,contracts/test-helpers/MockUpgradeableToken.sol,canUpgrade();changeCanUpgrade(bool _newStatus)
aragon/aragon-core,contracts/common/TimeHelpers.sol,getBlockNumber();getTimestamp()
AnnaIsAWang/LedgerLabsCoops2016,AbstractedStateChannel/Owned.sol,Owned()
Patrick-W-McMahon/Ethereum-Contracts,Ticketing Systems/TicketMultiTear.sol,"mortal();TicketMultiTear(string _ticketName, string[] _tearName, uint[] _startingTickets);kill();transfer(address _to, string _tear, uint _value);getTicketCount(address _user, string _tear);consumeTicket(address _user, string _tear, uint _count)"
ultra-koder/JobMarket,.c9/metadata/workspace/dapp/contracts/set.sol,""
dltdojo/courses,ethereum/evm/T01_StateVariable.sol,""
prashantpawar/truffle,templates/Example.sol,Example()
anniemwu/chainge,node_modules/truffle/build/templates/Example.sol,Example()
hsavit1/gosofi_webpage,node_modules/truffle/build/templates/Example.sol,Example()
Project-WikiGit/WikiGit,dev/contracts/tasks_handler.sol,"invalidateTaskListingAtIndex(uint _index);acceptSolution(uint _taskId, uint _solId);penalizeSolutionSubmitter(uint _taskId, uint _solId);setPenalizedStatus(uint _taskId, address _memberAddr, bool _status);tHasSubmitted(uint _taskId, address _addr);tHasBeenPenalized(uint _taskId, address _addr);tMemberSolId(uint _taskId, address _addr)"
iam-dev/ERC23,installed_contracts/zeppelin-solidity/test/mocks/HasNoEtherTest.sol,HasNoEtherTest()
osmode/ddash,ddash/source/manifesto.sol,"owned();transferOwnership(address newOwner);_transfer_token(address _from, address _to, uint _value);transfer_token(address _to, uint256 _value);mintToken(address target, uint256 mintedAmount);get_proposal_count();setShares(address shareholder, uint shares);get_proposal_by_row(uint row);Manifesto(uint minimumQuorum, uint minutesForDebate);changeVotingRules(uint minimumSharesToPassAVote, uint minutesForDebate);executeProposal(uint proposalNumber)"
Nethereum/Nethereum,src/Nethereum.ENS/oldcontracts/DefaultReverseResolver.sol,"DefaultReverseResolver(ENS ensAddr);setName(bytes32 node, string _name)"
stevejaxon/ethereum-tutorials,test/TestCrowdsale_Noname.sol,TestCrowdsale_Noname();testCanSendEthToContractWhenCrowdsaleInProgress()
eris-ltd/eris-compilers,vendor/github.com/monax/cli/tests/jobs_fixtures/app08-initialization_constructors_in_contracts/contracts/storage.sol,"SimpleConstructorInt(uint x, uint y);SimpleConstructorBool(bool x, bool y);SimpleConstructorString(string x, string y);SimpleConstructorBytes(bytes32 x, bytes32 y);SimpleConstructorArray(uint[3] x, uint[3] y);get()"
eris-ltd/eris,tests/jobs_fixtures/app08-initialization_constructors_in_contracts/contracts/storage.sol,"SimpleConstructorInt(uint x, uint y);SimpleConstructorBool(bool x, bool y);SimpleConstructorString(string x, string y);SimpleConstructorBytes(bytes32 x, bytes32 y);SimpleConstructorArray(uint[3] x, uint[3] y);get()"
monax/monax,tests/jobs_fixtures/app08-initialization_constructors_in_contracts/contracts/storage.sol,"SimpleConstructorInt(uint x, uint y);SimpleConstructorBool(bool x, bool y);SimpleConstructorString(string x, string y);SimpleConstructorBytes(bytes32 x, bytes32 y);SimpleConstructorArray(uint[3] x, uint[3] y);get()"
eris-ltd/eris-cli,tests/jobs_fixtures/app08-initialization_constructors_in_contracts/contracts/storage.sol,"SimpleConstructorInt(uint x, uint y);SimpleConstructorBool(bool x, bool y);SimpleConstructorString(string x, string y);SimpleConstructorBytes(bytes32 x, bytes32 y);SimpleConstructorArray(uint[3] x, uint[3] y);get()"
monax/cli,tests/jobs_fixtures/app08-initialization_constructors_in_contracts/contracts/storage.sol,"SimpleConstructorInt(uint x, uint y);SimpleConstructorBool(bool x, bool y);SimpleConstructorString(string x, string y);SimpleConstructorBytes(bytes32 x, bytes32 y);SimpleConstructorArray(uint[3] x, uint[3] y);get()"
eris-ltd/lllc-server,vendor/github.com/monax/cli/tests/jobs_fixtures/app08-initialization_constructors_in_contracts/contracts/storage.sol,"SimpleConstructorInt(uint x, uint y);SimpleConstructorBool(bool x, bool y);SimpleConstructorString(string x, string y);SimpleConstructorBytes(bytes32 x, bytes32 y);SimpleConstructorArray(uint[3] x, uint[3] y);get()"
citizencode/embark-framework,test/support/contracts/another_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
d11e9/embark-framework,test/support/contracts/another_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
jpentland/BitBadge,node_modules/embark-framework/test/support/contracts/another_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
jpentland/BitBadge,node_modules/embark-framework/tmp/embark_demo/app/contracts/another_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
jpentland/BitBadge,node_modules/grunt-embark/node_modules/embark-framework/tmp/embark_demo/app/contracts/another_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
jpentland/BitBadge,node_modules/grunt-embark/node_modules/embark-framework/test/support/contracts/another_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
jeffanthony/embark-framework,test/support/contracts/another_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
SafeMarket/embark-framework,test/support/contracts/another_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
msfeldstein/embark-framework,test/support/contracts/another_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
mesh-market/mesh-market.github.io,mesh-market/node_modules/embark/old_test/support/contracts/another_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
hitchcott/embark-framework,test/support/contracts/another_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
troyth/embark-dappsforbeginners-demo,embark_demo/node_modules/embark-framework/test/support/contracts/another_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
johnkozan/embark-framework,test/support/contracts/another_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
AronVanAmmers/embark-framework,test/support/contracts/another_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
RCasatta/embark-framework,test/support/contracts/another_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
VoR0220/embark-framework,test/support/contracts/another_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
aakilfernandes/embark-framework,test/support/contracts/another_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
ryepdx/embark-framework,test/support/contracts/another_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
tom-seddon/embark-framework,test/support/contracts/another_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
gerbrand/embark-framework,test/support/contracts/another_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
akhilss/embark-framework,old_test/support/contracts/another_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
wpypeiyao/Identity-On-Blockchain,node_modules/embark/old_test/support/contracts/another_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
xiaopow/embark-framework,test/support/contracts/another_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
alice-si/contracts,contracts/alice/TwoPhaseTransfers.sol,"proposeTransfer(ERC20 token, address to, uint value);confirmTransfer(uint _transferId)"
Lawlez/solidity-contracts,crypto.rendered.sol,""
etherisc/flightDelay,contracts/FlightDelayController.sol,"FlightDelayController();transferOwnership(address _newOwner);setContract(address _addr, bytes32 _id, bool _isControlled);getContract(bytes32 _id);registerContract(address _addr, bytes32 _id, bool _isControlled);deregister(bytes32 _id);setAllContracts();setOneContract(uint i);destructOne(bytes32 _id);destructAll()"
Nethereum/Nethereum,src/Nethereum.ENS/oldcontracts/ResolverInterface.sol,"PublicResolver(address ensAddr);setAddr(bytes32 node, address addr);setHash(bytes32 node, bytes32 hash);addr(bytes32 node);hash(bytes32 node);supportsInterface(bytes4 interfaceID)"
RyuuGan/sol-merger,test/compiled/GlobalRenamedImports.sol,Ownable();transferOwnership(address newOwner);MyOwned()
Atzen2/hacking-law-proto,truffle/contracts/zeppelin/test-helpers/ShareableMock.sol,"ShareableMock(address[] _owners, uint _required);increaseCount(bytes32 action)"
Atzen2/hacking-law-proto,truffle/node_modules/zeppelin-solidity/contracts/test-helpers/ShareableMock.sol,"ShareableMock(address[] _owners, uint _required);increaseCount(bytes32 action)"
DroneEmployee/contracts,interface/Streaming.sol,initStreaming(Token _stream);stream(bytes32 _ident);streamEnd();tradeStream()
hainesc/daochain,contract/contracts/DaoHubAccount.sol,"DaoHubAccount();bindAddr(address addr, bytes user);deleteAddr(address addr, bytes user);queryByAddr(address addr);queryByUser(bytes user)"
DaoCloud/dao-chain,contract/contracts/DaoHubAccount.sol,"DaoHubAccount();bindAddr(address addr, bytes user);deleteAddr(address addr, bytes user);queryByAddr(address addr);queryByUser(bytes user)"
Revolution1/daochain,contract/contracts/DaoHubAccount.sol,"DaoHubAccount();bindAddr(address addr, bytes user);deleteAddr(address addr, bytes user);queryByAddr(address addr);queryByUser(bytes user)"
DaoCloud/daochain,contract/contracts/DaoHubAccount.sol,"DaoHubAccount();bindAddr(address addr, bytes user);deleteAddr(address addr, bytes user);queryByAddr(address addr);queryByUser(bytes user)"
pooleja/SolidityPlayground,contracts/VendingMachine.sol,"VendingMachine(ERC20 tokenContract);calculateSaleAmount(uint amountSoldStart, uint ethAmount);WithdrawEth(uint amount)"
stevejaxon/ethereum-tutorials,test/TestToken_TransferFrom.sol,testInitialBalanceUsingDeployedContract();testDeployNewTokenWithTheTestContractAsOwner();testTransferFromCorrectlyAllowsDelegationOfTokenOwnership();testTransferFromDoesNotAllowTransferOfMoreThanAllowedByDelegate();testTransferFromDoesNotAllowTransferByAddressThatHasNotBeenApproved();testTransferFromDoesNotAllowTransferOfMoreThanExistingTokensByDelegate()
creditbit-dev/credit2.0,contracts/CreditDAO.sol,"totalSupply();mintMigrationTokens(address _reciever, uint _amount);getAccountData(address _owner);getAddressDescription(address _queryAddress);withdrawReward(address _destination);setCreditBondContract(address _creditBondAddress);setCreditBitContract(address _creditBitAddress);setFundsCreditDaoAddress(address _creditDaoAddress);claimBondReward();setCreditDaoAddress(address _creditDaoAddress);lockTokens(uint _multiplier);CreditDAO();createNewElections();sumbitForElection();vote(address _participant);finishElections(uint _iterations);claimBondReward();withdrawBondReward(address _addy);lockTokens(uint _multiplier);setCreditBitContract(address _newCreditBitAddress);setMandateInBlocks(uint _newMandateInBlocks);setblocksPerMonth(uint _newblocksPerMonth);setCreditDaoFund(address _newCreditDaoFundAddress);setFundsCreditDaoAddress(address _creditDaoAddress);setFundsCreditBitContract(address _creditBitAddress);setFundsCreditBondContract(address _creditBondAddress);getCreditFundAddress();getCreditBitAddress()"
akhilss/embark-framework,test/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
wpypeiyao/Identity-On-Blockchain,node_modules/embark/test/contracts/simple_storage.sol,SimpleStorage(uint initialValue);set(uint x);get()
janx/ruby-ethereum,test/contracts/seven_contract.sol,test()
cryptape/ruby-ethereum,test/contracts/seven_contract.sol,test()
se3000/ruby-ethereum,test/contracts/seven_contract.sol,test()
gnosis/gnosis-contracts,contracts/Markets/Campaign.sol,fund(uint amount);refund();createMarket();closeMarket();withdrawFees()
sonm-io/core,blockchain/source/contracts/Market.sol,"CancelOrder(uint orderID);QuickBuy(uint askID, uint buyoutDuration);OpenDeal(uint _askID, uint _bidID);CloseDeal(uint dealID, BlacklistPerson blacklisted);Bill(uint dealID);CreateChangeRequest(uint dealID, uint newPrice, uint newDuration);CancelChangeRequest(uint changeRequestID);RegisterWorker(address _master);ConfirmWorker(address _worker);RemoveWorker(address _worker, address _master);GetOrderInfo(uint orderID);GetOrderParams(uint orderID);GetDealInfo(uint dealID);GetDealParams(uint dealID);GetMaster(address _worker);GetChangeRequestInfo(uint changeRequestID);GetDealsAmount();GetOrdersAmount();GetChangeRequestsAmount();GetBenchmarksQuantity();GetNetflagsQuantity();InternalBill(uint dealID);ReserveNextPeriodFunds(uint dealID);RefundRemainingFunds(uint dealID);IsSpot(uint dealID);CalculatePayment(uint _price, uint _period);AddToBlacklist(uint dealID, BlacklistPerson role);InternalCloseDeal(uint dealID);ResizeBenchmarks(uint64[] _benchmarks);ResizeNetflags(bool[] _netflags);SetProfileRegistryAddress(address _newPR);SetBlacklistAddress(address _newBL);SetOracleAddress(address _newOracle);SetBenchmarksQuantity(uint _newQuantity);SetNetflagsQuantity(uint _newQuantity);KillMarket()"
TruLtd/tru-reputation-token,contracts/supporting/TruMintableToken.sol,"mint(address _to, uint256 _amount);finishMinting(bool _presale, bool _sale)"
cpetty-Novetta/raffle-dapp,imports/smart-contracts/contracts/RaffleGraphBook.sol,"RaffleGraphBook(string _prizeName, uint _numPrizes);nextStage();closeRegistration();generateNewTicket(address userAddress);remove(uint index);generate_random(uint maxNum, string salt);randomChoiceFromticketPool();distributePrizes();getNumUsers();getNumTickets();getStage()"
fccoelho/Curso_Blockchain,contracts/ICO/node_modules/openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol,""
ChronoBank/LX-SC,contracts/helpers/UserLibraryMock.sol,"getCalls();addRole(address, bytes32);setMany(address, uint, uint[], uint[])"
evoluchain/meetup-sc-testing,contracts/TokenERC20/HumanStandardToken.sol,"approveAndCall(address _spender, uint256 _value, bytes _extraData)"
orbro/eth-enablers,simpleDiceGame.sol,SimpleDice();enter();if(Fees>0);setOwner(address new_owner);setMinDeposit(uint new_mindeposit);setFeeRate(uint new_feerate)
SilentCicero/ethdeploy,example/contracts/SimpleStore.sol,SimpleStore(uint256 _initialValue);setStore(uint256 _value);getValue()
Pavel-DV/ChronoMint,old/Stub.sol,""
bshevchenko/ChronoMint,old/Stub.sol,""
adklempner/solidity-license,contracts/zeppelin/ownership/DelayedClaimable.sol,"setLimits(uint256 _start, uint256 _end);claimOwnership()"
adamdossa/ProfitSharingContract,installed_contracts/zeppelin/contracts/ownership/DelayedClaimable.sol,"setLimits(uint256 _start, uint256 _end);claimOwnership()"
Great-Hill-Corporation/daodeepdive,assets/contracts/00-DAOCreator.sol,"createDAO(address _curator, uint _proposalDeposit, uint _minTokensToCreate, uint _closingTime)"
WingsDao/contracts,contracts/forecasts/BasicForecasting.sol,"add(uint _amount, bytes32 _message);getByUser(address _user);get(uint _index)"
Qipingsmile006/TianLianCoin,contracts/Ownable.sol,Ownable();transferOwnership(address newOwner);transferOwnership(address _newOwner);acceptOwnership()
silasdavis/eris-db,tests/jobs_fixtures/app54-static-call/Adoption.sol,adopt(uint petId);getAdopters()
silasdavis/burrow,tests/jobs_fixtures/app54-static-call/Adoption.sol,adopt(uint petId);getAdopters()
montyly/manticore,tests/ethereum/contracts/consensys_benchmark/integer_overflow_mapping_word.sol,init(uint256 key)
trailofbits/manticore,tests/ethereum_bench/consensys_benchmark/integer_overflow_mapping_word.sol,init(uint256 key)
Codewars/codewars-runner,frameworks/solidity/truffle/contracts/solution.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr);isValid()"
Codewars/codewars-runner-cli,frameworks/solidity/truffle/contracts/solution.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr);isValid()"
OverZealous/codewars-runner-cli,frameworks/solidity/truffle/contracts/solution.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr);isValid()"
RosEvroBank/IDChain,contracts/Identified.sol,Identified()
saulbein/web3j,core/src/test/resources/solidity/simplestorage/SimpleStorage.sol,SimpleStorage();set(uint x);get()
status-im/status-network-token,contracts/test/SGTExchangerMock.sol,"SGTExchangerMock(address _sgt, address _snt, address _statusContribution);getBlockNumber();setMockedBlockNumber(uint _b)"
globaljobcoin/GJC,contracts/ownership/Ownable.sol,Ownable();transferOwnership(address newOwner)
SurBTC/etherlite,spec/test_contract/contracts/ConstructorTest.sol,"ConstructorTest(uint _uintParam, string _stringParam)"
BeBlockTech/Anemoi,BeBlockTech/crowdfunding.sol,"transfer(address receiver, uint amount);checkGoalReached();safeWithdrawal()"
GovernX/governx-contracts,src/contracts/AnythingToken.sol,"AnythingToken(uint256 _initialBalance);transfer(address _to, uint256 _value);approve(address _spender, uint256 _value);balanceOf(address _owner)"
Health-Nexus/drs,test/helpers/HealthCashMock.sol,""
jimy74/Chablex,Smart Contracts/MomentalyOwned.sol,MomentalyOwned();transferOwnership(address newOwner)
darcius/rocketpool-crowdsale,contracts/interface/SalesAgentInterface.sol,getDepositAddressVerify();getContributionOf(address _owner)
leopoldjoy/react-ethereum-dapp-example,contracts/MetaCoin.sol,"MetaCoin();sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
dcntrlzd/helios,test/contracts/HandsOnToken.sol,"transfer(address _to, uint256 _value);approve(address _spender, uint256 _value);approveAndCall(address _spender, uint256 _value, bytes _extraData);transferFrom(address _from, address _to, uint256 _value);burn(uint256 _value);burnFrom(address _from, uint256 _value);mint(uint256 _value);depositEthers(address depositAddress);depositTokens(address depositAddress);updateExchangeRate(uint256 _exchangeRate)"
bluedroplet/blobstore-ethereum,src/MixItemStoreIpfsSha256.t.sol,setUp();testControlCreateSameItemId();testFailCreateSameItemId();testGetNewItemId();testCreate();testControlCreateNewRevisionNotOwner();testFailCreateNewRevisionNotOwner();testControlCreateNewRevisionNotUpdatable();testFailCreateNewRevisionNotUpdatable();testCreateNewRevision();testControlUpdateLatestRevisionNotOwner();testFailUpdateLatestRevisionNotOwner();testControlUpdateLatestRevisionNotUpdatable();testFailUpdateLatestRevisionNotUpdatable();testControlUpdateLatestRevisionEnforceRevisions();testFailUpdateLatestRevisionEnforceRevisions();testUpdateLatestRevision();testControlRetractLatestRevisionNotOwner();testFailRetractLatestRevisionNotOwner();testControlRetractLatestRevisionNotUpdatable();testFailRetractLatestRevisionNotUpdatable();testControlRetractLatestRevisionEnforceRevisions();testFailRetractLatestRevisionEnforceRevisions();testControlRetractLatestRevisionDoesntHaveAdditionalRevisions();testFailRetractLatestRevisionDoesntHaveAdditionalRevisions();testRetractLatestRevision();testControlRestartNotOwner();testFailRestartNotOwner();testControlRestartNotUpdatable();testFailRestartNotUpdatable();testControlRestartEnforceRevisions();testFailRestartEnforceRevisions();testRestart();testControlRetractNotOwner();testFailRetractNotOwner();testControlRetractNotRetractable();testFailRetractNotRetractable();testRetract();testControlTransferEnableNotTransferable();testFailTransferEnableNotTransferable();testControlTransferDisableNotEnabled();testFailTransferDisableNotEnabled();testControlTransferNotTransferable();testFailTransferNotTransferable();testControlTransferNotEnabled();testFailTransferNotEnabled();testControlTransferDisabled();testFailTransferDisabled();testTransfer();testControlDisownNotOwner();testFailDisownNotOwner();testControlDisownNotTransferable();testFailDisownNotTransferable();testDisown();testControlSetNotUpdatableNotOwner();testFailSetNotUpdatableNotOwner();testSetNotUpdatable();testControlSetEnforceRevisionsNotOwner();testFailSetEnforceRevisionsNotOwner();testSetEnforceRevisions();testControlSetNotRetractableNotOwner();testFailSetNotRetractableNotOwner();testSetNotRetractable();testControlSetNotTransferableNotOwner();testFailSetNotTransferableNotOwner();testSetNotTransferable();testGetAbiVersion();testMultipleGetters()
link-blockchain/blobstore,src/MixItemStoreIpfsSha256.t.sol,setUp();testControlCreateSameItemId();testFailCreateSameItemId();testGetNewItemId();testCreate();testControlCreateNewRevisionNotOwner();testFailCreateNewRevisionNotOwner();testControlCreateNewRevisionNotUpdatable();testFailCreateNewRevisionNotUpdatable();testCreateNewRevision();testControlUpdateLatestRevisionNotOwner();testFailUpdateLatestRevisionNotOwner();testControlUpdateLatestRevisionNotUpdatable();testFailUpdateLatestRevisionNotUpdatable();testControlUpdateLatestRevisionEnforceRevisions();testFailUpdateLatestRevisionEnforceRevisions();testUpdateLatestRevision();testControlRetractLatestRevisionNotOwner();testFailRetractLatestRevisionNotOwner();testControlRetractLatestRevisionNotUpdatable();testFailRetractLatestRevisionNotUpdatable();testControlRetractLatestRevisionEnforceRevisions();testFailRetractLatestRevisionEnforceRevisions();testControlRetractLatestRevisionDoesntHaveAdditionalRevisions();testFailRetractLatestRevisionDoesntHaveAdditionalRevisions();testRetractLatestRevision();testControlRestartNotOwner();testFailRestartNotOwner();testControlRestartNotUpdatable();testFailRestartNotUpdatable();testControlRestartEnforceRevisions();testFailRestartEnforceRevisions();testRestart();testControlRetractNotOwner();testFailRetractNotOwner();testControlRetractNotRetractable();testFailRetractNotRetractable();testRetract();testControlTransferEnableNotTransferable();testFailTransferEnableNotTransferable();testControlTransferDisableNotEnabled();testFailTransferDisableNotEnabled();testControlTransferNotTransferable();testFailTransferNotTransferable();testControlTransferNotEnabled();testFailTransferNotEnabled();testControlTransferDisabled();testFailTransferDisabled();testTransfer();testControlDisownNotOwner();testFailDisownNotOwner();testControlDisownNotTransferable();testFailDisownNotTransferable();testDisown();testControlSetNotUpdatableNotOwner();testFailSetNotUpdatableNotOwner();testSetNotUpdatable();testControlSetEnforceRevisionsNotOwner();testFailSetEnforceRevisionsNotOwner();testSetEnforceRevisions();testControlSetNotRetractableNotOwner();testFailSetNotRetractableNotOwner();testSetNotRetractable();testControlSetNotTransferableNotOwner();testFailSetNotTransferableNotOwner();testSetNotTransferable();testGetAbiVersion();testMultipleGetters()
redsquirrel/augur-core,src/libraries/token/VariableSupplyToken.sol,"mint(address _target, uint256 _amount);burn(address _target, uint256 _amount)"
arjanz/eth-identity-registry,eth_identity/contracts/IdentityRegistry.sol,"IdentityRegistry();kill();registerEmailAddress(address addr, string emailAddress);removeEmailAddress(string emailAddress);verifyEmailAddress(address addr, string emailAddress);getEmailAddressOwner(string emailAddress)"
stanta/darfchain,ICO/contracts/ExtraFinalizeAgent.sol,"ExtraFinalizeAgent(CrowdsaleToken _token, Crowdsale _crowdsale, uint _bonusBasePoints, address _teamMultisig, uint _accountedTokenSales);isSane();finalizeCrowdsale()"
orbro/eth-enablers,greedPit.sol,GreedPit();function();init();jumpIn();rand(uint max);addNewUser(address Address);collectFees();changeOwner(address newOwner);changeBaseMultiplier(uint multi);changeMaxMultiplier(uint multi);changeFee(uint fee);setNickname(string name);currentBalance();heroOfThePit();userName(address Address);totalRescues();multipliers();pitFee();nextPayoutGoal();unclaimedFees();totalEntries();totalUsers();awaitingPayout();entryDetails(uint index);userId(address user);userTokens(address user);userRescues(address user);userProfits();recycle()
OssecTN/TuniHack2015,We_are_here_guys/Secure-Orientation-master/contract.sol,Orientation(bytes32[] proposalNames)
iam-dev/ERC23,installed_contracts/zeppelin-solidity/test/mocks/ReentrancyMock.sol,ReentrancyMock();count();countLocalRecursive(uint256 n);countThisRecursive(uint256 n);countAndCall(ReentrancyAttack attacker);callback()
cslarson/exchange,contracts/Exchange.sol,"open(Side _side, address _token, uint256 _amount, uint256 _value);cancel(uint256[] _ids);fill(uint256[] _ids);partialAsk(Offer o, uint256 remaining);partialBid(Offer o, uint256 remaining)"
mixbytes/storiqa_ico,contracts/crowdsale/ExternalAccountWalletConnector.sol,"ExternalAccountWalletConnector(address accountAddress);storeInvestment(address /*investor*/, uint payment);getTotalInvestmentsStored();wcOnCrowdsaleSuccess();wcOnCrowdsaleFailure()"
Storiqa/ico_smart_contract,contracts/crowdsale/ExternalAccountWalletConnector.sol,"ExternalAccountWalletConnector(address accountAddress);storeInvestment(address /*investor*/, uint payment);getTotalInvestmentsStored();wcOnCrowdsaleSuccess();wcOnCrowdsaleFailure()"
airalab/DAO-IPCI,contracts/builder/BuilderInsuranceHolder.sol,"create(address _operator, address _token, address _client)"
creditbit-dev/credit2.0,Utils/SafeMath.sol,"safeAdd(uint256 x, uint256 y);safeSub(uint256 x, uint256 y);safeMul(uint256 x, uint256 y)"
DigixGlobal/ethereum-ruby,spec/fixtures/ContractWithParams.sol,ContractWithParams(address _setting);getSetting();genEvent();getSetting(uint _a)
kinfoundation/kin-token,contracts/VestingTrustee.sol,"VestingTrustee(KinToken _kin);revoke(address _holder);vestedTokens(address _holder, uint256 _time);calculateVestedTokens(Grant _grant, uint256 _time);unlockVestedTokens()"
PeculiumPCL/Peculium,contracts/v1.1/RefundVault.sol,RefundVault(address _wallet);deposit(address investor);close();enableRefunds();refund(address investor)
PeculiumPCL/Peculium,contracts/v1.2/RefundVault.sol,RefundVault(address _wallet);deposit(address investor);close();enableRefunds();refund(address investor)
lyrx/lyrxgenerator,src/main/resources/blockchain/whitepaper/contract.sol,"fee(address who,uint aValue);transferCopyFrom(address otherContract);buy()"
adridadou/eth-propeller-ethj,src/test/resources/c3.sol,""
fkbenjamin/pc-firebase-starter,contracts/examples/openBadges.sol,"Testimony();create(bytes32 hash);update(uint testimonyID, bytes32 hash)"
paulyc/sol_machine,test/transaction.sol,""
EthereumEx/blockchain-060,Contracts/Conference.sol,"Conference();GetQuota();BuyTicket();ChangeQuota(uint newquota);RefundTicket(address recipient, uint amount);Destroy()"
FedCoup/FedCoup,installed_contracts/zeppelin/contracts/ownership/NoOwner.sol,""
pash7ka/zeppelin-solidity,contracts/examples/SampleCrowdsale.sol,"SampleCrowdsale(uint256 _startTime, uint256 _endTime, uint256 _rate, uint256 _goal, uint256 _cap, address _wallet);createTokenContract()"
readevalprint/aragon-core,contracts/zeppelin/examples/SampleCrowdsale.sol,"SampleCrowdsale(uint256 _startTime, uint256 _endTime, uint256 _rate, uint256 _goal, uint256 _cap, address _wallet);createTokenContract()"
pz7/liquet,node_modules/zeppelin-solidity/contracts/examples/SampleCrowdsale.sol,"SampleCrowdsale(uint256 _startTime, uint256 _endTime, uint256 _rate, uint256 _goal, uint256 _cap, address _wallet);createTokenContract()"
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/examples/SampleCrowdsale.sol,"SampleCrowdsale(uint256 _startTime, uint256 _endTime, uint256 _rate, uint256 _goal, uint256 _cap, address _wallet);createTokenContract()"
dmx374/zeppelin-solidity,contracts/examples/SampleCrowdsale.sol,"SampleCrowdsale(uint256 _startTime, uint256 _endTime, uint256 _rate, uint256 _goal, uint256 _cap, address _wallet);createTokenContract()"
cashpokerpro-dev/cash-smartcontracts,contracts/examples/SampleCrowdsale.sol,"SampleCrowdsale(uint256 _startTime, uint256 _endTime, uint256 _rate, uint256 _goal, uint256 _cap, address _wallet);createTokenContract()"
cinderblockchain/cindertoken,contracts/examples/SampleCrowdsale.sol,"SampleCrowdsale(uint256 _startTime, uint256 _endTime, uint256 _rate, uint256 _goal, uint256 _cap, address _wallet);createTokenContract()"
saulbein/web3j,core/src/test/resources/solidity/contracts/StandardToken.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
CMLTeam/ICOsurance,truffle/test/TestMetacoin.sol,testInitialBalanceUsingDeployedContract();testInitialBalanceWithNewMetaCoin()
melonproject/protocol,contracts/integrations/interfaces/ISwap.sol,swap(Order calldata order)
mixbytes/storiqa_ico,test/crowdsale/TestFixedTimeBonuses.sol,"add(uint endTime, uint bonus);validate(bool shouldDecrease);getLastTime();getBonus(uint time);testValidation();testValidationOfDoubles();testValidationOfDecrease();testGetLastTime();testGetBonus();assertInvalid(Bonuses b, bool shouldDecrease)"
Storiqa/ico_smart_contract,test/crowdsale/TestFixedTimeBonuses.sol,"add(uint endTime, uint bonus);validate(bool shouldDecrease);getLastTime();getBonus(uint time);testValidation();testValidationOfDoubles();testValidationOfDecrease();testGetLastTime();testGetBonus();assertInvalid(Bonuses b, bool shouldDecrease)"
charles-cooper/raiden,raiden/smart_contracts/Standard_Token.sol,""
Upchain/upchain-hackathon-starterpack,contracts/Standard_Token.sol,""
crypto-coder/Tokens,Token_Contracts/contracts/Standard_Token.sol,""
tomaaron/raiden,raiden/smart_contracts/Standard_Token.sol,""
vldmkr/erc20-token-boilerplate,contracts/UsableToken.sol,claim()
rohinrohin/VitalHealth,SmartContracts/VitalLogging.sol,"VitalLogging();set(uint x, uint y, uint z)"
apmilen/standard-token-sale,src/sale.sol,"time();postpone(uint startTime_);buy(uint price, address who, uint val, bool send);finalize();transferTokens(address tkn_, address dst, uint wad);setPresale(address who, bool what);postpone(uint startTime_);preDistribute(address who, uint val);appendTranch(uint floor_, uint rate_);preBuy(address who, uint val, bool send)"
cgewecke/solcover,test/sources/statements/fn-argument-multiline.sol,Test()
JoinColony/solcover,test/sources/statements/fn-argument-multiline.sol,Test()
montyly/manticore,tests/ethereum/contracts/detectors/delegatecall_not_ok.sol,setaddr(address a);default_call(bytes data)
trailofbits/manticore,tests/ethereum/contracts/detectors/delegatecall_not_ok.sol,setaddr(address a);default_call(bytes data)
customizablebasicincome/cbi-tokensale,node_modules/zeppelin-solidity/contracts/ownership/DelayedClaimable.sol,"setLimits(uint256 _start, uint256 _end);claimOwnership()"
readevalprint/aragon-core,contracts/zeppelin/ownership/DelayedClaimable.sol,"setLimits(uint256 _start, uint256 _end);claimOwnership()"
pz7/liquet,node_modules/zeppelin-solidity/contracts/ownership/DelayedClaimable.sol,"setLimits(uint256 _start, uint256 _end);claimOwnership()"
LindaHealthcareICO/linda-crowdsale,contracts/zeppelin/ownership/DelayedClaimable.sol,"setLimits(uint256 _start, uint256 _end);claimOwnership()"
dmx374/zeppelin-solidity,contracts/ownership/DelayedClaimable.sol,"setLimits(uint256 _start, uint256 _end);claimOwnership()"
cashpokerpro-dev/cash-smartcontracts,contracts/ownership/DelayedClaimable.sol,"setLimits(uint256 _start, uint256 _end);claimOwnership()"
cinderblockchain/cindertoken,contracts/ownership/DelayedClaimable.sol,"setLimits(uint256 _start, uint256 _end);claimOwnership()"
WingsDao/contracts,contracts/Factory.sol,"Factory(address _token, address _timeManager);getInstantiationCount(address creator);register(address instantiation)"
QTBlockchain/SolidityNWeb3,SmartContracts/March2018/FareContract/contracts/AutoFareCalculator.sol,"AutoFareCalculator();calculateFare(string source,string destination);secret()"
vsimetka/MVP,MiniMeToken.sol,"proxyPayment(address _owner);onTransfer(address _from, address _to, uint _amount);onApprove(address _owner, address _spender, uint _amount);Controlled();changeController(address _newController);transfer(address _to, uint256 _amount);balanceOf(address _owner);approve(address _spender, uint256 _amount);totalSupply();balanceOfAt(address _owner, uint _blockNumber);totalSupplyAt(uint _blockNumber);enableTransfers(bool _transfersEnabled);isContract(address _addr)"
sonm-io/core,blockchain/source/contracts/OracleUSD.sol,setCurrentPrice(uint _price);getCurrentPrice()
DRI-project/RICO,contracts/MultiSigWallet.sol,"MultiSigWallet(address[] _owners, uint _required);addOwner(address owner);removeOwner(address owner);replaceOwner(address owner, address newOwner);changeRequirement(uint _required);submitTransaction(address destination, uint value, bytes data);confirmTransaction(uint transactionId);revokeConfirmation(uint transactionId);executeTransaction(uint transactionId);isConfirmed(uint transactionId);addTransaction(address destination, uint value, bytes data);getConfirmationCount(uint transactionId);getTransactionCount(bool pending, bool executed);getOwners();getConfirmations(uint transactionId);getTransactionIds(uint from, uint to, bool pending, bool executed)"
TruLtd/tru-reputation-token,src/0.1.8/TruPreSaleFull.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);isValid(address input);toString(address input);addressLength(address input);Ownable();transferOwnership(address newOwner);balanceOf(address who);transfer(address to, uint256 value);transfer(address _to, uint256 _value);balanceOf(address _owner);allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);increaseApproval(address _spender, uint _addedValue);decreaseApproval(address _spender, uint _subtractedValue);setReleaseAgent(address addr);setTransferAgent(address addr, bool state);releaseTokenTransfer();mint(address _to, uint256 _amount);finishMinting(bool _presale, bool _sale);isUpgradeAgent();upgradeFrom(address _from, uint256 _value);TruUpgradeableToken(address _upgradeMaster);upgrade(uint256 _value);setUpgradeAgent(address _agent);getUpgradeState();setUpgradeMaster(address _master);canUpgrade();TruReputationToken();changeBoardAddress(address _newAddress);canUpgrade();setUpgradeMaster(address _master);halt();unhalt();buy();updateWhitelist(address _purchaser, uint _status);changeEndTime(uint256 _endTime);hasEnded();checkSaleValid();validatePurchase(address _purchaser);forwardFunds();buyTokens(address _purchaser);finalise();completion()"
TruLtd/tru-reputation-token,src/0.1.6/TruPreSaleFull.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);isValid(address input);toString(address input);addressLength(address input);Ownable();transferOwnership(address newOwner);balanceOf(address who);transfer(address to, uint256 value);transfer(address _to, uint256 _value);balanceOf(address _owner);allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);increaseApproval(address _spender, uint _addedValue);decreaseApproval(address _spender, uint _subtractedValue);setReleaseAgent(address addr);setTransferAgent(address addr, bool state);releaseTokenTransfer();mint(address _to, uint256 _amount);finishMinting(bool _presale, bool _sale);isUpgradeAgent();upgradeFrom(address _from, uint256 _value);TruUpgradeableToken(address _upgradeMaster);upgrade(uint256 _value);setUpgradeAgent(address _agent);getUpgradeState();setUpgradeMaster(address _master);canUpgrade();TruReputationToken();changeBoardAddress(address _newAddress);canUpgrade();setUpgradeMaster(address _master);halt();unhalt();buy();updateWhitelist(address _purchaser, uint _status);changeEndTime(uint256 _endTime);hasEnded();checkSaleValid();validatePurchase(address _purchaser);forwardFunds();buyTokens(address _purchaser);finalise();completion()"
marvinfy/ConsentDirectives,contracts/Category.sol,SetCategoryName(string name);GetConsentData(uint i);GetConsentDataCount();AddConsentData(uint256 consentData);GetAllConsentData();Category(string name)
eyalron33/EVMDB,examples/use_EVMDB.sol,"set_BCDB_contract();create_all();create_table();insert_data();erase_data();update_data();search_data();get_data_item();get_database_id();create(bytes32 name, bytes32 header1, bytes32 header2);insert(uint256 table_id, bytes32 data1, bytes32 data2);erase(uint256 table_id, uint256 row);update(uint256 table_id, uint256 row, bytes32 data1, bytes32 data2);search(uint256 table_id, bytes32 value);get_header(uint256 table_ind, uint256 header_id);get_data(uint256 table_id, uint256 row);get_table_size(uint256 table_id)"
channel/channel.github.io,contracts/Fund.sol,Fund();getEtherBalance();getBalance(address token);claimEther();claim(address token)
TokenMarketNet/ethereum-smart-contract-transaction-demo,contracts/SampleContract.sol,setValue(uint256 value_)
adridadou/eth-contract-api,src/test/resources/c3.sol,""
alice-si/contracts,contracts/ContractProvider.sol,contracts(bytes32 contractName)
melonproject/protocol,contracts/integrations/utils/IntegrationSignatures.sol,""
MarketProject/MarketProtocol,contracts/tokens/MarketToken.sol,""
kabl/sol-dns,src/main/resources/contracts/Cmc.sol,"getContract(bytes32 name);Cmc();bootstrap();addContract(bytes32 name, address addr, bytes32 seniorName);getContract(bytes32 name);removeContract(bytes32 name);remove()"
FimasDevelopment/IndexCertificate,certificate.sol,"initiateCertificate(bool bLong, string uName, uint iStrike, uint cPremium, uint iValue, uint pAmount);buyCertificate(uint cPremium);updatePrice(uint cPremium, uint iValue)"
jpuentea/TFG,pool.sol,"comprueba(address a, bytes32 rol);controla(address user, bytes32 hash,bytes32 rol);Votaciones(bytes32 _name);vota(bytes32 nombre,bytes32 aspirante);vota(bytes32 nombre,bytes32 aspirante);createVotacion(bytes32 nombre, bytes32[] aspirantes, uint256[] puntuaciones);eliminarVotacion(bytes32 nombre);registraToken(bytes32 rol);devuelveTodasEncuestas();devuelveToken();devuelveEncuestados(bytes32 encuesta);devuelvePuntuaciones(bytes32 encuesta)"
gnosis/gnosis-contracts,contracts/MarketMakers/LMSRMarketMaker.sol,"calcNetCost(Market market, int[] memory outcomeTokenAmounts);calcCost(Market market, uint8 outcomeTokenIndex, uint outcomeTokenCount);calcProfit(Market market, uint8 outcomeTokenIndex, uint outcomeTokenCount);calcMarginalPrice(Market market, uint8 outcomeTokenIndex);calcCostLevel(int logN, int[] memory netOutcomeTokensSold, uint funding, Fixed192x64Math.EstimationMode estimationMode);sumExpOffset(int logN, int[] memory netOutcomeTokensSold, uint funding, uint8 outcomeIndex, Fixed192x64Math.EstimationMode estimationMode);getNetOutcomeTokensSold(Market market)"
d11e9/embark-framework,test/support/contracts/error.sol,SimpleStorage(uint initialValue);set(uint x);get()
jpentland/BitBadge,node_modules/grunt-embark/node_modules/embark-framework/test/support/contracts/error.sol,SimpleStorage(uint initialValue);set(uint x);get()
jpentland/BitBadge,node_modules/embark-framework/test/support/contracts/error.sol,SimpleStorage(uint initialValue);set(uint x);get()
jeffanthony/embark-framework,test/support/contracts/error.sol,SimpleStorage(uint initialValue);set(uint x);get()
SafeMarket/embark-framework,test/support/contracts/error.sol,SimpleStorage(uint initialValue);set(uint x);get()
mesh-market/mesh-market.github.io,mesh-market/node_modules/embark/old_test/support/contracts/error.sol,SimpleStorage(uint initialValue);set(uint x);get()
hitchcott/embark-framework,test/support/contracts/error.sol,SimpleStorage(uint initialValue);set(uint x);get()
AronVanAmmers/embark-framework,test/support/contracts/error.sol,SimpleStorage(uint initialValue);set(uint x);get()
RCasatta/embark-framework,test/support/contracts/error.sol,SimpleStorage(uint initialValue);set(uint x);get()
VoR0220/embark-framework,test/support/contracts/error.sol,SimpleStorage(uint initialValue);set(uint x);get()
aakilfernandes/embark-framework,test/support/contracts/error.sol,SimpleStorage(uint initialValue);set(uint x);get()
tom-seddon/embark-framework,test/support/contracts/error.sol,SimpleStorage(uint initialValue);set(uint x);get()
gerbrand/embark-framework,test/support/contracts/error.sol,SimpleStorage(uint initialValue);set(uint x);get()
akhilss/embark-framework,old_test/support/contracts/error.sol,SimpleStorage(uint initialValue);set(uint x);get()
wpypeiyao/Identity-On-Blockchain,node_modules/embark/old_test/support/contracts/error.sol,SimpleStorage(uint initialValue);set(uint x);get()
xiaopow/embark-framework,test/support/contracts/error.sol,SimpleStorage(uint initialValue);set(uint x);get()
Communication-Systems-Group/solidity-examples,example4.sol,"get(uint nr);set(uint nr, string addr)"
montyly/manticore,tests/ethereum/contracts/consensys_benchmark/assert_constructor.sol,Benchmark()
trailofbits/manticore,tests/ethereum_bench/consensys_benchmark/assert_constructor.sol,Benchmark()
WeiFund/WeiFund,app/client/lib/contracts/Standard_Token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);Standard_Token(uint256 _initialAmount);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
WeiFund/WeiFund,contracts/Standard_Token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);Standard_Token(uint256 _initialAmount);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
michinbear/solidity,test/compilationTests/milestonetracker/MilestoneTracker.sol,numberOfMilestones();changeArbitrator(address _newArbitrator);changeDonor(address _newDonor);changeRecipient(address _newRecipient);unproposeMilestones();markMilestoneComplete(uint _idMilestone);approveCompletedMilestone(uint _idMilestone);rejectMilestone(uint _idMilestone);cancelMilestone(uint _idMilestone);arbitrateCancelCampaign();authorizePayment(uint _idMilestone)
Giveth/milestonetracker,contracts/MilestoneTracker.sol,numberOfMilestones();changeArbitrator(address _newArbitrator);changeDonor(address _newDonor);changeRecipient(address _newRecipient);unproposeMilestones();markMilestoneComplete(uint _idMilestone);approveCompletedMilestone(uint _idMilestone);rejectMilestone(uint _idMilestone);cancelMilestone(uint _idMilestone);arbitrateCancelCampaign();authorizePayment(uint _idMilestone)
livepeer/protocol,installed_contracts/oraclize/contracts/usingOraclize.sol,"query(uint _timestamp, string _datasource, string _arg);query_withGasLimit(uint _timestamp, string _datasource, string _arg, uint _gaslimit);queryN(uint _timestamp, string _datasource, bytes _argN);queryN_withGasLimit(uint _timestamp, string _datasource, bytes _argN, uint _gaslimit);getPrice(string _datasource);getPrice(string _datasource, uint gaslimit);useCoupon(string _coupon);setProofType(byte _proofType);setConfig(bytes32 _config);setCustomGasPrice(uint _gasPrice);randomDS_getSessionPubKeyHash();getAddress();oraclize_setNetwork(uint8 networkID);__callback(bytes32 myid, string result);__callback(bytes32 myid, string result, bytes proof);oraclize_useCoupon(string code);oraclize_getPrice(string datasource);oraclize_getPrice(string datasource, uint gaslimit);oraclize_query(string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2, uint gaslimit);oraclize_query(string datasource, string[] argN);oraclize_query(uint timestamp, string datasource, string[] argN);oraclize_query(uint timestamp, string datasource, string[] argN, uint gaslimit);oraclize_query(string datasource, string[] argN, uint gaslimit);oraclize_query(string datasource, string[1] args);oraclize_query(uint timestamp, string datasource, string[1] args);oraclize_query(uint timestamp, string datasource, string[1] args, uint gaslimit);oraclize_query(string datasource, string[1] args, uint gaslimit);oraclize_query(string datasource, string[2] args);oraclize_query(uint timestamp, string datasource, string[2] args);oraclize_query(uint timestamp, string datasource, string[2] args, uint gaslimit);oraclize_query(string datasource, string[2] args, uint gaslimit);oraclize_query(string datasource, string[3] args);oraclize_query(uint timestamp, string datasource, string[3] args);oraclize_query(uint timestamp, string datasource, string[3] args, uint gaslimit);oraclize_query(string datasource, string[3] args, uint gaslimit);oraclize_query(string datasource, string[4] args);oraclize_query(uint timestamp, string datasource, string[4] args);oraclize_query(uint timestamp, string datasource, string[4] args, uint gaslimit);oraclize_query(string datasource, string[4] args, uint gaslimit);oraclize_query(string datasource, string[5] args);oraclize_query(uint timestamp, string datasource, string[5] args);oraclize_query(uint timestamp, string datasource, string[5] args, uint gaslimit);oraclize_query(string datasource, string[5] args, uint gaslimit);oraclize_query(string datasource, bytes[] argN);oraclize_query(uint timestamp, string datasource, bytes[] argN);oraclize_query(uint timestamp, string datasource, bytes[] argN, uint gaslimit);oraclize_query(string datasource, bytes[] argN, uint gaslimit);oraclize_query(string datasource, bytes[1] args);oraclize_query(uint timestamp, string datasource, bytes[1] args);oraclize_query(uint timestamp, string datasource, bytes[1] args, uint gaslimit);oraclize_query(string datasource, bytes[1] args, uint gaslimit);oraclize_query(string datasource, bytes[2] args);oraclize_query(uint timestamp, string datasource, bytes[2] args);oraclize_query(uint timestamp, string datasource, bytes[2] args, uint gaslimit);oraclize_query(string datasource, bytes[2] args, uint gaslimit);oraclize_query(string datasource, bytes[3] args);oraclize_query(uint timestamp, string datasource, bytes[3] args);oraclize_query(uint timestamp, string datasource, bytes[3] args, uint gaslimit);oraclize_query(string datasource, bytes[3] args, uint gaslimit);oraclize_query(string datasource, bytes[4] args);oraclize_query(uint timestamp, string datasource, bytes[4] args);oraclize_query(uint timestamp, string datasource, bytes[4] args, uint gaslimit);oraclize_query(string datasource, bytes[4] args, uint gaslimit);oraclize_query(string datasource, bytes[5] args);oraclize_query(uint timestamp, string datasource, bytes[5] args);oraclize_query(uint timestamp, string datasource, bytes[5] args, uint gaslimit);oraclize_query(string datasource, bytes[5] args, uint gaslimit);oraclize_cbAddress();oraclize_setProof(byte proofP);oraclize_setCustomGasPrice(uint gasPrice);oraclize_setConfig(bytes32 config);oraclize_randomDS_getSessionPubKeyHash();getCodeSize(address _addr);parseAddr(string _a);strCompare(string _a, string _b);indexOf(string _haystack, string _needle);strConcat(string _a, string _b, string _c, string _d, string _e);strConcat(string _a, string _b, string _c, string _d);strConcat(string _a, string _b, string _c);strConcat(string _a, string _b);parseInt(string _a);parseInt(string _a, uint _b);oraclize_setNetworkName(string _network_name);oraclize_getNetworkName();oraclize_newRandomDSQuery(uint _delay, uint _nbytes, uint _customGasLimit);oraclize_randomDS_setCommitment(bytes32 queryId, bytes32 commitment);verifySig(bytes32 tosignh, bytes dersig, bytes pubkey);oraclize_randomDS_proofVerify__sessionKeyValidity(bytes proof, uint sig2offset);oraclize_randomDS_proofVerify__main(bytes proof, bytes32 queryId, bytes result, string context_name);copyBytes(bytes from, uint fromOffset, uint length, bytes to, uint toOffset);safer_ecrecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s);ecrecovery(bytes32 hash, bytes sig)"
Dsummers91/openfund,blockchain/installed_contracts/oraclize/contracts/usingOraclize.sol,"query(uint _timestamp, string _datasource, string _arg);query_withGasLimit(uint _timestamp, string _datasource, string _arg, uint _gaslimit);queryN(uint _timestamp, string _datasource, bytes _argN);queryN_withGasLimit(uint _timestamp, string _datasource, bytes _argN, uint _gaslimit);getPrice(string _datasource);getPrice(string _datasource, uint gaslimit);useCoupon(string _coupon);setProofType(byte _proofType);setConfig(bytes32 _config);setCustomGasPrice(uint _gasPrice);randomDS_getSessionPubKeyHash();getAddress();oraclize_setNetwork(uint8 networkID);__callback(bytes32 myid, string result);__callback(bytes32 myid, string result, bytes proof);oraclize_useCoupon(string code);oraclize_getPrice(string datasource);oraclize_getPrice(string datasource, uint gaslimit);oraclize_query(string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2, uint gaslimit);oraclize_query(string datasource, string[] argN);oraclize_query(uint timestamp, string datasource, string[] argN);oraclize_query(uint timestamp, string datasource, string[] argN, uint gaslimit);oraclize_query(string datasource, string[] argN, uint gaslimit);oraclize_query(string datasource, string[1] args);oraclize_query(uint timestamp, string datasource, string[1] args);oraclize_query(uint timestamp, string datasource, string[1] args, uint gaslimit);oraclize_query(string datasource, string[1] args, uint gaslimit);oraclize_query(string datasource, string[2] args);oraclize_query(uint timestamp, string datasource, string[2] args);oraclize_query(uint timestamp, string datasource, string[2] args, uint gaslimit);oraclize_query(string datasource, string[2] args, uint gaslimit);oraclize_query(string datasource, string[3] args);oraclize_query(uint timestamp, string datasource, string[3] args);oraclize_query(uint timestamp, string datasource, string[3] args, uint gaslimit);oraclize_query(string datasource, string[3] args, uint gaslimit);oraclize_query(string datasource, string[4] args);oraclize_query(uint timestamp, string datasource, string[4] args);oraclize_query(uint timestamp, string datasource, string[4] args, uint gaslimit);oraclize_query(string datasource, string[4] args, uint gaslimit);oraclize_query(string datasource, string[5] args);oraclize_query(uint timestamp, string datasource, string[5] args);oraclize_query(uint timestamp, string datasource, string[5] args, uint gaslimit);oraclize_query(string datasource, string[5] args, uint gaslimit);oraclize_query(string datasource, bytes[] argN);oraclize_query(uint timestamp, string datasource, bytes[] argN);oraclize_query(uint timestamp, string datasource, bytes[] argN, uint gaslimit);oraclize_query(string datasource, bytes[] argN, uint gaslimit);oraclize_query(string datasource, bytes[1] args);oraclize_query(uint timestamp, string datasource, bytes[1] args);oraclize_query(uint timestamp, string datasource, bytes[1] args, uint gaslimit);oraclize_query(string datasource, bytes[1] args, uint gaslimit);oraclize_query(string datasource, bytes[2] args);oraclize_query(uint timestamp, string datasource, bytes[2] args);oraclize_query(uint timestamp, string datasource, bytes[2] args, uint gaslimit);oraclize_query(string datasource, bytes[2] args, uint gaslimit);oraclize_query(string datasource, bytes[3] args);oraclize_query(uint timestamp, string datasource, bytes[3] args);oraclize_query(uint timestamp, string datasource, bytes[3] args, uint gaslimit);oraclize_query(string datasource, bytes[3] args, uint gaslimit);oraclize_query(string datasource, bytes[4] args);oraclize_query(uint timestamp, string datasource, bytes[4] args);oraclize_query(uint timestamp, string datasource, bytes[4] args, uint gaslimit);oraclize_query(string datasource, bytes[4] args, uint gaslimit);oraclize_query(string datasource, bytes[5] args);oraclize_query(uint timestamp, string datasource, bytes[5] args);oraclize_query(uint timestamp, string datasource, bytes[5] args, uint gaslimit);oraclize_query(string datasource, bytes[5] args, uint gaslimit);oraclize_cbAddress();oraclize_setProof(byte proofP);oraclize_setCustomGasPrice(uint gasPrice);oraclize_setConfig(bytes32 config);oraclize_randomDS_getSessionPubKeyHash();getCodeSize(address _addr);parseAddr(string _a);strCompare(string _a, string _b);indexOf(string _haystack, string _needle);strConcat(string _a, string _b, string _c, string _d, string _e);strConcat(string _a, string _b, string _c, string _d);strConcat(string _a, string _b, string _c);strConcat(string _a, string _b);parseInt(string _a);parseInt(string _a, uint _b);oraclize_setNetworkName(string _network_name);oraclize_getNetworkName();oraclize_newRandomDSQuery(uint _delay, uint _nbytes, uint _customGasLimit);oraclize_randomDS_setCommitment(bytes32 queryId, bytes32 commitment);verifySig(bytes32 tosignh, bytes dersig, bytes pubkey);oraclize_randomDS_proofVerify__sessionKeyValidity(bytes proof, uint sig2offset);oraclize_randomDS_proofVerify__main(bytes proof, bytes32 queryId, bytes result, string context_name);copyBytes(bytes from, uint fromOffset, uint length, bytes to, uint toOffset);safer_ecrecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s);ecrecovery(bytes32 hash, bytes sig)"
sirasistant/market_consensys_academy,contracts/oraclizeAPI.sol,"query(uint _timestamp, string _datasource, string _arg);query_withGasLimit(uint _timestamp, string _datasource, string _arg, uint _gaslimit);queryN(uint _timestamp, string _datasource, bytes _argN);queryN_withGasLimit(uint _timestamp, string _datasource, bytes _argN, uint _gaslimit);getPrice(string _datasource);getPrice(string _datasource, uint gaslimit);useCoupon(string _coupon);setProofType(byte _proofType);setConfig(bytes32 _config);setCustomGasPrice(uint _gasPrice);randomDS_getSessionPubKeyHash();getAddress();oraclize_setNetwork(uint8 networkID);__callback(bytes32 myid, string result);__callback(bytes32 myid, string result, bytes proof);oraclize_useCoupon(string code);oraclize_getPrice(string datasource);oraclize_getPrice(string datasource, uint gaslimit);oraclize_query(string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2, uint gaslimit);oraclize_query(string datasource, string[] argN);oraclize_query(uint timestamp, string datasource, string[] argN);oraclize_query(uint timestamp, string datasource, string[] argN, uint gaslimit);oraclize_query(string datasource, string[] argN, uint gaslimit);oraclize_query(string datasource, string[1] args);oraclize_query(uint timestamp, string datasource, string[1] args);oraclize_query(uint timestamp, string datasource, string[1] args, uint gaslimit);oraclize_query(string datasource, string[1] args, uint gaslimit);oraclize_query(string datasource, string[2] args);oraclize_query(uint timestamp, string datasource, string[2] args);oraclize_query(uint timestamp, string datasource, string[2] args, uint gaslimit);oraclize_query(string datasource, string[2] args, uint gaslimit);oraclize_query(string datasource, string[3] args);oraclize_query(uint timestamp, string datasource, string[3] args);oraclize_query(uint timestamp, string datasource, string[3] args, uint gaslimit);oraclize_query(string datasource, string[3] args, uint gaslimit);oraclize_query(string datasource, string[4] args);oraclize_query(uint timestamp, string datasource, string[4] args);oraclize_query(uint timestamp, string datasource, string[4] args, uint gaslimit);oraclize_query(string datasource, string[4] args, uint gaslimit);oraclize_query(string datasource, string[5] args);oraclize_query(uint timestamp, string datasource, string[5] args);oraclize_query(uint timestamp, string datasource, string[5] args, uint gaslimit);oraclize_query(string datasource, string[5] args, uint gaslimit);oraclize_query(string datasource, bytes[] argN);oraclize_query(uint timestamp, string datasource, bytes[] argN);oraclize_query(uint timestamp, string datasource, bytes[] argN, uint gaslimit);oraclize_query(string datasource, bytes[] argN, uint gaslimit);oraclize_query(string datasource, bytes[1] args);oraclize_query(uint timestamp, string datasource, bytes[1] args);oraclize_query(uint timestamp, string datasource, bytes[1] args, uint gaslimit);oraclize_query(string datasource, bytes[1] args, uint gaslimit);oraclize_query(string datasource, bytes[2] args);oraclize_query(uint timestamp, string datasource, bytes[2] args);oraclize_query(uint timestamp, string datasource, bytes[2] args, uint gaslimit);oraclize_query(string datasource, bytes[2] args, uint gaslimit);oraclize_query(string datasource, bytes[3] args);oraclize_query(uint timestamp, string datasource, bytes[3] args);oraclize_query(uint timestamp, string datasource, bytes[3] args, uint gaslimit);oraclize_query(string datasource, bytes[3] args, uint gaslimit);oraclize_query(string datasource, bytes[4] args);oraclize_query(uint timestamp, string datasource, bytes[4] args);oraclize_query(uint timestamp, string datasource, bytes[4] args, uint gaslimit);oraclize_query(string datasource, bytes[4] args, uint gaslimit);oraclize_query(string datasource, bytes[5] args);oraclize_query(uint timestamp, string datasource, bytes[5] args);oraclize_query(uint timestamp, string datasource, bytes[5] args, uint gaslimit);oraclize_query(string datasource, bytes[5] args, uint gaslimit);oraclize_cbAddress();oraclize_setProof(byte proofP);oraclize_setCustomGasPrice(uint gasPrice);oraclize_setConfig(bytes32 config);oraclize_randomDS_getSessionPubKeyHash();getCodeSize(address _addr);parseAddr(string _a);strCompare(string _a, string _b);indexOf(string _haystack, string _needle);strConcat(string _a, string _b, string _c, string _d, string _e);strConcat(string _a, string _b, string _c, string _d);strConcat(string _a, string _b, string _c);strConcat(string _a, string _b);parseInt(string _a);parseInt(string _a, uint _b);oraclize_setNetworkName(string _network_name);oraclize_getNetworkName();oraclize_newRandomDSQuery(uint _delay, uint _nbytes, uint _customGasLimit);oraclize_randomDS_setCommitment(bytes32 queryId, bytes32 commitment);verifySig(bytes32 tosignh, bytes dersig, bytes pubkey);oraclize_randomDS_proofVerify__sessionKeyValidity(bytes proof, uint sig2offset);oraclize_randomDS_proofVerify__main(bytes proof, bytes32 queryId, bytes result, string context_name);copyBytes(bytes from, uint fromOffset, uint length, bytes to, uint toOffset);safer_ecrecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s);ecrecovery(bytes32 hash, bytes sig)"
paulhauner/token-syndicate,contracts/BAT/StandardToken.sol,"balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
Majoolr/ethereum-libraries,WalletLib/WalletAdminLib.sol,"checkChangeOwnerArgs(uint256 _from, uint256 _to);checkNewOwnerArgs(uint256 _index, uint256 _length, uint256 _max);checkRemoveOwnerArgs(uint256 _index, uint256 _length, uint256 _min);checkRequiredChange(uint256 _newRequired, uint256 _length);calcConfirmsNeeded(uint256 _required, uint256 _count)"
Neufund/Contracts,contracts/platform/PlatformGovernance.sol,""
BitySA/whetcwithdraw,address_authorization/authorized_addresses.sol,getRepresentedDTH(address _authorizedAddress);AuthorizedAddresses();fill(uint[] data);seal()
akalinkin/ethsmartcvv,contracts/ValueOwners.sol,ValueOwners();setCost(uint value);getBalance(address account);buyValue();payedAmount()
gmo-blockchain/solidity,contracts/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
slockit/smart-contract,DAOSecurity.sol,getTotalCosts();getOneTimeCosts();getMinDailyWithdrawLimit();getDailyWithdrawLimit();getContractor();getHashOfTheProposalDocument();getLastPayment();getDateOfSignature();getClient();getOriginalClient();getIsContractValid();sign();setDailyWithdrawLimit(uint128 _dailyWithdrawLimit);returnRemainingEther();getDailyPayment();updateClientAddress(DAO _newClient)
orbro/eth-enablers,dgdSwapContract.sol,"balanceOf(address _owner);badgesOf(address _owner);transfer(address _to, uint256 _value);sendBadge(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);mint(address _owner, uint256 _amount);calculateTxFee(uint256 _value, address _user);swap(address sendEtherTo, address adddressOfToken, uint tokenPriceInFinney_1000FinneyIs_1Ether, uint durationInDays);killSwap();emergencyWithdrawal(address token)"
adibas03/solidity-data-tree,contracts/Tree.sol,"TreeContract();indexExists(bytes32 index_id);childExists(bytes32 child_id);nodeExists(bytes32 index_id,bytes32 node_id);getParent(bytes32 child_id);getHeirachy(bytes32 child_id);nextSection(bytes32 index_id);getSection(bytes32 section_id);getIndex(bytes32 index_id);getNode(bytes32 node_id);getNodesBatch(bytes32 index_id,bytes32 last_node_id);removeSection(bytes32 index_id,bytes32 section_id);removeNode(bytes32 index_id,bytes32 node_id);generateSection();newIndex(bytes32 index_id);insertSection(bytes32 parent_id);insertNode(bytes32 index_id, bytes32 node_id, bytes32 data);insertNodeBatch(bytes32 index_id, bytes32[2][5] data)"
lucywe/rootcore-crowdsale,solidity/contracts/interfaces/IOwned.sol,owner();transferOwnership(address _newOwner);acceptOwnership()
isvirin/neurodao,NeuroDAO3.sol,"owned();changeOwner(address _owner);confirmOwner();balanceOf(address who);transfer(address to, uint value);allowance(address owner, address spender);transferFrom(address from, address to, uint value);approve(address spender, uint value);freezedBalanceOf(address _who);ManualMigration(address _original);migrateManual(address _who);sealManualMigration(bool force);beforeBalanceChanges(address _who);Token(address _original, uint _startTime);availableTokens(address _who);firstYearPeriods();balanceOf(address _who);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);burn(uint256 _value);migrateFrom(address _from, uint256 _value);TokenMigration(address _original, uint _startTime);migrate();setMigrationAgent(address _agent);NeuroDAO(address _original, uint _startTime);withdraw();freezeTheMoment();freezedBalanceOf(address _who);killMe();mintTokens(uint _tokens, address _who, bool _isTeam);Adapter(address _neuroDAO, address _erc20contract, address _masterHolder);killMe();giveMeTokens()"
iurimatias/embark-framework,packages/plugins/coverage/src/test/fixtures/contracts/SignatureBouncer.sol,"_isValidSignature(address account, bytes memory signature);_isValidSignatureAndMethod(address account, bytes memory signature);_isValidSignatureAndData(address account, bytes memory signature);_isValidDataHash(bytes32 hash, bytes memory signature)"
livepeer/protocol,test/unit/TestMathUtils.sol,test_validPerc();test_percPoints()
ConsenSys/truffle,packages/truffle/test/sources/ethpm/installed_contracts/tokens/contracts/eip20/EIP20.sol,"transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);balanceOf(address _owner);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
ConsenSys/truffle,packages/deployer/test/sources/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
ConsenSys/truffle,packages/truffle/test/sources/ethpm/installed_contracts/tokens/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
ConsenSys/truffle,packages/truffle/test/sources/external_compile/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
ConsenSys/truffle,packages/compile-solidity/test/sources/v0.5.x/Version5Pragma.sol,""
ConsenSys/truffle,packages/truffle/test/sources/migrations/success/contracts/Loop.sol,""
ConsenSys/truffle,packages/truffle/test/sources/migrations/error/contracts/Loops.sol,""
ConsenSys/truffle,packages/truffle/test/sources/migrations/fabric-evm/contracts/Loop.sol,""
ConsenSys/truffle,packages/truffle/test/sources/migrations/quorum/contracts/Loop.sol,""
ConsenSys/truffle,packages/deployer/test/sources/Loop.sol,""
ConsenSys/truffle,packages/truffle/test/sources/inheritance/contracts/LeafA.sol,""
ConsenSys/truffle,packages/contract-tests/test/sources/ExampleLibraryConsumer.sol,triggerLibraryEvent()
ConsenSys/truffle,packages/truffle/test/sources/migrations/fabric-evm/contracts/Example.sol,""
ConsenSys/truffle,packages/deployer/test/sources/Example.sol,""
ConsenSys/truffle,packages/truffle/test/sources/migrations/quorum/contracts/Example.sol,""
ConsenSys/truffle,packages/truffle/test/sources/migrations/production/contracts/Example.sol,""
ConsenSys/truffle,packages/truffle/test/sources/migrations/success/contracts/Example.sol,""
ConsenSys/truffle,packages/truffle/test/sources/migrations/error/contracts/Example.sol,""
ConsenSys/truffle,packages/resolver/solidity/AssertString.sol,"equal(string memory a, string memory b, string memory message);notEqual(string memory a, string memory b, string memory message);isEmpty(string memory str, string memory message);isNotEmpty(string memory str, string memory message);_report(bool result, string memory message);_stringsEqual(string memory a, string memory b);_tag(string memory value, string memory tag);_appendTagged(string memory tagged, string memory str);_appendTagged(string memory tagged0, string memory tagged1, string memory str)"
ConsenSys/truffle,packages/contract-tests/test/sources/Example.sol,"setValue(uint val);setNumbers(uint[] memory vals);getNumbers();isDeployed();viewSender();getValue();getValuePlus(uint toAdd);overloadedGet();overloadedGet(uint multiplier);overloadedSet(bytes32 h, uint val);overloadedSet(bytes32 h, uint val, uint multiplier);parrot(uint val);triggerEvent();triggerEventWithArgument(uint arg);triggerSpecialEvent();triggerContractAddressEvent();triggerNumberEvent(int a, int b, address c, uint d, uint e);triggerRequireError();triggerAssertError();triggerRequireWithReasonError();runsOutOfGas();isExpensive(uint val);consumesGas();returnsNamedTuple();returnsUnnamedTuple();returnsInt();returnsNamedStaticArray();returnsUnnamedStaticArray();returnsNamedStaticNestedArray();returnsUnnamedStaticNestedArray()"
ConsenSys/truffle,packages/truffle/test/sources/inheritance/contracts/SameFile.sol,""
ConsenSys/truffle,packages/compile-solidity/test/sources/v0.4.x/NewPragma.sol,NewPragma()
ConsenSys/truffle,packages/truffle/test/sources/ethpm/contracts/Local.sol,""
ConsenSys/truffle,packages/truffle/test/sources/ethpm/installed_contracts/tokens/contracts/eip20/EIP20Interface.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
ConsenSys/truffle,packages/compile-solidity/test/sources/v0.4.15/OldPragmaPin.sol,OldPragmaPin()
ConsenSys/truffle,packages/db/test/truffle-projects/drizzle-box/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
ConsenSys/truffle,packages/decoder/test/current/contracts/DecodingSample.sol,example();spill()
ConsenSys/truffle,packages/truffle/test/sources/migrations/error/contracts/ExampleRevert.sol,""
ConsenSys/truffle,packages/deployer/test/sources/ExampleRevert.sol,""
ConsenSys/truffle,packages/db/test/truffle-projects/drizzle-box/contracts/SimpleStorage.sol,set(uint x)
ConsenSys/truffle,packages/truffle/test/sources/monorepo/truffleproject/node_modules/nodepkg/LocalNodeImport.sol,""
ConsenSys/truffle,packages/truffle/test/sources/migrations/fabric-evm/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
ConsenSys/truffle,packages/truffle/test/sources/migrations/quorum/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
ConsenSys/truffle,packages/truffle/test/sources/install/init/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
ConsenSys/truffle,packages/truffle/test/sources/contract_names/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
ConsenSys/truffle,packages/truffle/test/sources/migrations/success/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
ConsenSys/truffle,packages/truffle/test/sources/migrations/error/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
ConsenSys/truffle,packages/truffle/test/sources/db_enabled/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
ConsenSys/truffle,packages/truffle/test/sources/migrations/init/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
ConsenSys/truffle,packages/truffle/test/sources/migrations/production/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
ConsenSys/truffle,packages/compile-solidity/test/sources/v0.6.x/ComplexOrdered.sol,theFirst();second();andThird()
ConsenSys/truffle,packages/decoder/test/legacy/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
ConsenSys/truffle,packages/truffle/test/sources/ethpm/contracts/PLCRVoting.sol,"isExpired(uint _terminationDate);attrUUID(address _user, uint _pollID)"
ConsenSys/truffle,packages/core/lib/commands/create/templates/Test.sol,testIsTrue()
ConsenSys/truffle,packages/compile-solidity/test/sources/badSources/ShouldError.sol,""
ConsenSys/truffle,packages/resolver/test/fixtures/globalnpm/node_modules/package/contracts/Test.sol,""
ConsenSys/truffle,packages/truffle/test/scenarios/cyclic_dependencies/Pong.sol,""
ConsenSys/truffle,packages/artifactor/test/ExampleLibraryConsumer.sol,triggerLibraryEvent()
ConsenSys/truffle,packages/truffle/test/sources/external_compile/contracts/MetaCoin.sol,"sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
ConsenSys/truffle,packages/compile-solidity/test/sources/v0.8.x/ComplexOrdered.sol,theFirst();second();andThird()
ConsenSys/truffle,packages/db/src/project/test/compilationSources/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
ConsenSys/truffle,packages/truffle/test/scenarios/solidity_testing/TestWithBalance.sol,testInitialBalance()
ConsenSys/truffle,packages/compile-solidity/test/sources/v0.4.x/SimpleOrdered.sol,theFirst();second();andThird()
ConsenSys/truffle,packages/compile-solidity/test/sources/multipleSolcVersions/WithSemverError.sol,""
ConsenSys/truffle,packages/truffle/test/scenarios/cyclic_dependencies/Ping.sol,""
ConsenSys/truffle,packages/compile-solidity/test/sources/multipleSolcVersions/noImports/SourceWith0.6.0.sol,""
ConsenSys/truffle,packages/compile-solidity/test/sources/multipleSolcVersions/withImports/B.sol,""
ConsenSys/truffle,packages/truffle/test/sources/networks/metacoin/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
ConsenSys/truffle,packages/truffle/test/sources/migrations/quorum/contracts/UsesExample.sol,""
ConsenSys/truffle,packages/truffle/test/sources/migrations/fabric-evm/contracts/UsesExample.sol,""
ConsenSys/truffle,packages/truffle/test/sources/migrations/error/contracts/UsesExample.sol,""
ConsenSys/truffle,packages/truffle/test/sources/migrations/success/contracts/UsesExample.sol,""
ConsenSys/truffle,packages/deployer/test/sources/UsesExample.sol,""
ConsenSys/truffle,packages/compile-solidity/test/sources/multipleSolcVersions/noImports/SourceWith0.7.0.sol,""
ConsenSys/truffle,packages/truffle/test/sources/monorepo/truffleproject/contracts/Importer.sol,""
ConsenSys/truffle,packages/truffle/test/sources/migrations/quorum/contracts/PayableExample.sol,""
ConsenSys/truffle,packages/truffle/test/sources/migrations/success/contracts/PayableExample.sol,""
ConsenSys/truffle,packages/truffle/test/sources/migrations/fabric-evm/contracts/PayableExample.sol,""
ConsenSys/truffle,packages/compile-solidity/test/sources/v0.6.x/InheritB.sol,""
ConsenSys/truffle,packages/resolver/solidity/SafeSend.sol,deliver(address recipient)
ConsenSys/truffle,packages/truffle/test/sources/inheritance/contracts/LeafC.sol,""
ConsenSys/truffle,packages/truffle/test/sources/db_enabled/contracts/contract.sol,""
ConsenSys/truffle,packages/truffle/test/sources/contract_names/contracts/contract.sol,""
ConsenSys/truffle,packages/compile-solidity/test/sources/v0.7.x/Version7Pragma.sol,""
ConsenSys/truffle,packages/decoder/test/current/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
ConsenSys/truffle,packages/truffle/test/sources/monorepo/installed_contracts/ethpmpkg/EthPMImport.sol,""
ConsenSys/truffle,packages/deployer/test/sources/ExampleAssert.sol,""
ConsenSys/truffle,packages/truffle/test/sources/migrations/error/contracts/ExampleAssert.sol,""
ConsenSys/truffle,packages/truffle/test/sources/migrations/error/contracts/RevertWithReason.sol,""
ConsenSys/truffle,packages/truffle/test/sources/monorepo/node_modules/nodepkg/NodeImport.sol,""
ConsenSys/truffle,packages/truffle/test/sources/contract_names/contracts/relative_import.sol,""
ConsenSys/truffle,packages/truffle/test/sources/db_enabled/contracts/relative_import.sol,""
ConsenSys/truffle,packages/compile-solidity/test/sources/v0.7.x/InheritB.sol,""
ConsenSys/truffle,packages/truffle/test/sources/networks/metacoin/contracts/MetaCoin.sol,"sendCoin(address receiver, uint amount);getBalanceInEth(address addr);getBalance(address addr)"
ConsenSys/truffle,packages/compile-solidity/test/sources/v0.8.x/InheritB.sol,""
ConsenSys/truffle,packages/truffle/test/sources/ethpm/installed_contracts/tokens/contracts/eip20/EIP20Factory.sol,codeAt(address _addr)
ConsenSys/truffle,packages/contract-tests/test/sources/ABIV2UserDirectory.sol,addUser(User memory user);user(address addr)
ConsenSys/truffle,packages/db/src/project/test/compilationSources/MagicSquare.sol,generateMagicSquare(uint n);save(SquareLib.MagicSquare memory square)
ConsenSys/truffle,packages/truffle/test/sources/migrations/quorum/contracts/UsesLibrary.sol,fireIsLibraryEvent(uint id);fireUsesLibraryEvent(uint id)
ConsenSys/truffle,packages/deployer/test/sources/UsesLibrary.sol,fireIsLibraryEvent(uint id);fireUsesLibraryEvent(uint id)
ConsenSys/truffle,packages/truffle/test/sources/migrations/fabric-evm/contracts/UsesLibrary.sol,fireIsLibraryEvent(uint id);fireUsesLibraryEvent(uint id)
ConsenSys/truffle,packages/truffle/test/sources/migrations/success/contracts/UsesLibrary.sol,fireIsLibraryEvent(uint id);fireUsesLibraryEvent(uint id)
ConsenSys/truffle,packages/db/test/truffle-projects/drizzle-box/contracts/TutorialToken.sol,""
ConsenSys/truffle,packages/core/lib/commands/init/initSource/contracts/Migrations.sol,setCompleted(uint completed)
ConsenSys/truffle,packages/workflow-compile/test/sources/SimpleStorage.sol,set(uint x);get()
ConsenSys/truffle,packages/compile-solidity/test/sources/v0.4.x/OldPragmaFloat.sol,OldPragmaFloat()
ConsenSys/truffle,packages/truffle/test/scenarios/solidity_testing/ImportEverything.sol,test()
ConsenSys/truffle,packages/decoder/test/current/contracts/DowngradeTest.sol,"run(AsymmetricTriple memory at, Ternary t, DowngradeTest dt, address payable ap);causeTrouble();shhImADecimal(int168 secretlyADecimal);enumSilliness(uint8 decoy1, uint8 decoy2, Ternary x, PositionOnHill y);decoy();emitParent();returnsStuff();decoy()"
ConsenSys/truffle,packages/compile-solidity/test/sources/v0.5.x/InheritB.sol,""
ConsenSys/truffle,packages/compile-solidity/test/sources/multipleSolcVersions/withImports/C.sol,""
ConsenSys/truffle,packages/compile-solidity/test/sources/v0.4.x/InheritB.sol,""
ConsenSys/truffle,packages/compile-solidity/test/sources/multipleSolcVersions/noImports/SourceWith0.5.0.sol,""
ConsenSys/truffle,packages/compile-solidity/test/sources/v0.4.15/MyContract.sol,""
ConsenSys/truffle,packages/compile-solidity/test/sources/v0.7.x/ComplexOrdered.sol,theFirst();second();andThird()
ConsenSys/truffle,packages/compile-solidity/test/sources/multipleSolcVersions/noImports/OtherSourceWith0.7.0.sol,""
ConsenSys/truffle,packages/core/lib/commands/create/templates/Example.sol,""
ConsenSys/truffle,packages/compile-solidity/test/sources/v0.8.x/Version8Pragma.sol,""
ConsenSys/truffle,packages/truffle/test/sources/inheritance/contracts/Branch.sol,""
ConsenSys/truffle,packages/compile-solidity/test/sources/v0.6.x/Version6Pragma.sol,""
ConsenSys/truffle,packages/truffle/test/scenarios/stacktracing/StacktraceTest.sol,run()
ConsenSys/truffle,packages/decoder/test/current/contracts/WireTest.sol,"inherited(uint[2] memory);inheritedReturn();danger();overriddenReturn();notImplemented();redHerring(RedHerring memory);emitStuff(Triple memory p, address[2] memory precompiles, string[] memory strings);moreStuff(WireTest notThis, uint[] memory bunchOfInts);globalTest(GlobalStruct memory s, GlobalEnum e);danger();indexTest(uint a, uint b, string memory c, string memory d, uint e);libraryTest(string memory it);ambiguityTest();unambiguityTest();anonymousTest();returnsStuff();overriddenReturn();boom();extrasTestSome();extrasTestNone(address test);emitEvent(string calldata it);emitUnambiguousEvent();run()"
ConsenSys/truffle,packages/truffle/test/sources/inheritance/contracts/LeafB.sol,""
ConsenSys/truffle,packages/decoder/test/current/contracts/SliceTest.sol,slice(uint[] calldata arr)
ConsenSys/truffle,packages/compile-solidity/test/sources/multipleSolcVersions/withImports/NoCommonVersion.sol,""
ConsenSys/truffle,packages/truffle/test/sources/monorepo/errorproject/contracts/Importer.sol,""
ConsenSys/truffle,packages/truffle/test/sources/inheritance/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
ConsenSys/truffle,packages/decoder/test/legacy/contracts/ShadowTest.sol,""
ConsenSys/truffle,packages/decoder/test/current/contracts/MessageTest.sol,""
ConsenSys/truffle,packages/truffle/test/sources/inheritance/contracts/Root.sol,"addToRoot(uint a, uint b)"
ConsenSys/truffle,packages/truffle/test/scenarios/solidity_testing/TestFailures.sol,testAssertFail();testAssertEqualFailure()
ConsenSys/truffle,packages/db/test/truffle-projects/drizzle-box/test/TestSimpleStorage.sol,testItStoresAValue()
ConsenSys/truffle,packages/compile-vyper/test/sources/SolidityContract.sol,solidity_action()
ConsenSys/truffle,packages/compile-solidity/test/sources/v0.5.x/ComplexOrdered.sol,theFirst();second();andThird()
ConsenSys/truffle,packages/truffle/test/sources/exec/contracts/Executable.sol,""
ConsenSys/truffle,packages/resolver/solidity/Assert.sol,"addMod(uint a, uint b, uint modulus);testAdd();testAdd();fail(string memory message);equal(string memory a, string memory b, string memory message);notEqual(string memory a, string memory b, string memory message);isEmpty(string memory str, string memory message);isNotEmpty(string memory str, string memory message);equal(bytes32 a, bytes32 b, string memory message);notEqual(bytes32 a, bytes32 b, string memory message);isZero(bytes32 bts, string memory message);isNotZero(bytes32 bts, string memory message);equal(address a, address b, string memory message);notEqual(address a, address b, string memory message);isZero(address addr, string memory message);isNotZero(address addr, string memory message);isTrue(bool b, string memory message);isFalse(bool b, string memory message);equal(bool a, bool b, string memory message);notEqual(bool a, bool b, string memory message);equal(uint a, uint b, string memory message);notEqual(uint a, uint b, string memory message);isAbove(uint a, uint b, string memory message);isAtLeast(uint a, uint b, string memory message);isBelow(uint a, uint b, string memory message);isAtMost(uint a, uint b, string memory message);isZero(uint number, string memory message);isNotZero(uint number, string memory message);equal(int a, int b, string memory message);notEqual(int a, int b, string memory message);isAbove(int a, int b, string memory message);isAtLeast(int a, int b, string memory message);isBelow(int a, int b, string memory message);isAtMost(int a, int b, string memory message);isZero(int number, string memory message);isNotZero(int number, string memory message);equal(uint[] memory arrA, uint[] memory arrB, string memory message);notEqual(uint[] memory arrA, uint[] memory arrB, string memory message);lengthEqual(uint[] memory arr, uint length, string memory message);lengthNotEqual(uint[] memory arr, uint length, string memory message);equal(int[] memory arrA, int[] memory arrB, string memory message);notEqual(int[] memory arrA, int[] memory arrB, string memory message);lengthEqual(int[] memory arr, uint length, string memory message);lengthNotEqual(int[] memory arr, uint length, string memory message);equal(address[] memory arrA, address[] memory arrB, string memory message);notEqual(address[] memory arrA, address[] memory arrB, string memory message);lengthEqual(address[] memory arr, uint length, string memory message);lengthNotEqual(address[] memory arr, uint length, string memory message);equal(address payable[] memory arrA, address payable[] memory arrB, string memory message);notEqual(address payable[] memory arrA, address payable[] memory arrB, string memory message);lengthEqual(address payable[] memory arr, uint length, string memory message);lengthNotEqual(address payable[] memory arr, uint length, string memory message);equal(bytes32[] memory arrA, bytes32[] memory arrB, string memory message);notEqual(bytes32[] memory arrA, bytes32[] memory arrB, string memory message);lengthEqual(bytes32[] memory arr, uint length, string memory message);lengthNotEqual(bytes32[] memory arr, uint length, string memory message);balanceEqual(address a, uint b, string memory message);balanceNotEqual(address a, uint b, string memory message);balanceIsZero(address a, string memory message);balanceIsNotZero(address a, string memory message)"
ConsenSys/truffle,packages/compile-solidity/test/sources/v0.4.x/ComplexOrdered.sol,theFirst();second();andThird()
ConsenSys/truffle,packages/artifactor/test/Example.sol,setValue(uint val);getValue();parrot(uint val);triggerEvent()
ConsenSys/truffle,packages/truffle/test/sources/migrations/error/contracts/Abstract.sol,method()
ConsenSys/truffle,packages/deployer/test/sources/Abstract.sol,method()
ConsenSys/truffle,packages/truffle/test/sources/monorepo/node_modules/nodepkg/ImportOfImport.sol,""
ConsenSys/truffle,packages/compile-solidity/test/sources/multipleSolcVersions/withImports/A.sol,""
ConsenSys/truffle,packages/compile-solidity/test/sources/multipleSolcVersions/withImports/ImportsBadSemver.sol,""
ConsenSys/truffle,packages/db/test/truffle-projects/drizzle-box/contracts/ComplexStorage.sol,""
ConsenSys/truffle,packages/decoder/test/legacy/contracts/WireTest.sol,interfaceAndOverrideTest();interfaceAndOverrideTest()
ethereum/solidity,test/libsolidity/semanticTests/structs/global.sol,f(S calldata s)
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_unimplemented_and_unimplemented_with_unimplemented.sol,f();f();f()
ethereum/solidity,test/libsolidity/syntaxTests/constructor/abstract_creation_forward_reference.sol,createChild()
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV1/abi_decode_v2.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/payable_internal_function_type.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/069_base_class_state_variable_accessor.sol,foo()
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/push_as_lhs_and_rhs_2d_2.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_indirectly_recursive_dynamic_array1.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/parsing/from_is_not_keyword.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_stricter_mutability2.sol,foo();foo()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/reverting_call_recursive.sol,iWillRevert();test(bool _param)
ethereum/solidity,test/libsolidity/semanticTests/types/mapping_enum_key_library_v2.sol,"get(mapping(E => uint8);set(mapping(E => uint8);get(E k);set(E k, uint8 v)"
ethereum/solidity,test/libsolidity/semanticTests/array/slices/array_slice_calldata_as_argument_of_external_calls.sol,""
ethereum/solidity,test/libsolidity/semanticTests/arithmetics/exp_associativity.sol,"test_invariant(uint a, uint b, uint c);test_literal_mix(uint a, uint b);test_other_operators(uint a, uint b)"
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/internal_call_with_assertion_inheritance_1_fail.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/431_bare_assert.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/523_reject_interface_creation.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/constants/pure_non_rational.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/more_than_256_importerrors.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/change_return_types_in_interface.sol,f();f()
ethereum/solidity,test/libsolidity/syntaxTests/specialFunctions/abi_functions_member_access.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_inside_modifiers_2.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/array/length/bytes32_too_large_multidim.sol,""
ethereum/solidity,test/libsolidity/semanticTests/reverts/invalid_enum_as_external_arg.sol,tested(X x);test()
ethereum/solidity,test/libsolidity/semanticTests/smoke/arrays.sol,r();s();u();v();x()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/if.sol,"f(bool condition);g(bool condition);h(bool condition);i(bool condition);j(uint a, uint b);k(uint a, uint b)"
ethereum/solidity,test/libsolidity/smtCheckerTests/overflow/simple_overflow.sol,"f(uint a, uint b)"
ethereum/solidity,test/libsolidity/syntaxTests/variableDeclaration/for.sol,f(uint x)
ethereum/solidity,test/libsolidity/smtCheckerTests/out_of_bounds/array_2d_1.sol,"p();q(uint i);r(uint i, uint j)"
ethereum/solidity,test/libsolidity/semanticTests/functionCall/file_level_call_via_module.sol,f(uint);f(bytes memory x);f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/mapping_to_mapping_in_struct.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/parsing/scientific_notation.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/223_literal_strings.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/unnamed_tuple_decl.sol,f();g();h();test()
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/v1_call_to_v2_event_accepting_struct.sol,foo()
ethereum/solidity,test/libsolidity/syntaxTests/immutable/multiple_inheritance_virtual_functions.sol,f();xInit();f();xInit();f()
ethereum/solidity,test/libsolidity/semanticTests/storage/mappings_array_pop_delete.sol,map(uint key);p();d()
ethereum/solidity,test/libsolidity/syntaxTests/scoping/name_shadowing_function_type_parameter.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/modifiers/use_unimplemented_from_base.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_virtual_static_call_1.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/182_equal_overload.sol,test(uint a);test(uint a)
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/function_call_inside_branch.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_indirectly_recursive_fixed_array2.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/blockchain_state/this_does_not_change.sol,inv()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/bitwise_combo.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/functions_bound_1_fail.sol,"add(uint x, uint y);f(uint x)"
ethereum/solidity,test/libsolidity/semanticTests/freeFunctions/free_runtimecode.sol,test();f()
ethereum/solidity,test/libsolidity/syntaxTests/literals/hex_string_duplicate_underscore.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/events/double_event_declaration_ignores_anonymous.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/array/calldata_assign.sol,f(uint256[] calldata s)
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_and_need_both.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_not_really_recursive.sol,""
ethereum/solidity,test/libsolidity/semanticTests/types/assign_calldata_value_type.sol,f(uint256 x)
ethereum/solidity,test/libsolidity/syntaxTests/imports/shadowing_builtins_with_multiple_imports.sol,""
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/shift_constant_left_assignment.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/address/address_payable_memory_array_conversion.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/dataLocations/privateFunction/private_function_return_parameters_no_data_location.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/shadowing/contract.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/call_value_library_function.sol,value(function();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct/struct_unary_sub.sol,"f(S memory s1, S memory s2)"
ethereum/solidity,test/libsolidity/semanticTests/array/slices/array_slice_calldata_to_calldata.sol,"f(S[] calldata c);g(S[] calldata c, uint256 s, uint256 e)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/426_throw_is_deprecated.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/bug10821-while.sol,testFunc()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/storage_assignment_in_modifier.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/errors/selector.sol,""
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/shift_right_garbled_v2.sol,"f(uint8 a, uint8 b)"
ethereum/solidity,test/libsolidity/syntaxTests/memberLookup/failed_function_lookup.sol,"f(uint, uint);f(uint);g()"
ethereum/solidity,test/libsolidity/syntaxTests/array/concat/bytes_concat_empty_invalid.sol,g()
ethereum/solidity,test/libsolidity/semanticTests/functionCall/call_function_returning_nothing_via_pointer.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/reverting_call_free_function.sol,iWillRevert();test(bool _param)
ethereum/solidity,test/libsolidity/semanticTests/various/state_variable_local_variable_mixture.sol,a()
ethereum/solidity,test/libsolidity/syntaxTests/literals/hex_string_trailing_underscore.sol,f()
ethereum/solidity,test/libsolidity/constructor_inheritance_init_order_3.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/libraries/internal_library_function_bound_to_literal.sol,double(uint a);double(bytes memory a);doubleABC()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/getters/static_array.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/conversion/function_type_pure_view.sol,h();f()
ethereum/solidity,test/libsolidity/semanticTests/state/msg_value.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/257_using_for_by_name.sol,"mul(s storage self, uint x);f(uint a)"
ethereum/solidity,test/libsolidity/smtCheckerTests/external_calls/external_hash_known_code_state_unsafe.sol,f();setOwner(address _owner);f();inv()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/dirty_calldata_struct.sol,f(S calldata s)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/tuple_array_pop_2.sol,f()
ethereum/solidity,test/libsolidity/ASTJSON/assembly/switch.sol,f()
ethereum/solidity,test/libsolidity/ASTJSON/documentation_on_statements.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/imports/transitive.sol,"f(B.T memory y, B.A.S memory z)"
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/function_type_parameter.sol,f(function(uint)
ethereum/solidity,test/libsolidity/semanticTests/viaYul/detect_sub_overflow.sol,"f(uint a, uint b);g(uint8 a, uint8 b)"
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/call_internal_functions_fail.sol,f();g();h();i()
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/shift_right_negative_lvalue_int8.sol,"f(int8 a, uint8 b)"
ethereum/solidity,test/libsolidity/syntaxTests/natspec/invalid/invalid_tag.sol,f();g();h();i();j()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/333_fixed_point_casting_exponents_15.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/freeFunctions/free_fallback.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/302_invalid_fixed_type_long.sol,f()
ethereum/solidity,test/libsolidity/ASTJSON/placeholder_statement.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/tryCatch/catch_error_named.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/storage_nonslot.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/revertStrings/calldata_arrays_too_large.sol,"f(uint a, uint[] calldata b, uint c)"
ethereum/solidity,test/libsolidity/smtCheckerTests/special/msg_value_2.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/integer/basic.sol,basic()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/assignment_from_functiontype2.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/public_vars_multiple_explicit_override.sol,foo();foo()
ethereum/solidity,test/libsolidity/ABIJson/multiple_methods_order.sol,f(uint a);c(uint b)
ethereum/solidity,test/libsolidity/semanticTests/structs/struct_containing_bytes_copy_and_delete.sol,"set(uint _a, bytes calldata _data, uint _b);copy();del();test(uint256 i)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/443_named_return_parameter_with_explicit_return.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/scoping/name_pseudo_shadowing2.sol,e();f();e(int)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/220_struct_constructor.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/getter/simple_struct.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/while_loop_simple_1.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/iceRegressionTests/declarationUnaryTuple/declaration_inc_tuple.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/structs/recursive_struct_2.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/modifiers/modifier_abstract_override.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/static_array_implicit_push_3.sol,t()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/array_storage_index_boundary_test.sol,"test_boundary_check(uint256 len, uint256 access)"
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/push_as_lhs_struct.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array_static_index_access.sol,"f(uint256[3] calldata s);g(uint256[3][2] calldata s, uint256 which);h(uint8[3] calldata s);i(uint8[3][2] calldata s, uint256 which)"
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/array_pop_length_6.sol,g();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/base_contract_assertion_fail_4.sol,f();v();f();f();g();f();v()
ethereum/solidity,test/cmdlineTests/yul_optimizer_steps/input.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/math/addmod_mulmod_zero.sol,f(uint256 d);g(uint256 d);h()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/slice_bytes.sol,f(bytes calldata b)
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/compound_bitwise_string_literal_3.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/push/byte_array_push.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/immutable/assembly.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/ecrecover/ecrecover.sol,"a(bytes32 h, uint8 v, bytes32 r, bytes32 s)"
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/getters/uint.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/modifier_pre_access.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/always_revert.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/division_7.sol,"div(uint256 a, uint256 b)"
ethereum/solidity,test/libsolidity/syntaxTests/types/function_types/function_parameter_return_types_success.sol,"string_to_string(string memory x);string_string_to_string(string memory x, string memory y);tests()"
ethereum/solidity,test/libsolidity/semanticTests/storage/accessors_mapping_for_array.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/abi/abi_encode_with_sig_string_literal.sol,abiEncodeStringLiteral(string memory sig)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/143_no_spurious_identifier_suggestions_with_submatch.sol,g()
ethereum/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_directly_recursive_dynamic_array.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/array/length/constant_var.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy_diamond_empty_middle.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/array/slice/member_access.sol,f(uint[] calldata x)
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/storage_reference.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/immutable/selector_function_name.sol,selector()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/unary_add_mapping.sol,f(uint x)
ethereum/solidity,test/libsolidity/semanticTests/errors/using_structs.sol,f(bool c)
ethereum/solidity,test/libsolidity/syntaxTests/metaTypes/name_other_contract.sol,f();g();h();f();f();f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/077_fallback_function_with_return_parameters.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/variableDeclaration/else.sol,f(uint x)
ethereum/solidity,test/libsolidity/semanticTests/functionCall/inheritance/super_skip_unimplemented_in_abstract_contract.sol,f();f();f()
ethereum/solidity,test/libsolidity/syntaxTests/dataLocations/publicFunction/function_argument_location_specifier_test_public_memory.sol,f(bytes memory)
ethereum/solidity,test/libsolidity/syntaxTests/immutable/increment.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/inline_assembly/assembly_local_storage_pointer.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/address/bytes_long_to_payable_address.sol,f(bytes32 x)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/477_too_large_arrays_for_calldata_internal.sol,f(uint[85678901234] memory a)
ethereum/solidity,test/libsolidity/semanticTests/types/mapping_contract_key_library.sol,"get(mapping(A => uint8);set(mapping(A => uint8);get(A k);set(A k, uint8 v)"
ethereum/solidity,test/libsolidity/syntaxTests/natspec/invalid/docstring_named_return_param_mismatch.sol,vote(uint id)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/284_conditional_expression_with_different_struct.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/487_function_types_selector_4.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/division_truncates_correctly_1.sol,"f(uint x, uint y)"
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/while_loop_simple_2.sol,f(uint x)
ethereum/solidity,test/libsolidity/smtCheckerTests/try_catch/try_inside_while.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/contractTypeType/members/struct_enum.sol,""
ethereum/solidity,test/libsolidity/semanticTests/array/pop/byte_array_pop_copy_long.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/060_complex_inheritance.sol,f();f();g();f()
ethereum/solidity,test/libsolidity/syntaxTests/unchecked/unchecked_for_header.sol,f()
ethereum/solidity,test/libsolidity/gasTests/dispatch_medium.sol,""
ethereum/solidity,test/libsolidity/semanticTests/array/copying/calldata_bytes_to_storage.sol,f(bytes calldata data)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/204_overwrite_memory_location_external.sol,f(uint[] memory a)
ethereum/solidity,test/libsolidity/syntaxTests/types/contractTypeType/members/assign_function_via_base_name_to_var.sol,f();g();h()
ethereum/solidity,test/libsolidity/syntaxTests/imports/name_clash_in_import_struct_contract_3.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/storage_reference_assignment_statevar.sol,""
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV1/abi_encode_calldata_slice.sol,"enc_packed_bytes(bytes calldata data, uint256 start, uint256 end);enc_packed_bytes_reference(bytes calldata data, uint256 start, uint256 end);enc_bytes(bytes calldata data, uint256 start, uint256 end);enc_bytes_reference(bytes calldata data, uint256 start, uint256 end);compare(bytes memory x, bytes memory y);test_bytes()"
ethereum/solidity,test/libsolidity/syntaxTests/conversion/function_type_view_payable.sol,h();f()
ethereum/solidity,test/libsolidity/syntaxTests/natspec/invalid/return_param_amount_differs2.sol,value(uint256 v)
ethereum/solidity,test/libsolidity/syntaxTests/constructor/inconstructible_internal_constructor_inverted.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/division_2.sol,"f(uint x, uint y)"
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/constructor_state_variable_init_function_call.sol,f(uint y)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/357_payable_private.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/assembly/switch_only_default_warn.sol,f(uint256 a)
ethereum/solidity,test/libsolidity/syntaxTests/multiSource/warning_in_both.sol,g(uint256 x);f(uint256 x)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/301_library_instances_cannot_be_used.sol,l();f()
ethereum/solidity,test/libsolidity/syntaxTests/errors/weird1.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/conversion/not_allowed_conversion_to_int_array_pointer1.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/library_function_selector.sol,f(uint256);g(uint256[] storage);h(uint256[] memory);f()
ethereum/solidity,test/libsolidity/syntaxTests/types/address/address_members.sol,f();g();h();i();j()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/097_access_to_internal_function.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_interface.sol,test();test()
ethereum/solidity,test/libsolidity/syntaxTests/modifiers/function_modifier_double_invocation.sol,f(uint x)
ethereum/solidity,test/libsolidity/semanticTests/viaYul/calldata_bytes_array_bounds.sol,"f(bytes[] calldata a, uint256 i)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/531_tuple_invalid_literal_too_large_unassigned.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/inheritance/inherited_function_calldata_memory.sol,f(uint256[] calldata a);f(uint256[] memory a);g()
ethereum/solidity,test/libsolidity/semanticTests/types/convert_fixed_bytes_to_uint_greater_size.sol,bytesToUint(bytes4 s)
ethereum/solidity,test/libsolidity/semanticTests/functionCall/mapping_internal_argument.sol,"set_internal(mapping(uint8 => uint8);set(uint8 key, uint8 value_a, uint8 value_b);get(uint8 key)"
ethereum/solidity,test/libsolidity/syntaxTests/parsing/modifier.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_indirectly_recursive_complex.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/natspec/unsafe_assert_remains_unsafe.sol,g(uint _x)
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/shifts/shift_right_negative_lvalue.sol,"f(int256 a, uint256 b);t()"
ethereum/solidity,test/libsolidity/semanticTests/externalSource/multisource.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/immutable/private_state_var.sol,f();readX();f()
ethereum/solidity,test/libsolidity/semanticTests/inheritance/super_in_constructor.sol,f();f();f();f()
ethereum/solidity,test/libsolidity/semanticTests/array/delete/delete_storage_array.sol,len();val()
ethereum/solidity,test/libsolidity/syntaxTests/multiSource/alias_shadows_another_alias.sol,f();g();foo()
ethereum/solidity,test/libsolidity/syntaxTests/types/integer_implicit_err.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/storage_reference_on_memory.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/indexing/array_negative_index.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/array_copy_storage_abi_signed.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/functionCalls/new_with_calloptions_unsupported.sol,foo()
ethereum/solidity,test/libsolidity/semanticTests/inlineAssembly/inline_assembly_in_modifiers.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/calldata/calldata_internal_multi_array.sol,"g(uint[][2] calldata s);f(uint, uint[][2] calldata s, uint);g()"
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/constructor_state_variable_init.sol,""
ethereum/solidity,test/libsolidity/semanticTests/inheritance/address_overload_resolution.sol,balance();transfer(uint256 amount);f();g()
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/v1_call_to_v2_library_function_accepting_storage_struct.sol,get(Item storage _item);foo()
ethereum/solidity,test/libsolidity/syntaxTests/constructor/external_constructor.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/types/tuple_single_non_tuple_element.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/bytesNN_index_assign.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/inline_assembly/empty.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/401_does_not_warn_msg_value_in_modifier_following_non_payable_public_function.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/blockchain_state/decreasing_balance.sol,"f(address payable a, uint x);inv()"
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array_struct_dynamic.sol,f(S[] calldata s);g(S[] calldata s)
ethereum/solidity,test/libsolidity/semanticTests/types/mapping_contract_key_getter.sol,"set(A k, uint8 v);get(A k)"
ethereum/solidity,test/libsolidity/syntaxTests/memberLookup/member_not_unique.sol,a(uint256);a(uint8);f();g()
ethereum/solidity,test/libsolidity/semanticTests/modifiers/function_modifier_multi_with_return.sol,f(bool twice)
ethereum/solidity,test/libsolidity/syntaxTests/types/bytes32_to_uint32.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/string/invalid_utf8_implicit_string.sol,""
ethereum/solidity,test/libsolidity/semanticTests/calldata/calldata_internal_multi_fixed_array.sol,"g(uint[3][2] calldata s);f(uint, uint[3][2] calldata s, uint);g()"
ethereum/solidity,test/libsolidity/ASTJSON/function_type.sol,f(function()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/public_var_missing_override.sol,foo();foo()
ethereum/solidity,test/libsolidity/semanticTests/dirty_calldata_bytes.sol,f(bytes calldata b)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_literal_2.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/types/mapping_enum_key_library_v1.sol,"get(mapping(E => uint8);set(mapping(E => uint8);get(E k);set(E k, uint8 v)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/198_integer_boolean_not.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/division_6.sol,"mul(uint8 a, uint8 b)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/495_builtin_ripemd160_reject_gas.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/tuple_array_pop_1.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/array/invalidCopy/storage_to_storage_static_longer_to_shorter.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/array/length/cannot_be_function.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/internal_call_with_assertion_1_fail.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/revertStrings/calldata_array_dynamic_static_short_reencode.sol,f(uint256[][2][] calldata x);g(uint256[][2][] calldata x)
ethereum/solidity,test/libsolidity/semanticTests/tryCatch/simple.sol,g(bool b);f(bool flag)
ethereum/solidity,test/libsolidity/syntaxTests/multiSource/import_contract_function_error.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/array/array_pop.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/multiline_comments.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/bmc_coverage/try_multiple_returned_values_with_tuple.sol,g();f()
ethereum/solidity,test/libsolidity/syntaxTests/array/concat/bytes_concat_on_type_info.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/local_address_assignment.sol,f(address a)
ethereum/solidity,test/libsolidity/syntaxTests/types/contractTypeType/members/modifier_base.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_two_invocations.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/fallback/falback_return.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/creation_view_fail.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/functions_identity_2.sol,h(uint x);k(uint x);g()
ethereum/solidity,test/libsolidity/syntaxTests/types/address/contract_type_to_address.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/smoke/basic.sol,"d();e();f(uint a);g();h(uint x, uint y);i(bool b);j(bytes32 b);k();l(uint a)"
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/push_2d_arg_1_unsafe.sol,"f(uint[] memory x, uint y)"
ethereum/solidity,test/libsolidity/smtCheckerTests/try_catch/try_multiple_catch_clauses.sol,g();f()
ethereum/solidity,test/libsolidity/syntaxTests/types/rational_number_exp_limit_fine.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_aliasing_memory_2.sol,"p();f(uint[] memory a, uint[] memory b)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/210_uninitialized_mapping_variable.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/literalOperations/mod_zero.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/types/uint256_to_bytes1.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/errors/no_structs_in_abiv1.sol,""
ethereum/solidity,test/libsolidity/semanticTests/inlineAssembly/slot_access.sol,data();set(uint x);get()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/functions_trivial_condition_for_only_call.sol,f(bool x);g()
ethereum/solidity,test/libsolidity/semanticTests/externalContracts/_stringutils/stringutils.sol,"memcpy(uint dest, uint src, uint len);toSlice(string memory self);len(bytes32 self);copy(slice memory self);toString(slice memory self);len(slice memory self);empty(slice memory self);compare(slice memory self, slice memory other);equals(slice memory self, slice memory other);nextRune(slice memory self, slice memory rune);nextRune(slice memory self);ord(slice memory self);keccak(slice memory self);startsWith(slice memory self, slice memory needle);beyond(slice memory self, slice memory needle);endsWith(slice memory self, slice memory needle);until(slice memory self, slice memory needle);findPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);rfindPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);find(slice memory self, slice memory needle);rfind(slice memory self, slice memory needle);split(slice memory self, slice memory needle, slice memory token);split(slice memory self, slice memory needle);rsplit(slice memory self, slice memory needle, slice memory token);rsplit(slice memory self, slice memory needle);count(slice memory self, slice memory needle);contains(slice memory self, slice memory needle);concat(slice memory self, slice memory other);join(slice memory self, slice[] memory parts)"
ethereum/solidity,test/libsolidity/semanticTests/functionCall/value_test.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/structs/struct_delete_storage_with_arrays_small.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/external_calls/external_hash_known_code_state_reentrancy.sol,f();f();g()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/130_enum_implicit_conversion_is_not_okay_256.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/fallback/no_input_no_output.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/307_rational_unary_minus_operation.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/storage_value_vars_4.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/constructor/nonabiv2_type.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/events/double_event_declaration.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/tryCatch/no_catch.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/279_break_not_in_loop.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/multiSource/alias_shadows_function.sol,f();g();foo()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/diamond_interface_intermediate_public_state_variable_and_function_implemented.sol,f();f()
ethereum/solidity,test/libsolidity/semanticTests/cleanup/bool_conversion_v2.sol,f(bool _b);g(bool _in)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/116_shift_warn_literal_base_1.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct/struct_delete_storage.sol,g(S memory s2);f(S memory s2)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/542_warn_about_address_members_on_contract_transfer.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/581_improve_name_suggestion_three_letters.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/157_array_of_undeclared_type.sol,""
ethereum/solidity,test/libsolidity/semanticTests/cleanup/cleanup_address_types_v2.sol,f(address a);g(address payable a)
ethereum/solidity,test/libsolidity/semanticTests/array/copying/array_copy_calldata_storage.sol,"store(uint[9] calldata a, uint8[3][] calldata b);retrieve()"
ethereum/solidity,test/libsolidity/syntaxTests/parsing/fallback_function.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/metaTypes/typeNotRegularIdentifierFunction.sol,type()
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/while_loop_array_assignment_memory_storage.sol,"p();testUnboundedForLoop(uint n, uint[] memory b, uint[] memory c)"
ethereum/solidity,test/libsolidity/syntaxTests/dataLocations/externalFunction/function_argument_location_specifier_test_external_storage.sol,f(bytes storage)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/057_legal_override_direct.sol,f();f(uint i)
ethereum/solidity,test/libsolidity/semanticTests/viaYul/conditional/conditional_with_assignment.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/for_err.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/inheritance/derived_overload_base_function_direct.sol,f();f(uint256 i);g()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/getters/mapping_with_cast.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/tryCatch/empty_catch.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/inline_array_empty_cells_check_without_lvalue.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/function_selector/homer.sol,supportsInterface(bytes4 interfaceID);skinColor();achieveWorldPeace();supportsInterface(bytes4 interfaceID);skinColor();check()
ethereum/solidity,test/libsolidity/semanticTests/events/event_indexed_function.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/v1_call_to_v2_contract_function_accepting_struct_via_named_argument.sol,"set(uint _x, string memory _y, Item memory _item, bool _z);foo()"
ethereum/solidity,test/libsolidity/syntaxTests/bound/bound_calldata.sol,f(bytes calldata);f(bytes memory _x)
ethereum/solidity,test/libsolidity/semanticTests/externalSource/source_import_subdir.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/file_level/enum.sol,allocate(bool b);f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/for_loop_single_stmt_body.sol,fun(uint256 a)
ethereum/solidity,test/libsolidity/syntaxTests/types/var_type_invalid_rational.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/memory_dyn_2d_bytes_to_storage.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/299_invalid_fixed_types_long_invalid_identifier.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/imports/name_clash_in_import_2.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/function_call_does_not_clear_local_vars.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/modifiers/empty_modifier_body.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/external_function_type_to_address_payable.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/local_storage_variables.sol,f();g();i();h()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/variable_definition_in_mapping.sol,fun()
ethereum/solidity,test/libsolidity/smtCheckerTests/external_calls/internal_library_external_call_3.sol,i();f(I _i);g(I _i);s();g(I _i)
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/modifier_order_fail.sol,f()
ethereum/solidity,test/libsolidity/ASTJSON/using_for_directive.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/delete_array_2d.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/structs/memory_struct_named_constructor.sol,s()
ethereum/solidity,test/libsolidity/semanticTests/inlineAssembly/keccak_yul_optimization.sol,g();f()
ethereum/solidity,test/libsolidity/syntaxTests/dataLocations/function_type_array_as_reference_type.sol,b(function(Nested memory);c(function(Nested memory);d(function(Nested memory)
ethereum/solidity,test/libsolidity/semanticTests/viaYul/conversion/implicit_cast_assignment.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/functionCalls/invalid_named_arguments_conditional.sol,"g(int x, int y);h(int y, int x);f()"
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/modifier_ambiguous.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/diamond_interface_intermediate_public_state_variable_and_function.sol,f();f()
ethereum/solidity,test/libsolidity/syntaxTests/events/event_nested_array_v2.sol,""
ethereum/solidity,test/libsolidity/semanticTests/inlineAssembly/keccak256_optimizer_bug_different_memory_location.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/array/length/not_convertible_to_integer.sol,""
ethereum/solidity,test/libsolidity/semanticTests/events/event_lots_of_data.sol,deposit(bytes32 _id)
ethereum/solidity,test/libsolidity/syntaxTests/tryCatch/error_with_wrong_type.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/memberLookup/memory_structs_with_mapping_array_struct_array.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/bytes256.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/unimplemented_without_virtual.sol,f()
ethereum/solidity,test/libsolidity/ASTJSON/inheritance_specifier.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/types/rational_number_literal_to_fixed_implicit.sol,literalToUFixed();literalToFixed()
ethereum/solidity,test/libsolidity/syntaxTests/iceRegressionTests/large_array_in_memory_struct.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/056_cyclic_inheritance.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/leave_outside_function.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/overriding_no_restrict_warning.sol,f();f()
ethereum/solidity,test/libsolidity/semanticTests/arithmetics/check_var_init.sol,f();g()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/mapping_2d_1.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/176_overloaded_function_cannot_resolve.sol,f();f(uint a);g()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/320_invalid_array_declaration_with_unsigned_fixed_type.sol,f()
ethereum/solidity,test/libsolidity/gasTests/dispatch_large.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/special/abi_decode_memory_v2_value_types.sol,f(bytes memory data)
ethereum/solidity,test/libsolidity/semanticTests/array/indexAccess/bytes_index_access_memory.sol,"f(bytes memory _s1, uint i1, uint i2, uint i3);intern(bytes memory _s1, uint i);internIndirect(bytes memory _s1)"
ethereum/solidity,test/compilationTests/gnosis/Oracles/UltimateOracle.sol,"setForwardedOutcome();challengeOutcome(int _outcome);voteForOutcome(int _outcome, uint amount);withdraw();isChallengePeriodOver();isFrontRunnerPeriodOver();isChallenged();isOutcomeSet();getOutcome()"
ethereum/solidity,test/libsolidity/syntaxTests/structs/calldata_assign.sol,f(S calldata s)
ethereum/solidity,test/libsolidity/syntaxTests/array/length/parameter_too_large_multidim.sol,f(bytes32[1263941234127518272][500] memory);f(uint[2**30][] memory);f(uint[2**30][2**30][] memory);f(uint[2**16][2**16][] memory)
ethereum/solidity,test/libsolidity/semanticTests/array/pop/byte_array_pop_masking_long.sol,test()
ethereum/solidity,test/libsolidity/semanticTests/libraries/internal_library_function_bound_to_storage_string.sol,f(string memory a);g(string storage a);test(string calldata x)
ethereum/solidity,test/cmdlineTests/error_codes/input.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/freeFunctions/import.sol,"set(S storage a, uint v);f(uint v)"
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/functions_trivial_condition_while.sol,f(bool x)
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_data_location_function_param_internal.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_with_return/nested_if.sol,"test(uint256 a, uint256 b);nested_if(uint256 a, uint256 b)"
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/ambiguous_base_functions_overridden_in_intermediate_base_unimplemented.sol,f();f();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct/struct_array_struct_array_memory_unsafe_1.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/operators/compound_assign.sol,"f(uint x, uint y)"
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array_dynamic_static_dynamic.sol,f(uint8[][1][] calldata s);reenc_f(uint8[][1][] calldata s);g();h();i();j()
ethereum/solidity,test/libsolidity/syntaxTests/memberLookup/contract_not_payable_transfer.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/enums/enum_explicit_overflow_homestead.sol,getChoiceExp(uint256 x);getChoiceFromSigned(int256 x);getChoiceFromMax()
ethereum/solidity,test/libsolidity/syntaxTests/conversion/implicit_conversion_from_storage_array_ref.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/scoping/scoping.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/memberLookup/msg_sender_non_payable_send.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/missing_argument_in_named_args.sol,"a(uint a, uint b, uint c);b()"
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/gas_with_call_nonpayable.sol,f(address a);h();i()
ethereum/solidity,test/libsolidity/gasTests/data_storage.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/special/msg_data.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/trailing_dot1.sol,""
ethereum/solidity,test/cmdlineTests/function_debug_info_via_yul/input.sol,f(uint[] calldata x);g()
ethereum/solidity,test/libsolidity/syntaxTests/constructor/constructor_state_mutability.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/constant_bytes_ref.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/multiSource/circular_import.sol,f();f();foo()
ethereum/solidity,test/cmdlineTests/name_simplifier/input.sol,sumArray(S[] memory _s)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/tuple_extra_parens_6.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/while_loop_simple_5.sol,"f(uint x, uint y)"
ethereum/solidity,test/libsolidity/syntaxTests/metaTypes/typeRecursive.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/various/value_complex.sol,getBalance();sendAmount(uint256 amount)
ethereum/solidity,test/libsolidity/smtCheckerTests/overflow/overflow_constant_bound.sol,deposit()
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_or_touched_function.sol,g(bool _b);f()
ethereum/solidity,test/libsolidity/semanticTests/tryCatch/trivial.sol,g(bool x);f(bool x)
ethereum/solidity,test/libsolidity/syntaxTests/events/event_library_function.sol,f();g();f();k()
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/cleanup/uintx.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_assert_condition_2.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/empty_fun_arg_end.sol,"f();f(a, b)"
ethereum/solidity,test/libsolidity/syntaxTests/immutable/inheritance_virtual_modifiers.sol,f(uint a)
ethereum/solidity,test/libsolidity/semanticTests/constructor/constructor_static_array_argument.sol,""
ethereum/solidity,test/libsolidity/semanticTests/multiSource/import.sol,g(uint256 x);f(uint256 x)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/mapping_1.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/calldata_memory_interface_instantiate.sol,f(uint[] calldata);f(uint[] memory);f()
ethereum/solidity,test/libsolidity/smtCheckerTests/simple/smoke_test.sol,""
ethereum/solidity,test/libsolidity/semanticTests/cleanup/exp_cleanup_smaller_base.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/libraries/library_function_selectors_struct.sol,f(S storage s);g(S memory m);f();g()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/321_rational_to_bytes_implicit_conversion.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/immutable/ctor_initialization_tuple.sol,f()
ethereum/solidity,test/compilationTests/gnosis/Oracles/UltimateOracleFactory.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/abstract/unimplemented_functions.sol,a()
ethereum/solidity,test/libsolidity/smtCheckerTests/overflow/unsigned_guard_sub_overflow.sol,"f(uint x, uint y)"
ethereum/solidity,test/libsolidity/semanticTests/externalSource/_external/subdir/sub_external.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/v1_accessing_public_state_variable_via_v1_type.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/168_assignment_to_const_var_involving_conversion.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/compound_assignment_division_3.sol,"f(uint x, uint p)"
ethereum/solidity,test/libsolidity/semanticTests/functionCall/inheritance/super_skip_unimplemented_in_interface.sol,f();f();f()
ethereum/solidity,test/libsolidity/semanticTests/isoltestTesting/storage/storage_nonempty.sol,set(uint256 _a)
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/external_functions_taking_internal_types_struct_with_array_of_function_types.sol,f(S memory)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/203_struct_reference_compare_operators.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct/struct_constructor_recursive_1.sol,func()
ethereum/solidity,test/libsolidity/semanticTests/various/super_alone.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/various/code_access_padding.sol,f();diff()
ethereum/solidity,test/libsolidity/semanticTests/structs/conversion/recursive_storage_memory_complex.sol,"countData(Tree memory tree);copyFromTree(Tree memory tree, uint256[] memory data, uint256 offset);run()"
ethereum/solidity,test/libsolidity/ABIJson/structs_and_arrays.sol,"f(string calldata a, bytes calldata b, uint[] calldata c)"
ethereum/solidity,test/libsolidity/syntaxTests/immutable/reading_after_initialization.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/smoke/structs.sol,s();t()
ethereum/solidity,test/libsolidity/syntaxTests/array/length/cannot_be_function_call.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/specialFunctions/abidecode/abi_decode_memory_v2.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/reusing_memory.sol,f(uint256 x);g(uint256 a)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/286_conditional_expression_with_different_enum.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_or_touched.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/imports/shadowing_builtins_with_alias.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/types/tuple_different_count_assignment_2.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/natspec/natspec_smtchecker_error_1.sol,f(uint x)
ethereum/solidity,test/libsolidity/semanticTests/getters/struct_with_bytes_simple.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/natspec/invalid/docstring_inheritdoc.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/inlineAssembly/inline_assembly_switch.sol,f(uint256 a)
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV1/enums.sol,f(E e)
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV1/abi_decode_v2_calldata.sol,f(bytes calldata data)
ethereum/solidity,test/libsolidity/syntaxTests/array/no_array_pop.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/memberLookup/msg_sender_non_payable_transfer.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/length_1d_assignment_2d_storage_to_storage.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/localStorageVariables/ternary_declaration_fine.sol,f(bool flag);g(bool flag);h(bool flag)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/345_unused_return_value.sol,g();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy_diamond_2.sol,""
ethereum/solidity,test/libsolidity/ASTJSON/smoke.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/constructor_hierarchy_base_calls_inheritance_specifier_1.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/multiSource/import.sol,g(uint256 x);f(uint256 x)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct/struct_constructor_recursive_2.sol,func()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_base_base.sol,foo();foo();foo();foo();foo()
ethereum/solidity,test/libsolidity/semanticTests/modifiers/return_in_modifier.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/470_specified_storage_no_warn.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/natspec/abstract_function_nondet_1.sol,f(uint x);g(uint y)
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/fallback_receive/fallback_without_override_intermediate.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/550_warn_about_address_members_on_non_this_contract_call.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/functionCall/call_function_returning_function.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/259_using_for_not_used.sol,double(uint self);f(uint16 a)
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_and_fail.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/141_multiple_scopes_suggestions.sol,g()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/344_one_divided_by_three_integer_conversion.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/compound_add_array_index.sol,"q();f(uint x, uint p)"
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/bug10821-for.sol,testFunc()
ethereum/solidity,test/libsolidity/semanticTests/various/code_access_runtime.sol,f();test()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/localStorageVariables/assembly/returning_function_declaration.sol,f();f()
ethereum/solidity,test/libsolidity/syntaxTests/abstract/unimplemented_functions_inherited.sol,a()
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/push_push_no_args_1.sol,l()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/029_create_abstract_contract.sol,foo();foo()
ethereum/solidity,test/libsolidity/smtCheckerTests/overflow/underflow_sub.sol,f(uint8 x)
ethereum/solidity,test/libsolidity/semanticTests/array/copying/array_copy_storage_to_memory.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/revert_fine.sol,f();g(bool flag)
ethereum/solidity,test/libsolidity/semanticTests/structs/event.sol,o();f()
ethereum/solidity,test/libsolidity/syntaxTests/license/license_bidi_marks.sol,""
ethereum/solidity,test/libsolidity/semanticTests/builtinFunctions/msg_sig_after_internal_call_is_same.sol,boo();foo(uint256 a)
ethereum/solidity,test/libsolidity/syntaxTests/types/function_call_fail2.sol,f(uint y)
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/empty_fun_arg_beginning.sol,"f();f(a, b)"
ethereum/solidity,test/libsolidity/semanticTests/enums/constructing_enums_from_ints.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/imports/inheritance_abi_encoder_match.sol,f(S memory _s)
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/assembly/revert.sol,f(uint256 y);g(uint256 y)
ethereum/solidity,test/libsolidity/smtCheckerTests/overflow/overflow_sum.sol,f(uint8 x)
ethereum/solidity,test/libsolidity/semanticTests/externalContracts/_prbmath/PRBMathSD59x18.sol,"abs(int256 x);avg(int256 x, int256 y);ceil(int256 x);div(int256 x, int256 y);e();exp(int256 x);floor(int256 x);frac(int256 x);gm(int256 x, int256 y);inv(int256 x);ln(int256 x);mul(int256 x, int256 y);pi();pow(int256 x, uint256 y);scale();sqrt(int256 x)"
ethereum/solidity,test/libsolidity/semanticTests/array/arrays_complex_from_and_to_storage.sol,set(uint24[3][] memory _data);get()
ethereum/solidity,test/libsolidity/semanticTests/constants/function_unreferenced.sol,g();f()
ethereum/solidity,test/libsolidity/syntaxTests/signed_rational_modulus.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/functions_identity_1.sol,h(uint x);g()
ethereum/solidity,test/libsolidity/syntaxTests/modifiers/multiple_inheritance_unimplemented_override.sol,f()
ethereum/solidity,test/libsolidity/ASTJSON/short_type_name_ref.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/structs/recursion/recursive_struct_as_contract_function_parameter.sol,f(MyStructName memory s)
ethereum/solidity,test/libsolidity/syntaxTests/parsing/mapping_nonelementary_key_4.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/functionCalls/staticcall_on_homestead.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/functionCall/inheritance/call_base_explicit.sol,f(uint n);g(uint n)
ethereum/solidity,test/libsolidity/syntaxTests/types/contractTypeType/members/assign_function_via_contract_name_to_var.sol,f();g();h()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/unary_add_minus_overflow_detected.sol,inc_pre();dec_pre();inc_post();dec_post()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/storage_memory_nested_bytes.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/bool_out_of_bounds.sol,f(bool b)
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/array_pop_length_5.sol,g();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/try_catch/try_new.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/immutable/multiple_initializations.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/length_1d_mapping_array_1.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/copy_removes_bytes_data.sol,set();reset()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/type_minmax.sol,f(uint a);int_min();int_max();uint_min();uint_max()
ethereum/solidity,test/libsolidity/semanticTests/revertStrings/function_entry_checks_v1.sol,t(uint)
ethereum/solidity,test/libsolidity/syntaxTests/natspec/docstring_non_public_state_variable_with_return.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/bmc_coverage/timestamp.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/cleanup/bytesx.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/scoping/name_shadowing_function_parameter_vs_struct_enum.sol,"f(StructType memory StructType);g(EnumType EnumType);h(EnumType StructType, StructType memory EnumType);z(EnumType e)"
ethereum/solidity,test/libsolidity/syntaxTests/fallback/payable_fallback_without_receive_empty.sol,""
ethereum/solidity,test/libsolidity/semanticTests/array/push/push_no_args_1d.sol,f();lv(uint value);a(uint index);l()
ethereum/solidity,test/libsolidity/syntaxTests/imports/library_name_clash_with_contract.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/overloaded_external_functions_taking_different_structs.sol,f(S1 memory);f(S2 memory)
ethereum/solidity,test/libsolidity/smtCheckerTests/file_level/free_constant_1.sol,f(uint x)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct/struct_recursive_indirect_1.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/label_disallowed.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/c99_scoping_activation.sol,f();g();h();i()
ethereum/solidity,test/libsolidity/syntaxTests/imports/name_clash_in_import_struct_contract_4.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/fallback/return_value_unsupported.sol,""
ethereum/solidity,test/libsolidity/semanticTests/fallback/fallback_return_data.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/fallback_receive/receive_without_override_intermediate.sol,""
ethereum/solidity,test/libsolidity/ASTJSON/abstract_contract.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/metaTypes/typeNotRegularIdentifierContractName.sol,""
ethereum/solidity,test/libsolidity/semanticTests/smoke/alignment.sol,"internalStateDecimal();update(bool _bool, uint256 _decimal, bytes32 _bytes)"
ethereum/solidity,test/libsolidity/syntaxTests/array/length/parameter_too_large.sol,f(bytes32[1263941234127518272] memory)
ethereum/solidity,test/libsolidity/syntaxTests/functionCalls/invalid_expressions_with_calloptions2.sol,foo(int a)
ethereum/solidity,test/libsolidity/smtCheckerTests/out_of_bounds/array_3.sol,r(uint i)
ethereum/solidity,test/libsolidity/syntaxTests/types/address/address_tuple_fail.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/128_enum_explicit_conversion_is_okay.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/more_than_256_declarationerrors.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/shadowing/qualified_names.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/scoping/double_function_declaration.sol,fun();fun()
ethereum/solidity,test/libsolidity/syntaxTests/array/slice/bytes_storage.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_with_return/simple_if2.sol,test(uint256 a);simple_if(uint256 a)
ethereum/solidity,test/libsolidity/semanticTests/calldata/calldata_bytes_external.sol,test(bytes calldata x);tester(bytes calldata x)
ethereum/solidity,test/libsolidity/semanticTests/array/short_fixed_array_cleanup.sol,fill();clear()
ethereum/solidity,test/libsolidity/syntaxTests/types/contractTypeType/members/function_selector_via_contract_name.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/functionTypes/selector_2.sol,ext();pub();test()
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/push_2d_arg_1_safe.sol,"f(uint[] memory x, uint y)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/346_unused_return_value_send.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/conversion/implicit_conversion_of_super_in_comparison.sol,foo()
ethereum/solidity,test/libsolidity/syntaxTests/functionCalls/msg_value_non_payable.sol,get()
ethereum/solidity,test/libsolidity/semanticTests/storage/packed_functions.sol,set();g();h()
ethereum/solidity,test/libsolidity/syntaxTests/inline_arrays/inline_array_declaration_const_string_conversion.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/largeTypes/large_storage_structs.sol,""
ethereum/solidity,test/libsolidity/gasTests/abiv2.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/constructor/nonabiv2_type_abstract.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/parsing/multiple_function_param_trailing_comma.sol,""
ethereum/solidity,test/libsolidity/ASTJSON/assembly/nested_functions.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/fallback/fallback_wrong_data_location.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/structs/recursion/parallel_structs.sol,addTestStruct(TestStruct memory)
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/function_call_named_arguments.sol,"l(uint x, uint y);f(uint u, uint s, bool b);call()"
ethereum/solidity,test/libsolidity/semanticTests/calldata/calldata_struct_cleaning.sol,f(S calldata s)
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_merge_variables_1.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/receiveEther/return_value.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/169_assignment_to_const_var_involving_expression.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/overflow/overflow_mul_cex_with_array.sol,"f(bytes calldata x, uint y)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/263_create_memory_arrays.sol,f(uint size)
ethereum/solidity,test/libsolidity/syntaxTests/constructor/constructor_internal_function.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/500_gasleft_shadowing_1.sol,gasleft();f()
ethereum/solidity,test/libsolidity/syntaxTests/multiSource/one_source.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/functions_identity_1_fail.sol,h(uint x);g()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/localStorageVariables/tuple_declaration_fine.sol,f();g();h()
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/pop_loop_unsafe.sol,f(uint l)
ethereum/solidity,test/libsolidity/syntaxTests/modifiers/empty_modifier_err.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/metaTypes/typeNotRegularIdentifierVariable.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/219_memory_arrays_not_resizeable.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/state/gasleft.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/modifiers/modifiers_on_abstract_functions_no_parser_error.sol,foo();bar()
ethereum/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/multiVariableDeclarationThatIsExpression.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/fixed_bytes_length_access.sol,f(bytes32 x)
ethereum/solidity,test/libsolidity/syntaxTests/structs/address_member_access.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/imports/inheritance_abi_encoder_mismatch_1.sol,f(S memory _s)
ethereum/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_multi.sol,f();g(uint _x)
ethereum/solidity,test/compilationTests/gnosis/Events/ScalarEvent.sol,redeemWinnings();getEventHash()
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/shift_left.sol,"f(uint256 a, uint256 b)"
ethereum/solidity,test/libsolidity/semanticTests/libraries/internal_library_function_calling_private.sol,g(uint256[] memory _data);f(uint256[] memory _data);f()
ethereum/solidity,test/libsolidity/semanticTests/array/calldata_array_dynamic_invalid.sol,f(uint256[][] calldata a);g(uint256[][] calldata a)
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/memory_struct_recursive.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/events/event_overload_named_arguments_in_any_order.sol,call()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/055_inheritance_diamond_basic.sol,rootFunction();f();f();g();f()
ethereum/solidity,test/libsolidity/syntaxTests/immutable/runtimeCodeInheritance.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/call_option_value_on_library_function.sol,l();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/constructor_hierarchy_base_calls_with_side_effects_2.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/types/convert_uint_to_fixed_bytes_same_size.sol,uintToBytes(uint256 h)
ethereum/solidity,test/libsolidity/semanticTests/viaYul/array_storage_push_pop.sol,set_get_length(uint256 len)
ethereum/solidity,test/libsolidity/semanticTests/functionTypes/function_type_library_internal.sol,"sum(uint256 a, uint256 b);f(uint256[] memory x)"
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct/struct_temporary.sol,test()
ethereum/solidity,test/libsolidity/semanticTests/libraries/library_delegatecall_guard_pure.sol,f(uint256[] storage x);f();g();h()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/288_conditional_with_all_types.sol,fun_x();fun_y();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/fixed_bytes_access_7.sol,f(uint i)
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/assignment_from_library.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/add_view.sol,f();f()
ethereum/solidity,tools/solidityUpgrade/contracts/DocsExamplePass.sol,run();update();run();upgrade();Source();run();update();upgrade()
ethereum/solidity,test/libsolidity/syntaxTests/natspec/docstring_named_return_parameter.sol,vote()
ethereum/solidity,test/libsolidity/syntaxTests/scoping/access_in_assignment_dynamic_array.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/array_of_structs_containing_arrays_memory_to_storage.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/array_pop_length_1.sol,f()
ethereum/solidity,test/libsolidity/ASTJSON/documentation_triple.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/function_types/selector/state_variable_selector_not_pure.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/push_storage_ref_unsafe_length.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/297_library_functions_do_not_have_value.sol,l();f()
ethereum/solidity,test/libsolidity/syntaxTests/types/contractTypeType/members/function_selector_via_interface_name.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/natspec/invalid/docstring_parameter.sol,"f(uint256 _5value, uint256 _value, uint256 value)"
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/delete_function.sol,init();g();h();f(bool b)
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/modifier_err.sol,f(bool flag);g(bool flag)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/126_enum_invalid_member_access.sol,""
ethereum/solidity,test/libsolidity/semanticTests/viaYul/assign_tuple_from_function_call.sol,f();g();h()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/280_continue_not_in_loop.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/events/event_nested_array.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/types/library_function_selector_private_outside.sol,f(uint256);f()
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/assign_bound.sol,"foo(uint256 a, uint256 b);bar()"
ethereum/solidity,test/libsolidity/syntaxTests/modifiers/use_in_invalid_context.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/events/illegal_names_exception.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/bmc_coverage/branches_with_return/simple_if_state_var.sol,check();conditional_increment()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/division_truncates_correctly_4.sol,"f(int x, int y)"
ethereum/solidity,test/libsolidity/semanticTests/reverts/revert_return_area.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/events/overloading_in_contract.sol,""
ethereum/solidity,test/cmdlineTests/optimizer_BlockDeDuplicator/input.sol,fun_x();fun_();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct/struct_recursive_1.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/071_base_class_state_variable_internal_member.sol,foo()
ethereum/solidity,test/libsolidity/semanticTests/modifiers/function_modifier_loop_viair.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/typeChecking/return_wrong_number.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/bitwise_xor_fixed_bytes.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/state_variables_2.sol,f(uint y)
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/for_1_break.sol,"f(uint x, bool b)"
ethereum/solidity,test/libsolidity/syntaxTests/parsing/array_range_no_start.sol,f(uint256[] calldata x)
ethereum/solidity,test/libsolidity/syntaxTests/types/library_to_address.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/storage/packed_storage_structs_bytes.sol,test()
ethereum/solidity,test/libsolidity/smtCheckerTests/complex/slither/const_state_variables.sol,setUsed();setUsed(uint a);getNumber()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/localStorageVariables/revert_declaration_fine.sol,g(bool flag)
ethereum/solidity,test/libsolidity/syntaxTests/functionCalls/invalid_expressions_with_calloptions1.sol,foo(int a)
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/v1_inheritance_from_contract_defining_v2_function_accepting_struct.sol,get(Item memory)
ethereum/solidity,test/libsolidity/syntaxTests/tryCatch/wrong_panic_2.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/various/gasleft_shadow_resolution.sol,gasleft();f()
ethereum/solidity,test/libsolidity/semanticTests/array/pop/byte_array_pop_isolated.sol,test()
ethereum/solidity,test/libsolidity/smtCheckerTests/external_calls/external_hash_known_code_state_reentrancy_3.sol,f();zz();f();g()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/warnUnused/local_assignment.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/file_level/file_level_call_via_module.sol,f(uint);f(bytes memory x);f();p()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/fallback_receive/receive_with_override_intermediate.sol,""
ethereum/solidity,test/libsolidity/semanticTests/errors/via_contract_type.sol,f();g();h()
ethereum/solidity,test/libsolidity/semanticTests/fallback/inherited.sol,getData()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/compound_mul.sol,f(uint x)
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/functions_identifier_nested_tuple_2.sol,f(S memory _s);f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/315_fixed_type_invalid_implicit_conversion_size.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_or.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/array/length/parameter_too_large_multidim_ABIv2.sol,f(bytes32[1263941234127518272][500] memory);f(uint[2**30][2**30][][] memory)
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/selectors.sol,ext();pub();test();test()
ethereum/solidity,test/libsolidity/syntaxTests/immutable/inheritance_ctor_inherit_specifier_argument_reading.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/interface/linearization/invalid/lists_b.sol,""
ethereum/solidity,test/cmdlineTests/too_long_line_edge_out/input.sol,"fffffffffffffffffffffff(announcementTypeTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT Typ, string A)"
ethereum/solidity,test/libsolidity/smtCheckerTests/external_calls/external_inc.sol,d();inc();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/file_level/free_function_2.sol,g();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct/struct_constructor_fixed_bytes_from_string_1.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/returnExpressions/valid_returns.sol,f();g();h();i();j()
ethereum/solidity,test/compilationTests/gnosis/Events/Event.sol,buyAllOutcomes(uint collateralTokenCount);sellAllOutcomes(uint outcomeTokenCount);setOutcome();getOutcomeCount();getOutcomeTokens();getOutcomeTokenDistribution(address owner);getEventHash();redeemWinnings()
ethereum/solidity,test/libsolidity/semanticTests/modifiers/continue_in_modifier.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/out_of_bounds/array_2d_4.sol,p();q(uint i);r()
ethereum/solidity,test/compilationTests/gnosis/Events/CategoricalEvent.sol,redeemWinnings();getEventHash()
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/event_parameter.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/returning_structs_fail.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV1/abi_decode_fixed_arrays.sol,"f(uint16[3] memory a, uint16[2][3] memory b, uint i, uint j, uint k)"
ethereum/solidity,test/libsolidity/semanticTests/arithmetics/unchecked_div_by_zero.sol,"div(uint256 a, uint256 b);mod(uint256 a, uint256 b)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/217_mem_array_assignment_changes_base_type.sol,f(uint8[] memory x)
ethereum/solidity,test/libsolidity/semanticTests/functionCall/gas_and_value_brace_syntax.sol,getBalance();setFlag();getFlag();sendAmount(uint amount);outOfGas();checkState()
ethereum/solidity,test/libsolidity/semanticTests/asmForLoop/for_loop_break.sol,f()
ethereum/solidity,test/libsolidity/ASTJSON/used_errors.sol,f();h()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/calldata_memory_conflict.sol,f(uint[] calldata);g(uint[] calldata);h(uint[] calldata);i(uint[] calldata);f(uint[] calldata);g(uint[] calldata);h(uint[] calldata);i(uint[] calldata);f(uint[] memory);g(uint[] memory);h(uint[] memory);i(uint[] memory)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/tuple_1_chain_1.sol,i()
ethereum/solidity,test/libsolidity/semanticTests/modifiers/return_does_not_skip_modifier.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/function_call_inside_branch_4.sol,f();g();h()
ethereum/solidity,test/libsolidity/smtCheckerTests/function_selector/selector_3.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/mod_n.sol,"f(uint x, uint y)"
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/interface/multiple_parents.sol,test();testA();test();testB()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/316_fixed_type_invalid_implicit_conversion_lost_data.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/local_storage_variables_fail.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/structs/lone_struct_array_type.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/declaring_fixed_and_ufixed_variables.sol,"f(ufixed x, fixed32x32 y)"
ethereum/solidity,test/libsolidity/semanticTests/viaYul/array_2d_new.sol,f(uint n)
ethereum/solidity,test/libsolidity/semanticTests/revertStrings/invalid_abi_decoding_memory_v1.sol,"dyn(uint ptr, uint start, uint x);f(uint ptr, uint start, uint x)"
ethereum/solidity,test/libsolidity/smtCheckerTests/external_calls/external_reentrancy_2.sol,e();call(address target)
ethereum/solidity,test/compilationTests/gnosis/Oracles/CentralizedOracleFactory.sol,createCentralizedOracle(bytes memory ipfsHash)
ethereum/solidity,test/libsolidity/syntaxTests/multiSource/free_function_resolution_override_virtual.sol,f();f();f();f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/lexer_numbers_with_underscores_decimal.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_assignment_outside_branch.sol,f();g(uint y)
ethereum/solidity,test/libsolidity/syntaxTests/parsing/external_function.sol,x()
ethereum/solidity,test/libsolidity/syntaxTests/modifiers/modifier_without_underscore.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/108_empty_name_return_parameter_with_named_one.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/try_err.sol,ext();f();g();h();i()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/constructor_public_public.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/function_inside_branch_modify_state_var.sol,f();g(bool b)
ethereum/solidity,test/libsolidity/smtCheckerTests/unchecked/unchecked_double_with_modifier.sol,t();f()
ethereum/solidity,test/libsolidity/syntaxTests/conversion/function_type_pure_nonpayable.sol,h();f()
ethereum/solidity,test/libsolidity/syntaxTests/bound/bound_all.sol,g(function();f();t()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/delete_multid_array.sol,"p();q();f(uint x, uint v);g(uint x, uint y, uint v);h(uint x, uint y, uint v);i(uint x, uint y, uint v);j(uint x, uint y, uint z, uint v);setA(uint x, uint y);setB(uint x, uint y, uint z)"
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/shifts/shift_right_negative_lvalue_int32.sol,"f(int32 a, uint32 b);t()"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/002_undeclared_name.sol,f(uint256 arg)
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/read_storage_pure_fail.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/base_contract_assertion_fail_8.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/lexer_numbers_with_underscores_decimal_fail.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/for_loop_simple_initexpr.sol,fun(uint256 a)
ethereum/solidity,test/libsolidity/semanticTests/virtualFunctions/virtual_function_usage_in_constructor_arguments.sol,overridden();g();getA();overridden()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/array_type_range.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/empty_bytes_copy.sol,fromMemory();fromCalldata(bytes calldata x);fromStorage()
ethereum/solidity,test/libsolidity/smtCheckerTests/verification_target/simple_assert_with_require_message.sol,f(uint a)
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/functions_external_2.sol,"g(uint x);f(uint y, D d);set(uint x)"
ethereum/solidity,test/libsolidity/semanticTests/abiencodedecode/offset_overflow_in_array_decoding.sol,test()
ethereum/solidity,test/libsolidity/semanticTests/expressions/conditional_expression_tuples.sol,f(bool cond)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_literal_3.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/address_payable_local.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/tryCatch/two_error_catch_clauses.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/inline_assembly/assembly_2.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/structs/calldata/calldata_struct_and_ints.sol,"f(uint256 a, S calldata s, uint256 b)"
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/jumpi_disallowed.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/array/invalidCopy/storage_to_storage_dynamic_to_static.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/enum_explicit_values_2.sol,f(D _a)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/function_type_call.sol,f(function(uint);h()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/single_function_param_trailing_comma.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/v1_constructor_with_v2_modifier.sol,get()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_multiple.sol,foo();test(uint8 _a);foo();test();foo();foo();test();foo()
ethereum/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_directly_recursive.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/multiSource/split_contract_hierarchy_control_flow_analysis.sol,normal();reverting();foo();bar()
ethereum/solidity,test/libsolidity/syntaxTests/events/event_emit_simple.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/malformed_enum_declaration.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/immutable/function_initialization.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/bitwise_shifting_constantinople.sol,"shl(uint256 a, uint256 b);shr(uint256 a, uint256 b);sar(uint256 a, uint256 b)"
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/division_5.sol,"mul(uint8 a, uint8 b)"
ethereum/solidity,test/libsolidity/syntaxTests/types/rational_number_array_index_limit.sol,""
ethereum/solidity,test/libsolidity/semanticTests/array/copying/array_nested_calldata_to_storage.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/file_level/free_function_and_constant_1.sol,"f(uint x, uint[] calldata input);fun(uint[] calldata _x, uint[] storage _y)"
ethereum/solidity,test/libsolidity/syntaxTests/missing_state_variable.sol,getStateVar()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/bytes_2_fail.sol,"f(bytes memory b1, bytes memory b2)"
ethereum/solidity,test/libsolidity/semanticTests/various/negative_stack_height.sol,nredit(uint256 startindex)
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/virtual/simple.sol,foo()
ethereum/solidity,test/libsolidity/syntaxTests/imports/relative_import.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/unusedVariables/try_catch.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/functionCall/inheritance/base_overload.sol,"init(uint a, uint b);init(uint a);cInit(uint c);cInit(uint c, uint d)"
ethereum/solidity,test/libsolidity/semanticTests/viaYul/local_assignment.sol,f(uint a)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/194_negative_integers_to_unsigned.sol,""
ethereum/solidity,test/libsolidity/semanticTests/freeFunctions/easy.sol,"add(uint a, uint b);f(uint x)"
ethereum/solidity,test/libsolidity/semanticTests/modifiers/evaluation_order.sol,query();f(uint y)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/function_type_as_argument.sol,f(function(uint)
ethereum/solidity,test/libsolidity/syntaxTests/conversion/allowed_conversion_to_bytes_array.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/structs/illegal_names.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct/struct_array_struct_array_memory_unsafe_2.sol,f(S memory s2)
ethereum/solidity,test/libsolidity/syntaxTests/imports/filename_with_period.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/constantEvaluator/overflow.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/access_to_base_member_function.sol,x();f()
ethereum/solidity,test/libsolidity/syntaxTests/largeTypes/large_storage_array_fine.sol,""
ethereum/solidity,test/libsolidity/semanticTests/constructor_ihneritance_init_order_2.sol,f()
ethereum/solidity,test/libsolidity/ABIJson/multiple_params.sol,"f(uint a, uint b)"
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/function_call_invalid_argument_count.sol,f();f(a)
ethereum/solidity,test/libsolidity/semanticTests/functionCall/transaction_status.sol,f();g();h()
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/assignment_map.sol,foo()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/state_variable_function.sol,x()
ethereum/solidity,test/libsolidity/gasTests/dispatch_small_optimised.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/memberLookup/msg_value_modifier_pure.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/libraries/bound_to_calldata.sol,f(bytes calldata _x);g(bytes memory _x);f(bytes calldata _x)
ethereum/solidity,test/libsolidity/syntaxTests/immutable/ctor_initialization_indirect_reading.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/contract_to_unrelated_contract.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/various/cross_contract_types.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/v1_v2_v1_modifier_mix.sol,foo();get()
ethereum/solidity,test/libsolidity/semanticTests/immutable/use_scratch.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/534_tuple_invalid_literal_too_large_expression.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/libraries/using_for_storage_structs.sol,f(Struct storage _x);h(Struct storage _s);g()
ethereum/solidity,test/libsolidity/semanticTests/constructor_with_params_inheritance_2.sol,""
ethereum/solidity,test/libsolidity/semanticTests/viaYul/array_memory_create.sol,create(uint256 len)
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_inside_modifiers_3.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/arithmetics/checked_add_v2.sol,"f(uint16 a, uint16 b)"
ethereum/solidity,test/libsolidity/syntaxTests/modifiers/cross_contract_super.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/shift_left_uint8.sol,"f(uint8 a, uint8 b)"
ethereum/solidity,test/libsolidity/smtCheckerTests/out_of_bounds/fixed_bytes_4.sol,"r(bytes32 x, uint y)"
ethereum/solidity,test/libsolidity/syntaxTests/parsing/elementary_non_address_payable_argument.sol,a(bool payable);b(string payable);c(int payable);d(int256 payable);e(uint payable);f(uint256 payable);g(bytes1 payable);h(bytes payable);i(bytes32 payable);j(fixed payable);k(fixed80x80 payable);l(ufixed payable);m(ufixed80x80 payable)
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/mappingReturn/unnamed_fine.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/shift_negative_constant_right.sol,""
ethereum/solidity,test/libsolidity/semanticTests/ecrecover/failing_ecrecover_invalid_input_asm.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/empty_function.sol,"functionName(bytes20 arg1, address addr)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/134_enum_name_resolution_under_current_contract_name.sol,a()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_struct_array_branches_2d.sol,f(bool b)
ethereum/solidity,test/libsolidity/semanticTests/variables/mapping_local_compound_assignment.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_dynamic_1_fail.sol,"p();f(uint x, uint y)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/328_rational_to_fixed_literal_expression.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/getters/array_2.sol,f()
ethereum/solidity,test/compilationTests/MultiSigWallet/MultiSigWalletWithDailyLimitFactory.sol,"create(address[] memory _owners, uint _required, uint _dailyLimit)"
ethereum/solidity,test/libsolidity/syntaxTests/specialFunctions/types_without_encoding_problems.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/multiSource/free_function_resolution_override_virtual_super.sol,f();g();g()
ethereum/solidity,test/libsolidity/syntaxTests/array/length/inline_array.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/scoping/name_shadowing_local_variable_vs_free_function.sol,e();f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/elemantary_non_address_payable_state_variable.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy_modifier.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/types/bool_simple_3.sol,"f(bool x, bool y)"
ethereum/solidity,test/libsolidity/semanticTests/libraries/internal_call_bound_with_parentheses1.sol,f();foo()
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/v2_call_to_v2_library_function_returning_struct.sol,get();foo()
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_return_public_memory.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/bytesNN_upcasting.sol,""
ethereum/solidity,test/libsolidity/semanticTests/arithmetics/addmod_mulmod.sol,test()
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/for_1_continue_fail.sol,"f(uint x, bool b)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/045_returning_multi_dimensional_arrays.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/warn_function_type_parameters_with_names.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/types/address_delegatecall.sol,"f(address a, bytes memory data)"
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_aliasing_memory_3.sol,"f(uint[] memory a, uint[] memory b)"
ethereum/solidity,test/scripts/fixtures/smt_smoke_test.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/types/empty_tuple_function.sol,f();a()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/address_in_struct.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/errors/no_mappings.sol,""
ethereum/solidity,test/libsolidity/semanticTests/libraries/library_address_homestead.sol,"f(uint256 a, uint256 b);addr();g(uint256 a, uint256 b)"
ethereum/solidity,test/libsolidity/syntaxTests/parsing/conditional_true_false_literal.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/local_bool_assignment.sol,f(bool a)
ethereum/solidity,test/libsolidity/ABIJson/events_anonymous.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/freeFunctions/free_call_via_contract_type.sol,f();fun()
ethereum/solidity,test/libsolidity/syntaxTests/denominations/combining_hex_and_denomination.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/implement_public_function_by_public_variable.sol,test()
ethereum/solidity,test/libsolidity/smtCheckerTests/try_catch/try_5.sol,d();set(int n);f()
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_function_calldata.sol,f(S calldata b)
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/duplicated_constructor_call/base.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/constructor/inconstructible_abstract_contract.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/array/slice/slice_memory_string.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/types/convert_fixed_bytes_to_fixed_bytes_smaller_size.sol,bytesToBytes(bytes4 input)
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/base_contract_assertion_fail_2.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/478_too_large_arrays_for_calldata_public.sol,f(uint[85678901234] memory a)
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/compound_shl_1.sol,f(bool b)
ethereum/solidity,test/libsolidity/syntaxTests/comments/multiline_unicode_direction_override_2.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/582_improve_name_suggestion_four_letters.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/types/tuple_function.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/calldata_dynamic_array_to_memory.sol,f(uint256[][] calldata a)
ethereum/solidity,test/cmdlineTests/require_overload/input.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/array_index_too_large.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/errors/simple.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/167_constant_string_literal_disallows_assignment.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/shifts/shift_left_larger_type.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/inlineAssembly/truefalse.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/events/event_dynamic_nested_array_memory_v2.sol,createEvent(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/overriding_fail.sol,f();g();f();g();g()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_shared_base_simple.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/storage_memory_nested_from_pointer.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/assembly/switch_err.sol,f(uint256 a);g(bool flag);h(uint256 a)
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/shift_cleanup_garbled.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/array_of_structs_containing_arrays_calldata_to_memory.sol,f(S[] calldata c)
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/while_loop_array_assignment_memory_memory.sol,"testUnboundedForLoop(uint n, uint[] memory b, uint[] memory c)"
ethereum/solidity,test/libsolidity/semanticTests/viaYul/array_storage_length_access.sol,set_get_length(uint256 len)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/545_warn_about_address_members_on_contract_callcode.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/unchecked/unchecked_called_by_checked.sol,"add(uint16 a, uint16 b);f(uint16 a)"
ethereum/solidity,test/libsolidity/smtCheckerTests/types/bool_simple_6.sol,f(bool x)
ethereum/solidity,test/libsolidity/semanticTests/freeFunctions/recursion.sol,"exp(uint base, uint exponent);g(uint base, uint exponent)"
ethereum/solidity,test/libsolidity/syntaxTests/functionCalls/calloptions_repeated.sol,foo(int a)
ethereum/solidity,test/libsolidity/semanticTests/events/event_anonymous_with_signature_collision2.sol,deposit(bytes32 _id)
ethereum/solidity,test/libsolidity/syntaxTests/parsing/modifier_arguments.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/file_level/free_function_5.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/imports/import_library.sol,g(uint x);f()
ethereum/solidity,test/compilationTests/corion/token.sol,"receiveCorionToken(address, uint256, bytes calldata);approvedCorionToken(address, uint256, bytes calldata);replaceModule(address payable addr);closeIco();approve(address spender, uint256 amount, uint256 nonce);approveAndCall(address spender, uint256 amount, uint256 nonce, bytes calldata extraData);_approve(address spender, uint256 amount, uint256 nonce);allowance(address owner, address spender);transfer(address to, uint256 amount);transferFrom(address from, address to, uint256 amount);transferFromByModule(address from, address to, uint256 amount, bool fee);transfer(address to, uint256 amount, bytes calldata extraData);_transferToContract(address from, address to, uint256 amount, bytes memory extraData);_transfer(address from, address to, uint256 amount, bool fee);processTransactionFee(address owner, uint256 value);_processTransactionFee(address owner, uint256 value);getTransactionFee(uint256 value);mint(address owner, uint256 value);_mint(address owner, uint256 value);burn(address owner, uint256 value);_burn(address owner, uint256 value);isContract(address addr);balanceOf(address owner);totalSupply();configure(announcementType aType, uint256 value)"
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/abi_encode_v2.sol,""
ethereum/solidity,test/libsolidity/semanticTests/array/indexAccess/index_access.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/constant_access_non_initialized.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_array_assignment_storage_storage.sol,testUnboundedForLoop(uint n)
ethereum/solidity,test/libsolidity/syntaxTests/types/contract_to_base.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/unchecked/unchecked_while_body.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/concat/bytes_concat_different_types.sol,"f(bytes memory a);g(bytes calldata a);h(bytes calldata a);j(bytes calldata a);k(bytes calldata a, string memory b);slice(bytes calldata a);strParam(string calldata a);fixedBytesParam(bytes16 b1, bytes15 b2, bytes31 b3)"
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_missing_virtual.sol,test();test()
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/byte_arrays.sol,"f(uint a, bytes memory b, uint c);f_external(uint a, bytes calldata b, uint c)"
ethereum/solidity,tools/solidityUpgrade/contracts/TestNonFixable.sol,Storage();init();idle();destroy();init();idle();destroy()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/loops/break.sol,f();g();h()
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/pop_loop_safe.sol,f(uint l)
ethereum/solidity,test/libsolidity/semanticTests/array/pop/array_pop_uint16_transition.sol,test()
ethereum/solidity,test/libsolidity/semanticTests/reverts/invalid_enum_compared.sol,test_eq();test_eq_ok();test_neq()
ethereum/solidity,test/libsolidity/semanticTests/structs/struct_reference.sol,check();set()
ethereum/solidity,test/libsolidity/semanticTests/various/code_length_contract_member.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/simple_assignment.sol,"f(uint a, uint b)"
ethereum/solidity,test/libsolidity/syntaxTests/events/event_overload_named_arguments_ambiguous_implicit_conversion.sol,call()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/209_storage_assign_to_different_local_variable.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/events/event_struct_indexed_v2.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/array/invalidCopy/storage_to_storage_different_base.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/storage/packed_storage.sol,f(uint8 a)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/355_payable_external.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/metaTypes/codeAccessAbstractCreation.sol,creationOther();f(uint)
ethereum/solidity,test/libsolidity/syntaxTests/constructor/constructible_abstract_base.sol,""
ethereum/solidity,test/libsolidity/semanticTests/array/copying/array_copy_target_leftover.sol,test()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/return.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/getters/mapping.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/events/events_with_same_name_different_types.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/317_fixed_type_valid_explicit_conversions.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/503_builtin_sha256_reject_value.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/inheritance/member_notation_ctor.sol,getX();g(int p)
ethereum/solidity,test/libsolidity/syntaxTests/tryCatch/creation.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/244_tuples.sol,f()
ethereum/solidity,test/libsolidity/errorRecoveryTests/wrong_compiler_recovers_4.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/receive/inherited.sol,getData()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/179_assignment_of_overloaded_function.sol,f();f(uint a);g()
ethereum/solidity,test/libsolidity/syntaxTests/getter/nested_structs.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_with_return/simple_if_state_var.sol,check();conditional_increment()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/delete_array.sol,f(bool b)
ethereum/solidity,test/libsolidity/semanticTests/array/push/array_push_nested.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/369_shift_constant_right_negative_rvalue.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/globalFunctions/sha3_no_call.sol,f(bytes memory data)
ethereum/solidity,test/libsolidity/syntaxTests/array/length/const_cannot_be_fractional.sol,""
ethereum/solidity,test/libsolidity/semanticTests/error/selector.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/metaTypes/codeAccessIsConstant.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/imports/import_base.sol,f();g(uint y)
ethereum/solidity,test/libsolidity/syntaxTests/literalOperations/division_by_zero.sol,""
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV1/abi_encode_rational.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/literals/scientific_notation.sol,f();g();h();i();j();k()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct/struct_state_var_array_pop_1.sol,f(uint _x)
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/while_err.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/call_value_on_non_constructor.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/scoping/function_state_variable_conflict.sol,f(uint)
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/index_access_for_string.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/mapping_as_parameter_1.sol,"f(mapping(uint => uint);g(uint a, uint b)"
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy_mixed_chain_empty_base.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/reverting_call_nested.sol,iWillRevert();test(bool _param)
ethereum/solidity,test/libsolidity/syntaxTests/comments/multiline_unicode_direction_override_5.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/inlineAssembly/keccak256_assembly.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/modifiers/modifer_recursive.sol,f(uint x)
ethereum/solidity,test/libsolidity/semanticTests/constants/consteval_array_length.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/denominations/deprecated_year.sol,""
ethereum/solidity,test/libsolidity/semanticTests/various/positive_integers_to_signed.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/334_fixed_point_casting_exponents_neg.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/structs/calldata/calldata_struct_struct_member.sol,f(S1 calldata s1)
ethereum/solidity,test/libsolidity/syntaxTests/constructor/inconstructible_internal_constructor.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/revertStrings/short_input_array.sol,f(uint[] memory a)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/073_state_variable_member_of_wrong_class2.sol,foo()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/shadowing/name_clash_in_import.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/evm_constantinople.sol,f();g();h()
ethereum/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_overflow.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/identifier_starting_with_dot.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/division_truncates_correctly_5.sol,"f(int x, int y)"
ethereum/solidity,test/libsolidity/syntaxTests/duplicateFunctions/fallback_function_twice.sol,""
ethereum/solidity,test/libsolidity/semanticTests/array/copying/array_of_struct_memory_to_storage.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/160_test_byte_is_alias_of_byte1.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/function_type_array_as_reference_type.sol,b(function(Nested memory);c(function(Nested memory);d(function(Nested memory)
ethereum/solidity,test/libsolidity/errorRecoveryTests/wrong_compiler_recovers_3.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/getters/function.sol,f();X()
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_dynamic_key.sol,""
ethereum/solidity,test/libsolidity/semanticTests/various/store_bytes.sol,save()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/mapping_unsupported_key_type_1.sol,"f(string memory s, uint x)"
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_aliasing_memory_1.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/function_inside_branch_modify_state_var_3.sol,f();g(bool b);h(bool b)
ethereum/solidity,test/libsolidity/syntaxTests/constants/mod_div_rational.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/parsing/address_payable_constant.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/functionCalls/call_unimplemented_base.sol,a();b()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/modifiers_in_constructor_context.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_array_return_public.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/metaTypes/unsupportedArgForType.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/globalFunctions/sha3_override.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/libraries/library_delegatecall_guard_view_needed.sol,f(uint256[] storage x);f();g();h()
ethereum/solidity,test/libsolidity/semanticTests/abiencodedecode/abi_decode_simple.sol,f(bytes memory data)
ethereum/solidity,test/libsolidity/semanticTests/inlineAssembly/inline_assembly_embedded_function_call.sol,"f();asmfun(a, b, c);g(r)"
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV1/cleanup/cleanup.sol,"f(uint16 a, int16 b, address c, bytes3 d, bool e)"
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/push_as_lhs_2d_2.sol,s()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/131_enum_implicit_conversion_is_not_okay_64.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/dup_disallowed.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/constructor_with_params_diamond_inheritance.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/abi/abi_decode_1_tuple.sol,f(bytes calldata data)
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/evm_constantinople_on_byzantium.sol,f();g();h()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/extcodehash_as_variable_pre_constantinople.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/various/empty_name_return_parameter.sol,f(uint256 k)
ethereum/solidity,test/libsolidity/semanticTests/array/concat/bytes_concat_empty.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/variableDeclaration/illegal_names.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/special/msg_sender_1.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/bmc_coverage/try_multiple_catch_clauses_2.sol,g();f()
ethereum/solidity,test/compilationTests/gnosis/Oracles/Oracle.sol,isOutcomeSet();getOutcome()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/402_assignment_to_constant.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/hex_literal_bitnot.sol,""
ethereum/solidity,test/libsolidity/semanticTests/viaYul/array_memory_allocation/array_array_static.sol,"set(string memory s, uint n, uint m)"
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/selector.sol,f();g();h()
ethereum/solidity,test/libsolidity/semanticTests/various/code_length.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/state/msg_sender.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/address_payable_state_variable.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/function_type_argument_external.sol,f(function(mapping(uint=>uint)
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_multiple_missing.sol,foo();test(uint8 _a);foo();test();foo();foo();test();test();foo()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/external_turns_public_no_params.sol,f();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/abi/abi_encode_with_selector_vs_sig.sol,"f(string memory sig, uint x, uint[] memory a)"
ethereum/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_indirectly_recursive.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/push_zero_safe.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/special/ether_units.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/lexer_numbers_with_underscores_fixed.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/abi/abi_encode_with_sig_simple.sol,"abiEncodeSimple(string memory sig, bool t, uint x, uint y, uint z, uint[] memory a, uint[] memory b)"
ethereum/solidity,test/libsolidity/semanticTests/array/pop/byte_array_pop_storage_empty.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/dataLocations/variable_declaration_location_specifier_test_non_reference_type.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/public_vars_multiple_diamond2.sol,foo();foo()
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/selector_complex.sol,f(C c);g()
ethereum/solidity,test/libsolidity/semanticTests/externalSource/source.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/361_calling_payable.sol,pay();f();h()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/function_state_variable.sol,x()
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_struct_data_location_memory.sol,f(S memory)
ethereum/solidity,test/libsolidity/syntaxTests/types/function_call_fail.sol,f(uint y)
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/diamond_super_2.sol,f();f();f();f()
ethereum/solidity,test/compilationTests/gnosis/Oracles/FutarchyOracleFactory.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/literal_comparisons.sol,f(int8 x)
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/private_state_variable.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/conversion/explicit_conversion_sender_to_payable.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/548_warn_about_address_members_on_non_this_contract_transfer.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/unterminatedBlocks/one_dot_x.sol,f()
ethereum/solidity,test/compilationTests/MultiSigWallet/MultiSigWalletFactory.sol,"create(address[] memory _owners, uint _required)"
ethereum/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_parameter_copy.sol,f(uint x)
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/while_loop_simple_3.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/multiVariableDeclarationEmpty.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/delete_function_type.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/try_catch/try_1.sol,g();f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/in_modifier.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/typecast/cast_address_1.sol,f(address a)
ethereum/solidity,test/libsolidity/ASTJSON/assembly/leave.sol,l();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/bmc_coverage/branches_with_return/constructor_state_variable_init_diamond.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/do_while_continue.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/105_constant_input_parameter.sol,f(uint[] memory constant a)
ethereum/solidity,test/libsolidity/syntaxTests/types/rational_number_signed_to_unsigned.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/shift_right_negative_lvalue.sol,"f(int256 a, uint256 b)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/429_revert_with_reason.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/diamond_top_implemented_intermediate_empty_bottom_public_state_variable.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/public_vars_multiple4.sol,balanceOf(address);balanceOf(uint);balanceOf()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/no_effect_statements.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/exponentiation/signed_base.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/integer/int.sol,intMinA();intMinB();intMinC();intMinD();intMaxA();intMaxB();intMaxC();intMaxD()
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/contract_mapping.sol,"f(I x, J y)"
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/array_argument_public.sol,f(mapping(uint => uint)
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_with_return/simple_if_struct_2.sol,check();conditional_increment()
ethereum/solidity,test/libsolidity/smtCheckerTests/external_calls/external_reentrancy_crypto.sol,d();check(bytes memory _data);ext(D d)
ethereum/solidity,test/libsolidity/ABIJson/return_structs.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/externalSource/_relative_imports/h.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/returnExpressions/single_return_mismatching_number.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/events/events_with_same_name.sol,"deposit();deposit(address _addr);deposit(address _addr, uint _amount);deposit(address _addr, bool _flag)"
ethereum/solidity,test/libsolidity/semanticTests/events/event_no_arguments.sol,deposit()
ethereum/solidity,test/libsolidity/syntaxTests/types/address/address_to_contract_payable_fallback.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/delete.sol,internal_func();call_internal_func();call_deleted_internal_func()
ethereum/solidity,test/libsolidity/semanticTests/functionCall/creation_function_call_with_salt.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/532_tuple_invalid_literal_too_large_for_uint_multi.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/receiveEther/view_modifier.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/158_storage_variable_initialization_with_incorrect_type_int.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_assert_condition_1.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/shadowing/local_variable.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/shadowsBuiltin/illegal_names_using_for.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/variables/delete_local.sol,delLocal()
ethereum/solidity,test/libsolidity/syntaxTests/duplicateFunctions/receive_function_thrice.sol,""
ethereum/solidity,test/libsolidity/semanticTests/interfaceID/lisa.sol,supportsInterface(bytes4 interfaceID);supportsInterface(bytes4 interfaceID);skinColor();skinColor()
ethereum/solidity,test/libsolidity/syntaxTests/comments/unicode_direction_in_source_2.sol,f(bool b)
ethereum/solidity,test/libsolidity/semanticTests/array/indexAccess/inline_array_index_access_ints.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/do_while_break_2_fail.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/getters/value_types.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/special/this.sol,f(address a)
ethereum/solidity,test/libsolidity/semanticTests/enums/using_contract_enums_with_explicit_contract_name.sol,answer()
ethereum/solidity,test/libsolidity/semanticTests/array/calldata_array_dynamic_invalid_static_middle.sol,f(uint256[][1][] calldata a);g(uint256[][1][] calldata a);h(uint256[][1][] calldata a)
ethereum/solidity,test/libsolidity/syntaxTests/types/var_empty_decl_3.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/try_catch/try_string_literal_to_bytes_array.sol,g();f()
ethereum/solidity,test/libsolidity/syntaxTests/types/address/contract_to_address_implicitly.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/tupleAssignments/err_fill_assignment.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/tupleAssignments/error_fill.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/immutable/inheritance.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/abiencodedecode/abi_encode_with_selectorv2.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/parsing/for_loop_simple_noexpr.sol,fun(uint256 a)
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/const_forward_reference.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/conversion/implicit_cast_function_call.sol,f(uint b);g()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/296_int10abc_is_identifier.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/shadowsBuiltin/illegal_names_library_using_for.sol,f();f();f()
ethereum/solidity,test/libsolidity/syntaxTests/immutable/selector.sol,readX()
ethereum/solidity,test/libsolidity/semanticTests/salted_create/salted_create_with_value.sol,getBalance();f()
ethereum/solidity,test/libsolidity/syntaxTests/types/address/uint_to_payable_address.sol,f(uint x)
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/this_external_call.sol,f(uint y);g(uint y)
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/cleanup/simple_struct.sol,"gg(S calldata s);f(uint256 a, bytes32 b)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/497_gasleft.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/immutable/external_function_pointer.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/specialFunctions/abidecode/abi_decode_singletontuple.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/functions_trivial_condition_if.sol,f(bool x)
ethereum/solidity,test/libsolidity/semanticTests/getters/mapping_array_struct.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/types/tuple_assignment_array.sol,"p();g(uint x, uint y)"
ethereum/solidity,test/libsolidity/syntaxTests/events/event_nested_array_indexed_v2.sol,""
ethereum/solidity,test/libsolidity/semanticTests/array/copying/array_of_structs_containing_arrays_calldata_to_storage.sol,f(S[] calldata c)
ethereum/solidity,test/libsolidity/syntaxTests/natspec/docstring_author_function.sol,iHaveAuthor()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/linkersymbol_function.sol,f();linkersymbol(a)
ethereum/solidity,test/libsolidity/smtCheckerTests/typecast/string_literal_to_fixed_bytes_function_call.sol,f();g(bytes7 a)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/119_shift_warn_literal_base_4.sol,f()
ethereum/solidity,test/compilationTests/corion/multiOwner.sol,"insertOwner(address addr);dropOwner(address addr);cancelDo(bytes32 doHash);ownersForChange();calcDoHash(string memory job, bytes32 data);validDoHash(bytes32 doHash);insertAndCheckDo(bytes32 doHash);_addOwner(address addr);_delOwner(address addr)"
ethereum/solidity,test/libsolidity/syntaxTests/constructor/constructor_override.sol,""
ethereum/solidity,test/libsolidity/semanticTests/revertStrings/calldata_too_short_v1.sol,d(bytes memory _data)
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/unary_add_array_push_1.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct/struct_array_struct_array_storage_unsafe_1.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/enums/global_enum_shadowing.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/events/event_dynamic_nested_array_storage_v2.sol,createEvent(uint x)
ethereum/solidity,test/libsolidity/smtCheckerTests/imports/import_free_functions.sol,"s();sub(uint256 a, uint256 b);transferFrom(uint256 amount)"
ethereum/solidity,test/libsolidity/semanticTests/viaYul/assert_and_require.sol,f(bool a)
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/localStorageVariables/dowhile_declaration_err.sol,f();g();h();i();j()
ethereum/solidity,test/libsolidity/semanticTests/abiencodedecode/contract_array_v2.sol,f(bytes calldata x);g()
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/array_pop_length_7.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/pop_1_safe.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/natspec/invalid/docstring_return_size_mismatch.sol,vote(uint id);unvote(uint id)
ethereum/solidity,test/libsolidity/semanticTests/storage/struct_accessor.sol,""
ethereum/solidity,test/libsolidity/semanticTests/viaYul/cleanup/comparison.sol,eq();neq();geq();leq();gt();lt()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/function_call_not_found.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/libraries/library_enum_as_an_expression.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/leave.sol,f();f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/125_enum_member_access_accross_contracts.sol,test()
ethereum/solidity,test/libsolidity/semanticTests/array/dynamic_out_of_bounds_array_access.sol,"enlarge(uint256 amount);set(uint256 index, uint256 value);get(uint256 index);length()"
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/reverting_call_virtual3.sol,f();g();f();g()
ethereum/solidity,test/libsolidity/semanticTests/inheritance/inherited_constant_state_var.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/single_function_param.sol,functionName(bytes32 input)
ethereum/solidity,test/cmdlineTests/optimizer_inliner_call_from_constructor/input.sol,a();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct/struct_recursive_6.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/math/addmulmod.sol,"test_addmod(uint x, uint y);test_mulmod(uint x, uint y)"
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/fallback_receive/receive_return_parameter.sol,""
ethereum/solidity,test/compilationTests/gnosis/Events/EventFactory.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/135_private_visibility.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/371_shift_constant_right_excessive_rvalue.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/reserved_identifiers_constantinople.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/immutable.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/typecast/slice_to_fixed_bytes_1.sol,fromSlice(bytes calldata c)
ethereum/solidity,test/libsolidity/semanticTests/uninitializedFunctionPointer/invalidInConstructor.sol,f();f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/unbalanced_two_stack_load.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/try_catch/try_nested_3.sol,g();f()
ethereum/solidity,test/libsolidity/semanticTests/functionCall/calling_other_functions.sol,run(uint x);evenStep(uint x);oddStep(uint x)
ethereum/solidity,test/libsolidity/semanticTests/structs/struct_storage_push_zero_value.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/try_catch/try_string_literal_to_fixed_bytes.sol,g();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/function_inline_chain.sol,f();g();h()
ethereum/solidity,test/libsolidity/semanticTests/libraries/library_struct_as_an_expression.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/libraries/internal_library_function.sol,f(uint256[] memory _data);f()
ethereum/solidity,test/libsolidity/smtCheckerTests/invariants/state_machine_1.sol,f();g();h();j();i()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/unused_mapping.sol,inc()
ethereum/solidity,test/libsolidity/syntaxTests/types/contractTypeType/members/base_contract.sol,f();g();h()
ethereum/solidity,test/cmdlineTests/model_checker_engine_all/input.sol,f(uint x)
ethereum/solidity,test/cmdlineTests/model_checker_engine_chc/input.sol,f(uint x)
ethereum/solidity,test/cmdlineTests/model_checker_engine_bmc/input.sol,f(uint x)
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/functions_storage_var_1_fail.sol,f(uint x);g()
ethereum/solidity,test/libsolidity/semanticTests/events/event_emit.sol,deposit(bytes32 _id)
ethereum/solidity,test/libsolidity/syntaxTests/errors/error_param_type_shadowed_by_param_name.sol,""
ethereum/solidity,test/compilationTests/gnosis/Oracles/DifficultyOracleFactory.sol,createDifficultyOracle(uint blockNumber)
ethereum/solidity,test/libsolidity/semanticTests/viaYul/exp_overflow.sol,"f(uint8 x, uint8 y);g(uint x, uint y)"
ethereum/solidity,test/libsolidity/smtCheckerTests/types/enum_in_struct.sol,f(S memory s)
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_or_need_both_fail.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/bytecodeReferences/library_public_without_contract.sol,foo();foo()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/struct.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/bytecodeReferences/circular_reference_internal_functions.sol,foo();foo()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/address_nonpayable.sol,f(address b)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/124_enum_member_access.sol,""
ethereum/solidity,test/libsolidity/semanticTests/functionCall/calling_uninitialized_function.sol,intern();extern()
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/array_argument_external.sol,f(mapping(uint => uint)
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/constructor_uses_function_base.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/visibility_specifiers.sol,f();f_priv();f_internal()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/reserved_identifiers.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/conversion/explicit_cast_function_call.sol,f(bytes32 b);g()
ethereum/solidity,test/libsolidity/syntaxTests/specialFunctions/abi_encode_structs.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/array/fixed_arrays_in_constructors.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/duplicateFunctions/illegal_names_exception.sol,this();super();_()
ethereum/solidity,test/libsolidity/semanticTests/virtualFunctions/virtual_function_calls.sol,f();g();g()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/calldata_array_static_to_memory.sol,f(uint256[2] calldata c)
ethereum/solidity,test/libsolidity/semanticTests/viaYul/short_circuit.sol,or(uint x);and(uint x)
ethereum/solidity,test/libsolidity/semanticTests/libraries/internal_library_function_bound_to_address_named_send_transfer.sol,transfer(address a);send(address a);useTransfer(address a);useSend(address a)
ethereum/solidity,test/libsolidity/syntaxTests/functionCalls/named_arguments_invalid_name.sol,"f(uint a, bool b, bytes memory c, uint d, bool e);g()"
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/functions_storage_var_2.sol,f(uint x);g()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct/struct_constructor_named_args_2.sol,test()
ethereum/solidity,test/libsolidity/semanticTests/functionTypes/store_function.sol,addTwo(uint256 x);store(function(uint);eval(function(uint);t()
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_merge_variables_5.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/types/address/address_to_contract_implicitly.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/unchecked/unchecked_nested.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/constants/same_constants_different_files.sol,fre();f()
ethereum/solidity,test/libsolidity/semanticTests/inlineAssembly/keccak_optimization_bug_string.sol,f(string memory s)
ethereum/solidity,test/libsolidity/syntaxTests/parsing/array_range_and_ternary.sol,"f(bool cond, bytes calldata x)"
ethereum/solidity,test/libsolidity/syntaxTests/inline_arrays/invalid_types_in_inline_array.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/tryCatch/try_catch_library_call.sol,"integer(uint t, bool b);stru(S storage t, bool b);f(bool b);g(bool b)"
ethereum/solidity,test/libsolidity/syntaxTests/parsing/mapping_in_struct.sol,""
ethereum/solidity,test/libsolidity/ABIJson/function_type_extended.sol,g(function(test)
ethereum/solidity,test/libsolidity/syntaxTests/parsing/multiple_visibility_specifiers.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/payable_internal_function_type_is_not_fatal.sol,g()
ethereum/solidity,test/libsolidity/semanticTests/various/flipping_sign_tests.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/unary_add_overflows_correctly_struct.sol,inc_pre();check()
ethereum/solidity,test/libsolidity/semanticTests/isoltestTesting/balance_with_balance.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/getters/address.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/fallback_receive/fallback_without_override.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/hash_collision_in_abstract_contract.sol,gsf();tgeo();g()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/calldata_nested_array_copy_to_memory.sol,killer(uint256[][2] calldata weapon)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/tuple_declarations_function.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/array/length/tuples.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/errors/clash_function_error_inheritance.sol,Err()
ethereum/solidity,test/libsolidity/syntaxTests/types/decimal_literal_to_bytesNN_implicit.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_3.sol,f(uint x)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/type_expression_tuple_array_3d.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/typecast/slice_to_bytes.sol,f(bytes calldata x)
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/internal_function_type_to_address.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/cycle_checker_function_type.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/411_string_literal_not_convertible_to_address_as_return_value.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/functionTypes/uninitialized_internal_storage_function_call.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/003_undeclared_name_is_not_fatal.sol,f(uint256 arg)
ethereum/solidity,test/libsolidity/semanticTests/various/test_underscore_in_hex.sol,f(bool cond)
ethereum/solidity,test/libsolidity/syntaxTests/imports/import_is_transitive.sol,""
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV1/abi_decode_dynamic_array.sol,f(bytes calldata data)
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/base_arguments_empty_parentheses.sol,""
ethereum/solidity,test/libsolidity/semanticTests/functionCall/calling_uninitialized_function_through_array.sol,t()
ethereum/solidity,test/libsolidity/semanticTests/abiencodedecode/abi_encode_with_signature.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/compound_bitwise_or_fixed_bytes.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/immutable/variable_declaration_value.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/typecast/string_literal_to_fixed_bytes_return.sol,g();a()
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/abstract_contructor_param.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/localStorageVariables/assembly/if_declaration_err.sol,f(bool flag)
ethereum/solidity,test/libsolidity/semanticTests/array/copying/storage_memory_packed_dyn.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/330_rational_as_exponent_value_unsigned.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/structs/struct_delete_member.sol,deleteMember()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/this_external_call_2.sol,f(uint x);g(uint x)
ethereum/solidity,test/libsolidity/semanticTests/viaYul/array_memory_allocation/array_zeroed_memory_index_access.sol,"set(string memory s, uint n, uint a)"
ethereum/solidity,test/libsolidity/syntaxTests/immutable/multiple_inheritance_virtual_functions_with_super.sol,f();xInit();f();xInit();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/options/pragma.sol,f(uint x)
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV1/abi_decode_static_array.sol,f(bytes calldata data)
ethereum/solidity,test/libsolidity/semanticTests/viaYul/array_memory_as_parameter.sol,"test(uint256 len, uint idx);receiver(uint[] memory array, uint idx)"
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV1/dynamic_memory_copy.sol,test(bytes memory buf)
ethereum/solidity,test/libsolidity/semanticTests/inlineAssembly/inline_assembly_storage_access_local_var.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/functions_recursive_indirect.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/modifiers/modifiers_in_construction_context.sol,""
ethereum/solidity,test/libsolidity/semanticTests/functionCall/disordered_named_args.sol,"a(uint a, uint b, uint c);b()"
ethereum/solidity,test/libsolidity/syntaxTests/string/invalid_utf8_sequence.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_directly_recursive_fixed_array.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/tryCatch/library_call.sol,"integer(uint t, bool b);stru(S storage t, bool b);f(bool b);g(bool b)"
ethereum/solidity,test/libsolidity/semanticTests/externalSource/_source_name_starting_with_dots/b.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/types/enum_storage_eq.sol,f(D _d)
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/fixed_point_compound_add.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/location_specifiers_for_state_variables_multi.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/types/tuple_declarations.sol,g()
ethereum/solidity,test/libsolidity/syntaxTests/literalOperations/division_by_zero_complex.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/constructor/public_constructor_abstract.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/types/contractTypeType/members/modifier.sol,f()
ethereum/solidity,test/compilationTests/gnosis/Markets/CampaignFactory.sol,""
ethereum/solidity,test/libsolidity/semanticTests/constants/asm_constant_file_level.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_type_mismatch.sol,foo();test(uint8 _a);foo();test();foo();foo();test();foo()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/getters/inaccessible_dynamic_type_4.sol,g()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/function_definition.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/abi/abi_encode_with_sig_array_slice_2.sol,"abiEncodeSlice(string memory sig, uint[] calldata data)"
ethereum/solidity,test/libsolidity/semanticTests/expressions/conditional_expression_false_literal.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/errors/using_2.sol,f(uint);f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/mapping_aliasing_2.sol,"f(mapping (uint => uint);g(bool b, uint x, uint y)"
ethereum/solidity,test/libsolidity/smtCheckerTests/invariants/loop_nested.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/050_function_external_call_not_allowed_conversion.sol,externalCall()
ethereum/solidity,test/libsolidity/semanticTests/errors/revert_conversion.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/fallback/fallback_as_function_name.sol,fallback()
ethereum/solidity,test/libsolidity/syntaxTests/memberLookup/internal_function_type.sol,g()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/484_function_types_selector_1.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/constructor/function_usage_in_constructor_arguments.sol,g();getA()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/reverting_call.sol,iWillRevert();test(bool _param)
ethereum/solidity,test/libsolidity/smtCheckerTests/abi/abi_encode_simple.sol,"abiEncodeSimple(bool t, uint x, uint y, uint z, uint[] memory a, uint[] memory b)"
ethereum/solidity,test/libsolidity/syntaxTests/modifiers/use_unimplemented_on_overridden_func.sol,f();f()
ethereum/solidity,test/libsolidity/syntaxTests/receiveEther/pure_modifier.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/push_overflow_1_safe.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_and_need_both_fail.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/013_large_string_literal.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/mapping_2d_1_fail.sol,f(uint x)
ethereum/solidity,test/libsolidity/semanticTests/revertStrings/called_contract_has_code.sol,f();g()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/getters/mapping_1.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_stricter_mutability4.sol,foo();foo()
ethereum/solidity,test/libsolidity/smtCheckerTests/overflow/unsigned_sub_overflow.sol,"f(uint x, uint y)"
ethereum/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/multiSingleVariableDeclaration.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/571_function_type_undeclared_type_external.sol,a(function(Nested)
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_type_mismatch2.sol,f();g();f()
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/builtin_functions.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/multiple_event_arg_trailing_comma.sol,""
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/struct/validation_function_type_inside_struct.sol,f(S memory);g(S calldata);h(S calldata s)
ethereum/solidity,test/libsolidity/syntaxTests/fallback/pure_modifier.sol,""
ethereum/solidity,test/libsolidity/semanticTests/functionCall/bare_call_no_returndatacopy.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/dataLocations/internalFunction/function_argument_location_specifier_test_internal_calldata.sol,f(bytes calldata)
ethereum/solidity,test/libsolidity/syntaxTests/lvalues/valid_lvalues.sol,"i();e();f(uint x, bytes32 y);g(function();g(function()"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/226_inheriting_library.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/conversion/convert_to_super_nonempty.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/bmc_coverage/unary_add_minus_overflow_detected.sol,inc_pre();dec_pre();inc_post();dec_post()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/conditional_with_assignment.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/empty_enum.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/getters/struct_1.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV1/return_dynamic_types_cross_call_out_of_range_1.sol,dyn(uint x);f(uint x)
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/base_contract_assertion_fail_5.sol,f();v();f();g();v()
ethereum/solidity,test/libsolidity/syntaxTests/scoping/scoping_self_use.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/unchecked/checked_called_by_unchecked.sol,"add(uint16 a, uint16 b);f(uint16 a, uint16 b, uint16 c)"
ethereum/solidity,test/libsolidity/syntaxTests/parsing/function_type_in_expression.sol,"f(uint x, uint y);g()"
ethereum/solidity,test/libsolidity/syntaxTests/duplicate_contract.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/tupleAssignments/nowarn_swap_memory.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/verification_target/constant_condition_1.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/functionCalls/this_not_callable.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/blockchain_state/this_does_not_change_external_call.sol,d();f(D d)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/tuple_extra_parens_5.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/parsing/wrong_compiler_4.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/literals/ether.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_overriding_2.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/access_to_base_member_constant.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/array_storage_index_zeroed_test.sol,test_zeroed_indicies(uint256 len)
ethereum/solidity,test/libsolidity/syntaxTests/parsing/function_type_as_storage_variable.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/shadowing_base_state_vars.sol,""
ethereum/solidity,test/libsolidity/semanticTests/functionCall/multiple_functions.sol,a();b();c();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/crypto/crypto_functions_compare_hashes.sol,f(bytes memory data)
ethereum/solidity,test/libsolidity/syntaxTests/constructor/overriding_constructor.sol,f();A();g()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/467_does_not_error_transfer_regular_function.sol,transfer()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/smoke_test.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/v2_accessing_returned_dynamic_array_with_returndata_support.sol,get();test()
ethereum/solidity,test/libsolidity/syntaxTests/array/length/cannot_be_assigned_mapping.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/empty_contract.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/unary_operators_tuple_1.sol,f(bool b)
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy_mixed_chain_with_params_2.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_or_need_both.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/various/super.sol,f();f();f();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/push_push_no_args_2_fail.sol,l()
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/shift_bytes_cleanup_viaYul.sol,l(uint8 y);r(uint8 y)
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/cleanup/intx.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inline_arrays/unnamed_types_in_inline_array_2.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/modifiers/unimplemented_override_unimplemented.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/out_of_bounds/array_2d_2.sol,"p();q(uint i);r(uint i, uint j)"
ethereum/solidity,test/libsolidity/smtCheckerTests/typecast/string_literal_to_dynamic_bytes.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/265_new_for_non_array.sol,f(uint size)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/165_assigning_state_to_const_variable.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/function_without_call.sol,f();k()
ethereum/solidity,test/libsolidity/smtCheckerTests/file_level/new_operator.sol,test();f()
ethereum/solidity,test/libsolidity/syntaxTests/immutable/selector_function_pointer.sol,f();readX()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/arrays_from_and_to_storage.sol,set(uint24[] memory _data);get()
ethereum/solidity,test/libsolidity/semanticTests/isoltestTesting/account.sol,who_am_i()
ethereum/solidity,test/libsolidity/errorRecoveryTests/error_to_eos.sol,"sendCoin(address receiver, uint amount)"
ethereum/solidity,test/libsolidity/ASTJSON/assembly/switch_default.sol,g()
ethereum/solidity,test/libsolidity/semanticTests/functionTypes/address_member.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/010_type_conversion_for_comparison.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/abi/abi_encode_packed_array_slice_2.sol,abiencodePackedSlice(uint[] calldata data)
ethereum/solidity,test/libsolidity/syntaxTests/modifiers/function_modifier_invocation_parameters.sol,f(uint8 a)
ethereum/solidity,test/libsolidity/syntaxTests/array/static_storage_array_pop.sol,test()
ethereum/solidity,test/libsolidity/semanticTests/immutable/stub.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/events/event_inheritance.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/address_constant_payable.sol,""
ethereum/solidity,test/libsolidity/semanticTests/modifiers/function_modifier_multiple_times.sol,f(uint256 x)
ethereum/solidity,test/libsolidity/syntaxTests/functionCalls/invalid_expressions_with_calloptions3.sol,foo(int a)
ethereum/solidity,test/libsolidity/semanticTests/inheritance/base_access_to_function_type_variables.sol,set();g();h()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/public_vars_multiple1.sol,foo()
ethereum/solidity,test/libsolidity/semanticTests/literals/wei.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/invalidArgs/creating_memory_array.sol,f(uint size)
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/shift_right_uint8.sol,"f(uint8 a, uint8 b)"
ethereum/solidity,test/libsolidity/smtCheckerTests/try_catch/try_inside_if.sol,g(bool b);f(bool b)
ethereum/solidity,test/libsolidity/syntaxTests/constructor/public_constructor_non_abstract.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/comments/singleline_unicode_direction_override_6.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/array_pop_length_4.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/363_non_payable_constructor.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/various/codebalance_assembly.sol,f();g();h()
ethereum/solidity,test/libsolidity/semanticTests/libraries/library_address.sol,f(uint256 v);g(uint256 v);addr();g(uint256 v);h(uint256 v);i(uint256 v);j(uint256 v);k(uint256 v)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/573_similar_name_longer_than_80_not_suggested.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/434_pure_statement_check_for_regular_for_loop.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/common_base_and_unique_mention.sol,f();g();f();g()
ethereum/solidity,test/libsolidity/syntaxTests/specialFunctions/abidecode/abi_decode_simple.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/scoping/name_shadowing_function_parameter_vs_its_function.sol,f(uint f)
ethereum/solidity,test/libsolidity/syntaxTests/constructor/constructor_old.sol,A()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/localStorageVariables/modifier_declaration_fine.sol,f(bool flag);g(bool flag)
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/localStorageVariables/assembly/switch_declaration_err.sol,f(uint256 a);g(bool flag);h(uint256 a)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/255_using_for_function_on_struct.sol,"mul(s storage self, uint x);f(uint a)"
ethereum/solidity,test/libsolidity/syntaxTests/types/address/address_in_struct_fine.sol,f();f()
ethereum/solidity,test/libsolidity/syntaxTests/globalFunctions/sha256_with_wrong_arg_count.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/function_types/function_parameter_return_types_fail.sol,"string_to_string(string memory x);string_string_to_string(string memory x, string memory y);tests()"
ethereum/solidity,test/libsolidity/syntaxTests/structs/global_struct.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/201_integer_signed_exp_signed.sol,f();h();i()
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/length_1d_assignment_2d_memory_to_memory.sol,f(uint[][] memory arr)
ethereum/solidity,test/libsolidity/syntaxTests/abstract/abstract_only.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/array/length/local_memory_too_large.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/array/length/invalid_expression_2.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/537_array_length_invalid_expression_int_divides_bool.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/immutable/long_name.sol,""
ethereum/solidity,test/libsolidity/semanticTests/builtinFunctions/sha256_empty.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/shifts/compound_shift_right.sol,"f(uint256 a, uint256 b);t()"
ethereum/solidity,test/libsolidity/syntaxTests/types/address/contract_to_address.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/conversion/function_cast_value_set.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/bmc_coverage/branches_with_return/nested_if.sol,"test(uint256 a, uint256 b);nested_if(uint256 a, uint256 b)"
ethereum/solidity,test/libsolidity/smtCheckerTests/types/enum_in_library_2.sol,f(E _d)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct_array_branches_3d.sol,f(bool b)
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/compound_bitwise_string_literal.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/too_few_base_arguments.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/specialFunctions/types_with_unspecified_encoding_types.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/getters/mapping_to_struct.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/virtual_function_called_by_constructor.sol,v();i();v();i()
ethereum/solidity,test/cmdlineTests/too_long_line_left_short/input.sol,"f(announcementType Type, string Announcement, string Link, bool Oppositable, string _str, uint256 _uint, address _addr)"
ethereum/solidity,test/libsolidity/semanticTests/constructor/arrays_in_constructors.sol,"part(uint i);f(address[] memory s);f(uint x, address[] memory s)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/074_fallback_function.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/crypto/crypto_functions_fail.sol,"k(bytes memory b0, bytes memory b1);s(bytes memory b0, bytes memory b1);r(bytes memory b0, bytes memory b1);e(bytes32 h0, uint8 v0, bytes32 r0, bytes32 s0, bytes32 h1, uint8 v1, bytes32 r1, bytes32 s1)"
ethereum/solidity,test/libsolidity/smtCheckerTests/options/engine_none.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/parsing/constructor_public_internal.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_dynamic_3_fail.sol,"p();f(uint x, uint y, uint z, uint t, uint w, uint v)"
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct/array_struct_array_struct_storage_safe.sol,f()
ethereum/solidity,test/libsolidity/ASTJSON/array_type_name.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/license/license_cr_endings.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/iceRegressionTests/const_struct_with_mapping.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/shifts/shift_right_negative_literal.sol,"f(int16 x, uint16 y, int16 z);t()"
ethereum/solidity,test/libsolidity/syntaxTests/constructor/nonpayable_new.sol,f()
ethereum/solidity,test/compilationTests/corion/schelling.sol,"replaceOwner(address newOwner);getFunds(address _owner);setFunds(address _owner, uint256 _amount);getRound(uint256 _id);pushRound(uint256 _totalAboveWeight, uint256 _totalBelowWeight, uint256 _reward, uint256 _blockHeight, bool _voted);setRound(uint256 _id, uint256 _totalAboveWeight, uint256 _totalBelowWeight, uint256 _reward, uint256 _blockHeight, bool _voted);getCurrentRound();getVoter(address _owner);setVoter(address _owner, uint256 _roundID, bytes32 _hash, voterStatus _status, bool _voteResult, uint256 _rewards);getSchellingExpansion(uint256 _id);setSchellingExpansion(uint256 _id, uint256 _expansion);setCurrentSchellingRound(uint256 _id);getCurrentSchellingRound();replaceModule(address payable addr);transferEvent(address payable from, address payable to, uint256 value);getFunds(address addr);setFunds(address addr, uint256 amount);setVoter(address owner, _voter memory voter);getVoter(address addr);setRound(uint256 id, _rounds memory round);pushRound(_rounds memory round);getRound(uint256 id);getCurrentRound();setCurrentSchellingRound(uint256 id);getCurrentSchellingRound();setSchellingExpansion(uint256 id, uint256 amount);getSchellingExpansion(uint256 id);configure(announcementType a, uint256 b);prepareVote(bytes32 votehash, uint256 roundID);sendVote(string calldata vote);checkVote();getRewards(address beneficiary);checkReward();nextRound();addFunds(uint256 amount);getFunds();getCurrentSchellingRoundID();getSchellingRound(uint256 id);getRoundWeight(uint256 aboveW, uint256 belowW);isWinner(_rounds memory round, bool aboveVote);getTotalSupply();getTokenBalance(address addr)"
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/try_fine.sol,ext();f();g();h()
ethereum/solidity,test/libsolidity/semanticTests/storage/state_smoke_test.sol,"get(uint8 which);set(uint8 which, uint256 value)"
ethereum/solidity,test/libsolidity/semanticTests/events/events_with_same_name_inherited_emit.sol,"deposit();deposit(address _addr);deposit(address _addr, uint _amount)"
ethereum/solidity,test/libsolidity/semanticTests/events/event_dynamic_array_storage_v2.sol,createEvent(uint x)
ethereum/solidity,test/libsolidity/ASTJSON/event_definition.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/imports/name_clash_in_import_struct_contract_5.sol,""
ethereum/solidity,test/libsolidity/semanticTests/externalContracts/ramanujan_pi.sol,factorial(uint n);prb_scale(uint n);prb_pi()
ethereum/solidity,test/libsolidity/syntaxTests/double_stateVariable_declaration.sol,""
ethereum/solidity,test/libsolidity/semanticTests/storage/array_accessor.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/function_types_fail.sol,f();g();h()
ethereum/solidity,test/libsolidity/syntaxTests/natspec/docstring_double_empty.sol,vote(uint id)
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_struct_member_offset.sol,g(B calldata b);f()
ethereum/solidity,test/libsolidity/syntaxTests/structs/calldata_struct_function_type.sol,f(S calldata s)
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/while_1_break_fail.sol,"f(uint x, bool b)"
ethereum/solidity,test/libsolidity/syntaxTests/dataLocations/variable_declaration_location_specifier_test_reference_type.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/pop/byte_array_pop_long_storage_empty.sol,test()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/mapping_3d_1.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/array/string_pop.sol,test()
ethereum/solidity,test/libsolidity/semanticTests/strings/empty_string_input.sol,"f();g(string calldata msg);h(string calldata msg, uint256 v);i(string calldata msg1, uint256 v, string calldata msg2);j(string calldata msg1, uint256 v)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/526_fallback_marked_external.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/array/slice/calldata_dynamic_forward.sol,f(bytes calldata x)
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/function_type_constructor.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/parsing/event_arguments.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/public_var_parallel_funciton.sol,foo()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/constructor_state_value.sol,f(uint y)
ethereum/solidity,test/libsolidity/syntaxTests/array/invalid/bytes_to_fixed_bytes.sol,"f(bytes calldata c, string memory m)"
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_static_2.sol,"f(uint x, uint y, uint z, uint t)"
ethereum/solidity,test/libsolidity/syntaxTests/functionCalls/int_not_callable.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/super/super_in_function.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/freeFunctions/storage_calldata_refs.sol,"f(uint x, uint[] calldata input);fun(uint[] calldata _x, uint[] storage _y)"
ethereum/solidity,test/libsolidity/semanticTests/externalSource/_source_name_starting_with_dots/dot_dot_b.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_same_local_variables.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/types/address/address_payable_storage_array_conversion_fail.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/specialFunctions/functionCallOptions_err.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/push_as_lhs_2d.sol,f();g()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/this_external_call_sender.sol,test();g()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/245_tuples_empty_components.sol,f()
ethereum/solidity,test/libsolidity/errorRecoveryTests/contract_recovery.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_indirectly_recursive_fixed_array3.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/abstract/abstract_without_contract.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/shifts/shift_left.sol,"f(uint256 a, uint256 b);t()"
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/pop_1_unsafe.sol,f()
ethereum/solidity,test/compilationTests/gnosis/Markets/MarketFactory.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_branch_3d.sol,f(bool b)
ethereum/solidity,test/libsolidity/semanticTests/arithmetics/unchecked_called_by_checked.sol,"add(uint16 a, uint16 b);f(uint16 a)"
ethereum/solidity,test/libsolidity/syntaxTests/imports/name_clash_in_import_struct_contract_2.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/underscore/in_function.sol,f();g();h()
ethereum/solidity,test/libsolidity/syntaxTests/events/inheritance_adds_indexed.sol,""
ethereum/solidity,test/libsolidity/semanticTests/viaYul/dirty_memory_static_array.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/array_3d_assignment.sol,f(uint n)
ethereum/solidity,test/libsolidity/semanticTests/builtinFunctions/ripemd160_empty.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/loops/continue.sol,f();g();h()
ethereum/solidity,test/libsolidity/syntaxTests/constants/cross_file_cyclic.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/storage_reference_empty_slot.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/bool_int_mixed_3.sol,"f(bool x, bool y)"
ethereum/solidity,test/libsolidity/smtCheckerTests/special/gasleft.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/403_return_structs.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/enum_in_library.sol,f(E _d)
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/base_contract_assertion_fail_7.sol,f();v();g();v()
ethereum/solidity,test/libsolidity/smtCheckerTests/inline_assembly/assembly_1.sol,f();g()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct/struct_nested_constructor.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/136_private_visibility_via_explicit_base_access.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/storage/dirty_storage_bytes.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/modifiers/constructor_call_invalid_arg_count.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/internal_call_state_var_init_2.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/functionCalls/named_arguments_wrong_count.sol,"a(uint a, uint b);b()"
ethereum/solidity,test/libsolidity/semanticTests/inheritance/overloaded_function_call_resolve_to_second.sol,"f(uint256 a, uint256 b);f(uint256 k);g()"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/warnUnused/local.sol,f()
ethereum/solidity,test/compilationTests/gnosis/Tokens/OutcomeToken.sol,"issue(address _for, uint outcomeTokenCount);revoke(address _for, uint outcomeTokenCount)"
ethereum/solidity,test/libsolidity/semanticTests/events/event_struct_storage_v2.sol,createEvent(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/iceRegressionTests/large_array_in_memory_struct_2.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/unary_sub_mapping.sol,f(uint x)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/fixed_bytes_2.sol,f(bytes8 y);g()
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/while_nested_continue.sol,"f(uint x, uint y, bool b, bool c)"
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy_diamond.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_merge_variables_6.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/freeFunctions/this_in_free_function.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/modifiers/library_via_using.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_data_location_memory.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/empty_comment.sol,""
ethereum/solidity,test/libsolidity/semanticTests/events/event_really_lots_of_data.sol,deposit()
ethereum/solidity,test/libsolidity/semanticTests/inlineAssembly/inline_assembly_storage_access_inside_function.sol,f();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/division_3.sol,"f(int x, int y)"
ethereum/solidity,test/libsolidity/syntaxTests/parsing/no_function_params.sol,functionName()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/mapping_string_key.sol,set(string memory s)
ethereum/solidity,test/libsolidity/semanticTests/modifiers/function_modifier_overriding.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/libraries/internal_library_function_bound_to_integer.sol,"add(uint256 a, uint256 b);foo(uint256 a, uint256 b)"
ethereum/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/multiVariableDeclarationInvalidType.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/inheritance/access_base_storage.sol,"getViaBase();setData(uint256 base, uint256 derived);getViaDerived()"
ethereum/solidity,test/libsolidity/syntaxTests/functionCalls/arbitrary_parameters_but_restricted_first_type.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/bytes1_to_uint256.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/denominations/finney_invalid.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/overflow/overflow_mul_signed.sol,f(int8 x)
ethereum/solidity,test/libsolidity/semanticTests/libraries/bound_returning_calldata.sol,f(bytes calldata _x);g(bytes calldata _x);f(bytes calldata _x)
ethereum/solidity,test/libsolidity/syntaxTests/memberLookup/push_on_memory_types.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/struct/mediocre_struct.sol,"f(uint a, S[2] memory s1, uint b)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/372_shift_constant_right_fractional.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/types/contractTypeType/members/call_unimplemented_base.sol,f();f()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/mappingReturn/named_fine.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/array_pop_length_2.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/mapping_nonelementary_key_1.sol,""
ethereum/solidity,test/libsolidity/semanticTests/viaYul/comparison_functions.sol,equal();unequal()
ethereum/solidity,test/libsolidity/smtCheckerTests/external_calls/external_call_from_constructor_2.sol,g(uint _x);f()
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/v1_inheritance_from_contract_defining_v2_function_returning_struct.sol,get()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/localStorageVariables/if_declaration_fine.sol,f(bool flag);g(bool flag);h(bool flag);i();j()
ethereum/solidity,test/libsolidity/semanticTests/structs/calldata/calldata_nested_structs.sol,"f(S1 calldata c, uint32 p);g(S2 calldata c);h(S1 calldata c, uint32 p)"
ethereum/solidity,test/libsolidity/semanticTests/storage/complex_accessors.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/metaTypes/typeNotRegularIdentifierParameter.sol,f(uint type)
ethereum/solidity,test/libsolidity/syntaxTests/types/address/payable_address_to_address.sol,f(address payable a)
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy_empty_middle_no_invocation.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/array/length/cannot_be_assigned_struct.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/v1_call_to_v2_library_bound_function_returning_struct.sol,f(uint);test()
ethereum/solidity,test/libsolidity/syntaxTests/largeTypes/oversized_contract.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/structs/memory_to_calldata.sol,f(S calldata s);g(S calldata s)
ethereum/solidity,test/libsolidity/semanticTests/isoltestTesting/storage/storage_empty.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/504_builtin_ripemd160_reject_value.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/tryCatch/returns_memory_anonymous.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/denominations/szabo_invalid.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/array/length/cyclic_constant.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/calldata_array_of_struct_to_memory.sol,f(S[] calldata s)
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/ways_to_merge_variables_1.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/479_explicit_literal_to_memory_string_assignment.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/inlineAssembly/selfbalance.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/revertStrings/transfer.sol,f();h();g()
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/constructor_state_variable_init_diamond.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/types/function_type_external_address.sol,"f(address a, function(uint)"
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_static_3_fail.sol,"f(uint x, uint y, uint z, uint t, uint w, uint v)"
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_trivial_condition_3.sol,f(uint x)
ethereum/solidity,test/libsolidity/semanticTests/libraries/internal_library_function_bound.sol,f(S memory _s);f()
ethereum/solidity,test/libsolidity/syntaxTests/types/rational_number_too_large.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/concat/bytes_concat_3_args.sol,"f(bytes memory a, bytes memory b, bytes memory c)"
ethereum/solidity,test/libsolidity/syntaxTests/modifiers/modifier_overrides_variable.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/immutable/function_initialization_reading.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/bytes_to_fixed_bytes_too_long.sol,fromMemory(bytes memory m);fromCalldata(bytes calldata c);fromStorage();fromSlice(bytes calldata c)
ethereum/solidity,test/libsolidity/syntaxTests/unchecked/unchecked_vardecl.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/modifiers/cross_contract_access.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/dataLocations/publicFunction/function_argument_location_specifier_test_public_calldata.sol,f(bytes calldata)
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/dowhile_fine.sol,f();g();h();i();j();k()
ethereum/solidity,test/libsolidity/syntaxTests/receiveEther/default_visibility.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/347_unused_return_value_call.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/variableDeclaration/do_while.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/fallback/fallback_duplicate_returns.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/constant_condition.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/structs/struct_copy_via_local.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/types/address/address_literal_to_payable.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/externalSource/_external/external.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/array/uninitialized_storage_var.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/112_exp_operator_exponent_too_big.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/functions_storage_var_2_fail.sol,f(uint x);g()
ethereum/solidity,test/libsolidity/semanticTests/libraries/internal_library_function_bound_to_internal_function.sol,double(function(uint);identity(uint x);test(uint value)
ethereum/solidity,test/compilationTests/gnosis/Tokens/EtherToken.sol,deposit();withdraw(uint value)
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/internal_multiple_calls_with_assertion_1_fail.sol,f();g()
ethereum/solidity,test/compilationTests/corion/provider.sol,"connectModule();transferEvent(address payable from, address payable to, uint256 value);newSchellingRoundEvent(uint256 roundID, uint256 reward);configure(announcementType a, uint256 b);getUserDetails(address payable addr, uint256 schellingRound);rightForInterest(uint256 value, bool priv);setRightForInterest(uint256 oldValue, uint256 newValue, bool priv);checkCorrectRate(bool priv, uint8 rate);createProvider(bool priv, string calldata name, string calldata website, string calldata country, string calldata info, uint8 rate, bool isForRent, address payable admin);setProviderDetails(address payable addr, string calldata website, string calldata country, string calldata info, uint8 rate, address payable admin);getProviderInfo(address addr, uint256 height);getProviderDetails(address payable addr, uint256 height);getProviderCurrentSupply(address addr);closeProvider();allowUsers(address provider, address[] calldata addr);disallowUsers(address provider, address[] calldata addr);joinProvider(address provider);partProvider();checkReward(address addr);getReward(address beneficiary, uint256 limit, address provider);getClientReward(uint256 limit);getProviderReward(address addr, uint256 limit);checkFloatingSupply(address providerAddress, uint256 providerHeight, bool neg, uint256 value);checkFloatingOwnSupply(address providerAddress, uint256 providerHeight, bool neg, uint256 value);TEMath(uint256 a, uint256 b, bool neg);transferEvent_(address addr, uint256 value, bool neg);getTokenBalance(address addr);checkICO()"
ethereum/solidity,test/compilationTests/corion/moduleHandler.sol,"connectModule();disconnectModule();replaceModule(address addr);disableModule(bool forever);isActive();replaceModuleHandler(address newHandler);transferEvent(address from, address to, uint256 value);newSchellingRoundEvent(uint256 roundID, uint256 reward);load(address payable foundation, bool forReplace, address payable Token, address payable Premium, address payable Publisher, address payable Schelling, address payable Provider);addModule(modules_s memory input, bool call);getModuleAddressByName(string memory name);getModuleIDByHash(bytes32 hashOfName);getModuleIDByName(string memory name);getModuleIDByAddress(address addr);replaceModule(string calldata name, address payable addr, bool callCallback);callReplaceCallback(string calldata moduleName, address newModule);newModule(string calldata name, address payable addr, bool schellingEvent, bool transferEvent);dropModule(string calldata name, bool callCallback);callDisableCallback(string calldata moduleName);broadcastTransfer(address from, address to, uint256 value);broadcastSchellingRound(uint256 roundID, uint256 reward);replaceModuleHandler(address newHandler);balanceOf(address owner);totalSupply();isICO();getCurrentSchellingRoundID();mint(address to, uint256 value);transfer(address from, address to, uint256 value, bool fee);processTransactionFee(address from, uint256 value);burn(address from, uint256 value);configureModule(string calldata moduleName, announcementType aType, uint256 value);freezing(bool forever)"
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/functions_trivial_condition_for.sol,f(bool x)
ethereum/solidity,test/libsolidity/syntaxTests/types/rational_number_huge_fail.sol,f(uint y)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct_array_branches_2d.sol,f(bool b)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/293_function_is_not_a_valid_typename.sol,foo();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/file_level/easy.sol,"add(uint a, uint b);f(uint x);g()"
ethereum/solidity,test/libsolidity/ASTJSON/assembly/empty_block.sol,g()
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/function_parameter_allowed_conversions.sol,test(function();test(function();f();g();h();i();j(function();testPure();testView();testDefault()
ethereum/solidity,test/cmdlineTests/ast_json_import_wrong_evmVersion/input.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/assignment_to_function.sol,f();f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/typeChecking/function_call.sol,"f();g(uint256, bool)"
ethereum/solidity,test/libsolidity/syntaxTests/parsing/function_type_multiple_visibility.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/function_external_call_should_not_inline_2.sol,h(bool b);setOwner(address _owner)
ethereum/solidity,test/libsolidity/syntaxTests/types/struct_mapping_recursion.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/scoping/library_inherited2.sol,foo(uint256 value);bar(uint256 value)
ethereum/solidity,test/libsolidity/syntaxTests/conversion/explicit_conversion_address_to_payable.sol,g(address payable _p);f(address _a)
ethereum/solidity,test/libsolidity/ASTJSON/assembly/var_access.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/returnExpressions/single_return_mismatching_type.sol,g()
ethereum/solidity,test/libsolidity/syntaxTests/license/license_hidden_unicode.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/array/calldata_multi_dynamic_V1.sol,f(uint[][] calldata);g(uint[][1] calldata)
ethereum/solidity,test/libsolidity/syntaxTests/underscore/as_function.sol,_();g();h()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/getters/nested_arrays_mappings_6.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_return_external.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/inlineAssembly/inline_assembly_write_to_stack.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/functionCall/external_call_dynamic_returndata.sol,d(uint n);dt(uint n)
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/solidity_keywords.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/181_override_changes_return_types.sol,f(uint a);f(uint a)
ethereum/solidity,test/cmdlineTests/model_checker_contracts_contract_missing/input.sol,f(uint x);g(uint y)
ethereum/solidity,test/cmdlineTests/model_checker_contracts_source_missing/input.sol,f(uint x);g(uint y)
ethereum/solidity,test/cmdlineTests/model_checker_contracts_inexistent_contract/input.sol,f(uint x);g(uint y)
ethereum/solidity,test/cmdlineTests/model_checker_contracts_empty_contract/input.sol,f(uint x);g(uint y)
ethereum/solidity,test/cmdlineTests/model_checker_contracts_inexistent_source/input.sol,f(uint x);g(uint y)
ethereum/solidity,test/cmdlineTests/model_checker_contracts_one_contract_missing/input.sol,f(uint x);g(uint y)
ethereum/solidity,test/cmdlineTests/model_checker_contracts_empty_source/input.sol,f(uint x);g(uint y)
ethereum/solidity,test/cmdlineTests/model_checker_contracts_all/input.sol,f(uint x);g(uint y)
ethereum/solidity,test/cmdlineTests/model_checker_contracts_all_explicit/input.sol,f(uint x);g(uint y)
ethereum/solidity,test/cmdlineTests/model_checker_contracts_only_one/input.sol,f(uint x);g(uint y)
ethereum/solidity,test/libsolidity/semanticTests/array/copying/array_copy_clear_storage_packed.sol,f();g();h()
ethereum/solidity,test/libsolidity/syntaxTests/specialFunctions/abi_encode_structs_abiv2.sol,e();f();g()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/array_copy_storage_storage_static_simple.sol,test()
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/push_as_lhs_bytes.sol,f();g()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/type_expression_array_2d.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/525_reject_interface_constructors.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/array/bytes_to_fixed_bytes.sol,"f(bytes calldata c, string memory m)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/shadowsBuiltin/variables.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/array/slice/bytes_memory.sol,f(bytes memory x)
ethereum/solidity,test/libsolidity/syntaxTests/types/address/address_in_struct_fail.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_branch_2d.sol,f(bool b)
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/v2_call_to_v2_contract_function_returning_struct.sol,get();foo()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/functions_trivial_condition_require_only_call.sol,f(bool x);g()
ethereum/solidity,test/libsolidity/syntaxTests/scoping/double_variable_declaration_same_scope.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/bytesNN_with_oversized_hex_string.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/multiSource/free_different_interger_types.sol,f(uint24);g(bool);foo()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/shifts/shift_left_uint32.sol,"f(uint32 a, uint32 b);t()"
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/public_function_type.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/illegal_names.sol,f();this();super();_();a(this);b(super);c(_);d();g();c()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_multiple_fail4.sol,foo()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/array_copy_clear_storage.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/comparison_of_function_types_gt_2.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/tryCatch/wrong_panic.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/immutable/indirect_reading_during_statevar_init.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/revertStrings/unknown_sig_no_fallback.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/structs/recursion/return_recursive_structs.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/push/byte_array_push_transition.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/license/license_nonempty_line.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/dataLocations/internalFunction/function_argument_location_specifier_test_internal_storage.sol,f(bytes storage)
ethereum/solidity,test/libsolidity/semanticTests/types/mapping_enum_key_getter_v1.sol,"set(E k, uint8 v);get(E k)"
ethereum/solidity,test/libsolidity/syntaxTests/imports/name_clash_in_import_contract_struct_5.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/multiple_assign_to_instruction.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/235_abi_encode_with_large_integer_constant.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/state_var_initialization.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/disallow_modifier_style_without_parentheses.sol,""
ethereum/solidity,test/libsolidity/semanticTests/structs/calldata/calldata_struct_to_storage.sol,"f(uint32 a, S calldata c, uint256 b)"
ethereum/solidity,test/libsolidity/semanticTests/isoltestTesting/effects.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/types/hex_literal_to_bytesNN_different_size_explicit.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/events/event_string.sol,deposit()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/calldata_array_index_range_access.sol,"f(uint256[] calldata x, uint256 s, uint256 e);f(uint256[] calldata x, uint256 s, uint256 e, uint256 ss, uint256 ee);f_s_only(uint256[] calldata x, uint256 s);f_e_only(uint256[] calldata x, uint256 e);g(uint256[] calldata x, uint256 s, uint256 e, uint256 idx);gg(uint256[] calldata x, uint256 s, uint256 e, uint256 idx);gg_s_only(uint256[] calldata x, uint256 s, uint256 idx);gg_e_only(uint256[] calldata x, uint256 e, uint256 idx)"
ethereum/solidity,test/libsolidity/smtCheckerTests/file_level/libraries_from_free.sol,pub();inter();fu();f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/171_assignment_to_const_array_vars.sol,""
ethereum/solidity,test/libsolidity/semanticTests/calldata/calldata_string_array.sol,f(string[] calldata a)
ethereum/solidity,test/libsolidity/semanticTests/various/memory_overwrite.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/isoltestFormatting.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/state/uncalled_blockhash.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/storage_array_encoding.sol,h(uint256[2][] calldata s);i(uint256[2][2] calldata s)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/mapping_1_fail.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/scoping/scoping_for.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/018_forward_function_reference.sol,"fun();fun(uint, bool, uint)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/189_string_length.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/external_library_function_to_external_function_type.sol,f(uint256 _a);run(function(uint256);test()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/214_assignment_mem_storage_variable_directly.sol,f(uint[] memory x)
ethereum/solidity,test/libsolidity/syntaxTests/constructor/constructor_virtual.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/v1_inheritance_from_contract_defining_v2_event.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/natspec/docstring_too_many_return_tags.sol,vote(uint id)
ethereum/solidity,test/libsolidity/semanticTests/tryCatch/malformed_panic_2.sol,f(uint size);a();b();c();d()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/tuple_assignment.sol,g()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/single_modifier_arg_trailing_comma.sol,""
ethereum/solidity,test/libsolidity/semanticTests/various/address_code.sol,f();g();h()
ethereum/solidity,test/libsolidity/semanticTests/constants/constant_string.sol,f();g();h()
ethereum/solidity,test/libsolidity/syntaxTests/types/function_types/function_state_mutability_success.sol,internalPureFunc(uint256 x);internalViewFunc(uint256 x);internalMutableFunc(uint256 x);externalPureFunc(uint256 x);externalViewFunc(uint256 x);externalPayableFunc(uint256 x);externalMutableFunc(uint256 x);funcTakesInternalPure(function(uint256);funcTakesInternalView(function(uint256);funcTakesInternalMutable(function(uint256);funcTakesExternalPure(function(uint256);funcTakesExternalView(function(uint256);funcTakesExternalPayable(function(uint256);funcTakesExternalMutable(function(uint256);tests()
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/shift_right_garbled_signed_v2.sol,"f(int8 a, uint8 b);g(int8 a, uint8 b)"
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/contract_mapping_invalid.sol,"f(I x, J y, address z)"
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/base_arguments_multiple_inheritance.sol,""
ethereum/solidity,test/libsolidity/semanticTests/functionCall/inheritance/base_base_overload.sol,"init(uint a, uint b);init(uint a);init(uint a, uint b);init(uint a);cInit(uint c);cInit(uint c, uint d);bInit(uint c);bInit(uint c, uint d)"
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/virtual_function_call_inside_branch_1.sol,approve();_approve();_approve()
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV1/struct/struct_storage_ptr.sol,"f(uint[] storage r, S storage s);f()"
ethereum/solidity,test/libsolidity/syntaxTests/scoping/scoping_activation_old.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/scoping/scoping_activation.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/struct/struct_validation.sol,f(S memory s)
ethereum/solidity,test/libsolidity/semanticTests/viaYul/unary_fixedbytes.sol,conv(bytes25 a);upcast(bytes25 a);downcast(bytes25 a)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/053_hash_collision_in_interface.sol,gsf();tgeo()
ethereum/solidity,test/libsolidity/syntaxTests/events/function_event_inheritance_clash.sol,dup()
ethereum/solidity,test/libsolidity/semanticTests/types/convert_fixed_bytes_to_uint_same_min_size.sol,bytesToUint(bytes1 s)
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_data_location_default.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/assembly/for_fine.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/revertStatement/using_struct.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/enum_inheritance_interface.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_struct_recusrive_data_location_memory.sol,f(U memory)
ethereum/solidity,test/libsolidity/smtCheckerTests/natspec/abstract_function_nondet_pow_with_abstraction.sol,"e(uint _e);pow(uint base, uint exponent)"
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/functions_identity_2_fail.sol,h(uint x);k(uint x);g()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/conversion/explicit_cast_local_assignment.sol,f(uint a)
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/comparison_of_function_types_gt_1.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/tuple_extra_parens_1.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/abi/abi_encode_with_selector_array_slice.sol,"abiEncodeSlice(bytes4 sel, bytes calldata data)"
ethereum/solidity,test/libsolidity/smtCheckerTests/overflow/signed_mul_overflow.sol,"f(int x, int y)"
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/function_type_arrays.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/bmc_coverage/assert.sol,f(uint x);g(uint x);h(uint x);i(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/v2_v1_v1_modifier_sandwich.sol,get();foo()
ethereum/solidity,test/libsolidity/semanticTests/uninitializedFunctionPointer/storeInConstructor.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/evm_exceptions_out_of_band_access.sol,getElement(uint256 i);testIt()
ethereum/solidity,test/libsolidity/smtCheckerTests/overflow/safe_sub_1.sol,"sub(uint256 a, uint256 b)"
ethereum/solidity,test/libsolidity/syntaxTests/immutable/delete_and_initialize.sol,""
ethereum/solidity,test/libsolidity/ABIJson/return_structs_with_contracts.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/two_stack_slot_access.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/two_stack_slots.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/do_while_1_fail.sol,f(uint x)
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/compound_bitwise_xor_int.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/typecast/cast_smaller_3.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/overflow/signed_mod_overflow.sol,"f(int x, int y)"
ethereum/solidity,test/libsolidity/syntaxTests/types/address/contract_payable_fallback_to_payable_address.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/252_using_for_not_library.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/types/contractTypeType/members/function_via_contract_name_private.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/359_illegal_override_payable_nonpayable.sol,f();f()
ethereum/solidity,test/libsolidity/syntaxTests/literals/unicode_string_direction_override_7.sol,f()
ethereum/solidity,test/libsolidity/gasTests/dispatch_large_optimised.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/specialFunctions/abidecode/abi_decode_invalid_arg_type.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/scoping/state_variable_function_conflict.sol,f(uint)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/shadowsBuiltin/parameters.sol,f(uint require)
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/shift_left_assignment_different_type.sol,"f(uint256 a, uint8 b)"
ethereum/solidity,test/libsolidity/syntaxTests/types/rational_number_mul_limit.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/array_push_string_literal.sol,g()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/406_invalid_address_checksum.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/file_level/overloads.sol,f(uint);f(string memory);g()
ethereum/solidity,test/libsolidity/syntaxTests/indexing/fixedbytes_negative_index.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/constructor_state_variable_init_asserts.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/array/library_array.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/out_of_bounds/fixed_bytes_3.sol,"r(bytes32 x, uint y)"
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/conditional_assignment_2.sol,f(uint b)
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV1/bool_out_of_bounds.sol,f(bool b)
ethereum/solidity,test/libsolidity/smtCheckerTests/try_catch/try_nested_2.sol,g();f()
ethereum/solidity,test/libsolidity/syntaxTests/immutable/uninitialized_private_state_var.sol,f();readX();f()
ethereum/solidity,test/libsolidity/syntaxTests/types/encoding_packed_fractional_abiencoderv2.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/external_calls/external_inc1_inc2.sol,d();f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/virtual/duplicate.sol,foo()
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/internal_function_as_external_parameter.sol,f(function(uint)
ethereum/solidity,test/libsolidity/syntaxTests/parsing/mapping.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/parsing/constructor_internal_internal.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/getters/nested_arrays_mappings_1.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/shift_right_negative_lvalue_signextend_int16_v2.sol,"f(int16 a, uint16 b)"
ethereum/solidity,test/libsolidity/smtCheckerTests/special/msg_value_3.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/types/address/address_abi_decode.sol,f(bytes memory b)
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_multiple_fail1.sol,foo()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/295_bytes10abc_is_identifier.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_overriding_4.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/conditional/conditional_tuple.sol,f(bool cond)
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/function_types_variable_visibility.sol,""
ethereum/solidity,test/libsolidity/ASTJSON/constructor.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/v2_call_to_v2_constructor_accepting_struct.sol,foo()
ethereum/solidity,test/libsolidity/semanticTests/multiSource/reimport_imported_function.sol,f();foo()
ethereum/solidity,test/libsolidity/semanticTests/enums/using_enums.sol,getChoice()
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/external_function_type_taking_internal.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/types/cyclic_dependency_check_on_struct_exhausted.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/callvalue_payable_assembly_function_modifier.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/cleanup/cleanup_bytes_types_v2.sol,"f(bytes2 a, uint16 x)"
ethereum/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_multi_functions.sol,"g(uint a, uint b);f(uint x)"
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/function_type.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/single_return_param_trailing_comma.sol,""
ethereum/solidity,test/libsolidity/semanticTests/functionCall/inheritance/call_base_base.sol,f(uint n);s(uint n);f(uint n);g(uint n);h(uint n)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/function_type_members.sol,f(function(uint)
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/shifts/shift_right_negative_lvalue_int16.sol,"f(int16 a, uint16 b);t()"
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV1/abi_encode_empty_string.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/try_catch/try_call_in_catch_2.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/bytecodeReferences/cyclic_dep_exhaustion.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/metaTypes/codeAccessCyclic.sol,f();f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/tuples.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/bug10821-require.sol,testFunc()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_dynamic_2.sol,"f(uint x, uint y, uint z, uint t)"
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/length_same_after_assignment_2_fail.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/067_function_clash_with_state_variable_accessor.sol,fun();foo()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_dynamic_3.sol,"f(uint x, uint y, uint z, uint t, uint w, uint v)"
ethereum/solidity,test/libsolidity/syntaxTests/scoping/library_inherited.sol,foo(uint256 value);bar(uint256 value)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/192_positive_integers_to_signed_out_of_bound.sol,""
ethereum/solidity,test/libsolidity/semanticTests/inlineAssembly/chainid.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/array/length/complex_cyclic_constant.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/476_too_large_arrays_for_calldata_external.sol,f(uint[85678901234] calldata a)
ethereum/solidity,test/libsolidity/smtCheckerTests/out_of_bounds/array_4.sol,p();r(uint i)
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/internal_function_returned_from_public_function.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/159_storage_variable_initialization_with_incorrect_type_string.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_array_assignment_memory_memory.sol,"testUnboundedForLoop(uint n, uint[] memory b, uint[] memory c)"
ethereum/solidity,test/libsolidity/syntaxTests/specialFunctions/abidecode/abi_decode_struct.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/array_copy_cleanup_uint40.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/conditional/conditional_true_false_literal.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/functions_identifier_nested_tuple_1.sol,f();inc()
ethereum/solidity,test/libsolidity/syntaxTests/functionCalls/named_arguments_overload_failing_ambiguous_implicit_conversion.sol,"f(uint x, string memory y);f(bytes memory y, int x);call()"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/287_conditional_expression_with_different_mapping.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/structs/calldata/calldata_struct_with_bytes_to_memory.sol,f(S calldata c)
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_array_return_external.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/string/string_multipart_hex_valid_parts.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/error_deprecate_value_constructor.sol,createC()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/diamond_interface_intermediate_public_state_variable.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/revertStrings/calldata_array_invalid_length.sol,f(uint256[][] calldata x)
ethereum/solidity,test/libsolidity/syntaxTests/literals/unicode_string_direction_override_5.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/address/bytes_to_payable_address.sol,f(bytes20 x)
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/conditional_assignment_function_1.sol,f(uint a);g(uint a)
ethereum/solidity,test/libsolidity/syntaxTests/modifiers/illegal_name.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inline_arrays/lvalues_as_inline_array.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/446_no_unused_warning_abstract_arguments.sol,f(uint a)
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/slice_default_start.sol,f(bytes calldata b)
ethereum/solidity,test/libsolidity/syntaxTests/types/address/type_type_to_address.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/tryCatch/structuredAndLowLevel.sol,g(bool b);f(bool cond)
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/constructor_hierarchy_base_calls_with_side_effects_1.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/unary_add_array.sol,p();f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/invalidArgs/creating_struct_members_skipped.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/ternary_fine.sol,f(bool flag);g(bool flag);h(bool flag)
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/conditional_assignment_5.sol,d();g();f();h()
ethereum/solidity,test/libsolidity/semanticTests/types/convert_uint_to_fixed_bytes_same_min_size.sol,UintToBytes(uint8 h)
ethereum/solidity,test/libsolidity/syntaxTests/conversion/not_allowed_conversion_from_super.sol,foo();fii()
ethereum/solidity,test/libsolidity/smtCheckerTests/typecast/function_type_to_function_type_internal.sol,f(function(uint);g()
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/call_value_on_payable_function_type.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/immutable/function_pointer_reading.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/detect_double_override.sol,test()
ethereum/solidity,test/libsolidity/ABIJson/internal_constructor.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/metaTypes/super_name.sol,"compareStrings(string memory s1, string memory s2);f();f();f();f()"
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/assembly_err.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/struct/struct_short.sol,f(S memory s)
ethereum/solidity,test/libsolidity/syntaxTests/inline_arrays/unnamed_types_in_inline_array_1.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/rational_number_literal_limit_1.sol,bignum()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/assembly/returning_function.sol,f();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/bmc_coverage/branches_with_return/return_in_both_branches.sol,test();branches(uint256 a)
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/diamond_interface_empty_intermediate_public_state_variable_and_function.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/array/invalidCopy/calldata_to_memory_different_base.sol,f(bytes8[] calldata c)
ethereum/solidity,test/libsolidity/syntaxTests/parsing/max_depth_reached_1.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/parsing/assembly_invalid_type.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/immutable/writing_after_initialization_modifier.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/compound_assignment_division_1.sol,f(uint x)
ethereum/solidity,test/libsolidity/semanticTests/tryCatch/panic.sol,"uf(bool b, uint x, uint y);onlyPanic(bool b, uint x, uint y);panicAndError(bool b, uint x, uint y)"
ethereum/solidity,test/libsolidity/semanticTests/tryCatch/simple_notuple.sol,g(bool b);f(bool flag)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/341_rational_bitand_binary_operation.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/push_struct_member_2.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/receiveEther/old_syntax.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/compound_sub_mapping.sol,"f(uint x, uint p)"
ethereum/solidity,test/libsolidity/syntaxTests/imports/import_does_not_clutter_importee.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/constants/assign_constant_function_value.sol,""
ethereum/solidity,test/libsolidity/semanticTests/expressions/conditional_expression_storage_memory_2.sol,f(bool cond)
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/bitwise_or_fixed_bytes.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/slices_1.sol,f(bytes calldata x)
ethereum/solidity,test/libsolidity/semanticTests/smoke/multiline_comments.sol,"f(uint a, uint b, uint c, uint d, uint e)"
ethereum/solidity,test/externalTests/solc-js/DAO/DAO.sol,"receiveEther();newContract(address payable _newContract);changeAllowedRecipients(address _recipient, bool _allowed);changeProposalDeposit(uint _proposalDeposit);retrieveDAOReward(bool _toMembers);getMyReward();withdrawRewardFor(address payable _account);transferWithoutReward(address _to, uint256 _amount);halveMinQuorum();numberOfProposals();getNewDAOAddress(uint _proposalID);isBlocked(address _account);unblockMe();receiveEther();closeProposal(uint _proposalID);newContract(address payable _newContract);retrieveDAOReward(bool _toMembers);getMyReward();withdrawRewardFor(address payable _account);transfer(address _to, uint256 _value);transferWithoutReward(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);changeProposalDeposit(uint _proposalDeposit);changeAllowedRecipients(address _recipient, bool _allowed);isRecipientAllowed(address _recipient);actualBalance();minQuorum(uint _value);halveMinQuorum();createNewDAO(address payable _newCurator);numberOfProposals();getNewDAOAddress(uint _proposalID);isBlocked(address _account);unblockMe()"
ethereum/solidity,test/libsolidity/semanticTests/state/block_timestamp.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/structs/calldata.sol,f(S calldata)
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_ambiguous.sol,foo();foo();test();test()
ethereum/solidity,test/libsolidity/syntaxTests/natspec/invalid/docstring_inheritdoc_emptys.sol,f();f();f();f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/011_type_conversion_for_comparison_invalid.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/abstract/abstract_contract_because_of_interface.sol,utterance()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/this_external_call_return.sol,f(uint y);g(uint y)
ethereum/solidity,test/libsolidity/semanticTests/externalContracts/prbmath_signed.sol,"div(int256 x, int256 y);exp(int256 x);gm(int256 x, int256 y);mul(int256 x, int256 y);pow(int256 x, uint256 y);sqrt(int256 x);benchmark(int256 x)"
ethereum/solidity,test/libsolidity/syntaxTests/structs/recursion/return_recursive_structs3.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/function_no_body.sol,functionName(bytes32 input)
ethereum/solidity,test/libsolidity/syntaxTests/types/zero_literal_to_bytesNN_explicit.sol,f();g();h()
ethereum/solidity,test/cmdlineTests/message_format/input.sol,f();g();h()
ethereum/solidity,test/libsolidity/semanticTests/array/calldata_array_two_dimensional.sol,"test(uint256[][2] calldata a);test(uint256[][2] calldata a, uint256 i);test(uint256[][2] calldata a, uint256 i, uint256 j);reenc(uint256[][2] calldata a, uint256 i, uint256 j)"
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/shift_right_negative_lvalue_assignment.sol,"f(int256 a, uint256 b)"
ethereum/solidity,test/libsolidity/semanticTests/functionTypes/same_function_in_construction_and_runtime.sol,double(uint256 _arg);runtime(uint256 _arg)
ethereum/solidity,test/libsolidity/syntaxTests/constructor/constructor_function_parameter_disallowed_conversion.sol,f();f();testPure();testView();testDefault();testDifferentSignature(uint a);testInternalFunction()
ethereum/solidity,test/libsolidity/semanticTests/types/array_mapping_abstract_constructor_param.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/invalidArgs/creating_struct.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/msg_value_modifier_view.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/license/license_no_whitespace.sol,""
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array_function_types.sol,f(function();f_reenc(function();g(bool reenc)
ethereum/solidity,test/libsolidity/syntaxTests/conversion/function_type_nonpayable_payable.sol,h();f()
ethereum/solidity,test/libsolidity/semanticTests/modifiers/modifier_init_return.sol,f(uint x)
ethereum/solidity,test/libsolidity/semanticTests/events/event_indexed_mixed.sol,deposit()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/storage/dirty_storage_bytes_long.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/bound/bound_no_call.sol,double(uint self);f(uint a)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/256_using_for_overload.sol,"mul(s storage self, uint x);mul(s storage, bytes32);f(uint a)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/285_conditional_expression_with_different_function_type.sol,x(bool);y();f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/254_using_for_function_on_int.sol,double(uint self);f(uint a)
ethereum/solidity,test/libsolidity/syntaxTests/specialFunctions/encodePacked_dynamic_string_array_v2.sol,f();g()
ethereum/solidity,test/libsolidity/smtCheckerTests/try_catch/try_call_in_catch_1.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/license/license_multiline.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/assembly/reverting_function.sol,f();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/out_of_bounds/fixed_bytes_2.sol,"r(bytes4 x, uint y)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/275_inline_struct_declaration_arrays.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/conversion/function_type_pure_payable.sol,h();f()
ethereum/solidity,test/libsolidity/semanticTests/inlineAssembly/inline_assembly_recursion.sol,f(uint256 a);fac(n)
ethereum/solidity,test/libsolidity/syntaxTests/constructor/constructor_visibility.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/multiSource/reimport_imported_function.sol,f();foo()
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/delete_external_function_type_invalid.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/pop_constructor_unsafe.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/extcodehash_as_variable_post_constantinople.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/462_callable_crash.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/262_bound_function_in_var.sol,"mul(s storage self, uint x);f(uint a)"
ethereum/solidity,test/libsolidity/syntaxTests/types/address/contract_receive_to_payable_address.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/functionCall/mapping_array_internal_argument.sol,"set_internal(mapping(uint8 => uint8);set(uint8 key, uint8 value_a1, uint8 value_a2, uint8 value_b1, uint8 value_b2);get(uint8 key)"
ethereum/solidity,test/libsolidity/semanticTests/errors/weird_name.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/multiSource/free_function_resolution_override_virtual_transitive.sol,f();g();g();g()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/elementary_non_address_payable_local.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/address_transfer_2.sol,"f(uint x, address payable a, address payable b)"
ethereum/solidity,test/scripts/fixtures/smt_contract_with_cr_newlines.sol,""
ethereum/solidity,test/libsolidity/semanticTests/viaYul/exp_literals_success.sol,exp_uint_max(uint y);exp_int_max(uint y)
ethereum/solidity,test/libsolidity/syntaxTests/array/contract_index_access.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/constructor/constructor_function_argument.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/super_on_external.sol,f();f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/289_uint7_and_uintM_as_identifier.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/freeFunctions/function_same_name_as_contract.sol,C()
ethereum/solidity,test/libsolidity/syntaxTests/errors/selector_on_instance.sol,""
ethereum/solidity,test/libsolidity/semanticTests/viaYul/detect_sub_overflow_signed.sol,"f(int a, int b);g(int8 a, int8 b)"
ethereum/solidity,test/libsolidity/syntaxTests/literals/hex_string_underscores_valid.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/bmc_coverage/math_constructor.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/license/license_in_string.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/overflow/unsigned_mod_overflow.sol,"f(uint x, uint y)"
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/view_pure_abi_encode.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/immutable/ctor_modifier_reading.sol,f(uint a)
ethereum/solidity,test/libsolidity/semanticTests/array/copying/storage_memory_nested_struct.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/push_storage_ref_unsafe_aliasing.sol,f()
ethereum/solidity,test/libsolidity/ASTJSON/non_utf8.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/push/array_push_nested_from_calldata.sol,f(uint120[] calldata c)
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_shared_base_partial.sol,f();f();f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/unary_plus_expression.sol,f(uint x)
ethereum/solidity,test/libsolidity/smtCheckerTests/bmc_coverage/msg_value_4.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/modifiers/illegal_modifier_override.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/156_array_copy_with_different_types_dynamic_static.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/builtinFunctions/function_types_sig.sol,f();g();h();i()
ethereum/solidity,test/libsolidity/semanticTests/multiSource/free_function_resolution_override_virtual.sol,f();g();g()
ethereum/solidity,test/libsolidity/smtCheckerTests/special/abi_encode_slice.sol,f(bytes calldata data)
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/overriden_function_static_call_parent.sol,"init(uint a, uint b);init(uint a, uint b);bInit(uint c, uint d)"
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/natspec/docstring_empty_tag.sol,vote(uint id)
ethereum/solidity,test/libsolidity/syntaxTests/types/address/address_constant.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/structs/struct_memory_to_storage.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/address/address_constant_assignment.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/access_to_base_member_struct.sol,f();g();h()
ethereum/solidity,test/libsolidity/semanticTests/storage/mapping_string_key.sol,"set(string calldata key, uint value);get(string calldata key);setFixed(uint value);getFixed()"
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/compound_assignment_right_shift.sol,"f(int a, uint b)"
ethereum/solidity,test/libsolidity/syntaxTests/scoping/access_in_assignment_struct.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/assignment_contract_member_variable_array_2.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/structs/calldata/calldata_struct_with_array_to_memory.sol,f(S calldata c)
ethereum/solidity,test/libsolidity/syntaxTests/events/event_struct.sol,""
ethereum/solidity,test/libsolidity/semanticTests/array/pop/byte_array_pop_long_storage_empty_garbage_ref.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/duplicateFunctions/illegal_names_functions.sol,_();super();this()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/common_base_and_unique_implementation.sol,f();g();f();g();g();f()
ethereum/solidity,test/libsolidity/semanticTests/storage/packed_storage_overflow.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/contractTypeType/members/function_via_contract_name_internal.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/tryCatch/low_level_with_wrong_type.sol,f()
ethereum/solidity,test/externalTests/solc-js/DAO/ManagedAccount.sol,"payOut(address payable _recipient, uint _amount);payOut(address payable _recipient, uint _amount)"
ethereum/solidity,test/libsolidity/syntaxTests/specialFunctions/types_with_unspecified_encoding_internal_functions.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/structs/recursion/static_array_of_recursive_structs.sol,func()
ethereum/solidity,test/libsolidity/semanticTests/inheritance/super_overload.sol,f(uint256 a);f(bool b);g();h()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/assembly/for_err.sol,f();g();h();i()
ethereum/solidity,test/libsolidity/semanticTests/revertStrings/enum_v2.sol,f(E[] calldata arr)
ethereum/solidity,test/libsolidity/syntaxTests/freeFunctions/circular_referencecontracts_first.sol,f();l();s()
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/callvalue_nonpayable_assembly_fallback.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/assembly/for_continue.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/asmForLoop/for_loop_nested.sol,f(uint x)
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/shifts/shift_underflow_negative_rvalue.sol,"f(int256 a, uint256 b);g(int256 a, uint256 b);t()"
ethereum/solidity,test/libsolidity/syntaxTests/tryCatch/invalid_returns.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/structs/calldata/calldata_struct_as_argument_of_lib_function.sol,"f(S1 memory m, uint32 p);f(S1 calldata c, uint32 p)"
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct/struct_recursive_5.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/conversion/explicit_conversion_this_to_payable.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/comment_end_with_double_star.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/inline_assembly/assembly_3.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_virtual_static_call_2.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/structs/member_type_eq_name_2.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/370_shift_constant_left_excessive_rvalue.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/constant_nested_mapping.sol,""
ethereum/solidity,test/libsolidity/semanticTests/array/fixed_out_of_bounds_array_access.sol,"set(uint256 index, uint256 value);get(uint256 index);length()"
ethereum/solidity,test/libsolidity/syntaxTests/parsing/function_normal_comments.sol,functionName(bytes32 input)
ethereum/solidity,test/libsolidity/semanticTests/constructor_inheritance_init_order.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/scoping/name_shadowing_function_parameter_name_vs_contract.sol,f(uint I);f(uint L);f(uint A);g(uint A);f(uint C)
ethereum/solidity,test/libsolidity/syntaxTests/bound/bound_call.sol,double(uint self);f(uint a)
ethereum/solidity,test/libsolidity/semanticTests/enums/enum_explicit_overflow.sol,getChoiceExp(uint256 x);getChoiceFromSigned(int256 x);getChoiceFromMax()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/inline_array_declaration.sol,f()
ethereum/solidity,test/compilationTests/corion/tokenDB.sol,"increase(address owner, uint256 value);decrease(address owner, uint256 value);setAllowance(address owner, address spender, uint256 amount, uint256 nonce);getAllowance(address owner, address spender)"
ethereum/solidity,test/libsolidity/syntaxTests/types/address/literal_to_address_oversized.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/dot_in_fundecl.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/fallback/fallback_override.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/revertStrings/invalid_abi_decoding_calldata_v1.sol,d(bytes memory _data)
ethereum/solidity,test/libsolidity/syntaxTests/types/rational_number_exp_limit_fail.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/negation.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/conditional_assignment_1.sol,f(bool b)
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/index_access_for_bytes.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/110_no_overflow_with_large_literal.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/types/fixed_bytes_access_6.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/salted_create/salted_create.sol,different_salt();same_salt()
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_with_return/constructor_state_variable_init.sol,""
ethereum/solidity,test/libsolidity/semanticTests/various/code_access_create.sol,f();test()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/396_invalid_mobile_type.sol,f()
ethereum/solidity,test/libsolidity/ASTJSON/assembly/function.sol,h();g()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/single_event_arg_trailing_comma.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_branches_3d.sol,f(bool b)
ethereum/solidity,test/libsolidity/semanticTests/structs/memory_structs_read_write.sol,testInit();testCopyRead();testAssign()
ethereum/solidity,test/libsolidity/smtCheckerTests/special/chainid.sol,f()
ethereum/solidity,test/cmdlineTests/ir_with_assembly_no_memoryguard_creation/input.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/constructor/order_of_evaluation.sol,f(uint _x);g()
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/for_1_false_positive.sol,f(uint x)
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/library_after_contract.sol,g(uint y);f(uint x)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/tuple_assignment_compound.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/new_invalid_type_name.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/shadowing/local_function_by_opcode.sol,"add(uint, uint);g()"
ethereum/solidity,test/libsolidity/syntaxTests/structs/recursion/recursive_struct_nested_mapping_memory.sol,d(b memory)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/075_fallback_function_with_arguments.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/circular_module_access_err.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/strings/empty_string.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/interface/linearization/invalid/lists_a.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/ternary_err.sol,f(bool flag);g(bool flag)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/574_similar_name_shorter_than_80_suggested.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/196_integer_boolean_or.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/v2_v1_v2_modifier_sandwich.sol,get();foo()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/internal_external.sol,f(uint[] calldata);f(uint[] memory)
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array_two_dynamic.sol,"f(uint256[] calldata s1, uint256[] calldata s2, bool which);g(uint256[] calldata s1, uint256[] calldata s2, bool which)"
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/interface/overrides_multiple.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/immutable/uninitialized.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/types/var_empty_decl_1.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/498_msg_gas_deprecated.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/dataLocations/externalFunction/function_argument_location_specifier_test_external_calldata.sol,f(bytes calldata)
ethereum/solidity,test/libsolidity/syntaxTests/parsing/location_specifiers_for_locals.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/immutable/inheritance_wrong_ctor.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/modifiers/non_implemented_modifer.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/var_decl_val_mismatch.sol,""
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV1/return_dynamic_types_cross_call_out_of_range_2.sol,dyn(uint x);f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/356_payable_internal.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/external_calls/external_safe.sol,d();f();g()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/206_storage_location_local_variables.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/max_depth_reached_2.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/uninitializedFunctionPointer/invalidStoredInConstructor.sol,f();f()
ethereum/solidity,test/libsolidity/syntaxTests/conversion/implicit_conversion_from_array_of_string_literals_to_calldata_string.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/structs/address_member_declaration.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/types/address/address_to_payable_address_double.sol,f(address a)
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_struct_simple.sol,f(S calldata s);g(S calldata s)
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/local_variable_access_out_of_functions.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/structs/calldata/calldata_struct.sol,f(S calldata s)
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/public_var_overriding_multiple.sol,foo();foo()
ethereum/solidity,test/libsolidity/semanticTests/inlineAssembly/calldata_offset_read.sol,"f(bytes calldata x);f(uint, bytes calldata x, uint)"
ethereum/solidity,test/libsolidity/semanticTests/functionCall/inheritance/call_base_base_explicit.sol,f(uint n);s(uint n);f(uint n);g(uint n);k(uint n)
ethereum/solidity,test/libsolidity/semanticTests/inlineAssembly/inline_assembly_function_call_assignment.sol,"f();asmfun(a, b, c)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/025_comparison_of_mapping_types.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_inside_modifiers_1.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/trailing_dot2.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/metaTypes/int_name.sol,intName()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/copy_byte_array_in_struct_to_storage.sol,f();g();h()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/268_function_overload_array_type.sol,f(uint[] memory);f(int[] memory)
ethereum/solidity,test/libsolidity/semanticTests/externalSource/_relative_imports/dir/G/g.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_code_after_placeholder.sol,f();g(uint _x)
ethereum/solidity,test/libsolidity/semanticTests/viaYul/exp_neg.sol,"f(int x, uint y)"
ethereum/solidity,test/libsolidity/semanticTests/structs/delete_struct.sol,getToDelete();getTopValue();getNestedValue();getTopMapping(uint index);getNestedMapping(uint index)
ethereum/solidity,test/libsolidity/syntaxTests/dataLocations/internalFunction/internal_function_parameters_no_data_location.sol,g(uint[])
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/virtual_function_assert.sol,f();proxy();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/constant_propagation_2.sol,f()
ethereum/solidity,test/libsolidity/ASTJSON/assembly/loop.sol,g()
ethereum/solidity,test/libsolidity/syntaxTests/imports/import_access_struct.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/localStorageVariables/try_declaration_err.sol,ext();f();g();h();i()
ethereum/solidity,test/libsolidity/syntaxTests/natspec/docstring_empty_description.sol,vote(uint id)
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/compound_sub.sol,f(uint x)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/string_literal_assignment_3.sol,f(bytes32 _x)
ethereum/solidity,test/libsolidity/syntaxTests/parsing/calling_function.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/array/array_pop_arg.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/535_address_overload_resolution.sol,balance();transfer(uint amount);f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/fallback_receive/receive_unimplemented.sol,""
ethereum/solidity,test/libsolidity/semanticTests/various/nested_calldata_struct.sol,f(S2 calldata s)
ethereum/solidity,test/libsolidity/syntaxTests/errors/abi_decode_error.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/localStorageVariables/while_declaration_fine.sol,f();g();h()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/dirty_memory_struct.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/const_from_this.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/v1_call_to_v2_constructor_accepting_struct.sol,foo()
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/shifts.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/303_fixed_type_int_conversion.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/length_assignment_storage_to_storage.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/constant_assignment.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/typecast/cast_larger_2.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/while_1_infinite.sol,"f(uint x, bool b)"
ethereum/solidity,test/libsolidity/syntaxTests/freeFunctions/qualified_struct_access.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/delete/memory_arrays_delete.sol,del()
ethereum/solidity,test/externalTests/solc-js/DAO/TokenCreation.sol,createTokenProxy(address payable _tokenHolder);refund();divisor();createTokenProxy(address payable _tokenHolder);refund();divisor()
ethereum/solidity,test/libsolidity/semanticTests/inlineAssembly/calldata_length_read.sol,lenBytesRead(bytes calldata x);lenStringRead(string calldata x)
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/storage_reference_assignment.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/storage_slot_assign.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_6.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/tryCatch/data_location_error_message.sol,test();f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/327_rational_index_access.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/file_level/constant_easy.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/constructor/bytes_in_constructors_packer.sol,"part(uint i);f(bytes memory s);f(uint x, bytes memory s)"
ethereum/solidity,test/libsolidity/syntaxTests/errors/weird3.sol,""
ethereum/solidity,test/libsolidity/semanticTests/array/dynamic_arrays_in_storage.sol,"setIDStatic(uint256 id);setID(uint256 index, uint256 id);setData(uint256 index, uint256 x, uint256 y);getID(uint256 index);getData(uint256 index);getLengths();setLengths(uint256 l1, uint256 l2)"
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/for_break_direct.sol,f(uint x)
ethereum/solidity,test/libsolidity/smtCheckerTests/special/blockhash.sol,f(uint x)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/mapping_4.sol,f(bool x)
ethereum/solidity,test/libsolidity/syntaxTests/natspec/invalid/inherit_doc_events.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/comments/multiline_unicode_direction_override_1.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/264_mapping_in_memory_array.sol,f(uint size)
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/length_1d_mapping_array_2.sol,"f(uint x, uint y)"
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/localStorageVariables/assembly/stub_declaration.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/calldata/calldata_bytes_to_memory.sol,f(bytes calldata data)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/155_array_copy_with_different_types_static_dynamic.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/immutable/double_specifier.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/inline_array_with_bound_function_mixed.sol,f(uint a);f()
ethereum/solidity,test/libsolidity/syntaxTests/largeTypes/storage_parameter.sol,f(S storage)
ethereum/solidity,test/libsolidity/syntaxTests/literals/hex_string_misaligned_underscore.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/bmc_coverage/branches_with_return/constructor_state_variable_init_chain_alternate.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/special/msg_sender_range.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_return.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/iceRegressionTests/large_struct_array.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/tryCatch/two_catch_clauses.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/getters/inaccessible_dynamic_type_1.sol,g()
ethereum/solidity,test/libsolidity/smtCheckerTests/typecast/string_literal_to_fixed_bytes_explicit.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/free_function_crash.sol,f();f(int);f();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/functions_identity_as_tuple.sol,h(uint x);g()
ethereum/solidity,test/libsolidity/smtCheckerTests/complex/slither/external_function.sol,funcCalled();callWithSuper();funcNotCalled();my_func();funcNotCalled();exec()
ethereum/solidity,test/libsolidity/semanticTests/storage/packed_storage_signed.sol,test()
ethereum/solidity,test/libsolidity/semanticTests/various/single_copy_with_multiple_inheritance.sol,setData(uint256 i);getViaBase();setViaA(uint256 i);getViaB()
ethereum/solidity,test/libsolidity/syntaxTests/globalFunctions/suicide_no_call.sol,f(bytes memory data)
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/while_2_fail.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/array/nested_calldata_memory3.sol,killer(uint256[][] calldata weapon)
ethereum/solidity,test/libsolidity/syntaxTests/types/encoding_packed_fractional.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/specialFunctions/abidecode/contract_array.sol,f(bytes calldata x)
ethereum/solidity,test/libsolidity/semanticTests/viaYul/virtual_functions.sol,f();g();g()
ethereum/solidity,test/libsolidity/semanticTests/libraries/internal_call_bound_with_parentheses.sol,f(S memory _s);f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/getters/nested_arrays_mappings_4.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/address_staticcall.sol,"f(address a, bytes memory data)"
ethereum/solidity,test/libsolidity/smtCheckerTests/bmc_coverage/branches_with_return/simple_if2.sol,test(uint256 a);simple_if(uint256 a)
ethereum/solidity,test/libsolidity/syntaxTests/fallback/payable_fallback_without_receive_only_internal.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/063_implicit_derived_to_base_conversion.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/array_memory_allocation/array_2d_zeroed_memory_index_access.sol,"set(string memory s, uint n, uint m, uint a, uint b)"
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/unary_add.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/bytesNN_bitnot.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/errors/abi_encode_error_instance.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/enums/literal_conversion_error.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/array/calldata_multi.sol,f(uint[3][4] calldata)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/bool_int_mixed_1.sol,f(bool x)
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/getters/nested_arrays_mappings_9.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/shadowsBuiltin/return_parameters.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_with_return/return_in_both_branches.sol,test();branches(uint256 a)
ethereum/solidity,test/libsolidity/syntaxTests/freeFunctions/free_receive.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/push_zero_unsafe.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/assembly/for_break.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_stricter_mutability3.sol,foo();foo()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_static_mapping_aliasing_2.sol,f(mapping (uint => uint);g(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/events/event_overload_named_arguments_ambiguous.sol,call()
ethereum/solidity,test/libsolidity/semanticTests/functionCall/call_internal_function_with_multislot_arguments_via_pointer.sol,"s(uint a, uint b);foo();test()"
ethereum/solidity,test/libsolidity/semanticTests/events/event_constructor.sol,""
ethereum/solidity,test/libsolidity/semanticTests/viaYul/storage/dirty_storage_static_array.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/file_level/free_function_1.sol,"f(uint x, uint[] calldata input);fun(uint[] calldata _x, uint[] storage _y)"
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/return_2_fail.sol,"add(uint x, uint y);f()"
ethereum/solidity,test/libsolidity/syntaxTests/array/slice/slice_literal.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/abi/abi_encode_function.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/hex_switch_case.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/array/slice/memory_static.sol,f(uint256[42] memory x)
ethereum/solidity,test/libsolidity/syntaxTests/array/dynamic_memory_array_pop.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/dataLocations/function_parameters_with_data_location_fine.sol,"f(uint[] memory, uint[] storage);g(uint[] memory, uint[] storage);h(uint[] memory);i(uint[] calldata)"
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/storage_reference_old.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/parsing/enum_from_interface.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/getters/struct_2.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/builtinFunctions/assignment_to_const_var_involving_keccak.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_stricter_mutability.sol,foo();foo();foo();foo();foo()
ethereum/solidity,test/libsolidity/syntaxTests/literals/hex_string_duplicate_underscore_yul.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/if_fine.sol,f(bool flag);g(bool flag);h(bool flag);i();j()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/constructor_this.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/address_public_payable_error.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/getters/nested_arrays_mappings_2.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/storage_reference_on_function.sol,f()
ethereum/solidity,test/cmdlineTests/ir_compiler_subobjects/input.sol,f()
ethereum/solidity,test/cmdlineTests/viair_subobjects/input.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/bytecodeReferences/circular_reference_complex.sol,foo()
ethereum/solidity,test/libsolidity/semanticTests/externalContracts/strings.sol,"toSlice(string memory a);roundtrip(string memory a);multiconcat(string memory a, uint count);benchmark(string memory text, bytes32 seed)"
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/constructor_hierarchy_base_calls_with_side_effects_5.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/modifiers/break_in_modifier.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/uninitializedFunctionPointer/store2.sol,run();z()
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/staticcall_gas_view.sol,f();test(address a)
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/fallback_receive/receive_without_override.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/array/concat/bytes_concat_wrong_type.sol,"f(bytes calldata c, string calldata c1)"
ethereum/solidity,test/libsolidity/semanticTests/viaYul/exp_literals.sol,exp_uint_max(uint y);exp_int_max(uint y)
ethereum/solidity,test/libsolidity/semanticTests/functionCall/conditional_with_arguments.sol,"g(int x, int y);h(int y, int x);f()"
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/hex_assignment.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/inheritance/value_for_constructor.sol,getName();getFlag();getFlag();getName();getBalances()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/147_external_argument_increment.sol,f(uint a)
ethereum/solidity,test/libsolidity/semanticTests/structs/calldata/calldata_struct_struct_member_dynamic.sol,f(S1 calldata s1)
ethereum/solidity,test/libsolidity/semanticTests/libraries/internal_library_function_bound_to_fixed_bytes.sol,"add(bytes2 a, bytes2 b);sum(bytes2 a, bytes2 b)"
ethereum/solidity,test/libsolidity/syntaxTests/emit/emit_non_event.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inline_arrays/inline_array_declaration_no_type.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/imports/declaration_not_found.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/types/tuple_assignment_multiple_calls.sol,f(uint x);g()
ethereum/solidity,test/libsolidity/syntaxTests/types/index_access_for_bytes.sol,f(bytes16 b)
ethereum/solidity,test/libsolidity/syntaxTests/functionCalls/new_library.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/constructor/no_callvalue_check.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/builtinFunctions/blockhash.sol,f();g();h()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/assembly/double_revert.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/function_type_argument_internal.sol,f(function(mapping(uint=>uint)
ethereum/solidity,test/libsolidity/smtCheckerTests/abi/abi_encode_packed_hash.sol,"abiencodePackedHash(uint a, uint b)"
ethereum/solidity,test/libsolidity/semanticTests/reverts/invalid_enum_as_external_ret.sol,test_return();test_inline_assignment();test_assignment()
ethereum/solidity,test/libsolidity/semanticTests/externalSource/_relative_imports/c.sol,""
ethereum/solidity,test/libsolidity/semanticTests/externalSource/_non_normalized_paths/c.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/150_array_with_nonconstant_length.sol,f(uint a)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/shadowsBuiltin/this_super.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_branches_1d.sol,"f(bool b, uint[] memory c)"
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/interface.sol,f();f()
ethereum/solidity,test/libsolidity/semanticTests/array/calldata_array.sol,f(uint256[2] calldata s)
ethereum/solidity,test/libsolidity/smtCheckerTests/bmc_coverage/implicit_constructor_with_function_calls.sol,initX();initY()
ethereum/solidity,test/libsolidity/syntaxTests/imports/name_clash_in_import_contract_struct_2.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/v2_call_to_v2_event_accepting_struct.sol,foo()
ethereum/solidity,test/libsolidity/smtCheckerTests/function_selector/function_selector_via_contract_name.sol,f();g(uint256);f();g(uint256)
ethereum/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/disallowWildcards.sol,fn()
ethereum/solidity,test/libsolidity/semanticTests/array/create_memory_byte_array.sol,f()
ethereum/solidity,test/libsolidity/ABIJson/events.sol,f(uint a)
ethereum/solidity,test/scripts/fixtures/smt_contract_with_mixed_newlines.sol,""
ethereum/solidity,test/libsolidity/semanticTests/smoke/multiline.sol,"f(uint a, uint b, uint c, uint d, uint e)"
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/callvalue_payable_assembly_function.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_indirectly_recursive_fixed_multi_array.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_with_return/simple_if_struct.sol,check();conditional_increment()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/assembly/if_err.sol,f(bool flag)
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/push_disallowed.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/division_truncates_correctly_2.sol,"f(int x, int y)"
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/state_variables.sol,f(uint y)
ethereum/solidity,test/libsolidity/semanticTests/libraries/internal_library_function_bound_to_interface.sol,foo(I i);test()
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/while_nested_break.sol,"f(uint x, uint y, bool b, bool c)"
ethereum/solidity,test/libsolidity/syntaxTests/enums/literal_conversion.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/state/tx_gasprice.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/199_integer_unsigned_exp_signed.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/constants/mod_zero.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/array/invalidCopy/storage_to_storage_different_base_2.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/immutable/no_assignments.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/v1_call_to_v2_contract_function_returning_dynamic_string_array.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/multiSource/import_alias_mismatch.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/bmc_coverage/branches_with_return/simple_if_struct.sol,check();conditional_increment()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/revert.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/events/event_function_inheritance_clash.sol,dup()
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/comparison_of_function_types_lt_2.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/constructor/function_named_constructor.sol,constructor()
ethereum/solidity,test/libsolidity/semanticTests/types/convert_fixed_bytes_to_uint_smaller_size.sol,bytesToUint(bytes4 s)
ethereum/solidity,test/libsolidity/syntaxTests/metaTypes/name_constant.sol,""
ethereum/solidity,test/libsolidity/semanticTests/structs/calldata/calldata_structs.sol,"f(S1 calldata s1, S2 calldata s2, S1 calldata s3)"
ethereum/solidity,test/libsolidity/semanticTests/structs/struct_delete_storage_small.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/too_small_negative_numbers.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/compound_bitwise_and_uint.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/various/state_variable_under_contract_name.sol,getStateVar()
ethereum/solidity,test/libsolidity/semanticTests/constants/constant_string_at_file_level.sol,f();g();h();i()
ethereum/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_inside_branch_assignment_branch.sol,f();g(uint y)
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/inline_array_with_payable_function.sol,f(uint a);g(uint a);f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/tuple_assignment_empty.sol,g()
ethereum/solidity,test/libsolidity/syntaxTests/iceRegressionTests/declarationUnaryTuple/declaration_unary_tuple.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/constant_access.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/specialFunctions/abidecode/abi_decode_single_return.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/overflow/overflow_mul.sol,f(uint8 x)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/190_negative_integers_to_signed_out_of_bound.sol,""
ethereum/solidity,test/libsolidity/semanticTests/various/inline_tuple_with_rational_numbers.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/contract_2.sol,"f(D c, D d)"
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/fallback.sol,g()
ethereum/solidity,test/libsolidity/semanticTests/events/event_really_lots_of_data_from_storage.sol,deposit()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/localStorageVariables/assembly/for_declaration_fine.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/tryCatch/lowLevel.sol,g(bool b);f(bool b)
ethereum/solidity,test/libsolidity/smtCheckerTests/external_calls/external_call_from_constructor_1.sol,f(uint _x);f()
ethereum/solidity,test/libsolidity/syntaxTests/types/address/address_uint_bytes20_this_to_payable_err.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/cleanup/cleanup_address_types_v1.sol,f(address a);g(address payable a)
ethereum/solidity,test/libsolidity/syntaxTests/bytecodeReferences/circular_reference_new_in_ctor.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/reserved_identifiers_byzantium.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_inside_branch_assignment_multi_branches.sol,f();h();g(uint y)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/174_address_is_constant.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/functions_identity_as_tuple_fail.sol,h(uint x);g()
ethereum/solidity,test/libsolidity/syntaxTests/constantEvaluator/unary_fine.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/unchecked/unchecked_post_for.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/bool_ops.sol,"f(bool a, bool b)"
ethereum/solidity,test/libsolidity/semanticTests/array/memory.sol,h(uint[4] memory n);i(uint[4] memory n)
ethereum/solidity,test/libsolidity/semanticTests/storage/empty_nonempty_empty.sol,set(bytes memory _a)
ethereum/solidity,test/libsolidity/syntaxTests/pragma/version_check.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/receiveEther/arguments.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/multiSource/free_function_redefinition_transitive.sol,f();f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/195_positive_integers_to_unsigned_out_of_bound.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/413_address_methods.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/various/storage_string_as_mapping_key_without_variable.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy_empty_chain.sol,""
ethereum/solidity,test/libsolidity/semanticTests/state/tx_origin.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/functionCall/named_args_overload.sol,"f();f(uint a);f(uint a, uint b);f(uint a, uint b, uint c);call(uint num)"
ethereum/solidity,test/libsolidity/syntaxTests/parsing/arrays_in_expressions.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/imports/smoke_test.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/parsing/event_with_no_argument_list.sol,""
ethereum/solidity,test/libsolidity/semanticTests/viaYul/array_push_with_arg.sol,test(uint256 v);getLength();fetch(uint256 a)
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_array_assignment_memory_storage.sol,"p();testUnboundedForLoop(uint n, uint[] memory b, uint[] memory c)"
ethereum/solidity,test/libsolidity/ASTJSON/fallback.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/returnExpressions/tuple_return_mismatching_number.sol,f();g();h()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/local_variable_access_out_of_functions_storage_ptr.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/external_function_to_function_type_calldata_parameter.sol,f(function(bytes memory);callback(bytes calldata);g()
ethereum/solidity,test/libsolidity/syntaxTests/immutable/decrement.sol,""
ethereum/solidity,test/libsolidity/semanticTests/structs/calldata/calldata_struct_to_memory.sol,f(S calldata s)
ethereum/solidity,test/libsolidity/syntaxTests/parsing/address_payable_conversion.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/empty_tuple_lvalue_array.sol,f();a()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/151_array_with_negative_length.sol,f(uint a)
ethereum/solidity,test/libsolidity/ASTJSON/address_payable.sol,f(address payable arg)
ethereum/solidity,test/libsolidity/smtCheckerTests/natspec/natspec_smtchecker_empty.sol,f(uint x)
ethereum/solidity,test/libsolidity/smtCheckerTests/abi/abi_encode_with_selector_string_literal_2.sol,abiEncodeStringLiteral(bytes4 sel)
ethereum/solidity,test/libsolidity/semanticTests/externalContracts/snark.sol,"negate(G1Point memory p);add(G1Point memory p1, G1Point memory p2);mul(G1Point memory p, uint s);pairing(G1Point[] memory p1, G2Point[] memory p2);f();g();testMul();pair();verifyingKey();verify(uint[] memory input, Proof memory proof);verifyTx()"
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/shifts/shift_overflow.sol,"leftU(uint8 x, uint8 y);leftS(int8 x, uint8 y);t()"
ethereum/solidity,test/libsolidity/semanticTests/expressions/conditional_expression_functions.sol,x();y();f(bool cond)
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/unary_add_array_push_2.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/double_revert.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/freeFunctions/new_operator.sol,test();f()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/calldata_array_access.sol,"f(uint256[] calldata x, uint256 i);f(uint256[][] calldata x, uint256 i, uint256 j)"
ethereum/solidity,test/libsolidity/syntaxTests/parsing/function_type_multiple_mutability.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/invalidArgs/explicit_conversions.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/event_with_rational_size_array.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/functions_trivial_condition_require.sol,f(bool x)
ethereum/solidity,test/libsolidity/syntaxTests/types/address/nonpayable_address_to_contract_payable_fallback.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/conditional_multiple.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/unbalanced_negative_stack.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/address/address_nonpayable_selfdestruct.sol,f(address a)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/061_missing_base_constructor_arguments.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/062_base_constructor_arguments_override.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/pop_2d_unsafe.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/indexing/function_type_without_index.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/functions_1.sol,f();g();f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/177_ambiguous_overloaded_function.sol,f(uint8 a);f(uint a);g()
ethereum/solidity,test/libsolidity/semanticTests/array/pop/array_pop_storage_empty.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/specialFunctions/abidecode/abi_decode_empty.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/251_using_for_library.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/tryCatch/structured_pre_byzantium.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/424_using_interface_complex.sol,f();g();f()
ethereum/solidity,test/libsolidity/semanticTests/array/fixed_array_cleanup.sol,fill();clear()
ethereum/solidity,test/libsolidity/syntaxTests/metaTypes/tooManyArgsForType.sol,creation()
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/bitwise_shifting_constantinople_combined.sol,shl_zero(uint256 a);shr_zero(uint256 a);sar_zero(uint256 a);shl_large(uint256 a);shr_large(uint256 a);sar_large(uint256 a);shl_combined(uint256 a);shr_combined(uint256 a);sar_combined(uint256 a);shl_combined_large(uint256 a);shl_combined_overflow(uint256 a);shr_combined_large(uint256 a);shr_combined_overflow(uint256 a);sar_combined_large(uint256 a)
ethereum/solidity,test/libsolidity/semanticTests/constructor/evm_exceptions_in_constructor_call_fail.sol,testIt()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/bool_simple_1.sol,f(bool x)
ethereum/solidity,test/libsolidity/syntaxTests/parsing/conditional_with_constants.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/diamond_top_implemented_intermediate_implemented_public_state_variable.sol,f();f()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/dirty_memory_dynamic_array.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/438_unused_unnamed_function_parameter.sol,f(uint)
ethereum/solidity,test/libsolidity/syntaxTests/immutable/non-value_type.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/342_missing_bool_conversion.sol,b(uint a)
ethereum/solidity,test/libsolidity/smtCheckerTests/abi/abi_encode_packed_array_slice.sol,abiencodePackedSlice(bytes calldata data)
ethereum/solidity,test/libsolidity/syntaxTests/array/length/invalid_expression_5.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/540_array_length_invalid_expression_division_by_zero.sol,""
ethereum/solidity,test/libsolidity/semanticTests/inlineAssembly/inline_assembly_function_call2.sol,"f();asmfun(a, b, c)"
ethereum/solidity,test/libsolidity/semanticTests/types/mapping_enum_key_v2.sol,"get(E k);set(E k, uint8 v)"
ethereum/solidity,test/libsolidity/smtCheckerTests/special/msg_value_1.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/access_index_omitted.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/imports/name_clash_in_import_contract_struct_4.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/revert.sol,f();g();h(bool b);m();i()
ethereum/solidity,test/libsolidity/semanticTests/libraries/bound_to_calldata_external.sol,f(bytes calldata _x);g(bytes memory _x);f(bytes calldata _x)
ethereum/solidity,test/libsolidity/semanticTests/array/push/push_no_args_struct.sol,"f(uint y);g(S storage s, uint y);h(uint y);lv(uint y);a(uint i);l()"
ethereum/solidity,test/libsolidity/semanticTests/tryCatch/malformed_panic_4.sol,f(uint size);a();b();c();d()
ethereum/solidity,test/libsolidity/syntaxTests/string/unicode_escape_literals_invalid_format.sol,invalidLiteral()
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/revert_complex_flow.sol,"f(bool b, uint a)"
ethereum/solidity,test/libsolidity/syntaxTests/bytecodeReferences/library_function_circular_reference.sol,f();f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_empty_list.sol,test();test()
ethereum/solidity,test/libsolidity/syntaxTests/underscore/in_modifier.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/reverting_call_virtual.sol,iWillRevert();iWillRevert();test(bool _param)
ethereum/solidity,test/libsolidity/semanticTests/viaYul/loops/return.sol,f();g();h()
ethereum/solidity,test/libsolidity/semanticTests/externalSource/multiple_equals_signs.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/505_builtin_ecrecover_reject_value.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/function_types.sol,f();g();h()
ethereum/solidity,test/libsolidity/syntaxTests/functionCalls/named_arguments_overload_failing2.sol,"f(uint x);f(uint x, uint y);f(uint x, uint y, uint z);call()"
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/length_same_after_assignment_2.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/441_unused_unnamed_return_parameter.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/array_copy_storage_storage_static_dynamic.sol,test()
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/base_contract_assertion_fail_3.sol,f();v();f();g();v()
ethereum/solidity,test/libsolidity/smtCheckerTests/unchecked/unchecked_div_by_zero.sol,"div(uint256 a, uint256 b);mod(uint256 a, uint256 b)"
ethereum/solidity,test/libsolidity/errorRecoveryTests/recovery_failed_eos.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/comments/singleline_unicode_direction_override_1.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/127_enum_invalid_direct_member_access.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/222_struct_named_constructor.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/file_level/same_constants_different_files.sol,fre();f();p()
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/shift_underflow_negative_rvalue.sol,"f(int256 a, uint256 b);g(int256 a, uint256 b)"
ethereum/solidity,test/libsolidity/semanticTests/viaYul/string_literals.sol,short_dyn();long_dyn();short_bytes_dyn();long_bytes_dyn();bytesNN();bytesNN_padded()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/modifier_inherited_different_signature_override.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/modifiers/cross_contract_unrelated.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/221_struct_constructor_nested.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/variables/public_state_overridding.sol,test();set()
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/while_2.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/metaTypes/codeAccess_super.sol,f(uint);creationSuper();runtimeOther()
ethereum/solidity,test/libsolidity/semanticTests/types/nested_tuples.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/do_while_break_2.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/base_contract_assertion_fail_9.sol,f();v();f();g();v()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/local_const_variable.sol,localConst()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/getters/nested_arrays_mappings_3.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/function_type_nested.sol,h()
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/require.sol,f();g();h(bool b);m();i()
ethereum/solidity,test/cmdlineTests/model_checker_targets_underflow_overflow_assert_bmc/input.sol,"f(address payable a, uint x)"
ethereum/solidity,test/cmdlineTests/model_checker_targets_div_by_zero_chc/input.sol,"f(address payable a, uint x)"
ethereum/solidity,test/cmdlineTests/model_checker_targets_div_by_zero_bmc/input.sol,"f(address payable a, uint x)"
ethereum/solidity,test/cmdlineTests/model_checker_targets_underflow_overflow_chc/input.sol,"f(address payable a, uint x)"
ethereum/solidity,test/cmdlineTests/model_checker_targets_underflow_overflow_bmc/input.sol,"f(address payable a, uint x)"
ethereum/solidity,test/cmdlineTests/model_checker_targets_assert_bmc/input.sol,"f(address payable a, uint x)"
ethereum/solidity,test/cmdlineTests/model_checker_targets_underflow_overflow_assert_chc/input.sol,"f(address payable a, uint x)"
ethereum/solidity,test/cmdlineTests/model_checker_targets_underflow_bmc/input.sol,"f(address payable a, uint x)"
ethereum/solidity,test/cmdlineTests/model_checker_targets_assert_chc/input.sol,"f(address payable a, uint x)"
ethereum/solidity,test/cmdlineTests/model_checker_targets_all_chc/input.sol,"f(address payable a, uint x)"
ethereum/solidity,test/cmdlineTests/model_checker_targets_overflow_chc/input.sol,"f(address payable a, uint x)"
ethereum/solidity,test/cmdlineTests/model_checker_targets_constant_condition_bmc/input.sol,"f(address payable a, uint x)"
ethereum/solidity,test/cmdlineTests/model_checker_targets_overflow_bmc/input.sol,"f(address payable a, uint x)"
ethereum/solidity,test/cmdlineTests/model_checker_targets_underflow_chc/input.sol,"f(address payable a, uint x)"
ethereum/solidity,test/cmdlineTests/model_checker_targets_error/input.sol,"f(address payable a, uint x)"
ethereum/solidity,test/cmdlineTests/model_checker_targets_balance_bmc/input.sol,"f(address payable a, uint x)"
ethereum/solidity,test/cmdlineTests/model_checker_targets_out_of_bounds_chc/input.sol,"f(address payable a, uint x)"
ethereum/solidity,test/cmdlineTests/model_checker_targets_all/input.sol,"f(address payable a, uint x)"
ethereum/solidity,test/cmdlineTests/model_checker_targets_pop_empty_chc/input.sol,"f(address payable a, uint x)"
ethereum/solidity,test/cmdlineTests/model_checker_targets_all_bmc/input.sol,"f(address payable a, uint x)"
ethereum/solidity,test/libsolidity/semanticTests/various/super_parentheses.sol,f();f();f();f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/253_using_for_function_exists.sol,double(uint self);f(uint a)
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/circular_constant_access_module_err.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_recursion_via_mapping.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/types/enum_transitivity.sol,"f(D _a, D _b)"
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/call_internal_functions_success.sol,g();f();h();i()
ethereum/solidity,test/libsolidity/syntaxTests/types/hex_string_to_bytesNN_same_size_explicit.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/globalFunctions/sha3_var.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/builtin_functions_view_fail.sol,f();g();h();i();j()
ethereum/solidity,test/libsolidity/syntaxTests/bytecodeReferences/circular_reference_function_parameters.sol,foo(D _d);foo(C _c)
ethereum/solidity,test/libsolidity/smtCheckerTests/simple/static_array.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/conditional_assignment_always_false.sol,f(uint b)
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/mappingReturn/unnamed_err.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy_4.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/536_array_length_invalid_expression_negative_bool.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/array/length/invalid_expression_1.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/array/push/storage_with_mapping_push.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_inside_branch_assignment.sol,f();g(uint y)
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV1/return_dynamic_types_cross_call_simple.sol,dyn();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/getters/array_1.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/comments/multiline_unicode_direction_override_7.sol,f()
ethereum/solidity,test/libsolidity/ABIJson/payable_function.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/functionCall/calling_nonexisting_contract_throws.sol,g();f();g();h()
ethereum/solidity,test/libsolidity/semanticTests/literals/hex_string_with_underscore.sol,f()
ethereum/solidity,test/libsolidity/ABIJson/empty_name_input_parameter_with_named_one.sol,"f(uint, uint k)"
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/ways_to_merge_variables_2.sol,f(uint x)
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/length_basic.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/calldata_array_as_argument_internal_function.sol,"f(uint256[] calldata c);g(uint256[] calldata c);h(uint256[] calldata c, uint start, uint end)"
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/compound_add_mapping.sol,"f(uint x, uint p)"
ethereum/solidity,test/libsolidity/smtCheckerTests/typecast/cast_larger_1.sol,f(uint8 x)
ethereum/solidity,test/libsolidity/semanticTests/inheritance/inherited_function_calldata_calldata_interface.sol,f(uint256[] calldata a);f(uint256[] calldata a);f(uint256[] memory a);g()
ethereum/solidity,test/libsolidity/smtCheckerTests/try_catch/try_multiple_catch_clauses_2.sol,g();f()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/reverting_call_super.sol,iWillRevert();iWillRevert();test(bool _param)
ethereum/solidity,test/libsolidity/semanticTests/accessor/accessor_for_const_state_variable.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/localStorageVariables/assembly/reverting_function_declaration.sol,f();f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/use_msize_without_optimizer.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/iceRegressionTests/oversized_var.sol,e()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/array_copy_storage_storage_different_base.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/natspec/invalid/return_param_amount_differs.sol,value()
ethereum/solidity,test/libsolidity/semanticTests/various/write_storage_external.sol,f(uint256 y);g(uint256 y);h();f();g();h()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct/array_struct_array_struct_memory_safe.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/getter/complex_struct.sol,""
ethereum/solidity,test/libsolidity/semanticTests/reverts/invalid_instruction.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/strings/unicode_escapes.sol,combined()
ethereum/solidity,test/libsolidity/semanticTests/array/pop/byte_array_pop_empty_exception.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/localStorageVariables/while_declaration_err.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/shadowsBuiltin/illegal_names_assembly_identifier.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/multiSource/import_alias.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/inheritance/super_in_constructor_assignment.sol,f();f();f();f()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/array_copy_target_simple_2.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/dataLocations/function_return_parameters_with_data_location_fine.sol,f();g();h();i()
ethereum/solidity,test/libsolidity/semanticTests/modifiers/function_modifier_library.sol,libFun(S storage s);f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/530_tuple_invalid_literal_too_large_for_uint.sol,f()
ethereum/solidity,test/libsolidity/ABIJson/multiple_methods.sol,f(uint a);g(uint b)
ethereum/solidity,test/libsolidity/semanticTests/literals/gwei.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/conversion/implicit_conversion_of_super_in_operators.sol,foo()
ethereum/solidity,test/libsolidity/smtCheckerTests/inline_assembly/local_var.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/parsing/enum_valid_declaration.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/583_abi_encode_packed_with_rational_number_constant.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/bytecodeReferences/library_non_called.sol,foo();foo();f()
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/struct/mediocre2_struct.sol,"f(uint a, S[2] memory s1, uint b)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/129_int_to_enum_explicit_conversion_is_okay.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/specialFunctions/abidecode/abi_decode_calldata.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/functionCall/member_accessors.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/visibility/function_no_visibility.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/constant_state_modifier.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_multiple_fail3.sol,foo();foo()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/486_function_types_selector_3.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/pop/array_pop.sol,test()
ethereum/solidity,test/libsolidity/semanticTests/constructor/functions_called_by_constructor.sol,getName();setName(bytes3 _name)
ethereum/solidity,test/libsolidity/syntaxTests/dataLocations/memory_storage_data_location.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/pop_2d_safe.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/while_nested_continue_fail.sol,"f(uint x, uint y, bool b, bool c)"
ethereum/solidity,test/libsolidity/syntaxTests/enums/global_enum.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/fallback/view_modifier.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/parsing/function_type_as_storage_variable_with_assignment.sol,"f(uint x, uint y)"
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/external_functions_taking_internal_types_struct_array_with_function_type.sol,f(S[2] memory)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/178_assignment_of_nonoverloaded_function.sol,f(uint a);g()
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/abi_encode_rational_v2.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/specialFunctions/abi_encode_with_signature_from_string.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/functionCall/external_call.sol,g(uint n);f(uint n)
ethereum/solidity,test/libsolidity/smtCheckerTests/special/msg_value_inheritance_2.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/string/invalid_utf8_explicit_string.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/address_constantinople.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/storage_memory_packed.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/tuple_evaluation_order.sol,set(uint256 v);f()
ethereum/solidity,test/cmdlineTests/linking_solidity/input.sol,f();foo()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/functions_library_1_fail.sol,"add(uint x, uint y);f(uint x)"
ethereum/solidity,test/libsolidity/smtCheckerTests/typecast/string_literal_to_fixed_bytes_constant_initialization_1.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/metaTypes/interfaceid_super.sol,supportsInterface(bytes4 interfaceID);hello()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/missing_variable_name_in_declaration.sol,""
ethereum/solidity,test/libsolidity/semanticTests/freeFunctions/libraries_from_free.sol,pub();inter();fu();f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/returndatasize_as_variable_call_post_byzantium.sol.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/types/mapping_abstract_constructor_param.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/constructor_state_variable_init_chain_tree.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_data_location_function_param_external.sol,""
ethereum/solidity,test/libsolidity/semanticTests/various/value_insane.sol,getBalance();sendAmount(uint256 amount)
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/v1_inheritance_from_contract_emitting_v2_event.sol,foo()
ethereum/solidity,test/libsolidity/smtCheckerTests/special/abi_decode_simple.sol,f(bytes memory data)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/enum_explicit_values.sol,f(D _a)
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/enum_mapping_invalid.sol,"f(uint256 a, uint8 b)"
ethereum/solidity,test/libsolidity/syntaxTests/metaTypes/noArgForType.sol,creation()
ethereum/solidity,test/libsolidity/syntaxTests/modifiers/access_in_library.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/constructor/msg_value_non_payable.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_stricter_mutability1.sol,foo();foo()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/while_continue.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/freeFunctions/free_function_shadowing.sol,f();f();g()
ethereum/solidity,test/libsolidity/semanticTests/integer/small_signed_types.sol,run()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/dirty_memory_bytes_to_storage_copy.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/constants/addmod_zero.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/types/contractTypeType/members/base_contract_invalid.sol,f();g();i()
ethereum/solidity,test/libsolidity/semanticTests/functionCall/external_function.sol,"f(uint256 a);test(uint256 a, uint256 b)"
ethereum/solidity,test/libsolidity/syntaxTests/immutable/writing_after_initialization.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/array/push/calldata_push.sol,f(uint[] calldata x)
ethereum/solidity,test/libsolidity/syntaxTests/conversion/function_type_nonpayable_pure.sol,h();f()
ethereum/solidity,test/libsolidity/syntaxTests/imports/circular_import.sol,""
ethereum/solidity,test/libsolidity/semanticTests/inlineAssembly/inline_assembly_storage_access.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/structs/nested_struct_allocation.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/tuple_declarations_function_2.sol,f(uint x);g()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_aliasing_storage_3.sol,"p();g(uint x, uint y, uint[] memory c);f(uint[] storage a, uint[] storage b, uint[] memory c)"
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/empty_function_name.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/builtinFunctions/blockhash_shadow_resolution.sol,blockhash(uint256 blockNumber);f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_multiple_no_virtual2.sol,foo();foo()
ethereum/solidity,test/libsolidity/syntaxTests/denominations/gwei_as_identifier.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/constants/cyclic_dependency_4.sol,""
ethereum/solidity,test/libsolidity/semanticTests/statements/do_while_loop_continue.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/calldata_bytes_array_bounds.sol,"f(bytes[] calldata a, uint256 i)"
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/function_types_internal_visibility_error.sol,""
ethereum/solidity,test/libsolidity/semanticTests/inheritance/inherited_function.sol,f();f();g()
ethereum/solidity,test/libsolidity/syntaxTests/errors/file_level.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/types/call_unimplemented_internal_function.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/modifiers/modifier_overrides_function.sol,mod(uint a)
ethereum/solidity,test/libsolidity/syntaxTests/events/event_overload_named_arguments_wrong_types.sol,call()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/312_leading_zero_rationals_convert.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/308_rational_unary_plus_operation.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/storage_value_vars_2.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/442_named_return_parameter.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/libraries/internal_library_function_bound_to_mapping.sol,at(mapping(uint => uint);mapValue(uint a)
ethereum/solidity,test/libsolidity/smtCheckerTests/file_level/import.sol,"set(S storage a, uint v);f(uint v);g()"
ethereum/solidity,test/libsolidity/syntaxTests/constructor/internal_constructor_non_abstract.sol,""
ethereum/solidity,test/libsolidity/semanticTests/strings/string_escapes.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/mapping_as_local_var_1.sol,f(bool cond)
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/fallback_receive/receive_overrides_fallback.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_and.sol,f();g()
ethereum/solidity,test/libsolidity/smtCheckerTests/external_calls/external.sol,d();f();g()
ethereum/solidity,test/libsolidity/syntaxTests/events/event_array_indexed_v2.sol,""
ethereum/solidity,test/libsolidity/semanticTests/freeFunctions/free_namesake_contract_function.sol,f();f()
ethereum/solidity,test/libsolidity/semanticTests/functionCall/external_public_override.sol,f();f();g()
ethereum/solidity,test/cmdlineTests/model_checker_targets_pop_empty_bmc/input.sol,"f(address payable a, uint x)"
ethereum/solidity,test/cmdlineTests/model_checker_targets_balance_chc/input.sol,"f(address payable a, uint x)"
ethereum/solidity,test/cmdlineTests/model_checker_targets_out_of_bounds_bmc/input.sol,"f(address payable a, uint x)"
ethereum/solidity,test/cmdlineTests/model_checker_targets_constant_condition_chc/input.sol,"f(address payable a, uint x)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/578_private_member_getter_call_without_parentheses.sol,f();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/imports/import_library_2.sol,"s();sub(uint256 a, uint256 b);transferFrom(uint256 amount)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/404_read_returned_struct.sol,g()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/array_range_conversion.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/fixed_arrays_as_return_type.sol,f(uint16 input);f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/014_balance.sol,fun()
ethereum/solidity,test/libsolidity/syntaxTests/license/license_whitespace_after_colon.sol,""
ethereum/solidity,test/libsolidity/semanticTests/structs/calldata/dynamically_encoded.sol,f(S calldata s)
ethereum/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/oneElementTuple.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_return_mismatch.sol,foo();foo();test();test()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/shadowing/argument.sol,f(uint a)
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_with_return/branches_in_modifiers.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/assembly_istanbul.sol,f();g()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct/struct_mapping.sol,"f();g(uint a, uint b)"
ethereum/solidity,test/libsolidity/syntaxTests/conversion/implicit_conversion_from_string_literal_to_calldata_string.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/external_calls/external_reentrancy_3.sol,d();f();call(D d);f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy_2.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/abi/abi_encode_array_slice.sol,abiEncodeSlice(bytes calldata data)
ethereum/solidity,test/libsolidity/syntaxTests/array/nested_calldata_storage2.sol,i(uint[][] calldata s)
ethereum/solidity,test/libsolidity/semanticTests/builtinFunctions/keccak256_multiple_arguments.sol,"foo(uint256 a, uint256 b, uint256 c)"
ethereum/solidity,test/libsolidity/semanticTests/underscore/as_function.sol,_();g();h()
ethereum/solidity,test/libsolidity/semanticTests/inheritance/overloaded_function_call_with_if_else.sol,"f(uint256 a, uint256 b);f(uint256 k);g(bool flag)"
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/function_type_return_internal.sol,f(function()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/short_circuit_fine.sol,f();g()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/getters/struct_4.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_not_really_recursive_array.sol,""
ethereum/solidity,test/compilationTests/gnosis/MarketMakers/MarketMaker.sol,"calcCost(Market market, uint8 outcomeTokenIndex, uint outcomeTokenCount);calcProfit(Market market, uint8 outcomeTokenIndex, uint outcomeTokenCount);calcMarginalPrice(Market market, uint8 outcomeTokenIndex)"
ethereum/solidity,test/libsolidity/syntaxTests/fallback/default_visibility.sol,""
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/bitwise_shifting_constants_constantinople.sol,""
ethereum/solidity,test/libsolidity/semanticTests/libraries/internal_library_function_bound_to_bool.sol,"xor(bool a, bool b);foo(bool a, bool b)"
ethereum/solidity,test/libsolidity/syntaxTests/array/concat/bytes_concat_on_variable.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/structs/struct_constructor_nested.sol,get()
ethereum/solidity,test/libsolidity/syntaxTests/fallback/inheritance_multi_base.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/getters/mapping_2.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/literal_constants_with_ether_subdenominations.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/constructor_hierarchy_base_calls_with_side_effects_4.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/bytecodeReferences/circular_reference_type_mention_only.sol,foo();foo()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/tuples_without_commas.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/329_rational_as_exponent_value_signed.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/invalidTypes/constructor_call.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/types/mapping_simple.sol,"get(uint8 k);set(uint8 k, uint8 v)"
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/bitwise_and_int.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/indexing/function_type.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/compoundAssignment/tuple.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/152_array_copy_with_different_types1.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/getters/arrays.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/types/address/address_to_payable_address.sol,f(address a)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/575_member_member_getter_call_without_parentheses.sol,f();f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/modifier_invocation.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/array/length/invalid_expression_3.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/538_array_length_invalid_expression_bool_divides_int.sol,""
ethereum/solidity,test/libsolidity/semanticTests/expressions/conditional_expression_storage_memory_1.sol,f(bool cond)
ethereum/solidity,test/libsolidity/semanticTests/modifiers/function_modifier_empty.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/memberLookup/contract_not_payable_send.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/interface/linearization/invalid/lists_both.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/306_invalid_int_implicit_conversion_from_fixed.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/try_catch/try_public_var_mapping.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/559_no_warning_for_using_members_that_look_like_address_members.sol,transfer(uint);f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/returndatasize_as_variable_post_byzantium.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/metaTypes/codeAccessAbstractRuntime.sol,runtime();f(uint)
ethereum/solidity,test/libsolidity/ASTJSON/unicode.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/117_shift_warn_literal_base_2.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/push/array_push.sol,test()
ethereum/solidity,test/libsolidity/semanticTests/structs/simple_struct_allocation.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/immutable/reading_during_statevar_init.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/length_same_after_assignment.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/conversion/function_type_payable_pure.sol,h();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/push_arg_1.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/tight_packing_literals_fine.sol,k();l()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/super_function_assert.sol,f();proxy();f();f()
ethereum/solidity,test/libsolidity/syntaxTests/structs/member_type_eq_name.sol,f(function(S memory)
ethereum/solidity,test/libsolidity/syntaxTests/immutable/unary.sol,f()
ethereum/solidity,test/libsolidity/ASTJSON/short_type_name.sol,f()
ethereum/solidity,test/libsolidity/ABIJson/event_structs.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/revertStatement/using_function.sol,f(uint)
ethereum/solidity,test/libsolidity/smtCheckerTests/imports/imported_fail_2.sol,f(uint _x);g(uint _x);h(uint _x)
ethereum/solidity,test/libsolidity/smtCheckerTests/imports/imported_fail_1.sol,f(uint _x);g(uint _x);h(uint _x)
ethereum/solidity,test/scripts/fixtures/smt_contract_with_lf_newlines.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/revertStatement/scoped.sol,f()
ethereum/solidity,test/libsolidity/ASTJSON/fallback_and_reveice_ether.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_static_mapping_aliasing_1.sol,f(mapping (uint => uint);g(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/tryCatch/no_special.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/inheritance/inherited_function_calldata_memory_interface.sol,f(uint256[] calldata a);f(uint256[] memory a);f(uint256[] memory a);g()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/array_of_struct_calldata_to_memory.sol,f(S[3] calldata c);g(S[] calldata c)
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/localCalldataVariables/if_declaration_err.sol,f(uint[] calldata _c)
ethereum/solidity,test/libsolidity/semanticTests/storage/packed_storage_structs_uint.sol,test()
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/function_call_inside_branch_3.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/types/external_function_to_address.sol,f();g(function()
ethereum/solidity,test/libsolidity/smtCheckerTests/blockchain_state/this_does_not_change_internal_call.sol,f();g(address a)
ethereum/solidity,test/libsolidity/syntaxTests/events/event_call.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/push_as_lhs_compound_assignment.sol,t()
ethereum/solidity,test/libsolidity/syntaxTests/empty_struct.sol,""
ethereum/solidity,test/libsolidity/semanticTests/viaYul/dirty_memory_uint32.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_inside_modifiers_4.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/functionCalls/call_unimplemented_base_via_super.sol,a();f();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/bitwise_xor_int.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/create_memory_array.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/immutable/variable_declaration_already.sol,""
ethereum/solidity,test/libsolidity/semanticTests/receive/ether_and_data.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/modifiers/cross_contract_base.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/function_call_to_variable.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/inlineAssembly/leave.sol,f();f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/two_exact_functions.sol,fun(uint a);fun(uint a)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/064_implicit_base_to_derived_conversion.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/address/payable_to_contract_receive.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/address/address_to_contract_receive.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/154_array_copy_with_different_types_conversion_possible.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/slices/array_slice_calldata_to_storage.sol,"f(int[] calldata b, uint256 start, uint256 end)"
ethereum/solidity,test/compilationTests/MultiSigWallet/Factory.sol,getInstantiationCount(address creator);register(address instantiation)
ethereum/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_indirectly_recursive_dynamic_array3.sol,""
ethereum/solidity,test/libsolidity/semanticTests/array/copying/calldata_to_storage_different_base.sol,f(bytes8[] calldata c)
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/assignment_state_variable.sol,fun()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/public_vars_multiple2.sol,"foo();foo(uint );foo(uint , uint )"
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/while_2_break_fail.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/events/internal_type.sol,""
ethereum/solidity,test/libsolidity/semanticTests/ecrecover/failing_ecrecover_invalid_input.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/139_no_name_suggestion.sol,g()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/bool_simple_5.sol,f(bool x)
ethereum/solidity,test/libsolidity/semanticTests/modifiers/stacked_return_with_modifiers.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/slices/array_slice_calldata_to_memory.sol,"f(int[] calldata b, uint256 start, uint256 end);g(int[] calldata b, uint256 start, uint256 end);h(int[] calldata b, uint256 start, uint256 end)"
ethereum/solidity,test/libsolidity/ABIJson/pure_function.sol,"foo(uint a, uint b);boo(uint32 a)"
ethereum/solidity,test/libsolidity/syntaxTests/getter/recursive_struct.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/const_exp_1.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inline_arrays/dynamic_inline_array.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/typecast/downcast.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/constructor_state_variable_init_diamond_middle.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/099_access_to_internal_state_variable.sol,g()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/detect_mul_overflow.sol,"f(uint a, uint b);g(uint8 a, uint8 b)"
ethereum/solidity,test/libsolidity/smtCheckerTests/crypto/crypto_functions_over_blocks.sol,"f(bytes memory data);fi(bytes memory data, bytes32 k)"
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_with_return/constructor_state_variable_init_diamond.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/typecast/enum_from_uint.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/use_msize_with_optimizer.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/array/length/too_large.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/fallback/return_value_type.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/tupleAssignments/tuple_in_tuple_long.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/overloaded_functions.sol,"fun(uint a);fun(uint a, uint b)"
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct/struct_unary_add.sol,"f(S memory s1, S memory s2)"
ethereum/solidity,test/libsolidity/smtCheckerTests/types/tuple_tuple.sol,""
ethereum/solidity,test/libsolidity/semanticTests/viaYul/function_entry_checks.sol,"f();g(uint x, uint y);h();i(bytes32 b);j(bool b);k(bytes32 b);s();t(uint)"
ethereum/solidity,test/libsolidity/semanticTests/expressions/conditional_expression_with_return_values.sol,"f(bool cond, uint v)"
ethereum/solidity,test/libsolidity/semanticTests/reverts/revert.sol,f();g()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/string_literal_assignment_2.sol,f(bytes32 _x)
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/const_forward_reference.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/getters/nested_arrays_mappings_10.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/internal_call_with_assertion_inheritance_1.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/inheritance/explicit_base_class.sol,g();g();f();g()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_unimplemented_and_implemented_with_unimplemented.sol,f();f();f();f()
ethereum/solidity,test/libsolidity/semanticTests/calldata/calldata_struct_internal.sol,"f(S calldata s);f(uint, S calldata s, uint)"
ethereum/solidity,test/libsolidity/syntaxTests/events/inheritance_event_repeated.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/unary_operators_tuple_2.sol,f(bool b)
ethereum/solidity,test/scripts/fixtures/smt_contract_with_crlf_newlines.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/shadowing/state_variable_by_opcode.sol,g()
ethereum/solidity,test/libsolidity/syntaxTests/variableDeclaration/if.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/types/uint32_to_bytes32.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/tuple_function_2.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/fallback/fallback_argument.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/state_variables_init_order.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/warnUnused/function_parameter.sol,f(uint a)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/058_legal_override_indirect.sol,f(uint a);f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct/struct_aliasing_storage.sol,"f(bool b);g(bool b, uint _x)"
ethereum/solidity,test/libsolidity/semanticTests/inlineAssembly/constant_access_referencing.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/functionCalls/new_with_invalid_calloptions.sol,foo()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/fallback_receive/fallback_with_override.sol,""
ethereum/solidity,test/libsolidity/semanticTests/functionTypes/same_function_in_construction_and_runtime_equality_check.sol,test();double(uint256 _arg)
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/this_external_call_tx_origin.sol,test();g()
ethereum/solidity,test/libsolidity/syntaxTests/conversion/explicit_conversion_from_storage_array_ref.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/license/license_crlf_endings.sol,""
ethereum/solidity,test/libsolidity/semanticTests/constructor/constructor_arguments_internal.sol,getName();getFlag();getFlag();getName()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/144_no_spurious_identifier_suggestions.sol,g()
ethereum/solidity,test/libsolidity/semanticTests/structs/struct_delete_storage_nested_small.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_dynamic_1.sol,"f(uint x, uint y)"
ethereum/solidity,test/libsolidity/semanticTests/array/push/array_push_struct_from_calldata.sol,test(S calldata c)
ethereum/solidity,test/libsolidity/semanticTests/inlineAssembly/shadowing_local_function_opcode.sol,"add(uint, uint);g()"
ethereum/solidity,test/libsolidity/semanticTests/various/codehash_assembly.sol,f();g();h()
ethereum/solidity,test/libsolidity/syntaxTests/constants/cyclic_dependency_1.sol,""
ethereum/solidity,test/compilationTests/gnosis/Markets/StandardMarketFactory.sol,"createMarket(Event eventContract, MarketMaker marketMaker, uint24 fee)"
ethereum/solidity,test/libsolidity/syntaxTests/events/event_function_type_indexed.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/max_depth_reached_4.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/duplicated_constructor_call/base_multi_no_constructor.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/dowhile_err.sol,f();g();h();i();j()
ethereum/solidity,test/libsolidity/smtCheckerTests/unchecked/inc_dec.sol,o();u();o_int();u_int()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/compound_mul_array_index.sol,"q();f(uint x, uint p)"
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV1/abi_encode_decode_simple.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/abi_encode_v2_in_function_inherited_in_v1_contract.sol,get();foo(A _a);test()
ethereum/solidity,test/libsolidity/syntaxTests/multiSource/split_contract_hierarchy_control_flow_analysis_complex.sol,normal(bool x);yyy();bar();xxx();foo();xxx()
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/view_pure_abi_encode_arguments.sol,gView();gNonPayable();check()
ethereum/solidity,test/libsolidity/semanticTests/expressions/conditional_expression_multiple.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/types/no_singleton_tuple.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/inlineAssembly/calldata_array_read.sol,f(uint[2][] calldata x)
ethereum/solidity,test/libsolidity/syntaxTests/array/slice/storage_static.sol,f()
ethereum/solidity,test/cmdlineTests/too_long_line_multiline/input.sol,f()
ethereum/solidity,test/compilationTests/corion/publisher.sol,"transferEvent(address payable from, address payable to, uint256 value);Announcements(uint256 id);checkOpposited(uint256 weight, bool oppositable);newAnnouncement(announcementType Type, string calldata Announcement, string calldata Link, bool Oppositable, string calldata _str, uint256 _uint, address payable _addr);closeAnnouncement(uint256 id);oppositeAnnouncement(uint256 id);invalidateAnnouncement(uint256 id);checkICO()"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/318_invalid_array_declaration_with_rational.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/functions_external_1.sol,"g(uint x);f(uint y, D d)"
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/getters/fixed_bytes.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_overriding_3.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/tryCatch/malformed_error.sol,f(uint size);a();b();c();d()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_stricter_mutability6.sol,foo();foo()
ethereum/solidity,test/libsolidity/smtCheckerTests/function_selector/function_types_sig.sol,f();g();i();check()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/remove_view.sol,f();f()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/localStorageVariables/short_circuit_declaration_err.sol,f();g();h()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/array_push_return_reference.sol,test(uint256 v);getLength();fetch(uint256 a)
ethereum/solidity,test/libsolidity/syntaxTests/parsing/wrong_compiler_3.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/length_1d_struct_array_1.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/freeFunctions/free_function_namesake_different_parameter_types.sol,g();g();foo()
ethereum/solidity,test/libsolidity/syntaxTests/comments/multiline_unicode_direction_override_3.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/verification_target/constant_condition_3.sol,f(uint)
ethereum/solidity,test/libsolidity/semanticTests/viaYul/array_function_pointers.sol,"f(uint n, uint m);g(uint n, uint m)"
ethereum/solidity,test/libsolidity/syntaxTests/constructor/not_a_contract.sol,f()
ethereum/solidity,test/cmdlineTests/ir_with_assembly_no_memoryguard_runtime/input.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/scoping/scoping_for_decl_in_body.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_implemented_and_unimplemented_with_implemented_no_call.sol,f();f();f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/547_warn_about_address_members_on_non_this_contract_balance.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/metaTypes/codeIsNoLValue.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/hex_string_to_bytesNN_different_size_explicit.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/struct/struct_simple.sol,f(S memory s)
ethereum/solidity,test/libsolidity/semanticTests/arithmetics/signed_mod.sol,"f(int a, int b);g(bool _check)"
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/diamond_super_3.sol,f();f();f();f()
ethereum/solidity,test/libsolidity/syntaxTests/types/address/literal_to_payable_address_err.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/address/address_zero_to_payable_err.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/modifiers/invalid_function_modifier_type.sol,f()
ethereum/solidity,test/libsolidity/ABIJson/return_param_in_abi.sol,ret()
ethereum/solidity,test/libsolidity/syntaxTests/immutable/conditionally_initialized.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/denominations/szabo_finney_identifiers.sol,f(uint finney)
ethereum/solidity,test/cmdlineTests/recovery_ast_constructor/input.sol,five()
ethereum/solidity,test/libsolidity/semanticTests/array/byte_array_transitional_2.sol,test()
ethereum/solidity,test/libsolidity/semanticTests/getters/string_and_bytes.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/parsing/constant_is_keyword.sol,""
ethereum/solidity,test/libsolidity/semanticTests/structs/calldata/calldata_struct_with_nested_array_to_memory.sol,"f(uint32 p1, S calldata c)"
ethereum/solidity,test/libsolidity/syntaxTests/functionCalls/lowlevel_call_options.sol,foo()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/237_cyclic_binary_dependency_via_inheritance.sol,f();f()
ethereum/solidity,test/cmdlineTests/optimizer_inliner_multireturn/input.sol,test(uint x);f()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/exp.sol,"f(uint x, uint y)"
ethereum/solidity,test/libsolidity/gasTests/dispatch_small.sol,""
ethereum/solidity,test/libsolidity/semanticTests/tryCatch/assert.sol,g(bool x);f(bool x)
ethereum/solidity,test/libsolidity/syntaxTests/parsing/arrays_in_storage.sol,""
ethereum/solidity,test/libsolidity/semanticTests/constructor_with_params_inheritance.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_literal_7.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/cyclic_dependency_check_on_struct_good.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/447_no_unused_warnings.sol,f(uint a)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/string_length.sol,f();g();h()
ethereum/solidity,test/compilationTests/gnosis/Oracles/MajorityOracle.sol,getStatusAndOutcome();isOutcomeSet();getOutcome()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/shifts/shift_right_uint8.sol,"f(uint8 a, uint8 b);t()"
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/array_pop_length_8.sol,f()
ethereum/solidity,test/libsolidity/ABIJson/global_struct.sol,f(S calldata s);g(S memory s)
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array_dynamic_static_short_decode.sol,f(uint256[][2][] calldata x)
ethereum/solidity,test/libsolidity/syntaxTests/parsing/payable_without_arguments.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/immutable/illegal_names.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/function_type_argument_array.sol,f(mapping(uint => uint)
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/conditional_assignment_nested_always_true.sol,"f(bool b1, bool b2)"
ethereum/solidity,test/libsolidity/smtCheckerTests/types/enum_range.sol,f(D a)
ethereum/solidity,test/libsolidity/syntaxTests/comments/unicode_direction_in_source_1.sol,f(bool b)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/bytes_1.sol,f(bytes memory b)
ethereum/solidity,test/libsolidity/semanticTests/array/bytes_to_fixed_bytes_cleanup.sol,fromMemory(bytes memory m);fromCalldata(bytes calldata c);fromStorage();fromSlice(bytes calldata c)
ethereum/solidity,test/libsolidity/syntaxTests/natspec/invalid/docstring_inherit_modifier_no_return.sol,""
ethereum/solidity,test/libsolidity/semanticTests/various/skip_dynamic_types_for_static_arrays_with_dynamic_elements.sol,f();g()
ethereum/solidity,test/cmdlineTests/dup_opt_peephole/input.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/parsing/elementary_non_address_payable_return.sol,a();b();c();d();e();f();g();h();i();j();k();l();m()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/contract_3.sol,"f(C c, C d, C e)"
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/length_assignment_memory_to_memory.sol,f(uint[] memory arr)
ethereum/solidity,test/cmdlineTests/constant_optimizer_yul/input.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/abi/abi_encode_with_selector_string_literal.sol,abiEncodeStringLiteral(bytes4 sel)
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/public_var_same_name_but_different_args.sol,foo(uint)
ethereum/solidity,test/libsolidity/syntaxTests/conversion/function_type_same.sol,h_nonpayable();h_payable();h_view();h_pure();f()
ethereum/solidity,test/libsolidity/syntaxTests/tryCatch/returns_memory.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/location_specifiers_for_params.sol,"f(uint[] storage constant x, uint[] memory y)"
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/index_access_for_bytesNN.sol,f(bytes16 b)
ethereum/solidity,test/libsolidity/syntaxTests/events/inheritance_adds_anonymous.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/metaTypes/runtimeCodeWarningAssembly.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/while_break_direct.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/parsing/lexer_numbers_with_underscores_hex_fail.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_inline_function_inside_branch.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/errors/named_parameters_shadowing_types.sol,f();g()
ethereum/solidity,test/cmdlineTests/structured_documentation_source_location/input.sol,vote(uint id);unvote(uint id)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/mapping_aliasing_1.sol,f(uint x)
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/recursive_multi_return_2.sol,f();g()
ethereum/solidity,test/libsolidity/smtCheckerTests/typecast/string_literal_to_fixed_bytes_return_multi.sol,h();g();a()
ethereum/solidity,test/libsolidity/semanticTests/array/concat/bytes_concat_2_args.sol,"f(bytes memory a, bytes memory b)"
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/while_break.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/base_contract_assertion_fail_1.sol,f();g()
ethereum/solidity,test/libsolidity/ABIJson/payable_fallback_function.sol,""
ethereum/solidity,test/libsolidity/semanticTests/array/constant_var_as_array_length.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/assignment_local_err.sol,foo()
ethereum/solidity,test/libsolidity/syntaxTests/natspec/docstring_state_variable_too_many_return_tags.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/tryCatch/two_low_level_catch_clauses.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/compound_bitwise_and_fixed_bytes.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/address_balance.sol,"f(address a, address b)"
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/assembly_constantinople.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/assignment_struct.sol,fun()
ethereum/solidity,test/libsolidity/syntaxTests/events/double_event_declaration_ignores_indexed.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/metaTypes/contract_min.sol,contractMin()
ethereum/solidity,test/libsolidity/syntaxTests/natspec/invalid/docstring_inherit_modifier_no_return2.sol,g(int x);g(int x)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct/struct_nested_constructor_named_args.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_and_touched.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/shift_constant_right.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/bug10821-modifier.sol,testFunc(address _a)
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/function_type_variable_external_internal.sol,fa(bytes memory)
ethereum/solidity,test/libsolidity/semanticTests/ecrecover/failing_ecrecover_invalid_input_proper.sol,"f();recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s, uint blockExpired, bytes32 salt)"
ethereum/solidity,test/libsolidity/smtCheckerTests/types/mapping_3.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/revertStrings/ether_non_payable_function.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/shift_right_negative_lvalue_signextend_int8_v1.sol,"f(int8 a, uint8 b)"
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/implement_interface_by_public_variable.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/324_fixed_points_inside_structs.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/multiVariableDeclarationSimple.sol,f();g();h()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/dot_in_multi_vardecl.sol,f();f()
ethereum/solidity,test/libsolidity/semanticTests/array/bytes_length_member.sol,set();getLength()
ethereum/solidity,test/libsolidity/semanticTests/array/string_allocation_bug.sol,""
ethereum/solidity,test/libsolidity/semanticTests/libraries/stub.sol,f(uint256 v);g(uint256 v)
ethereum/solidity,test/libsolidity/semanticTests/cleanup/cleanup_bytes_types_shortening.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/bytecodeReferences/circular_reference_report_first_in_cycle.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/constructor/two_constructors.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/receiveEther/msg_data_in_receive.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/overflow/unsigned_guard_sum_overflow.sol,"f(uint x, uint y)"
ethereum/solidity,test/libsolidity/smtCheckerTests/overflow/unsigned_sum_overflow.sol,"f(uint x, uint y)"
ethereum/solidity,test/cmdlineTests/too_long_line_both_sides_short/input.sol,""
ethereum/solidity,test/libsolidity/semanticTests/array/delete/bytes_delete_element.sol,""
ethereum/solidity,test/libsolidity/semanticTests/interfaceID/homer.sol,supportsInterface(bytes4 interfaceID);skinColor();supportsInterface(bytes4 interfaceID);skinColor()
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/do_while_break_fail.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/libraries/library_return_struct_with_mapping.sol,get();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/do_while_1_false_positives.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/types/cyclic_dependency_check_on_consts_exhausted.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/special/many.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/mapping_struct_assignment.sol,"f(uint y, uint v)"
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/length_1d_struct_array_2d_1.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/period_in_identifer.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/577_member_getter_call_without_parentheses_missing_function.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/getters/struct_with_bytes.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/ternary_with_bound_functions.sol,f(uint a);g(uint a);f(bool x)
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/push_struct_member_1.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/storage_pointer_push_1.sol,l();s()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/leave_invalid.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct/struct_nested_temporary.sol,test()
ethereum/solidity,test/libsolidity/semanticTests/libraries/using_for_function_on_int.sol,double(uint self);f(uint a)
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/conditional_assignment_3.sol,"f(uint a, uint b)"
ethereum/solidity,test/libsolidity/smtCheckerTests/typecast/upcast.sol,""
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/abi_encode_empty_string_v2.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/specialFunctions/single_non_bytes_arg.sol,f();g(bytes32)
ethereum/solidity,test/libsolidity/syntaxTests/immutable/inheritance_virtual_functions_direct_call.sol,readX();readX()
ethereum/solidity,test/libsolidity/syntaxTests/license/license_whitespace_trailing.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/literals_on_stack_disallowed.sol,f()
ethereum/solidity,test/libsolidity/ASTJSON/documentation_local_variable.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_2.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/immutable/return_uninitialized.sol,""
ethereum/solidity,test/libsolidity/semanticTests/array/function_memory_array.sol,"a(uint256 x);b(uint256 x);c(uint256 x);d(uint256 x);e(uint256 x);test(uint256 x, uint256 i)"
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/base_arguments_no_parentheses.sol,""
ethereum/solidity,test/libsolidity/semanticTests/array/copying/bytes_memory_to_storage.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/libraries/library_function_selectors.sol,f(uint256 x);g(uint256[] storage s);h(uint256[] memory m);f();g();h()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/multiple_modifier_overrides.sol,""
ethereum/solidity,test/libsolidity/ASTJSON/long_type_name_identifier.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/delete/delete_removes_bytes_data.sol,del()
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/argument_private.sol,f(mapping(uint => uint)
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/bitwise_not_uint.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV1/dynamic_arrays.sol,"f(uint a, uint16[] memory b, uint c)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/114_exp_warn_literal_base_2.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/variableDeclaration/while.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/linkersymbol_builtin.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/017_assignment_to_struct.sol,fun()
ethereum/solidity,test/libsolidity/smtCheckerTests/file_level/constant_string_at_file_level.sol,f();g();h();i();p()
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/push_zero_2d_safe.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/shadowing/function.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/getters/array_of_structs_1.sol,test()
ethereum/solidity,test/libsolidity/semanticTests/modifiers/function_modifier_library_inheritance.sol,libFun(S storage s);f()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/array_memory_allocation/array_static_zeroed_memory_index_access.sol,set(string memory s)
ethereum/solidity,test/libsolidity/syntaxTests/types/address/conversion.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/106_empty_name_return_parameter.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/constants/asm_address_constant_regression.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/string_literal_assignment_1.sol,f(bytes32 _x)
ethereum/solidity,test/libsolidity/semanticTests/inlineAssembly/inline_assembly_for2.sol,f(uint256 a);sideeffect(r)
ethereum/solidity,test/libsolidity/syntaxTests/specialFunctions/abi_encodePacked_nested_dynamic_array.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/213_no_delete_on_storage_pointers.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/unchecked/flipping_sign_tests.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/inline_array_storage_to_memory_conversion_strings.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/specialFunctions/keccak256_optimized.sol,short();long()
ethereum/solidity,test/libsolidity/semanticTests/various/crazy_elementary_typenames_on_stack.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/delete/delete_on_array_of_structs.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/functionCalls/named_arguments_overload_failing1.sol,"f(uint x);f(uint x, uint y);f(uint x, uint y, uint z);call()"
ethereum/solidity,test/libsolidity/smtCheckerTests/try_catch/try_nested_1.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/whitespace_in_multiple_assignment.sol,f();g()
ethereum/solidity,test/libsolidity/smtCheckerTests/external_calls/external_hash.sol,hash(bytes32);inv()
ethereum/solidity,test/libsolidity/semanticTests/structs/struct_named_constructor.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/functionCalls/new_with_calloptions.sol,foo()
ethereum/solidity,test/libsolidity/semanticTests/errors/panic_via_import.sol,a();b()
ethereum/solidity,test/libsolidity/smtCheckerTests/invariants/aon_blog_post.sol,press_A();press_B();press_C();press_D();press_E();press_F();is_not_solved();reset()
ethereum/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/multiVariableDeclarationComplex.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/duplicated_constructor_call/base_multi_no_constructor_modifier_style.sol,""
ethereum/solidity,test/libsolidity/semanticTests/functionCall/creation_function_call_no_args.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/struct_definition.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/types/fixed_bytes_range.sol,f(bytes1 b)
ethereum/solidity,test/libsolidity/syntaxTests/tupleAssignments/warn_multiple_storage_storage_copies.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/bytesNN_to_contract.sol,f()
ethereum/solidity,test/libsolidity/ASTJSON/long_type_name_binary_operation.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/scoping/name_shadowing_local_variable_vs_state_variable.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/address_call.sol,"f(address a, bytes memory data)"
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV1/abi_decode_trivial.sol,f(bytes memory data)
ethereum/solidity,test/libsolidity/syntaxTests/parsing/multi_arrays.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/getters/double_access.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/natspec/invalid/docstring_inheritdoc_wrong_type.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/various/balance.sol,getBalance()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/calldata_memory_struct.sol,f(S calldata);g(S calldata);h(S calldata);i(S calldata);f(S memory);g(S memory);h(S memory);i(S memory)
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/wrong_type_base_arguments.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/multiVariableDeclarationScoping.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/array_copy_cleanup_uint128.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/address/address_payable_public_overload.sol,f(address);f(address payable)
ethereum/solidity,test/libsolidity/ASTJSON/fallback_payable.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/nested_function_local_access.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/inheritance/pass_dynamic_arguments_to_the_base_base.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/public_vars_multiple3.sol,"foo();foo(uint );foo(uint , uint )"
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/shift_right_negative_lvalue_signextend_int8_v2.sol,"f(int8 a, uint8 b)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/585_abi_decode_with_unsupported_types.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/232_literal_string_to_storage_pointer.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/imports/import_as_module_1.sol,f(uint _y);g(uint _x)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/319_invalid_array_declaration_with_signed_fixed_type.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/localCalldataVariables/smoke_declaration.sol,g();h(uint[] calldata _c);i(uint[] calldata _c)
ethereum/solidity,test/libsolidity/errorRecoveryTests/multiple_errors.sol,"sendCoin(address receiver, uint amount)"
ethereum/solidity,test/libsolidity/smtCheckerTests/types/string_literal_assignment_5.sol,g();f(bytes32 _x)
ethereum/solidity,test/libsolidity/syntaxTests/parsing/mapping_and_array_of_functions.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/structs/recursion/recursive_struct_function_pointer.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/460_function_override_is_not_shadowing.sol,f();f(uint)
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/division_4.sol,"f(int x, int y)"
ethereum/solidity,test/libsolidity/semanticTests/arithmetics/checked_modifier_called_by_unchecked.sol,"f(uint16 a, uint16 b, uint16 c)"
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_static_aliasing_storage_5.sol,"f(uint[2] storage a, uint[2] memory c);g(bool x, uint[2] memory c)"
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/builtin_functions_restrict_warning.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_multiple2.sol,foo();test(uint8 _a);foo();foo()
ethereum/solidity,test/libsolidity/smtCheckerTests/file_level/constants_at_file_level_referencing.sol,fre();f();g();h();i();p()
ethereum/solidity,test/libsolidity/syntaxTests/iceRegressionTests/recursive_struct_memory.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/events/events_with_same_name.sol,""
ethereum/solidity,test/libsolidity/semanticTests/functionCall/failed_create.sol,f(uint amount);stack(uint depth)
ethereum/solidity,test/libsolidity/syntaxTests/globalFunctions/suicide_var.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/imports/shadowing_builtins_with_imports.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/bound/bound_to_struct.sol,r()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/function_in_tuple_2.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/functionTypes/pass_function_types_externally.sol,f(uint256 x);eval(function(uint);g(uint256 x)
ethereum/solidity,test/libsolidity/smtCheckerTests/out_of_bounds/array_1.sol,p();q();r()
ethereum/solidity,test/libsolidity/semanticTests/modifiers/function_modifier_multi_invocation_viair.sol,f(bool twice)
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/constant_propagation_1.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_two_placeholders.sol,f();g(uint _x)
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/variable_declaration_suffix_offset.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/function_type_as_storage_variable_with_modifiers.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/dataLocations/function_argument_location_specifier_test_non_reference_type.sol,f(bytes4 memory)
ethereum/solidity,test/libsolidity/syntaxTests/tryCatch/double_panic.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/array/length/non_integer_constant_var.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/array/calldata_multi_dynamic.sol,f(uint[][] calldata)
ethereum/solidity,test/libsolidity/semanticTests/tryCatch/return_function.sol,g();f();fun()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/location_specifiers_for_locals_multi.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/typeChecking/return_tuple_not_convertible.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/constructor/constructor_without_implementation.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/special/tx_data_immutable.sol,f();fi()
ethereum/solidity,test/libsolidity/syntaxTests/imports/name_clash_in_import_4.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/functionCalls/named_arguments_empty.sol,"a(uint a, uint b);b()"
ethereum/solidity,test/libsolidity/syntaxTests/shifts/shift_singed_rvalue.sol,"f(int256 a, int256 b);g(int256 a, int256 b)"
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/shift_left_uint32.sol,"f(uint32 a, uint32 b)"
ethereum/solidity,test/libsolidity/semanticTests/libraries/internal_library_function_bound_to_dynamic_array.sol,"at(uint[] memory a, uint i);secondItem()"
ethereum/solidity,test/libsolidity/smtCheckerTests/types/tuple_return_branch.sol,g();f(uint a)
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/storage_reference_fine.sol,""
ethereum/solidity,test/libsolidity/semanticTests/types/type_conversion_cleanup.sol,test()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/type_expression_array_3d.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/revertStrings/bubble.sol,g();f()
ethereum/solidity,test/libsolidity/semanticTests/modifiers/function_modifier_local_variables.sol,f(bool a)
ethereum/solidity,test/libsolidity/smtCheckerTests/overflow/signed_sub_overflow.sol,"f(int x, int y)"
ethereum/solidity,test/libsolidity/semanticTests/array/copying/array_copy_storage_storage_static_static.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/array/length/fixed_size_multidim_zero_length.sol,a();b();c();d();e();e()
ethereum/solidity,test/libsolidity/syntaxTests/types/rational_number_div_limit.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/detect_add_overflow.sol,"f(uint a, uint b);g(uint8 a, uint8 b)"
ethereum/solidity,test/libsolidity/syntaxTests/constructor/constructor_payable.sol,createC()
ethereum/solidity,test/libsolidity/semanticTests/variables/public_state_overridding_dynamic_struct.sol,test();set()
ethereum/solidity,test/libsolidity/syntaxTests/array/push/memory_push.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/mapping_getters.sol,"set(uint256 k, uint256 v);set(uint256 k1, uint256 k2, uint256 v)"
ethereum/solidity,test/libsolidity/semanticTests/enums/using_inherited_enum.sol,answer()
ethereum/solidity,test/libsolidity/syntaxTests/bytecode_too_large.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/inlineAssembly/keccak256_optimization.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/v1_call_to_v2_modifier.sol,get();foo()
ethereum/solidity,test/libsolidity/syntaxTests/constantEvaluator/type_reference_in_contract.sol,""
ethereum/solidity,test/libsolidity/semanticTests/libraries/internal_library_function_return_var_size.sol,f(S memory _s);f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/fallback_receive/receive_parameter.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/scoping/scoping_for3.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/special/msg_value_4.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/576_member_getter_call_without_parentheses.sol,f();f()
ethereum/solidity,test/libsolidity/syntaxTests/types/contract_to_derived.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/bytes_length.sol,f();g()
ethereum/solidity,test/libsolidity/smtCheckerTests/overflow/signed_guard_sum_overflow.sol,"f(int x, int y)"
ethereum/solidity,test/libsolidity/syntaxTests/types/magic_block.sol,f();g();h();i();j()
ethereum/solidity,test/libsolidity/smtCheckerTests/abi/abi_encode_with_selector_simple.sol,"abiEncodeSimple(bytes4 sel, bool t, uint x, uint y, uint z, uint[] memory a, uint[] memory b)"
ethereum/solidity,test/libsolidity/smtCheckerTests/bmc_coverage/branches_with_return/branches_in_modifiers.sol,test()
ethereum/solidity,test/libsolidity/semanticTests/state/block_difficulty.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/string/invalid_utf8_hex_string.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/types/mapping_and_array_of_functions.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/conversion/not_allowed_conversion_to_int_array_pointer2.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/functions_library_1.sol,"add(uint x, uint y);f(uint x)"
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/division_truncates_correctly_3.sol,"f(int x, int y)"
ethereum/solidity,test/libsolidity/semanticTests/arithmetics/checked_add_v1.sol,"f(uint16 a, uint16 b)"
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/cleanup/dynamic_array.sol,ggg(uint8[] calldata s);f(uint256[] calldata a)
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/fallback_receive.sol,g()
ethereum/solidity,test/libsolidity/syntaxTests/conversion/convert_to_super_empty.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/detect_mod_zero_signed.sol,"f(int a, int b);g(int8 a, int8 b)"
ethereum/solidity,test/libsolidity/syntaxTests/denominations/fixed_point_division.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/immutable/ctor_initialization_reading.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inline_arrays/inline_array_fixed_types.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/library_function_nonimport_bug.sol,example();foo();nop()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/546_warn_about_address_members_on_contract_delegatecall.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/constant_of_invalid_function_type.sol,""
ethereum/solidity,test/libsolidity/semanticTests/structs/calldata/calldata_struct_to_memory_tuple_assignment.sol,"f(uint32 p1, S calldata c)"
ethereum/solidity,test/libsolidity/smtCheckerTests/special/time_units.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/dynamic_arrays.sol,"f(uint a, uint16[] memory b, uint c)"
ethereum/solidity,test/libsolidity/syntaxTests/events/anonymous_event_too_many_indexed.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/types/string_literal_assignment_4.sol,g();f(bytes32 _x)
ethereum/solidity,test/libsolidity/errorRecoveryTests/missing_rhs.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_implemented_and_unimplemented_with_implemented_call_via_super.sol,f();f();f()
ethereum/solidity,test/libsolidity/semanticTests/arithmetics/checked_called_by_unchecked.sol,"add(uint16 a, uint16 b);f(uint16 a, uint16 b, uint16 c)"
ethereum/solidity,test/libsolidity/syntaxTests/double_variable_declaration.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/string_calldata_to_bytes_calldata.sol,f(string calldata s)
ethereum/solidity,test/libsolidity/syntaxTests/comments/multiline_unicode_direction_override_6.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/literals/unicode_string_direction_override_6.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/leave_inside_function.sol,f();f()
ethereum/solidity,test/libsolidity/semanticTests/integer/many_local_variables.sol,"run(uint x1, uint x2, uint x3)"
ethereum/solidity,test/libsolidity/syntaxTests/imports/name_clash_in_import_5.sol,""
ethereum/solidity,test/libsolidity/semanticTests/libraries/external_call_with_storage_mapping_parameter.sol,f(mapping(uint256 => uint256);g(uint256 _value)
ethereum/solidity,test/libsolidity/smtCheckerTests/verification_target/no_target_for_abstract_constract.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/memberLookup/tx_origin_non_payable_transfer.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy_mixed_chain_with_params.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/constructor_hierarchy_mixed_chain_with_params.sol,""
ethereum/solidity,test/libsolidity/semanticTests/array/dynamic_array_cleanup.sol,fill();halfClear();fullClear()
ethereum/solidity,test/libsolidity/syntaxTests/types/address/payable_conversion_strict_err.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_abstract.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/conditional_assignment_6.sol,d();g();f(bool b);h()
ethereum/solidity,test/libsolidity/syntaxTests/comments/singleline_unicode_direction_override_3.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/declaring_fixed_literal_variables.sol,""
ethereum/solidity,test/compilationTests/corion/ico.sol,"ICObonus();setInterestDB(address addr, uint256 balance);checkInterest(address addr);getInterest(address beneficiary);setICOEthPrice(uint256 value);extendICO();closeICO();abortICO();connectTokens(address payable tokenContractAddr, address payable premiumContractAddr);receiveFunds();buy(address payable beneficiaryAddress, address affilateAddress);checkPremium(address owner);getIcoReward(uint256 value);isICO()"
ethereum/solidity,test/libsolidity/syntaxTests/events/multiple_events_argument_clash.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/unterminatedBlocks/zero_dot.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/revertStrings/empty_v1.sol,f();g(string calldata msg)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/340_rational_bitxor_binary_operation.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/public_vars_multiple_diamond.sol,foo();foo();foo()
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/private_function_type.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/modifiers/function_modifier_invocation.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/interface/linearization/valid.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/v2_call_to_v2_library_function_pointer_accepting_struct.sol,get(Item memory _item);foo()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/base_not_contract.sol,fun()
ethereum/solidity,test/libsolidity/syntaxTests/constructor/returns_in_constructor.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/largeTypes/large_storage_array_mapping.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/immutable/loop_initialized.sol,""
ethereum/solidity,test/libsolidity/semanticTests/fallback/fallback_override_multi.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/constants/mulmod_zero.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/public_var_implements_parallel_interface.sol,foo();goo();foo();goo();goo();foo();goo()
ethereum/solidity,test/libsolidity/semanticTests/array/indexAccess/memory_arrays_index_access_write.sol,set(uint24[3][4] memory x);f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/exp_expression.sol,fun(uint256 a)
ethereum/solidity,test/externalTests/solc-js/DAO/Token.sol,"balanceOf(address _owner);transfer(address _to, uint256 _amount);transferFrom(address _from, address _to, uint256 _amount);approve(address _spender, uint256 _amount);receiveApproval(address _from, uint256 _value, address _token, bytes memory _extraData);balanceOf(address _owner);transfer(address _to, uint256 _amount);approve(address _spender, uint256 _amount);approveAndCall(address _spender, uint256 _value, bytes memory _extraData);allowance(address _owner, address _spender)"
ethereum/solidity,test/libsolidity/syntaxTests/parsing/var_array.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/getters/nested_arrays_mappings_7.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_merge_variables_3.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/parsing/while_loop.sol,fun()
ethereum/solidity,test/libsolidity/semanticTests/array/invalid_encoding_for_storage_byte_array.sol,invalidateXShort();invalidateXLong();abiEncode();abiEncodePacked();copyToMemory();indexAccess();assignTo();assignToLong();copyToStorage();copyFromStorageShort();copyFromStorageLong();arrayPop();arrayPush();arrayPushEmpty();del()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/inline_array_empty_cells_check_lvalue.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/inline_assembly/assembly_4.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/overflow/signed_guard_sub_overflow.sol,"f(int x, int y)"
ethereum/solidity,test/compilationTests/MultiSigWallet/MultiSigWallet.sol,"addOwner(address owner);removeOwner(address owner);replaceOwner(address owner, address newOwner);changeRequirement(uint _required);submitTransaction(address destination, uint value, bytes memory data);confirmTransaction(uint transactionId);revokeConfirmation(uint transactionId);executeTransaction(uint transactionId);isConfirmed(uint transactionId);addTransaction(address destination, uint value, bytes memory data);getConfirmationCount(uint transactionId);getTransactionCount(bool pending, bool executed);getOwners();getConfirmations(uint transactionId);getTransactionIds(uint from, uint to, bool pending, bool executed)"
ethereum/solidity,test/libsolidity/semanticTests/array/delete/delete_storage_array_packed.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/errors/unreachable.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_1.sol,f(uint x)
ethereum/solidity,test/libsolidity/semanticTests/multiSource/circular_reimport_2.sol,f();f();g();foo()
ethereum/solidity,test/libsolidity/semanticTests/externalSource/multiple_external_source.sol,""
ethereum/solidity,test/libsolidity/semanticTests/externalSource/source_import.sol,""
ethereum/solidity,test/libsolidity/semanticTests/asmForLoop/for_loop_continue.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/create_memory_array_too_large.sol,f();g()
ethereum/solidity,test/libsolidity/smtCheckerTests/imports/imported_fail_3.sol,f(uint _x);g(uint _x);h(uint _x)
ethereum/solidity,test/libsolidity/semanticTests/externalSource/_external/other_external.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/array/bytes_pop.sol,test()
ethereum/solidity,test/libsolidity/semanticTests/array/dynamic_multi_array_cleanup.sol,fill();clear()
ethereum/solidity,test/libsolidity/syntaxTests/types/address/address_tuple_fine.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/tryCatch/nested.sol,"g(bool b);f(bool cond1, bool cond2)"
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/swap_disallowed.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/115_exp_warn_literal_base_3.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/scoping/name_shadowing_function_type_return_parameter.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/v1_call_to_v2_contract_function_pointer_accepting_struct.sol,get(Item memory _item);foo()
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/shift_bytes_cleanup.sol,l(uint8 y);r(uint8 y)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/298_invalid_fixed_types_0x7_mxn.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/assembly/return.sol,f(uint256 y);g(uint256 y)
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/mod_even.sol,f(uint x)
ethereum/solidity,test/libsolidity/semanticTests/array/create_dynamic_array_with_zero_length.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/various/tuples.sol,g();h();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/fixed_bytes_access_2.sol,"f(bytes calldata x, uint y)"
ethereum/solidity,test/libsolidity/syntaxTests/types/weird_sized_types.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_with_return/branches_in_modifiers_2.sol,reset_if_overflow();test();set(uint _x)
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/smoke_test.sol,g();f();h();i()
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/function_call_inside_modifier_branch.sol,f(address a);g()
ethereum/solidity,test/libsolidity/semanticTests/strings/unicode_string.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/function_pointer.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/230_creating_contract_within_the_contract.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/variables/public_state_overridding_mapping_to_dynamic_struct.sol,test(uint256 x);set()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/interface/implementation/partial.sol,testA();testB();testSub();testA();testSub()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/location_specifiers_with_var.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/revertStatement/regular.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/353_callcode_not_deprecated_as_function.sol,callcode()
ethereum/solidity,test/libsolidity/syntaxTests/scoping/scoping_for2.sol,f()
ethereum/solidity,test/compilationTests/corion/owned.sol,replaceOwner(address newOwner);isOwner()
ethereum/solidity,test/libsolidity/syntaxTests/fallback/old_syntax.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct/struct_recursive_4.sol,"f(bool b1, bool b2)"
ethereum/solidity,test/libsolidity/syntaxTests/events/inheritance_adds_parameter.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/events/event_array_v2.sol,""
ethereum/solidity,test/libsolidity/semanticTests/exponentiation/literal_base.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/502_builtin_keccak256_reject_value.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/detect_div_overflow.sol,"f(uint a, uint b);g(int8 a, int8 b);h(uint256 a, uint256 b)"
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct/struct_constructor_named_args.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/423_using_interface.sol,f();f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/425_interface_implement_public_contract.sol,f();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/mapping_2.sol,f(bool x)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/fixed_bytes_access_1.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/constructor/constructor_mapping_memory_abstract.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_or_fail.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/shift_constant_left.sol,""
ethereum/solidity,test/libsolidity/semanticTests/array/copying/bytes_inside_mappings.sol,"set(uint key);copy(uint from, uint to)"
ethereum/solidity,test/libsolidity/semanticTests/builtinFunctions/keccak256_empty.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/memberLookup/msg_value_modifier_payable.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/storage/dirty_storage_struct.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/reverting_call_static.sol,iWillRevert();iWillRevert();iWillRevert();test(bool _param)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/332_rational_as_exponent_value_neg_quarter.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/tuple_1_chain_n.sol,i()
ethereum/solidity,test/libsolidity/errorRecoveryTests/do_not_delete_at_error.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/conversion/function_type_view_pure.sol,h();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/ways_to_merge_variables_3.sol,f(uint x)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/fixed_bytes_1.sol,f(bytes8 y);g()
ethereum/solidity,test/libsolidity/semanticTests/types/packing_unpacking_types.sol,"run(bool a, uint32 b, uint64 c)"
ethereum/solidity,test/libsolidity/syntaxTests/types/library_function_selector_internal.sol,f(uint256);f()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/erc20.sol,"totalSupply();balanceOf(address owner);allowance(address owner, address spender);transfer(address to, uint256 value);approve(address spender, uint256 value);transferFrom(address from, address to, uint256 value);increaseAllowance(address spender, uint256 addedValue);decreaseAllowance(address spender, uint256 subtractedValue);_transfer(address from, address to, uint256 value);_mint(address account, uint256 value);_burn(address account, uint256 value);_approve(address owner, address spender, uint256 value);_burnFrom(address account, uint256 value)"
ethereum/solidity,test/libsolidity/syntaxTests/errors/no_overloading_inheritance.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/conversion/implicit_conversion_from_string_literal_to_calldata_string_in_function_parameter.sol,g(string calldata _s);h(bytes calldata _b);f()
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_5.sol,f(uint x)
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/constructor_state_variable_init_chain.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/specialFunctions/abidecode/abi_decode_invalid_arg_count.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/types/convert_fixed_bytes_to_fixed_bytes_same_size.sol,bytesToBytes(bytes4 input)
ethereum/solidity,test/libsolidity/syntaxTests/natspec/docstring_private_state_variable.sol,""
ethereum/solidity,test/libsolidity/semanticTests/inlineAssembly/inline_assembly_storage_access_via_pointer.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/nonintermediate_common_base_and_unique_implementation_unimplemented.sol,f();g();f();f();f();g()
ethereum/solidity,test/libsolidity/syntaxTests/comments/singleline_unicode_direction_override_2.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/memory_structs_with_mappings.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/compound_bitwise_and_int.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/function_selector/selector_2.sol,g();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/return_1.sol,"add(uint x, uint y);f()"
ethereum/solidity,test/libsolidity/syntaxTests/globalFunctions/now_deprecate.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/059_illegal_override_visibility.sol,f();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/abi/abi_encode_packed_string_literal.sol,abiencodePackedStringLiteral()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct/struct_array_struct_array_storage_safe.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/functions_trivial_condition_while_only_call.sol,f(bool x);g()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/ambiguous_base_and_unique_mention.sol,f();g();f();f();g()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/052_function_internal_not_allowed_conversion.sol,internalCall()
ethereum/solidity,test/libsolidity/semanticTests/inheritance/inherited_function_from_a_library.sol,f();f();g()
ethereum/solidity,test/libsolidity/syntaxTests/constructor/constructor_storage_abstract.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/assembly/stub.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/indexAccess/memory_arrays_dynamic_index_access_write.sol,set(uint24[3][][4] memory x);f()
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/gas_value_without_call.sol,f();g(address a);h()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/constructor_payable_payable.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/types/contractTypeType/members/call_function_via_contract_name.sol,f();g();h();i()
ethereum/solidity,test/libsolidity/syntaxTests/scoping/poly_variable_declaration_same_scope.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/structs/recursion/multi_struct_composition.sol,f(T memory)
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/modifier_order_fine.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/state/block_gaslimit.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/modifiers_fail.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/externalContracts/deposit_contract.sol,get_deposit_root();get_deposit_count();supportsInterface(bytes4 interfaceId);get_deposit_root();get_deposit_count();supportsInterface(bytes4 interfaceId)
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/slice_default_end.sol,f(bytes calldata b)
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/length_function_call.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/types/address/address_payable_internal_overload_nonpayable.sol,f(address payable);f(address);g()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/detect_mod_zero.sol,"f(uint a, uint b);g(uint8 a, uint8 b)"
ethereum/solidity,test/libsolidity/smtCheckerTests/external_calls/external_single_inc.sol,d();inc();f()
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/library_mapping.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/348_unused_return_value_call_value.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/inlineAssembly/constant_access.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/types/mapping_enum_key_getter_v2.sol,"set(E k, uint8 v);get(E k)"
ethereum/solidity,test/libsolidity/syntaxTests/parsing/address_function_arguments_and_returns.sol,f(address);g(address payable)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/351_callcode_deprecated.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_literal_6.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/shadowsBuiltin/ignores_constructor.sol,""
ethereum/solidity,test/libsolidity/semanticTests/array/copying/array_copy_nested_array.sol,test(uint256[2][] calldata d)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/warnUnused/return_parameter.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/immutable/ctor_modifier_args.sol,f(uint a)
ethereum/solidity,test/libsolidity/semanticTests/viaYul/storage/simple_storage.sol,setX(uint a);setY(uint a)
ethereum/solidity,test/libsolidity/semanticTests/fallback/fallback_argument_to_storage.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/write_storage_fail.sol,f()
ethereum/solidity,test/libsolidity/ASTJSON/base_constructor_call.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/license/license_natspec.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/for_1_break_fail.sol,"f(uint x, bool b)"
ethereum/solidity,test/libsolidity/syntaxTests/literals/unicode_string_direction_override_1.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/bound/using_for_library.sol,""
ethereum/solidity,test/libsolidity/semanticTests/cleanup/cleanup_in_compound_assign.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/types/function_types/selector/state_variable_selector_super.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/multiSource/no_import.sol,g(uint256 x);f(uint256 x)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/313_fixed_type_size_capabilities.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_multiple_unresolved.sol,foo()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/489_function_types_selector_6.sol,h();f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/490_function_types_selector_7.sol,h();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/functions_bound_1.sol,"add(uint x, uint y);f(uint x)"
ethereum/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/differentNumberOfComponentsFromReturn.sol,f();g();h();one();two();three();four()
ethereum/solidity,test/libsolidity/smtCheckerTests/try_catch/try_multiple_returned_values.sol,d();f()
ethereum/solidity,test/libsolidity/syntaxTests/imports/name_clash_in_import_1.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/shifts/shr_unused.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/revertStatement/revert_event.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/inheritance/derived_overload_base_function_indirect.sol,f(uint256 a);f();g();h()
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_return_internal.sol,f();g();h();i()
ethereum/solidity,test/libsolidity/syntaxTests/functionCalls/named_arguments_overload_in_any_order.sol,"f(uint u, string memory s, bool b);f(uint u, uint s, uint b);call()"
ethereum/solidity,test/libsolidity/syntaxTests/structs/member_type_func.sol,f();g(function(S memory)
ethereum/solidity,test/libsolidity/syntaxTests/array/nested_calldata_memory.sol,killer(bytes[2] calldata weapon)
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/returning_structs_no_restrict_warning.sol,f();g();h()
ethereum/solidity,test/libsolidity/ASTJSON/license.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/special/timestamp_2.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/assignment_location.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/msg_sender.sol,test()
ethereum/solidity,test/libsolidity/ASTJSON/two_base_functions.sol,f();f();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/functions_2.sol,f();g();f()
ethereum/solidity,test/libsolidity/semanticTests/multiSource/imported_free_function_via_alias_direct_call.sol,f();f();h()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/tuple_declarations_function_empty.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/specialFunctions/abidecode/abi_decode_struct_v2.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/events/event_anonymous_with_signature_collision.sol,deposit(bytes32 _id)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/466_does_not_error_transfer_payable_fallback.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/parsing/assembly_evmasm_type.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_modifier_no_override.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/compound_bitwise_or_uint_2.sol,f(bool b)
ethereum/solidity,test/libsolidity/semanticTests/functionTypes/selector_1.sol,ext();pub();test()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/mapping_5.sol,"f(address a, uint x)"
ethereum/solidity,test/libsolidity/semanticTests/constructor/payable_constructor.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/constantEvaluator/underflow.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/address_transfer_insufficient.sol,"f(address payable a, address payable b)"
ethereum/solidity,test/libsolidity/semanticTests/functionTypes/struct_with_functions.sol,X();Y();f()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/array_copy_storage_to_memory_nested.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct/struct_state_var.sol,p();f(uint _x)
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/calldata_array.sol,f(uint[] calldata bytesAsCalldata)
ethereum/solidity,test/libsolidity/semanticTests/functionTypes/mapping_of_functions.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/functionCalls/named_arguments_in_any_order.sol,"f(uint u, string memory s, bool b);call()"
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/mod_n_uint16.sol,"f(uint16 x, uint16 y)"
ethereum/solidity,test/libsolidity/smtCheckerTests/types/address_transfer.sol,f(address payable a)
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy_3.sol,""
ethereum/solidity,test/libsolidity/semanticTests/builtinFunctions/keccak256_multiple_arguments_with_string_literals.sol,"foo();bar(uint256 a, uint16 b)"
ethereum/solidity,test/libsolidity/syntaxTests/natspec/invalid/docstring_inheritdoc_twice.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/suggest_view.sol,g()
ethereum/solidity,test/libsolidity/syntaxTests/dataLocations/publicFunction/function_argument_location_specifier_test_public_storage.sol,f(bytes storage)
ethereum/solidity,test/libsolidity/syntaxTests/structs/calldata_array_assign.sol,"f(S calldata s, int[3] calldata a)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/216_function_argument_storage_to_mem.sol,f(uint[] storage x);g(uint[] memory x)
ethereum/solidity,test/libsolidity/semanticTests/array/concat/bytes_concat_nested.sol,"f(bytes memory a, bytes memory b, bytes memory c)"
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_merge_variables_4.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/362_calling_nonpayable.sol,nopay();f();g()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/enum_from_library.sol,f()
ethereum/solidity,test/compilationTests/gnosis/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
ethereum/solidity,test/libsolidity/syntaxTests/memberLookup/msg_value_modifier_view.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/bitwise_not_int.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/interfaceID/lisa_interfaceId.sol,supportsInterface(bytes4 interfaceID);supportsInterface(bytes4 interfaceID);skinColor();skinColor()
ethereum/solidity,test/libsolidity/smtCheckerTests/bmc_coverage/unchecked_function_call_with_unchecked_block.sol,f(uint x);g(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/public_constant_var_overrides_pure.sol,foo()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/assign_to_instruction.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/array_of_struct_calldata_to_storage.sol,f(S[] calldata c)
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/array/access_to_array_push_view.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/scoping/state_variable_function_conflict_former_crash.sol,balance(uint number);doSomething()
ethereum/solidity,test/libsolidity/smtCheckerTests/abi/abi_decode_simple.sol,"abiDecodeSimple(bytes memory b1, bytes memory b2)"
ethereum/solidity,test/libsolidity/semanticTests/various/inline_member_init.sol,get()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/367_using_directive_for_missing_selftype.sol,b();a()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/public_var_overrides_public_var.sol,""
ethereum/solidity,test/libsolidity/semanticTests/constructor/functions_called_by_constructor_through_dispatch.sol,"getName();setName(bytes6 _name);leftByteShift(bytes6 _value, uint _shift);applyShift(function (bytes6 _value, uint _shift)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/180_external_types_clash.sol,f(a);f(uint8 a)
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/calldata_memory_interface_struct.sol,f(S calldata);g(S calldata);h(S calldata);i(S calldata);f(S memory);g(S memory);h(S memory);i(S memory)
ethereum/solidity,test/libsolidity/syntaxTests/errors/require_custom.sol,f(bool c)
ethereum/solidity,test/libsolidity/semanticTests/viaYul/memory_struct_allow.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/array_range_nested_invalid.sol,f(uint256[][] calldata x)
ethereum/solidity,test/libsolidity/syntaxTests/parsing/function_type_as_parameter.sol,f(function(uint)
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/no_matching_resolution.sol,f();f();h();f();i()
ethereum/solidity,test/libsolidity/semanticTests/libraries/internal_library_function_bound_to_fixed_array.sol,"at(uint[2] memory a, uint i);secondItem()"
ethereum/solidity,test/libsolidity/smtCheckerTests/types/mapping_equal_keys_1.sol,"f(uint x, uint y)"
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/fixed_point_add.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/push_as_lhs_and_rhs_bytes.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_and_touched_function.sol,g(bool _b);f()
ethereum/solidity,test/cmdlineTests/exp_base_literal/input.sol,"f(uint a, uint b, uint c, uint d)"
ethereum/solidity,test/libsolidity/syntaxTests/tryCatch/returns_mismatch.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/459_function_overload_is_not_shadowing.sol,f();f(uint)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/290_varM_disqualified_as_keyword_3.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/virtualFunctions/internal_virtual_function_calls_through_dispatch.sol,f();g();g();h()
ethereum/solidity,test/libsolidity/syntaxTests/lvalues/functions.sol,f();g();h();i()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/580_improve_name_suggestion_one_and_two_letters.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/ambiguous_base_and_unique_implementation.sol,f();g();f();f();g();f();g()
ethereum/solidity,test/libsolidity/syntaxTests/dataLocations/privateFunction/private_function_parameters_no_data_location.sol,f(uint[])
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/215_function_argument_mem_to_storage.sol,f(uint[] storage x);g(uint[] memory x)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/501_gasleft_shadowing_2.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/string/string_escapes.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/modifiers/non-virtual_modifier_override.sol,""
ethereum/solidity,test/libsolidity/semanticTests/revertStrings/calldata_tail_short.sol,f(uint256[][] calldata x)
ethereum/solidity,test/libsolidity/semanticTests/viaYul/unary_operations.sol,preincr(uint a);postincr(uint a);predecr(uint a);postdecr(uint a);not(bool a);bitnot(int256 a);negate(int256 a)
ethereum/solidity,test/libsolidity/semanticTests/array/calldata_array_of_struct.sol,f(S[] calldata s)
ethereum/solidity,test/libsolidity/syntaxTests/types/contract_to_base_base.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/imports/complex_import.sol,"f(c.S memory var1, x.C.S memory var2, C.S memory var3)"
ethereum/solidity,test/libsolidity/syntaxTests/parsing/var_storage_var.sol,""
ethereum/solidity,test/libsolidity/semanticTests/types/struct_mapping_abstract_constructor_param.sol,"getM(uint a, uint b)"
ethereum/solidity,test/libsolidity/syntaxTests/bytecodeReferences/library_public_called.sol,foo();foo();f()
ethereum/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_indirectly_recursive_dynamic_multi_array.sol,""
ethereum/solidity,test/libsolidity/semanticTests/array/copying/dirty_memory_bytes_to_storage_copy_ir.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/length_1d_mapping_array_2d_1.sol,"f(uint x, uint y)"
ethereum/solidity,test/libsolidity/semanticTests/smoke/fallback.sol,""
ethereum/solidity,test/libsolidity/semanticTests/various/literal_empty_string.sol,"f(bytes32 _x, uint256 _a);g()"
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/assignment_in_declaration.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/shift_warn_literal_large_shift_amount.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/empty_tuple_event.sol,a()
ethereum/solidity,test/libsolidity/syntaxTests/types/magic_block_istanbul.sol,f();g();h();i();j()
ethereum/solidity,test/libsolidity/semanticTests/arithmetics/divisiod_by_zero.sol,"div(uint256 a, uint256 b);mod(uint256 a, uint256 b)"
ethereum/solidity,test/libsolidity/syntaxTests/structs/recursion/return_recursive_structs2.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/returnExpressions/tuple_return_mismatching_number_named.sol,f();g();h()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/invalid_fixed_conversion_leading_zeroes_check.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/string/string_unicode_without_prefix.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/array_argument_internal.sol,f(mapping(uint => uint)
ethereum/solidity,test/libsolidity/syntaxTests/parsing/multiple_functions_natspec_documentation.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/types/bytesNN_to_uint_same_size.sol,f();g();h();i();j();k()
ethereum/solidity,test/libsolidity/smtCheckerTests/abi/abi_encode_with_selector_hash.sol,"abiEncodeHash(bytes4 sel, uint a, uint b)"
ethereum/solidity,test/libsolidity/syntaxTests/events/event_param_type_outside_storage.sol,""
ethereum/solidity,test/libsolidity/semanticTests/viaYul/array_3d_new.sol,f(uint n)
ethereum/solidity,test/libsolidity/syntaxTests/types/cyclic_dependency_check_on_consts_good.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/events/anonymous_event_four_indexed.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/parsing/mapping_from_address_payable.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/parsing/constructor_internal_public.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/specialFunctions/abidecode/abi_decode_memory.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/tryCatch/catch_low_level.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/fallback/payable_fallback_without_receive_nonempty.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct/struct_array_struct_array_memory_safe.sol,f()
ethereum/solidity,test/libsolidity/ABIJson/library_function.sol,"f(StructType storage b, uint[] storage c, X d)"
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/callvalue_nonpayable_assembly_function_internal.sol,f();g()
ethereum/solidity,test/libsolidity/smtCheckerTests/try_catch/try_multiple_returned_values_with_tuple.sol,g();f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/max_depth_reached_3.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/multiVariableDeclarationScoping2.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/exp_neg_overflow.sol,"f(int8 x, uint y);g(int256 x, uint y)"
ethereum/solidity,test/libsolidity/semanticTests/externalSource/_source_name_starting_with_dots/dot_a.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/enums/global_enum_contract_name_clash.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/functionCalls/named_arguments_overload_failing_ambiguous.sol,"f(uint x, string memory y, bool z);f(string memory y, uint x, bool z);f(bool z, string memory y, uint x);call()"
ethereum/solidity,test/libsolidity/semanticTests/viaYul/function_selector.sol,f();h(function()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/functions_storage_var_1.sol,f(uint x);g()
ethereum/solidity,test/libsolidity/syntaxTests/tryCatch/catch_error.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/072_state_variable_member_of_wrong_class1.sol,foo()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/array_memory_allocation/array_static_return_param_zeroed_memory_index_access.sol,set(string memory s)
ethereum/solidity,test/libsolidity/semanticTests/various/staticcall_for_view_and_pure_pre_byzantium.sol,f();f();f();f();fview();fpure()
ethereum/solidity,test/libsolidity/syntaxTests/freeFunctions/free_constructor.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/unchecked/check_var_init.sol,h();f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/assignment_from_functiontype.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/function_type_returned.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/if_err.sol,f(bool flag);g(bool flag)
ethereum/solidity,test/libsolidity/syntaxTests/events/inheritance_multi_parent.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/552_warn_about_address_members_on_non_this_contract_delegatecall.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/calldata/calldata_bytes_internal.sol,"f(bytes calldata b, uint i);f(uint, bytes calldata b, uint)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/494_builtin_sha256_reject_gas.sol,f()
ethereum/solidity,test/compilationTests/corion/announcementTypes.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/array/slice/bytes_calldata.sol,f(bytes calldata x)
ethereum/solidity,test/libsolidity/smtCheckerTests/file_level/free_constant_2.sol,i()
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_with_return/simple_if.sol,"test(uint256 a, uint256 b)"
ethereum/solidity,test/libsolidity/semanticTests/constructor/store_function_in_constructor_packed.sol,doubleInv(uint16 _arg);use(uint16 _arg)
ethereum/solidity,test/libsolidity/syntaxTests/types/byte.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/292_modifier_is_not_a_valid_typename_is_not_fatal.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/immutable/getter_call_in_constructor.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/immutable/initialized_after_ctor.sol,""
ethereum/solidity,test/libsolidity/semanticTests/various/code_access_content.sol,testRuntime();testCreation()
ethereum/solidity,test/libsolidity/syntaxTests/freeFunctions/super_in_free_function.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/zero_literal_to_bytesNN_implicit.sol,f();g();h()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/bitwise_or_int.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/specialFunctions/abi_encodePacked_structs_v2.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/nonintermediate_common_base_and_unique_implementation_modifier.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/imports/simple_alias.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/globalFunctions/keccak256_with_wrong_arg_count.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/internal_call_inheritance.sol,c();b();a()
ethereum/solidity,test/libsolidity/syntaxTests/license/license_bottom.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/098_access_to_default_state_variable_visibility.sol,g()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/314_fixed_type_zero_handling.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/v2_call_to_v2_contract_function_returning_dynamic_string_array.sol,f();g()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/delete_array_index.sol,f(bool b)
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/constructor_state_variable_init_chain_run_all_2.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/070_struct_accessor_one_array_only.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/array/calldata_resize.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/array/slice/calldata_dynamic.sol,f(uint256[] calldata x)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/string_2.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/hex_literal_to_bytesNN_different_size_implicit.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/fallback/return_value_number.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/unary_sub_array.sol,p();f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/231_array_out_of_bound_access.sol,""
ethereum/solidity,test/libsolidity/semanticTests/getters/mapping_of_string.sol,""
ethereum/solidity,test/libsolidity/semanticTests/externalSource/_non_normalized_paths/d.sol,""
ethereum/solidity,test/libsolidity/semanticTests/externalSource/_relative_imports/D/d.sol,""
ethereum/solidity,test/libsolidity/semanticTests/specialFunctions/abi_functions_member_access.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array_static_dynamic_static.sol,f(uint8[1][][1] calldata s);reenc_f(uint8[1][][1] calldata s);g();h();i();j()
ethereum/solidity,test/libsolidity/syntaxTests/functionCalls/calloptions_on_staticcall.sol,foo()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/360_function_variable_mixin.sol,ok();checkOk()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/118_shift_warn_literal_base_3.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/empty_tuple_lvalue.sol,f();a()
ethereum/solidity,test/libsolidity/syntaxTests/types/encoding_fractional.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/541_warn_about_address_members_on_contract_balance.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/static_array_implicit_push_1.sol,f(uint[1] memory x)
ethereum/solidity,test/libsolidity/syntaxTests/constants/cyclic_dependency_2.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/dataLocations/unspecified_constructor.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/special/abi_decode_memory_v2.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/natspec/docstring_state_variable.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/331_rational_as_exponent_half.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/282_invalid_different_types_for_conditional_expression.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/functionCalls/named_arguments_overload.sol,"f(uint x);f(uint x, uint y);f(uint x, uint y, uint z);call()"
ethereum/solidity,test/libsolidity/syntaxTests/types/contractTypeType/members/function_via_contract_name_overloaded.sol,f();f(uint256);g()
ethereum/solidity,test/cmdlineTests/too_long_line/input.sol,"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(announcementType Type, string Announcement, string Link, bool Oppositable, string _str, uint256 _uint, address _addr)"
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_aliasing_storage_4.sol,"p();f(uint[] storage a, uint[] storage b);g(uint x, uint y)"
ethereum/solidity,test/libsolidity/syntaxTests/abstract/contract.sol,""
ethereum/solidity,test/libsolidity/semanticTests/array/pop/array_pop_array_transition.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/399_does_not_warn_msg_value_in_internal_function.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/if_statement.sol,fun(uint256 a)
ethereum/solidity,test/libsolidity/syntaxTests/dataLocations/internalFunction/function_argument_location_specifier_test_internal_memory.sol,f(bytes memory)
ethereum/solidity,test/libsolidity/syntaxTests/indexing/fixedbytes_noninteger_index.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/various_inline_asm.sol,f();myAwesomeFunction(param)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/bytes_2.sol,"f(bytes memory b1, bytes memory b2)"
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/create2_as_variable_post_istanbul.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/revertStrings/calldata_array_dynamic_invalid.sol,f(uint256[][] calldata a)
ethereum/solidity,test/libsolidity/semanticTests/array/copying/memory_to_storage_different_base.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/array_pop_length_3.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/string/string_ascii.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/diamond_top_implemented_intermediate_public_state_variable.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/externalContracts/prbmath_unsigned.sol,"div(uint256 x, uint256 y);exp(uint256 x);gm(uint256 x, uint256 y);mul(uint256 x, uint256 y);pow(uint256 x, uint256 y);sqrt(uint256 x);benchmark(uint256 x)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/488_function_types_selector_5.sol,h();f()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/double_return.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/events/event_access_through_base_name_emit.sol,f()
ethereum/solidity,test/compilationTests/gnosis/MarketMakers/LMSRMarketMaker.sol,"calcCost(Market market, uint8 outcomeTokenIndex, uint outcomeTokenCount);calcProfit(Market market, uint8 outcomeTokenIndex, uint outcomeTokenCount);calcMarginalPrice(Market market, uint8 outcomeTokenIndex);calcCostLevel(int logN, int[] memory netOutcomeTokensSold, uint funding);sumExpOffset(int logN, int[] memory netOutcomeTokensSold, uint funding, uint8 outcomeIndex);getNetOutcomeTokensSold(Market market)"
ethereum/solidity,test/libsolidity/semanticTests/isoltestTesting/balance_with_balance2.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/parsing/lexer_numbers_with_underscores_fixed_fail.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/local_variable_without_init.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_static_1.sol,"f(uint x, uint y)"
ethereum/solidity,test/libsolidity/syntaxTests/parsing/constructor_allowed_this.sol,a();b(C);f();g(C)
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/constructor_base_basic.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/typecast/address_literal.sol,f();g()
ethereum/solidity,test/libsolidity/ABIJson/empty_name_return_parameters.sol,f(uint k)
ethereum/solidity,test/libsolidity/syntaxTests/string/string_multipart_newline_with_hex_prefix.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/typecast/bytes_to_fixed_bytes_1.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/no_unused_variable_warning.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/address/codehash.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/imports/name_clash_in_import_struct_contract_1.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/function_inside_branch_modify_state_var_2.sol,f();g(bool b)
ethereum/solidity,test/libsolidity/syntaxTests/types/address/codehash_before_constantinople.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/abiencodedecode/offset_overflow_in_array_decoding_3.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/tryCatch/double_panic_correct.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/return_storage_pointers.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/calldata_array_three_dimensional.sol,"f(uint256[][2][] calldata x, uint256 i, uint256 j, uint256 k)"
ethereum/solidity,test/libsolidity/smtCheckerTests/types/fixed_bytes_access_5.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/iceRegressionTests/identifier_collision_return_declare.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/inline_assembly/assembly_local_storage_access_inside_function.sol,f();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/assignment_contract_member_variable_array_3.sol,p();f();push_v(int x)
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/calldata_slot.sol,f(bytes calldata bytesAsCalldata)
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array_two_static.sol,"f(uint256[3] calldata s1, uint256[2] calldata s2, bool which);g(uint256[3] calldata s1, uint256[2] calldata s2, bool which)"
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/conditional_assignment_4.sol,d();g();f(bool b);h()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/copy_function_storage_array.sol,test();a()
ethereum/solidity,test/libsolidity/semanticTests/functionCall/calling_uninitialized_function_in_detail.sol,t()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/unimplemented_internal.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/array/length/can_be_recursive_constant.sol,""
ethereum/solidity,test/libsolidity/semanticTests/viaYul/assert.sol,f(bool a);fail();succeed()
ethereum/solidity,test/libsolidity/smtCheckerTests/external_calls/mutex_f_no_guard.sol,d();set(uint _x);f()
ethereum/solidity,test/libsolidity/smtCheckerTests/file_level/recursion.sol,"exp(uint base, uint exponent);g(uint base, uint exponent);f()"
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/constant_computation.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/function_array_cross_calls.sol,f(function();test();e();f();g();h();htwo()
ethereum/solidity,test/libsolidity/syntaxTests/events/events_with_same_name_unnamed_arguments.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/receiveEther/receive_as_function_name.sol,receive()
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/constructor_state_variable_init_chain_alternate.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/reverting_call_virtual2.sol,iWillRevert();test(bool _param);iWillRevert()
ethereum/solidity,test/libsolidity/syntaxTests/types/rational_number_huge.sol,f(uint y)
ethereum/solidity,test/libsolidity/semanticTests/receive/empty_calldata_calls_receive.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/bitwise_rational_2.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/conversion/function_type_payable_nonpayable.sol,h();f()
ethereum/solidity,test/libsolidity/ASTJSON/modifier_invocation.sol,F()
ethereum/solidity,test/libsolidity/ASTJSON/modifier_definition.sol,F()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/arrays_in_events.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/types/strict_explicit_err.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/special/this_state.sol,f(address a)
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/constructor_simple.sol,f(uint y)
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_trivial_condition_2.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/343_integer_and_fixed_interaction.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/accessor/accessor_for_state_variable.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/compoundAssignment/incomp_types.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/libraries/external_call_with_storage_array_parameter.sol,f(uint256[2] storage _a);g(uint256 _value)
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/triangle_impl.sol,f();f();f()
ethereum/solidity,test/libsolidity/semanticTests/literals/escape.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/immutable/inheritance_virtual_functions_super.sol,readX();readX()
ethereum/solidity,test/libsolidity/syntaxTests/freeFunctions/circular_reference1functions_first.sol,l();s();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/constructor_state_value_inherited.sol,f(uint y)
ethereum/solidity,test/compilationTests/gnosis/Markets/StandardMarket.sol,"fund(uint _funding);close();withdrawFees();buy(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint maxCost);sell(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint minProfit);shortSell(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint minProfit);calcMarketFee(uint outcomeTokenCost)"
ethereum/solidity,test/libsolidity/syntaxTests/immutable/ctor_indirect_initialization.sol,initX()
ethereum/solidity,test/libsolidity/smtCheckerTests/typecast/cast_larger_2_fail.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_with_return/constructors.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/comment_fine.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/push_push_no_args_1_fail.sol,l()
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/delete_function_type_invalid.sol,f()
ethereum/solidity,test/cmdlineTests/optimizer_array_sload/input.sol,sumArray()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/compound_bitwise_xor_uint.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/conditional_assignment_always_true.sol,f(bool b)
ethereum/solidity,test/libsolidity/syntaxTests/specialFunctions/encodePacked_array_of_structs.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/mappingReturn/named_err.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/globalFunctions/log_deprecate.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/internal_call_state_var_init.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/408_invalid_address_length_short.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/structs/struct_assign_reference_to_struct.sol,assign()
ethereum/solidity,test/libsolidity/smtCheckerTests/overflow/unsigned_mul_overflow.sol,"f(uint x, uint y)"
ethereum/solidity,test/libsolidity/semanticTests/structs/struct_storage_to_mapping.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/while_nested_break_fail.sol,"f(uint x, uint y, bool b, bool c)"
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/immutables.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/modifiers/function_return_parameter.sol,f(uint8 a)
ethereum/solidity,test/libsolidity/semanticTests/libraries/bound_returning_calldata_external.sol,f(bytes calldata _x);g(bytes calldata _x);f(bytes calldata _x)
ethereum/solidity,test/libsolidity/ASTJSON/assembly/slot_offset.sol,e()
ethereum/solidity,test/libsolidity/semanticTests/abiencodedecode/abi_encode_with_selector.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/imports/regular_import.sol,""
ethereum/solidity,test/libsolidity/semanticTests/functionCall/delegatecall_return_value_pre_byzantium.sol,set(uint256 _value);get();get_delegated()
ethereum/solidity,test/libsolidity/semanticTests/arithmetics/block_inside_unchecked.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/abiencodedecode/abi_encode_empty_string_v1.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/public_vars_multiple5.sol,"balanceOf(address, uint);balanceOf(uint);balanceOf()"
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/v1_call_to_v2_contract_function_returning_struct.sol,get();foo()
ethereum/solidity,test/compilationTests/gnosis/Oracles/MajorityOracleFactory.sol,createMajorityOracle(Oracle[] memory oracles)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_dynamic_parameter_1.sol,"f(uint[] memory array, uint x, uint y)"
ethereum/solidity,test/libsolidity/syntaxTests/array/nested_calldata_memory2.sol,killer(uint256[][2] calldata weapon)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/474_storage_location_non_array_or_struct_disallowed_is_not_fatal.sol,f(uint storage a)
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/pc_disallowed.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/metaTypes/name.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/imports/name_clash_in_import_enum_contract.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_literal_5.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/tryCatch/empty_returns.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/immutable/inheritance_ctor_inherit_specifier_argument_init.sol,""
ethereum/solidity,test/libsolidity/semanticTests/inheritance/pass_dynamic_arguments_to_the_base.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/290_varM_disqualified_as_keyword_2.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/functions_identifier_nested_tuple_3.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/indexAccess/bytes_index_access.sol,"direct(bytes calldata arg, uint index);storageCopyRead(bytes calldata arg, uint index);storageWrite()"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/366_invalid_array_as_statement.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/133_enum_duplicate_values.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/types/library_function_selector_view_pure.sol,f(uint256);g(uint256);f()
ethereum/solidity,test/libsolidity/semanticTests/isoltestTesting/balance_other_contract.sol,getAddress();getAddress()
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/conversion_to_address.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/exp.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/freeFunctions/free_namesake_contract_function.sol,f();f()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/require.sol,f(bool a);fail();succeed()
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/v2_call_to_v2_contract_function_returning_struct_with_dynamic_array.sol,get();foo()
ethereum/solidity,test/libsolidity/semanticTests/revertStrings/empty_v2.sol,f();g(string calldata msg)
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/while_1_continue_fail.sol,"f(uint x, bool b)"
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/unary_sub.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/events/event_emit_foreign_class.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/tuple_declarations_empty.sol,g()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/290_varM_disqualified_as_keyword_1.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/external_function_type_to_uint.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/functionCalls/named_arguments_overload_failing_right_names_wrong_order.sol,"f(uint x, string memory y, bool z);f(uint x, uint y, uint z);call()"
ethereum/solidity,test/libsolidity/smtCheckerTests/special/event.sol,f();g_data();g();h_data();h()
ethereum/solidity,test/libsolidity/syntaxTests/metaTypes/typeNotRegularIdentifierStateVariable.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/emit/emit_empty.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/specialFunctions/abi_encode_nested_dynamic_array_v2.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/string/invalid_utf8_in_bytes.sol,""
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_struct_dynamic.sol,f(S calldata s);g(S calldata s)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/shadowsBuiltin/events.sol,""
ethereum/solidity,test/libsolidity/semanticTests/viaYul/string_format.sol,g();h()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/assignment_from_functiontype3.sol,ff();f()
ethereum/solidity,test/libsolidity/semanticTests/functionTypes/function_external_delete_storage.sol,increment();set();incrementIndirectly();deleteFunction()
ethereum/solidity,test/libsolidity/syntaxTests/array/length/parentheses.sol,""
ethereum/solidity,test/libsolidity/semanticTests/calldata/calldata_array_dynamic_bytes.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/try_catch/try_2.sol,g();f()
ethereum/solidity,test/libsolidity/syntaxTests/immutable/inheritance_ctor.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/constant_ref.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/inline_array_with_bound_function.sol,f(uint a);g(uint a);f()
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array_static.sol,f(uint256[3] calldata s);g(uint256[3] calldata s);h(uint8[3] calldata s);i(uint8[3] calldata s)
ethereum/solidity,test/libsolidity/semanticTests/memoryManagement/assembly_access.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/structs/recursion/recursive_struct_as_memory_library_function_parameter.sol,f(MyStructName memory _x)
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/short_circuit_err.sol,f();g();h()
ethereum/solidity,test/libsolidity/syntaxTests/globalFunctions/suicide_override.sol,suicide();f()
ethereum/solidity,test/libsolidity/syntaxTests/natspec/docstring_parameter.sol,"f(address _from, address _5to, uint256 value)"
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/modifiers.sol,f();g();h();i();j();k();l();m();n()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/conditional_with_variables.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/complex/warn_on_typecast.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/structs/global_struct_shadowing.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/events/event.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inline_arrays/inline_array_declaration_and_passing_implicit_conversion_strings.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/comments/unicode_direction_override_1.sol,confirmUpgrade()
ethereum/solidity,test/libsolidity/semanticTests/events/event.sol,"deposit(bytes32 _id, bool _manually)"
ethereum/solidity,test/libsolidity/semanticTests/events/event_emit_from_other_contract.sol,deposit(bytes32 _id);deposit(bytes32 _id)
ethereum/solidity,test/cmdlineTests/ir_compiler_inheritance_nosubobjects/input.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/special/timestamp.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/events/event_nested_array_in_struct.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/543_warn_about_address_members_on_contract_send.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/structs/struct_storage_to_memory_function_ptr.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/implement_private_function_by_public_variable.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/events/event_emit_complex.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/upper_case_hex_literals.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/typeChecking/library_instances.sol,foo(X param)
ethereum/solidity,test/libsolidity/semanticTests/array/copying/calldata_array_dynamic_to_storage.sol,f(uint256[] calldata data)
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/named_arguments_in_any_order.sol,"f(uint u, string memory s, bool b);call()"
ethereum/solidity,test/libsolidity/smtCheckerTests/typecast/cast_smaller_1.sol,f(uint16 x)
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/localStorageVariables/short_circuit_declaration_fine.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/array/calldata.sol,f(uint[3] calldata)
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/shifts/shift_right_negative_lvalue_int8.sol,"f(int8 a, uint8 b);t()"
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/abi_encode_calldata_slice.sol,"enc_packed_bytes(bytes calldata data, uint256 start, uint256 end);enc_packed_bytes_reference(bytes calldata data, uint256 start, uint256 end);enc_bytes(bytes calldata data, uint256 start, uint256 end);enc_bytes_reference(bytes calldata data, uint256 start, uint256 end);compare(bytes memory x, bytes memory y);test_bytes()"
ethereum/solidity,test/libsolidity/syntaxTests/tryCatch/scoping.sol,test(address _ext)
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/push_zero_2d_unsafe.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/interfaceID/interfaceId_events.sol,hello();world(int);hello();world(int)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_dynamic_2_fail.sol,"a();f(uint x, uint y, uint z, uint t)"
ethereum/solidity,test/libsolidity/syntaxTests/parsing/function_type_state_variable.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/immutable/function_pointer_initializing.sol,f()
ethereum/solidity,test/cmdlineTests/optimizer_inliner_dynamic_reference_constructor/input.sol,a();h();f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/350_unused_return_value_delegatecall.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/push/nested_bytes_push.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/contractTypeType/members/function_via_contract_name_public.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/reference_non_base_ctor.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/specialFunctions/encode_array_of_struct.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/address/address_uint_bytes20_this.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/conditional/conditional_with_variables.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/function_call_inside_branch_2.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/046_returning_multi_dimensional_static_arrays.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/metaTypes/name_other_contract.sol,f();f();f();c();a();i()
ethereum/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_multi_functions_recursive.sol,"g(uint a, uint b);f(uint x)"
ethereum/solidity,test/libsolidity/syntaxTests/array/pop/storage_with_mapping_pop.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/errors/clash_function_error_inheritance_2.sol,Err()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/calldata_bytes_array_to_memory.sol,f(bytes[] calldata a)
ethereum/solidity,test/libsolidity/semanticTests/revertStrings/enum_v1.sol,f(E[] calldata arr)
ethereum/solidity,test/cmdlineTests/optimizer_inliner_add/input.sol,"unsafe_add(uint x, uint y);f()"
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/constant.sol,k()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/compound_bitwise_string_literal_2.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/libraries/external_call_with_function_pointer_parameter.sol,double(uint256 _a);g(uint256 _value)
ethereum/solidity,test/libsolidity/semanticTests/tryCatch/structured.sol,g(bool b);f(bool b)
ethereum/solidity,test/libsolidity/syntaxTests/types/address/literal_to_address_call.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/inlineAssembly/inline_assembly_function_call.sol,"f();asmfun(a, b, c)"
ethereum/solidity,test/libsolidity/semanticTests/functionCall/creation_function_call_with_args.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/getters/string.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/external_variable.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/types/bytes33.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/parsing/address_payable_type_expression.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/indexAccess/fixed_bytes_index_access.sol,f(bytes32 x);g(bytes32 x)
ethereum/solidity,test/libsolidity/semanticTests/various/external_types_in_calls.sol,test()
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/storage_pointer_push_1_safe.sol,l();s()
ethereum/solidity,test/libsolidity/syntaxTests/constructor/inconstructible_abstract_contract_inverted.sol,""
ethereum/solidity,test/libsolidity/semanticTests/types/strings.sol,"fixedBytesHex();fixedBytes();pipeThrough(bytes2 small, bool one)"
ethereum/solidity,test/libsolidity/semanticTests/libraries/internal_library_function_bound_to_external_function.sol,double(function(uint);identity(uint x);test(uint value)
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/compound_bitwise_xor_fixed_bytes.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/variables/mapping_local_assignment.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV1/decode_slice.sol,"f(uint256 a, uint256 b)"
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/library_constant.sol,f(uint x)
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/bitwise_and_uint.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/specialFunctions/abi_encodePacked_nested_dynamic_array_v2.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/array_copy_storage_storage_dynamic_dynamic.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/internal_external_inheritance.sol,f(uint[] calldata);f(uint[] memory)
ethereum/solidity,test/libsolidity/syntaxTests/enums/enum_member_shadowing.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/conditional_assignment_statevar_1.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/event.sol,""
ethereum/solidity,test/libsolidity/semanticTests/various/multi_variable_declaration.sol,g();h();f()
ethereum/solidity,test/libsolidity/syntaxTests/errors/using_structs.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/fallback/fallback_duplicate_returns_override.sol,""
ethereum/solidity,test/libsolidity/semanticTests/array/create_multiple_dynamic_arrays.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/string/string_multipart_newline_without_hex_prefix.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/duplicated_constructor_call/base_multi.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/fallback/returns.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/fallback/payable_fallback_with_inherited_receive.sol,""
ethereum/solidity,test/libsolidity/semanticTests/modifiers/modifier_in_constructor_ice.sol,""
ethereum/solidity,test/libsolidity/semanticTests/array/indexAccess/bytes_memory_index_access.sol,"set(bytes memory _data, uint256 i)"
ethereum/solidity,test/libsolidity/syntaxTests/inline_arrays/inline_array_declaration_and_passing_implicit_conversion.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_and_inside_branch.sol,f();g()
ethereum/solidity,test/cmdlineTests/viair_abicoder_v1/input.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inline_arrays/inline_array_declaration_const_int_conversion.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/new_address_payable.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/globalFunctions/delegatecall_with_wrong_arg_count.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/division_1.sol,"f(uint x, uint y)"
ethereum/solidity,test/libsolidity/smtCheckerTests/typecast/same_size.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/multiSource/free_different_interger_types.sol,f(uint);g();foo()
ethereum/solidity,test/libsolidity/semanticTests/constructor/store_internal_unused_library_function_in_constructor.sol,x();t()
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_data_location_function_param_public.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/errors/struct_named_error.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/indexing/array_without_index.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/invalidTypes/conditional_expression.sol,o(bytes1);f()
ethereum/solidity,test/libsolidity/semanticTests/getters/bytes.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/bmc_coverage/branches_with_return/simple_if.sol,"test(uint256 a, uint256 b)"
ethereum/solidity,test/libsolidity/semanticTests/functionTypes/function_delete_storage.sol,a();set();d();ca()
ethereum/solidity,test/libsolidity/semanticTests/interfaceID/homer_interfaceId.sol,supportsInterface(bytes4 interfaceID);skinColor();supportsInterface(bytes4 interfaceID);skinColor()
ethereum/solidity,test/libsolidity/semanticTests/conversions/function_type_array_to_storage.sol,externalDefault();externalView();externalPure();internalDefault();internalView();internalPure();testViewToDefault();testPureToDefault();testPureToView()
ethereum/solidity,test/libsolidity/smtCheckerTests/bmc_coverage/branches_with_return/constructors.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/scoping/double_variable_declaration_same_and_disjoint_scope.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/emit_without_event.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/tuple_single_element_1.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/specialFunctions/abidecode/abi_decode_storage.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/constants/constants_at_file_level_referencing.sol,fre();f();g();h();i()
ethereum/solidity,test/libsolidity/syntaxTests/dataLocations/externalFunction/external_function_return_parameters_no_data_location.sol,i()
ethereum/solidity,test/libsolidity/syntaxTests/events/event_struct_indexed.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/constructor/constructible_internal_constructor.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_with_return/simple_if_array.sol,check();conditional_store()
ethereum/solidity,test/libsolidity/syntaxTests/types/address/address_payable_selfdestruct.sol,f(address payable a)
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_merge_variables_2.sol,f(uint x)
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/shift_right.sol,"f(uint256 a, uint256 b)"
ethereum/solidity,test/libsolidity/semanticTests/viaYul/array_2d_assignment.sol,f(uint n)
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/localStorageVariables/for_declaration_err.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/shadowsBuiltin/storage_variables.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/types/function_in_tuple_1.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/modifiers/function_modifier_calling_functions_in_creation_context.sol,getData()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/bitwise_and_fixed_bytes.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/libraries/internal_library_function_pointer.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/array/memory_arrays_of_various_sizes.sol,"f(uint256 n, uint256 k)"
ethereum/solidity,test/libsolidity/semanticTests/array/copying/copy_byte_array_to_storage.sol,dataslot();readDataSlot(uint offset);readDataSlot();readHead();f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/173_constant_struct.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_array_assignment_storage_memory.sol,p();testUnboundedForLoop(uint n)
ethereum/solidity,test/libsolidity/semanticTests/viaYul/exp_various.sol,"f(uint8 x, uint8 y);g(uint x, uint y)"
ethereum/solidity,test/libsolidity/semanticTests/events/event_signature_in_library.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/localStorageVariables/try_declaration_fine.sol,ext();f();g();h()
ethereum/solidity,test/libsolidity/semanticTests/externalSource/non_normalized_paths.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/virtual_private.sol,test();test()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/delete_array_index_2d.sol,init();f(bool b)
ethereum/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/disallowWildcardsFromReturn.sol,fn();one();two();three();four();five()
ethereum/solidity,test/libsolidity/syntaxTests/array/length/bytes32_too_large.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/modifiers/function_modifier_invocation_local_variables.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/push_as_lhs_3d.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/comments/singleline_unicode_direction_override_5.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_interface_multiple.sol,test();test();test()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/481_explicit_literal_to_unspecified_string_assignment.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/480_explicit_literal_to_storage_string_assignment.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/scoping/name_shadowing_function_return_parameter_vs_struct_enum.sol,f();g();h();z(uint EnumType)
ethereum/solidity,test/libsolidity/semanticTests/array/pop/array_pop_isolated.sol,test()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/getters/inaccessible_dynamic_type_2.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/rational_number_literal_limit_2.sol,bignum()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/172_assignment_to_const_string_bytes.sol,""
ethereum/solidity,test/libsolidity/ASTJSON/mappings.sol,""
ethereum/solidity,test/libsolidity/semanticTests/expressions/exp_zero_literal.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/address/contract_receive_to_payable_address_implicitly.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/conversion/function_type_array_to_memory.sol,externalDefault();externalView();externalPure();internalDefault();internalView();internalPure();testViewToDefault();testPureToDefault();testPureToView()
ethereum/solidity,test/libsolidity/syntaxTests/immutable/inheritance_virtual_functions.sol,xInit();xInit()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct_1.sol,"f(uint y, uint v)"
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/virtual_function_call_inside_branch_2.sol,f();v();f();v()
ethereum/solidity,test/libsolidity/syntaxTests/constructor/constructor_mapping_memory.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/special/tx_data_gasleft_changes.sol,f();fi()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/492_do_not_crash_on_not_lvalue.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/structs/struct_delete_storage_with_array.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/visibility/external_library_function.sol,f(uint);f()
ethereum/solidity,test/libsolidity/syntaxTests/multiSource/free_function_alias_different_parameter_types.sol,f();g();foo()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/smoke_test.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/258_using_for_mismatch.sol,double(bytes32 self);f(uint a)
ethereum/solidity,test/libsolidity/syntaxTests/tryCatch/almost_call_options.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/bmc_coverage/branches_with_return/simple_if_struct_2.sol,check();conditional_increment()
ethereum/solidity,test/libsolidity/syntaxTests/array/length/abi_decode_length_too_large.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/mapping_enum_key_getter.sol,"set(E k, uint8 v)"
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/constructor_state_value_parameter.sol,f(uint y)
ethereum/solidity,test/libsolidity/smtCheckerTests/bmc_coverage/branches_with_return/branches_in_modifiers_2.sol,reset_if_overflow();test()
ethereum/solidity,test/libsolidity/semanticTests/modifiers/function_modifier.sol,getOne()
ethereum/solidity,test/libsolidity/syntaxTests/modifiers/legal_modifier_override.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/revertStatement/revert_revert.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy_diamond_empty_middle_empty_base.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/tight_packing_literals.sol,k()
ethereum/solidity,test/libsolidity/syntaxTests/tryCatch/returns.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/call_gas_on_function.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy_mixed_chain_local_vars.sol,""
ethereum/solidity,test/libsolidity/semanticTests/modifiers/function_return_parameter_complex.sol,f();shouldFail(uint i1);g()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/bytes_storage_to_memory.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/compound_bitwise_or_uint.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/dot_in_vardecl.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/abi/abi_encode_no_arguments.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/multiple_statemutability_specifiers.sol,f();f();f();f();f();f();f()
ethereum/solidity,test/libsolidity/semanticTests/conversions/string_to_bytes.sol,f(string memory s)
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/shift_overflow.sol,"leftU(uint8 x, uint8 y);leftS(int8 x, uint8 y)"
ethereum/solidity,test/compilationTests/MultiSigWallet/MultiSigWalletWithDailyLimit.sol,changeDailyLimit(uint _dailyLimit);executeTransaction(uint transactionId);isUnderLimit(uint amount);calcMaxWithdraw()
ethereum/solidity,test/libsolidity/semanticTests/state/msg_sig.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/shift_right_garbled_signed_v1.sol,"f(int8 a, uint8 b);g(int8 a, uint8 b)"
ethereum/solidity,test/libsolidity/syntaxTests/tupleAssignments/nowarn_swap_storage_pointers.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/push_storage_ref_safe_aliasing.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/storage/chop_sign_bits.sol,f();g();h(int8 t)
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/jumpdest_disallowed.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/address/payable_conversion.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/array/calldata_dynamic.sol,f(uint[] calldata)
ethereum/solidity,test/libsolidity/syntaxTests/parsing/fixed_literal_with_double_radix.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/imports/name_clash_in_import_contract_struct_1.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_indirectly_recursive_fixed_array1.sol,""
ethereum/solidity,test/libsolidity/ABIJson/receive_ether_function.sol,""
ethereum/solidity,test/libsolidity/semanticTests/array/copying/storage_memory_nested.sol,f()
ethereum/solidity,test/libsolidity/ABIJson/include_fallback_function.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/whitespace_in_assignment.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/string/string_terminated_by_backslash.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/special/msg_sig.sol,f();fi();g();gi();h()
ethereum/solidity,test/libsolidity/smtCheckerTests/abi/abi_encode_with_selector_array_slice_2.sol,"abiEncodeSlice(bytes4 sel, uint[] calldata data)"
ethereum/solidity,test/libsolidity/semanticTests/array/push/array_push_packed_array.sol,test()
ethereum/solidity,test/libsolidity/semanticTests/structs/calldata/dynamic_nested.sol,f(S calldata s)
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/while_2_break.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/address/payable_conversions_literals.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/public_immutable_var_overrides_pure.sol,foo()
ethereum/solidity,test/libsolidity/syntaxTests/functionCalls/named_arguments_overload_failing3.sol,"f(uint x);f(uint x, uint y);f(uint x, uint y, uint z);call()"
ethereum/solidity,test/compilationTests/gnosis/Oracles/CentralizedOracle.sol,replaceOwner(address newOwner);setOutcome(int _outcome);isOutcomeSet();getOutcome()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/bitwise_and_rational.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/memberLookup/member_value_not_unique.sol,value(uint256);value(uint8);f();g()
ethereum/solidity,test/libsolidity/semanticTests/getters/array_mapping_struct.sol,""
ethereum/solidity,test/libsolidity/semanticTests/array/slices/array_calldata_assignment.sol,"f(uint256[] calldata x, uint256[] calldata y, uint256 i)"
ethereum/solidity,test/libsolidity/smtCheckerTests/bmc_coverage/branches_with_return/constructor_state_variable_init.sol,""
ethereum/solidity,test/libsolidity/ASTJSON/yul_hex_literal.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/tupleAssignments/double_storage_crash.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/v1_accessing_public_state_variable_via_v2_type.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/types/address/nonpayable_address_to_contract_receive.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/structs/contract_global_struct_name_clash.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/literalOperations/exponent_fine.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/license/license_unicode.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/array_argument_private.sol,f(mapping(uint => uint)
ethereum/solidity,test/libsolidity/syntaxTests/iceRegressionTests/declarationUnaryTuple/declaration_dec_tuple.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/multiSource/error_in_first.sol,g();f()
ethereum/solidity,test/libsolidity/semanticTests/externalSource/_relative_imports/dir/a.sol,""
ethereum/solidity,test/libsolidity/semanticTests/externalSource/_non_normalized_paths/a.sol,""
ethereum/solidity,test/libsolidity/semanticTests/externalSource/_source_name_starting_with_dots/dir/a.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/calldata_variables.sol,f(bytes calldata bytesAsCalldata)
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy_empty_middle.sol,""
ethereum/solidity,test/libsolidity/semanticTests/builtinFunctions/iterated_keccak256_with_bytes.sol,foo()
ethereum/solidity,test/libsolidity/syntaxTests/multiSource/imported_free_function.sol,f();g()
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/receive_fallback.sol,g()
ethereum/solidity,test/libsolidity/semanticTests/state_variables_init_order_2.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/function_call_inside_else_branch.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/array_copy_storage_storage_dyn_dyn.sol,copyStorageStorage()
ethereum/solidity,test/libsolidity/semanticTests/expressions/inc_dec_operators.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/reverting_call_nested1.sol,iWillRevert();test(bool _param)
ethereum/solidity,test/libsolidity/syntaxTests/parsing/placeholder_in_function_context.sol,fun()
ethereum/solidity,test/libsolidity/syntaxTests/types/decimal_literal_to_bytesNN_explicit.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/globalFunctions/ripemd160_with_wrong_arg_count.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/push/array_push_struct.sol,test()
ethereum/solidity,test/libsolidity/smtCheckerTests/abi/abi_encode_array_slice_2.sol,abiEncodeSlice(uint[] calldata data)
ethereum/solidity,test/libsolidity/semanticTests/constructor/base_constructor_arguments.sol,getA()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/compound_mul_mapping.sol,"f(uint x, uint p)"
ethereum/solidity,test/libsolidity/semanticTests/fallback/fallback_or_receive.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/functionCall/external_call_value.sol,g(uint n);f(uint n)
ethereum/solidity,test/libsolidity/smtCheckerTests/invariants/state_machine_1_fail.sol,f();g();h();j();i()
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/try_catch_2.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/invalid_number.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/push_as_lhs_1d.sol,f();g()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/div_zero.sol,""
ethereum/solidity,test/libsolidity/semanticTests/array/copying/calldata_2d_bytes_to_memory.sol,g(bytes[2] memory m);f(bytes[2] calldata c)
ethereum/solidity,test/libsolidity/smtCheckerTests/special/range_check.sol,""
ethereum/solidity,test/libsolidity/semanticTests/array/pop/array_pop_uint24_transition.sol,test()
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/length_copy_memory_to_storage.sol,f(uint[] memory marr)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/typeChecking/return.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/function_types/selector/function_selector_pure.sol,f();g();h()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/evm_istanbul_on_petersburg.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/array/slice/storage_dynamic.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/constantEvaluator/underflow_unary.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/145_external_base_visibility.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/error_deprecate_gas_function.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/pop/array_pop_empty_exception.sol,test()
ethereum/solidity,test/libsolidity/semanticTests/structs/memory_structs_nested_load.sol,load();store()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/113_exp_warn_literal_base_1.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/external_calls/external_hash_known_code_state_reentrancy_2.sol,f();zz();f();g()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/constructor_super.sol,x()
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/implicit_only_constructor_hierarchy.sol,h();g();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/tuple_extra_parens_2.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/shifts/shift_cleanup.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/calldata_memory_interface.sol,f(uint[] calldata);g(uint[] calldata);h(uint[] calldata);i(uint[] calldata);f(uint[] memory);g(uint[] memory);h(uint[] memory);i(uint[] memory)
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/shadowing/variable_by_opcode.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/constants/constant_variables.sol,""
ethereum/solidity,test/libsolidity/semanticTests/various/typed_multi_variable_declaration.sol,g();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/out_of_bounds/fixed_bytes_1.sol,r(bytes4 x)
ethereum/solidity,test/libsolidity/smtCheckerTests/typecast/number_literal.sol,f();g();h()
ethereum/solidity,test/libsolidity/syntaxTests/specialFunctions/types_with_unspecified_encoding_structs.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/conditional_assignment_nested_unsafe.sol,"f(bool b1, bool b2)"
ethereum/solidity,test/libsolidity/semanticTests/memoryManagement/return_variable.sol,memorySize();f();g();h();i()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/storage_value_vars_1.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/indexing/array_out_of_bounds_index.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/contract.sol,"f(C c, C d)"
ethereum/solidity,test/libsolidity/syntaxTests/imports/name_clash_in_import_contract_struct_3.sol,""
ethereum/solidity,test/libsolidity/semanticTests/integer/uint.sol,uintMinA();uintMinB();uintMinC();uintMinD();uintMaxA();uintMaxB();uintMaxC();uintMaxD()
ethereum/solidity,test/libsolidity/syntaxTests/multiSource/two_imports_same_function.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/conversion/implicit_cast_local_assignment.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/shadowing/global_function_by_opcode.sol,mload();g()
ethereum/solidity,test/libsolidity/syntaxTests/scoping/name_shadowing_local_variable_vs_functions.sol,e();f();g();h()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/shadowsBuiltin/illegal_names_function_parameters.sol,f(uint super);g(uint this);h(uint _);i();j();k()
ethereum/solidity,test/libsolidity/syntaxTests/deprecated_functions.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/state/block_number.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/283_left_value_in_conditional_expression_not_supported_yet.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/tuple_extra_parens_7.sol,g();f()
ethereum/solidity,test/libsolidity/syntaxTests/tryCatch/no_external_call.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/modifier_ambiguous_fail.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/immutable/inheritance_ctor_argument.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/imports/simple.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/modifiers/access_through_contract_name.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/428_bare_revert.sol,f(uint x)
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/getters/enum.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/structs/recursive_structs.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/do_while_break.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/libraries/stub_internal.sol,f(uint256 v);g(uint256 v)
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/constructor_hierarchy_base_calls_with_side_effects_6.sol,f();g()
ethereum/solidity,test/compilationTests/corion/module.sol,"transfer(address payable from, address payable to, uint256 value, bool fee);balanceOf(address payable owner);disableModule(bool forever);_disableModule(bool forever);replaceModuleHandler(address payable newModuleHandlerAddress);_replaceModuleHandler(address payable newModuleHandlerAddress);connectModule();_connectModule();disconnectModule();_disconnectModule();replaceModule(address payable newModuleAddress);_replaceModule(address payable newModuleAddress);newSchellingRoundEvent(uint256 roundID, uint256 reward);registerModuleHandler(address payable _moduleHandlerAddress);isModuleHandler(address payable addr);isActive()"
ethereum/solidity,test/cmdlineTests/linking_solidity_unresolved_references/input.sol,f();f();foo()
ethereum/solidity,test/libsolidity/syntaxTests/immutable/runtimeCode.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/events/inheritance_removes_indexed.sol,""
ethereum/solidity,test/libsolidity/semanticTests/array/copying/bytes_calldata_to_string_calldata.sol,f(bytes calldata c)
ethereum/solidity,test/libsolidity/smtCheckerTests/abi/abi_encode_packed_simple.sol,"abiencodePackedSimple(bool t, uint x, uint y, uint z, uint[] memory a, uint[] memory b)"
ethereum/solidity,test/libsolidity/syntaxTests/immutable/as_function_param.sol,f(uint immutable)
ethereum/solidity,test/libsolidity/semanticTests/types/mapping_contract_key.sol,"get(A k);set(A k, uint8 v)"
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/getters/nested_arrays_mappings_8.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/selector_complex2.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/scoping/double_variable_declaration_disjoint_scope_activation.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/047_returning_arrays_in_structs_new_abi.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/array/pop/memory_pop.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/cleanup/exp_cleanup_direct.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/for_loop_vardef_initexpr.sol,fun(uint256 a)
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/v1_inheritance_from_contract_calling_v2_function.sol,get();foo()
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/shift_cleanup.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_multi_parameters.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/529_fallback_marked_public.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/length_assignment_2d_memory_to_memory.sol,f(uint[][] memory arr)
ethereum/solidity,test/libsolidity/syntaxTests/bytecodeReferences/library_called.sol,foo();foo();f()
ethereum/solidity,test/libsolidity/syntaxTests/largeTypes/oversized_contract_inheritance.sol,""
ethereum/solidity,test/libsolidity/semanticTests/cleanup/bool_conversion_v1.sol,f(bool _b);g(bool _in)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/string_1.sol,"f(string memory s1, string memory s2)"
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/localStorageVariables/smoke_declaration.sol,f();g();h();i()
ethereum/solidity,test/libsolidity/semanticTests/various/skip_dynamic_types_for_structs.sol,g()
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/array/access_to_array_push.sol,g()
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/abi_encode_v2_in_modifier_used_in_v1_contract.sol,get();test()
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/creation_no_restrict_warning.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/430_bare_selfdestruct.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/functions_external_3.sol,"g(uint x);f(uint y, D d)"
ethereum/solidity,test/libsolidity/smtCheckerTests/file_level/struct.sol,"allocate(uint _x, uint _f);f()"
ethereum/solidity,test/libsolidity/syntaxTests/license/license_whitespace_before_spdx.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/types/mapping_equal_keys_2.sol,"f(uint x, uint y)"
ethereum/solidity,test/libsolidity/syntaxTests/array/slice/assign_to_storage.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/205_overwrite_storage_location_external.sol,f(uint[] storage a)
ethereum/solidity,test/libsolidity/syntaxTests/specialFunctions/abidecode/abi_decode_nested_dynamic_array.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/153_array_copy_with_different_types2.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/reverts/assert_require.sol,f();g(bool val);h(bool val)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_branch_1d.sol,"f(bool b, uint[] memory c)"
ethereum/solidity,test/libsolidity/syntaxTests/constructor/constructor.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/interface/contract_base.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/try_catch/try_4.sol,d();set(int n);f()
ethereum/solidity,test/libsolidity/syntaxTests/literals/hex_string_leading_underscore.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/cleanup/address.sol,g(address x);f(uint256 a)
ethereum/solidity,test/compilationTests/gnosis/Oracles/SignedMessageOracle.sol,"replaceSigner(address newSigner, uint _nonce, uint8 v, bytes32 r, bytes32 s);setOutcome(int _outcome, uint8 v, bytes32 r, bytes32 s);isOutcomeSet();getOutcome()"
ethereum/solidity,test/libsolidity/syntaxTests/array/function_mapping.sol,f(mapping(uint => uint)
ethereum/solidity,test/libsolidity/syntaxTests/parsing/enum_inheritance_contract.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/inlineAssembly/inlineasm_empty_let.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/array_copy_memory_to_storage.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/constants/division_by_zero.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/250_member_access_parser_ambiguity.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/returndatasize_as_variable_read_post_byzantium.sol.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/external_calls/mutex.sol,d();set(uint _x);f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/294_long_uint_variable_fails.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_with_return/constructor_state_variable_init_chain_alternate.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/metaTypes/integer.sol,basic()
ethereum/solidity,test/libsolidity/syntaxTests/string/large_utf8_codepoint.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/v2_accessing_returned_dynamic_array_without_returndata_support.sol,get();test()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/164_assigning_value_to_const_variable.sol,changeIt()
ethereum/solidity,test/cmdlineTests/keccak_optimization_low_runs/input.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/msg_value_modifier.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/unimplemented_super_function_derived.sol,f();f();f()
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/external_functions_taking_internal_types_struct_with_mapping.sol,f(S memory)
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/recursive_multi_return.sol,g()
ethereum/solidity,test/libsolidity/syntaxTests/lvalues/calldata_index_access.sol,f(uint256[] calldata x)
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/compound_shr_1.sol,f(bool b)
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/external_functions_taking_internal_types_struct_with_function_type.sol,f(S memory)
ethereum/solidity,test/libsolidity/syntaxTests/unimplemented_super_function.sol,f();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/typecast/string_literal_to_fixed_bytes_constant_initialization_2.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/parsing/address_payable_struct.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/natspec/invalid/docstring_inheritdoc3.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/else_if_statement.sol,fun(uint256 a)
ethereum/solidity,test/libsolidity/smtCheckerTests/complex/slither/data_dependency.sol,set(address source_taint);set(uint source_taint);f();f();f(uint user_input);foo();bar()
ethereum/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_two_invocations_2.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/shift_right_negative_lvalue_int16.sol,"f(int16 a, uint16 b)"
ethereum/solidity,test/libsolidity/syntaxTests/errors/abi_encode_error.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/memoryManagement/static_memory_array_allocation.sol,memorySize();withValue();withoutValue()
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/constructor_hierarchy_base_calls_inheritance_specifier_2.sol,f();g()
ethereum/solidity,test/compilationTests/corion/safeMath.sol,"safeAdd(uint256 a, uint256 b);safeSub(uint256 a, uint256 b)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/096_access_to_default_function_visibility.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/v1_modifier_overriding_v2_modifier.sol,get();foo()
ethereum/solidity,test/libsolidity/syntaxTests/freeFunctions/gas_value.sol,fun()
ethereum/solidity,test/libsolidity/semanticTests/exponentiation/small_exp.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/license/license_missing.sol,""
ethereum/solidity,test/libsolidity/semanticTests/structs/structs.sol,check();set()
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_dynamic_key_public.sol,""
ethereum/solidity,test/libsolidity/ABIJson/constructor_abi.sol,""
ethereum/solidity,test/libsolidity/semanticTests/array/inline_array_storage_to_memory_conversion_ints.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/events/event_nested_array_2.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/imports/private_vars.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/location_specifiers_for_state_variables.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/tryCatch/invalid_error_name.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/getters/bytes.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/structs/memory_structs_as_function_args.sol,"test();extract(S memory s, uint256 which);combine(uint8 x, uint16 y, uint256 z)"
ethereum/solidity,test/libsolidity/syntaxTests/metaTypes/codeAccessLibrary.sol,creationOther();runtime();f(uint)
ethereum/solidity,test/libsolidity/semanticTests/inlineAssembly/inline_assembly_for.sol,f(uint256 a);fac(n)
ethereum/solidity,test/libsolidity/syntaxTests/parsing/multiple_return_param_trailing_comma.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/diamond_super_1.sol,f();f();f();f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_public_vars.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/bytecodeReferences/circular_reference_free_function.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/tryCatch/malformed_panic.sol,f(uint size);a();b();c();d()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/tuple_assignment_array_empty.sol,"f(uint x);g(uint x, uint y)"
ethereum/solidity,test/libsolidity/ABIJson/payable_constructor_abi.sol,""
ethereum/solidity,test/libsolidity/semanticTests/modifiers/function_modifier_multi_invocation.sol,f(bool twice)
ethereum/solidity,test/libsolidity/smtCheckerTests/math/addmod_1.sol,"f();g(uint x, uint y, uint k)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/065_super_excludes_current_contract.sol,b();f()
ethereum/solidity,test/libsolidity/syntaxTests/types/function_types/selector/local_variable_selector_not_pure.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/internal_call_with_assertion_1.sol,f();g()
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/push_overflow_1_safe_no_overflow_assumption.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/storage_reference_old_shadow.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/compound_assignment_division_2.sol,"q();f(uint x, uint p)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/104_empty_name_input_parameter.sol,f(uint)
ethereum/solidity,test/libsolidity/syntaxTests/multiSource/libraries_control_flow_analysis.sol,normal();reverting();foo();bar()
ethereum/solidity,test/libsolidity/semanticTests/constructor/callvalue_check.sol,"createWithValue(bytes memory c, uint256 value);f(uint256 value);g(uint256 value);h(uint256 value);i(uint256 value)"
ethereum/solidity,test/libsolidity/semanticTests/state/block_chainid.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct/struct_state_constructor.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/literal_constants_with_ether_subdenominations_in_expressions.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/function_external_call_should_not_inline_1.sol,f();setOwner()
ethereum/solidity,test/libsolidity/semanticTests/reverts/simple_throw.sol,f(uint256 x)
ethereum/solidity,test/libsolidity/syntaxTests/iceRegressionTests/memory_mapping_array.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_dynamic_parameter_1_fail.sol,"f(uint[] memory array, uint x, uint y)"
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/cleanup/function.sol,ggg(function();h(S calldata x);dummy();ffff(uint256 a)
ethereum/solidity,test/libsolidity/semanticTests/multiSource/circular_reimport.sol,f();f();g();foo()
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/array/access_to_base_member_array.sol,g();h()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/shadowsBuiltin/ignores_struct.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/444_unnamed_return_parameter_with_explicit_return.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/events/event_without_emit_deprecated.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/138_similar_name_suggestions_expected.sol,func();g()
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/constructor_state_variable_init_base.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/constant_mapping.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/delete_array_push.sol,s()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/398_does_not_warn_msg_value_in_payable_function.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/license/license_missing_colon.sol,""
ethereum/solidity,test/libsolidity/semanticTests/structs/memory_structs_nested.sol,"test();extract(X memory s, uint256 which);combine(uint8 a, uint8 x, uint16 y, uint256 z)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/001_name_references.sol,f(uint256)
ethereum/solidity,test/libsolidity/syntaxTests/denominations/denominations.sol,""
ethereum/solidity,test/libsolidity/semanticTests/structs/struct_delete_storage.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/constructor/calldata_constructor_args.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/array/length/pure_functions.sol,""
ethereum/solidity,test/libsolidity/semanticTests/viaYul/array_storage_pop_zero_length.sol,popEmpty()
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/function_type_return_external.sol,f(function()
ethereum/solidity,test/libsolidity/smtCheckerTests/bmc_coverage/branches_with_return/simple_if_tuple.sol,check();conditional_increment()
ethereum/solidity,test/libsolidity/syntaxTests/metaTypes/typeOfContract.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/functions_3.sol,f();g();f();h();f();i()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/shadowing_private_base_state_vars.sol,""
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/shift_right_uint32.sol,"f(uint32 a, uint32 b)"
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV1/return_dynamic_types_cross_call_advanced.sol,dyn();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct/struct_aliasing_memory.sol,"f(S memory s1, S memory s2, bool b)"
ethereum/solidity,test/libsolidity/smtCheckerTests/types/bool_int_mixed_2.sol,"f(bool x, uint a)"
ethereum/solidity,test/libsolidity/syntaxTests/parsing/array_range_nested.sol,f(uint256[][] calldata x)
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/function_call_inside_placeholder_inside_modifier_branch.sol,f(address a);g()
ethereum/solidity,test/libsolidity/smtCheckerTests/abi/abi_encode_with_sig_array_slice.sol,"abiEncodeSlice(string memory sig, bytes calldata data)"
ethereum/solidity,test/libsolidity/syntaxTests/parsing/tuples_decl_without_rhs.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/array_storage_multi_items_per_slot.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/call_value_on_non_payable_function_type.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/constructor/store_function_in_constructor.sol,double(uint256 _arg);use(uint256 _arg)
ethereum/solidity,test/libsolidity/syntaxTests/errors/hash_collision.sol,""
ethereum/solidity,test/cmdlineTests/abiencoderv2_no_warning/input.sol,f(S memory)
ethereum/solidity,test/libsolidity/semanticTests/constantEvaluator/rounding.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/callvalue_nonpayable_assembly_function_modifier.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/shifts/compound_shift_left.sol,"f(uint256 a, uint256 b);t()"
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/overloaded_reference.sol,f();f(address);g()
ethereum/solidity,test/libsolidity/smtCheckerTests/verification_target/no_target_for_constructor_of_abstract_constract.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/external_calls/external_reentrancy_1.sol,e();call(address target);broken()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/assignment_from_contract.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/assignment_from_super.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/constructor_this.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/virtualFunctions/internal_virtual_function_calls.sol,f();g();g()
ethereum/solidity,test/libsolidity/smtCheckerTests/typecast/cast_larger_3.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_aliasing_storage_2.sol,"p();g(uint x, uint y, uint[] memory c);f(uint[] storage a, uint[] storage b, uint[] memory c)"
ethereum/solidity,test/libsolidity/smtCheckerTests/special/msg_value_inheritance_3.sol,""
ethereum/solidity,test/libsolidity/semanticTests/types/tuple_assign_multi_slot_grow.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/while_1_break.sol,"f(uint x, bool b)"
ethereum/solidity,test/libsolidity/semanticTests/structs/struct_delete_struct_in_mapping.sol,deleteIt()
ethereum/solidity,test/libsolidity/syntaxTests/types/global_struct_recursive.sol,""
ethereum/solidity,test/libsolidity/semanticTests/array/pop/parenthesized.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_aliasing_storage_1.sol,"g(uint a, uint b, uint c, uint d, uint e)"
ethereum/solidity,test/libsolidity/semanticTests/types/packing_signed_types.sol,run()
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/shift_left_assignment.sol,"f(uint256 a, uint256 b)"
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/shifts/shift_right_uint32.sol,"f(uint32 a, uint32 b);t()"
ethereum/solidity,test/libsolidity/semanticTests/uninitializedFunctionPointer/uninitialized_internal_storage_function_legacy.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/events/function_event_in_contract_clash.sol,dup()
ethereum/solidity,test/libsolidity/semanticTests/functionCall/inheritance/call_unimplemented_base.sol,a();a();b();a()
ethereum/solidity,test/libsolidity/semanticTests/array/external_array_args.sol,"test(uint[8] calldata a, uint[] calldata b, uint[5] calldata c, uint a_index, uint b_index, uint c_index)"
ethereum/solidity,test/libsolidity/errorRecoveryTests/constructor_recovers.sol,five()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/shifts/shift_right.sol,"f(uint256 a, uint256 b);t()"
ethereum/solidity,test/libsolidity/syntaxTests/functionCalls/named_arguments_duplicate_parameter.sol,"a(uint a, uint b);b()"
ethereum/solidity,test/libsolidity/semanticTests/calldata/calldata_memory_mixed.sol,"f(bytes memory _a, bytes calldata _b, bytes memory _c);g()"
ethereum/solidity,test/libsolidity/semanticTests/inheritance/overloaded_function_call_resolve_to_first.sol,"f(uint256 k);f(uint256 a, uint256 b);g()"
ethereum/solidity,test/libsolidity/gasTests/dispatch_medium_optimised.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/unchecked/signed_mod.sol,"f(int a, int b);g(bool _check)"
ethereum/solidity,test/libsolidity/syntaxTests/parsing/function_type_in_struct.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/types/fixed_bytes_access_3.sol,g();h();f()
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/assign_builtin.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/inline_assembly/assembly_memory_write.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/inline_array_singleton.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_branches_2d.sol,p();f(bool b)
ethereum/solidity,test/libsolidity/syntaxTests/string/unicode_escape_literals_invalid_codepoint.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/functionTypes/inline_array_with_value_call_option.sol,f();g();h()
ethereum/solidity,test/libsolidity/syntaxTests/metaTypes/codeAccessBase.sol,f();creation();runtime();creationBase();runtimeBase()
ethereum/solidity,test/libsolidity/semanticTests/payable/no_nonpayable_circumvention_by_modifier.sol,f();msgvalue()
ethereum/solidity,test/libsolidity/smtCheckerTests/verification_target/simple_assert.sol,f(uint a)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/shadowsBuiltin/global_scope.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/globalFunctions/call_with_wrong_arg_count.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/interface/implementation/complete.sol,testA();testB();testSub();testA();testB();testSub()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/default_location.sol,f();g();h();i(bool flag);j(bool flag)
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/slices_2.sol,f(uint[] calldata);h(uint[] calldata c)
ethereum/solidity,test/libsolidity/semanticTests/viaYul/conversion/explicit_cast_assignment.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/libraries/library_delegatecall_guard_view_staticcall.sol,f(D d);f();g();h()
ethereum/solidity,test/libsolidity/syntaxTests/structs/calldata_dynamic.sol,f(S calldata)
ethereum/solidity,test/libsolidity/smtCheckerTests/function_selector/selector.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/leave_items_on_tack.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/dataLocations/internalFunction/internal_function_return_parameters_no_data_location.sol,g()
ethereum/solidity,test/cmdlineTests/too_long_line_right_short/input.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/implicit_constructor_hierarchy.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/address_payable_function_type.sol,g(function (address payable)
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/constructor_hierarchy_base_calls_with_side_effects_7.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/immutable/increment_decrement.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/197_integer_boolean_and.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/push_as_lhs_bytes_2d.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override.sol,test();test()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/localStorageVariables/dowhile_declaration_fine.sol,f();g();h();i();j();k()
ethereum/solidity,test/libsolidity/syntaxTests/imports/relative_import_multiplex.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/types/function_types/selector/state_variable_selector_contract_name.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_trivial_condition_1.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/localStorageVariables/for_declaration_fine.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/natspec/invalid/docstring_inheritdoc2.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/externalContracts/FixedFeeRegistrar.sol,"owner(string memory _name);addr(string memory _name);subRegistrar(string memory _name);content(string memory _name);reserve(string memory _name);disown(string memory _name, address payable _refund);transfer(string memory _name, address _newOwner);setAddr(string memory _name, address _a);setSubRegistrar(string memory _name, address _registrar);setContent(string memory _name, bytes32 _content);record(string memory _name);addr(string memory _name);subRegistrar(string memory _name);content(string memory _name);owner(string memory _name);m_record(string memory _name)"
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_library.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/array/length/uint_too_large_multidim.sol,""
ethereum/solidity,test/libsolidity/semanticTests/constants/simple_constant_variables_test.sol,getX()
ethereum/solidity,test/libsolidity/semanticTests/smoke/failure.sol,e();f(bool _value);g(bool _value);h()
ethereum/solidity,test/libsolidity/syntaxTests/events/multiple_event_without_emit.sol,setVal();setValX()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/array_copy_storage_storage_struct.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/string_literal_switch_case.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_implemented_and_unimplemented_with_implemented_virtual_call_into_base_contract.sol,f();f();g()
ethereum/solidity,test/libsolidity/semanticTests/multiSource/imported_free_function_via_alias.sol,f();g();f();g()
ethereum/solidity,test/libsolidity/semanticTests/literals/denominations.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/assembly_chainid_not_pure.sol,f();g()
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/for_1_fail.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/external_functions_taking_internal_types_nested_struct_with_mapping.sol,f(S memory)
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/while_1.sol,"f(uint x, bool b)"
ethereum/solidity,test/libsolidity/syntaxTests/metaTypes/codeAccess.sol,creationOther();runtimeOther();f(uint)
ethereum/solidity,test/libsolidity/syntaxTests/types/hex_literal_to_bytesNN_same_size_implicit.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/inlineAssembly/calldata_assign_from_nowhere.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/storage_value_vars_3.sol,f(uint x);g()
ethereum/solidity,test/libsolidity/smtCheckerTests/external_calls/internal_library_external_call_1.sol,i();f(I _i);s();g(I _i)
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/assignment_local.sol,fun()
ethereum/solidity,test/libsolidity/semanticTests/structs/struct_copy.sol,"set(uint256 k);copy(uint256 from, uint256 to);retrieve(uint256 k)"
ethereum/solidity,test/libsolidity/semanticTests/viaYul/array_storage_index_access.sol,test_indices(uint256 len)
ethereum/solidity,test/libsolidity/semanticTests/expressions/conditional_expression_true_literal.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/copy_internal_function_array_to_storage.sol,one();two()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/getters/struct_with_reassignment.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/544_warn_about_address_members_on_contract_call.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/abi/abi_encode_with_sig_hash.sol,"abiEncodeHash(string memory sig, uint a, uint b)"
ethereum/solidity,test/libsolidity/syntaxTests/array/slice/slice_string.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/this_state.sol,g();h()
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/length_same_after_assignment_3_fail.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/200_integer_signed_exp_unsigned.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/imports/importing_free_functions.sol,f(uint x);g(uint x);f()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/reverting_call_virtual1.sol,iWillRevert();iWillRevert();test(bool _param)
ethereum/solidity,test/libsolidity/semanticTests/state/msg_data.sol,"f();g(uint,bool)"
ethereum/solidity,test/libsolidity/syntaxTests/string/string_unicode.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/empty_fun_arg_middle.sol,"f();f(a, b, c)"
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/callvalue_nonpayable_assembly_function.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/fallback_receive/fallback_overrides_receive.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/external_calls/external_hash_known_code_state_reentrancy_indirect.sol,h();f();setOwner(address _owner);f();g()
ethereum/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_simple.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/missing_variable.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/typecast/string_to_bytes_push_1.sol,s()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/015_balance_invalid.sol,fun()
ethereum/solidity,test/libsolidity/syntaxTests/tupleAssignments/empty_tuples_lhs.sol,""
ethereum/solidity,test/libsolidity/semanticTests/state/blockhash_basic.sol,f(uint blockNumber)
ethereum/solidity,test/libsolidity/semanticTests/functionCall/inheritance/call_base.sol,f(uint n);g(uint n)
ethereum/solidity,test/libsolidity/semanticTests/state_variables_init_order_3.sol,f(uint x)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/string_literal_comparison_2.sol,f(bytes32 _x)
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/verbatim_disallowed.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/various/assignment_to_const_var_involving_expression.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/memberLookup/unused_module_member_reference.sol,f();test()
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/error_deprecate_value_constructor_nonpayable.sol,createC()
ethereum/solidity,test/libsolidity/semanticTests/revertStrings/short_input_bytes.sol,e(bytes memory a)
ethereum/solidity,test/libsolidity/semanticTests/functionCall/send_zero_ether.sol,s()
ethereum/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_inside_branch.sol,g();f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/largeTypes/oversized_struct.sol,""
ethereum/solidity,test/libsolidity/semanticTests/inlineAssembly/calldata_assign.sol,f(bytes calldata x)
ethereum/solidity,test/libsolidity/syntaxTests/tryCatch/low_level_pre-byzantium.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/errors/basic.sol,""
ethereum/solidity,test/libsolidity/semanticTests/constructor/constructor_function_complex.sol,f();sixteen()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/019_comparison_bitop_precedence.sol,fun()
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/contract_storage_parameter_with_mapping.sol,f(S storage s)
ethereum/solidity,test/libsolidity/syntaxTests/globalFunctions/callcode_with_wrong_arg_count.sol,f()
ethereum/solidity,test/compilationTests/milestonetracker/MilestoneTracker.sol,numberOfMilestones();changeArbitrator(address _newArbitrator);changeDonor(address _newDonor);changeRecipient(address _newRecipient);unproposeMilestones();markMilestoneComplete(uint _idMilestone);approveCompletedMilestone(uint _idMilestone);rejectMilestone(uint _idMilestone);cancelMilestone(uint _idMilestone);arbitrateCancelCampaign();authorizePayment(uint _idMilestone)
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/length_same_after_assignment_3.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/storage_variable_access_out_of_functions.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/constants/cyclic_dependency_5.sol,""
ethereum/solidity,test/libsolidity/semanticTests/immutable/multi_creation.sol,f();f();f()
ethereum/solidity,test/libsolidity/gasTests/storage_costs.sol,setX(uint y);resetX();readX()
ethereum/solidity,test/libsolidity/syntaxTests/immutable/unrelated_reading.sol,readX()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/jump_disallowed.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/abiencodedecode/contract_array.sol,f(bytes calldata x);g()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/while_fine.sol,f();g();h()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/tuple_extra_parens_3.sol,""
ethereum/solidity,test/libsolidity/semanticTests/viaYul/comparison.sol,"f(address a);g();lt(uint a, uint b);slt(int a, int b);lte(uint a, uint b);slte(int a, int b);gt(uint a, uint b);sgt(int a, int b);gte(uint a, uint b);sgte(int a, int b);eq(uint a, uint b);neq(uint a, uint b)"
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/getters/inaccessible_dynamic_type_3.sol,g()
ethereum/solidity,test/libsolidity/syntaxTests/structs/recursion/recursive_struct_forward_reference.sol,f(Data.S memory a)
ethereum/solidity,test/libsolidity/smtCheckerTests/unchecked/checked_modifier_called_by_unchecked.sol,"f(uint16 a, uint16 b, uint16 c)"
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/length_1d_copy_2d_storage_to_memory.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/push_as_lhs_and_rhs_2d_1.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/constructor/constructor_arguments_external.sol,getName();getFlag()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/mapping_nonelementary_key_2.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/special/msg_sender_2.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_static_2_fail.sol,"f(uint x, uint y, uint z, uint t)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/004_reference_to_later_declaration.sol,g();f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/338_rational_bitnot_unary_operation.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/abstract/abstract_contract_instantiation.sol,utterance();create()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/mapping_3d_1_fail.sol,f(uint x)
ethereum/solidity,test/cmdlineTests/optimizer_user_yul/input.sol,""
ethereum/solidity,test/libsolidity/semanticTests/functionTypes/pass_function_types_internally.sol,f(uint256 x);eval(function(uint);g(uint256 x)
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/dynamic_nested_arrays.sol,"f(uint a, uint16[][] memory b, uint[2][][3] memory c, uint d);test()"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/233_non_initialized_references.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/111_overflow_caused_by_ether_units.sol,""
ethereum/solidity,test/libsolidity/semanticTests/builtinFunctions/keccak256_multiple_arguments_with_numeric_literals.sol,"foo(uint256 a, uint16 b)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/410_string_literal_not_convertible_to_address_as_assignment.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/errors/all_ones_signature.sol,""
ethereum/solidity,tools/solidityUpgrade/contracts/Test.sol,Storage();start();state();stop();state();start();state();stop()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/409_invalid_address_length_long.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/event_with_rational_size_array.sol,""
ethereum/solidity,test/libsolidity/semanticTests/inheritance/inherited_function_through_dispatch.sol,f();f();g()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/missing_variable_in_assign.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/array_nested_calldata_to_memory.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/multiSource/free_function_redefinition_base_derived.sol,f();f()
ethereum/solidity,test/libsolidity/semanticTests/libraries/internal_library_function_bound_to_array_named_pop_push.sol,pop(uint[2] memory a);push(uint[2] memory a);test()
ethereum/solidity,test/libsolidity/smtCheckerTests/unchecked/unchecked_function_call_with_unchecked_block.sol,f(uint x);g(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/errors/hash_collision_external.sol,f(bool a)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/485_function_types_selector_2.sol,g();f()
ethereum/solidity,test/libsolidity/semanticTests/abiencodedecode/abi_decode_calldata.sol,f(bytes calldata data)
ethereum/solidity,test/libsolidity/syntaxTests/modifiers/unimplemented_function_and_modifier.sol,foo();foo(uint x);foo(uint x);foo();foo();foo(uint x);foo();foo(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/indexing/array_multim_overflow_index.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/natspec/safe_assert_false_positive.sol,g(uint _x)
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/external_function_type_public_variable.sol,g(uint);f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/551_warn_about_address_members_on_non_this_contract_callcode.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/natspec/abstract_function_nondet_pow_no_abstraction.sol,"e(uint _e);pow(uint base, uint exponent)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/array_length_fractional_computed.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/397_warns_msg_value_in_non_payable_public_function.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/external_calls/external_hash_known_code_state_reentrancy_unsafe.sol,f();setOwner(address _owner);f();g()
ethereum/solidity,test/libsolidity/semanticTests/types/mapping_enum_key_v1.sol,"get(E k);set(E k, uint8 v)"
ethereum/solidity,test/libsolidity/smtCheckerTests/types/rational_large_1.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/assembly.sol,e();f();g();h();g();i();j();k();l()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/bitwise_not_fixed_bytes.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/assembly/switch_fine.sol,f(bool flag);g(uint256 a)
ethereum/solidity,test/libsolidity/smtCheckerTests/special/msg_sender_3.sol,""
ethereum/solidity,tools/solidityUpgrade/contracts/TestMultiline.sol,Storage();init();idle();destroy();init();idle();destroy()
ethereum/solidity,test/libsolidity/smtCheckerTests/typecast/implicit_cast_string_literal_byte.sol,f();g(bytes1 b)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/323_mapping_with_fixed_literal.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/fallback/payable_fallback_without_receive_nonempty_by_inheritance.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/evm_byzantium.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/tryCatch/create.sol,f();g()
ethereum/solidity,test/libsolidity/smtCheckerTests/typecast/string_literal_to_fixed_bytes_modifier.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/339_rational_bitor_binary_operation.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/revertStrings/function_entry_checks_v2.sol,t(uint)
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/dot_in_fun_param.sol,"f();f(a., x.b)"
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/compound_bitwise_or_int_1.sol,f(bool b)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/string_literal_comparison_1.sol,f(bytes32 _x)
ethereum/solidity,test/libsolidity/semanticTests/externalSource/_relative_imports/dir/B/b.sol,""
ethereum/solidity,test/libsolidity/semanticTests/array/copying/calldata_2d_bytes_to_memory_2.sol,g(bytes[2] memory m);f(bytes[2] calldata c)
ethereum/solidity,test/libsolidity/smtCheckerTests/unchecked/block_inside_unchecked.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/evm_byzantium_on_homestead.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/largeTypes/large_storage_arrays_combined.sol,""
ethereum/solidity,test/libsolidity/semanticTests/viaYul/empty_return_corrupted_free_memory_pointer.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/conditional/conditional_multiple.sol,f()
ethereum/solidity,test/cmdlineTests/too_long_line_edge_in/input.sol,"ffffffffffffffffffffff(announcementTypeTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT Ty, string A)"
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/smoke.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/iceRegressionTests/declarationUnaryTuple/declaration_bitnot_tuple.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/immutable/assign_at_declaration.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/variables/delete_locals.sol,delLocal()
ethereum/solidity,test/libsolidity/syntaxTests/enums/illegal_names.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/implement_internal_function_by_public_variable.sol,test()
ethereum/solidity,test/libsolidity/semanticTests/various/multi_modifiers.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/reverting_call_virtual4.sol,f();g();f();g();f();g()
ethereum/solidity,test/libsolidity/semanticTests/functionCall/array_multiple_local_vars.sol,f(uint256[] calldata seq)
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/compound_sub_array_index.sol,"q();f(uint x, uint p)"
ethereum/solidity,test/libsolidity/semanticTests/structs/struct_storage_to_memory.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/typecast/string_to_bytes_push_2.sol,s()
ethereum/solidity,test/compilationTests/gnosis/Tokens/Token.sol,"transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value);balanceOf(address owner);allowance(address owner, address spender);totalSupply()"
ethereum/solidity,test/libsolidity/semanticTests/functionSelector/function_selector_via_contract_name.sol,f();g(uint256);f();g(uint256)
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/slice.sol,f(bytes calldata b)
ethereum/solidity,test/libsolidity/semanticTests/viaYul/local_tuple_assignment.sol,"f(uint a1, uint a2);g();h();i()"
ethereum/solidity,test/libsolidity/syntaxTests/structs/array_calldata.sol,f(S[] calldata);f(S[][] calldata)
ethereum/solidity,test/libsolidity/semanticTests/functionCall/mapping_internal_return.sol,f();g();h()
ethereum/solidity,test/libsolidity/semanticTests/libraries/library_delegatecall_guard_view_not_needed.sol,f(uint256[] storage x);f();g();h()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/modifiers/implemented_without_placeholder.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/memoryManagement/struct_allocation.sol,memorySize();withValue();withoutValue()
ethereum/solidity,test/libsolidity/semanticTests/constantEvaluator/negative_fractional_mod.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/for_break.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/events/event_really_really_lots_of_data_from_storage.sol,deposit()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/cleanup/checked_arithmetic.sol,add();sub();mul();div();mod();inc_pre();inc_post();dec_pre();dec_post();neg()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/array_storage_push_empty_length_address.sol,set_get_length(uint256 len)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/048_returning_arrays_in_structs_arrays.sol,f()
ethereum/solidity,test/libsolidity/ASTJSON/assembly/stringlit.sol,m()
ethereum/solidity,test/libsolidity/semanticTests/state/block_coinbase.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/bmc_coverage/range_check.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/pop_constructor_safe.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/shadowsBuiltin/functions.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/localStorageVariables/if_declaration_err.sol,f(bool flag);g(bool flag)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct/struct_return.sol,s();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_mapping_aliasing_2.sol,f(mapping (uint => uint);g(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/433_pure_statement_in_for_loop.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/address/super_to_address.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/memberLookup/tx_origin_non_payable_send.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/constants/cyclic_dependency_3.sol,""
ethereum/solidity,test/libsolidity/semanticTests/builtinFunctions/msg_sig.sol,foo(uint256 a)
ethereum/solidity,test/libsolidity/syntaxTests/multiSource/import_not_found.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inline_arrays/inline_array_declaration_no_type_strings.sol,f()
ethereum/solidity,test/cmdlineTests/model_checker_timeout_all/input.sol,"f(uint x, uint y, uint k)"
ethereum/solidity,test/cmdlineTests/model_checker_timeout_bmc/input.sol,"f(uint x, uint y, uint k)"
ethereum/solidity,test/cmdlineTests/model_checker_timeout_chc/input.sol,"f(uint x, uint y, uint k)"
ethereum/solidity,test/libsolidity/syntaxTests/parsing/event_arguments_indexed.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/parsing/multiple_modifier_arg_trailing_comma.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/comments/singleline_unicode_direction_override_4.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/bytecodeReferences/circular_reference_internal_function.sol,foo();callFoo();callFoo()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/simple_inline_asm.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/comparison_of_function_types_eq.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/events/event_anonymous.sol,deposit()
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/for_1_continue.sol,"f(uint x, bool b)"
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/assembly.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/errors/error_as_function_param.sol,f(E x)
ethereum/solidity,test/libsolidity/syntaxTests/largeTypes/large_storage_arrays_struct.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/functionType.sol,f(function(uint[] storage)
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/fallback_receive/fallback_with_override_intermediate.sol,""
ethereum/solidity,test/libsolidity/semanticTests/various/staticcall_for_view_and_pure.sol,f();f();f();f();fview();fpure()
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/v1_call_to_v2_library_function_returning_struct.sol,get();foo()
ethereum/solidity,test/libsolidity/syntaxTests/multiSource/free_function_control_flow_analysis.sol,normal();reverting();foo();bar()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/getters/nested_arrays_mappings_5.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/memberLookup/failed_function_lookup_in_library.sol,"f(uint, uint);f(uint);g()"
ethereum/solidity,test/libsolidity/smtCheckerTests/types/fixed_bytes_access_4.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/libraries/internal_library_function_bound_to_enum.sol,"equals(E a, E b);equalsA(uint choice)"
ethereum/solidity,test/libsolidity/syntaxTests/string/string_multipart_single_line.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/function_type_internal_public_variable.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/push_as_lhs_and_rhs_1d.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/tryCatch/error_and_panic.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/string/unicode_escape_literals.sol,combined()
ethereum/solidity,test/libsolidity/semanticTests/various/nested_calldata_struct_to_memory.sol,f(S2 calldata s)
ethereum/solidity,test/libsolidity/semanticTests/viaYul/detect_mul_overflow_signed.sol,"f(int a, int b);g(int8 a, int8 b)"
ethereum/solidity,test/libsolidity/semanticTests/array/fixed_arrays_in_storage.sol,"setIDStatic(uint256 id);setID(uint256 index, uint256 id);setData(uint256 index, uint256 x, uint256 y);getID(uint256 index);getData(uint256 index);getLengths()"
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/calldata_array_offset.sol,f(uint[] calldata bytesAsCalldata)
ethereum/solidity,test/libsolidity/syntaxTests/specialFunctions/types_with_unspecified_encoding_special_types.sol,f()
ethereum/solidity,test/cmdlineTests/combined_json_generated_sources/input.sol,f(uint[] calldata)
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/storage_assignment.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/crypto/crypto_functions_not_same.sol,"f(bytes memory data);fi(bytes memory data, bytes32 k)"
ethereum/solidity,test/libsolidity/syntaxTests/license/license_in_import.sol,""
ethereum/solidity,test/libsolidity/semanticTests/array/calldata_slice_access.sol,"f(uint256[] calldata x, uint256 start, uint256 end);g(uint256[] calldata x, uint256 start, uint256 end, uint256 index)"
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/assignment_type_mismatch.sol,foo()
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/constructor_hierarchy_base_calls_with_side_effects_3.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/suggest_pure.sol,g()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy_same_var.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/functionCalls/named_arguments_for_functions_that_take_arbitrary_parameters.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/indexing/index_range_access_assert.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/368_shift_constant_left_negative_rvalue.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/argument_internal.sol,f(mapping(uint => uint)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/412_early_exit_on_fatal_errors.sol,s()
ethereum/solidity,test/libsolidity/smtCheckerTests/blockchain_state/transfer.sol,f(address payable a)
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/reverting_call_library.sol,iWillRevert();test(bool _param)
ethereum/solidity,test/libsolidity/semanticTests/functionCall/call_options_overload.sol,"f(uint x);f(uint x, uint y);call();bal()"
ethereum/solidity,test/libsolidity/syntaxTests/immutable/conditional_return_uninitialized.sol,""
ethereum/solidity,test/libsolidity/semanticTests/enums/enum_with_256_members.sol,getMinMax();intToEnum(uint8 _i);enumToInt(E _e);decodeEnum(bytes memory data)
ethereum/solidity,test/libsolidity/syntaxTests/array/invalid/library_array.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/imports/name_clash_in_import_3.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/475_implicit_conversion_disallowed.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/address/contract_payable_fallback_to_payable_address_implicitly.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/tuple_1_chain_2.sol,i()
ethereum/solidity,test/libsolidity/syntaxTests/largeTypes/oversized_array.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/valid_function_type_variables.sol,fa(uint);fb(uint);fc(uint);fd(uint);fe(uint);ff(uint);fg(uint);fh(uint)
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV1/abi_decode_v2_storage.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/license/license_in_contract.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/parsing/trailing_comma_in_named_args.sol,"a(uint a, uint b, uint c);b()"
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/localStorageVariables/ternary_declaration_err.sol,f(bool flag);g(bool flag)
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/callvalue_payable_assembly_fallback.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/constants/cross_file_cyclic_modules.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/freeFunctions/free_redefinition.sol,f();f();g()
ethereum/solidity,test/libsolidity/semanticTests/array/strings_in_struct.sol,getFirst();getSecond();getThird();getLast()
ethereum/solidity,test/libsolidity/syntaxTests/fallback/arguments.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/literals/hex_string_invalid_characters_yul.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/structs/conversion/recursive_storage_memory.sol,run()
ethereum/solidity,test/libsolidity/syntaxTests/fallback/fallback_duplicate_returns_inheritance.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/types/rational_negative_numerator_negative_exp.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/byte_array_storage_layout.sol,test_short();test_long();test_pop()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/261_using_for_arbitrary_mismatch.sol,double(bytes32 self);f(uint a)
ethereum/solidity,test/libsolidity/syntaxTests/types/address/address_payable_external_overload.sol,f(address);f(address payable)
ethereum/solidity,test/libsolidity/syntaxTests/array/length/can_be_constant_in_function.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/public_var_no_override_but_function.sol,foo()
ethereum/solidity,test/libsolidity/syntaxTests/array/slice/calldata_dynamic_encode.sol,f(uint256[] calldata x)
ethereum/solidity,test/libsolidity/semanticTests/uninitializedFunctionPointer/uninitialized_internal_storage_function_via_yul.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/string_literal_assign_to_storage_bytes.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/events/event_dynamic_array_storage.sol,createEvent(uint x)
ethereum/solidity,test/libsolidity/semanticTests/modifiers/access_through_module_name.sol,f();g()
ethereum/solidity,test/libsolidity/smtCheckerTests/special/difficulty.sol,f(uint difficulty)
ethereum/solidity,test/libsolidity/syntaxTests/events/event_named_arguments_in_any_order.sol,call()
ethereum/solidity,test/libsolidity/syntaxTests/conversion/allowed_conversion_to_string.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/lexer_numbers_with_underscores_hex.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/external_calls/external_hash_known_code_state.sol,f();f();inv()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/public_var_override_struct_with_memory_element.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_parameters.sol,f(uint x)
ethereum/solidity,test/libsolidity/semanticTests/events/event_struct_memory_v2.sol,createEvent(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/211_uninitialized_mapping_array_variable.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/functionTypes/struct_with_external_function.sol,X();Y();f()
ethereum/solidity,test/cmdlineTests/message_format_utf8/input.sol,f();selector()
ethereum/solidity,test/libsolidity/syntaxTests/types/address/payable_conversion_strict.sol,f()
ethereum/solidity,test/compilationTests/gnosis/Oracles/DifficultyOracle.sol,setOutcome();isOutcomeSet();getOutcome()
ethereum/solidity,test/compilationTests/gnosis/Oracles/FutarchyOracle.sol,fund(uint funding);close();setOutcome();isOutcomeSet();getOutcome()
ethereum/solidity,test/libsolidity/semanticTests/functionTypes/function_delete_stack.sol,a();test()
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/enums.sol,f(E e)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/079_fallback_function_inheritance.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/errors/error_param_type_shadowed_by_builtin_type_used_as_param_name.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/572_function_type_undeclared_type_multi_nested.sol,a(function(function(function(Nested)
ethereum/solidity,test/libsolidity/smtCheckerTests/verification_target/constant_condition_2.sol,f(uint x)
ethereum/solidity,test/cmdlineTests/optimizer_inliner_inc/input.sol,unsafe_inc(uint x);f()
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_with_return/simple_if_tuple.sol,check();conditional_increment()
ethereum/solidity,test/libsolidity/syntaxTests/types/rational_number_literal_limit_3.sol,bignum()
ethereum/solidity,test/libsolidity/syntaxTests/tupleAssignments/tuple_in_tuple_short.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/assignment_to_opcode_like.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/various/contract_binary_dependencies.sol,f();f();f()
ethereum/solidity,test/libsolidity/syntaxTests/license/license_no_whitespace_multiline.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/compound_bitwise_or_int.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/array_copy_target_leftover2.sol,test()
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/constructor_hierarchy_base_calls_with_side_effects_9.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/modifiers/function_modifier_multiple_times_local_vars.sol,f(uint256 x)
ethereum/solidity,test/libsolidity/syntaxTests/constructor/constructor_storage.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/parsing/missing_parameter_name_in_named_args.sol,"a(uint a, uint b, uint c);b()"
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/getters/array_of_structs_2.sol,test()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/assignment_contract_member_variable_array.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/revert_empty.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct/array_struct_array_struct_memory_unsafe.sol,f(S memory s2)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/function_type_nested_return.sol,r();h()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct/struct_recursive_3.sol,f();g()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/delete_tuple.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct/struct_state_var_array_pop_2.sol,f(uint _x)
ethereum/solidity,test/libsolidity/semanticTests/abiencodedecode/offset_overflow_in_array_decoding_2.sol,withinArray()
ethereum/solidity,test/libsolidity/syntaxTests/unterminatedBlocks/zero_dot_x.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct/struct_delete_memory.sol,"f(S memory s1, S memory s2)"
ethereum/solidity,test/libsolidity/syntaxTests/structs/calldata_struct_mapping_function.sol,f(S calldata b)
ethereum/solidity,test/libsolidity/syntaxTests/errors/revert_parentheses.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/shift_negative_constant_left.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/unchecked/unchecked_modifier.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/typecast/cast_smaller_2.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/inlineAssembly/keccak256_optimizer_cache_bug.sol,val()
ethereum/solidity,test/libsolidity/smtCheckerTests/crypto/crypto_functions_same_input_over_state_same_output.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/constructor/bytes_in_constructors_unpacker.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/localCalldataVariables/if_declaration_fine.sol,f(uint[] calldata _c)
ethereum/solidity,test/libsolidity/syntaxTests/conversion/function_type_nonpayable_view.sol,h();f()
ethereum/solidity,test/libsolidity/syntaxTests/inline_arrays/inline_array_rationals.sol,f()
ethereum/solidity,test/libsolidity/ASTJSON/documentation.sol,fn()
ethereum/solidity,test/libsolidity/semanticTests/structs/struct_memory_to_storage_function_ptr.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/return_and_convert.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/146_external_argument_assign.sol,f(uint a)
ethereum/solidity,test/libsolidity/semanticTests/expressions/exp_operator_const.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/externalSource/_relative_imports/dir/contract.sol,""
ethereum/solidity,test/libsolidity/semanticTests/tryCatch/super_trivial.sol,g(bool x);f(bool x)
ethereum/solidity,test/libsolidity/syntaxTests/functionCalls/named_arguments_overload_failing_wrong_names.sol,"f(uint x, string memory y, bool z);f(uint x, uint y, uint z);call()"
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy_mixed_chain.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/137_external_visibility.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/public_var_surplus_override.sol,foo()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/constant_array.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/const_from_non_const.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/tuple_different_count_assignment_1.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/functionCall/multiple_return_values.sol,"run(bool x1, uint x2)"
ethereum/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/differentNumberOfComponents.sol,f();g();h()
ethereum/solidity,test/libsolidity/semanticTests/array/bytes_to_fixed_bytes_simple.sol,fromMemory(bytes memory m);fromCalldata(bytes calldata c);fromStorage();fromStorageLong();fromSlice(bytes calldata c)
ethereum/solidity,test/libsolidity/syntaxTests/comments/multiline_unicode_direction_override_4.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/index_access_side_effect.sol,h();g()
ethereum/solidity,test/libsolidity/smtCheckerTests/math/mulmod_1.sol,"f();g(uint x, uint y, uint k)"
ethereum/solidity,test/libsolidity/semanticTests/freeFunctions/overloads.sol,f(uint);f(string memory);g()
ethereum/solidity,test/libsolidity/syntaxTests/specialFunctions/abidecode/abi_decode_nontuple.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/scoping/double_variable_declaration_disjoint_scope.sol,f()
ethereum/solidity,test/compilationTests/gnosis/Markets/Campaign.sol,fund(uint amount);refund();createMarket();closeMarket();withdrawFees()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/nonintermediate_common_base_and_unique_implementation.sol,f();g();f();f();f();g()
ethereum/solidity,test/cmdlineTests/optimizer_inliner_dynamic_reference/input.sol,g();a();h();f()
ethereum/solidity,test/libsolidity/semanticTests/various/destructuring_assignment.sol,returnsArray();f(bytes memory s)
ethereum/solidity,test/libsolidity/syntaxTests/string/string_multipart_only_hex.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_array_return_internal.sol,f();g();h();i()
ethereum/solidity,test/libsolidity/semanticTests/inlineAssembly/inline_assembly_if.sol,f(uint256 a)
ethereum/solidity,test/cmdlineTests/revert_strings/input.sol,"f(uint[][] memory, E e)"
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_less_strict_mutability.sol,foo();foo();foo();foo();foo();foo()
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV1/abi_decode_static_array_v2.sol,f(bytes calldata data)
ethereum/solidity,test/libsolidity/syntaxTests/types/address/contract_no_fallback_to_payable_address.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/while_1_continue.sol,"f(uint x, bool b)"
ethereum/solidity,test/libsolidity/semanticTests/expressions/conditional_expression_different_types.sol,f(bool cond)
ethereum/solidity,test/libsolidity/syntaxTests/immutable/ctor_modifier_initialization.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/236_cyclic_binary_dependency.sol,f();f();f()
ethereum/solidity,test/libsolidity/syntaxTests/types/strict_explicit.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/literals/unicode_string_direction_override_4.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/push_overflow_2_safe.sol,f(uint256 l)
ethereum/solidity,test/libsolidity/syntaxTests/parsing/trailing_dot3.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_multiple_fail2.sol,foo();test()
ethereum/solidity,test/libsolidity/syntaxTests/string/invalid_legacy_escape.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/array/contract_array.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/public_vars_multiple.sol,foo();foo()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/getters/array_of_structs_3.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/types/address/conversion_error.sol,f();g();h()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/array_storage_push_empty.sol,pushEmpty(uint256 len)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/051_function_internal_allowed_conversion.sol,internalCall()
ethereum/solidity,test/libsolidity/syntaxTests/array/slice/slice_memory_bytes.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/lvalues/external_reference_argument.sol,"f(uint256[] calldata x, uint256[] calldata y)"
ethereum/solidity,test/libsolidity/semanticTests/interface_inheritance_conversions.sol,parentFun();subAFun();subBFun();parentFun();subAFun();subBFun();convertParent();convertSubA();convertSubB()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/mod.sol,"f(int x, int y)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/229_call_to_library_function.sol,"min(uint, uint);f()"
ethereum/solidity,test/libsolidity/smtCheckerTests/typecast/function_type_to_function_type_external.sol,f(function(uint)
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/while_loop_simple_4.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/calldata_memory.sol,f(uint[] calldata);g(uint[] calldata);h(uint[] calldata);i(uint[] calldata);f(uint[] memory);g(uint[] memory);h(uint[] memory);i(uint[] memory)
ethereum/solidity,test/libsolidity/syntaxTests/multiSource/multiple_imports_same_function.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/create2_as_variable_pre_istanbul.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/revertStrings/library_non_view_call.sol,g();f()
ethereum/solidity,test/libsolidity/syntaxTests/specialFunctions/abidecode/abi_decode_nested_dynamic_array_v2.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/immutable/creationCode.sol,test()
ethereum/solidity,test/libsolidity/semanticTests/revertStrings/array_slices.sol,"f(uint256 start, uint256 end, uint256[] calldata arr)"
ethereum/solidity,test/libsolidity/semanticTests/externalSource/relative_imports.sol,""
ethereum/solidity,test/libsolidity/semanticTests/array/copying/array_nested_memory_to_storage.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/constant_access.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/globalFunctions/now_override.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/shift_constant_right_assignment.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/ambiguous_base_functions_overridden_in_intermediate_base.sol,f();f();f()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/bytes_storage_to_storage.sol,f(uint len)
ethereum/solidity,test/libsolidity/ASTJSON/assembly/call.sol,j()
ethereum/solidity,test/libsolidity/smtCheckerTests/overflow/underflow_sub_signed.sol,f(int8 x)
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_or_inside_branch.sol,f();g(bool a)
ethereum/solidity,test/libsolidity/semanticTests/modifiers/function_modifier_loop.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/224_string_bytes_conversion.sol,h(string calldata _s);i(string memory _s);j();k(bytes calldata _b);l(bytes memory _b);m()
ethereum/solidity,test/libsolidity/semanticTests/types/convert_uint_to_fixed_bytes_smaller_size.sol,uintToBytes(uint32 h)
ethereum/solidity,test/libsolidity/semanticTests/cleanup/exp_cleanup_nonzero_base.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/305_fixed_type_rational_fraction_conversion.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/v2_call_to_v2_contract_function_pointer_accepting_struct.sol,get(Item memory _item);foo()
ethereum/solidity,test/libsolidity/semanticTests/libraries/internal_library_function_bound_to_string.sol,"at(string memory a, uint i);secondChar()"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/300_invalid_fixed_types_7x8_mxn.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/iceRegressionTests/calling_external_function_via_local_variable_with_invalid_type.sol,f()
ethereum/solidity,test/libsolidity/ABIJson/receive_ether_and_fallback_function.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/193_positive_integers_to_signed_out_of_bound_max.sol,""
ethereum/solidity,test/libsolidity/semanticTests/multiSource/free_function_resolution_base_contract.sol,f();g();h()
ethereum/solidity,test/libsolidity/semanticTests/array/inline_array_return.sol,f();test()
ethereum/solidity,test/libsolidity/syntaxTests/modifiers/constructor_as_modifier.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/array/length/cannot_be_assigned.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/bool_simple_2.sol,"f(bool x, bool y)"
ethereum/solidity,test/libsolidity/syntaxTests/types/address/payable_conversion_err.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/constants/abi_encoding_constant.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/049_function_external_call_allowed_conversion.sol,externalCall()
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/try_catch_1.sol,g()
ethereum/solidity,test/libsolidity/syntaxTests/types/address/bytes_short_to_payable_address.sol,f(bytes10 x)
ethereum/solidity,test/libsolidity/syntaxTests/indexing/fixedbytes_out_of_bounds_index.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/type_expression_tuple_array_2d.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/public_var_overrides_pure.sol,foo()
ethereum/solidity,test/cmdlineTests/ast_compact_json_with_base_path/c.sol,""
ethereum/solidity,test/cmdlineTests/combined_json_with_base_path/c.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/return_2.sol,"add(uint x, uint y);f()"
ethereum/solidity,test/libsolidity/semanticTests/dirty_calldata_dynamic_array.sol,f(int16[] calldata a)
ethereum/solidity,test/libsolidity/syntaxTests/array/pop/calldata_pop.sol,f(uint[] calldata x)
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/unary_add_overflows_correctly.sol,inc_pre();check()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/static_array_implicit_push_2.sol,f(uint[1][] memory x)
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/assignment_contract_member_variable.sol,a()
ethereum/solidity,test/libsolidity/syntaxTests/array/slice/calldata_dynamic_convert_to_memory.sol,f(bytes calldata x)
ethereum/solidity,test/libsolidity/semanticTests/types/convert_fixed_bytes_to_uint_same_type.sol,bytesToUint(bytes32 s)
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/constructor_hierarchy_base_calls_with_side_effects_8.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/out_of_bounds/array_2d_3.sol,p();q(uint i);r()
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/constructor_parameter.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/literals/unicode_string_direction_override_2.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/overloaded_external_functions_taking_identical_structs.sol,f(S1 memory);f(S2 memory)
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/compound_bitwise_or_uint_1.sol,f(bool b)
ethereum/solidity,test/libsolidity/semanticTests/various/skip_dynamic_types.sol,f();g()
ethereum/solidity,test/libsolidity/ASTJSON/string.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/dirty_memory_int32.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/hex_string_to_bytesNN_same_size_implicit.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/cleanup/static_array.sol,"gggggggg(uint8[2] calldata s);f(uint256 a, uint256 b)"
ethereum/solidity,test/libsolidity/semanticTests/cleanup/cleanup_bytes_types_v1.sol,"f(bytes2 a, uint16 x)"
ethereum/solidity,test/libsolidity/semanticTests/expressions/uncalled_address_transfer_send.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/if_both_return.sol,f(bool c)
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/smoke.sol,f();g();h();i();j()
ethereum/solidity,test/libsolidity/syntaxTests/functionCalls/calloptions_duplicated.sol,foo(int a)
ethereum/solidity,test/libsolidity/smtCheckerTests/inline_assembly/assembly_6.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/delete_struct.sol,f(bool b)
ethereum/solidity,test/libsolidity/semanticTests/builtinFunctions/keccak256_with_bytes.sol,foo()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/304_fixed_type_rational_int_conversion.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/localStorageVariables/assembly/for_declaration_err.sol,f();g();h();i()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/compound_bitwise_or_uint_3.sol,f(bool b)
ethereum/solidity,test/libsolidity/semanticTests/expressions/exp_operator_const_signed.sol,f()
ethereum/solidity,test/cmdlineTests/function_debug_info/input.sol,f(uint[] calldata x);g()
ethereum/solidity,test/libsolidity/syntaxTests/types/address/address_payable_storage_array_conversion.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/405_address_checksum_type_deduction.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/smoke/constructor.sol,balance();update(uint _state)
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/modifier_fine.sol,f(bool flag);g(bool flag)
ethereum/solidity,test/libsolidity/semanticTests/array/push/push_no_args_bytes.sol,f();g(uint x);l();a(uint index)
ethereum/solidity,test/libsolidity/syntaxTests/conversion/conversion_to_bytes.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/more_than_256_syntaxerrors.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/typecast/string_literal_to_fixed_bytes_upcast.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/indexing/array_noninteger_index.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/invariants/loop_basic.sol,f(uint x)
ethereum/solidity,test/compilationTests/gnosis/Tokens/StandardToken.sol,"transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value);allowance(address owner, address spender);balanceOf(address owner);totalSupply()"
ethereum/solidity,test/libsolidity/semanticTests/viaYul/function_pointers.sol,f();g()
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/return_1_fail.sol,"add(uint x, uint y);f()"
ethereum/solidity,test/libsolidity/syntaxTests/types/address/address_literal_to_payable_err.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/v1_call_to_v2_contract_function_returning_struct_with_dynamic_array.sol,get();foo()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/bitwise_or_uint.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/expressions/bytes_comparison.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_multiple_no_virtual.sol,foo();foo();foo()
ethereum/solidity,test/libsolidity/semanticTests/inlineAssembly/calldata_offset_read_write.sol,"f(uint, bytes calldata x, uint)"
ethereum/solidity,test/libsolidity/semanticTests/functionCall/call_internal_function_via_expression.sol,foo();get_ptr(function();associated();unassociated()
ethereum/solidity,test/libsolidity/semanticTests/structs/calldata/calldata_struct_with_nested_array_to_storage.sol,"f(uint32 p1, S calldata c)"
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/functions_recursive.sol,g()
ethereum/solidity,test/libsolidity/smtCheckerTests/special/msg_value_inheritance_1.sol,""
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array_dynamic.sol,f(uint256[] calldata s);g(uint256[] calldata s);h(uint8[] calldata s);i(uint8[] calldata s);j(bytes calldata s);k(bytes calldata s)
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/bitwise_xor_uint.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/events/event_dynamic_array_memory_v2.sol,createEvent(uint x)
ethereum/solidity,test/libsolidity/ASTJSON/receive_ether.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/bmc_coverage/assert_in_constructor.sol,initX()
ethereum/solidity,test/libsolidity/syntaxTests/types/hex_literal_to_bytesNN_same_size_explicit.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/overflow/signed_sum_overflow.sol,"f(int x, int y)"
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/bare_instructions_disallowed.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/bytes0.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/array/slice/calldata_static.sol,f(uint256[42] calldata x)
ethereum/solidity,test/cmdlineTests/keccak_optimization_deploy_code/input.sol,""
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array.sol,g(uint256[] calldata);f(uint256[][1] calldata s)
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/external_function_type_returning_internal.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/crypto/crypto_functions_same_input_same_output.sol,"k(bytes memory b0);s(bytes memory b0);r(bytes memory b0);e(bytes32 h0, uint8 v0, bytes32 r0, bytes32 s0)"
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/mod_signed.sol,"f(int x, int y)"
ethereum/solidity,test/libsolidity/semanticTests/array/copying/array_copy_target_simple.sol,test()
ethereum/solidity,test/libsolidity/smtCheckerTests/out_of_bounds/array_2.sol,p();q();r()
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/shift_right_negative_lvalue_signextend_int16_v1.sol,"f(int16 a, uint16 b)"
ethereum/solidity,test/libsolidity/syntaxTests/smoke_test.sol,fun(uint256 arg1)
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/restrict_mutability_for_override_only.sol,foo();foo();foo()
ethereum/solidity,test/libsolidity/semanticTests/array/delete/delete_memory_array.sol,len()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/array_copy_storage_storage_different_base_nested.sol,test()
ethereum/solidity,test/libsolidity/semanticTests/optimizer/shift_bytes.sol,f(uint a);g(uint a)
ethereum/solidity,test/libsolidity/smtCheckerTests/special/msg_sender_fail_1.sol,f(address c)
ethereum/solidity,test/libsolidity/syntaxTests/modifiers/modifier_returns_value.sol,f(uint a)
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/abi_encode_functions.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct/struct_recursive_indirect_2.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/indexAccess/inline_array_index_access_strings.sol,f();test()
ethereum/solidity,test/libsolidity/semanticTests/array/concat/bytes_concat_as_argument.sol,"f(bytes memory a, bytes memory b);h(bytes memory a);g(bytes memory a, bytes memory b)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/482_explicit_literal_to_unspecified_string.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/push/array_push_nested_from_memory.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/define_tuple_from_function_call.sol,f();g();h()
ethereum/solidity,test/libsolidity/syntaxTests/types/address/address_to_contract.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/function_address.sol,f();g();h(function()
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/value_with_call_nonpayable.sol,f(address a);h();i()
ethereum/solidity,test/libsolidity/semanticTests/externalSource/source_remapping.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/parsing/address_invalid_state_mutability.sol,f();g(address view);h(address pure);i();j()
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/cleanup/cleanup.sol,"f(uint16 a, int16 b, address c, bytes3 d, bool e)"
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/triangle_no_impl.sol,f();f();f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/assignment_to_special.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/freeFunctions/function_using_struct_after_contract.sol,f()
ethereum/solidity,test/cmdlineTests/optimize_full_storage_write/input.sol,f()
ethereum/solidity,test/libsolidity/ABIJson/basic_test.sol,f(uint a)
ethereum/solidity,test/libsolidity/syntaxTests/immutable/complex.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/unary_operators_tuple_3.sol,f(bool b)
ethereum/solidity,test/libsolidity/smtCheckerTests/typecast/cast_different_size_1.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/constants/addmod_mulmod_rational.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/142_inheritence_suggestions.sol,func();g()
ethereum/solidity,test/libsolidity/semanticTests/various/senders_balance.sol,f();f()
ethereum/solidity,test/libsolidity/syntaxTests/array/new_no_parentheses.sol,f(uint size)
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/function_type_named_call.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/address_payable_library.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/slices_3.sol,"f(int[] calldata b, uint256 start, uint256 end)"
ethereum/solidity,test/libsolidity/syntaxTests/types/address/address_binary_operators.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/shift_right_garbled_v1.sol,"f(uint8 a, uint8 b)"
ethereum/solidity,test/libsolidity/syntaxTests/bytecodeReferences/circular_reference_complex1.sol,foo();foo()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/bitwise_rational_1.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/lvalues/lvalue_not_set.sol,foo(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/immutable/immutable_basic.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/tryCatch/no_returns.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/496_builtin_ecrecover_reject_gas.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/storage_array_ref.sol,"find(uint256[] storage _data, uint256 _value);add(uint256 v);find(uint256 v)"
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/constructor_state_variable_init_chain_run_all.sol,""
ethereum/solidity,test/libsolidity/semanticTests/cleanup/cleanup_address_types_shortening.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/calldata_dyn_2d_bytes_to_memory.sol,f(bytes[] calldata c)
ethereum/solidity,test/libsolidity/semanticTests/various/string_tuples.sol,f();g();h()
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV1/abi_encode.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/569_block_blockhash_deprecated.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/shadowing/no_name_clash_in_import.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/structs/multislot_struct_allocation.sol,o(uint a);f()
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/argument_public.sol,f(mapping(uint => uint)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/170_assignment_to_const_var_involving_keccak.sol,""
ethereum/solidity,test/libsolidity/semanticTests/errors/named_error_args.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/enum_mapping.sol,f(E v)
ethereum/solidity,test/libsolidity/semanticTests/various/swap_in_storage_overwrite.sol,set();swap()
ethereum/solidity,test/libsolidity/syntaxTests/types/address/literal_to_address.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/579_member_getter_call_without_parentheses_private_function.sol,f();f()
ethereum/solidity,test/libsolidity/syntaxTests/unterminatedBlocks/one_dot.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/modifiers/function_modifier_for_constructor.sol,getData()
ethereum/solidity,test/libsolidity/syntaxTests/immutable/delete.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_indirectly_recursive_dynamic_array2.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/bmc_coverage/funds.sol,f(address payable a)
ethereum/solidity,test/libsolidity/syntaxTests/events/event_struct_v2.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/unbalanced_positive_stack.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/keccak.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/hex_expression.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/function_type_constructor_local.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/scoping/scoping_old.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/string/string_new_line.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/file_level/free_namesake_contract_function.sol,f();g();f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/149_test_for_bug_override_function_with_bytearray_type.sol,f(bytes calldata);f(bytes calldata)
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_shared_base.sol,set();set();set();set()
ethereum/solidity,test/libsolidity/syntaxTests/iceRegressionTests/calling_external_function_via_parameter_with_invalid_type.sol,""
ethereum/solidity,test/libsolidity/ASTJSON/enum_value.sol,""
ethereum/solidity,test/libsolidity/semanticTests/functionCall/delegatecall_return_value.sol,set(uint256 _value);get();get_delegated()
ethereum/solidity,test/libsolidity/syntaxTests/specialFunctions/abi_encode_nested_dynamic_array.sol,test()
ethereum/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_with_return/triple_nested_if.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/abiEncoder/v1_call_to_v1_library_function_accepting_storage_struct.sol,set(Item storage _item);foo()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_static_3.sol,"f(uint x, uint y, uint z, uint t, uint w, uint v)"
ethereum/solidity,test/libsolidity/syntaxTests/parsing/address_payable.sol,f(address payable b)
ethereum/solidity,test/libsolidity/smtCheckerTests/abi/abi_decode_array.sol,"abiDecodeArray(bytes memory b1, bytes memory b2)"
ethereum/solidity,test/libsolidity/semanticTests/array/delete/delete_bytes_array.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/array/string_bytes_conversion.sol,"f(string memory _s, uint256 n);l()"
ethereum/solidity,test/libsolidity/syntaxTests/inline_arrays/inline_array_of_mapping_type.sol,f()
ethereum/solidity,test/libsolidity/gasTests/exp.sol,exp_neg_one(uint exponent);exp_two(uint exponent);exp_zero(uint exponent);exp_one(uint exponent)
ethereum/solidity,test/libsolidity/semanticTests/cleanup/exp_cleanup.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/circular_constant_access_err.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array_dynamic_index_access.sol,"f(uint256[] calldata s);g(uint256[][2] calldata s, uint256 which);h(uint8[] calldata s);i(uint8[][2] calldata s, uint256 which);j(bytes calldata s);k(bytes[2] calldata s, uint256 which)"
ethereum/solidity,test/libsolidity/semanticTests/inlineAssembly/inline_assembly_read_and_write_stack.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_aliasing_storage_5.sol,"p();g(uint x, uint[] memory c);f(uint[] storage a, uint[] memory c)"
ethereum/solidity,test/libsolidity/smtCheckerTests/types/no_effect_statements.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/constructor/store_internal_unused_function_in_constructor.sol,unused();t()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/modifier_post_access.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/148_external_argument_delete.sol,f(uint a)
ethereum/solidity,test/libsolidity/syntaxTests/iceRegressionTests/declarationUnaryTuple/declaration_delete_tuple.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/evm_istanbul.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/immutable/reading_after_initialization_modifier.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/location_specifiers_for_params_multi.sol,"f(uint[] storage memory constant x, uint[] memory calldata y)"
ethereum/solidity,test/libsolidity/semanticTests/isoltestTesting/balance_without_balance.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/shifts/shift_left_uint8.sol,"f(uint8 a, uint8 b);t()"
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/length_1d_copy_2d_memory_to_storage.sol,f(uint[][] memory arr2)
ethereum/solidity,test/libsolidity/syntaxTests/indexing/array_multidim_rational.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/493_builtin_keccak256_reject_gas.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/functionCalls/calloptions_on_internal_function.sol,foo(int a)
ethereum/solidity,test/libsolidity/semanticTests/various/iszero_bnot_correct.sol,f()
ethereum/solidity,test/libsolidity/gasTests/abiv2_optimised.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/conversion/function_type_view_nonpayable.sol,h();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/push_overflow_2_safe_no_overflow_assumption.sol,f(uint256 l)
ethereum/solidity,test/libsolidity/semanticTests/calldata/calldata_internal_library.sol,"f(uint, bytes calldata _x, uint);f(bytes calldata a);g()"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/483_modifiers_access_storage_pointer.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/types/bool_simple_4.sol,f(bool x)
ethereum/solidity,test/libsolidity/semanticTests/storage/mappings_array2d_pop_delete.sol,map(uint key);p();d()
ethereum/solidity,test/libsolidity/ABIJson/inherited.sol,baseFunction(uint p);derivedFunction(bytes32 p)
ethereum/solidity,test/libsolidity/syntaxTests/array/slice/calldata_dynamic_access.sol,f(uint256[] calldata x)
ethereum/solidity,test/libsolidity/syntaxTests/natspec/docstring_author_title_state_variable.sol,""
ethereum/solidity,test/libsolidity/semanticTests/array/copying/array_copy_different_packing.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/225_inheriting_from_library.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/try_catch/try_public_var.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/491_using_this_in_constructor.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV1/byte_arrays.sol,"f(uint a, bytes memory b, uint c);f_external(uint a, bytes calldata b, uint c)"
ethereum/solidity,test/libsolidity/smtCheckerTests/types/tuple_extra_parens_4.sol,""
ethereum/solidity,test/libsolidity/semanticTests/structs/array_of_recursive_struct.sol,func()
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/shift_right_negative_lvalue_int32.sol,"f(int32 a, uint32 b)"
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/access_to_base_members.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/types/library_to_address_payable.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/libraries/internal_library_function_bound_to_contract.sol,foo(E e);test()
ethereum/solidity,test/libsolidity/syntaxTests/license/license_natspec_multiline.sol,""
ethereum/solidity,test/libsolidity/semanticTests/fallback/fallback_override2.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/calldata_array_two_dimensional_1.sol,"test(uint256[][] calldata a);test(uint256[][] calldata a, uint256 i);test(uint256[][] calldata a, uint256 i, uint256 j);reenc(uint256[][] calldata a, uint256 i, uint256 j)"
ethereum/solidity,test/libsolidity/syntaxTests/array/length/fixed_size_zero_length.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/549_warn_about_address_members_on_non_this_contract_send.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/externalSource/source_name_starting_with_dots.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/types/tuple_function_3.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/memory_params_in_external_function.sol,"f(bytes memory a, bytes calldata b, uint[] memory c);g()"
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct/struct_recursive_2.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/string/string_unterminated_no_new_line.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/function_types/function_definition_expression.sol,"transfer(address,uint256);f()"
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/conditional_assignment_function_2.sol,f(uint a);g(uint a);h(uint a)
ethereum/solidity,test/libsolidity/smtCheckerTests/try_catch/try_3.sol,g(int y);postinc();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/verification_target/simple_assert_with_require.sol,f(uint a)
ethereum/solidity,test/libsolidity/semanticTests/tryCatch/invalid_error_encoding.sol,g(bytes memory revertMsg)
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/assignment_from_opcode_like.sol,f()
ethereum/solidity,test/compilationTests/gnosis/Markets/Market.sol,"fund(uint _funding);close();withdrawFees();buy(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint maxCost);sell(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint minProfit);shortSell(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint minProfit);calcMarketFee(uint outcomeTokenCost)"
ethereum/solidity,test/libsolidity/ASTJSON/mutability.sol,""
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/shift_right_negative_lvalue_signextend_int32_v2.sol,"f(int32 a, uint32 b)"
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/duplicated_constructor_call/ancestor.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/shadowing/constant.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/191_negative_integers_to_signed_min.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/errors/weird4.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/dataLocations/externalFunction/function_argument_location_specifier_test_external_memory.sol,f(bytes memory)
ethereum/solidity,test/libsolidity/smtCheckerTests/invariants/loop_nested_for.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/while_1_fail.sol,f(uint x)
ethereum/solidity,test/libsolidity/semanticTests/reverts/error_struct.sol,f();g(uint x)
ethereum/solidity,test/libsolidity/smtCheckerTests/typecast/enum_to_uint_max_value.sol,f(D _a)
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/shift_right_negative_literal.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/string/string_unterminated.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/visibility/interface/interface_contract_function_default.sol,f();g()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/internal_multiple_calls_with_assertion_1.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/abiencodedecode/abi_decode_simple_storage.sol,f(bytes memory _data)
ethereum/solidity,test/libsolidity/smtCheckerTests/file_level/free_runtimecode.sol,test();f()
ethereum/solidity,test/libsolidity/semanticTests/various/decayed_tuple.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/comparison_of_function_types_lt_1.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/sameNumberOfComponents.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/indexAccess/arrays_complex_memory_index_access.sol,"set(uint24[3][] memory _data, uint256 a, uint256 b)"
ethereum/solidity,test/libsolidity/semanticTests/constructor_with_params.sol,""
ethereum/solidity,test/libsolidity/semanticTests/variables/mapping_local_tuple_assignment.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/named_arguments_overload_in_any_order.sol,"f(uint u, string memory s, bool b);f(uint u, uint s, uint b);call()"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/shadowsBuiltin/illegal_names_assembly_functions.sol,f();this();super();_()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/array_memory_index_access.sol,"index(uint256 len);accessIndex(uint256 len, int256 idx)"
ethereum/solidity,test/libsolidity/syntaxTests/types/address/literal_to_payable_address.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/crypto/crypto_functions_same_input_over_state_same_output_fail.sol,"set(bytes memory _data, bytes32 _h, uint8 _v, bytes32 _r, bytes32 _s);f()"
ethereum/solidity,test/libsolidity/semanticTests/various/address_code_complex.sol,f();g()
ethereum/solidity,test/libsolidity/gasTests/exp_optimized.sol,exp_neg_one(uint exponent);exp_two(uint exponent);exp_zero(uint exponent);exp_one(uint exponent)
ethereum/solidity,test/libsolidity/syntaxTests/types/var_empty_decl_2.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/errors/duplicate.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array_multi_dynamic.sol,f(uint256[][] calldata s);g(uint256[][] calldata s);h(uint8[][] calldata s);i(uint8[][] calldata s);j(bytes[] calldata s);k(bytes[] calldata s)
ethereum/solidity,test/libsolidity/semanticTests/calldata/calldata_bytes_to_memory_encode.sol,f(bytes calldata data)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/030_redeclare_implemented_abstract_function_as_abstract.sol,foo();foo();foo()
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/cleanup/bool.sol,gggg(bool x);f(uint256 a)
ethereum/solidity,test/libsolidity/semanticTests/structs/calldata/calldata_struct_as_memory_argument.sol,"g(uint32 p1, S memory s);f(uint32 p1, S calldata c)"
ethereum/solidity,test/libsolidity/semanticTests/structs/calldata/calldata_struct_array_member.sol,f(S calldata s)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/407_invalid_address_no_checksum.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/storage/mapping_state.sol,"getVoteCount(address addr);grantVoteRight(address addr);vote(address voter, address vote)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/432_bare_require.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/function_type_arrays.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/struct_array_branches_1d.sol,f(bool b)
ethereum/solidity,test/libsolidity/semanticTests/array/push/push_no_args_2d.sol,"l();ll(uint index);a(uint i, uint j);f(uint index, uint value);lv(uint value)"
ethereum/solidity,test/libsolidity/syntaxTests/modifiers/function_overrides_modifier.sol,mod(uint a)
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/error_deprecate_value_function.sol,f()
ethereum/solidity,test/libsolidity/ABIJson/view_function.sol,"foo(uint a, uint b);boo(uint32 a)"
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/public_var_overriding_multiple_derived.sol,foo();foo()
ethereum/solidity,test/libsolidity/syntaxTests/virtualLookup/modifiers_in_libraries.sol,withMod(uint self);f(uint _value)
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_data_location_calldata.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/external_function_type_to_address.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/bmc_coverage/branches_with_return/simple_if_array.sol,check();conditional_store()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/107_empty_name_input_parameter_with_named_one.sol,"f(uint, uint k)"
ethereum/solidity,test/libsolidity/ABIJson/function_type.sol,g(function(uint)
ethereum/solidity,test/libsolidity/syntaxTests/types/function_types/function_state_mutability_fail.sol,internalPureFunc(uint256 x);internalViewFunc(uint256 x);internalMutableFunc(uint256 x);externalPureFunc(uint256 x);externalViewFunc(uint256 x);externalPayableFunc(uint256 x);externalMutableFunc(uint256 x);funcTakesInternalPure(function(uint256);funcTakesInternalView(function(uint256);funcTakesInternalMutable(function(uint256);funcTakesExternalPure(function(uint256);funcTakesExternalView(function(uint256);funcTakesExternalPayable(function(uint256);funcTakesExternalMutable(function(uint256);tests()
ethereum/solidity,test/libsolidity/syntaxTests/errors/using.sol,f(uint);f()
ethereum/solidity,test/libsolidity/semanticTests/events/event_dynamic_array_memory.sol,createEvent(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/array/invalidCopy/storage_to_storage_different_sign.sol,f();g()
ethereum/solidity,test/libsolidity/ASTJSON/contract_dep_order.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/compound_add.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/conversion/function_type_payable_view.sol,h();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_static_1_fail.sol,"f(uint x, uint y)"
ethereum/solidity,test/libsolidity/syntaxTests/types/encoding_fractional_abiencoderv2.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/allow_empty_duplicated_super_constructor_call.sol,""
ethereum/solidity,test/libsolidity/semanticTests/viaYul/storage/dirty_storage_dynamic_array.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/bug10821-if.sol,testFunc()
ethereum/solidity,test/libsolidity/syntaxTests/multiSource/duplicate_import_statement.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/license/license_double.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/044_returning_multi_dimensional_arrays_new_abi.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/scoping/name_pseudo_shadowing.sol,e();f()
ethereum/solidity,test/libsolidity/syntaxTests/indexing/struct_array_noninteger_index.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/array/length/invalid_expression_4.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/539_array_length_invalid_expression_scientific_literal.sol,""
ethereum/solidity,test/libsolidity/semanticTests/multiSource/free_function_transitive_import.sol,f();g();h();i()
ethereum/solidity,test/libsolidity/syntaxTests/imports/inheritance_abi_encoder_mismatch_2.sol,f(S memory _s)
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/localStorageVariables/ternary_assignment_err.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/errors/zero_signature.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/literalOperations/mod_zero_complex.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/natspec/safe_assert_false_positive_pure.sol,g(uint _x)
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_multiple_duplicated.sol,foo();test(uint8 _a);foo();test();foo();foo();test();test();foo()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/533_tuple_invalid_literal_too_large_exp.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/array/nested_calldata_storage.sol,i(uint[][2] calldata s)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/584_abi_decode_with_tuple_of_other_than_types.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/contract_address_conversion_2.sol,"f(C c, C d)"
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_implemented_with_unimplemented_then_implemented.sol,f();f();f()
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/constant_restrict_warning.sol,f();g()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/tuple_rationals_conditional.sol,f(bool x)
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/push_push_no_args_2.sol,l()
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/shift_right_assignment.sol,"f(uint256 a, uint256 b)"
ethereum/solidity,test/libsolidity/smtCheckerTests/types/type_meta_unsupported.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/abi/abi_encode_hash.sol,"abiEncodeHash(uint a, uint b)"
ethereum/solidity,test/libsolidity/semanticTests/viaYul/loops/simple.sol,f();g();h();i();j()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/function_call_state_var_init.sol,f(uint y)
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/function_type_return_parameters_with_names.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_unreachable_1.sol,f(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_stricter_mutability7.sol,foo();foo()
ethereum/solidity,test/libsolidity/syntaxTests/largeTypes/large_storage_array_simple.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/constructor/constructer_internal_function_abstract.sol,""
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV1/memory_params_in_external_function.sol,"f(bytes memory a, bytes calldata b, uint[] memory c);g()"
ethereum/solidity,test/libsolidity/syntaxTests/unexpected.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_mapping_aliasing_1.sol,p();f(mapping (uint => uint);g(uint x)
ethereum/solidity,test/libsolidity/semanticTests/storage/simple_accessor.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/array/length/array_length_cannot_be_constant_function_parameter.sol,f(uint constant LEN)
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/mappings.sol,f();g();h()
ethereum/solidity,test/libsolidity/semanticTests/libraries/internal_library_function_bound_to_address.sol,"equals(address a, address b);foo(address a, address b)"
ethereum/solidity,test/libsolidity/syntaxTests/types/address/address_members_in_contract.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/461_event_parameter_cannot_shadow_state_variable.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/bytecodeReferences/circular_reference_mention_only.sol,foo();foo()
ethereum/solidity,test/libsolidity/smtCheckerTests/external_calls/internal_library_external_call_2.sol,i();f(I _i);g(I _i);s();g(I _i)
ethereum/solidity,test/libsolidity/semanticTests/immutable/internal_function_pointer.sol,f();callZ()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/mapping_nonelementary_key_3.sol,""
ethereum/solidity,test/libsolidity/semanticTests/viaYul/struct_member_access.sol,f(S memory m);g(S calldata c);h()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/integer_new.sol,f();g();h();h(uint size)
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/527_fallback_marked_internal.sol,""
ethereum/solidity,test/libsolidity/semanticTests/ecrecover/ecrecover_abiV2.sol,"a(bytes32 h, uint8 v, bytes32 r, bytes32 s)"
ethereum/solidity,test/libsolidity/syntaxTests/events/multiple_inheritance.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/imports/import_as_module_2.sol,f(uint _x);g(uint _y);f(uint _x)
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/bytes_new.sol,f();g();h();h(uint size)
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_implemented_and_unimplemented_with_implemented_call_via_contract.sol,f();f();f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/static_array_implicit_push_4.sol,t()
ethereum/solidity,test/libsolidity/semanticTests/events/event_indexed_string.sol,deposit()
ethereum/solidity,test/libsolidity/semanticTests/types/convert_fixed_bytes_to_fixed_bytes_greater_size.sol,bytesToBytes(bytes2 input)
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array_dynamic_static_short_reencode.sol,f(uint256[][2][] calldata x);g(uint256[][2][] calldata x)
ethereum/solidity,test/libsolidity/smtCheckerTests/overflow/overflow_sum_signed.sol,f(int8 x)
ethereum/solidity,test/libsolidity/smtCheckerTests/bmc_coverage/math.sol,"a(uint x, uint y);s(uint x, uint y);m(uint x, uint y);d(uint x, uint y)"
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/function_definition_whitespace.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/inline_array_strings_from_document.sol,f(uint256 i)
ethereum/solidity,test/libsolidity/semanticTests/externalContracts/_prbmath/PRBMathUD60x18.sol,"avg(uint256 x, uint256 y);ceil(uint256 x);div(uint256 x, uint256 y);e();exp(uint256 x);floor(uint256 x);frac(uint256 x);gm(uint256 x, uint256 y);inv(uint256 x);ln(uint256 x);mul(uint256 x, uint256 y);pi();pow(uint256 x, uint256 y);scale();sqrt(uint256 x)"
ethereum/solidity,test/libsolidity/syntaxTests/array/invalidCopy/storage_to_memory_different_base.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/array/length/can_be_constant_in_struct.sol,""
ethereum/solidity,test/libsolidity/semanticTests/inlineAssembly/calldata_array_assign.sol,f(uint[2][] calldata x)
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/shift_left_larger_type.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/address/address_payable_internal_overload_payable.sol,f(address payable);f(address);g()
ethereum/solidity,test/libsolidity/syntaxTests/parsing/payable_accessor.sol,""
ethereum/solidity,test/libsolidity/semanticTests/libraries/internal_library_function_bound_to_function_named_selector.sol,selector(function(uint);identity(uint x);test(uint value)
ethereum/solidity,test/libsolidity/syntaxTests/memberLookup/memory_structs_with_mappings.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/132_enum_to_enum_conversion_is_not_okay.sol,""
ethereum/solidity,test/libsolidity/ABIJson/errors.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/storage/packed_storage_structs_enum.sol,test()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/contract_address_conversion.sol,"f(C c, address a)"
ethereum/solidity,test/libsolidity/smtCheckerTests/inline_assembly/assembly_5.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/conversion/function_cast.sol,f(uint x);g();h(uint x);t()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/public_vars_wrong_override.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/localStorageVariables/assembly/switch_declaration_fine.sol,f(bool flag);g(uint256 a)
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/state_variables_3.sol,f(uint y)
ethereum/solidity,test/libsolidity/semanticTests/errors/error_in_library_and_interface.sol,f();g();h()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/storage/mappings.sol,test_simple(uint _off);test_cleanup();test_str();test_twodim()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/interface/diamond/diamond_with_relist.sol,test();test();test();test()
ethereum/solidity,test/libsolidity/semanticTests/operators/shifts/shift_right_negative_lvalue_signextend_int32_v1.sol,"f(int32 a, uint32 b)"
ethereum/solidity,test/libsolidity/smtCheckerTests/external_calls/external_hash_known_code_pure.sol,hash(bytes32);inv()
ethereum/solidity,test/libsolidity/syntaxTests/structs/member_type_eq_name_3.sol,""
ethereum/solidity,test/libsolidity/semanticTests/abiencodedecode/abi_encode_with_signaturev2.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/viewPureChecker/address.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_return_public.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV1/calldata_arrays_too_large.sol,"f(uint a, uint[] calldata b, uint c)"
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/assignment_module_contract_member_variable.sol,a()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/typeChecking/return_wrong_type.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/enums/using_inherited_enum_excplicitly.sol,answer()
ethereum/solidity,test/libsolidity/smtCheckerTests/operators/compound_add_chain.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/570_function_type_undeclared_type.sol,a(function(Nested)
ethereum/solidity,test/libsolidity/syntaxTests/parsing/multi_variable_declarations.sol,f();g()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/type_interfaceid.sol,"f();f();g(uint, address);f();g();h()"
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/localStorageVariables/ternary_assignment_fine.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/reverts/invalid_enum_stored.sol,test_store();test_store_ok()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/358_illegal_override_payable.sol,f();f()
ethereum/solidity,test/libsolidity/syntaxTests/natspec/docstring_variable.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/string/string_multipart_unicode.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/while_loop_array_assignment_storage_storage.sol,p();testUnboundedForLoop(uint n)
ethereum/solidity,test/libsolidity/semanticTests/array/pop/byte_array_pop.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/471_unspecified_storage_fail.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/for_fine.sol,f();g()
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/base_contract_assertion_fail_6.sol,f();v();g();f();g();v()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/returndatasize_as_variable_pre_byzantium.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/interfaceID/interfaces.sol,hello();world(int);other();supportsInterface(bytes4 interfaceID);hello();world();hello_world();hello_world_interfaceId();other();hello_world_derived_interfaceId()
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_4.sol,f(uint x)
ethereum/solidity,test/libsolidity/semanticTests/immutable/getter.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/parsing/modifier_without_semicolon.sol,""
ethereum/solidity,test/libsolidity/semanticTests/multiSource/circular_import_2.sol,f();f();g();foo()
ethereum/solidity,test/libsolidity/syntaxTests/lvalues/calldata_member_access.sol,f(S calldata s)
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/tuple_fine.sol,f();g();h()
ethereum/solidity,test/libsolidity/smtCheckerTests/math/addmod_mulmod.sol,test()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/188_string_index.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV2/struct/struct_function.sol,f(S memory s);test();g()
ethereum/solidity,test/libsolidity/syntaxTests/string/string_multipart_only_regular.sol,f()
ethereum/solidity,test/compilationTests/MultiSigWallet/TestToken.sol,"issueTokens(address _to, uint256 _value);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);balanceOf(address _owner)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/140_multiple_similar_suggestions.sol,g()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/568_blockhash.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/structs/global_struct_contract_name_clash.sol,""
ethereum/solidity,test/libsolidity/semanticTests/libraries/library_address_via_module.sol,f(uint256 v);g(uint256 v);addr();g(uint256 v);h(uint256 v);i(uint256 v);j(uint256 v);k(uint256 v)
ethereum/solidity,test/libsolidity/syntaxTests/literalOperations/exponent.sol,g()
ethereum/solidity,test/libsolidity/smtCheckerTests/special/tx_data_immutable_fail.sol,f();fi()
ethereum/solidity,test/libsolidity/syntaxTests/modifiers/base_constructor_double_invocation.sol,""
ethereum/solidity,test/libsolidity/semanticTests/events/event_indexed_function2.sol,""
ethereum/solidity,test/libsolidity/ABIJson/empty_contract.sol,""
ethereum/solidity,test/libsolidity/ABIJson/errors_referenced.sol,f();g(uint x)
ethereum/solidity,test/libsolidity/syntaxTests/events/event_too_many_indexed.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/unreachable.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/no_common_base_and_unique_implementation.sol,f();g();g();f()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/calldata_array_length.sol,f(uint256[] calldata x);f(uint256[][] calldata x);f(uint256[2] calldata x)
ethereum/solidity,test/libsolidity/semanticTests/functionCall/named_args.sol,"a(uint a, uint b, uint c);b();c()"
ethereum/solidity,test/libsolidity/smtCheckerTests/external_calls/external_call_from_constructor_3.sol,f(uint _x);f()
ethereum/solidity,test/libsolidity/semanticTests/structs/calldata/calldata_struct_array_member_dynamic.sol,f(S calldata s)
ethereum/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_overriding_1.sol,f();set(uint x)
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_literal_4.sol,f(bool c)
ethereum/solidity,test/libsolidity/syntaxTests/returnExpressions/single_return_mismatching_number_named.sol,f();g()
ethereum/solidity,test/libsolidity/semanticTests/fallback/short_data_calls_fallback.sol,fow()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/207_no_mappings_in_memory_array.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/missing_functions_duplicate_bug.sol,renounceOwnership();init(uint phaseLength)
ethereum/solidity,test/libsolidity/semanticTests/abiEncoderV1/abi_encode_call.sol,"c(uint256 a, uint256[] memory b);f()"
ethereum/solidity,test/libsolidity/smtCheckerTests/invariants/loop_basic_for.sol,f(uint x)
ethereum/solidity,test/libsolidity/smtCheckerTests/abi/abi_encode_string_literal.sol,abiEncodeStringLiteral()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/202_bytes_reference_compare_operators.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/argument_external.sol,f(mapping(uint => uint)
ethereum/solidity,test/compilationTests/corion/premium.sol,"receiveCorionPremiumToken(address, uint256, bytes calldata);approvedCorionPremiumToken(address, uint256, bytes calldata);replaceModule(address payable addr);closeIco();approve(address spender, uint256 amount, uint256 nonce);approveAndCall(address spender, uint256 amount, uint256 nonce, bytes calldata extraData);_approve(address spender, uint256 amount, uint256 nonce);allowance(address owner, address spender);transfer(address to, uint256 amount);transferFrom(address from, address to, uint256 amount);transfer(address to, uint256 amount, bytes calldata extraData);transferToContract(address from, address to, uint256 amount, bytes memory extraData);_transfer(address from, address to, uint256 amount);mint(address owner, uint256 value);_mint(address owner, uint256 value);isContract(address addr);balanceOf(address owner);totalSupply()"
ethereum/solidity,test/libsolidity/smtCheckerTests/array_members/length_copy_storage_to_memory.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/array/copying/array_copy_including_array.sol,test();clear()
ethereum/solidity,test/libsolidity/syntaxTests/array/slice/memory_dynamic.sol,f(uint256[] memory x)
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/interface/diamond/diamond_no_relist.sol,test();test()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/functions_external_4.sol,f(uint _x);g(uint _y)
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/public_var_override_mapping_to_dynamic_struct.sol,f(address x)
ethereum/solidity,test/libsolidity/semanticTests/smoke/bytes_and_strings.sol,e(bytes memory b);f();g();h()
ethereum/solidity,test/libsolidity/semanticTests/isoltestTesting/builtins.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/fallback_receive/receive_with_override.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/473_storage_location_non_array_or_struct_disallowed.sol,f(uint storage a)
ethereum/solidity,test/libsolidity/syntaxTests/dataLocations/publicFunction/public_function_return_parameters_no_data_location.sol,h()
ethereum/solidity,test/libsolidity/syntaxTests/tupleAssignments/large_component_count.sol,g();f()
ethereum/solidity,test/libsolidity/ASTJSON/source_location.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/dataLocations/publicFunction/public_function_parameters_no_data_location.sol,h(uint[])
ethereum/solidity,test/libsolidity/semanticTests/various/codehash.sol,f();g();h()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/modifier_inherited_different_signature.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/types/rational_number_bitshift_limit.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/various/inline_member_init_inheritence.sol,getBMember();getDMember()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/054_inheritance_basic.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/getters/struct_3.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/freeFunctions/illegal_names.sol,this();super();_();test()
ethereum/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/library_function_import_bug.sol,nop();example();foo()
ethereum/solidity,test/libsolidity/smtCheckerTests/inheritance/receive.sol,g()
ethereum/solidity,test/libsolidity/semanticTests/revertStrings/calldata_array_dynamic_static_short_decode.sol,f(uint256[][2][] calldata x)
ethereum/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_array_data_location_function_param_external.sol,""
ethereum/solidity,test/libsolidity/semanticTests/various/byte_optimization_bug.sol,f(uint256 x);g(uint256 x)
ethereum/solidity,test/libsolidity/ASTJSON/not_existing_import.sol,""
ethereum/solidity,test/cmdlineTests/model_checker_engine_none/input.sol,f(uint x)
ethereum/solidity,test/libsolidity/semanticTests/types/convert_uint_to_fixed_bytes_greater_size.sol,UintToBytes(uint16 h)
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy_diamond_3.sol,""
ethereum/solidity,test/libsolidity/semanticTests/inlineAssembly/inline_assembly_memory_access.sol,test()
ethereum/solidity,test/libsolidity/ASTJSON/override.sol,faa();foo();faa();foo();faa()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/public_vars_multiple_diamond1.sol,foo();foo()
ethereum/solidity,test/libsolidity/semanticTests/errors/via_import.sol,x();y();z()
ethereum/solidity,test/libsolidity/syntaxTests/constructor/payable_new.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/tuple_single_element_2.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_literal_1.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/types/address/contract_non_payable_fallback_to_payable_address.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/175_uninitialized_const_variable.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/metaTypes/integer_pure.sol,viewAssignment();assignment()
ethereum/solidity,test/libsolidity/semanticTests/constructor/inline_member_init_inheritence_without_constructor.sol,getBMember();getDMember()
ethereum/solidity,test/libsolidity/semanticTests/events/event_anonymous_with_topics.sol,deposit(bytes32 _id)
ethereum/solidity,test/libsolidity/syntaxTests/functionTypes/call_value_options_on_non_payable_function_type.sol,g()
ethereum/solidity,test/libsolidity/semanticTests/empty_for_loop.sol,f()
ethereum/solidity,test/cmdlineTests/yul_optimizer_steps_invalid_nesting/input.sol,f()
ethereum/solidity,test/cmdlineTests/strict_asm_options_in_non_asm_mode/input.sol,f()
ethereum/solidity,test/cmdlineTests/yul_optimizer_steps_invalid_abbreviation/input.sol,f()
ethereum/solidity,test/cmdlineTests/yul_optimizer_steps_disabled/input.sol,f()
ethereum/solidity,test/cmdlineTests/yul_optimizer_steps_unbalanced_bracket/input.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inheritance/override/override_stricter_mutability5.sol,foo();foo()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/208_assignment_mem_to_local_storage_variable.sol,f(uint[] memory x)
ethereum/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_control_flow.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/528_fallback_marked_private.sol,""
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/291_modifier_is_not_a_valid_typename.sol,f()
ethereum/solidity,test/compilationTests/gnosis/Oracles/SignedMessageOracleFactory.sol,"createSignedMessageOracle(bytes32 descriptionHash, uint8 v, bytes32 r, bytes32 s)"
ethereum/solidity,test/libsolidity/syntaxTests/indexing/fixedbytes_without_index.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/types/array_static_aliasing_memory_5.sol,"f(uint[2] memory a, uint[2] memory b, uint[2] memory c)"
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/322_fixed_to_bytes_implicit_conversion.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/literals/unicode_string_direction_override_3.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/constant_variable_via_offset.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/metaTypes/integer_err.sol,assignment()
ethereum/solidity,test/libsolidity/smtCheckerTests/functions/getters/contract.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/expressions/bit_operators.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/loops/do_while_continue.sol,f()
ethereum/solidity,test/libsolidity/smtCheckerTests/bmc_coverage/branches_with_return/triple_nested_if.sol,test()
ethereum/solidity,test/libsolidity/semanticTests/calldata/calldata_internal_function_pointer.sol,f(bytes calldata b);h(bytes calldata b);g()
ethereum/solidity,test/libsolidity/syntaxTests/tryCatch/simple_catch.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/compoundAssignment/tuple_invalid_inline_array_type.sol,f()
ethereum/solidity,test/libsolidity/syntaxTests/inlineAssembly/storage_reference_empty_offset.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/tryCatch/malformed_panic_3.sol,f(uint size);a();b();c();d()
ethereum/solidity,test/libsolidity/semanticTests/viaYul/detect_add_overflow_signed.sol,"f(int a, int b);g(int8 a, int8 b)"
ethereum/solidity,test/libsolidity/syntaxTests/freeFunctions/free_function_qualified_modifier.sol,fun()
ethereum/solidity,test/libsolidity/syntaxTests/functionCalls/calloptions_on_delegatecall.sol,foo()
ethereum/solidity,test/libsolidity/smtCheckerTests/overflow/unsigned_div_overflow.sol,"f(uint x, uint y)"
ethereum/solidity,test/libsolidity/syntaxTests/events/event_param_type_shadowed_by_param_name.sol,""
ethereum/solidity,test/libsolidity/smtCheckerTests/overflow/signed_div_overflow.sol,"f(int x, int y)"
ethereum/solidity,test/libsolidity/semanticTests/arithmetics/addmod_mulmod_zero.sol,f(uint256 d);g(uint256 d);h()
ethereum/solidity,test/libsolidity/semanticTests/various/gasleft_decrease.sol,f();g()
ethereum/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/281_continue_not_in_loop_2.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/functionCall/gas_and_value_basic.sol,getBalance();setFlag();getFlag();sendAmount(uint256 amount);outOfGas();checkState()
ethereum/solidity,test/libsolidity/syntaxTests/string/string_multipart_unicode_mixed.sol,f()
ethereum/solidity,test/libsolidity/semanticTests/inheritance/pass_dynamic_arguments_to_the_base_base_with_gap.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/scoping/scoping_activation.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/scoping/scoping_activation_old.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_indirectly_recursive_dynamic_array1.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/types/array_dynamic_3.sol,"f(uint x, uint y, uint z, uint t, uint w, uint v)"
winsvega/solidity,test/libsolidity/syntaxTests/parsing/multi_arrays.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/types/address/contract_payable_fallback_to_payable_address.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/invariants/loop_basic.sol,f(uint x)
winsvega/solidity,test/libsolidity/smtCheckerTests/operators/compound_sub.sol,f(uint x)
winsvega/solidity,test/libsolidity/semanticTests/viaYul/conversion/explicit_cast_function_call.sol,f(bytes32 b);g()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/enum_storage_eq.sol,f(D _d)
winsvega/solidity,test/libsolidity/syntaxTests/parsing/mapping_nonelementary_key_4.sol,""
winsvega/solidity,test/libsolidity/semanticTests/storage/accessors_mapping_for_array.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/types/mapping/function_type_return_external.sol,f(function()
winsvega/solidity,test/libsolidity/syntaxTests/specialFunctions/encodePacked_array_of_structs.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/location_specifiers_for_state_variables.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/typeChecking/library_instances.sol,foo(X param)
winsvega/solidity,test/libsolidity/syntaxTests/dataLocations/internalFunction/function_argument_location_specifier_test_internal_memory.sol,f(bytes memory)
winsvega/solidity,test/libsolidity/smtCheckerTests/types/function_type_nested.sol,h()
winsvega/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array_dynamic_static_short_decode.sol,f(uint256[][2][] calldata x)
winsvega/solidity,test/libsolidity/semanticTests/structs/delete_struct.sol,getToDelete();getTopValue();getNestedValue();getTopMapping(uint index);getNestedMapping(uint index)
winsvega/solidity,test/libsolidity/syntaxTests/parsing/address_function_arguments_and_returns.sol,f(address);g(address payable)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/330_rational_as_exponent_value_unsigned.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/lvalues/calldata_member_access.sol,f(S calldata s)
winsvega/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_two_invocations.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/viaYul/delete.sol,internal_func();call_internal_func();call_deleted_internal_func()
winsvega/solidity,test/libsolidity/smtCheckerTests/operators/compound_add_mapping.sol,"f(uint x, uint p)"
winsvega/solidity,test/libsolidity/smtCheckerTests/types/mapping_equal_keys_1.sol,"f(uint x, uint y)"
winsvega/solidity,test/libsolidity/semanticTests/viaYul/function_entry_checks.sol,"f();g(uint x, uint y);h();i(bytes32 b);j(bool b);k(bytes32 b);s();t(uint)"
winsvega/solidity,test/libsolidity/syntaxTests/types/hex_literal_to_bytesXX_same_size_explicit.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/special/msg_sender_fail_1.sol,f(address c)
winsvega/solidity,test/compilationTests/gnosis/Oracles/UltimateOracle.sol,"setForwardedOutcome();challengeOutcome(int _outcome);voteForOutcome(int _outcome, uint amount);withdraw();isChallengePeriodOver();isFrontRunnerPeriodOver();isChallenged();isOutcomeSet();getOutcome()"
winsvega/solidity,test/libsolidity/ABIJson/multiple_params.sol,"f(uint a, uint b)"
winsvega/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_return_public.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_parameter_copy.sol,f(uint x)
winsvega/solidity,test/libsolidity/gasTests/abiv2_optimised.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/specialFunctions/abidecode/abi_decode_invalid_arg_type.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/conditional_with_variables.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/rational_number_literal_limit_3.sol,bignum()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/441_unused_unnamed_return_parameter.sol,f()
winsvega/solidity,test/libsolidity/ASTJSON/placeholder_statement.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/083_anonymous_event_too_many_indexed.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/208_assignment_mem_to_local_storage_variable.sol,f(uint[] memory x)
winsvega/solidity,test/libsolidity/syntaxTests/array/contract_array.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/367_using_directive_for_missing_selftype.sol,b();a()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/single_modifier_arg_trailing_comma.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/special/msg_sig.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/string_literal_assignment_2.sol,f(bytes32 _x)
winsvega/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_and_need_both_fail.sol,f();g()
winsvega/solidity,test/libsolidity/semanticTests/variables/delete_local.sol,delLocal()
winsvega/solidity,test/compilationTests/gnosis/Markets/StandardMarket.sol,"fund(uint _funding);close();withdrawFees();buy(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint maxCost);sell(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint minProfit);shortSell(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint minProfit);calcMarketFee(uint outcomeTokenCost)"
winsvega/solidity,test/libsolidity/syntaxTests/types/function_types/function_parameter_return_types_success.sol,"string_to_string(string memory x);string_string_to_string(string memory x, string memory y);tests()"
winsvega/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_directly_recursive_dynamic_array.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/disallowWildcards.sol,fn()
winsvega/solidity,test/libsolidity/syntaxTests/constructor/constructor.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/145_external_base_visibility.sol,f();g()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/comment_end_with_double_star.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/types/bool_simple_1.sol,f(bool x)
winsvega/solidity,test/libsolidity/semanticTests/smoke/multiline_comments.sol,"f(uint a, uint b, uint c, uint d, uint e)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/136_private_visibility_via_explicit_base_access.sol,f();g()
winsvega/solidity,test/libsolidity/syntaxTests/imports/name_clash_in_import_3.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/159_storage_variable_initialization_with_incorrect_type_string.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/fallback/pure_modifier.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/135_private_visibility.sol,f();g()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/093_function_event_in_contract_clash.sol,dup()
winsvega/solidity,test/libsolidity/syntaxTests/specialFunctions/abidecode/abi_decode_nontuple.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/structs/conversion/assignment_ignore_mapping.sol,run()
winsvega/solidity,test/libsolidity/syntaxTests/conversion/not_allowed_conversion_to_int_array_pointer1.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/while_2_break.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/storage_value_vars_2.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/while_continue.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/viaYul/array_memory_index_access.sol,"index(uint256 len);accessIndex(uint256 len, int256 idx)"
winsvega/solidity,test/libsolidity/semanticTests/viaYul/return.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/442_named_return_parameter.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/functions_storage_var_1.sol,f(uint x);g()
winsvega/solidity,test/libsolidity/syntaxTests/string/string_unterminated.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_array_assignment_memory_memory.sol,"testUnboundedForLoop(uint n, uint[] memory b, uint[] memory c)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/100_error_count_in_named_args.sol,"a(uint a, uint b);b()"
winsvega/solidity,test/libsolidity/semanticTests/viaYul/storage/mappings.sol,test_simple(uint _off);test_cleanup();test_str();test_twodim()
winsvega/solidity,test/libsolidity/smtCheckerTests/control_flow/assignment_in_declaration.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_and_fail.sol,f();g()
winsvega/solidity,test/libsolidity/semanticTests/viaYul/require.sol,f(bool a);fail();succeed()
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/while_nested_continue.sol,"f(uint x, uint y, bool b, bool c)"
winsvega/solidity,test/libsolidity/semanticTests/structs/conversion/recursive_storage_memory.sol,run()
winsvega/solidity,test/libsolidity/smtCheckerTests/operators/unary_add.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/access_to_base_member_struct.sol,f();g();h()
winsvega/solidity,test/libsolidity/gasTests/dispatch_large.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/natspec/docstring_parameter.sol,"f(address _from, address _5to, uint256 value)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/348_unused_return_value_call_value.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/array_branch_2d.sol,f(bool b)
winsvega/solidity,test/libsolidity/ASTJSON/function_type.sol,f(function()
winsvega/solidity,test/libsolidity/syntaxTests/specialFunctions/abidecode/abi_decode_single_return.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/rational_large_1.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/smoke/bytes_and_strings.sol,e(bytes memory b);f();g();h()
winsvega/solidity,test/libsolidity/smtCheckerTests/special/msg_data.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/multiVariableDeclarationInvalidType.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/expressions/conditional_expression_false_literal.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/array_dynamic_1.sol,"f(uint x, uint y)"
winsvega/solidity,test/libsolidity/syntaxTests/array/array_pop.sol,test()
winsvega/solidity,test/libsolidity/syntaxTests/multiline_comments.sol,""
winsvega/solidity,test/libsolidity/gasTests/dispatch_small_optimised.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_control_flow.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/inline_arrays/inline_array_declaration_const_int_conversion.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/exp_expression.sol,fun(uint256 a)
winsvega/solidity,test/libsolidity/smtCheckerTests/types/tuple_declarations_empty.sol,g()
winsvega/solidity,test/libsolidity/smtCheckerTests/invariants/loop_nested_for.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/for_1_break.sol,"f(uint x, bool b)"
winsvega/solidity,test/libsolidity/syntaxTests/inline_arrays/inline_array_fixed_types.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/this_state.sol,g();h()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/307_rational_unary_minus_operation.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/libraries/library_function_selectors.sol,f(uint256 x);g(uint256[] storage s);h(uint256[] memory m);f();g();h()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/190_negative_integers_to_signed_out_of_bound.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/memberLookup/memory_structs_with_mappings.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/inheritance/wrong_type_base_arguments.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/types/mapping/argument_public.sol,f(mapping(uint => uint)
winsvega/solidity,test/libsolidity/semanticTests/viaYul/conversion/implicit_cast_function_call.sol,f(uint b);g()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/057_legal_override_direct.sol,f();f(uint i)
winsvega/solidity,test/libsolidity/syntaxTests/inheritance/override/add_view.sol,f();f()
winsvega/solidity,test/libsolidity/semanticTests/viaYul/unary_operations.sol,preincr(uint a);postincr(uint a);predecr(uint a);postdecr(uint a);not(bool a);bitnot(int256 a);negate(int256 a)
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/creation_view_fail.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/173_constant_struct.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/operators/compound_sub_array_index.sol,"f(uint x, uint p)"
winsvega/solidity,test/libsolidity/ASTJSON/using_for_directive.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/functionCalls/named_arguments_overload_failing2.sol,"f(uint x);f(uint x, uint y);f(uint x, uint y, uint z);call()"
winsvega/solidity,test/libsolidity/syntaxTests/dataLocations/function_type_array_as_reference_type.sol,b(function(Nested memory);c(function(Nested memory);d(function(Nested memory)
winsvega/solidity,test/libsolidity/syntaxTests/constructor/abstract_creation_forward_reference.sol,createChild()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/089_double_event_declaration_ignores_indexed.sol,""
winsvega/solidity,test/libsolidity/semanticTests/shifts.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/types/rational_number_too_large.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/404_read_returned_struct.sol,g()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/209_storage_assign_to_different_local_variable.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/mapping/argument_external.sol,f(mapping(uint => uint)
winsvega/solidity,test/libsolidity/syntaxTests/parsing/assembly_invalid_type.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/340_rational_bitxor_binary_operation.sol,f()
winsvega/solidity,test/libsolidity/ASTJSON/inheritance_specifier.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/types/rational_number_literal_to_fixed_implicit.sol,literalToUFixed();literalToFixed()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/299_invalid_fixed_types_long_invalid_identifier.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/types/array_aliasing_storage_4.sol,"f(uint[] storage a, uint[] storage b)"
winsvega/solidity,test/libsolidity/smtCheckerTests/types/bool_simple_5.sol,f(bool x)
winsvega/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_simple.sol,f()
winsvega/solidity,test/libsolidity/ABIJson/structs_and_arrays.sol,"f(string calldata a, bytes calldata b, uint[] calldata c)"
winsvega/solidity,test/compilationTests/gnosis/Tokens/StandardToken.sol,"transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value);allowance(address owner, address spender);balanceOf(address owner);totalSupply()"
winsvega/solidity,test/libsolidity/syntaxTests/imports/relative_import.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/modifiers/function_modifier_invocation.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/address/address_to_payable_address.sol,f(address a)
winsvega/solidity,test/libsolidity/syntaxTests/types/address/address_payable_public_overload.sol,f(address);f(address payable)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/331_rational_as_exponent_half.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/default_location.sol,f();g();h();i(bool flag);j(bool flag)
winsvega/solidity,test/libsolidity/syntaxTests/constructor/constructible_internal_constructor.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/types/mapping/assignment_state_variable.sol,fun()
winsvega/solidity,test/libsolidity/smtCheckerTests/overflow/overflow_mul_signed.sol,f(int8 x)
winsvega/solidity,test/libsolidity/smtCheckerTests/overflow/safe_add_1.sol,"add(uint x, uint y)"
winsvega/solidity,test/libsolidity/smtCheckerTests/types/mapping_aliasing_1.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/types/type_conversion_cleanup.sol,test()
winsvega/solidity,test/libsolidity/smtCheckerTestsJSON/simple.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/537_array_length_invalid_expression_int_divides_bool.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/array/length/invalid_expression_2.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/invariants/state_machine_1_fail.sol,f();g();h();j();i()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/struct_definition.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_merge_variables_3.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/functionTypes/function_type_variable_external_internal.sol,fa(bytes memory)
winsvega/solidity,test/libsolidity/syntaxTests/imports/regular_import.sol,""
winsvega/solidity,test/libsolidity/semanticTests/functionCall/mapping_internal_return.sol,f();g();h()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/467_does_not_error_transfer_regular_function.sol,transfer()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/399_does_not_warn_msg_value_in_internal_function.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_indirectly_recursive_fixed_array3.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/345_unused_return_value.sol,g();f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/enum_inheritance_contract.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/metaTypes/tooManyArgsForType.sol,creation()
winsvega/solidity,test/libsolidity/syntaxTests/types/rational_number_mul_limit.sol,f()
winsvega/solidity,test/libsolidity/ASTJSON/smoke.sol,""
winsvega/solidity,test/libsolidity/semanticTests/variables/mapping_local_tuple_assignment.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/function_inside_branch_modify_state_var_2.sol,f();g(bool b)
winsvega/solidity,test/libsolidity/syntaxTests/inline_arrays/inline_array_of_mapping_type.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/functions_recursive.sol,g()
winsvega/solidity,test/libsolidity/syntaxTests/types/rational_number_exp_limit_fail.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/smoke/arrays.sol,r();s();u();v();x()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/360_function_variable_mixin.sol,ok();checkOk()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/array_branches_1d.sol,"f(bool b, uint[] memory c)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/425_interface_implement_public_contract.sol,f();f()
winsvega/solidity,test/libsolidity/syntaxTests/globalFunctions/sha3_no_call.sol,f(bytes memory data)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/185_invalid_utf8_implicit.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/revert_fine.sol,f();g(bool flag)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/547_warn_about_address_members_on_non_this_contract_balance.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/070_struct_accessor_one_array_only.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/types/array_aliasing_memory_2.sol,"f(uint[] memory a, uint[] memory b)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/526_fallback_marked_external.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/inheritance/override/calldata_memory_interface_struct.sol,f(S calldata);g(S calldata);h(S calldata);i(S calldata);f(S memory);g(S memory);h(S memory);i(S memory)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/548_warn_about_address_members_on_non_this_contract_transfer.sol,f()
winsvega/solidity,test/libsolidity/ASTJSON/short_type_name_ref.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/viaYul/return_and_convert.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array_dynamic_static_dynamic.sol,f(uint8[][1][] calldata s);reenc_f(uint8[][1][] calldata s);g();h();i();j()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/371_shift_constant_right_excessive_rvalue.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/do_while_1_false_positives.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/476_too_large_arrays_for_calldata_external.sol,f(uint[85678901234] calldata a)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/265_new_for_non_array.sol,f(uint size)
winsvega/solidity,test/libsolidity/syntaxTests/array/length/cyclic_constant.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_recursion_via_mapping.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_1.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/constants/mod_zero.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/specialFunctions/single_non_bytes_arg.sol,f();g(bytes32)
winsvega/solidity,test/libsolidity/syntaxTests/parsing/scientific_notation.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/284_conditional_expression_with_different_struct.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_data_location_function_param_external.sol,""
winsvega/solidity,test/libsolidity/semanticTests/viaYul/assert.sol,f(bool a);fail();succeed()
winsvega/solidity,test/libsolidity/syntaxTests/types/address/address_in_struct_fail.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/587_event_param_type_outside_storage.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/unbalanced_negative_stack.sol,f()
winsvega/solidity,test/compilationTests/gnosis/Oracles/Oracle.sol,isOutcomeSet();getOutcome()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/188_string_index.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_multi.sol,f();g(uint _x)
winsvega/solidity,test/libsolidity/semanticTests/viaYul/various_inline_asm.sol,f();myAwesomeFunction(param)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/530_tuple_invalid_literal_too_large_for_uint.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/215_function_argument_mem_to_storage.sol,f(uint[] storage x);g(uint[] memory x)
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/constant.sol,k()
winsvega/solidity,test/libsolidity/semanticTests/asmForLoop/for_loop_continue.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/metaTypes/typeNotRegularIdentifierVariable.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/storage_value_vars_1.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/131_enum_implicit_conversion_is_not_okay_64.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/types/array_aliasing_storage_3.sol,"f(uint[] storage a, uint[] storage b, uint[] memory c)"
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/revert.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/zero_literal_to_bytesXX_explicit.sol,f();g();h()
winsvega/solidity,test/libsolidity/syntaxTests/types/address/payable_address_to_address.sol,f(address payable a)
winsvega/solidity,test/libsolidity/syntaxTests/inheritance/duplicated_constructor_call/ancestor.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/types/library_to_address_payable.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/overflow/overflow_mul.sol,f(uint8 x)
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/constant_array.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/363_non_payable_constructor.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/modifier_arguments.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/parsing/mapping_to_mapping_in_struct.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/types/contract_address_conversion.sol,"f(C c, address a)"
winsvega/solidity,test/libsolidity/syntaxTests/parsing/var_storage_var.sol,""
winsvega/solidity,test/libsolidity/semanticTests/builtinFunctions/blockhash_shadow_resolution.sol,blockhash(uint256 blockNumber);f()
winsvega/solidity,test/libsolidity/gasTests/dispatch_medium_optimised.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/scoping/name_shadowing.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_4.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/tupleAssignments/large_component_count.sol,g();f()
winsvega/solidity,test/libsolidity/syntaxTests/types/cyclic_dependency_check_on_consts_good.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/types/address_staticcall.sol,"f(address a, bytes memory data)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/496_builtin_ecrecover_reject_gas.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/functionTypes/function_type_arrays.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/gas_with_call_nonpayable.sol,f(address a);g(address a);h();i()
winsvega/solidity,test/libsolidity/syntaxTests/conversion/function_type_payable_view.sol,h();f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/assembly_evmasm_type.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/callvalue_payable_assembly_function.sol,f(uint x)
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_array_assignment_storage_memory.sol,testUnboundedForLoop(uint n)
winsvega/solidity,test/libsolidity/ASTJSON/documentation.sol,fn()
winsvega/solidity,test/libsolidity/syntaxTests/modifiers/illegal_modifier_override.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/346_unused_return_value_send.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/library_to_address.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/returnExpressions/tuple_return_mismatching_number_named.sol,f();g();h()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/171_assignment_to_const_array_vars.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/295_bytes10abc_is_identifier.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/505_builtin_ecrecover_reject_value.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/552_warn_about_address_members_on_non_this_contract_delegatecall.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/variableDeclaration/for.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/535_address_overload_resolution.sol,balance();transfer(uint amount);f()
winsvega/solidity,test/libsolidity/smtCheckerTests/special/msg_sender_2.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/verification_target/simple_assert_with_require.sol,f(uint a)
winsvega/solidity,test/libsolidity/syntaxTests/parsing/from_is_not_keyword.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/globalFunctions/delegatecall_with_wrong_arg_count.sol,f()
winsvega/solidity,test/cmdlineTests/too_long_line_edge_out/input.sol,"fffffffffffffffffffffff(announcementTypeTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT Typ, string A)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/072_state_variable_member_of_wrong_class1.sol,foo()
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/leave_items_on_tack.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/decimal_literal_to_bytesXX_explicit.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/inheritance/override/calldata_memory_struct.sol,f(S calldata);g(S calldata);h(S calldata);i(S calldata);f(S memory);g(S memory);h(S memory);i(S memory)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/287_conditional_expression_with_different_mapping.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/056_cyclic_inheritance.sol,""
winsvega/solidity,test/libsolidity/semanticTests/viaYul/detect_mul_overflow_signed.sol,"f(int a, int b);g(int8 a, int8 b)"
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/label_disallowed.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/494_builtin_sha256_reject_gas.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/583_abi_encode_packed_with_rational_number_constant.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/modifier_without_semicolon.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/multiSingleVariableDeclaration.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/two_stack_slots.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/lexer_numbers_with_underscores_decimal.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/multiSource/import_not_found.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/098_access_to_default_state_variable_visibility.sol,g()
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/unbalanced_two_stack_load.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/external_function.sol,x()
winsvega/solidity,test/libsolidity/syntaxTests/functionTypes/warn_function_type_parameters_with_names.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/empty_fun_arg_end.sol,"f();f(a, b)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/429_revert_with_reason.sol,f(uint x)
winsvega/solidity,test/libsolidity/smtCheckerTests/typecast/function_type_to_function_type_internal.sol,f(function(uint)
winsvega/solidity,test/libsolidity/syntaxTests/specialFunctions/abi_encode_structs.sol,f();g()
winsvega/solidity,test/libsolidity/semanticTests/abiEncoderV2/cleanup/uintx.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/array/new_no_parentheses.sol,f(uint size)
winsvega/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_return.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/087_double_event_declaration.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/types/tuple_declarations.sol,g()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/030_redeclare_implemented_abstract_function_as_abstract.sol,foo();foo();foo()
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/while_err.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/constant_assignment.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/402_assignment_to_constant.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/array/length/not_convertible_to_integer.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/504_builtin_ripemd160_reject_value.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/021_comparison_of_function_types_lt_2.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/storage_assignment_in_modifier.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/recursive_multi_return_2.sol,f();g()
winsvega/solidity,test/libsolidity/semanticTests/ecrecover/failing_ecrecover_invalid_input_asm.sol,f()
winsvega/solidity,test/compilationTests/gnosis/Tokens/Token.sol,"transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value);balanceOf(address owner);allowance(address owner, address spender);totalSupply()"
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/storage_reference.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/parsing/address_payable_constant.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/parsing/event_with_no_argument_list.sol,""
winsvega/solidity,test/libsolidity/errorRecoveryTests/constructor_recovers.sol,five()
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/modifier_order_fine.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/187_large_utf8_codepoint.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/types/struct_array_branches_3d.sol,f(bool b)
winsvega/solidity,test/libsolidity/smtCheckerTests/types/type_expression_tuple_array_3d.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/inheritance/functions_3.sol,f();g();f();h();f();i()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/mapping_1_fail.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/338_rational_bitnot_unary_operation.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/external_variable.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/parsing/trailing_dot2.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/access_to_base_member_array.sol,f();g();h()
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/mappingReturn/unnamed_fine.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_data_location_function_param_public.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/parsing/empty_function.sol,"functionName(bytes20 arg1, address addr)"
winsvega/solidity,test/libsolidity/smtCheckerTests/control_flow/function_call_inside_modifier_branch.sol,f(address a);g()
winsvega/solidity,test/libsolidity/syntaxTests/memberLookup/member_value_not_unique.sol,value(uint256);value(uint8);f();g()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/132_enum_to_enum_conversion_is_not_okay.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/dataLocations/internalFunction/function_argument_location_specifier_test_internal_storage.sol,f(bytes storage)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/542_warn_about_address_members_on_contract_transfer.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/specialFunctions/types_without_encoding_problems.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/245_tuples_empty_components.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/viaYul/msg_sender.sol,test()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/108_empty_name_return_parameter_with_named_one.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/simple/smoke_test.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/268_function_overload_array_type.sol,f(uint[] memory);f(int[] memory)
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/constant_condition.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/088_double_event_declaration_ignores_anonymous.sol,""
winsvega/solidity,test/libsolidity/ABIJson/events_anonymous.sol,""
winsvega/solidity,test/libsolidity/semanticTests/storage/struct_accessor.sol,""
winsvega/solidity,test/libsolidity/semanticTests/viaYul/local_bool_assignment.sol,f(bool a)
winsvega/solidity,test/libsolidity/smtCheckerTests/types/bool_int_mixed_2.sol,"f(bool x, uint a)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/288_conditional_with_all_types.sol,fun_x();fun_y();f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/164_assigning_value_to_const_variable.sol,changeIt()
winsvega/solidity,test/libsolidity/semanticTests/functionCall/mapping_internal_argument.sol,"set_internal(mapping(uint8 => uint8);set(uint8 key, uint8 value_a, uint8 value_b);get(uint8 key)"
winsvega/solidity,test/libsolidity/smtCheckerTests/types/enum_in_library_2.sol,f(E _d)
winsvega/solidity,test/libsolidity/syntaxTests/dataLocations/publicFunction/function_argument_location_specifier_test_public_memory.sol,f(bytes memory)
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/recursive_multi_return.sol,g()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/bool_simple_4.sol,f(bool x)
winsvega/solidity,test/libsolidity/semanticTests/libraries/stub_internal.sol,f(uint256 v);g(uint256 v)
winsvega/solidity,test/libsolidity/syntaxTests/metaTypes/typeNotRegularIdentifierContractName.sol,""
winsvega/solidity,test/cmdlineTests/object_compiler/input.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/array/length/invalid_expression_4.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/539_array_length_invalid_expression_scientific_literal.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/types/array_dynamic_parameter_1.sol,"f(uint[] memory array, uint x, uint y)"
winsvega/solidity,test/libsolidity/syntaxTests/constructor/constructor_visibility.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/getter/recursive_struct.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/types/mapping_unsupported_key_type_1.sol,"f(string memory s, uint x)"
winsvega/solidity,test/libsolidity/syntaxTests/parsing/fixed_literal_with_double_radix.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/235_abi_encode_with_large_integer_constant.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/275_inline_struct_declaration_arrays.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/no_effect_statements.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/contract_to_base.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/abiEncoderV2/cleanup/simple_struct.sol,"gg(S calldata s);f(uint256 a, bytes32 b)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/291_modifier_is_not_a_valid_typename.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/013_large_string_literal.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/bytes256.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/446_no_unused_warning_abstract_arguments.sol,f(uint a)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/438_unused_unnamed_function_parameter.sol,f(uint)
winsvega/solidity,test/libsolidity/smtCheckerTests/types/mapping_5.sol,"f(address a, uint x)"
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/functions_identity_as_tuple_fail.sol,h(uint x);g()
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/use_msize_without_optimizer.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/211_uninitialized_mapping_array_variable.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/array/length/fixed_size_multidim_zero_length.sol,a();b();c();d();e();e()
winsvega/solidity,test/libsolidity/syntaxTests/events/event_nested_array_v2.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/inheritance/override/implement_public_function_by_public_variable.sol,test()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/559_no_warning_for_using_members_that_look_like_address_members.sol,transfer(uint);f()
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/local_variable_access_out_of_functions_storage_ptr.sol,f();g()
winsvega/solidity,test/libsolidity/syntaxTests/denominations/fixed_point_division.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/types/array_mapping_aliasing_2.sol,f(mapping (uint => uint)
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/this_external_call_return.sol,f(uint y);g(uint y)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/244_tuples.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/array_aliasing_memory_1.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/metaTypes/codeAccessIsConstant.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/structs/array_of_recursive_struct.sol,func()
winsvega/solidity,test/libsolidity/semanticTests/viaYul/conversion/implicit_cast_local_assignment.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_inline_function_inside_branch.sol,f();g()
winsvega/solidity,test/libsolidity/syntaxTests/types/rational_number_array_index_limit.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/constants/cyclic_dependency_3.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/globalFunctions/keccak256_with_wrong_arg_count.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_2.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/358_illegal_override_payable.sol,f();f()
winsvega/solidity,test/libsolidity/semanticTests/variables/delete_locals.sol,delLocal()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/407_invalid_address_no_checksum.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/modifiers/modifiers_on_abstract_functions_no_parser_error.sol,foo();bar()
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/functions_storage_var_1_fail.sol,f(uint x);g()
winsvega/solidity,test/libsolidity/smtCheckerTests/operators/compound_mul_array_index.sol,"f(uint x, uint p)"
winsvega/solidity,test/libsolidity/syntaxTests/structs/recursion/multi_struct_composition.sol,f(T memory)
winsvega/solidity,test/libsolidity/syntaxTests/globalFunctions/ripemd160_with_wrong_arg_count.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/elementary_non_address_payable_return.sol,a();b();c();d();e();f();g();h();i();j();k();l();m()
winsvega/solidity,test/libsolidity/semanticTests/viaYul/local_assignment.sol,f(uint a)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/293_function_is_not_a_valid_typename.sol,foo();f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/array_branches_3d.sol,f(bool b)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/503_builtin_sha256_reject_value.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/486_function_types_selector_3.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/functionTypes/payable_internal_function_type.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/storage_variable_access_out_of_functions.sol,f();g()
winsvega/solidity,test/libsolidity/syntaxTests/scoping/scoping_for3.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/constants/mod_div_rational.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/bound/bound_no_call.sol,double(uint self);f(uint a)
winsvega/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/oneElementTuple.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/017_assignment_to_struct.sol,fun()
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/selector_complex2.sol,f();g()
winsvega/solidity,test/libsolidity/semanticTests/abiEncoderV2/cleanup/dynamic_array.sol,ggg(uint8[] calldata s);f(uint256[] calldata a)
winsvega/solidity,test/libsolidity/syntaxTests/imports/name_clash_in_import_4.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/array/length/fixed_size_zero_length.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/328_rational_to_fixed_literal_expression.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/metaTypes/name_other_contract.sol,f();f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/264_mapping_in_memory_array.sol,f(uint size)
winsvega/solidity,test/libsolidity/syntaxTests/bound/bound_all.sol,g(function();f();t()
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/function_call_invalid_argument_count.sol,f();f(a)
winsvega/solidity,test/libsolidity/ABIJson/library_function.sol,"f(StructType storage b, uint[] storage c, X d)"
winsvega/solidity,test/libsolidity/syntaxTests/types/address/bytes_to_payable_address.sol,f(bytes20 x)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/204_overwrite_memory_location_external.sol,f(uint[] memory a)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/084_events_with_same_name.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/function_call_to_variable.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/283_left_value_in_conditional_expression_not_supported_yet.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/lexer_numbers_with_underscores_fixed.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/literal_comparisons.sol,f(int8 x)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/196_integer_boolean_or.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/structs/calldata_array_assign.sol,"f(S calldata s, int[3] calldata a)"
winsvega/solidity,test/libsolidity/syntaxTests/types/hex_literal_to_bytesXX_same_size_implicit.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/elementary_non_address_payable_argument.sol,a(bool payable);b(string payable);c(int payable);d(int256 payable);e(uint payable);f(uint256 payable);g(byte payable);h(bytes payable);i(bytes32 payable);j(fixed payable);k(fixed80x80 payable);l(ufixed payable);m(ufixed80x80 payable)
winsvega/solidity,test/libsolidity/syntaxTests/parsing/event.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/call_internal_functions_success.sol,g();f();h();i()
winsvega/solidity,test/libsolidity/syntaxTests/functionTypes/delete_function_type.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/array/calldata_multi_dynamic.sol,f(uint[][] calldata)
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/in_modifier.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/address_payable_state_variable.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/359_illegal_override_payable_nonpayable.sol,f();f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/301_library_instances_cannot_be_used.sol,l();f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/tuples_without_commas.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/181_override_changes_return_types.sol,f(uint a);f(uint a)
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/functions_trivial_condition_if.sol,f(bool x)
winsvega/solidity,test/compilationTests/milestonetracker/MilestoneTracker.sol,numberOfMilestones();changeArbitrator(address _newArbitrator);changeDonor(address _newDonor);changeRecipient(address _newRecipient);unproposeMilestones();markMilestoneComplete(uint _idMilestone);approveCompletedMilestone(uint _idMilestone);rejectMilestone(uint _idMilestone);cancelMilestone(uint _idMilestone);arbitrateCancelCampaign();authorizePayment(uint _idMilestone)
winsvega/solidity,test/libsolidity/syntaxTests/types/decimal_literal_to_bytesXX_implicit.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/constant_is_keyword.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/globalFunctions/suicide_no_call.sol,f(bytes memory data)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/546_warn_about_address_members_on_contract_delegatecall.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/enum_transitivity.sol,"f(D _a, D _b)"
winsvega/solidity,test/libsolidity/syntaxTests/types/uint32_to_bytes32.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/constructor/constructor_old.sol,A()
winsvega/solidity,test/libsolidity/syntaxTests/memberLookup/contract_not_payable_transfer.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_inside_branch.sol,g();f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/metaTypes/codeIsNoLValue.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/viaYul/loops/break.sol,f();g();h()
winsvega/solidity,test/libsolidity/smtCheckerTests/typecast/cast_smaller_2.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/460_function_override_is_not_shadowing.sol,f();f(uint)
winsvega/solidity,test/libsolidity/syntaxTests/specialFunctions/abidecode/abi_decode_singletontuple.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/literalOperations/division_by_zero_complex.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/shadowsBuiltin/this_super.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/487_function_types_selector_4.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/372_shift_constant_right_fractional.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/verification_target/simple_assert_with_require_message.sol,f(uint a)
winsvega/solidity,test/libsolidity/syntaxTests/parsing/placeholder_in_function_context.sol,fun()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/function_type_members.sol,f(function(uint)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/483_modifiers_access_storage_pointer.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/parsing/modifier.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/parsing/single_function_param.sol,functionName(bytes32 input)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/130_enum_implicit_conversion_is_not_okay_256.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/operators/compound_add.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/parsing/two_exact_functions.sol,fun(uint a);fun(uint a)
winsvega/solidity,test/libsolidity/syntaxTests/types/mapping/array_argument_external.sol,f(mapping(uint => uint)
winsvega/solidity,test/libsolidity/smtCheckerTests/types/array_static_1.sol,"f(uint x, uint y)"
winsvega/solidity,test/libsolidity/semanticTests/types/packing_signed_types.sol,run()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/mapping_4.sol,f(bool x)
winsvega/solidity,test/libsolidity/syntaxTests/natspec/invalid/docstring_parameter.sol,"f(uint256 _5value, uint256 _value, uint256 value)"
winsvega/solidity,test/libsolidity/smtCheckerTests/types/tuple_assignment_empty.sol,g()
winsvega/solidity,test/libsolidity/syntaxTests/emit/emit_non_event.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/string/string_escapes.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/mapping/assignment_struct.sol,fun()
winsvega/solidity,test/libsolidity/syntaxTests/functionTypes/call_value_on_payable_function_type.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/551_warn_about_address_members_on_non_this_contract_callcode.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/operators/delete_function.sol,g();h();f(bool b)
winsvega/solidity,test/libsolidity/smtCheckerTests/types/array_static_2.sol,"f(uint x, uint y, uint z, uint t)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/143_no_spurious_identifier_suggestions_with_submatch.sol,g()
winsvega/solidity,test/libsolidity/syntaxTests/dataLocations/function_parameters_with_data_location_fine.sol,"f(uint[] memory, uint[] storage);g(uint[] memory, uint[] storage);h(uint[] memory);i(uint[] calldata)"
winsvega/solidity,test/libsolidity/syntaxTests/metaTypes/typeNotRegularIdentifierFunction.sol,type()
winsvega/solidity,test/libsolidity/syntaxTests/dataLocations/externalFunction/external_function_return_parameters_no_data_location.sol,i()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/if_statement.sol,fun(uint256 a)
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/function_types.sol,f();g();h()
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/assignment_from_super.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_merge_variables_5.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/214_assignment_mem_storage_variable_directly.sol,f(uint[] memory x)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/533_tuple_invalid_literal_too_large_exp.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/scoping/scoping.sol,f()
winsvega/solidity,test/compilationTests/gnosis/Markets/Campaign.sol,fund(uint amount);refund();createMarket();closeMarket();withdrawFees()
winsvega/solidity,test/libsolidity/semanticTests/viaYul/array_storage_index_zeroed_test.sol,test_zeroed_indicies(uint256 len)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/182_equal_overload.sol,test(uint a);test(uint a)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/523_reject_interface_creation.sol,f()
winsvega/solidity,test/compilationTests/gnosis/Markets/MarketFactory.sol,"createMarket(Event eventContract, MarketMaker marketMaker, uint24 fee)"
winsvega/solidity,test/libsolidity/semanticTests/viaYul/comparison_functions.sol,equal();unequal()
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_6.sol,f(uint x)
winsvega/solidity,test/libsolidity/smtCheckerTests/types/tuple_declarations_function.sol,f();g()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/tuples_decl_without_rhs.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/natspec/docstring_empty_description.sol,vote(uint id)
winsvega/solidity,test/libsolidity/syntaxTests/scoping/state_variable_function_conflict.sol,f(uint)
winsvega/solidity,test/libsolidity/ASTJSON/constructor.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/functions_trivial_condition_require.sol,f(bool x)
winsvega/solidity,test/libsolidity/smtCheckerTests/special/difficulty.sol,f(uint difficulty)
winsvega/solidity,test/libsolidity/syntaxTests/scoping/double_variable_declaration_same_scope.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/events/event_struct_indexed.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/overflow/safe_add_2.sol,"add(uint x, uint y)"
winsvega/solidity,test/libsolidity/syntaxTests/constructor/not_a_contract.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/address/address_to_payable_address_double.sol,f(address a)
winsvega/solidity,test/libsolidity/syntaxTests/dataLocations/memory_storage_data_location.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/inline_array_empty_cells_check_without_lvalue.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/types/convert_fixed_bytes_to_fixed_bytes_same_size.sol,bytesToBytes(bytes4 input)
winsvega/solidity,test/libsolidity/syntaxTests/specialFunctions/encode_array_of_struct.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/array/length/parameter_too_large_multidim_ABIv2.sol,f(bytes32[1263941234127518272][500] memory);f(uint[2**30][2**30][][] memory)
winsvega/solidity,test/libsolidity/smtCheckerTests/typecast/cast_different_size_1.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/libraries/library_function_selectors_struct.sol,f(S storage s);g(S memory m);f();g()
winsvega/solidity,test/libsolidity/syntaxTests/tupleAssignments/nowarn_swap_storage_pointers.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/102_duplicate_parameter_names_in_named_args.sol,"a(uint a, uint b);b()"
winsvega/solidity,test/libsolidity/syntaxTests/bound/bound_call.sol,double(uint self);f(uint a)
winsvega/solidity,test/libsolidity/syntaxTests/inheritance/override/calldata_memory_interface.sol,f(uint[] calldata);g(uint[] calldata);h(uint[] calldata);i(uint[] calldata);f(uint[] memory);g(uint[] memory);h(uint[] memory);i(uint[] memory)
winsvega/solidity,test/libsolidity/smtCheckerTests/special/many.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/array/length/parameter_too_large_multidim.sol,f(bytes32[1263941234127518272][500] memory);f(uint[2**30][] memory);f(uint[2**30][2**30][] memory);f(uint[2**16][2**16][] memory)
winsvega/solidity,test/libsolidity/syntaxTests/dataLocations/internalFunction/internal_function_return_parameters_no_data_location.sol,g()
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/use_msize_with_optimizer.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/conditional_with_assignment.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/dataLocations/function_return_parameters_with_data_location_fine.sol,f();g();h();i()
winsvega/solidity,test/libsolidity/syntaxTests/functionTypes/function_type_parameter.sol,f(function(uint)
winsvega/solidity,test/libsolidity/smtCheckerTests/types/array_dynamic_2_fail.sol,"f(uint x, uint y, uint z, uint t)"
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/modifier_pre_access.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/imports/inheritance_abi_encoder_match.sol,f(S memory _s)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/582_improve_name_suggestion_four_letters.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/access_to_base_member_constant.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/functionTypes/function_type_constructor.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/array/length/tuples.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/207_no_mappings_in_memory_array.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/array/length/pure_functions.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/structs/calldata_dynamic.sol,f(S calldata)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/warnUnused/local_assignment.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/special/gasleft.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/storage/complex_accessors.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/types/address_call.sol,"f(address a, bytes memory data)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/343_integer_and_fixed_interaction.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/for_1_continue.sol,"f(uint x, bool b)"
winsvega/solidity,test/libsolidity/syntaxTests/types/cyclic_dependency_check_on_struct_exhausted.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/structs/calldata_assign.sol,f(S calldata s)
winsvega/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array_two_dynamic.sol,"f(uint256[] calldata s1, uint256[] calldata s2, bool which);g(uint256[] calldata s1, uint256[] calldata s2, bool which)"
winsvega/solidity,test/libsolidity/syntaxTests/types/empty_tuple_lvalue.sol,f();a()
winsvega/solidity,test/compilationTests/corion/moduleHandler.sol,"connectModule();disconnectModule();replaceModule(address addr);disableModule(bool forever);isActive();replaceModuleHandler(address newHandler);transferEvent(address from, address to, uint256 value);newSchellingRoundEvent(uint256 roundID, uint256 reward);load(address payable foundation, bool forReplace, address payable Token, address payable Premium, address payable Publisher, address payable Schelling, address payable Provider);addModule(modules_s memory input, bool call);getModuleAddressByName(string memory name);getModuleIDByHash(bytes32 hashOfName);getModuleIDByName(string memory name);getModuleIDByAddress(address addr);replaceModule(string calldata name, address payable addr, bool callCallback);callReplaceCallback(string calldata moduleName, address newModule);newModule(string calldata name, address payable addr, bool schellingEvent, bool transferEvent);dropModule(string calldata name, bool callCallback);callDisableCallback(string calldata moduleName);broadcastTransfer(address from, address to, uint256 value);broadcastSchellingRound(uint256 roundID, uint256 reward);replaceModuleHandler(address newHandler);balanceOf(address owner);totalSupply();isICO();getCurrentSchellingRoundID();mint(address to, uint256 value);transfer(address from, address to, uint256 value, bool fee);processTransactionFee(address from, uint256 value);burn(address from, uint256 value);configureModule(string calldata moduleName, announcementType aType, uint256 value);freezing(bool forever)"
winsvega/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_two_placeholders.sol,f();g(uint _x)
winsvega/solidity,test/libsolidity/syntaxTests/types/array_index_too_large.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/natspec/docstring_empty_tag.sol,vote(uint id)
winsvega/solidity,test/libsolidity/smtCheckerTests/types/tuple_assignment_array.sol,"g(uint x, uint y)"
winsvega/solidity,test/libsolidity/syntaxTests/memberLookup/memory_structs_with_mapping_array_struct_array.sol,f()
winsvega/solidity,test/compilationTests/gnosis/MarketMakers/MarketMaker.sol,"calcCost(Market market, uint8 outcomeTokenIndex, uint outcomeTokenCount);calcProfit(Market market, uint8 outcomeTokenIndex, uint outcomeTokenCount);calcMarginalPrice(Market market, uint8 outcomeTokenIndex)"
winsvega/solidity,test/libsolidity/syntaxTests/types/encoding_fractional_abiencoderv2.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/094_event_inheritance.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/multiple_modifier_arg_trailing_comma.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/conversion/function_type_view_payable.sol,h();f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/multiple_event_arg_trailing_comma.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/217_mem_array_assignment_changes_base_type.sol,f(uint8[] memory x)
winsvega/solidity,test/libsolidity/syntaxTests/array/length/array_length_cannot_be_constant_function_parameter.sol,f(uint constant LEN)
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/assignment_from_functiontype.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/for_break.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/smoke/fallback.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/constant_restrict_warning.sol,f();g()
winsvega/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/multiVariableDeclarationThatIsExpression.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/special/abi_decode_memory_v2_value_types.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_struct_simple.sol,f(S calldata s);g(S calldata s)
winsvega/solidity,test/libsolidity/smtCheckerTests/types/array_branches_2d.sol,f(bool b)
winsvega/solidity,test/libsolidity/syntaxTests/types/address/contract_to_address.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/differentNumberOfComponents.sol,f();g();h()
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/assembly.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/imports/circular_import.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/parsing/mapping_in_struct.sol,""
winsvega/solidity,test/cmdlineTests/too_long_line_left_short/input.sol,"f(announcementType Type, string Announcement, string Link, bool Oppositable, string _str, uint256 _uint, address _addr)"
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/for_1_false_positive.sol,f(uint x)
winsvega/solidity,test/libsolidity/ASTJSON/array_type_name.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/parsing/empty_enum.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/types/mapping_3.sol,f()
winsvega/solidity,test/libsolidity/ASTJSON/event_definition.sol,""
winsvega/solidity,test/libsolidity/ABIJson/inherited.sol,baseFunction(uint p);derivedFunction(bytes32 p)
winsvega/solidity,test/compilationTests/corion/premium.sol,"receiveCorionPremiumToken(address, uint256, bytes calldata);approvedCorionPremiumToken(address, uint256, bytes calldata);replaceModule(address payable addr);closeIco();approve(address spender, uint256 amount, uint256 nonce);approveAndCall(address spender, uint256 amount, uint256 nonce, bytes calldata extraData);_approve(address spender, uint256 amount, uint256 nonce);allowance(address owner, address spender);transfer(address to, uint256 amount);transferFrom(address from, address to, uint256 amount);transfer(address to, uint256 amount, bytes calldata extraData);transferToContract(address from, address to, uint256 amount, bytes memory extraData);_transfer(address from, address to, uint256 amount);mint(address owner, uint256 value);_mint(address owner, uint256 value);isContract(address addr);balanceOf(address owner);totalSupply()"
winsvega/solidity,test/libsolidity/syntaxTests/conversion/function_type_payable_pure.sol,h();f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/new_address_payable.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/507_large_storage_array_simple.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/412_early_exit_on_fatal_errors.sol,s()
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/assign_to_instruction.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array_static.sol,f(uint256[3] calldata s);g(uint256[3] calldata s);h(uint8[3] calldata s);i(uint8[3] calldata s)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/561_event_emit_complex.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/285_conditional_expression_with_different_function_type.sol,x(bool);y();f()
winsvega/solidity,test/libsolidity/syntaxTests/dataLocations/variable_declaration_location_specifier_test_reference_type.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_and_inside_branch.sol,f();g(bool a)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/019_comparison_bitop_precedence.sol,fun()
winsvega/solidity,test/libsolidity/semanticTests/types/convert_fixed_bytes_to_uint_same_type.sol,bytesToUint(bytes32 s)
winsvega/solidity,test/libsolidity/syntaxTests/types/bytesm.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/verification_target/constant_condition_1.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/157_array_of_undeclared_type.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_array_assignment_storage_storage.sol,testUnboundedForLoop(uint n)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/111_overflow_caused_by_ether_units.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/array/length/too_large.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/types/array_dynamic_1_fail.sol,"f(uint x, uint y)"
winsvega/solidity,test/libsolidity/syntaxTests/dataLocations/function_argument_location_specifier_test_non_reference_type.sol,f(bytes4 memory)
winsvega/solidity,test/compilationTests/gnosis/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/storage_reference_fine.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/while_1.sol,"f(uint x, bool b)"
winsvega/solidity,test/libsolidity/semanticTests/viaYul/storage/simple_storage.sol,setX(uint a);setY(uint a)
winsvega/solidity,test/libsolidity/semanticTests/viaYul/loops/return.sol,f();g();h()
winsvega/solidity,test/libsolidity/semanticTests/smoke/constructor.sol,balance();update(uint _state)
winsvega/solidity,test/libsolidity/syntaxTests/functionTypes/function_types_internal_visibility_error.sol,""
winsvega/solidity,test/libsolidity/semanticTests/viaYul/loops/continue.sol,f();g();h()
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/bare_instructions_disallowed.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/imports/name_clash_in_import_5.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/parsing/no_function_params.sol,functionName()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/339_rational_bitor_binary_operation.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/structs/recursion/return_recursive_structs.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_return_public_memory.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/254_using_for_function_on_int.sol,double(uint self);f(uint a)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/545_warn_about_address_members_on_contract_callcode.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/bytes_to_uint_same_size.sol,f();g();h();i();j();k()
winsvega/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array.sol,g(uint256[] calldata);f(uint256[][1] calldata s)
winsvega/solidity,test/libsolidity/syntaxTests/parsing/return_var.sol,f();f();f();f();f();f();f();f()
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/mappingReturn/named_fine.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/specialFunctions/abidecode/abi_decode_empty.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/string/string_terminated_by_backslash.sol,f()
winsvega/solidity,test/libsolidity/ABIJson/payable_constructor_abi.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/parsing/modifier_invocation.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/177_ambiguous_overloaded_function.sol,f(uint8 a);f(uint a);g()
winsvega/solidity,test/libsolidity/semanticTests/expressions/conditional_expression_multiple.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/191_negative_integers_to_signed_min.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/parsing/location_specifiers_for_params.sol,"f(uint[] storage constant x, uint[] memory y)"
winsvega/solidity,test/libsolidity/semanticTests/variables/mapping_local_assignment.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/491_using_this_in_constructor.sol,f()
winsvega/solidity,test/libsolidity/errorRecoveryTests/do_not_delete_at_error.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/local_storage_variables.sol,f();g();i();h()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/043_functions_with_stucts_of_non_external_types_in_interface_nested.sol,f(S memory)
winsvega/solidity,test/libsolidity/syntaxTests/types/address/address_binary_operators.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/modifiers/constructor_as_modifier.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/types/address/contract_to_address_implicitly.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/186_invalid_utf8_explicit.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/237_cyclic_binary_dependency_via_inheritance.sol,f();f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/289_uint7_and_uintM_as_identifier.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/compoundAssignment/tuple.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/interface.sol,f();f()
winsvega/solidity,test/libsolidity/syntaxTests/returnExpressions/single_return_mismatching_type.sol,g()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/mapping_1.sol,f(uint x)
winsvega/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array_dynamic.sol,f(uint256[] calldata s);g(uint256[] calldata s);h(uint8[] calldata s);i(uint8[] calldata s);j(bytes calldata s);k(bytes calldata s)
winsvega/solidity,test/libsolidity/smtCheckerTests/operators/delete_array_2d.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/444_unnamed_return_parameter_with_explicit_return.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/532_tuple_invalid_literal_too_large_for_uint_multi.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_multi_parameters.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/staticcall_gas_view.sol,f();test(address a)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/110_no_overflow_with_large_literal.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/multiSource/error_in_first.sol,g();f()
winsvega/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/multiVariableDeclarationScoping2.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/inheritance/base_arguments_multiple_inheritance.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_multi_functions.sol,"g(uint a, uint b);f(uint x)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/351_callcode_deprecated.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/typeChecking/function_call.sol,"f();g(uint256, bool)"
winsvega/solidity,test/libsolidity/semanticTests/uninitializedFunctionPointer/invalidInConstructor.sol,f();f()
winsvega/solidity,test/libsolidity/syntaxTests/constants/assign_constant_function_value.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/inheritance/base_arguments_no_parentheses.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/constructor/two_constructors.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/506_large_storage_array_fine.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/typecast/cast_smaller_3.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/array/length/uint_too_large_multidim.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/missing_variable.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/inline_arrays/lvalues_as_inline_array.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/memberLookup/msg_value_modifier_payable.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/inheritance/override/calldata_memory_conflict.sol,f(uint[] calldata);g(uint[] calldata);h(uint[] calldata);i(uint[] calldata);f(uint[] calldata);g(uint[] calldata);h(uint[] calldata);i(uint[] calldata);f(uint[] memory);g(uint[] memory);h(uint[] memory);i(uint[] memory)
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/while_1_infinite.sol,"f(uint x, bool b)"
winsvega/solidity,test/libsolidity/syntaxTests/functionTypes/external_function_type_returning_internal.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/parsing/arrays_in_expressions.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_inside_branch_assignment_multi_branches.sol,f();h();g(uint y)
winsvega/solidity,test/libsolidity/semanticTests/types/assign_calldata_value_type.sol,f(uint256 x)
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/do_while_continue.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/typecast/string_literal_to_fixed_bytes_return.sol,g();a()
winsvega/solidity,test/libsolidity/syntaxTests/denominations/deprecated_year.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/inheritance/functions_2.sol,f();g();f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/096_access_to_default_function_visibility.sol,f();g()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/invalidTypes/conditional_expression.sol,o(byte);f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/319_invalid_array_declaration_with_signed_fixed_type.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/bytes1_to_uint256.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/array/calldata_resize.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/function_inline_chain.sol,f();g();h()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/461_event_parameter_cannot_shadow_state_variable.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/visibility/function_no_visibility.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/dataLocations/publicFunction/public_function_return_parameters_no_data_location.sol,h()
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/functions_external_1.sol,"g(uint x);f(uint y, D d)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/069_base_class_state_variable_accessor.sol,foo()
winsvega/solidity,test/libsolidity/syntaxTests/types/mapping/array_argument_public.sol,f(mapping(uint => uint)
winsvega/solidity,test/libsolidity/syntaxTests/types/function_types/function_state_mutability_success.sol,internalPureFunc(uint256 x);internalViewFunc(uint256 x);internalMutableFunc(uint256 x);externalPureFunc(uint256 x);externalViewFunc(uint256 x);externalPayableFunc(uint256 x);externalMutableFunc(uint256 x);funcTakesInternalPure(function(uint256);funcTakesInternalView(function(uint256);funcTakesInternalMutable(function(uint256);funcTakesExternalPure(function(uint256);funcTakesExternalView(function(uint256);funcTakesExternalPayable(function(uint256);funcTakesExternalMutable(function(uint256);tests()
winsvega/solidity,test/libsolidity/syntaxTests/indexing/function_type_without_index.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/function_types_fail.sol,f();g();h()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/153_array_copy_with_different_types2.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/array/calldata_dynamic.sol,f(uint[] calldata)
winsvega/solidity,test/libsolidity/syntaxTests/indexing/array_negative_index.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/array_static_aliasing_storage_5.sol,"f(uint[2] storage a, uint[2] memory c)"
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/while_nested_break_fail.sol,"f(uint x, uint y, bool b, bool c)"
winsvega/solidity,test/libsolidity/semanticTests/viaYul/detect_mul_overflow.sol,"f(uint a, uint b);g(uint8 a, uint8 b)"
winsvega/solidity,test/libsolidity/syntaxTests/memberLookup/push_on_memory_types.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/typecast/function_type_to_address.sol,"f(address a, function(uint)"
winsvega/solidity,test/libsolidity/smtCheckerTests/types/tuple_function_3.sol,f();g()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/571_function_type_undeclared_type_external.sol,a(function(Nested)
winsvega/solidity,test/libsolidity/smtCheckerTests/types/string_2.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/multiple_assign_to_instruction.sol,f();g()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/052_function_internal_not_allowed_conversion.sol,internalCall()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/bool_int_mixed_3.sol,"f(bool x, bool y)"
winsvega/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_and_touched.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/233_non_initialized_references.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/functionTypes/function_types_variable_visibility.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/types/mapping_2d_1_fail.sol,f(uint x)
winsvega/solidity,test/libsolidity/semanticTests/viaYul/storage/packed_storage.sol,f(uint8 a)
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/callvalue_payable_assembly_function_modifier.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/special/msg_sender_1.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/getter/simple_struct.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/shadowsBuiltin/functions.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/inline_assembly/local_var.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/dowhile_fine.sol,f();g();h();i();j();k()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/location_specifiers_for_locals_multi.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/tuples.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/address_invalid_state_mutability.sol,f();g(address view);h(address pure);i();j()
winsvega/solidity,test/libsolidity/syntaxTests/dataLocations/variable_declaration_location_specifier_test_non_reference_type.sol,f()
winsvega/solidity,test/libsolidity/ASTJSON/fallback_payable.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/025_comparison_of_mapping_types.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTestsJSON/multi.sol,f(uint x)
winsvega/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_or_inside_branch.sol,f();g(bool a)
winsvega/solidity,test/libsolidity/syntaxTests/parsing/fallback_function.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/functions_trivial_condition_for.sol,f(bool x)
winsvega/solidity,test/libsolidity/syntaxTests/types/address/address_members_in_contract.sol,f();g()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/address_payable.sol,f(address payable b)
winsvega/solidity,test/libsolidity/syntaxTests/events/event_struct_v2.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/scoping/scoping_for.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/typecast/enum_to_uint_max_value.sol,f(D _a)
winsvega/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_parameters.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/ternary_fine.sol,f(bool flag);g(bool flag);h(bool flag)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/invalidArgs/explicit_conversions.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/string/string_unterminated_no_new_line.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/mapping_nonelementary_key_3.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/functions_library_1.sol,"add(uint x, uint y);f(uint x)"
winsvega/solidity,test/libsolidity/syntaxTests/parsing/declaring_fixed_and_ufixed_variables.sol,"f(ufixed x, fixed32x32 y)"
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/functions_trivial_condition_while.sol,f(bool x)
winsvega/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/multiVariableDeclarationScoping.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/inheritance/too_few_base_arguments.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_array_assignment_memory_storage.sol,"testUnboundedForLoop(uint n, uint[] memory b, uint[] memory c)"
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/do_while_break_2_fail.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/imports/simple_alias.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/selector.sol,f();g();h()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/562_event_emit_foreign_class.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/always_revert.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/functions_trivial_condition_for_only_call.sol,f(bool x);g()
winsvega/solidity,test/libsolidity/syntaxTests/inline_arrays/inline_array_declaration_and_passing_implicit_conversion_strings.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/functionCall/disordered_named_args.sol,"a(uint a, uint b, uint c);b()"
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/assembly.sol,e();f();g();h();g();j();k()
winsvega/solidity,test/libsolidity/smtCheckerTests/invariants/loop_nested.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/multiSource/no_import.sol,g(uint256 x);f(uint256 x)
winsvega/solidity,test/compilationTests/MultiSigWallet/MultiSigWalletFactory.sol,"create(address[] memory _owners, uint _required)"
winsvega/solidity,test/libsolidity/semanticTests/structs/conversion/recursive_storage_memory_complex.sol,"countData(Tree memory tree);copyFromTree(Tree memory tree, uint256[] memory data, uint256 offset);run()"
winsvega/solidity,test/libsolidity/syntaxTests/imports/name_clash_in_import_2.sol,""
winsvega/solidity,test/compilationTests/MultiSigWallet/MultiSigWalletWithDailyLimitFactory.sol,"create(address[] memory _owners, uint _required, uint _dailyLimit)"
winsvega/solidity,test/libsolidity/semanticTests/expressions/conditional_expression_storage_memory_1.sol,f(bool cond)
winsvega/solidity,test/libsolidity/syntaxTests/structs/memory_to_calldata.sol,f(S calldata s);g(S calldata s)
winsvega/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_not_really_recursive_array.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/types/address/address_payable_selfdestruct.sol,f(address payable a)
winsvega/solidity,test/compilationTests/gnosis/Markets/StandardMarketFactory.sol,"createMarket(Event eventContract, MarketMaker marketMaker, uint24 fee)"
winsvega/solidity,test/libsolidity/syntaxTests/empty_struct.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/256_using_for_overload.sol,"mul(s storage self, uint x);mul(s storage, bytes32);f(uint a)"
winsvega/solidity,test/libsolidity/semanticTests/viaYul/detect_sub_overflow.sol,"f(uint a, uint b);g(uint8 a, uint8 b)"
winsvega/solidity,test/libsolidity/syntaxTests/lvalues/valid_lvalues.sol,"i();e();f(uint x, bytes32 y);g(function();g(function()"
winsvega/solidity,test/libsolidity/syntaxTests/parsing/arrays_in_events.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/parsing/var_array.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/do_while_break_2.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/067_function_clash_with_state_variable_accessor.sol,fun();foo()
winsvega/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_code_after_placeholder.sol,f();g(uint _x)
winsvega/solidity,test/libsolidity/semanticTests/viaYul/loops/simple.sol,f();g();h();i();j()
winsvega/solidity,test/libsolidity/syntaxTests/types/bytes33.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/types/address/address_payable_external_overload.sol,f(address);f(address payable)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/398_does_not_warn_msg_value_in_payable_function.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/579_member_getter_call_without_parentheses_private_function.sol,f();f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/string_literal_assignment_3.sol,f(bytes32 _x)
winsvega/solidity,test/libsolidity/syntaxTests/specialFunctions/encodePacked_dynamic_string_array_v2.sol,f();g()
winsvega/solidity,test/libsolidity/syntaxTests/variableDeclaration/if.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/types/cyclic_dependency_check_on_consts_exhausted.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/operators/index_access_for_bytes.sol,f(bytes16 b)
winsvega/solidity,test/libsolidity/ABIJson/function_type.sol,g(function(uint)
winsvega/solidity,test/libsolidity/semanticTests/viaYul/smoke_test.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/inheritance/override/state_variable_function.sol,x()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/mapping_as_parameter_1.sol,"f(mapping(uint => uint);g(uint a, uint b)"
winsvega/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_struct_dynamic.sol,f(S calldata s);g(S calldata s)
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/functions_bound_1.sol,"add(uint x, uint y);f(uint x)"
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/do_while_continue.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/dataLocations/internalFunction/function_argument_location_specifier_test_internal_calldata.sol,f(bytes calldata)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/471_unspecified_storage_fail.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/metaTypes/noArgForType.sol,creation()
winsvega/solidity,test/libsolidity/syntaxTests/modifiers/function_modifier_double_invocation.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/parsing/function_normal_comments.sol,functionName(bytes32 input)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/321_rational_to_bytes_implicit_conversion.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/114_exp_warn_literal_base_2.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/struct_array_branches_2d.sol,f(bool b)
winsvega/solidity,test/libsolidity/syntaxTests/imports/shadowing_builtins_with_multiple_imports.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/parsing/inline_array_declaration.sol,f()
winsvega/solidity,test/compilationTests/corion/tokenDB.sol,"increase(address owner, uint256 value);decrease(address owner, uint256 value);setAllowance(address owner, address spender, uint256 amount, uint256 nonce);getAllowance(address owner, address spender)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/172_assignment_to_const_string_bytes.sol,""
winsvega/solidity,test/cmdlineTests/recovery_ast_constructor/input.sol,five()
winsvega/solidity,test/libsolidity/syntaxTests/structs/recursion/static_array_of_recursive_structs.sol,func()
winsvega/solidity,test/libsolidity/syntaxTests/constants/pure_non_rational.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/complex/slither/data_dependency.sol,set(address source_taint);set(uint source_taint);f();f();f(uint user_input);foo();bar()
winsvega/solidity,test/libsolidity/smtCheckerTests/inheritance/functions_1.sol,f();g();f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/443_named_return_parameter_with_explicit_return.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/function_call_fail2.sol,f(uint y)
winsvega/solidity,test/libsolidity/syntaxTests/missing_state_variable.sol,getStateVar()
winsvega/solidity,test/libsolidity/semanticTests/variables/mapping_local_compound_assignment.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/200_integer_signed_exp_unsigned.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/metaTypes/typeRecursive.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/scoping/scoping_for_decl_in_body.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/149_test_for_bug_override_function_with_bytearray_type.sol,f(bytes calldata);f(bytes calldata)
winsvega/solidity,test/libsolidity/syntaxTests/parsing/address_payable_type_expression.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/location_specifiers_for_locals.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/storage_reference_assignment.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/ternary_err.sol,f(bool flag);g(bool flag)
winsvega/solidity,test/libsolidity/smtCheckerTests/types/tuple_assignment_array_empty.sol,"g(uint x, uint y)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/064_implicit_base_to_derived_conversion.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/206_storage_location_local_variables.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/array_static_3_fail.sol,"f(uint x, uint y, uint z, uint t, uint w, uint v)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/259_using_for_not_used.sol,double(uint self);f(uint16 a)
winsvega/solidity,test/libsolidity/syntaxTests/memberLookup/msg_value_modifier_pure.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/payable_accessor.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/storage_reference_on_function.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/484_function_types_selector_1.sol,f()
winsvega/solidity,test/compilationTests/gnosis/Events/EventFactory.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/020_comparison_of_function_types_lt_1.sol,f()
winsvega/solidity,test/libsolidity/ABIJson/return_structs.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/modifiers/modifier_returns_value.sol,f(uint a)
winsvega/solidity,test/compilationTests/gnosis/Oracles/SignedMessageOracle.sol,"replaceSigner(address newSigner, uint _nonce, uint8 v, bytes32 r, bytes32 s);setOutcome(int _outcome, uint8 v, bytes32 r, bytes32 s);isOutcomeSet();getOutcome()"
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/overriding_fail.sol,f();g();f();g();g()
winsvega/solidity,test/libsolidity/semanticTests/asmForLoop/for_loop_break.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/294_long_uint_variable_fails.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/function_type_as_storage_variable_with_modifiers.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/metaTypes/typeNotRegularIdentifierParameter.sol,f(uint type)
winsvega/solidity,test/libsolidity/syntaxTests/modifiers/use_in_invalid_context.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/ecrecover/ecrecover.sol,"a(bytes32 h, uint8 v, bytes32 r, bytes32 s)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/116_shift_warn_literal_base_1.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/shadowsBuiltin/parameters.sol,f(uint require)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/071_base_class_state_variable_internal_member.sol,foo()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/046_returning_multi_dimensional_static_arrays.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/specialFunctions/types_with_unspecified_encoding_internal_functions.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/specialFunctions/abidecode/abi_decode_calldata.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/storage_reference_empty_offset.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_5.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/indexing/fixedbytes_without_index.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/types/convert_fixed_bytes_to_uint_same_min_size.sol,bytesToUint(bytes1 s)
winsvega/solidity,test/libsolidity/syntaxTests/imports/relative_import_multiplex.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/396_invalid_mobile_type.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/access_to_base_members.sol,f();g()
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/if_both_return.sol,f(bool c)
winsvega/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_merge_variables_4.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/parsing/enum_from_library.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/viaYul/if.sol,"f(bool condition);g(bool condition);h(bool condition);i(bool condition);j(uint a, uint b);k(uint a, uint b)"
winsvega/solidity,test/libsolidity/semanticTests/viaYul/array_storage_length_access.sol,set_get_length(uint256 len)
winsvega/solidity,test/libsolidity/smtCheckerTests/types/address_balance.sol,"f(address a, address b)"
winsvega/solidity,test/libsolidity/syntaxTests/types/rational_number_literal_limit_2.sol,bignum()
winsvega/solidity,test/libsolidity/syntaxTests/structs/recursion/recursive_struct_as_contract_function_parameter.sol,f(MyStructName memory s)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/430_bare_selfdestruct.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/functionCall/multiple_return_values.sol,"run(bool x1, uint x2)"
winsvega/solidity,test/libsolidity/semanticTests/libraries/library_delegatecall_guard_view_needed.sol,f(uint256[] storage x);f();g();h()
winsvega/solidity,test/libsolidity/syntaxTests/constructor/overriding_constructor.sol,f();A();g()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/290_varM_disqualified_as_keyword_2.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array_struct_dynamic.sol,f(S[] calldata s);g(S[] calldata s)
winsvega/solidity,test/libsolidity/gasTests/dispatch_small.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/tupleAssignments/nowarn_swap_memory.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/storage/chop_sign_bits.sol,f();g();h(int8 t)
winsvega/solidity,test/libsolidity/syntaxTests/scoping/poly_variable_declaration_same_scope.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/functionTypes/delete_function_type_invalid.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/575_member_member_getter_call_without_parentheses.sol,f();f()
winsvega/solidity,test/libsolidity/syntaxTests/types/var_decl_val_mismatch.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/call_internal_functions_fail.sol,f();g();h();i()
winsvega/solidity,test/libsolidity/semanticTests/abiEncoderV2/storage_array_encoding.sol,h(uint256[2][] calldata s);i(uint256[2][2] calldata s)
winsvega/solidity,test/libsolidity/smtCheckerTests/operators/mod_even.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/543_warn_about_address_members_on_contract_send.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/if_fine.sol,f(bool flag);g(bool flag);h(bool flag);i();j()
winsvega/solidity,test/libsolidity/syntaxTests/structs/recursion/recursive_struct_as_memory_library_function_parameter.sol,f(MyStructName memory _x)
winsvega/solidity,test/libsolidity/smtCheckerTests/types/string_literal_assignment_1.sol,f(bytes32 _x)
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/msg_value_modifier_view.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/address/address_to_contract_implicitly.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/unterminatedBlocks/one_dot.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/expressions/bytes_comparison.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_or_touched_function.sol,g(bool _b);f()
winsvega/solidity,test/libsolidity/syntaxTests/types/mapping/function_type_return_internal.sol,f(function()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/147_external_argument_increment.sol,f(uint a)
winsvega/solidity,test/libsolidity/syntaxTests/parsing/address_in_struct.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_same_local_variables.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/parsing/empty_comment.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/more_than_256_syntaxerrors.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/functionTypes/public_function_type.sol,f()
winsvega/solidity,test/compilationTests/gnosis/Markets/Market.sol,"fund(uint _funding);close();withdrawFees();buy(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint maxCost);sell(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint minProfit);shortSell(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint minProfit);calcMarketFee(uint outcomeTokenCost)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/485_function_types_selector_2.sol,g();f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/array_dynamic_parameter_1_fail.sol,"f(uint[] memory array, uint x, uint y)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/075_fallback_function_with_arguments.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/inline_arrays/inline_array_rationals.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/smoke_test.sol,fun(uint256 arg1)
winsvega/solidity,test/libsolidity/syntaxTests/parsing/enum_valid_declaration.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/imports/import_does_not_clutter_importee.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/metaTypes/name_constant.sol,""
winsvega/solidity,test/compilationTests/gnosis/Oracles/DifficultyOracle.sol,setOutcome();isOutcomeSet();getOutcome()
winsvega/solidity,test/libsolidity/syntaxTests/functionTypes/external_function_type_taking_internal.sol,""
winsvega/solidity,test/libsolidity/ASTJSON/source_location.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/for_loop_simple_noexpr.sol,fun(uint256 a)
winsvega/solidity,test/libsolidity/smtCheckerTests/overflow/underflow_sub_signed.sol,f(int8 x)
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_trivial_condition_3.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/metaTypes/runtimeCodeWarningAssembly.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/213_no_delete_on_storage_pointers.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/constant_access.sol,f()
winsvega/solidity,test/compilationTests/gnosis/Oracles/MajorityOracleFactory.sol,createMajorityOracle(Oracle[] memory oracles)
winsvega/solidity,test/libsolidity/syntaxTests/inheritance/override/calldata_memory.sol,f(uint[] calldata);g(uint[] calldata);h(uint[] calldata);i(uint[] calldata);f(uint[] memory);g(uint[] memory);h(uint[] memory);i(uint[] memory)
winsvega/solidity,test/libsolidity/syntaxTests/parsing/mapping_from_address_payable.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/write_storage_fail.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/413_address_methods.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/structs/array_calldata.sol,f(S[] calldata);f(S[][] calldata)
winsvega/solidity,test/libsolidity/smtCheckerTests/types/array_branch_1d.sol,"f(bool b, uint[] memory c)"
winsvega/solidity,test/libsolidity/syntaxTests/array/invalid/library_index_access.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array_dynamic_static_short_reencode.sol,f(uint256[][2][] calldata x);g(uint256[][2][] calldata x)
winsvega/solidity,test/libsolidity/syntaxTests/parsing/single_return_param_trailing_comma.sol,""
winsvega/solidity,test/libsolidity/ASTJSON/address_payable.sol,f(address payable arg)
winsvega/solidity,test/libsolidity/syntaxTests/inheritance/override/external_turns_public_no_params.sol,f();f()
winsvega/solidity,test/libsolidity/syntaxTests/inheritance/duplicated_constructor_call/base_multi.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/types/bool_simple_3.sol,"f(bool x, bool y)"
winsvega/solidity,test/libsolidity/syntaxTests/tight_packing_literals.sol,k()
winsvega/solidity,test/libsolidity/syntaxTests/conversion/function_type_payable_nonpayable.sol,h();f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/536_array_length_invalid_expression_negative_bool.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/array/length/invalid_expression_1.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/423_using_interface.sol,f();f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/tuple_assignment_compound.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/operators/unary_add_mapping.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/double_stateVariable_declaration.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/types/address/address_in_struct_fine.sol,f();f()
winsvega/solidity,test/libsolidity/syntaxTests/events/event_nested_array_indexed_v2.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/istanbul_on_petersburg.sol,f();g()
winsvega/solidity,test/libsolidity/smtCheckerTests/special/blockhash.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/types/mapping/function_type_argument_internal.sol,f(function(mapping(uint=>uint)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/433_pure_statement_in_for_loop.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/050_function_external_call_not_allowed_conversion.sol,externalCall()
winsvega/solidity,test/libsolidity/gasTests/abiv2.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/474_storage_location_non_array_or_struct_disallowed_is_not_fatal.sol,f(uint storage a)
winsvega/solidity,test/libsolidity/syntaxTests/parsing/else_if_statement.sol,fun(uint256 a)
winsvega/solidity,test/libsolidity/smtCheckerTests/operators/compound_bitwise_xor_1.sol,f(bool b)
winsvega/solidity,test/libsolidity/smtCheckerTests/types/enum_in_library.sol,f(E _d)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/361_calling_payable.sol,pay();f();g()
winsvega/solidity,test/libsolidity/syntaxTests/array/string_pop.sol,test()
winsvega/solidity,test/libsolidity/syntaxTests/events/event_nested_array_in_struct.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/366_invalid_array_as_statement.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/types/bool_ops.sol,"f(bool a, bool b)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/063_implicit_derived_to_base_conversion.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/operators/delete_array_index_2d.sol,f(bool b)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/105_constant_input_parameter.sol,f(uint[] memory constant a)
winsvega/solidity,test/libsolidity/syntaxTests/parsing/multiple_return_param_trailing_comma.sol,""
winsvega/solidity,test/libsolidity/semanticTests/libraries/stub.sol,f(uint256 v);g(uint256 v)
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/creation_no_restrict_warning.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/storage/mappings_array_pop_delete.sol,map(uint key);p();d()
winsvega/solidity,test/libsolidity/syntaxTests/metaTypes/codeAccessAbstractRuntime.sol,runtime();f(uint)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/155_array_copy_with_different_types_static_dynamic.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/modifiers/function_modifier_invocation_local_variables.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/types/convert_uint_to_fixed_bytes_smaller_size.sol,uintToBytes(uint32 h)
winsvega/solidity,test/libsolidity/syntaxTests/parsing/trailing_dot3.sol,""
winsvega/solidity,test/libsolidity/semanticTests/abiEncoderV2/cleanup/address.sol,g(address x);f(uint256 a)
winsvega/solidity,test/libsolidity/semanticTests/functionCall/named_args.sol,"a(uint a, uint b, uint c);b()"
winsvega/solidity,test/libsolidity/syntaxTests/types/encoding_packed_fractional_abiencoderv2.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_indirectly_recursive_complex.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/overflow/underflow_sub.sol,f(uint8 x)
winsvega/solidity,test/compilationTests/gnosis/Tokens/EtherToken.sol,deposit();withdraw(uint value)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/492_do_not_crash_on_not_lvalue.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/modifiers/function_modifier_invocation_parameters.sol,f(uint8 a)
winsvega/solidity,test/compilationTests/gnosis/Oracles/DifficultyOracleFactory.sol,createDifficultyOracle(uint blockNumber)
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/assignment_to_special.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/047_returning_arrays_in_structs_new_abi.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/verification_target/simple_assert.sol,f(uint a)
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/unreachable.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/address/bytes_long_to_payable_address.sol,f(bytes32 x)
winsvega/solidity,test/libsolidity/syntaxTests/array/length/cannot_be_function.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/expressions/conditional_expression_tuples.sol,f(bool cond)
winsvega/solidity,test/libsolidity/syntaxTests/inline_arrays/invalid_types_in_inline_array.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/contract_address_conversion_2.sol,"f(C c, C d)"
winsvega/solidity,test/libsolidity/syntaxTests/types/too_small_negative_numbers.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/shadowsBuiltin/ignores_struct.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/parsing/function_type_as_storage_variable_with_assignment.sol,"f(uint x, uint y)"
winsvega/solidity,test/libsolidity/syntaxTests/tupleAssignments/error_fill.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/tupleAssignments/err_fill_assignment.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/158_storage_variable_initialization_with_incorrect_type_int.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/control_flow/function_call_inside_placeholder_inside_modifier_branch.sol,f(address a);g()
winsvega/solidity,test/libsolidity/syntaxTests/types/empty_tuple_lvalue_array.sol,f();a()
winsvega/solidity,test/libsolidity/smtCheckerTests/inheritance/state_variables_3.sol,f(uint y)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/341_rational_bitand_binary_operation.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/contract_2.sol,"f(D c, D d)"
winsvega/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array_function_types.sol,f(function();f_reenc(function();g(bool reenc)
winsvega/solidity,test/libsolidity/syntaxTests/literalOperations/division_by_zero.sol,""
winsvega/solidity,test/compilationTests/corion/module.sol,"transfer(address payable from, address payable to, uint256 value, bool fee);balanceOf(address payable owner);disableModule(bool forever);_disableModule(bool forever);replaceModuleHandler(address payable newModuleHandlerAddress);_replaceModuleHandler(address payable newModuleHandlerAddress);connectModule();_connectModule();disconnectModule();_disconnectModule();replaceModule(address payable newModuleAddress);_replaceModule(address payable newModuleAddress);transferEvent(address payable from, address payable to, uint256 value);newSchellingRoundEvent(uint256 roundID, uint256 reward);registerModuleHandler(address payable _moduleHandlerAddress);isModuleHandler(address payable addr);isActive()"
winsvega/solidity,test/compilationTests/corion/token.sol,"receiveCorionToken(address, uint256, bytes calldata);approvedCorionToken(address, uint256, bytes calldata);replaceModule(address payable addr);closeIco();approve(address spender, uint256 amount, uint256 nonce);approveAndCall(address spender, uint256 amount, uint256 nonce, bytes calldata extraData);_approve(address spender, uint256 amount, uint256 nonce);allowance(address owner, address spender);transfer(address to, uint256 amount);transferFrom(address from, address to, uint256 amount);transferFromByModule(address from, address to, uint256 amount, bool fee);transfer(address to, uint256 amount, bytes calldata extraData);_transferToContract(address from, address to, uint256 amount, bytes memory extraData);_transfer(address from, address to, uint256 amount, bool fee);processTransactionFee(address owner, uint256 value);_processTransactionFee(address owner, uint256 value);getTransactionFee(uint256 value);mint(address owner, uint256 value);_mint(address owner, uint256 value);burn(address owner, uint256 value);_burn(address owner, uint256 value);isContract(address addr);balanceOf(address owner);totalSupply();configure(announcementType aType, uint256 value)"
winsvega/solidity,test/libsolidity/syntaxTests/literalOperations/mod_zero.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/dowhile_err.sol,f();g();h();i();j()
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/callvalue_payable_assembly_fallback.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/parsing/function_type_state_variable.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/indexing/array_noninteger_index.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/viaYul/virtual_functions.sol,f();g();g()
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/local_storage_variables_fail.sol,f();g()
winsvega/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_array_data_location_function_param_external.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/154_array_copy_with_different_types_conversion_possible.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/typecast/function_type_to_function_type_external.sol,f(function(uint)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/403_return_structs.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/whitespace_in_multiple_assignment.sol,f();g()
winsvega/solidity,test/libsolidity/syntaxTests/functionTypes/external_function_type_to_address.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/local_const_variable.sol,localConst()
winsvega/solidity,test/libsolidity/syntaxTests/constants/cyclic_dependency_4.sol,""
winsvega/solidity,test/compilationTests/corion/provider.sol,"connectModule();transferEvent(address payable from, address payable to, uint256 value);newSchellingRoundEvent(uint256 roundID, uint256 reward);configure(announcementType a, uint256 b);getUserDetails(address payable addr, uint256 schellingRound);rightForInterest(uint256 value, bool priv);setRightForInterest(uint256 oldValue, uint256 newValue, bool priv);checkCorrectRate(bool priv, uint8 rate);createProvider(bool priv, string calldata name, string calldata website, string calldata country, string calldata info, uint8 rate, bool isForRent, address payable admin);setProviderDetails(address payable addr, string calldata website, string calldata country, string calldata info, uint8 rate, address payable admin);getProviderInfo(address addr, uint256 height);getProviderDetails(address payable addr, uint256 height);getProviderCurrentSupply(address addr);closeProvider();allowUsers(address provider, address[] calldata addr);disallowUsers(address provider, address[] calldata addr);joinProvider(address provider);partProvider();checkReward(address addr);getReward(address beneficiary, uint256 limit, address provider);getClientReward(uint256 limit);getProviderReward(address addr, uint256 limit);checkFloatingSupply(address providerAddress, uint256 providerHeight, bool neg, uint256 value);checkFloatingOwnSupply(address providerAddress, uint256 providerHeight, bool neg, uint256 value);TEMath(uint256 a, uint256 b, bool neg);transferEvent_(address addr, uint256 value, bool neg);getTokenBalance(address addr);checkICO()"
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/callvalue_nonpayable_assembly_function_internal.sol,f();g()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/312_leading_zero_rationals_convert.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/mapping/function_type_argument_external.sol,f(function(mapping(uint=>uint)
winsvega/solidity,test/libsolidity/syntaxTests/fallback/view_modifier.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/342_missing_bool_conversion.sol,b(uint a)
winsvega/solidity,test/libsolidity/syntaxTests/globalFunctions/sha3_override.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/unary_plus_expression.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/225_inheriting_from_library.sol,""
winsvega/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array_multi_dynamic.sol,f(uint256[][] calldata s);g(uint256[][] calldata s);h(uint8[][] calldata s);i(uint8[][] calldata s);j(bytes[] calldata s);k(bytes[] calldata s)
winsvega/solidity,test/libsolidity/ABIJson/payabl_fallback_function.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/inline_arrays/inline_array_declaration_no_type.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/invariants/loop_basic_for.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/574_similar_name_shorter_than_80_suggested.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/type_expression_array_2d.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/short_circuit_fine.sol,f();g()
winsvega/solidity,test/libsolidity/syntaxTests/functionCalls/named_arguments_overload_failing1.sol,"f(uint x);f(uint x, uint y);f(uint x, uint y, uint z);call()"
winsvega/solidity,test/libsolidity/syntaxTests/constructor/returns_in_constructor.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/while_loop_array_assignment_memory_storage.sol,"testUnboundedForLoop(uint n, uint[] memory b, uint[] memory c)"
winsvega/solidity,test/libsolidity/syntaxTests/parsing/function_no_body.sol,functionName(bytes32 input)
winsvega/solidity,test/libsolidity/syntaxTests/functionTypes/call_value_on_non_payable_function_type.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/inheritance/override/internal_external_inheritance.sol,f(uint[] calldata);f(uint[] memory)
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/assembly_err.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/functions_identity_1.sol,h(uint x);g()
winsvega/solidity,test/libsolidity/syntaxTests/inheritance/override/implement_interface_by_public_variable.sol,test()
winsvega/solidity,test/libsolidity/syntaxTests/inheritance/override/implement_internal_function_by_public_variable.sol,test()
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_3.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/011_type_conversion_for_comparison_invalid.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/address/address_payable_memory_array_conversion.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_array_return_public.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/smoke/multiline.sol,"f(uint a, uint b, uint c, uint d, uint e)"
winsvega/solidity,test/libsolidity/syntaxTests/parsing/location_specifiers_with_var.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/282_invalid_different_types_for_conditional_expression.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/structs/calldata.sol,f(S calldata)
winsvega/solidity,test/libsolidity/syntaxTests/parsing/trailing_dot1.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/metaTypes/codeAccessAbstractCreation.sol,creationOther();f(uint)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/497_gasleft.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/overflow/overflow_sum_signed.sol,f(int8 x)
winsvega/solidity,test/libsolidity/syntaxTests/tight_packing_literals_fine.sol,k();l()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/event_arguments_indexed.sol,""
winsvega/solidity,test/libsolidity/ASTJSON/short_type_name.sol,f()
winsvega/solidity,test/compilationTests/gnosis/Oracles/MajorityOracle.sol,getStatusAndOutcome();isOutcomeSet();getOutcome()
winsvega/solidity,test/libsolidity/syntaxTests/types/library_function_selector_internal.sol,f(uint256);f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/bool_int_mixed_1.sol,f(bool x)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/362_calling_nonpayable.sol,nopay();f()
winsvega/solidity,test/libsolidity/syntaxTests/constants/cyclic_dependency_2.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/090_event_call.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/function_inside_branch_modify_state_var.sol,f();g(bool b)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/117_shift_warn_literal_base_2.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/imports/smoke_test.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/parsing/for_loop_single_stmt_body.sol,fun(uint256 a)
winsvega/solidity,test/libsolidity/syntaxTests/array/length/parentheses.sol,""
winsvega/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_struct_member_offset.sol,g(B calldata b);f()
winsvega/solidity,test/compilationTests/MultiSigWallet/Factory.sol,getInstantiationCount(address creator);register(address instantiation)
winsvega/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_indirectly_recursive_dynamic_array3.sol,""
winsvega/solidity,test/compilationTests/gnosis/Oracles/FutarchyOracleFactory.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/525_reject_interface_constructors.sol,""
winsvega/solidity,test/libsolidity/semanticTests/ecrecover/ecrecover_abiV2.sol,"a(bytes32 h, uint8 v, bytes32 r, bytes32 s)"
winsvega/solidity,test/libsolidity/smtCheckerTests/types/bytes_2.sol,"f(bytes memory b1, bytes memory b2)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/048_returning_arrays_in_structs_arrays.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/079_fallback_function_inheritance.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/multiSource/warning_in_both.sol,g(uint256 x);f(uint256 x)
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/mappingReturn/named_err.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/functionTypes/private_function_type.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/509_large_storage_arrays_struct.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/functionTypes/function_type_constructor_local.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/contract.sol,"f(C c, C d)"
winsvega/solidity,test/libsolidity/syntaxTests/functionTypes/delete_external_function_type_invalid.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/viaYul/detect_mod_zero.sol,"f(uint a, uint b);g(uint8 a, uint8 b)"
winsvega/solidity,test/libsolidity/syntaxTests/parsing/missing_variable_name_in_declaration.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/for_1_fail.sol,f(uint x)
winsvega/solidity,test/libsolidity/semanticTests/abiEncoderV2/cleanup/bool.sol,gggg(bool x);f(uint256 a)
winsvega/solidity,test/libsolidity/semanticTests/expressions/conditional_expression_functions.sol,x();y();f(bool cond)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/warnUnused/function_parameter.sol,f(uint a)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/058_legal_override_indirect.sol,f(uint a);f()
winsvega/solidity,test/libsolidity/ABIJson/constructor_abi.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/258_using_for_mismatch.sol,double(bytes32 self);f(uint a)
winsvega/solidity,test/libsolidity/semanticTests/ecrecover/failing_ecrecover_invalid_input_proper.sol,"f();recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s, uint blockExpired, bytes32 salt)"
winsvega/solidity,test/libsolidity/smtCheckerTests/types/address_transfer_2.sol,"f(uint x, address payable a, address payable b)"
winsvega/solidity,test/libsolidity/syntaxTests/modifiers/constructor_call_invalid_arg_count.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/022_comparison_of_function_types_gt_1.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/059_illegal_override_visibility.sol,f();f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/221_struct_constructor_nested.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/320_invalid_array_declaration_with_unsigned_fixed_type.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/inline_arrays/inline_array_declaration_no_type_strings.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/501_gasleft_shadowing_2.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/multiVariableDeclarationEmpty.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/410_string_literal_not_convertible_to_address_as_assignment.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/220_struct_constructor.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/mapping.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/432_bare_require.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/array/length/inline_array.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/inheritance/override/implement_private_function_by_public_variable.sol,test()
winsvega/solidity,test/libsolidity/syntaxTests/constructor/constructor_no_visibility.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/570_function_type_undeclared_type.sol,a(function(Nested)
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/functions_library_1_fail.sol,"add(uint x, uint y);f(uint x)"
winsvega/solidity,test/libsolidity/syntaxTests/parsing/missing_parameter_name_in_named_args.sol,"a(uint a, uint b, uint c);b()"
winsvega/solidity,test/libsolidity/smtCheckerTests/operators/mod_n.sol,"f(uint x, uint y)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/141_multiple_scopes_suggestions.sol,g()
winsvega/solidity,test/libsolidity/syntaxTests/inheritance/override/function_state_variable.sol,x()
winsvega/solidity,test/libsolidity/syntaxTests/modifiers/legal_modifier_override.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/simple/static_array.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/308_rational_unary_plus_operation.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/function_call_state_var_init.sol,f(uint y)
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/empty_fun_arg_middle.sol,"f();f(a, b, c)"
winsvega/solidity,test/libsolidity/syntaxTests/functionTypes/call_value_on_non_constructor.sol,f();g()
winsvega/solidity,test/libsolidity/smtCheckerTests/control_flow/function_call_inside_branch.sol,f();g()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/array_branch_3d.sol,f(bool b)
winsvega/solidity,test/libsolidity/syntaxTests/parsing/elementary_non_address_payable_local.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/location_specifiers_for_params_multi.sol,"f(uint[] storage memory constant x, uint[] memory calldata y)"
winsvega/solidity,test/libsolidity/smtCheckerTests/types/enum_explicit_values_2.sol,f(D _a)
winsvega/solidity,test/libsolidity/syntaxTests/parsing/trailing_comma_in_named_args.sol,"a(uint a, uint b, uint c);b()"
winsvega/solidity,test/libsolidity/smtCheckerTests/complex/warn_on_typecast.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/indexing/struct_array_noninteger_index.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/structs/calldata/dynamic_nested.sol,f(S calldata s)
winsvega/solidity,test/libsolidity/smtCheckerTests/types/string_1.sol,"f(string memory s1, string memory s2)"
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/functions_trivial_condition_require_only_call.sol,f(bool x);g()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/205_overwrite_storage_location_external.sol,f(uint[] storage a)
winsvega/solidity,test/libsolidity/syntaxTests/conversion/function_type_same.sol,h_nonpayable();h_payable();h_view();h_pure();f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/370_shift_constant_left_excessive_rvalue.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/350_unused_return_value_delegatecall.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/091_event_function_inheritance_clash.sol,dup()
winsvega/solidity,test/libsolidity/semanticTests/viaYul/keccak.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/324_fixed_points_inside_structs.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/576_member_getter_call_without_parentheses.sol,f();f()
winsvega/solidity,test/libsolidity/semanticTests/expressions/exp_zero_literal.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/c99_scoping_activation.sol,f();g();h();i()
winsvega/solidity,test/cmdlineTests/too_long_line_both_sides_short/input.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/types/address/nonpayable_address_to_contract_payable_fallback.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/tuple_declarations_function_2.sol,f(uint x);g()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/073_state_variable_member_of_wrong_class2.sol,foo()
winsvega/solidity,test/libsolidity/syntaxTests/dataLocations/privateFunction/private_function_return_parameters_no_data_location.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/typecast/string_literal_to_fixed_bytes_return_multi.sol,h();g();a()
winsvega/solidity,test/libsolidity/syntaxTests/returnExpressions/valid_returns.sol,f();g();h();i();j()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/107_empty_name_input_parameter_with_named_one.sol,"f(uint, uint k)"
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/period_in_identifer.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/function_call_fail.sol,f(uint y)
winsvega/solidity,test/libsolidity/syntaxTests/functionTypes/external_function_type_to_uint.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/array/length/const_cannot_be_fractional.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/constant_access_non_initialized.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/261_using_for_arbitrary_mismatch.sol,double(bytes32 self);f(uint a)
winsvega/solidity,test/libsolidity/ASTJSON/long_type_name_identifier.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/array/length/not_too_large.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/storage_value_vars_3.sol,f(uint x);g()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/329_rational_as_exponent_value_signed.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/mapping/argument_private.sol,f(mapping(uint => uint)
winsvega/solidity,test/libsolidity/smtCheckerTests/types/array_static_mapping_aliasing_2.sol,f(mapping (uint => uint)
winsvega/solidity,test/libsolidity/smtCheckerTests/operators/compound_shl_1.sol,f(bool b)
winsvega/solidity,test/libsolidity/syntaxTests/dataLocations/internalFunction/internal_function_parameters_no_data_location.sol,g(uint[])
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/106_empty_name_return_parameter.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/string_literal_assignment_5.sol,g();f(bytes32 _x)
winsvega/solidity,test/libsolidity/syntaxTests/variableDeclaration/else.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/metaTypes/codeAccessCyclic.sol,f();f()
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/whitespace_in_assignment.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/assignment_from_contract.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/inheritance/duplicated_constructor_call/base_multi_no_constructor_modifier_style.sol,""
winsvega/solidity,test/libsolidity/ASTJSON/long_type_name_binary_operation.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/236_cyclic_binary_dependency.sol,f();f();f()
winsvega/solidity,test/libsolidity/semanticTests/viaYul/conversion/explicit_cast_local_assignment.sol,f(uint a)
winsvega/solidity,test/libsolidity/syntaxTests/modifiers/function_overrides_modifier.sol,mod(uint a)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/424_using_interface_complex.sol,f();g();f()
winsvega/solidity,test/libsolidity/ABIJson/basic_test.sol,f(uint a)
winsvega/solidity,test/libsolidity/syntaxTests/inline_arrays/dynamic_inline_array.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/verification_target/constant_condition_2.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/indexing/fixedbytes_out_of_bounds_index.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/tuple_function.sol,f();g()
winsvega/solidity,test/libsolidity/semanticTests/smoke/failure.sol,e();f(bool _value);g(bool _value);h()
winsvega/solidity,test/libsolidity/syntaxTests/types/encoding_fractional.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/scoping/double_variable_declaration_disjoint_scope.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/invalidArgs/creating_struct_members_skipped.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/types/convert_uint_to_fixed_bytes_same_size.sol,uintToBytes(uint256 h)
winsvega/solidity,test/libsolidity/semanticTests/expressions/exp_operator_const.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/550_warn_about_address_members_on_non_this_contract_call.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/address/contract_non_payable_fallback_to_payable_address.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/168_assignment_to_const_var_involving_conversion.sol,""
winsvega/solidity,test/libsolidity/semanticTests/viaYul/conversion/explicit_cast_assignment.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/emit_without_event.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/002_undeclared_name.sol,f(uint256 arg)
winsvega/solidity,test/libsolidity/syntaxTests/specialFunctions/abi_functions_member_access.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/dataLocations/publicFunction/function_argument_location_specifier_test_public_calldata.sol,f(bytes calldata)
winsvega/solidity,test/libsolidity/ABIJson/payable_function.sol,f();g()
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/gas_value_without_call.sol,f();g(address a);h()
winsvega/solidity,test/libsolidity/semanticTests/functionCall/base_base_overload.sol,"init(uint a, uint b);init(uint a);init(uint a, uint b);init(uint a);cInit(uint c);cInit(uint c, uint d);bInit(uint c);bInit(uint c, uint d)"
winsvega/solidity,test/libsolidity/syntaxTests/types/mapping/access_index_omitted.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/returning_structs_fail.sol,f();g()
winsvega/solidity,test/libsolidity/ABIJson/return_structs_with_contracts.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/structs/structs.sol,check();set()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/297_library_functions_do_not_have_value.sol,l();f()
winsvega/solidity,test/libsolidity/syntaxTests/dataLocations/externalFunction/function_argument_location_specifier_test_external_memory.sol,f(bytes memory)
winsvega/solidity,test/libsolidity/semanticTests/viaYul/detect_div_overflow.sol,"f(uint a, uint b);g(int8 a, int8 b);h(uint256 a, uint256 b)"
winsvega/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array_dynamic_index_access.sol,"f(uint256[] calldata s);g(uint256[][2] calldata s, uint256 which);h(uint8[] calldata s);i(uint8[][2] calldata s, uint256 which);j(bytes calldata s);k(bytes[2] calldata s, uint256 which)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/compoundAssignment/tuple_invalid_inline_array_type.sol,f()
winsvega/solidity,test/compilationTests/corion/ico.sol,"ICObonus();setInterestDB(address addr, uint256 balance);checkInterest(address addr);getInterest(address beneficiary);setICOEthPrice(uint256 value);extendICO();closeICO();abortICO();connectTokens(address payable tokenContractAddr, address payable premiumContractAddr);receiveFunds();buy(address payable beneficiaryAddress, address affilateAddress);checkPremium(address owner);getIcoReward(uint256 value);isICO()"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/010_type_conversion_for_comparison.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/061_missing_base_constructor_arguments.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/062_base_constructor_arguments_override.sol,""
winsvega/solidity,test/cmdlineTests/too_long_line_multiline/input.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/imports/inheritance_abi_encoder_mismatch_2.sol,f(S memory _s)
winsvega/solidity,test/libsolidity/syntaxTests/types/encoding_packed_fractional.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/indexing/array_multim_overflow_index.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/constructor/function_named_constructor.sol,constructor()
winsvega/solidity,test/libsolidity/syntaxTests/imports/shadowing_builtins_with_alias.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/conversion/not_allowed_conversion_to_int_array_pointer2.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/conversion/explicit_conversion_from_storage_array_ref.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/getter/complex_struct.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/parsing/address_payable_struct.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/parsing/var_in_function_arguments.sol,"f(var);f(var x);f(var x, var y);f(uint x, var y);f(var x, uint y);f(var storage);f(var storage x);f(var storage x, var storage y)"
winsvega/solidity,test/libsolidity/syntaxTests/parsing/constant_state_modifier.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/290_varM_disqualified_as_keyword_1.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/indexing/function_type.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array_two_static.sol,"f(uint256[3] calldata s1, uint256[2] calldata s2, bool which);g(uint256[3] calldata s1, uint256[2] calldata s2, bool which)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/447_no_unused_warnings.sol,f(uint a)
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/function_call_to_label.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/unicode_escape_literals.sol,together();invalidLiteral()
winsvega/solidity,test/libsolidity/syntaxTests/types/rational_number_div_limit.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_merge_variables_6.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/specialFunctions/types_with_unspecified_encoding_special_types.sol,f()
winsvega/solidity,test/compilationTests/MultiSigWallet/MultiSigWallet.sol,"addOwner(address owner);removeOwner(address owner);replaceOwner(address owner, address newOwner);changeRequirement(uint _required);submitTransaction(address destination, uint value, bytes memory data);confirmTransaction(uint transactionId);revokeConfirmation(uint transactionId);executeTransaction(uint transactionId);isConfirmed(uint transactionId);addTransaction(address destination, uint value, bytes memory data);getConfirmationCount(uint transactionId);getTransactionCount(bool pending, bool executed);getOwners();getConfirmations(uint transactionId);getTransactionIds(uint from, uint to, bool pending, bool executed)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/431_bare_assert.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/rational_number_huge_fail.sol,f(uint y)
winsvega/solidity,test/libsolidity/semanticTests/specialFunctions/abi_functions_member_access.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/489_function_types_selector_6.sol,h();f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/230_creating_contract_within_the_contract.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/address/literal_to_payable_address.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/constants/addmod_zero.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/functionTypes/internal_function_as_external_parameter.sol,f(function(uint)
winsvega/solidity,test/libsolidity/syntaxTests/lvalues/functions.sol,f();g();h();i()
winsvega/solidity,test/libsolidity/syntaxTests/array/length/bytes32_too_large_multidim.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/array/bytes_pop.sol,test()
winsvega/solidity,test/libsolidity/syntaxTests/imports/library_name_clash_with_contract.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/builtin_functions_view_fail.sol,f();g();h();i();j()
winsvega/solidity,test/libsolidity/semanticTests/viaYul/assert_and_require.sol,f(bool a)
winsvega/solidity,test/libsolidity/syntaxTests/parsing/address_public_payable_error.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_overflow.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/specialFunctions/abidecode/abi_decode_memory_v2.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/operators/compound_bitwise_or_1.sol,f(bool b)
winsvega/solidity,test/libsolidity/syntaxTests/parsing/calling_function.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/function_type_nested_return.sol,r();h()
winsvega/solidity,test/libsolidity/syntaxTests/metaTypes/typeOfContract.sol,f()
winsvega/solidity,test/compilationTests/corion/owned.sol,replaceOwner(address newOwner);isOwner()
winsvega/solidity,test/libsolidity/syntaxTests/indexing/fixedbytes_negative_index.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/tuple_return_branch.sol,g();f(uint a)
winsvega/solidity,test/libsolidity/syntaxTests/inheritance/disallow_modifier_style_without_parentheses.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/callvalue_nonpayable_assembly_fallback.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/types/address/address_payable_internal_overload_payable.sol,f(address payable);f(address);g()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/401_does_not_warn_msg_value_in_modifier_following_non_payable_public_function.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/operators/compound_mul.sol,f(uint x)
winsvega/solidity,test/compilationTests/gnosis/Events/Event.sol,buyAllOutcomes(uint collateralTokenCount);sellAllOutcomes(uint outcomeTokenCount);setOutcome();getOutcomeCount();getOutcomeTokens();getOutcomeTokenDistribution(address owner);getEventHash();redeemWinnings()
winsvega/solidity,test/libsolidity/syntaxTests/deprecated_functions.sol,f();g()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/411_string_literal_not_convertible_to_address_as_return_value.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/280_continue_not_in_loop.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/097_access_to_internal_function.sol,f();g()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/conditional_multiple.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/560_event_emit_simple.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/functionTypes/function_type_internal_public_variable.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/029_create_abstract_contract.sol,foo();foo()
winsvega/solidity,test/libsolidity/syntaxTests/scoping/double_variable_declaration_disjoint_scope_activation.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/functions_external_3.sol,"g(uint x);f(uint y, D d)"
winsvega/solidity,test/libsolidity/semanticTests/functionCall/multiple_functions.sol,a();b();c();f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/literal_constants_with_ether_subdenominations.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/479_explicit_literal_to_memory_string_assignment.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/101_empty_in_named_args.sol,"a(uint a, uint b);b()"
winsvega/solidity,test/libsolidity/smtCheckerTests/types/struct_array_branches_1d.sol,f(bool b)
winsvega/solidity,test/libsolidity/smtCheckerTests/overflow/overflow_sum.sol,f(uint8 x)
winsvega/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_data_location_memory.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/lexer_numbers_with_underscores_fixed_fail.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/580_improve_name_suggestion_one_and_two_letters.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/317_fixed_type_valid_explicit_conversions.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_or.sol,f();g()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/408_invalid_address_length_short.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/333_fixed_point_casting_exponents_15.sol,f()
winsvega/solidity,test/libsolidity/gasTests/dispatch_large_optimised.sol,""
winsvega/solidity,test/libsolidity/semanticTests/uninitializedFunctionPointer/store2.sol,run();z()
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/while_2.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/types/address/address_payable_internal_overload_nonpayable.sol,f(address payable);f(address);g()
winsvega/solidity,test/libsolidity/gasTests/data_storage.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/array/calldata.sol,f(uint[3] calldata)
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/this_external_call.sol,f(uint y);g(uint y)
winsvega/solidity,test/libsolidity/syntaxTests/conversion/allowed_conversion_to_string.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/warnUnused/return_parameter.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/memberLookup/member_not_unique.sol,a(uint256);a(uint8);f();g()
winsvega/solidity,test/libsolidity/syntaxTests/conversion/function_type_pure_nonpayable.sol,h();f()
winsvega/solidity,test/libsolidity/syntaxTests/array/array_pop_arg.sol,test()
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/istanbul.sol,f();g()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/490_function_types_selector_7.sol,h();f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/573_similar_name_longer_than_80_not_suggested.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/missing_variable_in_assign.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/var_empty_decl_1.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_return_internal.sol,f();g();h();i()
winsvega/solidity,test/libsolidity/smtCheckerTests/typecast/cast_larger_1.sol,f(uint8 x)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/508_large_storage_arrays_combined.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/calldata_variables.sol,f(bytes calldata bytesAsCalldata)
winsvega/solidity,test/libsolidity/smtCheckerTests/types/array_mapping_aliasing_1.sol,f(mapping (uint => uint)
winsvega/solidity,test/libsolidity/smtCheckerTests/types/mapping_3d_1.sol,f(uint x)
winsvega/solidity,test/libsolidity/smtCheckerTests/types/type_expression_tuple_array_2d.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/function_type_call.sol,f(function(uint);h()
winsvega/solidity,test/libsolidity/syntaxTests/constants/cyclic_dependency_1.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/types/address/address_payable_storage_array_conversion.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/for_err.sol,f();g()
winsvega/solidity,test/libsolidity/syntaxTests/emit/emit_empty.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/053_hash_collision_in_interface.sol,gsf();tgeo()
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/builtin_functions.sol,f();g()
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/no_identifier_label.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/invalid_fixed_conversion_leading_zeroes_check.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/array_aliasing_storage_1.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/operators/unary_sub_array.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/types/library_function_selector.sol,f(uint256);g(uint256[] storage);h(uint256[] memory);f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/216_function_argument_storage_to_mem.sol,f(uint[] storage x);g(uint[] memory x)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/148_external_argument_delete.sol,f(uint a)
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/function_call_does_not_clear_local_vars.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/mapping_nonelementary_key_2.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/types/array_static_1_fail.sol,"f(uint x, uint y)"
winsvega/solidity,test/libsolidity/syntaxTests/denominations/combining_hex_and_denomination.sol,""
winsvega/solidity,test/libsolidity/errorRecoveryTests/missing_rhs.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/mappingReturn/unnamed_err.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/unimplemented_internal.sol,f();g()
winsvega/solidity,test/libsolidity/syntaxTests/specialFunctions/types_with_unspecified_encoding_structs.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/viaYul/array_memory_create.sol,create(uint256 len)
winsvega/solidity,test/libsolidity/smtCheckerTests/operators/compound_bitwise_and_1.sol,f(bool b)
winsvega/solidity,test/libsolidity/semanticTests/asmForLoop/for_loop_nested.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/functionCalls/arbitrary_parameters_but_restricted_first_type.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/292_modifier_is_not_a_valid_typename_is_not_fatal.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/bool_simple_2.sol,"f(bool x, bool y)"
winsvega/solidity,test/libsolidity/smtCheckerTests/operators/unary_sub.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/storage/state_smoke_test.sol,"get(uint8 which);set(uint8 which, uint256 value)"
winsvega/solidity,test/libsolidity/syntaxTests/types/contract_to_base_base.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_indirectly_recursive_dynamic_multi_array.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/353_callcode_not_deprecated_as_function.sol,callcode()
winsvega/solidity,test/libsolidity/syntaxTests/specialFunctions/abi_encodePacked_structs_v2.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_return_external.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/rational_number_signed_to_unsigned.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/viewPure/view_pure_abi_encode.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/type_expression_array_3d.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/405_address_checksum_type_deduction.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/406_invalid_address_checksum.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/address/address_payable_storage_array_conversion_fail.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/functionType.sol,f(function(uint[] storage)
winsvega/solidity,test/libsolidity/semanticTests/expressions/uncalled_address_transfer_send.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/549_warn_about_address_members_on_non_this_contract_send.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/mapping/array_argument_internal.sol,f(mapping(uint => uint)
winsvega/solidity,test/libsolidity/syntaxTests/parsing/multiple_functions_natspec_documentation.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/conversion/function_type_nonpayable_payable.sol,h();f()
winsvega/solidity,test/libsolidity/ABIJson/events.sol,f(uint a)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/142_inheritence_suggestions.sol,func();g()
winsvega/solidity,test/libsolidity/syntaxTests/types/function_types/function_parameter_return_types_fail.sol,"string_to_string(string memory x);string_string_to_string(string memory x, string memory y);tests()"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/327_rational_index_access.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/315_fixed_type_invalid_implicit_conversion_size.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_indirectly_recursive_fixed_array1.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/128_enum_explicit_conversion_is_okay.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/251_using_for_library.sol,""
winsvega/solidity,test/libsolidity/semanticTests/viaYul/array_storage_index_access.sol,test_indicies(uint256 len)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/typeChecking/return.sol,f()
winsvega/solidity,test/compilationTests/corion/announcementTypes.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/types/rational_number_literal_limit_1.sol,bignum()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/shadowsBuiltin/return_parameters.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/control_flow/ways_to_merge_variables_3.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/types/address/contract_no_fallback_to_payable_address.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/structs/recursion/recursive_struct_forward_reference.sol,f(Data.S memory a)
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/function_call_not_found.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/array/length/invalid_expression_5.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/540_array_length_invalid_expression_division_by_zero.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/warnUnused/local.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/498_msg_gas_deprecated.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/jump_disallowed.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/while_loop.sol,fun()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/constructor_allowed_this.sol,a();b(C);f();g(C)
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/if_err.sol,f(bool flag);g(bool flag)
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_trivial_condition_2.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_directly_recursive_fixed_array.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/indexing/array_multidim_rational.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/568_blockhash.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/storage/simple_accessor.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/suggest_view.sol,g()
winsvega/solidity,test/libsolidity/semanticTests/libraries/library_address_homestead.sol,"f(uint256 a, uint256 b);addr();g(uint256 a, uint256 b)"
winsvega/solidity,test/libsolidity/syntaxTests/functionCalls/named_arguments_overload.sol,"f(uint x);f(uint x, uint y);f(uint x, uint y, uint z);call()"
winsvega/solidity,test/libsolidity/semanticTests/libraries/library_delegatecall_guard_pure.sol,f(uint256[] storage x);f();g();h()
winsvega/solidity,test/cmdlineTests/too_long_line/input.sol,"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(announcementType Type, string Announcement, string Link, bool Oppositable, string _str, uint256 _uint, address _addr)"
winsvega/solidity,test/libsolidity/syntaxTests/constants/division_by_zero.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/199_integer_unsigned_exp_signed.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/302_invalid_fixed_type_long.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/returnExpressions/tuple_return_mismatching_number.sol,f();g();h()
winsvega/solidity,test/libsolidity/syntaxTests/types/address/bytes_short_to_payable_address.sol,f(bytes10 x)
winsvega/solidity,test/libsolidity/syntaxTests/visibility/interface/interface_contract_function_default.sol,f();g()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/581_improve_name_suggestion_three_letters.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/types/array_literal_1.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/inline_arrays/inline_array_declaration_and_passing_implicit_conversion.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/dataLocations/externalFunction/function_argument_location_specifier_test_external_storage.sol,f(bytes storage)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/488_function_types_selector_5.sol,h();f()
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/while_loop_array_assignment_memory_memory.sol,"testUnboundedForLoop(uint n, uint[] memory b, uint[] memory c)"
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/constant_ref.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/functionCalls/named_arguments_overload_failing3.sol,"f(uint x);f(uint x, uint y);f(uint x, uint y, uint z);call()"
winsvega/solidity,test/libsolidity/smtCheckerTests/types/contract_3.sol,"f(C c, C d, C e)"
winsvega/solidity,test/libsolidity/ABIJson/return_param_in_abi.sol,ret()
winsvega/solidity,test/libsolidity/semanticTests/viaYul/short_circuit.sol,or(uint x);and(uint x)
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/this_fake.sol,f(C _c);g();h()
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/functions_external_2.sol,"g(uint x);f(uint y, D d)"
winsvega/solidity,test/libsolidity/smtCheckerTests/operators/mod_n_uint16.sol,"f(uint16 x, uint16 y)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/397_warns_msg_value_in_non_payable_public_function.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/array/length/can_be_recursive_constant.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/conversion/function_type_nonpayable_pure.sol,h();f()
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/constant_computation.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/constructor_this.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/shadowsBuiltin/variables.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/rational_number_huge.sol,f(uint y)
winsvega/solidity,test/compilationTests/gnosis/MarketMakers/LMSRMarketMaker.sol,"calcCost(Market market, uint8 outcomeTokenIndex, uint outcomeTokenCount);calcProfit(Market market, uint8 outcomeTokenIndex, uint outcomeTokenCount);calcMarginalPrice(Market market, uint8 outcomeTokenIndex);calcCostLevel(int logN, int[] memory netOutcomeTokensSold, uint funding);sumExpOffset(int logN, int[] memory netOutcomeTokensSold, uint funding, uint8 outcomeIndex);getNetOutcomeTokensSold(Market market)"
winsvega/solidity,test/libsolidity/ASTJSON/modifier_definition.sol,F()
winsvega/solidity,test/libsolidity/ASTJSON/modifier_invocation.sol,F()
winsvega/solidity,test/libsolidity/syntaxTests/array/static_storage_array_pop.sol,test()
winsvega/solidity,test/libsolidity/ABIJson/empty_name_input_parameter_with_named_one.sol,"f(uint, uint k)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/193_positive_integers_to_signed_out_of_bound_max.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/170_assignment_to_const_var_involving_keccak.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/constants/addmod_mulmod_rational.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/mappings.sol,f();g();h()
winsvega/solidity,test/libsolidity/semanticTests/inlineAssembly/selfbalance.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/conversion/function_type_pure_payable.sol,h();f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/426_throw_is_deprecated.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/203_struct_reference_compare_operators.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/multiVariableDeclarationComplex.sol,f();g()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/192_positive_integers_to_signed_out_of_bound.sol,""
winsvega/solidity,test/libsolidity/ABIJson/multiple_methods.sol,f(uint a);g(uint b)
winsvega/solidity,test/libsolidity/semanticTests/expressions/inc_dec_operators.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/comment_fine.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/functions_identity_2.sol,h(uint x);k(uint x);g()
winsvega/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_multi_functions_recursive.sol,"g(uint a, uint b);f(uint x)"
winsvega/solidity,test/libsolidity/syntaxTests/array/length/constant_var.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/indexing/array_out_of_bounds_index.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/array/length/cannot_be_function_call.sol,f(uint x)
winsvega/solidity,test/libsolidity/semanticTests/types/convert_uint_to_fixed_bytes_greater_size.sol,UintToBytes(uint16 h)
winsvega/solidity,test/libsolidity/syntaxTests/parsing/malformed_enum_declaration.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/array/invalid/contract_index_access.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/library_function_selector_view_pure.sol,f(uint256);g(uint256);f()
winsvega/solidity,test/libsolidity/syntaxTests/denominations/denominations.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/255_using_for_function_on_struct.sol,"mul(s storage self, uint x);f(uint a)"
winsvega/solidity,test/libsolidity/semanticTests/smoke/structs.sol,s();t()
winsvega/solidity,test/libsolidity/syntaxTests/memberLookup/internal_function_type.sol,g()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/event_arguments.sol,""
winsvega/solidity,test/cmdlineTests/require_overload/input.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/storage_reference_empty_slot.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/storage_value_vars_4.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/single_function_param_trailing_comma.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/overriding_no_restrict_warning.sol,f();f()
winsvega/solidity,test/libsolidity/ABIJson/include_fallback_function.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/039_functions_with_identical_structs_in_interface.sol,f(S1 memory);f(S2 memory)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/495_builtin_ripemd160_reject_gas.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/storage_reference_on_memory.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/176_overloaded_function_cannot_resolve.sol,f();f(uint a);g()
winsvega/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_data_location_calldata.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/080_event.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/042_functions_with_stucts_of_non_external_types_in_interface_2.sol,f(S memory)
winsvega/solidity,test/libsolidity/syntaxTests/events/event_array_indexed_v2.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/struct.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/281_continue_not_in_loop_2.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/metaTypes/typeNotRegularIdentifierStateVariable.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/parsing/function_type_in_struct.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_or_fail.sol,f();g()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/152_array_copy_with_different_types1.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/globalFunctions/suicide_override.sol,suicide();f()
winsvega/solidity,test/libsolidity/syntaxTests/upper_case_hex_literals.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/abiEncoderV2/cleanup/intx.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/array/length/bytes32_too_large.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/constructor/inconstructible_internal_constructor.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/138_similar_name_suggestions_expected.sol,func();g()
winsvega/solidity,test/libsolidity/syntaxTests/string/string_new_line.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_data_location_function_param_internal.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_indirectly_recursive.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/types/string_literal_comparison_2.sol,f(bytes32 _x)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/086_events_with_same_name_different_types.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/144_no_spurious_identifier_suggestions.sol,g()
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/while_2_fail.sol,f(uint x)
winsvega/solidity,test/libsolidity/smtCheckerTests/typecast/cast_larger_2_fail.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/modifiers/modifier_without_underscore.sol,""
winsvega/solidity,test/libsolidity/semanticTests/types/packing_unpacking_types.sol,"run(bool a, uint32 b, uint64 c)"
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/functions_identity_1_fail.sol,h(uint x);g()
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/function_inside_branch_modify_state_var_3.sol,f();g(bool b);h(bool b)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/085_events_with_same_name_unnamed_arguments.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/functionTypes/payable_internal_function_type_is_not_fatal.sol,g()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/477_too_large_arrays_for_calldata_internal.sol,f(uint[85678901234] memory a)
winsvega/solidity,test/libsolidity/syntaxTests/globalFunctions/call_with_wrong_arg_count.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/478_too_large_arrays_for_calldata_public.sol,f(uint[85678901234] memory a)
winsvega/solidity,test/libsolidity/smtCheckerTests/types/tuple_function_2.sol,f();g()
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/while_2_break_fail.sol,f(uint x)
winsvega/solidity,test/libsolidity/semanticTests/types/convert_fixed_bytes_to_uint_greater_size.sol,bytesToUint(bytes4 s)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/357_payable_private.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/address_delegatecall.sol,"f(address a, bytes memory data)"
winsvega/solidity,test/libsolidity/smtCheckerTests/types/array_aliasing_storage_2.sol,"f(uint[] storage a, uint[] storage b, uint[] memory c)"
winsvega/solidity,test/libsolidity/syntaxTests/array/calldata_multi_dynamic_V1.sol,f(uint[][] calldata);g(uint[][1] calldata)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/262_bound_function_in_var.sol,"mul(s storage self, uint x);f(uint a)"
winsvega/solidity,test/libsolidity/semanticTests/uninitializedFunctionPointer/invalidStoredInConstructor.sol,f();f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/060_complex_inheritance.sol,f();f();g()
winsvega/solidity,test/libsolidity/syntaxTests/inheritance/super_on_external.sol,f();f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/175_uninitialized_const_variable.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/disallowWildcardsFromReturn.sol,fn();one();two();three();four();five()
winsvega/solidity,test/libsolidity/syntaxTests/types/empty_tuple_function.sol,f();a()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/address_constant_payable.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/296_int10abc_is_identifier.sol,f()
winsvega/solidity,test/libsolidity/ABIJson/multiple_methods_order.sol,f(uint a);c(uint b)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/shadowsBuiltin/storage_variables.sol,""
winsvega/solidity,test/libsolidity/semanticTests/libraries/library_address.sol,f(uint256 v);g(uint256 v);addr();g(uint256 v);h(uint256 v);i(uint256 v);j(uint256 v);k(uint256 v)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/201_integer_signed_exp_signed.sol,f();g();h()
winsvega/solidity,test/libsolidity/syntaxTests/dataLocations/publicFunction/public_function_parameters_no_data_location.sol,h(uint[])
winsvega/solidity,test/libsolidity/syntaxTests/types/rational_number_bitshift_limit.sol,f()
winsvega/solidity,test/compilationTests/gnosis/Oracles/FutarchyOracle.sol,fund(uint funding);close();setOutcome();isOutcomeSet();getOutcome()
winsvega/solidity,test/libsolidity/syntaxTests/types/cyclic_dependency_check_on_struct_good.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/functionCalls/named_arguments_for_functions_that_take_arbitrary_parameters.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/imports/inheritance_abi_encoder_mismatch_1.sol,f(S memory _s)
winsvega/solidity,test/compilationTests/MultiSigWallet/MultiSigWalletWithDailyLimit.sol,changeDailyLimit(uint _dailyLimit);executeTransaction(uint transactionId);isUnderLimit(uint amount);calcMaxWithdraw()
winsvega/solidity,test/libsolidity/smtCheckerTests/operators/delete_struct.sol,f(bool b)
winsvega/solidity,test/libsolidity/syntaxTests/visibility/external_library_function.sol,f(uint);f()
winsvega/solidity,test/compilationTests/corion/schelling.sol,"replaceOwner(address newOwner);getFunds(address _owner);setFunds(address _owner, uint256 _amount);getRound(uint256 _id);pushRound(uint256 _totalAboveWeight, uint256 _totalBelowWeight, uint256 _reward, uint256 _blockHeight, bool _voted);setRound(uint256 _id, uint256 _totalAboveWeight, uint256 _totalBelowWeight, uint256 _reward, uint256 _blockHeight, bool _voted);getCurrentRound();getVoter(address _owner);setVoter(address _owner, uint256 _roundID, bytes32 _hash, voterStatus _status, bool _voteResult, uint256 _rewards);getSchellingExpansion(uint256 _id);setSchellingExpansion(uint256 _id, uint256 _expansion);setCurrentSchellingRound(uint256 _id);getCurrentSchellingRound();replaceModule(address payable addr);transferEvent(address payable from, address payable to, uint256 value);getFunds(address addr);setFunds(address addr, uint256 amount);setVoter(address owner, _voter memory voter);getVoter(address addr);setRound(uint256 id, _rounds memory round);pushRound(_rounds memory round);getRound(uint256 id);getCurrentRound();setCurrentSchellingRound(uint256 id);getCurrentSchellingRound();setSchellingExpansion(uint256 id, uint256 amount);getSchellingExpansion(uint256 id);configure(announcementType a, uint256 b);prepareVote(bytes32 votehash, uint256 roundID);sendVote(string calldata vote);checkVote();getRewards(address beneficiary);checkReward();nextRound();addFunds(uint256 amount);getFunds();getCurrentSchellingRoundID();getSchellingRound(uint256 id);getRoundWeight(uint256 aboveW, uint256 belowW);isWinner(_rounds memory round, bool aboveVote);getTotalSupply();getTokenBalance(address addr)"
winsvega/solidity,test/libsolidity/syntaxTests/parsing/smoke_test.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/065_super_excludes_current_contract.sol,b();f()
winsvega/solidity,test/libsolidity/syntaxTests/conversion/function_type_pure_view.sol,h();f()
winsvega/solidity,test/libsolidity/syntaxTests/types/var_empty_decl_0.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/viaYul/comparison.sol,"f(address a);g();lt(uint a, uint b);slt(int a, int b);lte(uint a, uint b);slte(int a, int b);gt(uint a, uint b);sgt(int a, int b);gte(uint a, uint b);sgte(int a, int b);eq(uint a, uint b);neq(uint a, uint b)"
winsvega/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_or_need_both_fail.sol,f();g()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/231_array_out_of_bound_access.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/210_uninitialized_mapping_variable.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/library_function_selector_private_outside.sol,f(uint256);f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/180_external_types_clash.sol,f(a);f(uint8 a)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/125_enum_member_access_accross_contracts.sol,test()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/string_literal_assignment_4.sol,g();f(bytes32 _x)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/compoundAssignment/incomp_types.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/constructor/inconstructible_internal_constructor_inverted.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/368_shift_constant_left_negative_rvalue.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/parsing/address_payable_conversion.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/string_literal_comparison_1.sol,f(bytes32 _x)
winsvega/solidity,test/libsolidity/syntaxTests/types/zero_literal_to_bytesXX_implicit.sol,f();g();h()
winsvega/solidity,test/libsolidity/syntaxTests/multiSource/one_source.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/array_static_2_fail.sol,"f(uint x, uint y, uint z, uint t)"
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/modifier_err.sol,f(bool flag);g(bool flag)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/041_functions_with_stucts_of_non_external_types_in_interface.sol,f(S memory)
winsvega/solidity,test/libsolidity/ABIJson/view_function.sol,"foo(uint a, uint b);boo(uint32 a)"
winsvega/solidity,test/libsolidity/semanticTests/expressions/exp_operator_const_signed.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/mapping/array_argument_private.sol,f(mapping(uint => uint)
winsvega/solidity,test/libsolidity/smtCheckerTests/special/this.sol,f(address a)
winsvega/solidity,test/libsolidity/smtCheckerTests/types/fixed_bytes_1.sol,f(bytes8 y);g()
winsvega/solidity,test/libsolidity/syntaxTests/conversion/allowed_conversion_to_bytes_array.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/abiEncoderV2/cleanup/function.sol,ggg(function();h(S calldata x);dummy();ffff(uint256 a)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/482_explicit_literal_to_unspecified_string.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/typeChecking/return_tuple_not_convertible.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/storage_assignment.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/specialFunctions/abidecode/abi_decode_memory.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/viaYul/array_memory_as_parameter.sol,"test(uint256 len, uint idx);receiver(uint[] memory array, uint idx)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/156_array_copy_with_different_types_dynamic_static.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/visibility_specifiers.sol,f();f_priv();f_internal()
winsvega/solidity,test/libsolidity/semanticTests/viaYul/array_storage_index_boundery_test.sol,"test_boundery_check(uint256 len, uint256 access)"
winsvega/solidity,test/libsolidity/semanticTests/viaYul/detect_add_overflow.sol,"f(uint a, uint b);g(uint8 a, uint8 b)"
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/while_loop_simple_1.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/197_integer_boolean_and.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/while_loop_simple_2.sol,f(uint x)
winsvega/solidity,test/libsolidity/ASTJSON/non_utf8.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/multiSource/import.sol,g(uint256 x);f(uint256 x)
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/value_with_call_nonpayable.sol,f(address a);g(address a);h();i()
winsvega/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_indirectly_recursive_fixed_multi_array.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/parsing/constructor_super.sol,x()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/enum_from_interface.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/specialFunctions/abidecode/abi_decode_storage.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/for_1_continue_fail.sol,"f(uint x, bool b)"
winsvega/solidity,test/libsolidity/syntaxTests/globalFunctions/sha256_with_wrong_arg_count.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_assert_condition_1.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/conversion/implicit_conversion_from_storage_array_ref.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/mapping_nonelementary_key_1.sol,""
winsvega/solidity,test/libsolidity/semanticTests/functionCall/array_multiple_local_vars.sol,f(uint256[] calldata seq)
winsvega/solidity,test/compilationTests/corion/multiOwner.sol,"insertOwner(address addr);dropOwner(address addr);cancelDo(bytes32 doHash);ownersForChange();calcDoHash(string memory job, bytes32 data);validDoHash(bytes32 doHash);insertAndCheckDo(bytes32 doHash);_addOwner(address addr);_delOwner(address addr)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/409_invalid_address_length_long.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/globalFunctions/sha3_var.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/lvalues/calldata_index_access.sol,f(uint256[] calldata x)
winsvega/solidity,test/libsolidity/semanticTests/types/convert_fixed_bytes_to_fixed_bytes_smaller_size.sol,bytesToBytes(bytes4 input)
winsvega/solidity,test/libsolidity/syntaxTests/conversion/function_type_view_pure.sol,h();f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/mapping_aliasing_2.sol,f(mapping (uint => uint)
winsvega/solidity,test/libsolidity/semanticTests/structs/struct_reference.sol,check();set()
winsvega/solidity,test/libsolidity/syntaxTests/constructor/constructor_without_implementation.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/500_gasleft_shadowing_1.sol,gasleft();f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/250_member_access_parser_ambiguity.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/inheritance/override/change_return_types_in_interface.sol,f();f()
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_unreachable_1.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/metaTypes/codeAccessBase.sol,f();creation();runtime();creationBase();runtimeBase()
winsvega/solidity,test/libsolidity/syntaxTests/types/contract_to_unrelated_contract.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/018_forward_function_reference.sol,"fun();fun(uint, bool, uint)"
winsvega/solidity,test/libsolidity/syntaxTests/constants/mulmod_zero.sol,""
winsvega/solidity,test/libsolidity/semanticTests/abiDecodeV1/dynamic_memory_copy.sol,test(bytes memory buf)
winsvega/solidity,test/libsolidity/syntaxTests/types/var_type_invalid_rational.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/318_invalid_array_declaration_with_rational.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/typecast/enum_from_uint.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/conversion/function_type_view_nonpayable.sol,h();f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/for_loop_vardef_initexpr.sol,fun(uint256 a)
winsvega/solidity,test/libsolidity/syntaxTests/types/empty_tuple_event.sol,a()
winsvega/solidity,test/compilationTests/corion/safeMath.sol,"safeAdd(uint256 a, uint256 b);safeSub(uint256 a, uint256 b)"
winsvega/solidity,test/libsolidity/smtCheckerTests/inheritance/state_variables_2.sol,f(uint y)
winsvega/solidity,test/libsolidity/semanticTests/viaYul/erc20.sol,"totalSupply();balanceOf(address owner);allowance(address owner, address spender);transfer(address to, uint256 value);approve(address spender, uint256 value);transferFrom(address from, address to, uint256 value);increaseAllowance(address spender, uint256 addedValue);decreaseAllowance(address spender, uint256 subtractedValue);_transfer(address from, address to, uint256 value);_mint(address account, uint256 value);_burn(address account, uint256 value);_approve(address owner, address spender, uint256 value);_burnFrom(address account, uint256 value)"
winsvega/solidity,test/compilationTests/gnosis/Events/ScalarEvent.sol,redeemWinnings();getEventHash()
winsvega/solidity,test/libsolidity/syntaxTests/types/address/address_nonpayable_selfdestruct.sol,f(address a)
winsvega/solidity,test/libsolidity/syntaxTests/types/address/uint_to_payable_address.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/150_array_with_nonconstant_length.sol,f(uint a)
winsvega/solidity,test/libsolidity/syntaxTests/memberLookup/failed_function_lookup.sol,"f(uint, uint);f(uint);g()"
winsvega/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_dynamic_key_public.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/special/abi_decode_memory_v2.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/events/event_nested_array_2.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/232_literal_string_to_storage_pointer.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/metaTypes/codeAccessLibrary.sol,creationOther();runtime();f(uint)
winsvega/solidity,test/libsolidity/smtCheckerTests/types/tuple_assignment.sol,g()
winsvega/solidity,test/libsolidity/syntaxTests/dataLocations/publicFunction/function_argument_location_specifier_test_public_storage.sol,f(bytes storage)
winsvega/solidity,test/libsolidity/syntaxTests/globalFunctions/suicide_var.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/special/abi_decode_simple.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/347_unused_return_value_call.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_merge_variables_2.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/078_fallback_function_twice.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/parsing/function_type_as_storage_variable.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/memberLookup/contract_not_payable_send.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/290_varM_disqualified_as_keyword_3.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/contract_to_derived.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/104_empty_name_input_parameter.sol,f(uint)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/054_inheritance_basic.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/more_than_256_declarationerrors.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/literals_on_stack_disallowed.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/tuple_declarations_function_empty.sol,f();g()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/015_balance_invalid.sol,fun()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/003_undeclared_name_is_not_fatal.sol,f(uint256 arg)
winsvega/solidity,test/libsolidity/syntaxTests/types/unnamed_tuple_decl.sol,f();g();h();test()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/enum_explicit_values.sol,f(D _a)
winsvega/solidity,test/libsolidity/semanticTests/state_var_initialization.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/316_fixed_type_invalid_implicit_conversion_lost_data.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/array_aliasing_storage_5.sol,"f(uint[] storage a, uint[] memory c)"
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/constant_variable_via_offset.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/conditional_true_false_literal.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/special/this_state.sol,f(address a)
winsvega/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_data_location_default.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/callvalue_nonpayable_assembly_function_modifier.sol,f()
winsvega/solidity,test/compilationTests/gnosis/Oracles/CentralizedOracleFactory.sol,createCentralizedOracle(bytes memory ipfsHash)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/279_break_not_in_loop.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/scoping/scoping_self_use.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/array/uninitialized_storage_var.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/while_loop_simple_4.sol,f(uint x)
winsvega/solidity,test/libsolidity/smtCheckerTests/typecast/cast_address_1.sol,f(address a)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/126_enum_invalid_member_access.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/do_while_break.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/imports/shadowing_builtins_with_imports.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/functionTypes/function_type_returned.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/inline_arrays/inline_array_declaration_const_string_conversion.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/modifier_order_fail.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/tupleAssignments/warn_multiple_storage_storage_copies.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/462_callable_crash.sol,""
winsvega/solidity,test/libsolidity/semanticTests/expressions/conditional_expression_storage_memory_2.sol,f(bool cond)
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/no_unused_variable_warning.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/inline_assembly/empty.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/specialFunctions/types_with_unspecified_encoding_types.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/inheritance/allow_empty_duplicated_super_constructor_call.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/parsing/arrays_in_storage.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/types/no_singleton_tuple.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/address/address_tuple_fine.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/while_break_direct.sol,f(uint x)
winsvega/solidity,test/cmdlineTests/too_long_line_right_short/input.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/invariants/state_machine_1.sol,f();g();h();j();i()
winsvega/solidity,test/libsolidity/smtCheckerTests/control_flow/function_call_inside_branch_2.sol,f();g()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/bool_simple_6.sol,f(bool x)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/129_int_to_enum_explicit_conversion_is_okay.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/specialFunctions/abi_encode_structs_abiv2.sol,e();f();g()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/502_builtin_keccak256_reject_value.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/operators/unary_add_array.sol,f(uint x)
winsvega/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_assignment_outside_branch.sol,f();g(uint y)
winsvega/solidity,test/libsolidity/syntaxTests/structs/recursion/return_recursive_structs2.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/metaTypes/codeAccess.sol,creationOther();runtimeOther();f(uint)
winsvega/solidity,test/libsolidity/syntaxTests/functionTypes/internal_function_type_to_address.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/mapping/assignment_local.sol,fun()
winsvega/solidity,test/compilationTests/gnosis/Tokens/OutcomeToken.sol,"issue(address _for, uint outcomeTokenCount);revoke(address _for, uint outcomeTokenCount)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/355_payable_external.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/function_type_as_parameter.sol,f(function(uint)
winsvega/solidity,test/libsolidity/syntaxTests/parsing/new_invalid_type_name.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/466_does_not_error_transfer_payable_fallback.sol,""
winsvega/solidity,test/compilationTests/corion/publisher.sol,"transferEvent(address payable from, address payable to, uint256 value);Announcements(uint256 id);checkOpposited(uint256 weight, bool oppositable);newAnnouncement(announcementType Type, string calldata Announcement, string calldata Link, bool Oppositable, string calldata _str, uint256 _uint, address payable _addr);closeAnnouncement(uint256 id);oppositeAnnouncement(uint256 id);invalidateAnnouncement(uint256 id);checkICO()"
winsvega/solidity,test/libsolidity/syntaxTests/types/address/address_constant_assignment.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/signed_rational_modulus.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/abiEncoderV2/cleanup/bytesx.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/structs/recursion/return_recursive_structs3.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/viaYul/conversion/implicit_cast_assignment.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/functions_bound_1_fail.sol,"add(uint x, uint y);f(uint x)"
winsvega/solidity,test/libsolidity/smtCheckerTests/operators/delete_array_index.sol,f(bool b)
winsvega/solidity,test/libsolidity/ABIJson/function_type_extended.sol,g(function(test)
winsvega/solidity,test/libsolidity/smtCheckerTests/overflow/simple_overflow.sol,"f(uint a, uint b)"
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/while_fine.sol,f();g();h()
winsvega/solidity,test/libsolidity/smtCheckerTests/typecast/cast_larger_2.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/133_enum_duplicate_values.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/types/address/address_to_contract_payable_fallback.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/004_reference_to_later_declaration.sol,g();f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/538_array_length_invalid_expression_bool_divides_int.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/array/length/invalid_expression_3.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/conversion/not_allowed_conversion_from_super.sol,foo();fii()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/location_specifiers_for_state_variables_multi.sol,""
winsvega/solidity,test/libsolidity/errorRecoveryTests/multiple_errors.sol,"sendCoin(address receiver, uint amount)"
winsvega/solidity,test/libsolidity/syntaxTests/double_variable_declaration.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/inheritance/state_variables.sol,f(uint y)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/shadowsBuiltin/ignores_constructor.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_dynamic_key.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/short_circuit_err.sol,f();g();h()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/address_payable_function_type.sol,g(function (address payable)
winsvega/solidity,test/libsolidity/syntaxTests/array/calldata_assign.sol,f(uint256[] calldata s)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/195_positive_integers_to_unsigned_out_of_bound.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/unimplemented_super_function_derived.sol,f();f();f()
winsvega/solidity,test/libsolidity/semanticTests/functionCall/transaction_status.sol,f();g();h()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/array_aliasing_memory_3.sol,"f(uint[] memory a, uint[] memory b)"
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/functions_storage_var_2.sol,f(uint x);g()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/257_using_for_by_name.sol,"mul(s storage self, uint x);f(uint a)"
winsvega/solidity,test/libsolidity/syntaxTests/functionTypes/external_function_type_public_variable.sol,g(uint);f()
winsvega/solidity,test/libsolidity/smtCheckerTests/overflow/safe_sub_1.sol,"sub(uint256 a, uint256 b)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/invalidArgs/creating_struct.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/uint256_to_bytes1.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/253_using_for_function_exists.sol,double(uint self);f(uint a)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/323_mapping_with_fixed_literal.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/uninitializedFunctionPointer/storeInConstructor.sol,f()
winsvega/solidity,test/cmdlineTests/too_long_line_edge_in/input.sol,"ffffffffffffffffffffff(announcementTypeTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT Ty, string A)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/569_block_blockhash_deprecated.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/inline_array_empty_cells_check_lvalue.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/types/convert_fixed_bytes_to_uint_smaller_size.sol,bytesToUint(bytes4 s)
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/abi_encode_functions.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/inheritance/base_arguments_empty_parentheses.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/typecast/string_literal_to_fixed_bytes_function_call.sol,f();g(bytes7 a)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/529_fallback_marked_public.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/023_comparison_of_function_types_gt_2.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/303_fixed_type_int_conversion.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/read_storage_pure_fail.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/scoping/state_variable_function_conflict_former_crash.sol,balance(uint number);doSomething()
winsvega/solidity,test/libsolidity/syntaxTests/inheritance/reference_non_base_ctor.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/functions_identity_as_tuple.sol,h(uint x);g()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/222_struct_named_constructor.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_indirectly_recursive_fixed_array2.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/scoping/scoping_old.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/544_warn_about_address_members_on_contract_call.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/527_fallback_marked_internal.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/invariants/loop_array.sol,f(uint n)
winsvega/solidity,test/libsolidity/syntaxTests/modifiers/modifier_overrides_function.sol,mod(uint a)
winsvega/solidity,test/libsolidity/syntaxTests/types/address/contract_payable_fallback_to_payable_address_implicitly.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/missing_argument_in_named_args.sol,"a(uint a, uint b, uint c);b()"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/constant_mapping.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/operators/compound_add_chain.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/475_implicit_conversion_disallowed.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/functionTypes/external_function_to_function_type_calldata_parameter.sol,f(function(bytes memory);callback(bytes calldata);g()
winsvega/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_and_need_both.sol,f();g()
winsvega/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_assert_condition_2.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/001_name_references.sol,f(uint256)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/428_bare_revert.sol,f(uint x)
winsvega/solidity,test/libsolidity/smtCheckerTests/types/mapping_equal_keys_2.sol,"f(uint x, uint y)"
winsvega/solidity,test/libsolidity/syntaxTests/types/var_empty_decl_3.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/scoping/scoping_for2.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/array_dynamic_3_fail.sol,"f(uint x, uint y, uint z, uint t, uint w, uint v)"
winsvega/solidity,test/libsolidity/syntaxTests/inheritance/duplicated_constructor_call/base.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/parsing/lexer_numbers_with_underscores_hex_fail.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/while_1_continue.sol,"f(uint x, bool b)"
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/functions_trivial_condition_while_only_call.sol,f(bool x);g()
winsvega/solidity,test/libsolidity/semanticTests/storage/array_accessor.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/local_variable_access_out_of_functions.sol,f();g()
winsvega/solidity,test/libsolidity/smtCheckerTests/operators/unary_sub_mapping.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/040_functions_with_different_structs_in_interface.sol,f(S1 memory);f(S2 memory)
winsvega/solidity,test/libsolidity/smtCheckerTests/control_flow/function_call_inside_branch_3.sol,f();g()
winsvega/solidity,test/libsolidity/syntaxTests/tupleAssignments/double_storage_crash.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/suggest_pure.sol,g()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/226_inheriting_library.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/306_invalid_int_implicit_conversion_from_fixed.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/mapping/argument_internal.sol,f(mapping(uint => uint)
winsvega/solidity,test/libsolidity/smtCheckerTests/types/mapping_3d_1_fail.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/fallback/default_visibility.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/jump_invalid_label.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/specialFunctions/abidecode/abi_decode_simple.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/functionTypes/valid_function_type_variables.sol,fa(uint);fb(uint);fc(uint);fd(uint);fe(uint);ff(uint);fg(uint);fh(uint)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/305_fixed_type_rational_fraction_conversion.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_or_touched.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/array/length/parameter_too_large.sol,f(bytes32[1263941234127518272] memory)
winsvega/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_merge_variables_1.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/332_rational_as_exponent_value_neg_quarter.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/178_assignment_of_nonoverloaded_function.sol,f(uint a);g()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/369_shift_constant_right_negative_rvalue.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/array/length/can_be_constant_in_function.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/types/convert_fixed_bytes_to_fixed_bytes_greater_size.sol,bytesToBytes(bytes2 input)
winsvega/solidity,test/libsolidity/smtCheckerTests/types/mapping_as_local_var_1.sol,f(bool cond)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/473_storage_location_non_array_or_struct_disallowed.sol,f(uint storage a)
winsvega/solidity,test/libsolidity/syntaxTests/types/bytes_to_contract.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/expressions/conditional_expression_different_types.sol,f(bool cond)
winsvega/solidity,test/libsolidity/semanticTests/statements/do_while_loop_continue.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/lexer_numbers_with_underscores_hex.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/functions_external_4.sol,f(uint _x);g(uint _y)
winsvega/solidity,test/libsolidity/syntaxTests/dataLocations/privateFunction/private_function_parameters_no_data_location.sol,f(uint[])
winsvega/solidity,test/libsolidity/smtCheckerTests/types/bytes_1.sol,f(bytes memory b)
winsvega/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/differentNumberOfComponentsFromReturn.sol,f();g();h();one();two();three();four()
winsvega/solidity,test/libsolidity/semanticTests/libraries/library_delegatecall_guard_view_not_needed.sol,f(uint256[] storage x);f();g();h()
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/no_identifier_assignment.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/functionCall/named_args_overload.sol,"f();f(uint a);f(uint a, uint b);f(uint a, uint b, uint c);call(uint num)"
winsvega/solidity,test/libsolidity/smtCheckerTests/types/mapping_2.sol,f(bool x)
winsvega/solidity,test/libsolidity/syntaxTests/parsing/mapping_and_array_of_functions.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/types/bytesXX_index_assign.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/address_payable_local.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/139_no_name_suggestion.sol,g()
winsvega/solidity,test/libsolidity/syntaxTests/inheritance/override/remove_view.sol,f();f()
winsvega/solidity,test/libsolidity/smtCheckerTests/complex/slither/const_state_variables.sol,setUsed();setUsed(uint a);getNumber()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/146_external_argument_assign.sol,f(uint a)
winsvega/solidity,test/compilationTests/gnosis/Oracles/CentralizedOracle.sol,replaceOwner(address newOwner);setOutcome(int _outcome);isOutcomeSet();getOutcome()
winsvega/solidity,test/libsolidity/syntaxTests/constructor/constructor_state_mutability.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_inside_branch_assignment.sol,f();g(uint y)
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/callvalue_nonpayable_assembly_function.sol,f(uint x)
winsvega/solidity,test/libsolidity/smtCheckerTests/control_flow/ways_to_merge_variables_1.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/getter/nested_structs.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/167_constant_string_literal_disallows_assignment.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/531_tuple_invalid_literal_too_large_unassigned.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/inheritance/modifiers_in_constructor_context.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/do_while_1_fail.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/memberLookup/msg_value_modifier_view.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/operators/compound_sub_mapping.sol,"f(uint x, uint p)"
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/empty_function_name.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/array/no_array_pop.sol,test()
winsvega/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_array_return_internal.sol,f();g();h();i()
winsvega/solidity,test/libsolidity/syntaxTests/imports/filename_with_period.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/481_explicit_literal_to_unspecified_string_assignment.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/480_explicit_literal_to_storage_string_assignment.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/578_private_member_getter_call_without_parentheses.sol,f();f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/434_pure_statement_check_for_regular_for_loop.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/events/event_nested_array.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/parsing/literal_constants_with_ether_subdenominations_in_expressions.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/356_payable_internal.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/inlineAssembly/chainid.sol,f()
winsvega/solidity,test/compilationTests/gnosis/Oracles/UltimateOracleFactory.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/parsing/address_nonpayable.sol,f(address b)
winsvega/solidity,test/libsolidity/syntaxTests/metaTypes/unsupportedArgForType.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/459_function_overload_is_not_shadowing.sol,f();f(uint)
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/while_1_break.sol,"f(uint x, bool b)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/584_abi_decode_with_tuple_of_other_than_types.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/160_test_byte_is_alias_of_byte1.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/051_function_internal_allowed_conversion.sol,internalCall()
winsvega/solidity,test/libsolidity/semanticTests/viaYul/simple_assignment.sol,"f(uint a, uint b)"
winsvega/solidity,test/libsolidity/syntaxTests/array/calldata_multi.sol,f(uint[3][4] calldata)
winsvega/solidity,test/libsolidity/syntaxTests/parsing/conditional_with_constants.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/invalid_number.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/array/length/complex_cyclic_constant.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/double_revert.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/194_negative_integers_to_unsigned.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/types/address_transfer_insufficient.sol,"f(address payable a, address payable b)"
winsvega/solidity,test/libsolidity/ABIJson/event_structs.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/constant_access.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/140_multiple_similar_suggestions.sol,g()
winsvega/solidity,test/libsolidity/smtCheckerTests/complex/warn_on_struct.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/address_transfer.sol,f(address payable a)
winsvega/solidity,test/libsolidity/syntaxTests/types/index_access_for_bytes.sol,f(bytes16 b)
winsvega/solidity,test/libsolidity/syntaxTests/types/hex_literal_to_bytesXX_different_size_implicit.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/224_string_bytes_conversion.sol,h(string calldata _s);i(string memory _s);j();k(bytes calldata _b);l(bytes memory _b);m()
winsvega/solidity,test/libsolidity/syntaxTests/unterminatedBlocks/one_dot_x.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/300_invalid_fixed_types_7x8_mxn.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/124_enum_member_access.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_array_return_external.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/smoke/basic.sol,"d();e();f(uint a);g();h(uint x, uint y);i(bool b);j(bytes32 b);k();l(uint a)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/252_using_for_not_library.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/indexing/fixedbytes_noninteger_index.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/572_function_type_undeclared_type_multi_nested.sol,a(function(function(function(Nested)
winsvega/solidity,test/libsolidity/syntaxTests/types/address/address_constant.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/constants/abi_encoding_constant.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/scoping/double_function_declaration.sol,fun();fun()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/049_function_external_call_allowed_conversion.sol,externalCall()
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/overloaded_reference.sol,f();f(address);g()
winsvega/solidity,test/libsolidity/syntaxTests/events/event_struct_indexed_v2.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/functions_storage_var_2_fail.sol,f(uint x);g()
winsvega/solidity,test/libsolidity/syntaxTests/viewPure/view_pure_abi_encode_arguments.sol,gView();gNonPayable();check()
winsvega/solidity,test/libsolidity/syntaxTests/types/bytes0.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/077_fallback_function_with_return_parameters.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/223_literal_strings.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/095_multiple_events_argument_clash.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/parsing/single_event_arg_trailing_comma.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/types/array_struct_array_branches_2d.sol,f(bool b)
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/smoke.sol,f();g();h();i();j()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/044_returning_multi_dimensional_arrays_new_abi.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/modifiers.sol,f();g();h();i();j();k();l();m();n()
winsvega/solidity,test/libsolidity/semanticTests/viaYul/detect_mod_zero_signed.sol,"f(int a, int b);g(int8 a, int8 b)"
winsvega/solidity,test/libsolidity/syntaxTests/globalFunctions/callcode_with_wrong_arg_count.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/rational_negative_numerator_negative_exp.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/unterminatedBlocks/zero_dot_x.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/memberLookup/failed_function_lookup_in_library.sol,"f(uint, uint);f(uint);g()"
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/modifier_fine.sol,f(bool flag);g(bool flag)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/103_invalid_parameter_names_in_named_args.sol,"a(uint a, uint b);b()"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/179_assignment_of_overloaded_function.sol,f();f(uint a);g()
winsvega/solidity,test/libsolidity/syntaxTests/metaTypes/name.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/constructor/external_constructor.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/unimplemented_super_function.sol,f();f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/045_returning_multi_dimensional_arrays.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/assignment_from_library.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/storage/mappings_array2d_pop_delete.sol,map(uint key);p();d()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/112_exp_operator_exponent_too_big.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_directly_recursive.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/selector_complex.sol,f(C c);g()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/134_enum_name_resolution_under_current_contract_name.sol,a()
winsvega/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_inside_branch_assignment_branch.sol,f();g(uint y)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/127_enum_invalid_direct_member_access.sol,""
winsvega/solidity,test/libsolidity/ABIJson/empty_name_return_parameters.sol,f(uint k)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/113_exp_warn_literal_base_1.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/conversion/function_type_nonpayable_view.sol,h();f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/524_accept_library_creation.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/while_nested_break.sol,"f(uint x, uint y, bool b, bool c)"
winsvega/solidity,test/libsolidity/syntaxTests/inheritance/override/calldata_memory_interface_instantiate.sol,f(uint[] calldata);f(uint[] memory);f()
winsvega/solidity,test/libsolidity/smtCheckerTests/typecast/cast_smaller_1.sol,f(uint16 x)
winsvega/solidity,test/libsolidity/semanticTests/abiEncoderV2/cleanup/static_array.sol,"gggggggg(uint8[2] calldata s);f(uint256 a, uint256 b)"
winsvega/solidity,test/libsolidity/syntaxTests/conversion/conversion_to_bytes.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/address/address_tuple_fail.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/access_to_base_member_function.sol,x();f()
winsvega/solidity,test/libsolidity/smtCheckerTests/control_flow/function_call_inside_else_branch.sol,f();g()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/mapping_2d_1.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/returnExpressions/single_return_mismatching_number.sol,f();g()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/099_access_to_internal_state_variable.sol,g()
winsvega/solidity,test/libsolidity/syntaxTests/types/address/address_to_contract.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/typecast/cast_larger_3.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/smoke.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/while_break.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/invalidTypes/constructor_call.sol,f()
winsvega/solidity,test/libsolidity/errorRecoveryTests/contract_recovery.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/dataLocations/externalFunction/function_argument_location_specifier_test_external_calldata.sol,f(bytes calldata)
winsvega/solidity,test/libsolidity/syntaxTests/variableDeclaration/while.sol,f(uint x)
winsvega/solidity,test/compilationTests/gnosis/Markets/CampaignFactory.sol,""
winsvega/solidity,test/libsolidity/errorRecoveryTests/error_to_eos.sol,"sendCoin(address receiver, uint amount)"
winsvega/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_not_really_recursive.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/198_integer_boolean_not.sol,""
winsvega/solidity,test/libsolidity/semanticTests/ecrecover/failing_ecrecover_invalid_input.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/function_without_call.sol,f();k()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/151_array_with_negative_length.sol,f(uint a)
winsvega/solidity,test/libsolidity/smtCheckerTests/types/tuple_assignment_multiple_calls.sol,f(uint x);g()
winsvega/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_or_need_both.sol,f();g()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/multiple_statemutability_specifiers.sol,f();f();f();f();f();f();f();f()
winsvega/solidity,test/libsolidity/syntaxTests/types/address/address_abi_decode.sol,f(bytes memory b)
winsvega/solidity,test/libsolidity/smtCheckerTests/types/array_dynamic_2.sol,"f(uint x, uint y, uint z, uint t)"
winsvega/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_indirectly_recursive_dynamic_array2.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/unbalanced_positive_stack.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/structs/recursion/parallel_structs.sol,addTestStruct(TestStruct memory)
winsvega/solidity,test/libsolidity/smtCheckerTests/verification_target/constant_condition_3.sol,f(uint)
winsvega/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array_static_dynamic_static.sol,f(uint8[1][][1] calldata s);reenc_f(uint8[1][][1] calldata s);g();h();i();j()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/189_string_length.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/specialFunctions/abidecode/abi_decode_invalid_arg_count.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/events/event_struct.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/functions_recursive_indirect.sol,f();g()
winsvega/solidity,test/libsolidity/ASTJSON/enum_value.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/empty_fun_arg_beginning.sol,"f();f(a, b)"
winsvega/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array_static_index_access.sol,"f(uint256[3] calldata s);g(uint256[3][2] calldata s, uint256 which);h(uint8[3] calldata s);i(uint8[3][2] calldata s, uint256 which)"
winsvega/solidity,test/libsolidity/smtCheckerTests/types/enum_in_struct.sol,f(S memory s)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/534_tuple_invalid_literal_too_large_expression.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/577_member_getter_call_without_parentheses_missing_function.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/165_assigning_state_to_const_variable.sol,""
winsvega/solidity,test/libsolidity/semanticTests/expressions/conditional_expression_true_literal.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/array_static_mapping_aliasing_1.sol,f(mapping (uint => uint)
winsvega/solidity,test/libsolidity/syntaxTests/parsing/enum_inheritance_interface.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/119_shift_warn_literal_base_4.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/470_specified_storage_no_warn.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/344_one_divided_by_three_integer_conversion.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/functionTypes/function_type_return_parameters_with_names.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/functions_identity_2_fail.sol,h(uint x);k(uint x);g()
winsvega/solidity,test/libsolidity/syntaxTests/types/rational_number_exp_limit_fine.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/functionTypes/internal_function_returned_from_public_function.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/msg_value_modifier.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/169_assignment_to_const_var_involving_expression.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/modifiers/base_constructor_double_invocation.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/while_1_break_fail.sol,"f(uint x, bool b)"
winsvega/solidity,test/libsolidity/syntaxTests/types/address/literal_to_address.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/528_fallback_marked_private.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/for_1_break_fail.sol,"f(uint x, bool b)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/229_call_to_library_function.sol,"min(uint, uint);f()"
winsvega/solidity,test/libsolidity/syntaxTests/parsing/for_loop_simple_initexpr.sol,fun(uint256 a)
winsvega/solidity,test/libsolidity/syntaxTests/imports/complex_import.sol,"f(c.S memory var1, x.C.S memory var2, C.S memory var3)"
winsvega/solidity,test/libsolidity/syntaxTests/indexing/array_without_index.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/viaYul/string_literals.sol,short_dyn();long_dyn();short_bytes_dyn();long_bytes_dyn();bytesNN();bytesNN_padded()
winsvega/solidity,test/libsolidity/gasTests/dispatch_medium.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/events/event_array_v2.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/304_fixed_type_rational_int_conversion.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/314_fixed_type_zero_handling.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/variable_definition_in_mapping.sol,fun()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/585_abi_decode_with_unsupported_types.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/typeChecking/return_wrong_number.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/074_fallback_function.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/literalOperations/mod_zero_complex.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_trivial_condition_1.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/parsing/overloaded_functions.sol,"fun(uint a);fun(uint a, uint b)"
winsvega/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/sameNumberOfComponents.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/202_bytes_reference_compare_operators.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/modifier_post_access.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/control_flow/ways_to_merge_variables_2.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/imports/name_clash_in_import_1.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/double_return.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/inheritance/duplicated_constructor_call/base_multi_no_constructor.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/variableDeclaration/do_while.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/array/length/non_integer_constant_var.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/invalidArgs/creating_memory_array.sol,f(uint size)
winsvega/solidity,test/libsolidity/syntaxTests/modifiers/invalid_function_modifier_type.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/complex/slither/external_function.sol,funcCalled();callWithSuper();funcNotCalled();my_func();funcNotCalled();exec()
winsvega/solidity,test/libsolidity/syntaxTests/virtualLookup/modifiers_in_libraries.sol,withMod(uint self);f(uint _value)
winsvega/solidity,test/libsolidity/smtCheckerTests/types/bytes_2_fail.sol,"f(bytes memory b1, bytes memory b2)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/541_warn_about_address_members_on_contract_balance.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/510_large_storage_array_mapping.sol,""
winsvega/solidity,test/libsolidity/ASTJSON/contract_dep_order.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/inheritance/override/internal_external.sol,f(uint[] calldata);f(uint[] memory)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/115_exp_warn_literal_base_3.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/322_fixed_to_bytes_implicit_conversion.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/types/function_type_as_argument.sol,f(function(uint)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/081_event_too_many_indexed.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/types/array_static_aliasing_memory_5.sol,"f(uint[2] memory a, uint[2] memory b, uint[2] memory c)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/493_builtin_keccak256_reject_gas.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/shadowsBuiltin/events.sol,""
winsvega/solidity,test/libsolidity/semanticTests/viaYul/detect_sub_overflow_signed.sol,"f(int a, int b);g(int8 a, int8 b)"
winsvega/solidity,test/libsolidity/syntaxTests/parsing/lexer_numbers_with_underscores_decimal_fail.sol,f()
winsvega/solidity,test/libsolidity/semanticTests/functionCall/base_overload.sol,"init(uint a, uint b);init(uint a);cInit(uint c);cInit(uint c, uint d)"
winsvega/solidity,test/libsolidity/smtCheckerTests/types/struct_1.sol,"f(uint y, uint v)"
winsvega/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/multiVariableDeclarationSimple.sol,f();g();h()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/298_invalid_fixed_types_0x7_mxn.sol,""
winsvega/solidity,test/libsolidity/semanticTests/types/convert_uint_to_fixed_bytes_same_min_size.sol,UintToBytes(uint8 h)
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/do_while_break_fail.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/for_break_direct.sol,f(uint x)
winsvega/solidity,test/libsolidity/semanticTests/expressions/conditional_expression_with_return_values.sol,"f(bool cond, uint v)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/219_memory_arrays_not_resizeable.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/returnExpressions/single_return_mismatching_number_named.sol,f();g()
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/revert_empty.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/elemantary_non_address_payable_state_variable.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/lvalues/external_reference_argument.sol,"f(uint256[] calldata x, uint256[] calldata y)"
winsvega/solidity,test/libsolidity/syntaxTests/parsing/address_payable_library.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/while_loop_simple_3.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/082_anonymous_event_four_indexed.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy_2.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/functionTypes/function_type.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/055_inheritance_diamond_basic.sol,rootFunction();f();f();g()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/shadowsBuiltin/global_scope.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/typecast/string_literal_to_fixed_bytes_modifier.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/array/length/can_be_constant_in_struct.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/313_fixed_type_size_capabilities.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/while_1_continue_fail.sol,"f(uint x, bool b)"
winsvega/solidity,test/compilationTests/gnosis/Events/CategoricalEvent.sol,redeemWinnings();getEventHash()
winsvega/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_and_touched_function.sol,g(bool _b);f()
winsvega/solidity,test/libsolidity/semanticTests/viaYul/simple_inline_asm.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/operators/compound_mul_mapping.sol,"f(uint x, uint p)"
winsvega/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_and.sol,f();g()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/092_function_event_inheritance_clash.sol,dup()
winsvega/solidity,test/compilationTests/gnosis/Oracles/SignedMessageOracleFactory.sol,"createSignedMessageOracle(bytes32 descriptionHash, uint8 v, bytes32 r, bytes32 s)"
winsvega/solidity,test/libsolidity/syntaxTests/parsing/declaring_fixed_literal_variables.sol,""
winsvega/solidity,test/libsolidity/smtCheckerTests/operators/compound_shr_1.sol,f(bool b)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/174_address_is_constant.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/137_external_visibility.sol,f();g()
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/while_loop_simple_5.sol,"f(uint x, uint y)"
winsvega/solidity,test/libsolidity/syntaxTests/array/dynamic_memory_array_pop.sol,test()
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/while_nested_continue_fail.sol,"f(uint x, uint y, bool b, bool c)"
winsvega/solidity,test/libsolidity/smtCheckerTests/control_flow/function_call_inside_branch_4.sol,f();g();h()
winsvega/solidity,test/libsolidity/syntaxTests/types/hex_literal_to_bytesXX_different_size_explicit.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/multi_variable_declarations.sol,f();g()
winsvega/solidity,test/libsolidity/semanticTests/smoke/alignment.sol,"internalStateDecimal();update(bool _bool, uint256 _decimal, bytes32 _bytes)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/118_shift_warn_literal_base_3.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/for_fine.sol,f();g()
winsvega/solidity,test/libsolidity/semanticTests/inlineAssembly/constant_access.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/334_fixed_point_casting_exponents_neg.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/smoke_test.sol,g();f();h();i()
winsvega/solidity,test/libsolidity/syntaxTests/structs/calldata_struct_function_type.sol,f(S calldata s)
winsvega/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/tuple_fine.sol,f();g();h()
winsvega/solidity,test/libsolidity/smtCheckerTests/loops/while_1_fail.sol,f(uint x)
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/014_balance.sol,fun()
winsvega/solidity,test/compilationTests/MultiSigWallet/TestToken.sol,"issueTokens(address _to, uint256 _value);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);balanceOf(address _owner)"
winsvega/solidity,test/libsolidity/semanticTests/functionCall/mapping_array_internal_argument.sol,"set_internal(mapping(uint8 => uint8);set(uint8 key, uint8 value_a1, uint8 value_a2, uint8 value_b1, uint8 value_b2);get(uint8 key)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/typeChecking/return_wrong_type.sol,f()
winsvega/solidity,test/libsolidity/ABIJson/empty_contract.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/286_conditional_expression_with_different_enum.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/modifiers_fail.sol,f();g()
winsvega/solidity,test/libsolidity/syntaxTests/parsing/function_type_in_expression.sol,"f(uint x, uint y);g()"
winsvega/solidity,test/libsolidity/smtCheckerTests/types/array_static_3.sol,"f(uint x, uint y, uint z, uint t, uint w, uint v)"
winsvega/solidity,test/libsolidity/syntaxTests/functionTypes/external_function_type_to_address_payable.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/024_comparison_of_function_types_eq.sol,f();g()
winsvega/solidity,test/libsolidity/syntaxTests/unterminatedBlocks/zero_dot.sol,f()
winsvega/solidity,test/libsolidity/smtCheckerTests/operators/compound_add_array_index.sol,"f(uint x, uint p)"
winsvega/solidity,test/libsolidity/semanticTests/viaYul/detect_add_overflow_signed.sol,"f(int a, int b);g(int8 a, int8 b)"
winsvega/solidity,test/libsolidity/syntaxTests/imports/import_is_transitive.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/types/var_type_suggest.sol,h();g(uint x);f()
winsvega/solidity,test/libsolidity/smtCheckerTests/operators/delete_array.sol,f(bool b)
winsvega/solidity,test/libsolidity/semanticTests/structs/calldata/dynamically_encoded.sol,f(S calldata s)
winsvega/solidity,test/libsolidity/syntaxTests/types/bytes32_to_uint32.sol,f()
winsvega/solidity,test/compilationTests/stringutils/strings.sol,"memcpy(uint dest, uint src, uint len);toSlice(string memory self);len(bytes32 self);copy(slice memory self);toString(slice memory self);len(slice memory self);empty(slice memory self);compare(slice memory self, slice memory other);equals(slice memory self, slice memory other);nextRune(slice memory self, slice memory rune);nextRune(slice memory self);ord(slice memory self);keccak(slice memory self);startsWith(slice memory self, slice memory needle);beyond(slice memory self, slice memory needle);endsWith(slice memory self, slice memory needle);until(slice memory self, slice memory needle);findPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);rfindPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);find(slice memory self, slice memory needle);rfind(slice memory self, slice memory needle);split(slice memory self, slice memory needle, slice memory token);split(slice memory self, slice memory needle);rsplit(slice memory self, slice memory needle, slice memory token);rsplit(slice memory self, slice memory needle);count(slice memory self, slice memory needle);contains(slice memory self, slice memory needle);concat(slice memory self, slice memory other);join(slice memory self, slice[] memory parts)"
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/563_event_without_emit_deprecated.sol,f()
winsvega/solidity,test/libsolidity/syntaxTests/types/function_types/function_state_mutability_fail.sol,internalPureFunc(uint256 x);internalViewFunc(uint256 x);internalMutableFunc(uint256 x);externalPureFunc(uint256 x);externalViewFunc(uint256 x);externalPayableFunc(uint256 x);externalMutableFunc(uint256 x);funcTakesInternalPure(function(uint256);funcTakesInternalView(function(uint256);funcTakesInternalMutable(function(uint256);funcTakesExternalPure(function(uint256);funcTakesExternalView(function(uint256);funcTakesExternalPayable(function(uint256);funcTakesExternalMutable(function(uint256);tests()
winsvega/solidity,test/libsolidity/semanticTests/empty_contract.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/scoping/double_variable_declaration_same_and_disjoint_scope.sol,f()
winsvega/solidity,test/libsolidity/ABIJson/pure_function.sol,"foo(uint a, uint b);boo(uint32 a)"
winsvega/solidity,test/libsolidity/ASTJSON/fallback.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/returning_structs_no_restrict_warning.sol,f();g();h()
winsvega/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/263_create_memory_arrays.sol,f(uint size)
winsvega/solidity,test/libsolidity/syntaxTests/viewPureChecker/builtin_functions_restrict_warning.sol,f();g()
winsvega/solidity,test/libsolidity/semanticTests/libraries/library_delegatecall_guard_view_staticcall.sol,f(D d);f();g();h()
winsvega/solidity,test/libsolidity/syntaxTests/scoping/function_state_variable_conflict.sol,f(uint)
winsvega/solidity,test/libsolidity/semanticTests/viaYul/local_address_assignment.sol,f(address a)
winsvega/solidity,test/libsolidity/syntaxTests/parsing/multiple_function_param_trailing_comma.sol,""
winsvega/solidity,test/libsolidity/syntaxTests/types/var_empty_decl_2.sol,f()
benjaminion/solidity,test/compilationTests/zeppelin/token/TokenTimelock.sol,"TokenTimelock(ERC20Basic _token, address _beneficiary, uint _releaseTime);claim()"
benjaminion/solidity,test/libsolidity/syntaxTests/types/rational_number_literal_limit_3.sol,bignum()
benjaminion/solidity,test/libsolidity/syntaxTests/types/empty_tuple_event_050.sol,a()
benjaminion/solidity,test/libsolidity/syntaxTests/scoping/scoping_old.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/constructor/constructor_new.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/denominations/combining_hex_and_denomination_050.sol,""
benjaminion/solidity,test/compilationTests/gnosis/Tokens/EtherToken.sol,deposit();withdraw(uint value)
benjaminion/solidity,test/libsolidity/syntaxTests/structs/recursion/return_recursive_structs3.sol,f()
benjaminion/solidity,test/compilationTests/corion/announcementTypes.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/memberLookup/memory_structs_with_mappings.sol,f()
benjaminion/solidity,test/compilationTests/gnosis/Oracles/CentralizedOracleFactory.sol,createCentralizedOracle(bytes ipfsHash)
benjaminion/solidity,test/libsolidity/syntaxTests/more_than_256_declarationerrors.sol,f()
benjaminion/solidity,test/compilationTests/zeppelin/token/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
benjaminion/solidity,test/libsolidity/syntaxTests/modifiers/function_modifier_invocation.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/constructor/constructible_internal_constructor_new.sol,""
benjaminion/solidity,test/compilationTests/gnosis/Markets/Campaign.sol,fund(uint amount);refund();createMarket();closeMarket();withdrawFees()
benjaminion/solidity,test/libsolidity/syntaxTests/arrayLength/invalid_expression_2.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/functionTypes/internal_function_as_external_parameter.sol,f(function(uint)
benjaminion/solidity,test/libsolidity/syntaxTests/functionTypes/function_type_variable_external_internal.sol,fa(bytes memory)
benjaminion/solidity,test/libsolidity/syntaxTests/inheritance/disallow_modifier_style_without_parentheses.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_recursion_via_mapping.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/constants/mod_zero.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/inheritance/base_arguments_empty_parentheses_V050.sol,""
benjaminion/solidity,std/mortal.sol,kill()
benjaminion/solidity,test/compilationTests/gnosis/Oracles/UltimateOracle.sol,"setForwardedOutcome();challengeOutcome(int _outcome);voteForOutcome(int _outcome, uint amount);withdraw();isChallengePeriodOver();isFrontRunnerPeriodOver();isChallenged();isOutcomeSet();getOutcome()"
benjaminion/solidity,test/libsolidity/syntaxTests/scoping/name_shadowing.sol,f()
benjaminion/solidity,test/compilationTests/gnosis/Markets/Market.sol,"fund(uint _funding);close();withdrawFees();buy(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint maxCost);sell(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint minProfit);shortSell(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint minProfit);calcMarketFee(uint outcomeTokenCost)"
benjaminion/solidity,test/libsolidity/syntaxTests/functionTypes/function_type_arrays.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/inheritance/duplicated_constructor_call/base_multi.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/constructor/inconstructible_internal_constructor_inverted_old.sol,B();A(address a)
benjaminion/solidity,test/libsolidity/syntaxTests/modifiers/illegal_modifier_override.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/types/empty_tuple_event.sol,a()
benjaminion/solidity,test/libsolidity/syntaxTests/tight_packing_literals.sol,f();g();h();j();k()
benjaminion/solidity,test/compilationTests/gnosis/Markets/StandardMarketFactory.sol,"createMarket(Event eventContract, MarketMaker marketMaker, uint24 fee)"
benjaminion/solidity,test/libsolidity/syntaxTests/functionTypes/warn_function_type_parameters_with_names.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/arrayLength/cyclic_constant.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/inheritance/duplicated_constructor_call/base_V050.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/arrayLength/not_convertible_to_integer.sol,""
benjaminion/solidity,std/StandardToken.sol,"balanceOf(address _account);totalSupply();transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);doTransfer(address _from, address _to, uint _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
benjaminion/solidity,test/libsolidity/syntaxTests/arrayLength/array_length_cannot_be_constant_function_parameter.sol,f(uint constant LEN)
benjaminion/solidity,test/libsolidity/syntaxTests/functionTypes/function_type_constructor_local.sol,f()
benjaminion/solidity,test/compilationTests/corion/schelling.sol,"replaceOwner(address newOwner);schellingDB();getFunds(address _owner);setFunds(address _owner, uint256 _amount);getRound(uint256 _id);pushRound(uint256 _totalAboveWeight, uint256 _totalBelowWeight, uint256 _reward, uint256 _blockHeight, bool _voted);setRound(uint256 _id, uint256 _totalAboveWeight, uint256 _totalBelowWeight, uint256 _reward, uint256 _blockHeight, bool _voted);getCurrentRound();getVoter(address _owner);setVoter(address _owner, uint256 _roundID, bytes32 _hash, voterStatus _status, bool _voteResult, uint256 _rewards);getSchellingExpansion(uint256 _id);setSchellingExpansion(uint256 _id, uint256 _expansion);setCurrentSchellingRound(uint256 _id);getCurrentSchellingRound();replaceModule(address addr);transferEvent(address from, address to, uint256 value);getFunds(address addr);setFunds(address addr, uint256 amount);setVoter(address owner, _voter voter);getVoter(address addr);setRound(uint256 id, _rounds round);pushRound(_rounds round);getRound(uint256 id);getCurrentRound();setCurrentSchellingRound(uint256 id);getCurrentSchellingRound();setSchellingExpansion(uint256 id, uint256 amount);getSchellingExpansion(uint256 id);schelling(address _moduleHandler, address _db, bool _forReplace);configure(announcementType a, uint256 b);prepareVote(bytes32 votehash, uint256 roundID);sendVote(string vote);checkVote();getRewards(address beneficiary);checkReward();nextRound();addFunds(uint256 amount);getFunds();getCurrentSchellingRoundID();getSchellingRound(uint256 id);getRoundWeight(uint256 aboveW, uint256 belowW);isWinner(_rounds round, bool aboveVote);getTotalSupply();getTokenBalance(address addr)"
benjaminion/solidity,test/libsolidity/syntaxTests/arrayLength/invalid_expression_4.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/types/empty_tuple_lvalue.sol,f();a()
benjaminion/solidity,test/libsolidity/syntaxTests/types/bytes256.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/scoping/scoping_activation_old.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/denominations/fixed_point_division.sol,""
benjaminion/solidity,test/compilationTests/gnosis/Events/ScalarEvent.sol,redeemWinnings();getEventHash()
benjaminion/solidity,test/libsolidity/syntaxTests/types/rational_number_array_index_limit.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/constants/cyclic_dependency_3.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/constants/cyclic_dependency_4.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/functionTypes/payable_internal_function_type.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/literal_comparisons.sol,f(int8 x)
benjaminion/solidity,test/libsolidity/syntaxTests/parsing/return_var.sol,f();f();f();f();f();f();f();f()
benjaminion/solidity,test/libsolidity/syntaxTests/specialFunctions/types_with_unspecified_encoding_special_types.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/denominations/deprecated_year_050.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/constructor/overriding_constructor.sol,A();A()
benjaminion/solidity,test/libsolidity/syntaxTests/literalOperations/division_by_zero_complex.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/types/rational_number_mul_limit.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/functionTypes/external_function_to_function_type_calldata_parameter.sol,f(function(bytes memory);callback(bytes);g()
benjaminion/solidity,test/libsolidity/syntaxTests/functionTypes/call_value_on_non_payable_function_type.sol,f()
benjaminion/solidity,std/Token.sol,"totalSupply();balanceOf(address _owner);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
benjaminion/solidity,test/libsolidity/syntaxTests/functionTypes/call_value_on_payable_function_type.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/scoping/double_variable_declaration_disjoint_scope_050.sol,f()
benjaminion/solidity,test/compilationTests/gnosis/Oracles/MajorityOracle.sol,MajorityOracle(Oracle[] _oracles);getStatusAndOutcome();isOutcomeSet();getOutcome()
benjaminion/solidity,test/libsolidity/syntaxTests/structs/recursion/parallel_structs.sol,addTestStruct(TestStruct)
benjaminion/solidity,test/libsolidity/syntaxTests/natspec/docstring_empty_description.sol,vote(uint id)
benjaminion/solidity,test/libsolidity/syntaxTests/tight_packing_literals_fine.sol,f();g();h();j();k();l()
benjaminion/solidity,test/compilationTests/zeppelin/ownership/HasNoEther.sol,HasNoEther();reclaimEther()
benjaminion/solidity,test/libsolidity/syntaxTests/functionTypes/function_type_parameter.sol,f(function(uint)
benjaminion/solidity,test/libsolidity/syntaxTests/arrayLength/tuples.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/arrayLength/pure_functions.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/denominations/deprecated_year.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/natspec/docstring_empty_tag.sol,vote(uint id)
benjaminion/solidity,test/compilationTests/MultiSigWallet/TestToken.sol,"issueTokens(address _to, uint256 _value);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);balanceOf(address _owner)"
benjaminion/solidity,test/compilationTests/zeppelin/lifecycle/Destructible.sol,Destructible();destroy();destroyAndSend(address _recipient)
benjaminion/solidity,test/libsolidity/syntaxTests/scoping/double_variable_declaration_disjoint_scope_activation.sol,f()
benjaminion/solidity,test/compilationTests/zeppelin/ownership/DelayedClaimable.sol,"setLimits(uint256 _start, uint256 _end);claimOwnership()"
benjaminion/solidity,test/libsolidity/syntaxTests/arrayLength/too_large.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/modifiers/base_constructor_double_invocation.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/scoping/scoping.sol,f()
benjaminion/solidity,test/compilationTests/zeppelin/MultisigWallet.sol,"MultisigWallet(address[] _owners, uint256 _required, uint256 _daylimit);destroy(address _to);execute(address _to, uint256 _value, bytes _data);confirm(bytes32 _h);setDailyLimit(uint256 _newLimit);resetSpentToday();clearPending()"
benjaminion/solidity,test/libsolidity/syntaxTests/functionTypes/function_types_internal_visibility_error.sol,""
benjaminion/solidity,test/compilationTests/zeppelin/ownership/Contactable.sol,setContactInformation(string info)
benjaminion/solidity,test/libsolidity/syntaxTests/scoping/scoping_for3.sol,f()
benjaminion/solidity,test/compilationTests/gnosis/Oracles/DifficultyOracleFactory.sol,createDifficultyOracle(uint blockNumber)
benjaminion/solidity,test/compilationTests/zeppelin/LimitBalance.sol,LimitBalance(uint256 _limit)
benjaminion/solidity,test/libsolidity/syntaxTests/memberLookup/failed_function_lookup_in_library.sol,"f(uint, uint);f(uint);g()"
benjaminion/solidity,test/libsolidity/syntaxTests/inheritance/base_arguments_no_parentheses.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/constructor/constructible_internal_constructor_old.sol,C();D()
benjaminion/solidity,test/libsolidity/syntaxTests/constructor/two_constructors_new.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/functionTypes/external_function_type_returning_internal.sol,""
benjaminion/solidity,test/compilationTests/corion/owned.sol,replaceOwner(address newOwner);isOwner()
benjaminion/solidity,test/compilationTests/MultiSigWallet/MultiSigWalletFactory.sol,"create(address[] _owners, uint _required)"
benjaminion/solidity,test/libsolidity/syntaxTests/memberLookup/push_on_memory_types.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/functionTypes/function_types_variable_visibility.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/specialFunctions/abi_encode_structs.sol,f();g()
benjaminion/solidity,test/libsolidity/syntaxTests/scoping/double_variable_declaration_disjoint_scope.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/constructor/constructor_without_implementation_old.sol,C()
benjaminion/solidity,test/compilationTests/corion/token.sol,"receiveCorionToken(address, uint256, bytes);approvedCorionToken(address, uint256, bytes);replaceModule(address addr);token(bool forReplace, address moduleHandler, address dbAddr, address icoContractAddr, address exchangeContractAddress, address[] genesisAddr, uint256[] genesisValue);closeIco();approve(address spender, uint256 amount, uint256 nonce);approveAndCall(address spender, uint256 amount, uint256 nonce, bytes extraData);_approve(address spender, uint256 amount, uint256 nonce);allowance(address owner, address spender);transfer(address to, uint256 amount);transferFrom(address from, address to, uint256 amount);transferFromByModule(address from, address to, uint256 amount, bool fee);transfer(address to, uint256 amount, bytes extraData);_transferToContract(address from, address to, uint256 amount, bytes extraData);_transfer(address from, address to, uint256 amount, bool fee);processTransactionFee(address owner, uint256 value);_processTransactionFee(address owner, uint256 value);getTransactionFee(uint256 value);mint(address owner, uint256 value);_mint(address owner, uint256 value);burn(address owner, uint256 value);_burn(address owner, uint256 value);isContract(address addr);balanceOf(address owner);totalSupply();configure(announcementType aType, uint256 value)"
benjaminion/solidity,test/compilationTests/corion/ico.sol,"ico(address foundation, address priceSet, uint256 exchangeRate, uint256 startBlockNum, address[] genesisAddr, uint256[] genesisValue);ICObonus();setInterestDB(address addr, uint256 balance);checkInterest(address addr);getInterest(address beneficiary);setICOEthPrice(uint256 value);extendICO();closeICO();abortICO();connectTokens(address tokenContractAddr, address premiumContractAddr);receiveFunds();buy(address beneficiaryAddress, address affilateAddress);checkPremium(address owner);getIcoReward(uint256 value);isICO()"
benjaminion/solidity,test/compilationTests/MultiSigWallet/MultiSigWalletWithDailyLimit.sol,"MultiSigWalletWithDailyLimit(address[] _owners, uint _required, uint _dailyLimit);changeDailyLimit(uint _dailyLimit);executeTransaction(uint transactionId);isUnderLimit(uint amount);calcMaxWithdraw()"
benjaminion/solidity,test/compilationTests/gnosis/Events/CategoricalEvent.sol,redeemWinnings();getEventHash()
benjaminion/solidity,test/libsolidity/syntaxTests/types/rational_number_div_limit.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/types/bytes33.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/types/bytesm.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/constructor/constructor_state_mutability_new.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/modifiers/function_modifier_double_invocation.sol,f(uint x)
benjaminion/solidity,test/compilationTests/gnosis/Migrations.sol,Migrations();setCompleted(uint completed);upgrade(address new_address)
benjaminion/solidity,test/libsolidity/syntaxTests/constants/pure_non_rational.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/specialFunctions/types_with_unspecified_encoding_structs_abiv2.sol,f()
benjaminion/solidity,test/compilationTests/gnosis/Markets/CampaignFactory.sol,""
benjaminion/solidity,test/compilationTests/gnosis/Events/EventFactory.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/constructor/interface_constructor_old.sol,I()
benjaminion/solidity,test/libsolidity/syntaxTests/specialFunctions/types_with_unspecified_encoding_internal_functions.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/structs/recursion/multi_struct_composition.sol,f(T)
benjaminion/solidity,test/libsolidity/syntaxTests/empty_struct_050.sol,""
benjaminion/solidity,test/compilationTests/zeppelin/ownership/Claimable.sol,transferOwnership(address newOwner);claimOwnership()
benjaminion/solidity,test/libsolidity/syntaxTests/modifiers/modifier_returns_value.sol,f(uint a)
benjaminion/solidity,test/libsolidity/syntaxTests/inheritance/base_arguments_empty_parentheses.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/types/rational_number_literal_limit_2.sol,bignum()
benjaminion/solidity,test/libsolidity/syntaxTests/functionTypes/delete_function_type_invalid.sol,f()
benjaminion/solidity,test/compilationTests/gnosis/Oracles/SignedMessageOracleFactory.sol,"createSignedMessageOracle(bytes32 descriptionHash, uint8 v, bytes32 r, bytes32 s)"
benjaminion/solidity,test/libsolidity/syntaxTests/functionTypes/public_function_type.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/constants/cyclic_dependency_2.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/smoke_test.sol,fun(uint256 arg1)
benjaminion/solidity,test/libsolidity/syntaxTests/functionTypes/external_function_type_taking_internal.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/constructor/constructor_visibility_old.sol,A(string s);f()
benjaminion/solidity,test/libsolidity/syntaxTests/more_than_256_syntaxerrors.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/constructor/constructor_without_implementation_new.sol,""
benjaminion/solidity,test/compilationTests/zeppelin/payment/PullPayment.sol,"asyncSend(address dest, uint256 amount);withdrawPayments()"
benjaminion/solidity,test/libsolidity/syntaxTests/arrayLength/invalid_expression_1.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/double_stateVariable_declaration.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/viewPure/view_pure_abi_encode.sol,f()
benjaminion/solidity,test/compilationTests/MultiSigWallet/Factory.sol,getInstantiationCount(address creator);register(address instantiation)
benjaminion/solidity,test/libsolidity/syntaxTests/parsing/constructor_allowed_this.sol,a();b(address);f();g(C)
benjaminion/solidity,test/libsolidity/syntaxTests/modifiers/function_modifier_invocation_parameters.sol,f(uint8 a)
benjaminion/solidity,test/libsolidity/syntaxTests/modifiers/modifiers_on_abstract_functions_050.sol,foo();bar()
benjaminion/solidity,test/libsolidity/syntaxTests/constructor/two_constructors_old.sol,test(uint a);test()
benjaminion/solidity,test/libsolidity/syntaxTests/structs/recursion/return_recursive_structs.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/literalOperations/division_by_zero.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/literalOperations/mod_zero.sol,""
benjaminion/solidity,test/compilationTests/gnosis/Oracles/SignedMessageOracle.sol,"SignedMessageOracle(bytes32 _descriptionHash, uint8 v, bytes32 r, bytes32 s);replaceSigner(address newSigner, uint _nonce, uint8 v, bytes32 r, bytes32 s);setOutcome(int _outcome, uint8 v, bytes32 r, bytes32 s);isOutcomeSet();getOutcome()"
benjaminion/solidity,test/libsolidity/syntaxTests/functionTypes/external_function_type_to_address.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/inheritance/duplicated_constructor_call/ancestor_V050.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/denominations/denominations.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/inheritance/duplicated_constructor_call/base_multi_no_constructor_modifier_style.sol,""
benjaminion/solidity,test/compilationTests/corion/multiOwner.sol,"multiOwner(address[] newOwners);insertOwner(address addr);dropOwner(address addr);cancelDo(bytes32 doHash);ownersForChange();calcDoHash(string job, bytes32 data);validDoHash(bytes32 doHash);insertAndCheckDo(bytes32 doHash);_addOwner(address addr);_delOwner(address addr)"
benjaminion/solidity,test/libsolidity/syntaxTests/constructor/returns_in_constructor_new.sol,""
benjaminion/solidity,test/compilationTests/zeppelin/token/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
benjaminion/solidity,test/compilationTests/zeppelin/lifecycle/Pausable.sol,pause();unpause()
benjaminion/solidity,test/libsolidity/syntaxTests/functionTypes/internal_function_returned_from_public_function.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/constructor/external_constructor_old.sol,test()
benjaminion/solidity,test/libsolidity/syntaxTests/specialFunctions/abi_encode_structs_abiv2.sol,f();g()
benjaminion/solidity,test/libsolidity/syntaxTests/functionTypes/private_function_type.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/functionTypes/delete_external_function_type_invalid.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/modifiers/constructor_call_invalid_arg_count.sol,""
benjaminion/solidity,test/compilationTests/zeppelin/lifecycle/Migrations.sol,setCompleted(uint256 completed);upgrade(address newAddress)
benjaminion/solidity,test/libsolidity/syntaxTests/arrayLength/inline_array.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/modifiers/legal_modifier_override.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/types/empty_tuple_function.sol,f();a()
benjaminion/solidity,test/libsolidity/syntaxTests/arrayLength/parentheses.sol,""
benjaminion/solidity,test/compilationTests/corion/safeMath.sol,"safeAdd(uint256 a, uint256 b);safeSub(uint256 a, uint256 b)"
benjaminion/solidity,test/libsolidity/syntaxTests/functionTypes/external_function_type_to_uint.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/arrayLength/const_cannot_be_fractional.sol,""
benjaminion/solidity,test/compilationTests/gnosis/Tokens/Token.sol,"transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value);balanceOf(address owner);allowance(address owner, address spender);totalSupply()"
benjaminion/solidity,test/compilationTests/zeppelin/token/PausableToken.sol,"transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value)"
benjaminion/solidity,test/libsolidity/syntaxTests/modifiers/function_overrides_modifier.sol,mod(uint a)
benjaminion/solidity,test/compilationTests/zeppelin/crowdsale/Crowdsale.sol,"Crowdsale(uint256 _startBlock, uint256 _endBlock, uint256 _rate, address _wallet);createTokenContract();buyTokens(address beneficiary);forwardFunds();validPurchase();hasEnded()"
benjaminion/solidity,test/compilationTests/zeppelin/crowdsale/RefundVault.sol,RefundVault(address _wallet);deposit(address investor);close();enableRefunds();refund(address investor)
benjaminion/solidity,test/libsolidity/syntaxTests/functionTypes/function_type_constructor.sol,""
benjaminion/solidity,test/compilationTests/gnosis/Markets/MarketFactory.sol,"createMarket(Event eventContract, MarketMaker marketMaker, uint24 fee)"
benjaminion/solidity,test/libsolidity/syntaxTests/arrayLength/complex_cyclic_constant.sol,f()
benjaminion/solidity,test/compilationTests/zeppelin/token/VestedToken.sol,"revokeTokenGrant(address _holder, uint256 _grantId);transferableTokens(address holder, uint64 time);tokenGrantsCount(address _holder);tokenGrant(address _holder, uint256 _grantId);vestedTokens(TokenGrant grant, uint64 time);nonVestedTokens(TokenGrant grant, uint64 time);lastTokenIsTransferableDate(address holder)"
benjaminion/solidity,test/libsolidity/syntaxTests/modifiers/function_modifier_invocation_local_variables.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/double_variable_declaration.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/constants/addmod_zero.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/functionTypes/valid_function_type_variables.sol,fa(uint);fb(uint);fc(uint);fd(uint);fe(uint);ff(uint);fg(uint);fh(uint)
benjaminion/solidity,test/compilationTests/gnosis/Oracles/FutarchyOracleFactory.sol,FutarchyOracleFactory(EventFactory _eventFactory)
benjaminion/solidity,test/libsolidity/syntaxTests/functionTypes/function_type_internal_public_variable.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/inheritance/base_arguments_multiple_inheritance.sol,""
benjaminion/solidity,test/compilationTests/gnosis/Tokens/OutcomeToken.sol,"OutcomeToken();issue(address _for, uint outcomeTokenCount);revoke(address _for, uint outcomeTokenCount)"
benjaminion/solidity,test/compilationTests/gnosis/Oracles/MajorityOracleFactory.sol,createMajorityOracle(Oracle[] oracles)
benjaminion/solidity,test/compilationTests/corion/moduleHandler.sol,"connectModule();disconnectModule();replaceModule(address addr);disableModule(bool forever);isActive();replaceModuleHandler(address newHandler);transferEvent(address from, address to, uint256 value);newSchellingRoundEvent(uint256 roundID, uint256 reward);moduleHandler(address[] newOwners);load(address foundation, bool forReplace, address Token, address Premium, address Publisher, address Schelling, address Provider);addModule(modules_s input, bool call);getModuleAddressByName(string name);getModuleIDByHash(bytes32 hashOfName);getModuleIDByName(string name);getModuleIDByAddress(address addr);replaceModule(string name, address addr, bool callCallback);callReplaceCallback(string moduleName, address newModule);newModule(string name, address addr, bool schellingEvent, bool transferEvent);dropModule(string name, bool callCallback);callDisableCallback(string moduleName);broadcastTransfer(address from, address to, uint256 value);broadcastSchellingRound(uint256 roundID, uint256 reward);replaceModuleHandler(address newHandler);balanceOf(address owner);totalSupply();isICO();getCurrentSchellingRoundID();mint(address to, uint256 value);transfer(address from, address to, uint256 value, bool fee);processTransactionFee(address from, uint256 value);burn(address from, uint256 value);configureModule(string moduleName, announcementType aType, uint256 value);freezing(bool forever)"
benjaminion/solidity,test/compilationTests/gnosis/Events/Event.sol,"Event(Token _collateralToken, Oracle _oracle, uint8 outcomeCount);buyAllOutcomes(uint collateralTokenCount);sellAllOutcomes(uint outcomeTokenCount);setOutcome();getOutcomeCount();getOutcomeTokens();getOutcomeTokenDistribution(address owner);getEventHash();redeemWinnings()"
benjaminion/solidity,test/compilationTests/zeppelin/token/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
benjaminion/solidity,test/libsolidity/syntaxTests/parsing/var_storage_var.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/parsing/missing_variable_name_in_declaration.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/constants/cyclic_dependency_1.sol,""
benjaminion/solidity,test/compilationTests/corion/publisher.sol,"transferEvent(address from, address to, uint256 value);publisher(address moduleHandler);Announcements(uint256 id);checkOpposited(uint256 weight, bool oppositable);newAnnouncement(announcementType Type, string Announcement, string Link, bool Oppositable, string _str, uint256 _uint, address _addr);closeAnnouncement(uint256 id);oppositeAnnouncement(uint256 id);invalidateAnnouncement(uint256 id);checkICO()"
benjaminion/solidity,test/libsolidity/syntaxTests/types/empty_tuple_function_050.sol,f();a()
benjaminion/solidity,test/compilationTests/MultiSigWallet/MultiSigWalletWithDailyLimitFactory.sol,"create(address[] _owners, uint _required, uint _dailyLimit)"
benjaminion/solidity,test/libsolidity/syntaxTests/functionCalls/arbitrary_parameters_but_restricted_first_type.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/constructor/constructor_visibility_new.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/inheritance/duplicated_constructor_call/ancestor.sol,""
benjaminion/solidity,test/compilationTests/zeppelin/ownership/Ownable.sol,Ownable();transferOwnership(address newOwner)
benjaminion/solidity,test/compilationTests/zeppelin/ownership/HasNoTokens.sol,"tokenFallback(address from_, uint256 value_, bytes data_);reclaimToken(address tokenAddr)"
benjaminion/solidity,test/libsolidity/syntaxTests/types/rational_number_literal_limit_1.sol,bignum()
benjaminion/solidity,test/libsolidity/syntaxTests/scoping/scoping_activation.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/arrayLength/invalid_expression_5.sol,""
benjaminion/solidity,test/compilationTests/zeppelin/Bounty.sol,createTarget();deployContract();claim(Target target);checkInvariant()
benjaminion/solidity,test/compilationTests/gnosis/Oracles/FutarchyOracle.sol,fund(uint funding);close();setOutcome();isOutcomeSet();getOutcome()
benjaminion/solidity,test/libsolidity/syntaxTests/constants/division_by_zero.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/inheritance/duplicated_constructor_call/base.sol,""
benjaminion/solidity,test/compilationTests/gnosis/MarketMakers/LMSRMarketMaker.sol,"calcCost(Market market, uint8 outcomeTokenIndex, uint outcomeTokenCount);calcProfit(Market market, uint8 outcomeTokenIndex, uint outcomeTokenCount);calcMarginalPrice(Market market, uint8 outcomeTokenIndex);calcCostLevel(int logN, int[] netOutcomeTokensSold, uint funding);sumExpOffset(int logN, int[] netOutcomeTokensSold, uint funding, uint8 outcomeIndex);getNetOutcomeTokensSold(Market market)"
benjaminion/solidity,test/libsolidity/syntaxTests/arrayLength/can_be_recursive_constant.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/constructor_this.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/scoping/scoping_self_use_050.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/deprecated_functions.sol,f();g()
benjaminion/solidity,test/libsolidity/syntaxTests/constants/addmod_mulmod_rational.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/types/bytes_to_contract.sol,f()
benjaminion/solidity,test/compilationTests/gnosis/Oracles/UltimateOracleFactory.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/arrayLength/constant_var.sol,""
benjaminion/solidity,test/compilationTests/zeppelin/DayLimit.sol,DayLimit(uint256 _limit);_setDailyLimit(uint256 _newLimit);_resetSpentToday();underLimit(uint256 _value);today()
benjaminion/solidity,test/libsolidity/syntaxTests/scoping/scoping_for2.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/scoping/scoping_self_use.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/parsing/var_in_function_arguments.sol,"f(var);f(var x);f(var x, var y);f(uint x, var y);f(var x, uint y);f(var storage);f(var storage x);f(var storage x, var storage y)"
benjaminion/solidity,test/libsolidity/syntaxTests/constructor/inconstructible_internal_constructor_old.sol,C();f()
benjaminion/solidity,test/libsolidity/syntaxTests/inheritance/duplicated_constructor_call/base_multi_no_constructor.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/constructor/constructor_old.sol,A()
benjaminion/solidity,test/libsolidity/syntaxTests/constructor/inconstructible_internal_constructor_new.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/signed_rational_modulus.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/constructor/constructor_state_mutability_old.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_indirectly_recursive.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/constructor/function_named_constructor.sol,constructor()
benjaminion/solidity,test/libsolidity/syntaxTests/modifiers/modifier_without_underscore.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/functionTypes/payable_internal_function_type_is_not_fatal.sol,g()
benjaminion/solidity,test/compilationTests/gnosis/MarketMakers/MarketMaker.sol,"calcCost(Market market, uint8 outcomeTokenIndex, uint outcomeTokenCount);calcProfit(Market market, uint8 outcomeTokenIndex, uint outcomeTokenCount);calcMarginalPrice(Market market, uint8 outcomeTokenIndex)"
benjaminion/solidity,test/compilationTests/gnosis/Tokens/StandardToken.sol,"transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value);allowance(address owner, address spender);balanceOf(address owner);totalSupply()"
benjaminion/solidity,test/libsolidity/syntaxTests/types/rational_number_bitshift_limit.sol,f()
benjaminion/solidity,std/owned.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/visibility/external_library_function.sol,f(uint);f()
benjaminion/solidity,test/libsolidity/syntaxTests/parsing/smoke_test.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/inheritance/too_few_base_arguments.sol,""
benjaminion/solidity,test/compilationTests/zeppelin/token/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
benjaminion/solidity,test/compilationTests/corion/module.sol,"transfer(address from, address to, uint256 value, bool fee);balanceOf(address owner);disableModule(bool forever);_disableModule(bool forever);replaceModuleHandler(address newModuleHandlerAddress);_replaceModuleHandler(address newModuleHandlerAddress);connectModule();_connectModule();disconnectModule();_disconnectModule();replaceModule(address newModuleAddress);_replaceModule(address newModuleAddress);transferEvent(address from, address to, uint256 value);newSchellingRoundEvent(uint256 roundID, uint256 reward);registerModuleHandler(address _moduleHandlerAddress);isModuleHandler(address addr);isActive()"
benjaminion/solidity,test/compilationTests/stringutils/strings.sol,"memcpy(uint dest, uint src, uint len);toSlice(string self);len(bytes32 self);copy(slice self);toString(slice self);len(slice self);empty(slice self);compare(slice self, slice other);equals(slice self, slice other);nextRune(slice self, slice rune);nextRune(slice self);ord(slice self);keccak(slice self);startsWith(slice self, slice needle);beyond(slice self, slice needle);endsWith(slice self, slice needle);until(slice self, slice needle);findPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);rfindPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);find(slice self, slice needle);rfind(slice self, slice needle);split(slice self, slice needle, slice token);split(slice self, slice needle);rsplit(slice self, slice needle, slice token);rsplit(slice self, slice needle);count(slice self, slice needle);contains(slice self, slice needle);concat(slice self, slice other);join(slice self, slice[] parts)"
benjaminion/solidity,test/compilationTests/zeppelin/crowdsale/CappedCrowdsale.sol,CappedCrowdsale(uint256 _cap);validPurchase();hasEnded()
benjaminion/solidity,test/compilationTests/zeppelin/ownership/Multisig.sol,"changeOwner(address _from, address _to);execute(address _to, uint256 _value, bytes _data);confirm(bytes32 _h)"
benjaminion/solidity,test/libsolidity/syntaxTests/parsing/constructor_super.sol,x()
benjaminion/solidity,test/libsolidity/syntaxTests/constructor/library_constructor_old.sol,Lib()
benjaminion/solidity,test/libsolidity/syntaxTests/tight_packing_literals_050.sol,f();g();h();j();k()
benjaminion/solidity,test/libsolidity/syntaxTests/specialFunctions/types_without_encoding_problems.sol,f()
benjaminion/solidity,test/compilationTests/gnosis/Markets/StandardMarket.sol,"StandardMarket(address _creator, Event _eventContract, MarketMaker _marketMaker, uint24 _fee);fund(uint _funding);close();withdrawFees();buy(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint maxCost);sell(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint minProfit);shortSell(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint minProfit);calcMarketFee(uint outcomeTokenCost)"
benjaminion/solidity,test/compilationTests/corion/premium.sol,"receiveCorionPremiumToken(address, uint256, bytes);approvedCorionPremiumToken(address, uint256, bytes);replaceModule(address addr);premium(bool forReplace, address moduleHandler, address dbAddress, address icoContractAddr, address[] genesisAddr, uint256[] genesisValue);closeIco();approve(address spender, uint256 amount, uint256 nonce);approveAndCall(address spender, uint256 amount, uint256 nonce, bytes extraData);_approve(address spender, uint256 amount, uint256 nonce);allowance(address owner, address spender);transfer(address to, uint256 amount);transferFrom(address from, address to, uint256 amount);transfer(address to, uint256 amount, bytes extraData);transferToContract(address from, address to, uint256 amount, bytes extraData);_transfer(address from, address to, uint256 amount);mint(address owner, uint256 value);_mint(address owner, uint256 value);isContract(address addr);balanceOf(address owner);totalSupply()"
benjaminion/solidity,test/compilationTests/zeppelin/token/SimpleToken.sol,SimpleToken()
benjaminion/solidity,test/libsolidity/syntaxTests/viewPure/view_pure_abi_encode_arguments.sol,gView();gNonPayable();check()
benjaminion/solidity,test/libsolidity/syntaxTests/deprecated_functions_050.sol,f();g()
benjaminion/solidity,test/libsolidity/syntaxTests/constants/mulmod_zero.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/arrayLength/cannot_be_function_call.sol,f(uint x)
benjaminion/solidity,test/libsolidity/syntaxTests/constructor/two_constructors_mixed.sol,test(uint)
benjaminion/solidity,test/libsolidity/syntaxTests/specialFunctions/types_with_unspecified_encoding_structs.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/functionTypes/function_type_returned.sol,f()
benjaminion/solidity,test/compilationTests/zeppelin/ReentrancyGuard.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/constructor/returns_in_constructor_old.sol,test()
benjaminion/solidity,test/compilationTests/MultiSigWallet/MultiSigWallet.sol,"MultiSigWallet(address[] _owners, uint _required);addOwner(address owner);removeOwner(address owner);replaceOwner(address owner, address newOwner);changeRequirement(uint _required);submitTransaction(address destination, uint value, bytes data);confirmTransaction(uint transactionId);revokeConfirmation(uint transactionId);executeTransaction(uint transactionId);isConfirmed(uint transactionId);addTransaction(address destination, uint value, bytes data);getConfirmationCount(uint transactionId);getTransactionCount(bool pending, bool executed);getOwners();getConfirmations(uint transactionId);getTransactionIds(uint from, uint to, bool pending, bool executed)"
benjaminion/solidity,test/libsolidity/syntaxTests/inheritance/allow_empty_duplicated_super_constructor_call.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/functionTypes/internal_function_type_to_address.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/types/empty_tuple_lvalue_array.sol,f();a()
benjaminion/solidity,test/libsolidity/syntaxTests/structs/recursion/return_recursive_structs2.sol,f()
benjaminion/solidity,test/compilationTests/corion/provider.sol,"connectModule();transferEvent(address from, address to, uint256 value);newSchellingRoundEvent(uint256 roundID, uint256 reward);provider(address _moduleHandler);configure(announcementType a, uint256 b);getUserDetails(address addr, uint256 schellingRound);rightForInterest(uint256 value, bool priv);setRightForInterest(uint256 oldValue, uint256 newValue, bool priv);checkCorrectRate(bool priv, uint8 rate);createProvider(bool priv, string name, string website, string country, string info, uint8 rate, bool isForRent, address admin);setProviderDetails(address addr, string website, string country, string info, uint8 rate, address admin);getProviderInfo(address addr, uint256 height);getProviderDetails(address addr, uint256 height);getProviderCurrentSupply(address addr);closeProvider();allowUsers(address provider, address[] addr);disallowUsers(address provider, address[] addr);joinProvider(address provider);partProvider();checkReward(address addr);getReward(address beneficiary, uint256 limit, address provider);getClientReward(uint256 limit);getProviderReward(address addr, uint256 limit);checkFloatingSupply(address providerAddress, uint256 providerHeight, bool neg, uint256 value);checkFloatingOwnSupply(address providerAddress, uint256 providerHeight, bool neg, uint256 value);TEMath(uint256 a, uint256 b, bool neg);transferEvent_(address addr, uint256 value, bool neg);getTokenBalance(address addr);checkICO()"
benjaminion/solidity,test/libsolidity/syntaxTests/arrayLength/cannot_be_function.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/arrayLength/invalid_expression_3.sol,""
benjaminion/solidity,test/compilationTests/zeppelin/token/LimitedTransferToken.sol,"transferableTokens(address holder, uint64 time);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);transferableTokens(address holder, uint64 time)"
benjaminion/solidity,test/libsolidity/syntaxTests/functionTypes/external_function_type_public_variable.sol,g(uint);f()
benjaminion/solidity,test/libsolidity/syntaxTests/scoping/scoping_for.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/modifiers/modifier_overrides_function.sol,mod(uint a)
benjaminion/solidity,test/compilationTests/gnosis/Oracles/Oracle.sol,isOutcomeSet();getOutcome()
benjaminion/solidity,test/libsolidity/syntaxTests/arrayLength/can_be_constant_in_function.sol,f()
benjaminion/solidity,test/compilationTests/zeppelin/ownership/NoOwner.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/constructor/constructor_old_050.sol,A()
benjaminion/solidity,test/compilationTests/corion/tokenDB.sol,"increase(address owner, uint256 value);decrease(address owner, uint256 value);setAllowance(address owner, address spender, uint256 amount, uint256 nonce);getAllowance(address owner, address spender)"
benjaminion/solidity,test/libsolidity/syntaxTests/types/empty_tuple_lvalue_050.sol,f();a()
benjaminion/solidity,test/compilationTests/zeppelin/ownership/Shareable.sol,"Shareable(address[] _owners, uint256 _required);revoke(bytes32 _operation);getOwner(uint256 ownerIndex);isOwner(address _addr);hasConfirmed(bytes32 _operation, address _owner);confirmAndCheck(bytes32 _operation);clearPending()"
benjaminion/solidity,test/libsolidity/syntaxTests/functionTypes/warn_function_type_return_parameters_with_names.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/empty_struct.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/scoping/double_function_declaration.sol,fun();fun()
benjaminion/solidity,test/libsolidity/syntaxTests/functionTypes/delete_function_type.sol,f()
benjaminion/solidity,test/compilationTests/zeppelin/crowdsale/RefundableCrowdsale.sol,RefundableCrowdsale(uint256 _goal);forwardFunds();claimRefund();finalization();goalReached()
benjaminion/solidity,test/libsolidity/syntaxTests/types/bytes0.sol,""
benjaminion/solidity,test/compilationTests/zeppelin/lifecycle/TokenDestructible.sol,TokenDestructible();destroy(address[] tokens)
benjaminion/solidity,test/libsolidity/syntaxTests/modifiers/function_modifier_invocation_local_variables050.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/constructor/external_constructor_new.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/constructor/inconstructible_internal_constructor_inverted_new.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_directly_recursive.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/scoping/double_variable_declaration_disjoint_scope_activation_050.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/denominations/combining_hex_and_denomination.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/modifiers/modifiers_on_abstract_functions_no_parser_error.sol,foo();bar()
benjaminion/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_not_really_recursive.sol,""
benjaminion/solidity,test/compilationTests/zeppelin/crowdsale/FinalizableCrowdsale.sol,finalize();finalization()
benjaminion/solidity,test/libsolidity/syntaxTests/constants/mod_div_rational.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/double_variable_declaration_050.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/memberLookup/failed_function_lookup.sol,"f(uint, uint);f(uint);g()"
benjaminion/solidity,test/compilationTests/zeppelin/ownership/HasNoContracts.sol,reclaimContract(address contractAddr)
benjaminion/solidity,test/libsolidity/syntaxTests/literalOperations/mod_zero_complex.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/arrayLength/non_integer_constant_var.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/modifiers/invalid_function_modifier_type.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/virtualLookup/modifiers_in_libraries.sol,withMod(uint self);f(uint _value)
benjaminion/solidity,test/compilationTests/zeppelin/token/MintableToken.sol,"mint(address _to, uint256 _amount);finishMinting()"
benjaminion/solidity,test/libsolidity/syntaxTests/empty_string_var.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/types/rational_number_exp_limit.sol,f()
benjaminion/solidity,test/libsolidity/syntaxTests/specialFunctions/types_with_unspecified_encoding_types.sol,f()
benjaminion/solidity,test/compilationTests/gnosis/Oracles/DifficultyOracle.sol,DifficultyOracle(uint _blockNumber);setOutcome();isOutcomeSet();getOutcome()
benjaminion/solidity,test/libsolidity/syntaxTests/functionTypes/function_type.sol,f()
benjaminion/solidity,test/compilationTests/gnosis/Oracles/CentralizedOracle.sol,"CentralizedOracle(address _owner, bytes _ipfsHash);replaceOwner(address newOwner);setOutcome(int _outcome);isOutcomeSet();getOutcome()"
benjaminion/solidity,test/libsolidity/syntaxTests/arrayLength/can_be_constant_in_struct.sol,""
benjaminion/solidity,test/libsolidity/syntaxTests/scoping/scoping_for_decl_in_body.sol,f()
benjaminion/solidity,test/compilationTests/milestonetracker/MilestoneTracker.sol,numberOfMilestones();changeArbitrator(address _newArbitrator);changeDonor(address _newDonor);changeRecipient(address _newRecipient);unproposeMilestones();markMilestoneComplete(uint _idMilestone);approveCompletedMilestone(uint _idMilestone);rejectMilestone(uint _idMilestone);cancelMilestone(uint _idMilestone);arbitrateCancelCampaign();authorizePayment(uint _idMilestone)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solium/test/lib/rules/array-declarations/unfixed/ws-btw-lit-op.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solium/test/lib/rules/array-declarations/unfixed/ws-btw-lit-op.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solium/test/lib/rules/array-declarations/unfixed/ws-btw-lit-op.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solium/test/lib/rules/array-declarations/unfixed/ws-btw-lit-op.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solium/test/lib/rules/array-declarations/unfixed/ws-btw-lit-op.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solium/test/lib/rules/imports-on-top/reject/intermingled.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solium/test/lib/rules/imports-on-top/reject/intermingled.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solium/test/lib/rules/imports-on-top/reject/intermingled.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solium/test/lib/rules/imports-on-top/reject/intermingled.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solium/test/lib/rules/imports-on-top/reject/intermingled.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solium/test/lib/rules/indentation/reject/config-default.sol,singleLineWrong();firstLineWrong();secondLineWrong();thirdLineWrong();allLinesWrong();chainedFunctions();abstractFunc();abstractFunc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solium/test/lib/rules/indentation/reject/config-default.sol,singleLineWrong();firstLineWrong();secondLineWrong();thirdLineWrong();allLinesWrong();chainedFunctions();abstractFunc();abstractFunc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solium/test/lib/rules/indentation/reject/config-default.sol,singleLineWrong();firstLineWrong();secondLineWrong();thirdLineWrong();allLinesWrong();chainedFunctions();abstractFunc();abstractFunc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solium/test/lib/rules/indentation/reject/config-default.sol,singleLineWrong();firstLineWrong();secondLineWrong();thirdLineWrong();allLinesWrong();chainedFunctions();abstractFunc();abstractFunc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solium/test/lib/rules/indentation/reject/config-default.sol,singleLineWrong();firstLineWrong();secondLineWrong();thirdLineWrong();allLinesWrong();chainedFunctions();abstractFunc();abstractFunc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/Issues/Issue355.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/Issues/Issue355.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/Issues/Issue355.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/Issues/Issue355.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/Issues/Issue355.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solium/test/lib/rules/indentation/reject/chars-before-top-level.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solium/test/lib/rules/indentation/reject/chars-before-top-level.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solium/test/lib/rules/indentation/reject/chars-before-top-level.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solium/test/lib/rules/indentation/reject/chars-before-top-level.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solium/test/lib/rules/indentation/reject/chars-before-top-level.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/Parentheses/BitAndNoParentheses.sol,"bitAndAdd(uint256 a, uint256 b, uint256 c);bitAndSub(uint256 a, uint256 b, uint256 c);bitAndMul(uint256 a, uint256 b, uint256 c);bitAndDiv(uint256 a, uint256 b, uint256 c);bitAndMod(uint256 a, uint256 b, uint256 c);bitAndExp(uint256 a, uint256 b, uint256 c);bitAndShiftL(uint256 a, uint256 b, uint256 c);bitAndShiftR(uint256 a, uint256 b, uint256 c);bitAndBitAnd(uint256 a, uint256 b, uint256 c);bitAndBitOr(uint256 a, uint256 b, uint256 c);bitAndBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/Parentheses/BitAndNoParentheses.sol,"bitAndAdd(uint256 a, uint256 b, uint256 c);bitAndSub(uint256 a, uint256 b, uint256 c);bitAndMul(uint256 a, uint256 b, uint256 c);bitAndDiv(uint256 a, uint256 b, uint256 c);bitAndMod(uint256 a, uint256 b, uint256 c);bitAndExp(uint256 a, uint256 b, uint256 c);bitAndShiftL(uint256 a, uint256 b, uint256 c);bitAndShiftR(uint256 a, uint256 b, uint256 c);bitAndBitAnd(uint256 a, uint256 b, uint256 c);bitAndBitOr(uint256 a, uint256 b, uint256 c);bitAndBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/Parentheses/BitAndNoParentheses.sol,"bitAndAdd(uint256 a, uint256 b, uint256 c);bitAndSub(uint256 a, uint256 b, uint256 c);bitAndMul(uint256 a, uint256 b, uint256 c);bitAndDiv(uint256 a, uint256 b, uint256 c);bitAndMod(uint256 a, uint256 b, uint256 c);bitAndExp(uint256 a, uint256 b, uint256 c);bitAndShiftL(uint256 a, uint256 b, uint256 c);bitAndShiftR(uint256 a, uint256 b, uint256 c);bitAndBitAnd(uint256 a, uint256 b, uint256 c);bitAndBitOr(uint256 a, uint256 b, uint256 c);bitAndBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/Parentheses/BitAndNoParentheses.sol,"bitAndAdd(uint256 a, uint256 b, uint256 c);bitAndSub(uint256 a, uint256 b, uint256 c);bitAndMul(uint256 a, uint256 b, uint256 c);bitAndDiv(uint256 a, uint256 b, uint256 c);bitAndMod(uint256 a, uint256 b, uint256 c);bitAndExp(uint256 a, uint256 b, uint256 c);bitAndShiftL(uint256 a, uint256 b, uint256 c);bitAndShiftR(uint256 a, uint256 b, uint256 c);bitAndBitAnd(uint256 a, uint256 b, uint256 c);bitAndBitOr(uint256 a, uint256 b, uint256 c);bitAndBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/StyleGuide/Mappings.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/StyleGuide/Mappings.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/StyleGuide/Mappings.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/StyleGuide/Mappings.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/StyleGuide/Mappings.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solium/test/lib/rules/indentation/accept/multiline-call-expression.sol,"Counter();inc();incBy(uint n);incByTwo();pack(uint32 param1, uint16 param2, uint32 param3)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solium/test/lib/rules/indentation/accept/multiline-call-expression.sol,"Counter();inc();incBy(uint n);incByTwo();pack(uint32 param1, uint16 param2, uint32 param3)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solium/test/lib/rules/indentation/accept/multiline-call-expression.sol,"Counter();inc();incBy(uint n);incByTwo();pack(uint32 param1, uint16 param2, uint32 param3)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solium/test/lib/rules/indentation/accept/multiline-call-expression.sol,"Counter();inc();incBy(uint n);incByTwo();pack(uint32 param1, uint16 param2, uint32 param3)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solium/test/lib/rules/indentation/accept/multiline-call-expression.sol,"Counter();inc();incBy(uint n);incByTwo();pack(uint32 param1, uint16 param2, uint32 param3)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solium/test/lib/rules/imports-on-top/fixes/only-one-error.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solium/test/lib/rules/imports-on-top/fixes/only-one-error.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solium/test/lib/rules/imports-on-top/fixes/only-one-error.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solium/test/lib/rules/imports-on-top/fixes/only-one-error.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solium/test/lib/rules/imports-on-top/fixes/only-one-error.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/Issues/Issue289.sol,f()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/Issues/Issue289.sol,f()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/Issues/Issue289.sol,f()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/Issues/Issue289.sol,f()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/Issues/Issue289.sol,f()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solium/test/lib/rules/blank-lines/reject/function.sol,spam();ham();sam();normalFunc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solium/test/lib/rules/blank-lines/reject/function.sol,spam();ham();sam();normalFunc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solium/test/lib/rules/blank-lines/reject/function.sol,spam();ham();sam();normalFunc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solium/test/lib/rules/blank-lines/reject/function.sol,spam();ham();sam();normalFunc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solium/test/lib/rules/blank-lines/reject/function.sol,spam();ham();sam();normalFunc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/StateVariableDeclarations/StateVariableDeclarations.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/StateVariableDeclarations/StateVariableDeclarations.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/StateVariableDeclarations/StateVariableDeclarations.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/StateVariableDeclarations/StateVariableDeclarations.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/StateVariableDeclarations/StateVariableDeclarations.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/quotes/Quotes.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solium/test/lib/rules/indentation/reject/multiline-call-declaration.sol,Counter();inc();incByTwo()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solium/test/lib/rules/indentation/reject/multiline-call-declaration.sol,Counter();inc();incByTwo()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solium/test/lib/rules/indentation/reject/multiline-call-declaration.sol,Counter();inc();incByTwo()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solium/test/lib/rules/indentation/reject/multiline-call-declaration.sol,Counter();inc();incByTwo()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solium/test/lib/rules/indentation/reject/multiline-call-declaration.sol,Counter();inc();incByTwo()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solium/test/lib/rules/indentation/accept/config-tabs.sol,accessPolicy();Counter();inc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solium/test/lib/rules/indentation/accept/config-tabs.sol,accessPolicy();Counter();inc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solium/test/lib/rules/indentation/accept/config-tabs.sol,accessPolicy();Counter();inc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solium/test/lib/rules/indentation/accept/config-tabs.sol,accessPolicy();Counter();inc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solium/test/lib/rules/indentation/accept/config-tabs.sol,accessPolicy();Counter();inc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/EnumDefinitions/EnumDefinitions.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/EnumDefinitions/EnumDefinitions.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/EnumDefinitions/EnumDefinitions.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/EnumDefinitions/EnumDefinitions.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/EnumDefinitions/EnumDefinitions.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/IfStatements/IfStatements.sol,hi()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/IfStatements/IfStatements.sol,hi()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/IfStatements/IfStatements.sol,hi()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/IfStatements/IfStatements.sol,hi()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/IfStatements/IfStatements.sol,hi()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solium/test/lib/rules/indentation/accept/config-two-spaces.sol,accessPolicy();Counter();inc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solium/test/lib/rules/indentation/accept/config-two-spaces.sol,accessPolicy();Counter();inc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solium/test/lib/rules/indentation/accept/config-two-spaces.sol,accessPolicy();Counter();inc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solium/test/lib/rules/indentation/accept/config-two-spaces.sol,accessPolicy();Counter();inc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solium/test/lib/rules/indentation/accept/config-two-spaces.sol,accessPolicy();Counter();inc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/Conditional/Conditional.sol,foo();foo();bar()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/Conditional/Conditional.sol,foo();foo();bar()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/Conditional/Conditional.sol,foo();foo();bar()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/Conditional/Conditional.sol,foo();foo();bar()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/Conditional/Conditional.sol,foo();foo();bar()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solium/test/lib/rules/indentation/reject/top-level-indent.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solium/test/lib/rules/indentation/reject/top-level-indent.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solium/test/lib/rules/indentation/reject/top-level-indent.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solium/test/lib/rules/indentation/reject/top-level-indent.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solium/test/lib/rules/indentation/reject/top-level-indent.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solium/test/lib/rules/blank-lines/accept/function.sol,spam();ham();baba();spam();ham();lola();someFunction();anotherFunction();yetAnotherFunction()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solium/test/lib/rules/blank-lines/accept/function.sol,spam();ham();baba();spam();ham();lola();someFunction();anotherFunction();yetAnotherFunction()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solium/test/lib/rules/blank-lines/accept/function.sol,spam();ham();baba();spam();ham();lola();someFunction();anotherFunction();yetAnotherFunction()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solium/test/lib/rules/blank-lines/accept/function.sol,spam();ham();baba();spam();ham();lola();someFunction();anotherFunction();yetAnotherFunction()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solium/test/lib/rules/blank-lines/accept/function.sol,spam();ham();baba();spam();ham();lola();someFunction();anotherFunction();yetAnotherFunction()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/Assembly/Assembly.sol,ifAssembly();caseAssembly();forAssembly();callWithComments();assemblyFunctionNoParameters();assemblyFunctionOneParameter();assemblyFunctionThreeParameters();assemblyFunctionLongParameters();assemblyFunctionLongReturnParameters();assemblyFunctionLongParametersAndReturnParameters();assemblyNoParameterCalls();assemblyLabels();withBreak()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/Assembly/Assembly.sol,ifAssembly();caseAssembly();forAssembly();callWithComments();assemblyFunctionNoParameters();assemblyFunctionOneParameter();assemblyFunctionThreeParameters();assemblyFunctionLongParameters();assemblyFunctionLongReturnParameters();assemblyFunctionLongParametersAndReturnParameters();assemblyNoParameterCalls();assemblyLabels();withBreak()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/Assembly/Assembly.sol,ifAssembly();caseAssembly();forAssembly();callWithComments();assemblyFunctionNoParameters();assemblyFunctionOneParameter();assemblyFunctionThreeParameters();assemblyFunctionLongParameters();assemblyFunctionLongReturnParameters();assemblyFunctionLongParametersAndReturnParameters();assemblyNoParameterCalls();assemblyLabels();withBreak()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/Assembly/Assembly.sol,ifAssembly();caseAssembly();forAssembly();callWithComments();assemblyFunctionNoParameters();assemblyFunctionOneParameter();assemblyFunctionThreeParameters();assemblyFunctionLongParameters();assemblyFunctionLongReturnParameters();assemblyFunctionLongParametersAndReturnParameters();assemblyNoParameterCalls();assemblyLabels();withBreak()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solium/test/lib/rules/indentation/accept/one-line-array.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solium/test/lib/rules/indentation/accept/one-line-array.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solium/test/lib/rules/indentation/accept/one-line-array.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solium/test/lib/rules/indentation/accept/one-line-array.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solium/test/lib/rules/indentation/accept/one-line-array.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solium/test/lib/rules/indentation/reject/multiline-array.sol,allItemsWrong();firstItemWrong();secondItemWrong();thirdItemWrong();wholeLineWrong()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solium/test/lib/rules/indentation/reject/multiline-array.sol,allItemsWrong();firstItemWrong();secondItemWrong();thirdItemWrong();wholeLineWrong()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solium/test/lib/rules/indentation/reject/multiline-array.sol,allItemsWrong();firstItemWrong();secondItemWrong();thirdItemWrong();wholeLineWrong()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solium/test/lib/rules/indentation/reject/multiline-array.sol,allItemsWrong();firstItemWrong();secondItemWrong();thirdItemWrong();wholeLineWrong()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solium/test/lib/rules/indentation/reject/multiline-array.sol,allItemsWrong();firstItemWrong();secondItemWrong();thirdItemWrong();wholeLineWrong()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/Parentheses/LogicNoParentheses.sol,"orOr(bool a, bool b, bool c);orAnd(bool a, bool b, bool c);andOr(bool a, bool b, bool c);andAnd(bool a, bool b, bool c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/Parentheses/LogicNoParentheses.sol,"orOr(bool a, bool b, bool c);orAnd(bool a, bool b, bool c);andOr(bool a, bool b, bool c);andAnd(bool a, bool b, bool c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/Parentheses/LogicNoParentheses.sol,"orOr(bool a, bool b, bool c);orAnd(bool a, bool b, bool c);andOr(bool a, bool b, bool c);andAnd(bool a, bool b, bool c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/Parentheses/LogicNoParentheses.sol,"orOr(bool a, bool b, bool c);orAnd(bool a, bool b, bool c);andOr(bool a, bool b, bool c);andAnd(bool a, bool b, bool c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solium/test/lib/rules/blank-lines/accept/contract.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solium/test/lib/rules/blank-lines/accept/contract.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solium/test/lib/rules/blank-lines/accept/contract.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solium/test/lib/rules/blank-lines/accept/contract.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solium/test/lib/rules/blank-lines/accept/contract.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solium/test/lib/rules/imports-on-top/fixes/before-pragma.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solium/test/lib/rules/imports-on-top/fixes/before-pragma.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solium/test/lib/rules/imports-on-top/fixes/before-pragma.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solium/test/lib/rules/imports-on-top/fixes/before-pragma.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solium/test/lib/rules/imports-on-top/fixes/before-pragma.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/WhileStatements/WhileStatements.sol,whileStatements();doWhileStatements()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/WhileStatements/WhileStatements.sol,whileStatements();doWhileStatements()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/WhileStatements/WhileStatements.sol,whileStatements();doWhileStatements()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/WhileStatements/WhileStatements.sol,whileStatements();doWhileStatements()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/WhileStatements/WhileStatements.sol,whileStatements();doWhileStatements()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/PrettierIgnore/PrettierIgnore.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/MemberAccess/MemberAccess.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/MemberAccess/MemberAccess.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/MemberAccess/MemberAccess.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/MemberAccess/MemberAccess.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/MemberAccess/MemberAccess.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/StyleGuide/ControlStructures.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/StyleGuide/ControlStructures.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/StyleGuide/ControlStructures.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/StyleGuide/ControlStructures.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/StyleGuide/ControlStructures.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/ContractDefinitions/ContractDefinitions.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/ContractDefinitions/ContractDefinitions.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/ContractDefinitions/ContractDefinitions.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/ContractDefinitions/ContractDefinitions.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/ContractDefinitions/ContractDefinitions.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/StyleGuide/WhitespaceInExpressions.sol,"spam(uint i , Coin coin)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/StyleGuide/WhitespaceInExpressions.sol,"spam(uint i , Coin coin)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/StyleGuide/WhitespaceInExpressions.sol,"spam(uint i , Coin coin)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/StyleGuide/WhitespaceInExpressions.sol,"spam(uint i , Coin coin)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/StyleGuide/WhitespaceInExpressions.sol,"spam(uint i , Coin coin)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/FunctionDefinitions/FunctionDefinitions.sol,"noParamsNoModifiersNoReturns();oneParam(uint x);oneModifier();oneReturn();manyParams(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyModifiers();manyReturns();someParamsSomeModifiers(uint x1, uint x2, uint x3);someParamsSomeReturns(uint x1, uint x2, uint x3);someModifiersSomeReturns();someParamSomeModifiersSomeReturns(uint x1, uint x2, uint x3);someParamsManyModifiers(uint x1, uint x2, uint x3);someParamsManyReturns(uint x1, uint x2, uint x3);manyParamsSomeModifiers(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamssomeReturns(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamsManyModifiers(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamsManyReturns(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamsManyModifiersManyReturns(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);noParamsNoModifiersNoReturns();oneParam(uint x);oneModifier();oneReturn();manyParams(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyModifiers();manyReturns();someParamsSomeModifiers(uint x1, uint x2, uint x3);someParamsSomeReturns(uint x1, uint x2, uint x3);someModifiersSomeReturns();someParamSomeModifiersSomeReturns(uint x1, uint x2, uint x3);someParamsManyModifiers(uint x1, uint x2, uint x3);someParamsManyReturns(uint x1, uint x2, uint x3);manyParamsSomeModifiers(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamssomeReturns(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamsManyModifiers(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamsManyReturns(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamsManyModifiersManyReturns(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/FunctionDefinitions/FunctionDefinitions.sol,"noParamsNoModifiersNoReturns();oneParam(uint x);oneModifier();oneReturn();manyParams(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyModifiers();manyReturns();someParamsSomeModifiers(uint x1, uint x2, uint x3);someParamsSomeReturns(uint x1, uint x2, uint x3);someModifiersSomeReturns();someParamSomeModifiersSomeReturns(uint x1, uint x2, uint x3);someParamsManyModifiers(uint x1, uint x2, uint x3);someParamsManyReturns(uint x1, uint x2, uint x3);manyParamsSomeModifiers(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamssomeReturns(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamsManyModifiers(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamsManyReturns(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamsManyModifiersManyReturns(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);noParamsNoModifiersNoReturns();oneParam(uint x);oneModifier();oneReturn();manyParams(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyModifiers();manyReturns();someParamsSomeModifiers(uint x1, uint x2, uint x3);someParamsSomeReturns(uint x1, uint x2, uint x3);someModifiersSomeReturns();someParamSomeModifiersSomeReturns(uint x1, uint x2, uint x3);someParamsManyModifiers(uint x1, uint x2, uint x3);someParamsManyReturns(uint x1, uint x2, uint x3);manyParamsSomeModifiers(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamssomeReturns(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamsManyModifiers(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamsManyReturns(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamsManyModifiersManyReturns(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/FunctionDefinitions/FunctionDefinitions.sol,"noParamsNoModifiersNoReturns();oneParam(uint x);oneModifier();oneReturn();manyParams(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyModifiers();manyReturns();someParamsSomeModifiers(uint x1, uint x2, uint x3);someParamsSomeReturns(uint x1, uint x2, uint x3);someModifiersSomeReturns();someParamSomeModifiersSomeReturns(uint x1, uint x2, uint x3);someParamsManyModifiers(uint x1, uint x2, uint x3);someParamsManyReturns(uint x1, uint x2, uint x3);manyParamsSomeModifiers(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamssomeReturns(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamsManyModifiers(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamsManyReturns(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamsManyModifiersManyReturns(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);noParamsNoModifiersNoReturns();oneParam(uint x);oneModifier();oneReturn();manyParams(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyModifiers();manyReturns();someParamsSomeModifiers(uint x1, uint x2, uint x3);someParamsSomeReturns(uint x1, uint x2, uint x3);someModifiersSomeReturns();someParamSomeModifiersSomeReturns(uint x1, uint x2, uint x3);someParamsManyModifiers(uint x1, uint x2, uint x3);someParamsManyReturns(uint x1, uint x2, uint x3);manyParamsSomeModifiers(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamssomeReturns(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamsManyModifiers(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamsManyReturns(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamsManyModifiersManyReturns(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/FunctionDefinitions/FunctionDefinitions.sol,"noParamsNoModifiersNoReturns();oneParam(uint x);oneModifier();oneReturn();manyParams(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyModifiers();manyReturns();someParamsSomeModifiers(uint x1, uint x2, uint x3);someParamsSomeReturns(uint x1, uint x2, uint x3);someModifiersSomeReturns();someParamSomeModifiersSomeReturns(uint x1, uint x2, uint x3);someParamsManyModifiers(uint x1, uint x2, uint x3);someParamsManyReturns(uint x1, uint x2, uint x3);manyParamsSomeModifiers(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamssomeReturns(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamsManyModifiers(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamsManyReturns(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamsManyModifiersManyReturns(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);noParamsNoModifiersNoReturns();oneParam(uint x);oneModifier();oneReturn();manyParams(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyModifiers();manyReturns();someParamsSomeModifiers(uint x1, uint x2, uint x3);someParamsSomeReturns(uint x1, uint x2, uint x3);someModifiersSomeReturns();someParamSomeModifiersSomeReturns(uint x1, uint x2, uint x3);someParamsManyModifiers(uint x1, uint x2, uint x3);someParamsManyReturns(uint x1, uint x2, uint x3);manyParamsSomeModifiers(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamssomeReturns(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamsManyModifiers(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamsManyReturns(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamsManyModifiersManyReturns(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/FunctionDefinitions/FunctionDefinitions.sol,"noParamsNoModifiersNoReturns();oneParam(uint x);oneModifier();oneReturn();manyParams(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyModifiers();manyReturns();someParamsSomeModifiers(uint x1, uint x2, uint x3);someParamsSomeReturns(uint x1, uint x2, uint x3);someModifiersSomeReturns();someParamSomeModifiersSomeReturns(uint x1, uint x2, uint x3);someParamsManyModifiers(uint x1, uint x2, uint x3);someParamsManyReturns(uint x1, uint x2, uint x3);manyParamsSomeModifiers(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamssomeReturns(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamsManyModifiers(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamsManyReturns(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamsManyModifiersManyReturns(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);noParamsNoModifiersNoReturns();oneParam(uint x);oneModifier();oneReturn();manyParams(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyModifiers();manyReturns();someParamsSomeModifiers(uint x1, uint x2, uint x3);someParamsSomeReturns(uint x1, uint x2, uint x3);someModifiersSomeReturns();someParamSomeModifiersSomeReturns(uint x1, uint x2, uint x3);someParamsManyModifiers(uint x1, uint x2, uint x3);someParamsManyReturns(uint x1, uint x2, uint x3);manyParamsSomeModifiers(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamssomeReturns(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamsManyModifiers(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamsManyReturns(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10);manyParamsManyModifiersManyReturns(uint x1, uint x2, uint x3, uint x4, uint x5, uint x6, uint x7, uint x8, uint x9, uint x10)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/Etc/Etc.sol,ifBlockInOneLine(uint a);forWithoutBlock();fun(uint256 a)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/Etc/Etc.sol,ifBlockInOneLine(uint a);forWithoutBlock();fun(uint256 a)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/Etc/Etc.sol,ifBlockInOneLine(uint a);forWithoutBlock();fun(uint256 a)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/Etc/Etc.sol,ifBlockInOneLine(uint a);forWithoutBlock();fun(uint256 a)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/Etc/Etc.sol,ifBlockInOneLine(uint a);forWithoutBlock();fun(uint256 a)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solium/test/lib/rules/double-quotes/accept/double-quoted.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solium/test/lib/rules/double-quotes/accept/double-quoted.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solium/test/lib/rules/double-quotes/accept/double-quoted.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solium/test/lib/rules/double-quotes/accept/double-quoted.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solium/test/lib/rules/double-quotes/accept/double-quoted.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/Parentheses/ShiftLNoParentheses.sol,"shiftLAdd(uint256 a, uint256 b, uint256 c);shiftLSub(uint256 a, uint256 b, uint256 c);shiftLMul(uint256 a, uint256 b, uint256 c);shiftLDiv(uint256 a, uint256 b, uint256 c);shiftLMod(uint256 a, uint256 b, uint256 c);shiftLExp(uint256 a, uint256 b, uint256 c);shiftLShiftL(uint256 a, uint256 b, uint256 c);shiftLShiftR(uint256 a, uint256 b, uint256 c);shiftLBitAnd(uint256 a, uint256 b, uint256 c);shiftLBitOr(uint256 a, uint256 b, uint256 c);shiftLBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/Parentheses/ShiftLNoParentheses.sol,"shiftLAdd(uint256 a, uint256 b, uint256 c);shiftLSub(uint256 a, uint256 b, uint256 c);shiftLMul(uint256 a, uint256 b, uint256 c);shiftLDiv(uint256 a, uint256 b, uint256 c);shiftLMod(uint256 a, uint256 b, uint256 c);shiftLExp(uint256 a, uint256 b, uint256 c);shiftLShiftL(uint256 a, uint256 b, uint256 c);shiftLShiftR(uint256 a, uint256 b, uint256 c);shiftLBitAnd(uint256 a, uint256 b, uint256 c);shiftLBitOr(uint256 a, uint256 b, uint256 c);shiftLBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/Parentheses/ShiftLNoParentheses.sol,"shiftLAdd(uint256 a, uint256 b, uint256 c);shiftLSub(uint256 a, uint256 b, uint256 c);shiftLMul(uint256 a, uint256 b, uint256 c);shiftLDiv(uint256 a, uint256 b, uint256 c);shiftLMod(uint256 a, uint256 b, uint256 c);shiftLExp(uint256 a, uint256 b, uint256 c);shiftLShiftL(uint256 a, uint256 b, uint256 c);shiftLShiftR(uint256 a, uint256 b, uint256 c);shiftLBitAnd(uint256 a, uint256 b, uint256 c);shiftLBitOr(uint256 a, uint256 b, uint256 c);shiftLBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/Parentheses/ShiftLNoParentheses.sol,"shiftLAdd(uint256 a, uint256 b, uint256 c);shiftLSub(uint256 a, uint256 b, uint256 c);shiftLMul(uint256 a, uint256 b, uint256 c);shiftLDiv(uint256 a, uint256 b, uint256 c);shiftLMod(uint256 a, uint256 b, uint256 c);shiftLExp(uint256 a, uint256 b, uint256 c);shiftLShiftL(uint256 a, uint256 b, uint256 c);shiftLShiftR(uint256 a, uint256 b, uint256 c);shiftLBitAnd(uint256 a, uint256 b, uint256 c);shiftLBitOr(uint256 a, uint256 b, uint256 c);shiftLBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/Parentheses/SubNoParentheses.sol,"subAdd(uint256 a, uint256 b, uint256 c);subSub(uint256 a, uint256 b, uint256 c);subMul(uint256 a, uint256 b, uint256 c);subDiv(uint256 a, uint256 b, uint256 c);subMod(uint256 a, uint256 b, uint256 c);subExp(uint256 a, uint256 b, uint256 c);subShiftL(uint256 a, uint256 b, uint256 c);subShiftR(uint256 a, uint256 b, uint256 c);subBitAnd(uint256 a, uint256 b, uint256 c);subBitOr(uint256 a, uint256 b, uint256 c);subBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/Parentheses/SubNoParentheses.sol,"subAdd(uint256 a, uint256 b, uint256 c);subSub(uint256 a, uint256 b, uint256 c);subMul(uint256 a, uint256 b, uint256 c);subDiv(uint256 a, uint256 b, uint256 c);subMod(uint256 a, uint256 b, uint256 c);subExp(uint256 a, uint256 b, uint256 c);subShiftL(uint256 a, uint256 b, uint256 c);subShiftR(uint256 a, uint256 b, uint256 c);subBitAnd(uint256 a, uint256 b, uint256 c);subBitOr(uint256 a, uint256 b, uint256 c);subBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/Parentheses/SubNoParentheses.sol,"subAdd(uint256 a, uint256 b, uint256 c);subSub(uint256 a, uint256 b, uint256 c);subMul(uint256 a, uint256 b, uint256 c);subDiv(uint256 a, uint256 b, uint256 c);subMod(uint256 a, uint256 b, uint256 c);subExp(uint256 a, uint256 b, uint256 c);subShiftL(uint256 a, uint256 b, uint256 c);subShiftR(uint256 a, uint256 b, uint256 c);subBitAnd(uint256 a, uint256 b, uint256 c);subBitOr(uint256 a, uint256 b, uint256 c);subBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/Parentheses/SubNoParentheses.sol,"subAdd(uint256 a, uint256 b, uint256 c);subSub(uint256 a, uint256 b, uint256 c);subMul(uint256 a, uint256 b, uint256 c);subDiv(uint256 a, uint256 b, uint256 c);subMod(uint256 a, uint256 b, uint256 c);subExp(uint256 a, uint256 b, uint256 c);subShiftL(uint256 a, uint256 b, uint256 c);subShiftR(uint256 a, uint256 b, uint256 c);subBitAnd(uint256 a, uint256 b, uint256 c);subBitOr(uint256 a, uint256 b, uint256 c);subBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solium/node_modules/solparse/test/doc_examples.sol,"f();c();test(uint class);getChoice();Base(uint i);Derived(uint i);blah();f(uint x, uint y);f(uint x, uint y);g(uint pos);setData(uint pos, uint value);getData(uint pos);sendHalf(address addr);bar(uint[] memory self, function (uint);f(uint[][] calldata x);insert(data storage self, uint value);remove(data storage self, uint value);contains(data storage self, uint value);iterate_start(data storage self);iterate_valid(data storage self, uint index);iterate_advance(data storage self, uint index);iterate_get(data storage self, uint index);insert(uint v);sum();DualIndex();set(uint key1, uint key2, uint value);transfer_ownership(address _admin);lookup(uint key1, uint key2);something();sum(uint[] storage self);someFunction();fun();at(address _addr);test();get();foobar();bax();foobar();foo();bar(lorem, ipsum, dollar, quote);axe();baxe(a, bc, def, ghij);returnNumber(uint number);alloc();ham(S storage s1, uint[] storage arr);getMyTuple();abstain();foobar();foobar();a();bar(address);dell(function(int a, bool bcd);foo()"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solium/node_modules/solparse/test/doc_examples.sol,"f();c();test(uint class);getChoice();Base(uint i);Derived(uint i);blah();f(uint x, uint y);f(uint x, uint y);g(uint pos);setData(uint pos, uint value);getData(uint pos);sendHalf(address addr);bar(uint[] memory self, function (uint);f(uint[][] calldata x);insert(data storage self, uint value);remove(data storage self, uint value);contains(data storage self, uint value);iterate_start(data storage self);iterate_valid(data storage self, uint index);iterate_advance(data storage self, uint index);iterate_get(data storage self, uint index);insert(uint v);sum();DualIndex();set(uint key1, uint key2, uint value);transfer_ownership(address _admin);lookup(uint key1, uint key2);something();sum(uint[] storage self);someFunction();fun();at(address _addr);test();get();foobar();bax();foobar();foo();bar(lorem, ipsum, dollar, quote);axe();baxe(a, bc, def, ghij);returnNumber(uint number);alloc();ham(S storage s1, uint[] storage arr);getMyTuple();abstain();foobar();foobar();a();bar(address);dell(function(int a, bool bcd);foo()"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solium/node_modules/solparse/test/doc_examples.sol,"f();c();test(uint class);getChoice();Base(uint i);Derived(uint i);blah();f(uint x, uint y);f(uint x, uint y);g(uint pos);setData(uint pos, uint value);getData(uint pos);sendHalf(address addr);bar(uint[] memory self, function (uint);f(uint[][] calldata x);insert(data storage self, uint value);remove(data storage self, uint value);contains(data storage self, uint value);iterate_start(data storage self);iterate_valid(data storage self, uint index);iterate_advance(data storage self, uint index);iterate_get(data storage self, uint index);insert(uint v);sum();DualIndex();set(uint key1, uint key2, uint value);transfer_ownership(address _admin);lookup(uint key1, uint key2);something();sum(uint[] storage self);someFunction();fun();at(address _addr);test();get();foobar();bax();foobar();foo();bar(lorem, ipsum, dollar, quote);axe();baxe(a, bc, def, ghij);returnNumber(uint number);alloc();ham(S storage s1, uint[] storage arr);getMyTuple();abstain();foobar();foobar();a();bar(address);dell(function(int a, bool bcd);foo()"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solium/node_modules/solparse/test/doc_examples.sol,"f();c();test(uint class);getChoice();Base(uint i);Derived(uint i);blah();f(uint x, uint y);f(uint x, uint y);g(uint pos);setData(uint pos, uint value);getData(uint pos);sendHalf(address addr);bar(uint[] memory self, function (uint);f(uint[][] calldata x);insert(data storage self, uint value);remove(data storage self, uint value);contains(data storage self, uint value);iterate_start(data storage self);iterate_valid(data storage self, uint index);iterate_advance(data storage self, uint index);iterate_get(data storage self, uint index);insert(uint v);sum();DualIndex();set(uint key1, uint key2, uint value);transfer_ownership(address _admin);lookup(uint key1, uint key2);something();sum(uint[] storage self);someFunction();fun();at(address _addr);test();get();foobar();bax();foobar();foo();bar(lorem, ipsum, dollar, quote);axe();baxe(a, bc, def, ghij);returnNumber(uint number);alloc();ham(S storage s1, uint[] storage arr);getMyTuple();abstain();foobar();foobar();a();bar(address);dell(function(int a, bool bcd);foo()"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solium/node_modules/solparse/test/doc_examples.sol,"f();c();test(uint class);getChoice();Base(uint i);Derived(uint i);blah();f(uint x, uint y);f(uint x, uint y);g(uint pos);setData(uint pos, uint value);getData(uint pos);sendHalf(address addr);bar(uint[] memory self, function (uint);f(uint[][] calldata x);insert(data storage self, uint value);remove(data storage self, uint value);contains(data storage self, uint value);iterate_start(data storage self);iterate_valid(data storage self, uint index);iterate_advance(data storage self, uint index);iterate_get(data storage self, uint index);insert(uint v);sum();DualIndex();set(uint key1, uint key2, uint value);transfer_ownership(address _admin);lookup(uint key1, uint key2);something();sum(uint[] storage self);someFunction();fun();at(address _addr);test();get();foobar();bax();foobar();foo();bar(lorem, ipsum, dollar, quote);axe();baxe(a, bc, def, ghij);returnNumber(uint number);alloc();ham(S storage s1, uint[] storage arr);getMyTuple();abstain();foobar();foobar();a();bar(address);dell(function(int a, bool bcd);foo()"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/Constructors/Constructors.sol,Constructors(variable1)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/Constructors/Constructors.sol,Constructors(variable1)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/Constructors/Constructors.sol,Constructors(variable1)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/Constructors/Constructors.sol,Constructors(variable1)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/Constructors/Constructors.sol,Constructors(variable1)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/FunctionCalls/FunctionCalls.sol,foo();foo()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/FunctionCalls/FunctionCalls.sol,foo();foo()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/FunctionCalls/FunctionCalls.sol,foo();foo()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/FunctionCalls/FunctionCalls.sol,foo();foo()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/FunctionCalls/FunctionCalls.sol,foo();foo()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/IndexOf/IndexOf.sol,"IndexOf();indexOf(string _a, string _b);whatWasTheVal();kill()"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/IndexOf/IndexOf.sol,"IndexOf();indexOf(string _a, string _b);whatWasTheVal();kill()"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/IndexOf/IndexOf.sol,"IndexOf();indexOf(string _a, string _b);whatWasTheVal();kill()"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/IndexOf/IndexOf.sol,"IndexOf();indexOf(string _a, string _b);whatWasTheVal();kill()"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/IndexOf/IndexOf.sol,"IndexOf();indexOf(string _a, string _b);whatWasTheVal();kill()"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solium/test/lib/rules/quotes/single-full.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solium/test/lib/rules/quotes/single-full.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solium/test/lib/rules/quotes/single-full.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solium/test/lib/rules/quotes/single-full.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solium/test/lib/rules/quotes/single-full.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/SimpleAuction/SimpleAuction.sol,bid();withdraw();auctionEnd()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/SimpleAuction/SimpleAuction.sol,bid();withdraw();auctionEnd()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/SimpleAuction/SimpleAuction.sol,bid();withdraw();auctionEnd()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/SimpleAuction/SimpleAuction.sol,bid();withdraw();auctionEnd()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/SimpleAuction/SimpleAuction.sol,bid();withdraw();auctionEnd()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/StyleGuide/OtherRecommendations.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/StyleGuide/OtherRecommendations.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/StyleGuide/OtherRecommendations.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/StyleGuide/OtherRecommendations.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/StyleGuide/OtherRecommendations.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/Comments/Comments.sol,hello();someFunction();someFunction();someFunction();someFunction()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/Arrays/Arrays.sol,a();f(bytes calldata x)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/Arrays/Arrays.sol,a();f(bytes calldata x)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/Arrays/Arrays.sol,a();f(bytes calldata x)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/Arrays/Arrays.sol,a();f(bytes calldata x)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solium/test/lib/rules/indentation/reject/struct.sol,setFoo(uint _foo)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solium/test/lib/rules/indentation/reject/struct.sol,setFoo(uint _foo)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solium/test/lib/rules/indentation/reject/struct.sol,setFoo(uint _foo)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solium/test/lib/rules/indentation/reject/struct.sol,setFoo(uint _foo)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solium/test/lib/rules/indentation/reject/struct.sol,setFoo(uint _foo)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solium/test/lib/rules/blank-lines/accept/contract-single.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solium/test/lib/rules/blank-lines/accept/contract-single.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solium/test/lib/rules/blank-lines/accept/contract-single.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solium/test/lib/rules/blank-lines/accept/contract-single.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solium/test/lib/rules/blank-lines/accept/contract-single.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solium/test/lib/rules/array-declarations/fixed/ws-btw-op-clos.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solium/test/lib/rules/array-declarations/fixed/ws-btw-op-clos.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solium/test/lib/rules/array-declarations/fixed/ws-btw-op-clos.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solium/test/lib/rules/array-declarations/fixed/ws-btw-op-clos.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solium/test/lib/rules/array-declarations/fixed/ws-btw-op-clos.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/InheritanceSpecifier/InheritanceSpecifier.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/InheritanceSpecifier/InheritanceSpecifier.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/InheritanceSpecifier/InheritanceSpecifier.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/InheritanceSpecifier/InheritanceSpecifier.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/InheritanceSpecifier/InheritanceSpecifier.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/MultipartStrings/MultipartStrings.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/MultipartStrings/MultipartStrings.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/MultipartStrings/MultipartStrings.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/MultipartStrings/MultipartStrings.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/MultipartStrings/MultipartStrings.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/BinaryOperators/Parentheses.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/BinaryOperators/Parentheses.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/BinaryOperators/Parentheses.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/BinaryOperators/Parentheses.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/BinaryOperators/Parentheses.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/TryCatch/TryCatch.sol,getData(address token);rate(address token)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/TryCatch/TryCatch.sol,getData(address token);rate(address token)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/TryCatch/TryCatch.sol,getData(address token);rate(address token)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/TryCatch/TryCatch.sol,getData(address token);rate(address token)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/TryCatch/TryCatch.sol,getData(address token);rate(address token)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/ForStatements/ForStatements.sol,hi()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/ForStatements/ForStatements.sol,hi()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/ForStatements/ForStatements.sol,hi()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/ForStatements/ForStatements.sol,hi()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/ForStatements/ForStatements.sol,hi()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/ExplicitVariableTypes/ExplicitVariableTypes.sol,"func(uint256 _a, int256 _b, byte _c, uint _e, int _f, bytes1 _g)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/PrettierIgnore/PrettierIgnore.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/PrettierIgnore/PrettierIgnore.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/PrettierIgnore/PrettierIgnore.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/PrettierIgnore/PrettierIgnore.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solparse-exp-jb/test/doc_examples.sol,"f();c();test(uint class);getChoice();Base(uint i);Derived(uint i);blah();f(uint x, uint y);f(uint x, uint y);g(uint pos);setData(uint pos, uint value);getData(uint pos);sendHalf(address addr);bar(uint[] memory self, function (uint);f(uint[][] calldata x);insert(data storage self, uint value);remove(data storage self, uint value);contains(data storage self, uint value);iterate_start(data storage self);iterate_valid(data storage self, uint index);iterate_advance(data storage self, uint index);iterate_get(data storage self, uint index);insert(uint v);sum();DualIndex();set(uint key1, uint key2, uint value);transfer_ownership(address _admin);lookup(uint key1, uint key2);functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage);something();sum(uint[] storage self);someFunction();fun();at(address _addr);test();get();foobar();bax();foobar();foo();bar(lorem, ipsum, dollar, quote);axe();baxe(a, bc, def, ghij);returnNumber(uint number);alloc();ham(S storage s1, uint[] storage arr);getMyTuple();abstain();foobar();foobar();a();bar(address);dell(function(int a, bool bcd);foo()"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solparse-exp-jb/test/doc_examples.sol,"f();c();test(uint class);getChoice();Base(uint i);Derived(uint i);blah();f(uint x, uint y);f(uint x, uint y);g(uint pos);setData(uint pos, uint value);getData(uint pos);sendHalf(address addr);bar(uint[] memory self, function (uint);f(uint[][] calldata x);insert(data storage self, uint value);remove(data storage self, uint value);contains(data storage self, uint value);iterate_start(data storage self);iterate_valid(data storage self, uint index);iterate_advance(data storage self, uint index);iterate_get(data storage self, uint index);insert(uint v);sum();DualIndex();set(uint key1, uint key2, uint value);transfer_ownership(address _admin);lookup(uint key1, uint key2);functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage);something();sum(uint[] storage self);someFunction();fun();at(address _addr);test();get();foobar();bax();foobar();foo();bar(lorem, ipsum, dollar, quote);axe();baxe(a, bc, def, ghij);returnNumber(uint number);alloc();ham(S storage s1, uint[] storage arr);getMyTuple();abstain();foobar();foobar();a();bar(address);dell(function(int a, bool bcd);foo()"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solparse-exp-jb/test/doc_examples.sol,"f();c();test(uint class);getChoice();Base(uint i);Derived(uint i);blah();f(uint x, uint y);f(uint x, uint y);g(uint pos);setData(uint pos, uint value);getData(uint pos);sendHalf(address addr);bar(uint[] memory self, function (uint);f(uint[][] calldata x);insert(data storage self, uint value);remove(data storage self, uint value);contains(data storage self, uint value);iterate_start(data storage self);iterate_valid(data storage self, uint index);iterate_advance(data storage self, uint index);iterate_get(data storage self, uint index);insert(uint v);sum();DualIndex();set(uint key1, uint key2, uint value);transfer_ownership(address _admin);lookup(uint key1, uint key2);functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage);something();sum(uint[] storage self);someFunction();fun();at(address _addr);test();get();foobar();bax();foobar();foo();bar(lorem, ipsum, dollar, quote);axe();baxe(a, bc, def, ghij);returnNumber(uint number);alloc();ham(S storage s1, uint[] storage arr);getMyTuple();abstain();foobar();foobar();a();bar(address);dell(function(int a, bool bcd);foo()"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/Arrays/Arrays.sol,a()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solium/test/lib/rules/array-declarations/unfixed/ws-btw-op-clos.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solium/test/lib/rules/array-declarations/unfixed/ws-btw-op-clos.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solium/test/lib/rules/array-declarations/unfixed/ws-btw-op-clos.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solium/test/lib/rules/array-declarations/unfixed/ws-btw-op-clos.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solium/test/lib/rules/array-declarations/unfixed/ws-btw-op-clos.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solium/test/lib/rules/indentation/accept/struct.sol,setFoo(uint _foo)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solium/test/lib/rules/indentation/accept/struct.sol,setFoo(uint _foo)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solium/test/lib/rules/indentation/accept/struct.sol,setFoo(uint _foo)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solium/test/lib/rules/indentation/accept/struct.sol,setFoo(uint _foo)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solium/test/lib/rules/indentation/accept/struct.sol,setFoo(uint _foo)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solium/test/lib/rules/indentation/reject/indented-top-level-closing-brace.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solium/test/lib/rules/indentation/reject/indented-top-level-closing-brace.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solium/test/lib/rules/indentation/reject/indented-top-level-closing-brace.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solium/test/lib/rules/indentation/reject/indented-top-level-closing-brace.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solium/test/lib/rules/indentation/reject/indented-top-level-closing-brace.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/Proxy/Proxy.sol,_implementation();_fallback();_delegate(address implementation)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/Proxy/Proxy.sol,_implementation();_fallback();_delegate(address implementation)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/Proxy/Proxy.sol,_implementation();_fallback();_delegate(address implementation)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/Proxy/Proxy.sol,_implementation();_fallback();_delegate(address implementation)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/Proxy/Proxy.sol,_implementation();_fallback();_delegate(address implementation)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solium/test/lib/rules/quotes/single-quoted.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solium/test/lib/rules/quotes/single-quoted.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solium/test/lib/rules/quotes/single-quoted.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solium/test/lib/rules/quotes/single-quoted.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solium/test/lib/rules/quotes/single-quoted.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solium/test/lib/rules/array-declarations/unfixed/mixed.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solium/test/lib/rules/array-declarations/unfixed/mixed.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solium/test/lib/rules/array-declarations/unfixed/mixed.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solium/test/lib/rules/array-declarations/unfixed/mixed.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solium/test/lib/rules/array-declarations/unfixed/mixed.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/strings/strings.sol,"memcpy(uint dest, uint src, uint len);toSlice(string memory self);len(bytes32 self);copy(slice memory self);toString(slice memory self);len(slice memory self);empty(slice memory self);compare(slice memory self, slice memory other);equals(slice memory self, slice memory other);nextRune(slice memory self, slice memory rune);nextRune(slice memory self);ord(slice memory self);keccak(slice memory self);startsWith(slice memory self, slice memory needle);beyond(slice memory self, slice memory needle);endsWith(slice memory self, slice memory needle);until(slice memory self, slice memory needle);findPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);rfindPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);find(slice memory self, slice memory needle);rfind(slice memory self, slice memory needle);split(slice memory self, slice memory needle, slice memory token);split(slice memory self, slice memory needle);rsplit(slice memory self, slice memory needle, slice memory token);rsplit(slice memory self, slice memory needle);count(slice memory self, slice memory needle);contains(slice memory self, slice memory needle);concat(slice memory self, slice memory other);join(slice memory self, slice[] memory parts)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/strings/strings.sol,"memcpy(uint dest, uint src, uint len);toSlice(string memory self);len(bytes32 self);copy(slice memory self);toString(slice memory self);len(slice memory self);empty(slice memory self);compare(slice memory self, slice memory other);equals(slice memory self, slice memory other);nextRune(slice memory self, slice memory rune);nextRune(slice memory self);ord(slice memory self);keccak(slice memory self);startsWith(slice memory self, slice memory needle);beyond(slice memory self, slice memory needle);endsWith(slice memory self, slice memory needle);until(slice memory self, slice memory needle);findPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);rfindPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);find(slice memory self, slice memory needle);rfind(slice memory self, slice memory needle);split(slice memory self, slice memory needle, slice memory token);split(slice memory self, slice memory needle);rsplit(slice memory self, slice memory needle, slice memory token);rsplit(slice memory self, slice memory needle);count(slice memory self, slice memory needle);contains(slice memory self, slice memory needle);concat(slice memory self, slice memory other);join(slice memory self, slice[] memory parts)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/strings/strings.sol,"memcpy(uint dest, uint src, uint len);toSlice(string memory self);len(bytes32 self);copy(slice memory self);toString(slice memory self);len(slice memory self);empty(slice memory self);compare(slice memory self, slice memory other);equals(slice memory self, slice memory other);nextRune(slice memory self, slice memory rune);nextRune(slice memory self);ord(slice memory self);keccak(slice memory self);startsWith(slice memory self, slice memory needle);beyond(slice memory self, slice memory needle);endsWith(slice memory self, slice memory needle);until(slice memory self, slice memory needle);findPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);rfindPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);find(slice memory self, slice memory needle);rfind(slice memory self, slice memory needle);split(slice memory self, slice memory needle, slice memory token);split(slice memory self, slice memory needle);rsplit(slice memory self, slice memory needle, slice memory token);rsplit(slice memory self, slice memory needle);count(slice memory self, slice memory needle);contains(slice memory self, slice memory needle);concat(slice memory self, slice memory other);join(slice memory self, slice[] memory parts)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/strings/strings.sol,"memcpy(uint dest, uint src, uint len);toSlice(string memory self);len(bytes32 self);copy(slice memory self);toString(slice memory self);len(slice memory self);empty(slice memory self);compare(slice memory self, slice memory other);equals(slice memory self, slice memory other);nextRune(slice memory self, slice memory rune);nextRune(slice memory self);ord(slice memory self);keccak(slice memory self);startsWith(slice memory self, slice memory needle);beyond(slice memory self, slice memory needle);endsWith(slice memory self, slice memory needle);until(slice memory self, slice memory needle);findPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);rfindPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);find(slice memory self, slice memory needle);rfind(slice memory self, slice memory needle);split(slice memory self, slice memory needle, slice memory token);split(slice memory self, slice memory needle);rsplit(slice memory self, slice memory needle, slice memory token);rsplit(slice memory self, slice memory needle);count(slice memory self, slice memory needle);contains(slice memory self, slice memory needle);concat(slice memory self, slice memory other);join(slice memory self, slice[] memory parts)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/strings/strings.sol,"memcpy(uint dest, uint src, uint len);toSlice(string memory self);len(bytes32 self);copy(slice memory self);toString(slice memory self);len(slice memory self);empty(slice memory self);compare(slice memory self, slice memory other);equals(slice memory self, slice memory other);nextRune(slice memory self, slice memory rune);nextRune(slice memory self);ord(slice memory self);keccak(slice memory self);startsWith(slice memory self, slice memory needle);beyond(slice memory self, slice memory needle);endsWith(slice memory self, slice memory needle);until(slice memory self, slice memory needle);findPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);rfindPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);find(slice memory self, slice memory needle);rfind(slice memory self, slice memory needle);split(slice memory self, slice memory needle, slice memory token);split(slice memory self, slice memory needle);rsplit(slice memory self, slice memory needle, slice memory token);rsplit(slice memory self, slice memory needle);count(slice memory self, slice memory needle);contains(slice memory self, slice memory needle);concat(slice memory self, slice memory other);join(slice memory self, slice[] memory parts)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/Issues/Issue385.sol,emptyTryCatch()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/Issues/Issue385.sol,emptyTryCatch()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/Issues/Issue385.sol,emptyTryCatch()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/Issues/Issue385.sol,emptyTryCatch()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/Issues/Issue385.sol,emptyTryCatch()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solium/test/lib/rules/indentation/accept/config-default.sol,accessPolicy();Counter();inc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solium/test/lib/rules/indentation/accept/config-default.sol,accessPolicy();Counter();inc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solium/test/lib/rules/indentation/accept/config-default.sol,accessPolicy();Counter();inc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solium/test/lib/rules/indentation/accept/config-default.sol,accessPolicy();Counter();inc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solium/test/lib/rules/indentation/accept/config-default.sol,accessPolicy();Counter();inc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/Parentheses/BitOrNoParentheses.sol,"bitOrAdd(uint256 a, uint256 b, uint256 c);bitOrSub(uint256 a, uint256 b, uint256 c);bitOrMul(uint256 a, uint256 b, uint256 c);bitOrDiv(uint256 a, uint256 b, uint256 c);bitOrMod(uint256 a, uint256 b, uint256 c);bitOrExp(uint256 a, uint256 b, uint256 c);bitOrShiftL(uint256 a, uint256 b, uint256 c);bitOrShiftR(uint256 a, uint256 b, uint256 c);bitOrBitAnd(uint256 a, uint256 b, uint256 c);bitOrBitOr(uint256 a, uint256 b, uint256 c);bitOrBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/Parentheses/BitOrNoParentheses.sol,"bitOrAdd(uint256 a, uint256 b, uint256 c);bitOrSub(uint256 a, uint256 b, uint256 c);bitOrMul(uint256 a, uint256 b, uint256 c);bitOrDiv(uint256 a, uint256 b, uint256 c);bitOrMod(uint256 a, uint256 b, uint256 c);bitOrExp(uint256 a, uint256 b, uint256 c);bitOrShiftL(uint256 a, uint256 b, uint256 c);bitOrShiftR(uint256 a, uint256 b, uint256 c);bitOrBitAnd(uint256 a, uint256 b, uint256 c);bitOrBitOr(uint256 a, uint256 b, uint256 c);bitOrBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/Parentheses/BitOrNoParentheses.sol,"bitOrAdd(uint256 a, uint256 b, uint256 c);bitOrSub(uint256 a, uint256 b, uint256 c);bitOrMul(uint256 a, uint256 b, uint256 c);bitOrDiv(uint256 a, uint256 b, uint256 c);bitOrMod(uint256 a, uint256 b, uint256 c);bitOrExp(uint256 a, uint256 b, uint256 c);bitOrShiftL(uint256 a, uint256 b, uint256 c);bitOrShiftR(uint256 a, uint256 b, uint256 c);bitOrBitAnd(uint256 a, uint256 b, uint256 c);bitOrBitOr(uint256 a, uint256 b, uint256 c);bitOrBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/Parentheses/BitOrNoParentheses.sol,"bitOrAdd(uint256 a, uint256 b, uint256 c);bitOrSub(uint256 a, uint256 b, uint256 c);bitOrMul(uint256 a, uint256 b, uint256 c);bitOrDiv(uint256 a, uint256 b, uint256 c);bitOrMod(uint256 a, uint256 b, uint256 c);bitOrExp(uint256 a, uint256 b, uint256 c);bitOrShiftL(uint256 a, uint256 b, uint256 c);bitOrShiftR(uint256 a, uint256 b, uint256 c);bitOrBitAnd(uint256 a, uint256 b, uint256 c);bitOrBitOr(uint256 a, uint256 b, uint256 c);bitOrBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/BinaryOperators/BinaryOperators.sol,someFunction();someFunction();someFunction();someFunction();someFunction();someFunction();someFunction()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/BinaryOperators/BinaryOperators.sol,someFunction();someFunction();someFunction();someFunction();someFunction();someFunction();someFunction()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/BinaryOperators/BinaryOperators.sol,someFunction();someFunction();someFunction();someFunction();someFunction();someFunction();someFunction()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/BinaryOperators/BinaryOperators.sol,someFunction();someFunction();someFunction();someFunction();someFunction();someFunction();someFunction()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/BinaryOperators/BinaryOperators.sol,someFunction();someFunction();someFunction();someFunction();someFunction();someFunction();someFunction()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/StyleGuide/BlankLines.sol,spam();ham()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/StyleGuide/BlankLines.sol,spam();ham()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/StyleGuide/BlankLines.sol,spam();ham()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/StyleGuide/BlankLines.sol,spam();ham()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/StyleGuide/BlankLines.sol,spam();ham()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solparse-exp-jb/test/tryparse-contract.sol,"_msgSender();_msgData();owner();renounceOwnership();transferOwnership(address newOwner);add(uint256 a, uint256 b);sub(uint256 a, uint256 b);sub(uint256 a, uint256 b, string memory errorMessage);mul(uint256 a, uint256 b);div(uint256 a, uint256 b);div(uint256 a, uint256 b, string memory errorMessage);mod(uint256 a, uint256 b);mod(uint256 a, uint256 b, string memory errorMessage);totalSupply();balanceOf(address account);transfer(address recipient, uint256 amount);allowance(address owner, address spender);approve(address spender, uint256 amount);transferFrom(address sender, address recipient, uint256 amount);isContract(address account);sendValue(address payable recipient, uint256 amount);functionCall(address target, bytes memory data);functionCall(address target, bytes memory data, string memory errorMessage);functionCallWithValue(address target, bytes memory data, uint256 value);functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage);_functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage);name();symbol();decimals();totalSupply();balanceOf(address account);transfer(address recipient, uint256 amount);allowance(address owner, address spender);approve(address spender, uint256 amount);transferFrom(address sender, address recipient, uint256 amount);increaseAllowance(address spender, uint256 addedValue);decreaseAllowance(address spender, uint256 subtractedValue);_transfer(address sender, address recipient, uint256 amount);_mint(address account, uint256 amount);_burn(address account, uint256 amount);_approve(address owner, address spender, uint256 amount);_beforeTokenTransfer(address from, address to, uint256 amount);feeTo();feeToSetter();getPair(address tokenA, address tokenB);allPairs(uint);allPairsLength();createPair(address tokenA, address tokenB);setFeeTo(address);setFeeToSetter(address);name();symbol();decimals();totalSupply();balanceOf(address owner);allowance(address owner, address spender);approve(address spender, uint value);transfer(address to, uint value);transferFrom(address from, address to, uint value);DOMAIN_SEPARATOR();PERMIT_TYPEHASH();nonces(address owner);permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s);factory();WETH();swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline);swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline);swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline);swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline);quote(uint amountA, uint reserveA, uint reserveB);getAmountOut(uint amountIn, uint reserveIn, uint reserveOut);getAmountIn(uint amountOut, uint reserveIn, uint reserveOut);getAmountsOut(uint amountIn, address[] calldata path);getAmountsIn(uint amountOut, address[] calldata path);lockLotteryContractA();lockLotteryContractB();swapAndLiquify(uint256 contractTokenBalance);swapTokensForEth(uint256 tokenAmount);addLiquidity(uint256 tokenAmount, uint256 ethAmount);updateMinTokensBeforeSwap(uint256 _minTokensBeforeSwap);setFeesEnabled()"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solparse-exp-jb/test/tryparse-contract.sol,"_msgSender();_msgData();owner();renounceOwnership();transferOwnership(address newOwner);add(uint256 a, uint256 b);sub(uint256 a, uint256 b);sub(uint256 a, uint256 b, string memory errorMessage);mul(uint256 a, uint256 b);div(uint256 a, uint256 b);div(uint256 a, uint256 b, string memory errorMessage);mod(uint256 a, uint256 b);mod(uint256 a, uint256 b, string memory errorMessage);totalSupply();balanceOf(address account);transfer(address recipient, uint256 amount);allowance(address owner, address spender);approve(address spender, uint256 amount);transferFrom(address sender, address recipient, uint256 amount);isContract(address account);sendValue(address payable recipient, uint256 amount);functionCall(address target, bytes memory data);functionCall(address target, bytes memory data, string memory errorMessage);functionCallWithValue(address target, bytes memory data, uint256 value);functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage);_functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage);name();symbol();decimals();totalSupply();balanceOf(address account);transfer(address recipient, uint256 amount);allowance(address owner, address spender);approve(address spender, uint256 amount);transferFrom(address sender, address recipient, uint256 amount);increaseAllowance(address spender, uint256 addedValue);decreaseAllowance(address spender, uint256 subtractedValue);_transfer(address sender, address recipient, uint256 amount);_mint(address account, uint256 amount);_burn(address account, uint256 amount);_approve(address owner, address spender, uint256 amount);_beforeTokenTransfer(address from, address to, uint256 amount);feeTo();feeToSetter();getPair(address tokenA, address tokenB);allPairs(uint);allPairsLength();createPair(address tokenA, address tokenB);setFeeTo(address);setFeeToSetter(address);name();symbol();decimals();totalSupply();balanceOf(address owner);allowance(address owner, address spender);approve(address spender, uint value);transfer(address to, uint value);transferFrom(address from, address to, uint value);DOMAIN_SEPARATOR();PERMIT_TYPEHASH();nonces(address owner);permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s);factory();WETH();swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline);swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline);swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline);swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline);quote(uint amountA, uint reserveA, uint reserveB);getAmountOut(uint amountIn, uint reserveIn, uint reserveOut);getAmountIn(uint amountOut, uint reserveIn, uint reserveOut);getAmountsOut(uint amountIn, address[] calldata path);getAmountsIn(uint amountOut, address[] calldata path);lockLotteryContractA();lockLotteryContractB();swapAndLiquify(uint256 contractTokenBalance);swapTokensForEth(uint256 tokenAmount);addLiquidity(uint256 tokenAmount, uint256 ethAmount);updateMinTokensBeforeSwap(uint256 _minTokensBeforeSwap);setFeesEnabled()"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solparse-exp-jb/test/tryparse-contract.sol,"_msgSender();_msgData();owner();renounceOwnership();transferOwnership(address newOwner);add(uint256 a, uint256 b);sub(uint256 a, uint256 b);sub(uint256 a, uint256 b, string memory errorMessage);mul(uint256 a, uint256 b);div(uint256 a, uint256 b);div(uint256 a, uint256 b, string memory errorMessage);mod(uint256 a, uint256 b);mod(uint256 a, uint256 b, string memory errorMessage);totalSupply();balanceOf(address account);transfer(address recipient, uint256 amount);allowance(address owner, address spender);approve(address spender, uint256 amount);transferFrom(address sender, address recipient, uint256 amount);isContract(address account);sendValue(address payable recipient, uint256 amount);functionCall(address target, bytes memory data);functionCall(address target, bytes memory data, string memory errorMessage);functionCallWithValue(address target, bytes memory data, uint256 value);functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage);_functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage);name();symbol();decimals();totalSupply();balanceOf(address account);transfer(address recipient, uint256 amount);allowance(address owner, address spender);approve(address spender, uint256 amount);transferFrom(address sender, address recipient, uint256 amount);increaseAllowance(address spender, uint256 addedValue);decreaseAllowance(address spender, uint256 subtractedValue);_transfer(address sender, address recipient, uint256 amount);_mint(address account, uint256 amount);_burn(address account, uint256 amount);_approve(address owner, address spender, uint256 amount);_beforeTokenTransfer(address from, address to, uint256 amount);feeTo();feeToSetter();getPair(address tokenA, address tokenB);allPairs(uint);allPairsLength();createPair(address tokenA, address tokenB);setFeeTo(address);setFeeToSetter(address);name();symbol();decimals();totalSupply();balanceOf(address owner);allowance(address owner, address spender);approve(address spender, uint value);transfer(address to, uint value);transferFrom(address from, address to, uint value);DOMAIN_SEPARATOR();PERMIT_TYPEHASH();nonces(address owner);permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s);factory();WETH();swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline);swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline);swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline);swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline);quote(uint amountA, uint reserveA, uint reserveB);getAmountOut(uint amountIn, uint reserveIn, uint reserveOut);getAmountIn(uint amountOut, uint reserveIn, uint reserveOut);getAmountsOut(uint amountIn, address[] calldata path);getAmountsIn(uint amountOut, address[] calldata path);lockLotteryContractA();lockLotteryContractB();swapAndLiquify(uint256 contractTokenBalance);swapTokensForEth(uint256 tokenAmount);addLiquidity(uint256 tokenAmount, uint256 ethAmount);updateMinTokensBeforeSwap(uint256 _minTokensBeforeSwap);setFeesEnabled()"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solparse-exp-jb/test/tryparse-contract.sol,"_msgSender();_msgData();owner();renounceOwnership();transferOwnership(address newOwner);add(uint256 a, uint256 b);sub(uint256 a, uint256 b);sub(uint256 a, uint256 b, string memory errorMessage);mul(uint256 a, uint256 b);div(uint256 a, uint256 b);div(uint256 a, uint256 b, string memory errorMessage);mod(uint256 a, uint256 b);mod(uint256 a, uint256 b, string memory errorMessage);totalSupply();balanceOf(address account);transfer(address recipient, uint256 amount);allowance(address owner, address spender);approve(address spender, uint256 amount);transferFrom(address sender, address recipient, uint256 amount);isContract(address account);sendValue(address payable recipient, uint256 amount);functionCall(address target, bytes memory data);functionCall(address target, bytes memory data, string memory errorMessage);functionCallWithValue(address target, bytes memory data, uint256 value);functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage);_functionCallWithValue(address target, bytes memory data, uint256 weiValue, string memory errorMessage);name();symbol();decimals();totalSupply();balanceOf(address account);transfer(address recipient, uint256 amount);allowance(address owner, address spender);approve(address spender, uint256 amount);transferFrom(address sender, address recipient, uint256 amount);increaseAllowance(address spender, uint256 addedValue);decreaseAllowance(address spender, uint256 subtractedValue);_transfer(address sender, address recipient, uint256 amount);_mint(address account, uint256 amount);_burn(address account, uint256 amount);_approve(address owner, address spender, uint256 amount);_beforeTokenTransfer(address from, address to, uint256 amount);feeTo();feeToSetter();getPair(address tokenA, address tokenB);allPairs(uint);allPairsLength();createPair(address tokenA, address tokenB);setFeeTo(address);setFeeToSetter(address);name();symbol();decimals();totalSupply();balanceOf(address owner);allowance(address owner, address spender);approve(address spender, uint value);transfer(address to, uint value);transferFrom(address from, address to, uint value);DOMAIN_SEPARATOR();PERMIT_TYPEHASH();nonces(address owner);permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s);factory();WETH();swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline);swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline);swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline);swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline);quote(uint amountA, uint reserveA, uint reserveB);getAmountOut(uint amountIn, uint reserveIn, uint reserveOut);getAmountIn(uint amountOut, uint reserveIn, uint reserveOut);getAmountsOut(uint amountIn, address[] calldata path);getAmountsIn(uint amountOut, address[] calldata path);lockLotteryContractA();lockLotteryContractB();swapAndLiquify(uint256 contractTokenBalance);swapTokensForEth(uint256 tokenAmount);addLiquidity(uint256 tokenAmount, uint256 ethAmount);updateMinTokensBeforeSwap(uint256 _minTokensBeforeSwap);setFeesEnabled()"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/Comments/Comments.sol,hello();someFunction();someFunction();someFunction();someFunction();someOtherFunction(/* checking for Block comment */);f()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/Comments/Comments.sol,hello();someFunction();someFunction();someFunction();someFunction();someOtherFunction(/* checking for Block comment */);f()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/Comments/Comments.sol,hello();someFunction();someFunction();someFunction();someFunction();someOtherFunction(/* checking for Block comment */);f()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/Comments/Comments.sol,hello();someFunction();someFunction();someFunction();someFunction();someOtherFunction(/* checking for Block comment */);f()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solparse-exp-jb/test/doc_examples.sol,"f();c();test(uint class);getChoice();Base(uint i);Derived(uint i);blah();f(uint x, uint y);f(uint x, uint y);g(uint pos);setData(uint pos, uint value);getData(uint pos);sendHalf(address addr);bar(uint[] memory self, function (uint);f(uint[][] calldata x);insert(data storage self, uint value);remove(data storage self, uint value);contains(data storage self, uint value);iterate_start(data storage self);iterate_valid(data storage self, uint index);iterate_advance(data storage self, uint index);iterate_get(data storage self, uint index);insert(uint v);sum();DualIndex();set(uint key1, uint key2, uint value);transfer_ownership(address _admin);lookup(uint key1, uint key2);functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage);something();sum(uint[] storage self);someFunction();fun();at(address _addr);test();get();foobar();bax();foobar();foo();bar(lorem, ipsum, dollar, quote);axe();baxe(a, bc, def, ghij);returnNumber(uint number);alloc();ham(S storage s1, uint[] storage arr);getMyTuple();abstain();foobar();foobar();a();bar(address);dell(function(int a, bool bcd);foo()"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solparse-exp-jb/test/doc_examples.sol,"f();c();test(uint class);getChoice();Base(uint i);Derived(uint i);blah();f(uint x, uint y);f(uint x, uint y);g(uint pos);setData(uint pos, uint value);getData(uint pos);sendHalf(address addr);bar(uint[] memory self, function (uint);f(uint[][] calldata x);insert(data storage self, uint value);remove(data storage self, uint value);contains(data storage self, uint value);iterate_start(data storage self);iterate_valid(data storage self, uint index);iterate_advance(data storage self, uint index);iterate_get(data storage self, uint index);insert(uint v);sum();DualIndex();set(uint key1, uint key2, uint value);transfer_ownership(address _admin);lookup(uint key1, uint key2);functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage);something();sum(uint[] storage self);someFunction();fun();at(address _addr);test();get();foobar();bax();foobar();foo();bar(lorem, ipsum, dollar, quote);axe();baxe(a, bc, def, ghij);returnNumber(uint number);alloc();ham(S storage s1, uint[] storage arr);getMyTuple();abstain();foobar();foobar();a();bar(address);dell(function(int a, bool bcd);foo()"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/SampleCrowdsale/SampleCrowdsale.sol,"SampleCrowdsale(uint256 _startTime, uint256 _endTime, uint256 _rate, uint256 _goal, uint256 _cap, address _wallet);createTokenContract()"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/SampleCrowdsale/SampleCrowdsale.sol,"SampleCrowdsale(uint256 _startTime, uint256 _endTime, uint256 _rate, uint256 _goal, uint256 _cap, address _wallet);createTokenContract()"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/SampleCrowdsale/SampleCrowdsale.sol,"SampleCrowdsale(uint256 _startTime, uint256 _endTime, uint256 _rate, uint256 _goal, uint256 _cap, address _wallet);createTokenContract()"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/SampleCrowdsale/SampleCrowdsale.sol,"SampleCrowdsale(uint256 _startTime, uint256 _endTime, uint256 _rate, uint256 _goal, uint256 _cap, address _wallet);createTokenContract()"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/SampleCrowdsale/SampleCrowdsale.sol,"SampleCrowdsale(uint256 _startTime, uint256 _endTime, uint256 _rate, uint256 _goal, uint256 _cap, address _wallet);createTokenContract()"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/Parentheses/ShiftRNoParentheses.sol,"shiftRAdd(uint256 a, uint256 b, uint256 c);shiftRSub(uint256 a, uint256 b, uint256 c);shiftRMul(uint256 a, uint256 b, uint256 c);shiftRDiv(uint256 a, uint256 b, uint256 c);shiftRMod(uint256 a, uint256 b, uint256 c);shiftRExp(uint256 a, uint256 b, uint256 c);shiftRShiftL(uint256 a, uint256 b, uint256 c);shiftRShiftR(uint256 a, uint256 b, uint256 c);shiftRBitAnd(uint256 a, uint256 b, uint256 c);shiftRBitOr(uint256 a, uint256 b, uint256 c);shiftRBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/Parentheses/ShiftRNoParentheses.sol,"shiftRAdd(uint256 a, uint256 b, uint256 c);shiftRSub(uint256 a, uint256 b, uint256 c);shiftRMul(uint256 a, uint256 b, uint256 c);shiftRDiv(uint256 a, uint256 b, uint256 c);shiftRMod(uint256 a, uint256 b, uint256 c);shiftRExp(uint256 a, uint256 b, uint256 c);shiftRShiftL(uint256 a, uint256 b, uint256 c);shiftRShiftR(uint256 a, uint256 b, uint256 c);shiftRBitAnd(uint256 a, uint256 b, uint256 c);shiftRBitOr(uint256 a, uint256 b, uint256 c);shiftRBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/Parentheses/ShiftRNoParentheses.sol,"shiftRAdd(uint256 a, uint256 b, uint256 c);shiftRSub(uint256 a, uint256 b, uint256 c);shiftRMul(uint256 a, uint256 b, uint256 c);shiftRDiv(uint256 a, uint256 b, uint256 c);shiftRMod(uint256 a, uint256 b, uint256 c);shiftRExp(uint256 a, uint256 b, uint256 c);shiftRShiftL(uint256 a, uint256 b, uint256 c);shiftRShiftR(uint256 a, uint256 b, uint256 c);shiftRBitAnd(uint256 a, uint256 b, uint256 c);shiftRBitOr(uint256 a, uint256 b, uint256 c);shiftRBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/Parentheses/ShiftRNoParentheses.sol,"shiftRAdd(uint256 a, uint256 b, uint256 c);shiftRSub(uint256 a, uint256 b, uint256 c);shiftRMul(uint256 a, uint256 b, uint256 c);shiftRDiv(uint256 a, uint256 b, uint256 c);shiftRMod(uint256 a, uint256 b, uint256 c);shiftRExp(uint256 a, uint256 b, uint256 c);shiftRShiftL(uint256 a, uint256 b, uint256 c);shiftRShiftR(uint256 a, uint256 b, uint256 c);shiftRBitAnd(uint256 a, uint256 b, uint256 c);shiftRBitOr(uint256 a, uint256 b, uint256 c);shiftRBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solium/test/lib/rules/blank-lines/reject/contract.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solium/test/lib/rules/blank-lines/reject/contract.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solium/test/lib/rules/blank-lines/reject/contract.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solium/test/lib/rules/blank-lines/reject/contract.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solium/test/lib/rules/blank-lines/reject/contract.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/quotes/Quotes.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/quotes/Quotes.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/quotes/Quotes.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/quotes/Quotes.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/AddressPayable/AddressPayable.sol,"sendSomeEth(address payable to, address payable[] memory world)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/AddressPayable/AddressPayable.sol,"sendSomeEth(address payable to, address payable[] memory world)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/AddressPayable/AddressPayable.sol,"sendSomeEth(address payable to, address payable[] memory world)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/AddressPayable/AddressPayable.sol,"sendSomeEth(address payable to, address payable[] memory world)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/AddressPayable/AddressPayable.sol,"sendSomeEth(address payable to, address payable[] memory world)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solium/test/lib/rules/indentation/accept/one-line-struct.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solium/test/lib/rules/indentation/accept/one-line-struct.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solium/test/lib/rules/indentation/accept/one-line-struct.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solium/test/lib/rules/indentation/accept/one-line-struct.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solium/test/lib/rules/indentation/accept/one-line-struct.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/ModifierDefinitions/ModifierDefinitions.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/ModifierDefinitions/ModifierDefinitions.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/ModifierDefinitions/ModifierDefinitions.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/ModifierDefinitions/ModifierDefinitions.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/ModifierDefinitions/ModifierDefinitions.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/Tupples/Tupples.sol,hello();world(address payable _yo)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/Tupples/Tupples.sol,hello();world(address payable _yo)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/Tupples/Tupples.sol,hello();world(address payable _yo)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/Tupples/Tupples.sol,hello();world(address payable _yo)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/Tupples/Tupples.sol,hello();world(address payable _yo)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/StyleGuide/FunctionDeclaration.sol,"increment(uint x);increment(uint x);increment(uint x);increment(uint x);kill();thisFunctionNameIsReallyLong(address x, address y, address z);thisFunctionNameIsReallyLong(address x, address y, address z);thisFunctionNameIsReallyLong(address x, address y, address z)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/StyleGuide/FunctionDeclaration.sol,"increment(uint x);increment(uint x);increment(uint x);increment(uint x);kill();thisFunctionNameIsReallyLong(address x, address y, address z);thisFunctionNameIsReallyLong(address x, address y, address z);thisFunctionNameIsReallyLong(address x, address y, address z)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/StyleGuide/FunctionDeclaration.sol,"increment(uint x);increment(uint x);increment(uint x);increment(uint x);kill();thisFunctionNameIsReallyLong(address x, address y, address z);thisFunctionNameIsReallyLong(address x, address y, address z);thisFunctionNameIsReallyLong(address x, address y, address z)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/StyleGuide/FunctionDeclaration.sol,"increment(uint x);increment(uint x);increment(uint x);increment(uint x);kill();thisFunctionNameIsReallyLong(address x, address y, address z);thisFunctionNameIsReallyLong(address x, address y, address z);thisFunctionNameIsReallyLong(address x, address y, address z)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/StyleGuide/FunctionDeclaration.sol,"increment(uint x);increment(uint x);increment(uint x);increment(uint x);kill();thisFunctionNameIsReallyLong(address x, address y, address z);thisFunctionNameIsReallyLong(address x, address y, address z);thisFunctionNameIsReallyLong(address x, address y, address z)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/Immutable/Immutable.sol,isBalanceTooHigh(address _other)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/Immutable/Immutable.sol,isBalanceTooHigh(address _other)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/Immutable/Immutable.sol,isBalanceTooHigh(address _other)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/Immutable/Immutable.sol,isBalanceTooHigh(address _other)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/Immutable/Immutable.sol,isBalanceTooHigh(address _other)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/sol-explore/examples/sample.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/sol-explore/examples/sample.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/sol-explore/examples/sample.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/sol-explore/examples/sample.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/sol-explore/examples/sample.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solparse-exp-jb/test/another-test.sol,lockLotteryContractA()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solparse-exp-jb/test/tryparse-generic.sol,lockLotteryContractA()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solparse-exp-jb/test/tryparse-generic.sol,lockLotteryContractA()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solparse-exp-jb/test/tryparse-generic.sol,lockLotteryContractA()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solparse-exp-jb/test/tryparse-generic.sol,lockLotteryContractA()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/Parentheses/ModNoParentheses.sol,"modAdd(uint256 a, uint256 b, uint256 c);modSub(uint256 a, uint256 b, uint256 c);modMul(uint256 a, uint256 b, uint256 c);modDiv(uint256 a, uint256 b, uint256 c);modMod(uint256 a, uint256 b, uint256 c);modExp(uint256 a, uint256 b, uint256 c);modShiftL(uint256 a, uint256 b, uint256 c);modShiftR(uint256 a, uint256 b, uint256 c);modBitAnd(uint256 a, uint256 b, uint256 c);modBitOr(uint256 a, uint256 b, uint256 c);modBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/Parentheses/ModNoParentheses.sol,"modAdd(uint256 a, uint256 b, uint256 c);modSub(uint256 a, uint256 b, uint256 c);modMul(uint256 a, uint256 b, uint256 c);modDiv(uint256 a, uint256 b, uint256 c);modMod(uint256 a, uint256 b, uint256 c);modExp(uint256 a, uint256 b, uint256 c);modShiftL(uint256 a, uint256 b, uint256 c);modShiftR(uint256 a, uint256 b, uint256 c);modBitAnd(uint256 a, uint256 b, uint256 c);modBitOr(uint256 a, uint256 b, uint256 c);modBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/Parentheses/ModNoParentheses.sol,"modAdd(uint256 a, uint256 b, uint256 c);modSub(uint256 a, uint256 b, uint256 c);modMul(uint256 a, uint256 b, uint256 c);modDiv(uint256 a, uint256 b, uint256 c);modMod(uint256 a, uint256 b, uint256 c);modExp(uint256 a, uint256 b, uint256 c);modShiftL(uint256 a, uint256 b, uint256 c);modShiftR(uint256 a, uint256 b, uint256 c);modBitAnd(uint256 a, uint256 b, uint256 c);modBitOr(uint256 a, uint256 b, uint256 c);modBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/Parentheses/ModNoParentheses.sol,"modAdd(uint256 a, uint256 b, uint256 c);modSub(uint256 a, uint256 b, uint256 c);modMul(uint256 a, uint256 b, uint256 c);modDiv(uint256 a, uint256 b, uint256 c);modMod(uint256 a, uint256 b, uint256 c);modExp(uint256 a, uint256 b, uint256 c);modShiftL(uint256 a, uint256 b, uint256 c);modShiftR(uint256 a, uint256 b, uint256 c);modBitAnd(uint256 a, uint256 b, uint256 c);modBitOr(uint256 a, uint256 b, uint256 c);modBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/HexLiteral/HexLiteral.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/HexLiteral/HexLiteral.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/HexLiteral/HexLiteral.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/HexLiteral/HexLiteral.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/ExplicitVariableTypes/ExplicitVariableTypes.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/ExplicitVariableTypes/ExplicitVariableTypes.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/ExplicitVariableTypes/ExplicitVariableTypes.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/ExplicitVariableTypes/ExplicitVariableTypes.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/Assembly/Assembly.sol,ifAssembly();caseAssembly();forAssembly();callWithComments();assemblyFunctionNoParameters();assemblyFunctionOneParameter();assemblyFunctionThreeParameters();assemblyFunctionLongParameters();assemblyFunctionLongReturnParameters();assemblyFunctionLongParametersAndReturnParameters();assemblyNoParameterCalls();assemblyLabels()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/Inbox/Inbox.sol,setMessage(string newMessage);nothingHere();nothingHereMultipleComments()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/Inbox/Inbox.sol,setMessage(string newMessage);nothingHere();nothingHereMultipleComments()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/Inbox/Inbox.sol,setMessage(string newMessage);nothingHere();nothingHereMultipleComments()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/Inbox/Inbox.sol,setMessage(string newMessage);nothingHere();nothingHereMultipleComments()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/Inbox/Inbox.sol,setMessage(string newMessage);nothingHere();nothingHereMultipleComments()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/NameValueExpression/NameValueExpression.sol,callFeed()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/NameValueExpression/NameValueExpression.sol,callFeed()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/NameValueExpression/NameValueExpression.sol,callFeed()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/NameValueExpression/NameValueExpression.sol,callFeed()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/NameValueExpression/NameValueExpression.sol,callFeed()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solium/test/lib/rules/indentation/accept/one-line-function-call.sol,foo();bar()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solium/test/lib/rules/indentation/accept/one-line-function-call.sol,foo();bar()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solium/test/lib/rules/indentation/accept/one-line-function-call.sol,foo();bar()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solium/test/lib/rules/indentation/accept/one-line-function-call.sol,foo();bar()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solium/test/lib/rules/indentation/accept/one-line-function-call.sol,foo();bar()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solium/test/lib/rules/indentation/reject/multiline-call-expression.sol,Counter();inc();incBy(uint n);incByTwo()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solium/test/lib/rules/indentation/reject/multiline-call-expression.sol,Counter();inc();incBy(uint n);incByTwo()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solium/test/lib/rules/indentation/reject/multiline-call-expression.sol,Counter();inc();incBy(uint n);incByTwo()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solium/test/lib/rules/indentation/reject/multiline-call-expression.sol,Counter();inc();incBy(uint n);incByTwo()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solium/test/lib/rules/indentation/reject/multiline-call-expression.sol,Counter();inc();incBy(uint n);incByTwo()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/CustomErrors/CustomErrors.sol,throwCustomError()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/CustomErrors/CustomErrors.sol,throwCustomError()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/CustomErrors/CustomErrors.sol,throwCustomError()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/CustomErrors/CustomErrors.sol,throwCustomError()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/AllSolidityFeatures/AllSolidityFeatures.sol,"f();c();test();getChoice();Base(uint i);Derived(uint i);f(uint x, uint y);f(uint x, uint y);g(uint pos);setData(uint pos, uint value);getData(uint pos);sendHalf(address addr);insert(data storage self, uint value);remove(data storage self, uint value);contains(data storage self, uint value);iterate_start(data storage self);iterate_valid(data storage self, uint index);iterate_advance(data storage self, uint index);iterate_get(data storage self, uint index);insert(uint v);sum();DualIndex();set(uint key1, uint key2, uint value);transfer_ownership(address _admin);lookup(uint key1, uint key2);something();sum(uint[] storage self);someFunction();fun();at(address _addr);test();get();returnNumber(uint number);alloc();ham(S storage s1, uint[] storage arr);getMyTuple();abstain();foobar();foobar();a();a();foo();doStuff();doStuff();foo();bar();baz();long();foo()"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/SplittableCommodity/SplittableCommodity.sol,"split(uint _tokenId, address _to, uint256 _amount)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/SplittableCommodity/SplittableCommodity.sol,"split(uint _tokenId, address _to, uint256 _amount)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/SplittableCommodity/SplittableCommodity.sol,"split(uint _tokenId, address _to, uint256 _amount)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/SplittableCommodity/SplittableCommodity.sol,"split(uint _tokenId, address _to, uint256 _amount)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/SplittableCommodity/SplittableCommodity.sol,"split(uint _tokenId, address _to, uint256 _amount)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/Parentheses/DivNoParentheses.sol,"divAdd(uint256 a, uint256 b, uint256 c);divSub(uint256 a, uint256 b, uint256 c);divMul(uint256 a, uint256 b, uint256 c);divDiv(uint256 a, uint256 b, uint256 c);divMod(uint256 a, uint256 b, uint256 c);divExp(uint256 a, uint256 b, uint256 c);divShiftL(uint256 a, uint256 b, uint256 c);divShiftR(uint256 a, uint256 b, uint256 c);divBitAnd(uint256 a, uint256 b, uint256 c);divBitOr(uint256 a, uint256 b, uint256 c);divBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/Parentheses/DivNoParentheses.sol,"divAdd(uint256 a, uint256 b, uint256 c);divSub(uint256 a, uint256 b, uint256 c);divMul(uint256 a, uint256 b, uint256 c);divDiv(uint256 a, uint256 b, uint256 c);divMod(uint256 a, uint256 b, uint256 c);divExp(uint256 a, uint256 b, uint256 c);divShiftL(uint256 a, uint256 b, uint256 c);divShiftR(uint256 a, uint256 b, uint256 c);divBitAnd(uint256 a, uint256 b, uint256 c);divBitOr(uint256 a, uint256 b, uint256 c);divBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/Parentheses/DivNoParentheses.sol,"divAdd(uint256 a, uint256 b, uint256 c);divSub(uint256 a, uint256 b, uint256 c);divMul(uint256 a, uint256 b, uint256 c);divDiv(uint256 a, uint256 b, uint256 c);divMod(uint256 a, uint256 b, uint256 c);divExp(uint256 a, uint256 b, uint256 c);divShiftL(uint256 a, uint256 b, uint256 c);divShiftR(uint256 a, uint256 b, uint256 c);divBitAnd(uint256 a, uint256 b, uint256 c);divBitOr(uint256 a, uint256 b, uint256 c);divBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/Parentheses/DivNoParentheses.sol,"divAdd(uint256 a, uint256 b, uint256 c);divSub(uint256 a, uint256 b, uint256 c);divMul(uint256 a, uint256 b, uint256 c);divDiv(uint256 a, uint256 b, uint256 c);divMod(uint256 a, uint256 b, uint256 c);divExp(uint256 a, uint256 b, uint256 c);divShiftL(uint256 a, uint256 b, uint256 c);divShiftR(uint256 a, uint256 b, uint256 c);divBitAnd(uint256 a, uint256 b, uint256 c);divBitOr(uint256 a, uint256 b, uint256 c);divBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/BasicIterator/BasicIterator.sol,BasicIterator();getSum();kill()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/BasicIterator/BasicIterator.sol,BasicIterator();getSum();kill()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/BasicIterator/BasicIterator.sol,BasicIterator();getSum();kill()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/BasicIterator/BasicIterator.sol,BasicIterator();getSum();kill()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/BasicIterator/BasicIterator.sol,BasicIterator();getSum();kill()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solium/test/lib/rules/quotes/double-full.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solium/test/lib/rules/quotes/double-full.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solium/test/lib/rules/quotes/double-full.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solium/test/lib/rules/quotes/double-full.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solium/test/lib/rules/quotes/double-full.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solium/test/lib/rules/quotes/double-quoted.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solium/test/lib/rules/quotes/double-quoted.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solium/test/lib/rules/quotes/double-quoted.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solium/test/lib/rules/quotes/double-quoted.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solium/test/lib/rules/quotes/double-quoted.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/Parentheses/BitXorNoParentheses.sol,"bitXorAdd(uint256 a, uint256 b, uint256 c);bitXorSub(uint256 a, uint256 b, uint256 c);bitXorMul(uint256 a, uint256 b, uint256 c);bitXorDiv(uint256 a, uint256 b, uint256 c);bitXorMod(uint256 a, uint256 b, uint256 c);bitXorExp(uint256 a, uint256 b, uint256 c);bitXorShiftL(uint256 a, uint256 b, uint256 c);bitXorShiftR(uint256 a, uint256 b, uint256 c);bitXorBitAnd(uint256 a, uint256 b, uint256 c);bitXorBitOr(uint256 a, uint256 b, uint256 c);bitXorBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/Parentheses/BitXorNoParentheses.sol,"bitXorAdd(uint256 a, uint256 b, uint256 c);bitXorSub(uint256 a, uint256 b, uint256 c);bitXorMul(uint256 a, uint256 b, uint256 c);bitXorDiv(uint256 a, uint256 b, uint256 c);bitXorMod(uint256 a, uint256 b, uint256 c);bitXorExp(uint256 a, uint256 b, uint256 c);bitXorShiftL(uint256 a, uint256 b, uint256 c);bitXorShiftR(uint256 a, uint256 b, uint256 c);bitXorBitAnd(uint256 a, uint256 b, uint256 c);bitXorBitOr(uint256 a, uint256 b, uint256 c);bitXorBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/Parentheses/BitXorNoParentheses.sol,"bitXorAdd(uint256 a, uint256 b, uint256 c);bitXorSub(uint256 a, uint256 b, uint256 c);bitXorMul(uint256 a, uint256 b, uint256 c);bitXorDiv(uint256 a, uint256 b, uint256 c);bitXorMod(uint256 a, uint256 b, uint256 c);bitXorExp(uint256 a, uint256 b, uint256 c);bitXorShiftL(uint256 a, uint256 b, uint256 c);bitXorShiftR(uint256 a, uint256 b, uint256 c);bitXorBitAnd(uint256 a, uint256 b, uint256 c);bitXorBitOr(uint256 a, uint256 b, uint256 c);bitXorBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/Parentheses/BitXorNoParentheses.sol,"bitXorAdd(uint256 a, uint256 b, uint256 c);bitXorSub(uint256 a, uint256 b, uint256 c);bitXorMul(uint256 a, uint256 b, uint256 c);bitXorDiv(uint256 a, uint256 b, uint256 c);bitXorMod(uint256 a, uint256 b, uint256 c);bitXorExp(uint256 a, uint256 b, uint256 c);bitXorShiftL(uint256 a, uint256 b, uint256 c);bitXorShiftR(uint256 a, uint256 b, uint256 c);bitXorBitAnd(uint256 a, uint256 b, uint256 c);bitXorBitOr(uint256 a, uint256 b, uint256 c);bitXorBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/IndexRangeAccess/IndexRangeAccess.sol,log(bytes calldata value)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/IndexRangeAccess/IndexRangeAccess.sol,log(bytes calldata value)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/IndexRangeAccess/IndexRangeAccess.sol,log(bytes calldata value)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/IndexRangeAccess/IndexRangeAccess.sol,log(bytes calldata value)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/IndexRangeAccess/IndexRangeAccess.sol,log(bytes calldata value)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/Ownable/Ownable.sol,owner();isOwner();renounceOwnership();transferOwnership(address newOwner);_transferOwnership(address newOwner)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/Ownable/Ownable.sol,owner();isOwner();renounceOwnership();transferOwnership(address newOwner);_transferOwnership(address newOwner)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/Ownable/Ownable.sol,owner();isOwner();renounceOwnership();transferOwnership(address newOwner);_transferOwnership(address newOwner)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/Ownable/Ownable.sol,owner();isOwner();renounceOwnership();transferOwnership(address newOwner);_transferOwnership(address newOwner)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/Ownable/Ownable.sol,owner();isOwner();renounceOwnership();transferOwnership(address newOwner);_transferOwnership(address newOwner)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solium/test/lib/rules/indentation/reject/mixed-tabs-spaces.sol,Counter();inc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solium/test/lib/rules/indentation/reject/mixed-tabs-spaces.sol,Counter();inc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solium/test/lib/rules/indentation/reject/mixed-tabs-spaces.sol,Counter();inc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solium/test/lib/rules/indentation/reject/mixed-tabs-spaces.sol,Counter();inc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solium/test/lib/rules/indentation/reject/mixed-tabs-spaces.sol,Counter();inc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/StyleGuide/MaximumLineLength.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/StyleGuide/MaximumLineLength.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/StyleGuide/MaximumLineLength.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/StyleGuide/MaximumLineLength.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/StyleGuide/MaximumLineLength.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solparse-exp-jb/test/example_incomplete.sol,test(int number)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solparse-exp-jb/test/example_incomplete.sol,test(int number)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solparse-exp-jb/test/example_incomplete.sol,test(int number)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solparse-exp-jb/test/example_incomplete.sol,test(int number)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solparse-exp-jb/test/example_incomplete.sol,test(int number)
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solium/test/lib/rules/indentation/reject/config-two-spaces.sol,Counter();inc();abstractFunc();abstractFunc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solium/test/lib/rules/indentation/reject/config-two-spaces.sol,Counter();inc();abstractFunc();abstractFunc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solium/test/lib/rules/indentation/reject/config-two-spaces.sol,Counter();inc();abstractFunc();abstractFunc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solium/test/lib/rules/indentation/reject/config-two-spaces.sol,Counter();inc();abstractFunc();abstractFunc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solium/test/lib/rules/indentation/reject/config-two-spaces.sol,Counter();inc();abstractFunc();abstractFunc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solium/test/lib/rules/indentation/accept/multiline-call-declaration.sol,Counter();inc();incByTwo()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solium/test/lib/rules/indentation/accept/multiline-call-declaration.sol,Counter();inc();incByTwo()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solium/test/lib/rules/indentation/accept/multiline-call-declaration.sol,Counter();inc();incByTwo()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solium/test/lib/rules/indentation/accept/multiline-call-declaration.sol,Counter();inc();incByTwo()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solium/test/lib/rules/indentation/accept/multiline-call-declaration.sol,Counter();inc();incByTwo()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solium/test/lib/rules/indentation/reject/config-tabs.sol,Counter();inc();abstractFunc();abstractFunc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solium/test/lib/rules/indentation/reject/config-tabs.sol,Counter();inc();abstractFunc();abstractFunc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solium/test/lib/rules/indentation/reject/config-tabs.sol,Counter();inc();abstractFunc();abstractFunc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solium/test/lib/rules/indentation/reject/config-tabs.sol,Counter();inc();abstractFunc();abstractFunc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solium/test/lib/rules/indentation/reject/config-tabs.sol,Counter();inc();abstractFunc();abstractFunc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/StyleGuide/VariableDeclarations.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/StyleGuide/VariableDeclarations.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/StyleGuide/VariableDeclarations.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/StyleGuide/VariableDeclarations.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/StyleGuide/VariableDeclarations.sol,""
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solium/test/lib/rules/indentation/accept/multiline-array.sol,Counter();inc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/solium/test/lib/rules/indentation/accept/multiline-array.sol,Counter();inc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solium/test/lib/rules/indentation/accept/multiline-array.sol,Counter();inc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solium/test/lib/rules/indentation/accept/multiline-array.sol,Counter();inc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solium/test/lib/rules/indentation/accept/multiline-array.sol,Counter();inc()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/Parentheses/ExpNoParentheses.sol,"expAdd(uint256 a, uint256 b, uint256 c);expSub(uint256 a, uint256 b, uint256 c);expMul(uint256 a, uint256 b, uint256 c);expDiv(uint256 a, uint256 b, uint256 c);expMod(uint256 a, uint256 b, uint256 c);expExp(uint256 a, uint256 b, uint256 c);expShiftL(uint256 a, uint256 b, uint256 c);expShiftR(uint256 a, uint256 b, uint256 c);expBitAnd(uint256 a, uint256 b, uint256 c);expBitOr(uint256 a, uint256 b, uint256 c);expBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/Parentheses/ExpNoParentheses.sol,"expAdd(uint256 a, uint256 b, uint256 c);expSub(uint256 a, uint256 b, uint256 c);expMul(uint256 a, uint256 b, uint256 c);expDiv(uint256 a, uint256 b, uint256 c);expMod(uint256 a, uint256 b, uint256 c);expExp(uint256 a, uint256 b, uint256 c);expShiftL(uint256 a, uint256 b, uint256 c);expShiftR(uint256 a, uint256 b, uint256 c);expBitAnd(uint256 a, uint256 b, uint256 c);expBitOr(uint256 a, uint256 b, uint256 c);expBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/Parentheses/ExpNoParentheses.sol,"expAdd(uint256 a, uint256 b, uint256 c);expSub(uint256 a, uint256 b, uint256 c);expMul(uint256 a, uint256 b, uint256 c);expDiv(uint256 a, uint256 b, uint256 c);expMod(uint256 a, uint256 b, uint256 c);expExp(uint256 a, uint256 b, uint256 c);expShiftL(uint256 a, uint256 b, uint256 c);expShiftR(uint256 a, uint256 b, uint256 c);expBitAnd(uint256 a, uint256 b, uint256 c);expBitOr(uint256 a, uint256 b, uint256 c);expBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/Parentheses/ExpNoParentheses.sol,"expAdd(uint256 a, uint256 b, uint256 c);expSub(uint256 a, uint256 b, uint256 c);expMul(uint256 a, uint256 b, uint256 c);expDiv(uint256 a, uint256 b, uint256 c);expMod(uint256 a, uint256 b, uint256 c);expExp(uint256 a, uint256 b, uint256 c);expShiftL(uint256 a, uint256 b, uint256 c);expShiftR(uint256 a, uint256 b, uint256 c);expBitAnd(uint256 a, uint256 b, uint256 c);expBitOr(uint256 a, uint256 b, uint256 c);expBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/Parentheses/AddNoParentheses.sol,"addAdd(uint256 a, uint256 b, uint256 c);addSub(uint256 a, uint256 b, uint256 c);addMul(uint256 a, uint256 b, uint256 c);addDiv(uint256 a, uint256 b, uint256 c);addMod(uint256 a, uint256 b, uint256 c);addExp(uint256 a, uint256 b, uint256 c);addShiftL(uint256 a, uint256 b, uint256 c);addShiftR(uint256 a, uint256 b, uint256 c);addBitAnd(uint256 a, uint256 b, uint256 c);addBitOr(uint256 a, uint256 b, uint256 c);addBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/Parentheses/AddNoParentheses.sol,"addAdd(uint256 a, uint256 b, uint256 c);addSub(uint256 a, uint256 b, uint256 c);addMul(uint256 a, uint256 b, uint256 c);addDiv(uint256 a, uint256 b, uint256 c);addMod(uint256 a, uint256 b, uint256 c);addExp(uint256 a, uint256 b, uint256 c);addShiftL(uint256 a, uint256 b, uint256 c);addShiftR(uint256 a, uint256 b, uint256 c);addBitAnd(uint256 a, uint256 b, uint256 c);addBitOr(uint256 a, uint256 b, uint256 c);addBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/Parentheses/AddNoParentheses.sol,"addAdd(uint256 a, uint256 b, uint256 c);addSub(uint256 a, uint256 b, uint256 c);addMul(uint256 a, uint256 b, uint256 c);addDiv(uint256 a, uint256 b, uint256 c);addMod(uint256 a, uint256 b, uint256 c);addExp(uint256 a, uint256 b, uint256 c);addShiftL(uint256 a, uint256 b, uint256 c);addShiftR(uint256 a, uint256 b, uint256 c);addBitAnd(uint256 a, uint256 b, uint256 c);addBitOr(uint256 a, uint256 b, uint256 c);addBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/Parentheses/AddNoParentheses.sol,"addAdd(uint256 a, uint256 b, uint256 c);addSub(uint256 a, uint256 b, uint256 c);addMul(uint256 a, uint256 b, uint256 c);addDiv(uint256 a, uint256 b, uint256 c);addMod(uint256 a, uint256 b, uint256 c);addExp(uint256 a, uint256 b, uint256 c);addShiftL(uint256 a, uint256 b, uint256 c);addShiftR(uint256 a, uint256 b, uint256 c);addBitAnd(uint256 a, uint256 b, uint256 c);addBitOr(uint256 a, uint256 b, uint256 c);addBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/Parentheses/MulNoParentheses.sol,"mulAdd(uint256 a, uint256 b, uint256 c);mulSub(uint256 a, uint256 b, uint256 c);mulMul(uint256 a, uint256 b, uint256 c);mulDiv(uint256 a, uint256 b, uint256 c);mulMod(uint256 a, uint256 b, uint256 c);mulExp(uint256 a, uint256 b, uint256 c);mulShiftL(uint256 a, uint256 b, uint256 c);mulShiftR(uint256 a, uint256 b, uint256 c);mulBitAnd(uint256 a, uint256 b, uint256 c);mulBitOr(uint256 a, uint256 b, uint256 c);mulBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/Parentheses/MulNoParentheses.sol,"mulAdd(uint256 a, uint256 b, uint256 c);mulSub(uint256 a, uint256 b, uint256 c);mulMul(uint256 a, uint256 b, uint256 c);mulDiv(uint256 a, uint256 b, uint256 c);mulMod(uint256 a, uint256 b, uint256 c);mulExp(uint256 a, uint256 b, uint256 c);mulShiftL(uint256 a, uint256 b, uint256 c);mulShiftR(uint256 a, uint256 b, uint256 c);mulBitAnd(uint256 a, uint256 b, uint256 c);mulBitOr(uint256 a, uint256 b, uint256 c);mulBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/Parentheses/MulNoParentheses.sol,"mulAdd(uint256 a, uint256 b, uint256 c);mulSub(uint256 a, uint256 b, uint256 c);mulMul(uint256 a, uint256 b, uint256 c);mulDiv(uint256 a, uint256 b, uint256 c);mulMod(uint256 a, uint256 b, uint256 c);mulExp(uint256 a, uint256 b, uint256 c);mulShiftL(uint256 a, uint256 b, uint256 c);mulShiftR(uint256 a, uint256 b, uint256 c);mulBitAnd(uint256 a, uint256 b, uint256 c);mulBitOr(uint256 a, uint256 b, uint256 c);mulBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/Parentheses/MulNoParentheses.sol,"mulAdd(uint256 a, uint256 b, uint256 c);mulSub(uint256 a, uint256 b, uint256 c);mulMul(uint256 a, uint256 b, uint256 c);mulDiv(uint256 a, uint256 b, uint256 c);mulMod(uint256 a, uint256 b, uint256 c);mulExp(uint256 a, uint256 b, uint256 c);mulShiftL(uint256 a, uint256 b, uint256 c);mulShiftR(uint256 a, uint256 b, uint256 c);mulBitAnd(uint256 a, uint256 b, uint256 c);mulBitOr(uint256 a, uint256 b, uint256 c);mulBitXor(uint256 a, uint256 b, uint256 c)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/solparse-exp-jb/test/parse-errordeclarations.sol,throwError()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/solparse-exp-jb/test/parse-errordeclarations.sol,throwError()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/solparse-exp-jb/test/parse-errordeclarations.sol,throwError()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/solparse-exp-jb/test/parse-errordeclarations.sol,throwError()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/Issues/Issue205.sol,"example(address token, uint amount)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/Issues/Issue205.sol,"example(address token, uint amount)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/Issues/Issue205.sol,"example(address token, uint amount)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/Issues/Issue205.sol,"example(address token, uint amount)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/Issues/Issue205.sol,"example(address token, uint amount)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/SimpleStorage/SimpleStorage.sol,set(uint x);get()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/SimpleStorage/SimpleStorage.sol,set(uint x);get()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/SimpleStorage/SimpleStorage.sol,set(uint x);get()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.114/node_modules/prettier-plugin-solidity/tests/SimpleStorage/SimpleStorage.sol,set(uint x);get()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/SimpleStorage/SimpleStorage.sol,set(uint x);get()
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.116/node_modules/prettier-plugin-solidity/tests/AllSolidityFeatures/AllSolidityFeatures.sol,"f();c();test();getChoice();Base(uint i);Derived(uint i);f(uint x, uint y);f(uint x, uint y);g(uint pos);setData(uint pos, uint value);getData(uint pos);sendHalf(address addr);insert(data storage self, uint value);remove(data storage self, uint value);contains(data storage self, uint value);iterate_start(data storage self);iterate_valid(data storage self, uint index);iterate_advance(data storage self, uint index);iterate_get(data storage self, uint index);insert(uint v);sum();DualIndex();set(uint key1, uint key2, uint value);transfer_ownership(address _admin);lookup(uint key1, uint key2);something();sum(uint[] storage self);someFunction();fun();at(address _addr);test();get();returnNumber(uint number);alloc();ham(S storage s1, uint[] storage arr);getMyTuple();abstain();foobar();foobar();a();a();foo();doStuff();doStuff();foo();bar();baz();long();foo();f();g();mul(uint256 x, uint256 y)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.119/node_modules/prettier-plugin-solidity/tests/AllSolidityFeatures/AllSolidityFeatures.sol,"f();c();test();getChoice();Base(uint i);Derived(uint i);f(uint x, uint y);f(uint x, uint y);g(uint pos);setData(uint pos, uint value);getData(uint pos);sendHalf(address addr);insert(data storage self, uint value);remove(data storage self, uint value);contains(data storage self, uint value);iterate_start(data storage self);iterate_valid(data storage self, uint index);iterate_advance(data storage self, uint index);iterate_get(data storage self, uint index);insert(uint v);sum();DualIndex();set(uint key1, uint key2, uint value);transfer_ownership(address _admin);lookup(uint key1, uint key2);something();sum(uint[] storage self);someFunction();fun();at(address _addr);test();get();returnNumber(uint number);alloc();ham(S storage s1, uint[] storage arr);getMyTuple();abstain();foobar();foobar();a();a();foo();doStuff();doStuff();foo();bar();baz();long();foo();f();g();mul(uint256 x, uint256 y)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.120/node_modules/prettier-plugin-solidity/tests/AllSolidityFeatures/AllSolidityFeatures.sol,"f();c();test();getChoice();Base(uint i);Derived(uint i);f(uint x, uint y);f(uint x, uint y);g(uint pos);setData(uint pos, uint value);getData(uint pos);sendHalf(address addr);insert(data storage self, uint value);remove(data storage self, uint value);contains(data storage self, uint value);iterate_start(data storage self);iterate_valid(data storage self, uint index);iterate_advance(data storage self, uint index);iterate_get(data storage self, uint index);insert(uint v);sum();DualIndex();set(uint key1, uint key2, uint value);transfer_ownership(address _admin);lookup(uint key1, uint key2);something();sum(uint[] storage self);someFunction();fun();at(address _addr);test();get();returnNumber(uint number);alloc();ham(S storage s1, uint[] storage arr);getMyTuple();abstain();foobar();foobar();a();a();foo();doStuff();doStuff();foo();bar();baz();long();foo();f();g();mul(uint256 x, uint256 y)"
glenngillen/dotfiles,.vscode/extensions/juanblanco.solidity-0.0.118/node_modules/prettier-plugin-solidity/tests/AllSolidityFeatures/AllSolidityFeatures.sol,"f();c();test();getChoice();Base(uint i);Derived(uint i);f(uint x, uint y);f(uint x, uint y);g(uint pos);setData(uint pos, uint value);getData(uint pos);sendHalf(address addr);insert(data storage self, uint value);remove(data storage self, uint value);contains(data storage self, uint value);iterate_start(data storage self);iterate_valid(data storage self, uint index);iterate_advance(data storage self, uint index);iterate_get(data storage self, uint index);insert(uint v);sum();DualIndex();set(uint key1, uint key2, uint value);transfer_ownership(address _admin);lookup(uint key1, uint key2);something();sum(uint[] storage self);someFunction();fun();at(address _addr);test();get();returnNumber(uint number);alloc();ham(S storage s1, uint[] storage arr);getMyTuple();abstain();foobar();foobar();a();a();foo();doStuff();doStuff();foo();bar();baz();long();foo();f();g();mul(uint256 x, uint256 y)"
bobsummerwill/solidity,test/compilationTests/corion/provider.sol,"connectModule();transferEvent(address payable from, address payable to, uint256 value);newSchellingRoundEvent(uint256 roundID, uint256 reward);configure(announcementType a, uint256 b);getUserDetails(address payable addr, uint256 schellingRound);rightForInterest(uint256 value, bool priv);setRightForInterest(uint256 oldValue, uint256 newValue, bool priv);checkCorrectRate(bool priv, uint8 rate);createProvider(bool priv, string calldata name, string calldata website, string calldata country, string calldata info, uint8 rate, bool isForRent, address payable admin);setProviderDetails(address payable addr, string calldata website, string calldata country, string calldata info, uint8 rate, address payable admin);getProviderInfo(address addr, uint256 height);getProviderDetails(address payable addr, uint256 height);getProviderCurrentSupply(address addr);closeProvider();allowUsers(address provider, address[] calldata addr);disallowUsers(address provider, address[] calldata addr);joinProvider(address provider);partProvider();checkReward(address addr);getReward(address beneficiary, uint256 limit, address provider);getClientReward(uint256 limit);getProviderReward(address addr, uint256 limit);checkFloatingSupply(address providerAddress, uint256 providerHeight, bool neg, uint256 value);checkFloatingOwnSupply(address providerAddress, uint256 providerHeight, bool neg, uint256 value);TEMath(uint256 a, uint256 b, bool neg);transferEvent_(address addr, uint256 value, bool neg);getTokenBalance(address addr);checkICO()"
bobsummerwill/solidity,test/libsolidity/syntaxTests/scoping/scoping_activation.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/scoping/scoping_activation_old.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_indirectly_recursive_dynamic_array1.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/array_dynamic_3.sol,"f(uint x, uint y, uint z, uint t, uint w, uint v)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/multi_arrays.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/unbalanced_negative_stack.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/builtin_functions.sol,f();g()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/compound_sub.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/conversion/explicit_cast_function_call.sol,f(bytes32 b);g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/virtual/simple.sol,foo()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/enum_storage_eq.sol,f(D _d)
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/mapping_nonelementary_key_4.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/mapping/function_type_return_external.sol,f(function()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/var_decl_val_mismatch.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/specialFunctions/encodePacked_array_of_structs.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/change_return_types_in_interface.sol,f();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/location_specifiers_for_state_variables.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/unimplemented_without_virtual.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/array/push_no_args_1d.sol,f();lv(uint value);a(uint index);l()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/typeChecking/library_instances.sol,foo(X param)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/function_type_nested.sol,h()
bobsummerwill/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array_dynamic_static_short_decode.sol,f(uint256[][2][] calldata x)
bobsummerwill/solidity,test/libsolidity/semanticTests/structs/delete_struct.sol,getToDelete();getTopValue();getNestedValue();getTopMapping(uint index);getNestedMapping(uint index)
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/address_function_arguments_and_returns.sol,f(address);g(address payable)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/330_rational_as_exponent_value_unsigned.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_two_invocations.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/while_nested_break.sol,"f(uint x, uint y, bool b, bool c)"
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/delete.sol,internal_func();call_internal_func();call_deleted_internal_func()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/division_truncates_correctly_1.sol,"f(uint x, uint y)"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/compound_add_mapping.sol,"f(uint x, uint p)"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/mapping_equal_keys_1.sol,"f(uint x, uint y)"
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/function_entry_checks.sol,"f();g(uint x, uint y);h();i(bytes32 b);j(bool b);k(bytes32 b);s();t(uint)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/tryCatch/structured_pre_byzantium.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/hex_literal_to_bytesXX_same_size_explicit.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/special/msg_sender_fail_1.sol,f(address c)
bobsummerwill/solidity,test/libsolidity/ASTJSON/assembly/switch.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_return_public.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_parameter_copy.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/remove_view.sol,f();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/builtin_functions_view_fail.sol,f();g();h();i();j()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/conditional_with_variables.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/rational_number_literal_limit_3.sol,bignum()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/type_expression_tuple_array_2d.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/441_unused_unnamed_return_parameter.sol,f()
bobsummerwill/solidity,test/libsolidity/ASTJSON/placeholder_statement.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/imports/inheritance_abi_encoder_match.sol,f(S memory _s)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/083_anonymous_event_too_many_indexed.sol,""
bobsummerwill/solidity,test/libsolidity/ABIJson/multiple_methods_order.sol,f(uint a);c(uint b)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/208_assignment_mem_to_local_storage_variable.sol,f(uint[] memory x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/contract_array.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/367_using_directive_for_missing_selftype.sol,b();a()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/single_modifier_arg_trailing_comma.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/array/push_no_args_bytes.sol,f();g(uint x);l();a(uint index)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/special/msg_sig.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/inlineAssembly/truefalse.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/string_literal_assignment_2.sol,f(bytes32 _x)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_and_need_both_fail.sol,f();g()
bobsummerwill/solidity,test/libsolidity/semanticTests/variables/delete_local.sol,delLocal()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/function_types/function_parameter_return_types_success.sol,"string_to_string(string memory x);string_string_to_string(string memory x, string memory y);tests()"
bobsummerwill/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_directly_recursive_dynamic_array.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/disallowWildcards.sol,fn()
bobsummerwill/solidity,test/libsolidity/syntaxTests/constructor/constructor.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/comment_end_with_double_star.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/dataLocations/publicFunction/function_argument_location_specifier_test_public_memory.sol,f(bytes memory)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/bool_simple_1.sol,f(bool x)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/while_1_continue.sol,"f(uint x, bool b)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/public_vars_multiple3.sol,"foo();foo(uint );foo(uint , uint )"
bobsummerwill/solidity,test/libsolidity/semanticTests/literals/hex_string_with_underscore.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/smoke/multiline_comments.sol,"f(uint a, uint b, uint c, uint d, uint e)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/136_private_visibility_via_explicit_base_access.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/imports/name_clash_in_import_3.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/159_storage_variable_initialization_with_incorrect_type_string.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/135_private_visibility.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/interface/diamond/diamond_with_relist.sol,test();test();test();test()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/whitespace_in_multiple_assignment.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/093_function_event_in_contract_clash.sol,dup()
bobsummerwill/solidity,test/libsolidity/syntaxTests/specialFunctions/abidecode/abi_decode_nontuple.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/conversion/not_allowed_conversion_to_int_array_pointer1.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/override_interface.sol,test();test()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/046_returning_multi_dimensional_static_arrays.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/storage_value_vars_2.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/while_continue.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/array_memory_index_access.sol,"index(uint256 len);accessIndex(uint256 len, int256 idx)"
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/return.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/042_functions_with_stucts_of_non_external_types_in_interface_2.sol,f(S memory)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/for_1_continue.sol,"f(uint x, bool b)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/442_named_return_parameter.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/functions_storage_var_1.sol,f(uint x);g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/string/string_unterminated.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/imports/inheritance_abi_encoder_mismatch_1.sol,f(S memory _s)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/100_error_count_in_named_args.sol,"a(uint a, uint b);b()"
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/storage/mappings.sol,test_simple(uint _off);test_cleanup();test_str();test_twodim()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/division_3.sol,"f(int x, int y)"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/control_flow/assignment_in_declaration.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_and_fail.sol,f();g()
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/require.sol,f(bool a);fail();succeed()
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/array_storage_length_access.sol,set_get_length(uint256 len)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/unary_add.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/access_to_base_member_struct.sol,f();g();h()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/198_integer_boolean_not.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/natspec/docstring_parameter.sol,"f(address _from, address _5to, uint256 value)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/348_unused_return_value_call_value.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/invariants/loop_nested_for.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/array_branch_2d.sol,f(bool b)
bobsummerwill/solidity,test/libsolidity/ASTJSON/function_type.sol,f(function()
bobsummerwill/solidity,test/libsolidity/syntaxTests/specialFunctions/abidecode/abi_decode_single_return.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/rational_large_1.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/smoke/bytes_and_strings.sol,e(bytes memory b);f();g();h()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/special/msg_data.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/multiVariableDeclarationInvalidType.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/expressions/conditional_expression_false_literal.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/array_dynamic_1.sol,"f(uint x, uint y)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/array_pop.sol,test()
bobsummerwill/solidity,test/libsolidity/syntaxTests/multiline_comments.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_control_flow.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/overriding_no_restrict_warning.sol,f();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inline_arrays/inline_array_declaration_const_int_conversion.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/exp_expression.sol,fun(uint256 a)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/tuple_declarations_empty.sol,g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inline_arrays/inline_array_fixed_types.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/this_state.sol,g();h()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/307_rational_unary_minus_operation.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/tryCatch/returns_memory.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/libraries/library_function_selectors.sol,f(uint256 x);g(uint256[] storage s);h(uint256[] memory m);f();g();h()
bobsummerwill/solidity,test/libsolidity/syntaxTests/imports/name_clash_in_import_contract_struct_2.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/190_negative_integers_to_signed_out_of_bound.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/memberLookup/memory_structs_with_mappings.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/wrong_type_base_arguments.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/fallback_function.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/mapping/argument_public.sol,f(mapping(uint => uint)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/359_illegal_override_payable_nonpayable.sol,f();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/fallback/payable_fallback_without_receive_nonempty_by_inheritance.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/conversion/implicit_cast_function_call.sol,f(uint b);g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/057_legal_override_direct.sol,f();f(uint i)
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/unary_operations.sol,preincr(uint a);postincr(uint a);predecr(uint a);postdecr(uint a);not(bool a);bitnot(int256 a);negate(int256 a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/creation_view_fail.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/173_constant_struct.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/compound_sub_array_index.sol,"f(uint x, uint p)"
bobsummerwill/solidity,test/libsolidity/ASTJSON/using_for_directive.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionCalls/named_arguments_overload_failing2.sol,"f(uint x);f(uint x, uint y);f(uint x, uint y, uint z);call()"
bobsummerwill/solidity,test/libsolidity/syntaxTests/dataLocations/function_type_array_as_reference_type.sol,b(function(Nested memory);c(function(Nested memory);d(function(Nested memory)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/089_double_event_declaration_ignores_indexed.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/shifts.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/rational_number_too_large.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/209_storage_assign_to_different_local_variable.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/mapping/argument_external.sol,f(mapping(uint => uint)
bobsummerwill/solidity,test/compilationTests/gnosis/Oracles/MajorityOracle.sol,getStatusAndOutcome();isOutcomeSet();getOutcome()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/assembly_invalid_type.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/340_rational_bitxor_binary_operation.sol,f()
bobsummerwill/solidity,test/libsolidity/ASTJSON/inheritance_specifier.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/rational_number_literal_to_fixed_implicit.sol,literalToUFixed();literalToFixed()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/299_invalid_fixed_types_long_invalid_identifier.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/array_aliasing_storage_4.sol,"f(uint[] storage a, uint[] storage b)"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/inheritance/functions_3.sol,f();g();f();h();f();i()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/bool_simple_5.sol,f(bool x)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_simple.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/imports/relative_import.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/modifiers/function_modifier_invocation.sol,f()
bobsummerwill/solidity,test/libsolidity/ABIJson/global_struct.sol,f(S calldata s);g(S memory s)
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/address_to_payable_address.sol,f(address a)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy_4.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/address_payable_public_overload.sol,f(address);f(address payable)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/331_rational_as_exponent_half.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/default_location.sol,f();g();h();i(bool flag);j(bool flag)
bobsummerwill/solidity,test/libsolidity/syntaxTests/constructor/constructible_internal_constructor.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/mapping/assignment_state_variable.sol,fun()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/overflow/overflow_mul_signed.sol,f(int8 x)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/overflow/safe_add_1.sol,"add(uint x, uint y)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/526_fallback_marked_external.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/mapping_aliasing_1.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/types/type_conversion_cleanup.sol,test()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/467_does_not_error_transfer_regular_function.sol,transfer()
bobsummerwill/solidity,test/compilationTests/gnosis/Oracles/UltimateOracleFactory.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTestsJSON/simple.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/537_array_length_invalid_expression_int_divides_bool.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/length/invalid_expression_2.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/527_fallback_marked_internal.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_array_assignment_storage_storage.sol,testUnboundedForLoop(uint n)
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/struct_definition.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_merge_variables_3.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/ABIJson/structs_and_arrays.sol,"f(string calldata a, bytes calldata b, uint[] calldata c)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionTypes/function_type_variable_external_internal.sol,fa(bytes memory)
bobsummerwill/solidity,test/libsolidity/syntaxTests/imports/regular_import.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/functionCall/mapping_internal_return.sol,f();g();h()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/while_loop_simple_5.sol,"f(uint x, uint y)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/399_does_not_warn_msg_value_in_internal_function.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_indirectly_recursive_fixed_array3.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/345_unused_return_value.sol,g();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/enum_inheritance_contract.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/metaTypes/tooManyArgsForType.sol,creation()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/rational_number_mul_limit.sol,f()
bobsummerwill/solidity,test/libsolidity/ASTJSON/smoke.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/variables/mapping_local_tuple_assignment.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/override_base_base.sol,foo();foo();foo();foo();foo()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/function_inside_branch_modify_state_var_2.sol,f();g(bool b)
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/fallback_receive/receive_with_override.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/override_multiple_duplicated.sol,foo();test(uint8 _a);foo();test();foo();foo();test();test();foo()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inline_arrays/inline_array_of_mapping_type.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/functions_recursive.sol,g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/200_integer_signed_exp_unsigned.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/rational_number_exp_limit_fail.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/smoke/arrays.sol,r();s();u();v();x()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/360_function_variable_mixin.sol,ok();checkOk()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/array_branches_1d.sol,"f(bool b, uint[] memory c)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/globalFunctions/sha3_no_call.sol,f(bytes memory data)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/185_invalid_utf8_implicit.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/events/event_struct_indexed_v2.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/revert_fine.sol,f();g(bool flag)
bobsummerwill/solidity,test/libsolidity/semanticTests/inlineAssembly/constant_access_referencing.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/547_warn_about_address_members_on_non_this_contract_balance.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/070_struct_accessor_one_array_only.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/030_redeclare_implemented_abstract_function_as_abstract.sol,foo();foo();foo()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/array_aliasing_memory_2.sol,"f(uint[] memory a, uint[] memory b)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/548_warn_about_address_members_on_non_this_contract_transfer.sol,f()
bobsummerwill/solidity,test/libsolidity/ASTJSON/short_type_name_ref.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_trivial_condition_1.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/array_storage_push_pop.sol,set_get_length(uint256 len)
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/return_and_convert.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/197_integer_boolean_and.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array_dynamic_static_dynamic.sol,f(uint8[][1][] calldata s);reenc_f(uint8[][1][] calldata s);g();h();i();j()
bobsummerwill/solidity,test/libsolidity/semanticTests/tryCatch/structuredAndLowLevel.sol,g(bool b);f(bool cond)
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/function_type_as_storage_variable_with_modifiers.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/371_shift_constant_right_excessive_rvalue.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/calldata_memory_interface.sol,f(uint[] calldata);g(uint[] calldata);h(uint[] calldata);i(uint[] calldata);f(uint[] memory);g(uint[] memory);h(uint[] memory);i(uint[] memory)
bobsummerwill/solidity,test/libsolidity/syntaxTests/events/event_nested_array.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/476_too_large_arrays_for_calldata_external.sol,f(uint[85678901234] calldata a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/265_new_for_non_array.sol,f(uint size)
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/length/cyclic_constant.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_recursion_via_mapping.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/storage/mappings_array_pop_delete.sol,map(uint key);p();d()
bobsummerwill/solidity,test/libsolidity/ASTJSON/assembly/slot_offset.sol,e()
bobsummerwill/solidity,test/libsolidity/syntaxTests/constants/mod_zero.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/specialFunctions/single_non_bytes_arg.sol,f();g(bytes32)
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/scientific_notation.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/override_shared_base_partial.sol,f();f();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/284_conditional_expression_with_different_struct.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_data_location_function_param_external.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/assert.sol,f(bool a);fail();succeed()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/address_in_struct_fail.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/587_event_param_type_outside_storage.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/tryCatch/simple_catch.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/188_string_index.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/fallback/arguments.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_multi.sol,f();g(uint _x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/literals/hex_string_leading_underscore.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/division_2.sol,"f(uint x, uint y)"
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/various_inline_asm.sol,f();myAwesomeFunction(param)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/530_tuple_invalid_literal_too_large_for_uint.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/invariants/state_machine_1.sol,f();g();h();j();i()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/215_function_argument_mem_to_storage.sol,f(uint[] storage x);g(uint[] memory x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/constant.sol,k()
bobsummerwill/solidity,test/libsolidity/semanticTests/asmForLoop/for_loop_continue.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/metaTypes/typeNotRegularIdentifierVariable.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/storage_value_vars_1.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/131_enum_implicit_conversion_is_not_okay_64.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/array_aliasing_storage_3.sol,"f(uint[] storage a, uint[] storage b, uint[] memory c)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/revert.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/zero_literal_to_bytesXX_explicit.sol,f();g();h()
bobsummerwill/solidity,test/libsolidity/syntaxTests/fallback/return_value_number.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/payable_address_to_address.sol,f(address payable a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/duplicated_constructor_call/ancestor.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/library_to_address_payable.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/overflow/overflow_mul.sol,f(uint8 x)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/function_type_external_address.sol,"f(address a, function(uint)"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/division_5.sol,"mul(uint256 a, uint256 b)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/363_non_payable_constructor.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/modifier_arguments.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/mapping_to_mapping_in_struct.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/while_1_infinite.sol,"f(uint x, bool b)"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/contract_address_conversion.sol,"f(C c, address a)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/055_inheritance_diamond_basic.sol,rootFunction();f();f();g();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/var_storage_var.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/builtinFunctions/blockhash_shadow_resolution.sol,blockhash(uint256 blockNumber);f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/scoping/name_shadowing.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/tupleAssignments/large_component_count.sol,g();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/cyclic_dependency_check_on_consts_good.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/address_staticcall.sol,"f(address a, bytes memory data)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/496_builtin_ecrecover_reject_gas.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionTypes/function_type_arrays.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/gas_with_call_nonpayable.sol,f(address a);g(address a);h();i()
bobsummerwill/solidity,test/libsolidity/syntaxTests/conversion/function_type_payable_view.sol,h();f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/while_loop_simple_1.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/assembly_evmasm_type.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/callvalue_payable_assembly_function.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/no_effect_statements.sol,f()
bobsummerwill/solidity,test/compilationTests/gnosis/Markets/StandardMarket.sol,"fund(uint _funding);close();withdrawFees();buy(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint maxCost);sell(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint minProfit);shortSell(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint minProfit);calcMarketFee(uint outcomeTokenCost)"
bobsummerwill/solidity,test/libsolidity/ASTJSON/documentation.sol,fn()
bobsummerwill/solidity,test/libsolidity/syntaxTests/natspec/dosctring_named_return_parameter.sol,vote()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/346_unused_return_value_send.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/array_range_no_start.sol,f(uint256[] calldata x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/library_to_address.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/contractTypeType/members/function_selector_via_interface_name.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/returnExpressions/tuple_return_mismatching_number_named.sol,f();g();h()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/171_assignment_to_const_array_vars.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/295_bytes10abc_is_identifier.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/505_builtin_ecrecover_reject_value.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/552_warn_about_address_members_on_non_this_contract_delegatecall.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/variableDeclaration/for.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/special/msg_sender_2.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/verification_target/simple_assert_with_require.sol,f(uint a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/from_is_not_keyword.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/globalFunctions/delegatecall_with_wrong_arg_count.sol,f()
bobsummerwill/solidity,test/cmdlineTests/too_long_line_edge_out/input.sol,"fffffffffffffffffffffff(announcementTypeTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT Typ, string A)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/072_state_variable_member_of_wrong_class1.sol,foo()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/decimal_literal_to_bytesXX_explicit.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/contract_receive_to_payable_address.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/287_conditional_expression_with_different_mapping.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/056_cyclic_inheritance.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/detect_mul_overflow_signed.sol,"f(int a, int b);g(int8 a, int8 b)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/494_builtin_sha256_reject_gas.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/ambiguous_base_and_unique_mention.sol,f();g();f();f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/583_abi_encode_packed_with_rational_number_constant.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/modifier_without_semicolon.sol,""
bobsummerwill/solidity,test/compilationTests/gnosis/Oracles/CentralizedOracleFactory.sol,createCentralizedOracle(bytes memory ipfsHash)
bobsummerwill/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/multiSingleVariableDeclaration.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/two_stack_slots.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/lexer_numbers_with_underscores_decimal.sol,f()
bobsummerwill/solidity,test/compilationTests/gnosis/Oracles/UltimateOracle.sol,"setForwardedOutcome();challengeOutcome(int _outcome);voteForOutcome(int _outcome, uint amount);withdraw();isChallengePeriodOver();isFrontRunnerPeriodOver();isChallenged();isOutcomeSet();getOutcome()"
bobsummerwill/solidity,test/libsolidity/syntaxTests/multiSource/import_not_found.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/098_access_to_default_state_variable_visibility.sol,g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/unbalanced_two_stack_load.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/external_function.sol,x()
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionTypes/warn_function_type_parameters_with_names.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/override_shared_base.sol,set();set();set();set()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/429_revert_with_reason.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/fallback_receive/receive_without_override_intermediate.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/typecast/function_type_to_function_type_internal.sol,f(function(uint)
bobsummerwill/solidity,test/libsolidity/syntaxTests/specialFunctions/abi_encode_structs.sol,f();g()
bobsummerwill/solidity,test/libsolidity/semanticTests/abiEncoderV2/cleanup/uintx.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/new_no_parentheses.sol,f(uint size)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_return.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/getter/nested_structs.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/087_double_event_declaration.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/tuple_declarations.sol,g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/while_err.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/constant_assignment.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/402_assignment_to_constant.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/length/not_convertible_to_integer.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/504_builtin_ripemd160_reject_value.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/021_comparison_of_function_types_lt_2.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/storage_assignment_in_modifier.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/recursive_multi_return_2.sol,f();g()
bobsummerwill/solidity,test/libsolidity/semanticTests/receive/ether_and_data.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/array_range_conversion.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/ecrecover/failing_ecrecover_invalid_input_asm.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/receiveEther/default_visibility.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/specialFunctions/abidecode/abi_decode_memory_v2.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/address_payable_constant.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/event_with_no_argument_list.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/fallback/payable_fallback_without_receive_empty.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/shadowing/no_name_clash_in_import.sol,f()
bobsummerwill/solidity,test/libsolidity/errorRecoveryTests/constructor_recovers.sol,five()
bobsummerwill/solidity,test/libsolidity/ABIJson/multiple_params.sol,"f(uint a, uint b)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/modifier_order_fine.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/187_large_utf8_codepoint.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/struct_array_branches_3d.sol,f(bool b)
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/pop/memory_pop.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/mapping_1_fail.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/structs/global_struct_shadowing.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/338_rational_bitnot_unary_operation.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/external_variable.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/trailing_dot2.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/149_test_for_bug_override_function_with_bytearray_type.sol,f(bytes calldata);f(bytes calldata)
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/mappingReturn/unnamed_fine.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_data_location_function_param_public.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/structs/recursion/recursive_struct_as_memory_library_function_parameter.sol,f(MyStructName memory _x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/public_var_surplus_override.sol,foo()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/empty_function.sol,"functionName(bytes20 arg1, address addr)"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/control_flow/function_call_inside_modifier_branch.sol,f(address a);g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/memberLookup/member_value_not_unique.sol,value(uint256);value(uint8);f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/132_enum_to_enum_conversion_is_not_okay.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/label_disallowed.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/542_warn_about_address_members_on_contract_transfer.sol,f()
bobsummerwill/solidity,test/compilationTests/MultiSigWallet/MultiSigWalletWithDailyLimitFactory.sol,"create(address[] memory _owners, uint _required, uint _dailyLimit)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/specialFunctions/types_without_encoding_problems.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/245_tuples_empty_components.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/msg_sender.sol,test()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/108_empty_name_return_parameter_with_named_one.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/simple/smoke_test.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/constant_condition.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/088_double_event_declaration_ignores_anonymous.sol,""
bobsummerwill/solidity,test/libsolidity/ABIJson/events_anonymous.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/tryCatch/no_external_call.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/storage/struct_accessor.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/local_bool_assignment.sol,f(bool a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/fallback_receive/fallback_with_override_intermediate.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/bool_int_mixed_2.sol,"f(bool x, uint a)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/288_conditional_with_all_types.sol,fun_x();fun_y();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/164_assigning_value_to_const_variable.sol,changeIt()
bobsummerwill/solidity,test/libsolidity/semanticTests/functionCall/mapping_internal_argument.sol,"set_internal(mapping(uint8 => uint8);set(uint8 key, uint8 value_a, uint8 value_b);get(uint8 key)"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/enum_in_library_2.sol,f(E _d)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/recursive_multi_return.sol,g()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/bool_simple_4.sol,f(bool x)
bobsummerwill/solidity,test/libsolidity/semanticTests/libraries/stub_internal.sol,f(uint256 v);g(uint256 v)
bobsummerwill/solidity,test/libsolidity/syntaxTests/metaTypes/typeNotRegularIdentifierContractName.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/bytecode_too_large.sol,f()
bobsummerwill/solidity,test/cmdlineTests/object_compiler/input.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/539_array_length_invalid_expression_scientific_literal.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/length/invalid_expression_4.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/disallowWildcardsFromReturn.sol,fn();one();two();three();four();five()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/array_dynamic_parameter_1.sol,"f(uint[] memory array, uint x, uint y)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/address_to_contract_receive.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/invariants/loop_basic_for.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/getter/recursive_struct.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/mapping_unsupported_key_type_1.sol,"f(string memory s, uint x)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/fixed_literal_with_double_radix.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/235_abi_encode_with_large_integer_constant.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/275_inline_struct_declaration_arrays.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/no_effect_statements.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/contract_to_base.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/functionCall/base_base_overload.sol,"init(uint a, uint b);init(uint a);init(uint a, uint b);init(uint a);cInit(uint c);cInit(uint c, uint d);bInit(uint c);bInit(uint c, uint d)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/jump_disallowed.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/division_truncates_correctly_5.sol,"f(int x, int y)"
bobsummerwill/solidity,test/libsolidity/semanticTests/abiEncoderV2/cleanup/simple_struct.sol,"gg(S calldata s);f(uint256 a, bytes32 b)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/291_modifier_is_not_a_valid_typename.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/013_large_string_literal.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/bytes256.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/438_unused_unnamed_function_parameter.sol,f(uint)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/mapping_5.sol,"f(address a, uint x)"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/functions_identity_as_tuple_fail.sol,h(uint x);g()
bobsummerwill/solidity,test/libsolidity/semanticTests/expressions/uncalled_address_transfer_send.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/211_uninitialized_mapping_array_variable.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/length/fixed_size_multidim_zero_length.sol,a();b();c();d();e();e()
bobsummerwill/solidity,test/libsolidity/semanticTests/tryCatch/structured.sol,g(bool b);f(bool b)
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/local_variable_access_out_of_functions_storage_ptr.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/denominations/fixed_point_division.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/array_mapping_aliasing_2.sol,f(mapping (uint => uint)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/this_external_call_return.sol,f(uint y);g(uint y)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/244_tuples.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/array_aliasing_memory_1.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/metaTypes/codeAccessIsConstant.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/empty_fun_arg_middle.sol,"f();f(a, b, c)"
bobsummerwill/solidity,test/libsolidity/semanticTests/structs/array_of_recursive_struct.sol,func()
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/conversion/implicit_cast_local_assignment.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_inline_function_inside_branch.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/rational_number_array_index_limit.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/constants/cyclic_dependency_3.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/function_types/function_parameter_return_types_fail.sol,"string_to_string(string memory x);string_string_to_string(string memory x, string memory y);tests()"
bobsummerwill/solidity,test/libsolidity/syntaxTests/globalFunctions/keccak256_with_wrong_arg_count.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/variables/delete_locals.sol,delLocal()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/407_invalid_address_no_checksum.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/functions_storage_var_1_fail.sol,f(uint x);g()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/compound_mul_array_index.sol,"f(uint x, uint p)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/globalFunctions/ripemd160_with_wrong_arg_count.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/elementary_non_address_payable_return.sol,a();b();c();d();e();f();g();h();i();j();k();l();m()
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/local_assignment.sol,f(uint a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/293_function_is_not_a_valid_typename.sol,foo();f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/array_branches_3d.sol,f(bool b)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/for_break_direct.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/503_builtin_sha256_reject_value.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/486_function_types_selector_3.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionTypes/payable_internal_function_type.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/219_memory_arrays_not_resizeable.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/storage_variable_access_out_of_functions.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/scoping/scoping_for3.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/constants/mod_div_rational.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/bound/bound_no_call.sol,double(uint self);f(uint a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/calldata_multi_dynamic.sol,f(uint[][] calldata)
bobsummerwill/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/oneElementTuple.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/017_assignment_to_struct.sol,fun()
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/selector_complex2.sol,f();g()
bobsummerwill/solidity,test/libsolidity/semanticTests/abiEncoderV2/cleanup/dynamic_array.sol,ggg(uint8[] calldata s);f(uint256[] calldata a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/imports/name_clash_in_import_4.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/length/fixed_size_zero_length.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/while_1_break.sol,"f(uint x, bool b)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/328_rational_to_fixed_literal_expression.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/metaTypes/name_other_contract.sol,f();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/264_mapping_in_memory_array.sol,f(uint size)
bobsummerwill/solidity,test/libsolidity/syntaxTests/bound/bound_all.sol,g(function();f();t()
bobsummerwill/solidity,test/compilationTests/gnosis/Oracles/Oracle.sol,isOutcomeSet();getOutcome()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/function_call_invalid_argument_count.sol,f();f(a)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/inheritance/receive.sol,g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/bytes_to_payable_address.sol,f(bytes20 x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/204_overwrite_memory_location_external.sol,f(uint[] memory a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/084_events_with_same_name.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/function_call_to_variable.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/283_left_value_in_conditional_expression_not_supported_yet.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/lexer_numbers_with_underscores_fixed.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/compound_assignment_division_2.sol,"f(uint x, uint p)"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/constructor_simple.sol,f(uint y)
bobsummerwill/solidity,test/libsolidity/semanticTests/snark.sol,"negate(G1Point memory p);add(G1Point memory p1, G1Point memory p2);mul(G1Point memory p, uint s);pairing(G1Point[] memory p1, G2Point[] memory p2);f();g();testMul();pair();verifyingKey();verify(uint[] memory input, Proof memory proof);verifyTx()"
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/interface/linearization/invalid/lists_both.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/inheritance/constructor_state_variable_init_base.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/structs/memory_to_calldata.sol,f(S calldata s);g(S calldata s)
bobsummerwill/solidity,test/libsolidity/syntaxTests/literal_comparisons.sol,f(int8 x)
bobsummerwill/solidity,test/libsolidity/semanticTests/abiDecodeV1/decode_slice.sol,"f(uint256 a, uint256 b)"
bobsummerwill/solidity,test/compilationTests/MultiSigWallet/MultiSigWalletFactory.sol,"create(address[] memory _owners, uint _required)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/hex_literal_to_bytesXX_same_size_implicit.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/elementary_non_address_payable_argument.sol,a(bool payable);b(string payable);c(int payable);d(int256 payable);e(uint payable);f(uint256 payable);g(byte payable);h(bytes payable);i(bytes32 payable);j(fixed payable);k(fixed80x80 payable);l(ufixed payable);m(ufixed80x80 payable)
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/event.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/call_internal_functions_success.sol,g();f();h();i()
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionTypes/delete_function_type.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/in_modifier.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/404_read_returned_struct.sol,g()
bobsummerwill/solidity,test/libsolidity/ASTJSON/assembly/leave.sol,l();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/address_payable_state_variable.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/receiveEther/pure_modifier.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/calldata_memory_interface_struct.sol,f(S calldata);g(S calldata);h(S calldata);i(S calldata);f(S memory);g(S memory);h(S memory);i(S memory)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/301_library_instances_cannot_be_used.sol,l();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/tuples_without_commas.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/functions_trivial_condition_if.sol,f(bool x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/decimal_literal_to_bytesXX_implicit.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/constant_is_keyword.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/globalFunctions/suicide_no_call.sol,f(bytes memory data)
bobsummerwill/solidity,test/compilationTests/MultiSigWallet/MultiSigWallet.sol,"addOwner(address owner);removeOwner(address owner);replaceOwner(address owner, address newOwner);changeRequirement(uint _required);submitTransaction(address destination, uint value, bytes memory data);confirmTransaction(uint transactionId);revokeConfirmation(uint transactionId);executeTransaction(uint transactionId);isConfirmed(uint transactionId);addTransaction(address destination, uint value, bytes memory data);getConfirmationCount(uint transactionId);getTransactionCount(bool pending, bool executed);getOwners();getConfirmations(uint transactionId);getTransactionIds(uint from, uint to, bool pending, bool executed)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/istanbul_on_petersburg.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/546_warn_about_address_members_on_contract_delegatecall.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/enum_transitivity.sol,"f(D _a, D _b)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/override_ambiguous.sol,foo();foo();test();test()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/fallback_receive/receive_without_override.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/uint32_to_bytes32.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/constructor/constructor_old.sol,A()
bobsummerwill/solidity,test/libsolidity/syntaxTests/memberLookup/contract_not_payable_transfer.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/203_struct_reference_compare_operators.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_inside_branch.sol,g();f(uint x)
bobsummerwill/solidity,test/compilationTests/corion/token.sol,"receiveCorionToken(address, uint256, bytes calldata);approvedCorionToken(address, uint256, bytes calldata);replaceModule(address payable addr);closeIco();approve(address spender, uint256 amount, uint256 nonce);approveAndCall(address spender, uint256 amount, uint256 nonce, bytes calldata extraData);_approve(address spender, uint256 amount, uint256 nonce);allowance(address owner, address spender);transfer(address to, uint256 amount);transferFrom(address from, address to, uint256 amount);transferFromByModule(address from, address to, uint256 amount, bool fee);transfer(address to, uint256 amount, bytes calldata extraData);_transferToContract(address from, address to, uint256 amount, bytes memory extraData);_transfer(address from, address to, uint256 amount, bool fee);processTransactionFee(address owner, uint256 value);_processTransactionFee(address owner, uint256 value);getTransactionFee(uint256 value);mint(address owner, uint256 value);_mint(address owner, uint256 value);burn(address owner, uint256 value);_burn(address owner, uint256 value);isContract(address addr);balanceOf(address owner);totalSupply();configure(announcementType aType, uint256 value)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/metaTypes/codeIsNoLValue.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/loops/break.sol,f();g();h()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/typecast/cast_smaller_2.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/460_function_override_is_not_shadowing.sol,f();f(uint)
bobsummerwill/solidity,test/libsolidity/syntaxTests/specialFunctions/abidecode/abi_decode_singletontuple.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/literalOperations/division_by_zero_complex.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/imports/inheritance_abi_encoder_mismatch_2.sol,f(S memory _s)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/for_1_fail.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/public_vars_multiple5.sol,"balanceOf(address, uint);balanceOf(uint);balanceOf()"
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/slice/calldata_dynamic_encode.sol,f(uint256[] calldata x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/shadowsBuiltin/this_super.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/487_function_types_selector_4.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/372_shift_constant_right_fractional.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/verification_target/simple_assert_with_require_message.sol,f(uint a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/placeholder_in_function_context.sol,fun()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/function_type_members.sol,f(function(uint)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/for_1_break.sol,"f(uint x, bool b)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/483_modifiers_access_storage_pointer.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/fallback_receive/receive_overrides_fallback.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/array/access_to_array_push_view.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/modifier.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/leave.sol,f();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/single_function_param.sol,functionName(bytes32 input)
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/override_multiple_fail3.sol,foo();foo()
bobsummerwill/solidity,test/compilationTests/gnosis/Events/EventFactory.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/130_enum_implicit_conversion_is_not_okay_256.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/compound_add.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/two_exact_functions.sol,fun(uint a);fun(uint a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/mapping/array_argument_external.sol,f(mapping(uint => uint)
bobsummerwill/solidity,test/libsolidity/syntaxTests/imports/name_clash_in_import_struct_contract_4.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/structs/calldata_assign.sol,f(S calldata s)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/array_static_1.sol,"f(uint x, uint y)"
bobsummerwill/solidity,test/libsolidity/semanticTests/types/packing_signed_types.sol,run()
bobsummerwill/solidity,test/compilationTests/gnosis/Oracles/DifficultyOracleFactory.sol,createDifficultyOracle(uint blockNumber)
bobsummerwill/solidity,test/libsolidity/syntaxTests/natspec/invalid/docstring_parameter.sol,"f(uint256 _5value, uint256 _value, uint256 value)"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/tuple_assignment_empty.sol,g()
bobsummerwill/solidity,test/libsolidity/semanticTests/tryCatch/invalid_error_encoding.sol,g(bytes memory revertMsg)
bobsummerwill/solidity,test/libsolidity/syntaxTests/emit/emit_non_event.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/slice/slice_memory_string.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/string/string_escapes.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/mapping/assignment_struct.sol,fun()
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionTypes/call_value_on_payable_function_type.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/override_return_mismatch.sol,foo();foo();test();test()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/551_warn_about_address_members_on_non_this_contract_callcode.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/delete_function.sol,g();h();f(bool b)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/array_static_2.sol,"f(uint x, uint y, uint z, uint t)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/143_no_spurious_identifier_suggestions_with_submatch.sol,g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/dataLocations/function_parameters_with_data_location_fine.sol,"f(uint[] memory, uint[] storage);g(uint[] memory, uint[] storage);h(uint[] memory);i(uint[] calldata)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/metaTypes/typeNotRegularIdentifierFunction.sol,type()
bobsummerwill/solidity,test/libsolidity/syntaxTests/dataLocations/externalFunction/external_function_return_parameters_no_data_location.sol,i()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/array_range_and_ternary.sol,"f(bool cond, bytes calldata x)"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/inheritance/fallback_receive.sol,g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/182_equal_overload.sol,test(uint a);test(uint a)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy_same_var.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/if_statement.sol,fun(uint256 a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/function_types.sol,f();g();h()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/assignment_from_super.sol,f()
bobsummerwill/solidity,test/libsolidity/ABIJson/function_type_extended.sol,g(function(test)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_merge_variables_5.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/214_assignment_mem_storage_variable_directly.sol,f(uint[] memory x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/533_tuple_invalid_literal_too_large_exp.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/scoping/scoping.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_5.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/erc20.sol,"totalSupply();balanceOf(address owner);allowance(address owner, address spender);transfer(address to, uint256 value);approve(address spender, uint256 value);transferFrom(address from, address to, uint256 value);increaseAllowance(address spender, uint256 addedValue);decreaseAllowance(address spender, uint256 subtractedValue);_transfer(address from, address to, uint256 value);_mint(address account, uint256 value);_burn(address account, uint256 value);_approve(address owner, address spender, uint256 value);_burnFrom(address account, uint256 value)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/523_reject_interface_creation.sol,f()
bobsummerwill/solidity,test/compilationTests/corion/module.sol,"transfer(address payable from, address payable to, uint256 value, bool fee);balanceOf(address payable owner);disableModule(bool forever);_disableModule(bool forever);replaceModuleHandler(address payable newModuleHandlerAddress);_replaceModuleHandler(address payable newModuleHandlerAddress);connectModule();_connectModule();disconnectModule();_disconnectModule();replaceModule(address payable newModuleAddress);_replaceModule(address payable newModuleAddress);newSchellingRoundEvent(uint256 roundID, uint256 reward);registerModuleHandler(address payable _moduleHandlerAddress);isModuleHandler(address payable addr);isActive()"
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/comparison_functions.sol,equal();unequal()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/diamond_top_implemented_intermediate_implemented_public_state_variable.sol,f();f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/tuple_declarations_function.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/tuples_decl_without_rhs.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/scoping/state_variable_function_conflict.sol,f(uint)
bobsummerwill/solidity,test/libsolidity/ASTJSON/constructor.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/functions_trivial_condition_require.sol,f(bool x)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/special/difficulty.sol,f(uint difficulty)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/do_while_break.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/scoping/double_variable_declaration_same_scope.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/tryCatch/library_call.sol,"integer(uint t, bool b);stru(S storage t, bool b);f(bool b);g(bool b)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/array_type_range.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/overflow/safe_add_2.sol,"add(uint x, uint y)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/constructor/not_a_contract.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/address_to_payable_address_double.sol,f(address a)
bobsummerwill/solidity,test/compilationTests/gnosis/Markets/CampaignFactory.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/dataLocations/memory_storage_data_location.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/inline_array_empty_cells_check_without_lvalue.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/inheritance/state_variables_2.sol,f(uint y)
bobsummerwill/solidity,test/libsolidity/semanticTests/types/convert_fixed_bytes_to_fixed_bytes_same_size.sol,bytesToBytes(bytes4 input)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/060_complex_inheritance.sol,f();f();g();f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/typecast/cast_different_size_1.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/libraries/library_function_selectors_struct.sol,f(S storage s);g(S memory m);f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/tupleAssignments/nowarn_swap_storage_pointers.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/metaTypes/codeAccessAbstractCreation.sol,creationOther();f(uint)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/102_duplicate_parameter_names_in_named_args.sol,"a(uint a, uint b);b()"
bobsummerwill/solidity,test/libsolidity/syntaxTests/bound/bound_call.sol,double(uint self);f(uint a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/403_return_structs.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/special/many.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/length/parameter_too_large_multidim.sol,f(bytes32[1263941234127518272][500] memory);f(uint[2**30][] memory);f(uint[2**30][2**30][] memory);f(uint[2**16][2**16][] memory)
bobsummerwill/solidity,test/libsolidity/syntaxTests/dataLocations/internalFunction/internal_function_return_parameters_no_data_location.sol,g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/062_base_constructor_arguments_override.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/061_missing_base_constructor_arguments.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/conditional_with_assignment.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/dataLocations/function_return_parameters_with_data_location_fine.sol,f();g();h();i()
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionTypes/function_type_parameter.sol,f(function(uint)
bobsummerwill/solidity,test/libsolidity/syntaxTests/specialFunctions/encode_array_of_struct.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/override_multiple_missing.sol,foo();test(uint8 _a);foo();test();foo();foo();test();test();foo()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/array_dynamic_2_fail.sol,"f(uint x, uint y, uint z, uint t)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/modifier_pre_access.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/inheritance/functions_1.sol,f();g();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/582_improve_name_suggestion_four_letters.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/access_to_base_member_constant.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionTypes/function_type_constructor.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/length/tuples.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/leave_invalid.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/207_no_mappings_in_memory_array.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/length/pure_functions.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/structs/calldata.sol,f(S calldata)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/warnUnused/local_assignment.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/special/gasleft.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/storage/complex_accessors.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/address_call.sol,"f(address a, bytes memory data)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/343_integer_and_fixed_interaction.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/contract_payable_fallback_to_payable_address.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/cyclic_dependency_check_on_struct_exhausted.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array_two_dynamic.sol,"f(uint256[] calldata s1, uint256[] calldata s2, bool which);g(uint256[] calldata s1, uint256[] calldata s2, bool which)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/empty_tuple_lvalue.sol,f();a()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_two_placeholders.sol,f();g(uint _x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/array_index_too_large.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/tuple_assignment_array.sol,"g(uint x, uint y)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/memberLookup/memory_structs_with_mapping_array_struct_array.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/094_event_inheritance.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/division_4.sol,"f(int x, int y)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/multiple_modifier_arg_trailing_comma.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/conversion/function_type_view_payable.sol,h();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/multiple_event_arg_trailing_comma.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/217_mem_array_assignment_changes_base_type.sol,f(uint8[] memory x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/length/array_length_cannot_be_constant_function_parameter.sol,f(uint constant LEN)
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/pop/calldata_pop.sol,f(uint[] calldata x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/assignment_from_functiontype.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/for_break.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/constant_restrict_warning.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/044_returning_multi_dimensional_arrays_new_abi.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/multiVariableDeclarationThatIsExpression.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_struct_simple.sol,f(S calldata s);g(S calldata s)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/array_branches_2d.sol,f(bool b)
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/contract_to_address.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/differentNumberOfComponents.sol,f();g();h()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/do_while_break_2.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/assembly.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/contractTypeType/members/function_via_contract_name_overloaded.sol,f();f(uint256);g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/imports/circular_import.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/mapping_in_struct.sol,""
bobsummerwill/solidity,test/cmdlineTests/too_long_line_left_short/input.sol,"f(announcementType Type, string Announcement, string Link, bool Oppositable, string _str, uint256 _uint, address _addr)"
bobsummerwill/solidity,test/libsolidity/ASTJSON/array_type_name.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/empty_enum.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/mapping_3.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/199_integer_unsigned_exp_signed.sol,""
bobsummerwill/solidity,test/libsolidity/ASTJSON/event_definition.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/abstract/contract.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/conversion/function_type_payable_pure.sol,h();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/new_address_payable.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/507_large_storage_array_simple.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/412_early_exit_on_fatal_errors.sol,s()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/assign_to_instruction.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/fallback/short_data_calls_fallback.sol,fow()
bobsummerwill/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array_static.sol,f(uint256[3] calldata s);g(uint256[3] calldata s);h(uint8[3] calldata s);i(uint8[3] calldata s)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/561_event_emit_complex.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/285_conditional_expression_with_different_function_type.sol,x(bool);y();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/dataLocations/variable_declaration_location_specifier_test_reference_type.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_and_inside_branch.sol,f();g(bool a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/019_comparison_bitop_precedence.sol,fun()
bobsummerwill/solidity,test/libsolidity/semanticTests/types/convert_fixed_bytes_to_uint_same_type.sol,bytesToUint(bytes32 s)
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/function_state_variable.sol,x()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/bytesm.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/tryCatch/empty_returns.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/verification_target/constant_condition_1.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/157_array_of_undeclared_type.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/111_overflow_caused_by_ether_units.sol,""
bobsummerwill/solidity,test/compilationTests/gnosis/Markets/MarketFactory.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/length/too_large.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/uninitializedFunctionPointer/store2.sol,run();z()
bobsummerwill/solidity,test/libsolidity/syntaxTests/imports/name_clash_in_import_struct_contract_2.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/slice/slice_memory_bytes.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/array_dynamic_1_fail.sol,"f(uint x, uint y)"
bobsummerwill/solidity,test/libsolidity/semanticTests/types/external_function_to_address.sol,f();g(function()
bobsummerwill/solidity,test/libsolidity/syntaxTests/dataLocations/function_argument_location_specifier_test_non_reference_type.sol,f(bytes4 memory)
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/slice/slice_literal.sol,f()
bobsummerwill/solidity,test/compilationTests/gnosis/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
bobsummerwill/solidity,test/libsolidity/syntaxTests/tryCatch/returns.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/storage/simple_storage.sol,setX(uint a);setY(uint a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/043_functions_with_stucts_of_non_external_types_in_interface_nested.sol,f(S memory)
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/loops/return.sol,f();g();h()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/shadowing/local_variable.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/smoke/constructor.sol,balance();update(uint _state)
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionTypes/function_types_internal_visibility_error.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/loops/continue.sol,f();g();h()
bobsummerwill/solidity,test/libsolidity/syntaxTests/imports/name_clash_in_import_5.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/no_function_params.sol,functionName()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/339_rational_bitor_binary_operation.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/structs/recursion/return_recursive_structs.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/division_7.sol,"div(uint256 a, uint256 b)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_return_public_memory.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/254_using_for_function_on_int.sol,double(uint self);f(uint a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/545_warn_about_address_members_on_contract_callcode.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/bytes_to_uint_same_size.sol,f();g();h();i();j();k()
bobsummerwill/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array.sol,g(uint256[] calldata);f(uint256[][1] calldata s)
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/return_var.sol,f();f();f();f();f();f();f();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/mappingReturn/named_fine.sol,f()
bobsummerwill/solidity,test/externalTests/solc-js/DAO/DAO.sol,"receiveEther();newContract(address payable _newContract);changeAllowedRecipients(address _recipient, bool _allowed);changeProposalDeposit(uint _proposalDeposit);retrieveDAOReward(bool _toMembers);getMyReward();withdrawRewardFor(address payable _account);transferWithoutReward(address _to, uint256 _amount);halveMinQuorum();numberOfProposals();getNewDAOAddress(uint _proposalID);isBlocked(address _account);unblockMe();receiveEther();closeProposal(uint _proposalID);newContract(address payable _newContract);retrieveDAOReward(bool _toMembers);getMyReward();withdrawRewardFor(address payable _account);transfer(address _to, uint256 _value);transferWithoutReward(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);changeProposalDeposit(uint _proposalDeposit);changeAllowedRecipients(address _recipient, bool _allowed);isRecipientAllowed(address _recipient);actualBalance();minQuorum(uint _value);halveMinQuorum();createNewDAO(address payable _newCurator);numberOfProposals();getNewDAOAddress(uint _proposalID);isBlocked(address _account);unblockMe()"
bobsummerwill/solidity,test/libsolidity/syntaxTests/specialFunctions/abidecode/abi_decode_empty.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/string/string_terminated_by_backslash.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/structs/array_calldata.sol,f(S[] calldata);f(S[][] calldata)
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/modifier_invocation.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/177_ambiguous_overloaded_function.sol,f(uint8 a);f(uint a);g()
bobsummerwill/solidity,test/libsolidity/semanticTests/structs/conversion/recursive_storage_memory_complex.sol,"countData(Tree memory tree);copyFromTree(Tree memory tree, uint256[] memory data, uint256 offset);run()"
bobsummerwill/solidity,test/libsolidity/semanticTests/expressions/conditional_expression_multiple.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/191_negative_integers_to_signed_min.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/location_specifiers_for_params.sol,"f(uint[] storage constant x, uint[] memory y)"
bobsummerwill/solidity,test/libsolidity/semanticTests/variables/mapping_local_assignment.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/491_using_this_in_constructor.sol,f()
bobsummerwill/solidity,test/compilationTests/gnosis/Events/ScalarEvent.sol,redeemWinnings();getEventHash()
bobsummerwill/solidity,test/libsolidity/errorRecoveryTests/do_not_delete_at_error.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/local_storage_variables.sol,f();g();i();h()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/address_binary_operators.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/modifiers/constructor_as_modifier.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/contract_to_address_implicitly.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/186_invalid_utf8_explicit.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/237_cyclic_binary_dependency_via_inheritance.sol,f();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/289_uint7_and_uintM_as_identifier.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/compoundAssignment/tuple.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/returnExpressions/single_return_mismatching_type.sol,g()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/mapping_1.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array_dynamic.sol,f(uint256[] calldata s);g(uint256[] calldata s);h(uint8[] calldata s);i(uint8[] calldata s);j(bytes calldata s);k(bytes calldata s)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/delete_array_2d.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionTypes/external_function_type_to_address.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/444_unnamed_return_parameter_with_explicit_return.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/532_tuple_invalid_literal_too_large_for_uint_multi.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_multi_parameters.sol,f(uint x)
bobsummerwill/solidity,test/compilationTests/gnosis/Events/Event.sol,buyAllOutcomes(uint collateralTokenCount);sellAllOutcomes(uint outcomeTokenCount);setOutcome();getOutcomeCount();getOutcomeTokens();getOutcomeTokenDistribution(address owner);getEventHash();redeemWinnings()
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/staticcall_gas_view.sol,f();test(address a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/110_no_overflow_with_large_literal.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/multiSource/error_in_first.sol,g();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/multiVariableDeclarationScoping2.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/base_arguments_multiple_inheritance.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_multi_functions.sol,"g(uint a, uint b);f(uint x)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/351_callcode_deprecated.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/while_1.sol,"f(uint x, bool b)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/typeChecking/function_call.sol,"f();g(uint256, bool)"
bobsummerwill/solidity,test/libsolidity/semanticTests/uninitializedFunctionPointer/invalidInConstructor.sol,f();f()
bobsummerwill/solidity,test/libsolidity/ASTJSON/assembly/var_access.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/constants/assign_constant_function_value.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/base_arguments_no_parentheses.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/storage/mappings_array2d_pop_delete.sol,map(uint key);p();d()
bobsummerwill/solidity,test/libsolidity/syntaxTests/constructor/two_constructors.sol,""
bobsummerwill/solidity,test/libsolidity/gasTests/dispatch_large_optimised.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/public_vars_multiple_diamond1.sol,foo();foo()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/506_large_storage_array_fine.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/typecast/cast_smaller_3.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/shadowing_private_base_state_vars.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/length/uint_too_large_multidim.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/missing_variable.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/specialFunctions/abi_encode_structs_abiv2.sol,e();f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/public_var_parallel_funciton.sol,foo()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inline_arrays/lvalues_as_inline_array.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/memberLookup/msg_value_modifier_payable.sol,f()
bobsummerwill/solidity,test/externalTests/solc-js/DAO/ManagedAccount.sol,"payOut(address payable _recipient, uint _amount);payOut(address payable _recipient, uint _amount)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/079_fallback_function_inheritance.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionTypes/external_function_type_returning_internal.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/literals/hex_string_underscores_valid.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/arrays_in_expressions.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_inside_branch_assignment_multi_branches.sol,f();h();g(uint y)
bobsummerwill/solidity,test/libsolidity/semanticTests/types/assign_calldata_value_type.sol,f(uint256 x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/145_external_base_visibility.sol,f();g()
bobsummerwill/solidity,test/libsolidity/semanticTests/fallback/inherited.sol,getData()
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/do_while_continue.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/typecast/string_literal_to_fixed_bytes_return.sol,g();a()
bobsummerwill/solidity,test/libsolidity/syntaxTests/denominations/deprecated_year.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/nonintermediate_common_base_and_unique_implementation.sol,f();g();f();f();f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/096_access_to_default_function_visibility.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/invalidTypes/conditional_expression.sol,o(byte);f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/dataLocations/internalFunction/function_argument_location_specifier_test_internal_storage.sol,f(bytes storage)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/mod.sol,"f(int x, int y)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/public_var_implements_parallel_interface.sol,foo();goo();foo();goo();goo();foo();goo()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/virtual/duplicate.sol,foo()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/contractTypeType/members/assign_function_via_contract_name_to_var.sol,f();g();h()
bobsummerwill/solidity,test/libsolidity/syntaxTests/string/string_multipart_newline_without_hex_prefix.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/319_invalid_array_declaration_with_signed_fixed_type.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/077_fallback_function_with_return_parameters.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/structs/global.sol,f(S calldata s)
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/bytes1_to_uint256.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/039_functions_with_identical_structs_in_interface.sol,f(S1 memory);f(S2 memory)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/function_inline_chain.sol,f();g();h()
bobsummerwill/solidity,test/libsolidity/syntaxTests/visibility/interface/interface_contract_function_default.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/461_event_parameter_cannot_shadow_state_variable.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/visibility/function_no_visibility.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/dataLocations/publicFunction/public_function_return_parameters_no_data_location.sol,h()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/public_var_missing_override.sol,foo();foo()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/069_base_class_state_variable_accessor.sol,foo()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/mapping/array_argument_public.sol,f(mapping(uint => uint)
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/function_types/function_state_mutability_success.sol,internalPureFunc(uint256 x);internalViewFunc(uint256 x);internalMutableFunc(uint256 x);externalPureFunc(uint256 x);externalViewFunc(uint256 x);externalPayableFunc(uint256 x);externalMutableFunc(uint256 x);funcTakesInternalPure(function(uint256);funcTakesInternalView(function(uint256);funcTakesInternalMutable(function(uint256);funcTakesExternalPure(function(uint256);funcTakesExternalView(function(uint256);funcTakesExternalPayable(function(uint256);funcTakesExternalMutable(function(uint256);tests()
bobsummerwill/solidity,test/libsolidity/syntaxTests/indexing/function_type_without_index.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/fallback/old_syntax.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/function_types_fail.sol,f();g();h()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/202_bytes_reference_compare_operators.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/receiveEther/receive_as_function_name.sol,receive()
bobsummerwill/solidity,test/libsolidity/syntaxTests/imports/simple_alias.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/153_array_copy_with_different_types2.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/public_vars_multiple_diamond2.sol,foo();foo()
bobsummerwill/solidity,test/cmdlineTests/abiencoderv2_no_warning/input.sol,f(S memory)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/division_6.sol,"mul(uint256 a, uint256 b)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/contract_non_payable_fallback_to_payable_address.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/indexing/array_negative_index.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/array_static_aliasing_storage_5.sol,"f(uint[2] storage a, uint[2] memory c)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/tryCatch/catch_low_level.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/detect_mul_overflow.sol,"f(uint a, uint b);g(uint8 a, uint8 b)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/fallback/payable_fallback_without_receive_nonempty.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/memberLookup/push_on_memory_types.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/tuple_function_3.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/571_function_type_undeclared_type_external.sol,a(function(Nested)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/string_2.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/storage/accessors_mapping_for_array.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/multiple_assign_to_instruction.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/466_does_not_error_transfer_payable_fallback.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/diamond_top_implemented_intermediate_public_state_variable.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/052_function_internal_not_allowed_conversion.sol,internalCall()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/bool_int_mixed_3.sol,"f(bool x, bool y)"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_and_touched.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/fallback/view_modifier.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/array_push_with_arg.sol,test(uint256 v);getLength();fetch(uint256 a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/233_non_initialized_references.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionTypes/function_types_variable_visibility.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/mapping_2d_1_fail.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/storage/packed_storage.sol,f(uint8 a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/callvalue_payable_assembly_function_modifier.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/special/msg_sender_1.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/enums/global_enum.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/getter/simple_struct.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/shadowsBuiltin/functions.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/inline_assembly/local_var.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/dowhile_fine.sol,f();g();h();i();j();k()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/location_specifiers_for_locals_multi.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/tuples.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/address_invalid_state_mutability.sol,f();g(address view);h(address pure);i();j()
bobsummerwill/solidity,test/libsolidity/syntaxTests/dataLocations/variable_declaration_location_specifier_test_non_reference_type.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/025_comparison_of_mapping_types.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTestsJSON/multi.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_or_inside_branch.sol,f();g(bool a)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/functions_trivial_condition_for.sol,f(bool x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/address_members_in_contract.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/address_payable.sol,f(address payable b)
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/contractTypeType/members/assign_function_via_base_name_to_var.sol,f();g();h()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/446_no_unused_warning_abstract_arguments.sol,f(uint a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/scoping/scoping_for.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/typecast/enum_to_uint_max_value.sol,f(D _a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/structs/contract_global_struct_name_clash.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_parameters.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/ternary_fine.sol,f(bool flag);g(bool flag);h(bool flag)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/invalidArgs/explicit_conversions.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/string/string_unterminated_no_new_line.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/mapping_nonelementary_key_3.sol,""
bobsummerwill/solidity,test/compilationTests/MultiSigWallet/MultiSigWalletWithDailyLimit.sol,changeDailyLimit(uint _dailyLimit);executeTransaction(uint transactionId);isUnderLimit(uint amount);calcMaxWithdraw()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/functions_library_1.sol,"add(uint x, uint y);f(uint x)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/declaring_fixed_and_ufixed_variables.sol,"f(ufixed x, fixed32x32 y)"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/functions_trivial_condition_while.sol,f(bool x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/multiVariableDeclarationScoping.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/too_few_base_arguments.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/constructor_state_value_inherited.sol,f(uint y)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy_modifier.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/selector.sol,f();g();h()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/562_event_emit_foreign_class.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/always_revert.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/internal_external.sol,f(uint[] calldata);f(uint[] memory)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/functions_trivial_condition_for_only_call.sol,f(bool x);g()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_unreachable_1.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/inline_arrays/inline_array_declaration_and_passing_implicit_conversion_strings.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/functionCall/disordered_named_args.sol,"a(uint a, uint b, uint c);b()"
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/use_msize_with_optimizer.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/multiSource/no_import.sol,g(uint256 x);f(uint256 x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/function_no_body.sol,functionName(bytes32 input)
bobsummerwill/solidity,test/libsolidity/syntaxTests/imports/name_clash_in_import_2.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/expressions/conditional_expression_storage_memory_1.sol,f(bool cond)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/059_illegal_override_visibility.sol,f();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_not_really_recursive_array.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/address_payable_selfdestruct.sol,f(address payable a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/empty_struct.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/256_using_for_overload.sol,"mul(s storage self, uint x);mul(s storage, bytes32);f(uint a)"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_3.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/detect_sub_overflow.sol,"f(uint a, uint b);g(uint8 a, uint8 b)"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy_mixed_chain_empty_base.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/encoding_fractional_abiencoderv2.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/lvalues/valid_lvalues.sol,"i();e();f(uint x, bytes32 y);g(function();g(function()"
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/arrays_in_events.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/contractTypeType/members/struct_enum.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/var_array.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/067_function_clash_with_state_variable_accessor.sol,fun();foo()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_code_after_placeholder.sol,f();g(uint _x)
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/loops/simple.sol,f();g();h();i();j()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/bytes33.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/address_payable_external_overload.sol,f(address);f(address payable)
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/function_without_call.sol,f();k()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/398_does_not_warn_msg_value_in_payable_function.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/579_member_getter_call_without_parentheses_private_function.sol,f();f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/string_literal_assignment_3.sol,f(bytes32 _x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/specialFunctions/encodePacked_dynamic_string_array_v2.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/variableDeclaration/if.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/conversion/explicit_conversion_address_to_payable.sol,g(address payable _p);f(address _a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/cyclic_dependency_check_on_consts_exhausted.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/tryCatch/two_low_level_catch_clauses.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/modifiers/modifier_overrides_function.sol,mod(uint a)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/index_access_for_bytes.sol,f(bytes16 b)
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/interface/contract_base.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/smoke_test.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/mapping_as_parameter_1.sol,"f(mapping(uint => uint);g(uint a, uint b)"
bobsummerwill/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_struct_dynamic.sol,f(S calldata s);g(S calldata s)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/functions_bound_1.sol,"add(uint x, uint y);f(uint x)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/differentNumberOfComponentsFromReturn.sol,f();g();h();one();two();three();four()
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/array_storage_push_empty_length_address.sol,set_get_length(uint256 len)
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/callvalue_nonpayable_assembly_fallback.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/dataLocations/internalFunction/function_argument_location_specifier_test_internal_calldata.sol,f(bytes calldata)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/471_unspecified_storage_fail.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/metaTypes/noArgForType.sol,creation()
bobsummerwill/solidity,test/libsolidity/syntaxTests/modifiers/function_modifier_double_invocation.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/function_normal_comments.sol,functionName(bytes32 input)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/321_rational_to_bytes_implicit_conversion.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/114_exp_warn_literal_base_2.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/struct_array_branches_2d.sol,f(bool b)
bobsummerwill/solidity,test/libsolidity/syntaxTests/imports/shadowing_builtins_with_multiple_imports.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/inline_array_declaration.sol,f()
bobsummerwill/solidity,test/compilationTests/corion/tokenDB.sol,"increase(address owner, uint256 value);decrease(address owner, uint256 value);setAllowance(address owner, address spender, uint256 amount, uint256 nonce);getAllowance(address owner, address spender)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/no_common_base_and_unique_implementation.sol,f();g();g();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/172_assignment_to_const_string_bytes.sol,""
bobsummerwill/solidity,test/cmdlineTests/recovery_ast_constructor/input.sol,five()
bobsummerwill/solidity,test/libsolidity/syntaxTests/structs/recursion/static_array_of_recursive_structs.sol,func()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/implement_private_function_by_public_variable.sol,test()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/invalid_number.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/tryCatch/simple.sol,g(bool b);f(bool b)
bobsummerwill/solidity,test/libsolidity/syntaxTests/constants/pure_non_rational.sol,""
bobsummerwill/solidity,test/libsolidity/ASTJSON/assembly/function.sol,h();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/443_named_return_parameter_with_explicit_return.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/override_unimplemented_fine.sol,f();f();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/modifiers/non-virtual_modifier_override.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/function_call_fail2.sol,f(uint y)
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/slice/memory_static.sol,f(uint256[42] memory x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/missing_state_variable.sol,getStateVar()
bobsummerwill/solidity,test/libsolidity/syntaxTests/abstract/unimplemented_functions.sol,a()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/storage_reference.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/variables/mapping_local_compound_assignment.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/metaTypes/typeRecursive.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/scoping/scoping_for_decl_in_body.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/dataLocations/externalFunction/function_argument_location_specifier_test_external_calldata.sol,f(bytes calldata)
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/address_payable_type_expression.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/location_specifiers_for_locals.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/ternary_err.sol,f(bool flag);g(bool flag)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/tuple_assignment_array_empty.sol,"g(uint x, uint y)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/064_implicit_base_to_derived_conversion.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/206_storage_location_local_variables.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/array_static_3_fail.sol,"f(uint x, uint y, uint z, uint t, uint w, uint v)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/259_using_for_not_used.sol,double(uint self);f(uint16 a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/memberLookup/msg_value_modifier_pure.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/ambiguous_base_functions_overridden_in_intermediate_base_unimplemented.sol,f();f();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/payable_accessor.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/public_var_overriding_multiple.sol,foo();foo()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/storage_reference_on_function.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/484_function_types_selector_1.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/020_comparison_of_function_types_lt_1.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/268_function_overload_array_type.sol,f(uint[] memory);f(int[] memory)
bobsummerwill/solidity,test/libsolidity/syntaxTests/modifiers/modifier_returns_value.sol,f(uint a)
bobsummerwill/solidity,test/libsolidity/ASTJSON/assembly/loop.sol,g()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy_mixed_chain.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/asmForLoop/for_loop_break.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/294_long_uint_variable_fails.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/calldata_assign.sol,f(uint256[] calldata s)
bobsummerwill/solidity,test/libsolidity/syntaxTests/metaTypes/typeNotRegularIdentifierParameter.sol,f(uint type)
bobsummerwill/solidity,test/libsolidity/syntaxTests/modifiers/use_in_invalid_context.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/ecrecover/ecrecover.sol,"a(bytes32 h, uint8 v, bytes32 r, bytes32 s)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/116_shift_warn_literal_base_1.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/shadowsBuiltin/parameters.sol,f(uint require)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/071_base_class_state_variable_internal_member.sol,foo()
bobsummerwill/solidity,test/libsolidity/syntaxTests/tryCatch/error_with_wrong_type.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/528_fallback_marked_private.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/specialFunctions/types_with_unspecified_encoding_internal_functions.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/specialFunctions/abidecode/abi_decode_calldata.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/interface/multiple_parents.sol,test();testA();test();testB()
bobsummerwill/solidity,test/libsolidity/syntaxTests/indexing/fixedbytes_without_index.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/types/convert_fixed_bytes_to_uint_same_min_size.sol,bytesToUint(bytes1 s)
bobsummerwill/solidity,test/libsolidity/syntaxTests/imports/relative_import_multiplex.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/396_invalid_mobile_type.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/tryCatch/catch_error_named.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/while_break_direct.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/access_to_base_members.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/if_both_return.sol,f(bool c)
bobsummerwill/solidity,test/libsolidity/semanticTests/array/calldata_slice_access.sol,"f(uint256[] calldata x, uint256 start, uint256 end);g(uint256[] calldata x, uint256 start, uint256 end, uint256 index)"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_merge_variables_4.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/enum_from_library.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/if.sol,"f(bool condition);g(bool condition);h(bool condition);i(bool condition);j(uint a, uint b);k(uint a, uint b)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/047_returning_arrays_in_structs_new_abi.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/address_balance.sol,"f(address a, address b)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/rational_number_literal_limit_2.sol,bignum()
bobsummerwill/solidity,test/libsolidity/syntaxTests/structs/recursion/recursive_struct_as_contract_function_parameter.sol,f(MyStructName memory s)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy_diamond.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/430_bare_selfdestruct.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/functionCall/multiple_return_values.sol,"run(bool x1, uint x2)"
bobsummerwill/solidity,test/libsolidity/semanticTests/libraries/library_delegatecall_guard_view_needed.sol,f(uint256[] storage x);f();g();h()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/nonpayable_address_to_contract_payable_fallback.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/modifiers/modifiers_on_abstract_functions_no_parser_error.sol,foo();bar()
bobsummerwill/solidity,test/libsolidity/syntaxTests/constructor/overriding_constructor.sol,f();A();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/290_varM_disqualified_as_keyword_2.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array_struct_dynamic.sol,f(S[] calldata s);g(S[] calldata s)
bobsummerwill/solidity,test/libsolidity/syntaxTests/events/event_nested_array_indexed_v2.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/tupleAssignments/nowarn_swap_memory.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/storage/chop_sign_bits.sol,f();g();h(int8 t)
bobsummerwill/solidity,test/libsolidity/syntaxTests/scoping/poly_variable_declaration_same_scope.sol,f()
bobsummerwill/solidity,test/libsolidity/ABIJson/return_param_in_abi.sol,ret()
bobsummerwill/solidity,test/libsolidity/syntaxTests/imports/name_clash_in_import_struct_contract_1.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionTypes/delete_function_type_invalid.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/575_member_member_getter_call_without_parentheses.sol,f();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/call_internal_functions_fail.sol,f();g();h();i()
bobsummerwill/solidity,test/libsolidity/syntaxTests/natspec/invalid/dosctring_named_return_param_mismatch.sol,vote(uint id)
bobsummerwill/solidity,test/libsolidity/syntaxTests/natspec/invalid/dosctring_return_size_mismatch.sol,vote(uint id)
bobsummerwill/solidity,test/libsolidity/semanticTests/exponentiation/signed_base.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/abiEncoderV2/storage_array_encoding.sol,h(uint256[2][] calldata s);i(uint256[2][2] calldata s)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/mod_even.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/543_warn_about_address_members_on_contract_send.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/fallback_receive/fallback_with_override.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/if_fine.sol,f(bool flag);g(bool flag);h(bool flag);i();j()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/string_literal_assignment_1.sol,f(bytes32 _x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/msg_value_modifier_view.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/address_to_contract_implicitly.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/unterminatedBlocks/one_dot.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/expressions/bytes_comparison.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_or_touched_function.sol,g(bool _b);f()
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/array_push_return_reference.sol,test(uint256 v);getLength();fetch(uint256 a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/mapping/function_type_return_internal.sol,f(function()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/147_external_argument_increment.sol,f(uint a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/358_illegal_override_payable.sol,f();f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/inheritance/functions_2.sol,f();g();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/address_in_struct.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_same_local_variables.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/empty_comment.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/more_than_256_syntaxerrors.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionTypes/public_function_type.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/interface.sol,f();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/enums/global_enum_shadowing.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/485_function_types_selector_2.sol,g();f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/array_dynamic_parameter_1_fail.sol,"f(uint[] memory array, uint x, uint y)"
bobsummerwill/solidity,test/libsolidity/ABIJson/events.sol,f(uint a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/inline_arrays/inline_array_rationals.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/smoke_test.sol,fun(uint256 arg1)
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/enum_valid_declaration.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/while_loop_simple_2.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/unusedVariables/try_catch.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/imports/import_does_not_clutter_importee.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/contractTypeType/members/function_via_contract_name_private.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/metaTypes/name_constant.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionTypes/external_function_type_taking_internal.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/imports/name_clash_in_import_struct_contract_3.sol,""
bobsummerwill/solidity,test/libsolidity/ASTJSON/source_location.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/for_loop_simple_noexpr.sol,fun(uint256 a)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/overflow/underflow_sub_signed.sol,f(int8 x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/metaTypes/runtimeCodeWarningAssembly.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/213_no_delete_on_storage_pointers.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/constant_access.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/division_truncates_correctly_2.sol,"f(int x, int y)"
bobsummerwill/solidity,test/libsolidity/gasTests/dispatch_medium_optimised.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/abi_encode_functions.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/imports/name_clash_in_import_enum_contract.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/length/not_too_large.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/public_vars_multiple1.sol,foo()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/mapping_from_address_payable.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/write_storage_fail.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/413_address_methods.sol,f()
bobsummerwill/solidity,test/compilationTests/gnosis/Events/CategoricalEvent.sol,redeemWinnings();getEventHash()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/detect_double_override.sol,test()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/array_branch_1d.sol,"f(bool b, uint[] memory c)"
bobsummerwill/solidity,test/libsolidity/ASTJSON/fallback.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/invalid/library_index_access.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array_dynamic_static_short_reencode.sol,f(uint256[][2][] calldata x);g(uint256[][2][] calldata x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/single_return_param_trailing_comma.sol,""
bobsummerwill/solidity,test/libsolidity/ASTJSON/address_payable.sol,f(address payable arg)
bobsummerwill/solidity,test/libsolidity/ABIJson/return_structs_with_contracts.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/duplicated_constructor_call/base_multi.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/bool_simple_3.sol,"f(bool x, bool y)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/tight_packing_literals.sol,k()
bobsummerwill/solidity,test/libsolidity/syntaxTests/conversion/function_type_payable_nonpayable.sol,h();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/536_array_length_invalid_expression_negative_bool.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/length/invalid_expression_1.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/tuple_assignment_compound.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/unary_add_mapping.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/double_stateVariable_declaration.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/special/blockhash.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/mapping/function_type_argument_internal.sol,f(function(mapping(uint=>uint)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/433_pure_statement_in_for_loop.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/050_function_external_call_not_allowed_conversion.sol,externalCall()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/while_nested_break_fail.sol,"f(uint x, uint y, bool b, bool c)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/424_using_interface_complex.sol,f();g();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/474_storage_location_non_array_or_struct_disallowed_is_not_fatal.sol,f(uint storage a)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/inheritance/constructor_state_variable_init_diamond_middle.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/else_if_statement.sol,fun(uint256 a)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/compound_bitwise_xor_1.sol,f(bool b)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/enum_in_library.sol,f(E _d)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/361_calling_payable.sol,pay();f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/public_vars_wrong_override.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy_diamond_empty_middle_empty_base.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/string_pop.sol,test()
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionTypes/external_function_type_to_address_payable.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/storage_reference_empty_offset.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/unimplemented_super_function.sol,f();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/366_invalid_array_as_statement.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/bool_ops.sol,"f(bool a, bool b)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/063_implicit_derived_to_base_conversion.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/contract_receive_to_payable_address_implicitly.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/variables/public_state_overridding.sol,test();set()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/special/abi_decode_memory_v2.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/105_constant_input_parameter.sol,f(uint[] memory constant a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/abstract/abstract_contract_instantiation.sol,utterance();create()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/implement_public_function_by_public_variable.sol,test()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/multiple_return_param_trailing_comma.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/constructor_base_basic.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/tryCatch/empty_catch.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/libraries/stub.sol,f(uint256 v);g(uint256 v)
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/creation_no_restrict_warning.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/receiveEther/view_modifier.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/155_array_copy_with_different_types_static_dynamic.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/modifiers/function_modifier_invocation_local_variables.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/types/convert_uint_to_fixed_bytes_smaller_size.sol,uintToBytes(uint32 h)
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/array_storage_pop_zero_length.sol,popEmpty()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/trailing_dot3.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/abiEncoderV2/cleanup/address.sol,g(address x);f(uint256 a)
bobsummerwill/solidity,test/libsolidity/semanticTests/functionCall/named_args.sol,"a(uint a, uint b, uint c);b()"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/048_returning_arrays_in_structs_arrays.sol,f()
bobsummerwill/solidity,test/cmdlineTests/ast_json_import_wrong_evmVersion/input.sol,""
bobsummerwill/solidity,test/libsolidity/ABIJson/payable_function.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/ambiguous_base_and_unique_implementation.sol,f();g();f();f();g();f();g()
bobsummerwill/solidity,test/libsolidity/ABIJson/empty_name_input_parameter_with_named_one.sol,"f(uint, uint k)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_indirectly_recursive_complex.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/tryCatch/nested.sol,"g(bool b);f(bool cond1, bool cond2)"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/overflow/underflow_sub.sol,f(uint8 x)
bobsummerwill/solidity,test/compilationTests/gnosis/Tokens/EtherToken.sol,deposit();withdraw(uint value)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/492_do_not_crash_on_not_lvalue.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/use_msize_without_optimizer.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/modifiers/function_modifier_invocation_parameters.sol,f(uint8 a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/unimplemented_super_function_derived.sol,f();f();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/assignment_to_special.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/slice/storage_dynamic.sol,f()
bobsummerwill/solidity,test/libsolidity/ABIJson/multiple_methods.sol,f(uint a);g(uint b)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/while_loop_array_assignment_memory_memory.sol,"testUnboundedForLoop(uint n, uint[] memory b, uint[] memory c)"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/verification_target/simple_assert.sol,f(uint a)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_trivial_condition_3.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/unreachable.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/bytes_long_to_payable_address.sol,f(bytes32 x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/length/cannot_be_function.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/expressions/conditional_expression_tuples.sol,f(bool cond)
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/virtual_functions.sol,f();g();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inline_arrays/invalid_types_in_inline_array.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/contract_address_conversion_2.sol,"f(C c, C d)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/too_small_negative_numbers.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/override_empty_list.sol,test();test()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/shadowsBuiltin/ignores_struct.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/function_type_as_storage_variable_with_assignment.sol,"f(uint x, uint y)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/tupleAssignments/err_fill_assignment.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/tupleAssignments/error_fill.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/158_storage_variable_initialization_with_incorrect_type_int.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/unbalanced_positive_stack.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/control_flow/function_call_inside_placeholder_inside_modifier_branch.sol,f(address a);g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/empty_tuple_lvalue_array.sol,f();a()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/inheritance/state_variables_3.sol,f(uint y)
bobsummerwill/solidity,test/libsolidity/syntaxTests/natspec/docstring_empty_description.sol,vote(uint id)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/invariants/loop_nested.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/341_rational_bitand_binary_operation.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/contract_2.sol,"f(D c, D d)"
bobsummerwill/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array_function_types.sol,f(function();f_reenc(function();g(bool reenc)
bobsummerwill/solidity,test/libsolidity/syntaxTests/literalOperations/division_by_zero.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/literalOperations/mod_zero.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/dowhile_err.sol,f();g();h();i();j()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/function_type_state_variable.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/indexing/array_noninteger_index.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/structs/calldata_array_assign.sol,"f(S calldata s, int[3] calldata a)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/local_storage_variables_fail.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/specialFunctions/abi_encodePacked_structs_v2.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/interface/diamond/diamond_no_relist.sol,test();test()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_array_data_location_function_param_external.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/154_array_copy_with_different_types_conversion_possible.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/typecast/function_type_to_function_type_external.sol,f(function(uint)
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/local_const_variable.sol,localConst()
bobsummerwill/solidity,test/libsolidity/syntaxTests/constants/cyclic_dependency_4.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/slice/bytes_calldata.sol,f(bytes calldata x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/callvalue_nonpayable_assembly_function_internal.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/312_leading_zero_rationals_convert.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/abstract/abstract_contract_because_of_interface.sol,utterance()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/mapping/function_type_argument_external.sol,f(function(mapping(uint=>uint)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/342_missing_bool_conversion.sol,b(uint a)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/type_expression_array_3d.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/globalFunctions/sha3_override.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/unary_plus_expression.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/225_inheriting_from_library.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/override_multiple_fail1.sol,foo()
bobsummerwill/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array_multi_dynamic.sol,f(uint256[][] calldata s);g(uint256[][] calldata s);h(uint8[][] calldata s);i(uint8[][] calldata s);j(bytes[] calldata s);k(bytes[] calldata s)
bobsummerwill/solidity,test/libsolidity/syntaxTests/inline_arrays/inline_array_declaration_no_type.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/574_similar_name_shorter_than_80_suggested.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/short_circuit_fine.sol,f();g()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_6.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/events/event_struct_v2.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/slice/storage_static.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/fallback_receive/fallback_overrides_receive.sol,""
bobsummerwill/solidity,test/compilationTests/gnosis/MarketMakers/MarketMaker.sol,"calcCost(Market market, uint8 outcomeTokenIndex, uint outcomeTokenCount);calcProfit(Market market, uint8 outcomeTokenIndex, uint outcomeTokenCount);calcMarginalPrice(Market market, uint8 outcomeTokenIndex)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionCalls/named_arguments_overload_failing1.sol,"f(uint x);f(uint x, uint y);f(uint x, uint y, uint z);call()"
bobsummerwill/solidity,test/libsolidity/syntaxTests/constructor/returns_in_constructor.sol,""
bobsummerwill/solidity,test/libsolidity/ASTJSON/override.sol,faa();foo();faa();foo();faa()
bobsummerwill/solidity,test/libsolidity/syntaxTests/tryCatch/invalid_returns.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy_empty_middle.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionTypes/call_value_on_non_payable_function_type.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/assembly_err.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/functions_identity_1.sol,h(uint x);g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/calldata_memory_conflict.sol,f(uint[] calldata);g(uint[] calldata);h(uint[] calldata);i(uint[] calldata);f(uint[] calldata);g(uint[] calldata);h(uint[] calldata);i(uint[] calldata);f(uint[] memory);g(uint[] memory);h(uint[] memory);i(uint[] memory)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/011_type_conversion_for_comparison_invalid.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/address_payable_memory_array_conversion.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_array_return_public.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/smoke/multiline.sol,"f(uint a, uint b, uint c, uint d, uint e)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/location_specifiers_with_var.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/559_no_warning_for_using_members_that_look_like_address_members.sol,transfer(uint);f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/abstract/unimplemented_functions_inherited.sol,a()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/282_invalid_different_types_for_conditional_expression.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/override_multiple_fail2.sol,foo();test()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/trailing_dot1.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/497_gasleft.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/overflow/overflow_sum_signed.sol,f(int8 x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/tight_packing_literals_fine.sol,k();l()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/event_arguments_indexed.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/modifiers/legal_modifier_override.sol,""
bobsummerwill/solidity,test/libsolidity/ASTJSON/short_type_name.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/tryCatch/create.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/075_fallback_function_with_arguments.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/library_function_selector_internal.sol,f(uint256);f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy_empty_middle_no_invocation.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/029_create_abstract_contract.sol,foo();foo()
bobsummerwill/solidity,test/libsolidity/ASTJSON/fallback_and_reveice_ether.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/bool_int_mixed_1.sol,f(bool x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/362_calling_nonpayable.sol,nopay();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/constants/cyclic_dependency_2.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/090_event_call.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/function_inside_branch_modify_state_var.sol,f();g(bool b)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/117_shift_warn_literal_base_2.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/imports/smoke_test.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/for_loop_single_stmt_body.sol,fun(uint256 a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/length/parentheses.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_struct_member_offset.sol,g(B calldata b);f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/length/cannot_be_assigned.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/slice/calldata_static.sol,f(uint256[42] calldata x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/storage_reference_empty_slot.sol,f()
bobsummerwill/solidity,test/compilationTests/MultiSigWallet/Factory.sol,getInstantiationCount(address creator);register(address instantiation)
bobsummerwill/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_indirectly_recursive_dynamic_array3.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/525_reject_interface_constructors.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/ecrecover/ecrecover_abiV2.sol,"a(bytes32 h, uint8 v, bytes32 r, bytes32 s)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/structs/calldata_struct_function_type.sol,f(S calldata s)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/bytes_2.sol,"f(bytes memory b1, bytes memory b2)"
bobsummerwill/solidity,test/libsolidity/ABIJson/pure_function.sol,"foo(uint a, uint b);boo(uint32 a)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/structs/address_member_access.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/multiSource/warning_in_both.sol,g(uint256 x);f(uint256 x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/mappingReturn/named_err.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionTypes/private_function_type.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/509_large_storage_arrays_struct.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionTypes/function_type_constructor_local.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/contract.sol,"f(C c, C d)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionTypes/delete_external_function_type_invalid.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/special/abi_decode_memory_v2_value_types.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/detect_mod_zero.sol,"f(uint a, uint b);g(uint8 a, uint8 b)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/missing_variable_name_in_declaration.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/tryCatch/no_catch.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/abiEncoderV2/cleanup/bool.sol,gggg(bool x);f(uint256 a)
bobsummerwill/solidity,test/libsolidity/semanticTests/expressions/conditional_expression_functions.sol,x();y();f(bool cond)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/warnUnused/function_parameter.sol,f(uint a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/058_legal_override_indirect.sol,f(uint a);f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/structs/address_member_declaration.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/258_using_for_mismatch.sol,double(bytes32 self);f(uint a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/shadowing/contract.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/slice/calldata_dynamic_convert_to_memory.sol,f(bytes calldata x)
bobsummerwill/solidity,test/libsolidity/semanticTests/ecrecover/failing_ecrecover_invalid_input_proper.sol,"f();recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s, uint blockExpired, bytes32 salt)"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/address_transfer_2.sol,"f(uint x, address payable a, address payable b)"
bobsummerwill/solidity,test/compilationTests/gnosis/Markets/StandardMarketFactory.sol,"createMarket(Event eventContract, MarketMaker marketMaker, uint24 fee)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/modifiers/constructor_call_invalid_arg_count.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/022_comparison_of_function_types_gt_1.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/override_multiple_fail4.sol,foo()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/221_struct_constructor_nested.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/320_invalid_array_declaration_with_unsigned_fixed_type.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inline_arrays/inline_array_declaration_no_type_strings.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/interface/linearization/invalid/lists_a.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/501_gasleft_shadowing_2.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/multiVariableDeclarationEmpty.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/410_string_literal_not_convertible_to_address_as_assignment.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/220_struct_constructor.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/mapping.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/public_var_no_override_but_function.sol,foo()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/nonintermediate_common_base_and_unique_implementation_modifier.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/432_bare_require.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/length/inline_array.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/common_base_and_unique_mention.sol,f();g();f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/constructor/constructor_no_visibility.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/literals_on_stack_disallowed.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/570_function_type_undeclared_type.sol,a(function(Nested)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/functions_library_1_fail.sol,"add(uint x, uint y);f(uint x)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/missing_parameter_name_in_named_args.sol,"a(uint a, uint b, uint c);b()"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/type_expression_tuple_array_3d.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/mod_n.sol,"f(uint x, uint y)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/141_multiple_scopes_suggestions.sol,g()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/do_while_1_fail.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/041_functions_with_stucts_of_non_external_types_in_interface.sol,f(S memory)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/simple/static_array.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/308_rational_unary_plus_operation.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/function_call_state_var_init.sol,f(uint y)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/while_2.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionTypes/call_value_on_non_constructor.sol,f();g()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/control_flow/function_call_inside_branch.sol,f();g()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/array_branch_3d.sol,f(bool b)
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/slice/bytes_memory.sol,f(bytes memory x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/elementary_non_address_payable_local.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/compound_assignment_division_3.sol,"f(uint x, uint p)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/location_specifiers_for_params_multi.sol,"f(uint[] storage memory constant x, uint[] memory calldata y)"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/enum_explicit_values_2.sol,f(D _a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/trailing_comma_in_named_args.sol,"a(uint a, uint b, uint c);b()"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/complex/warn_on_typecast.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/modifier_inherited_different_signature.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/public_var_same_name_but_different_args.sol,foo(uint)
bobsummerwill/solidity,test/libsolidity/syntaxTests/indexing/struct_array_noninteger_index.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/structs/calldata/dynamic_nested.sol,f(S calldata s)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/string_1.sol,"f(string memory s1, string memory s2)"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/functions_trivial_condition_require_only_call.sol,f(bool x);g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/205_overwrite_storage_location_external.sol,f(uint[] storage a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/conversion/function_type_same.sol,h_nonpayable();h_payable();h_view();h_pure();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/370_shift_constant_left_excessive_rvalue.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/tryCatch/assert.sol,g(bool x);f(bool x)
bobsummerwill/solidity,test/libsolidity/ABIJson/payable_fallback_function.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/350_unused_return_value_delegatecall.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/invariants/loop_basic.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/091_event_function_inheritance_clash.sol,dup()
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/keccak.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/324_fixed_points_inside_structs.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/try_err.sol,ext();f();g();h();i()
bobsummerwill/solidity,test/libsolidity/syntaxTests/imports/name_clash_in_import_struct_contract_5.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/576_member_getter_call_without_parentheses.sol,f();f()
bobsummerwill/solidity,test/libsolidity/semanticTests/expressions/exp_zero_literal.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/c99_scoping_activation.sol,f();g();h();i()
bobsummerwill/solidity,test/cmdlineTests/too_long_line_both_sides_short/input.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/callvalue_payable_assembly_fallback.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/triangle_impl.sol,f();f();f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/tuple_declarations_function_2.sol,f(uint x);g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/073_state_variable_member_of_wrong_class2.sol,foo()
bobsummerwill/solidity,test/libsolidity/syntaxTests/dataLocations/privateFunction/private_function_return_parameters_no_data_location.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/typecast/string_literal_to_fixed_bytes_return_multi.sol,h();g();a()
bobsummerwill/solidity,test/libsolidity/syntaxTests/returnExpressions/valid_returns.sol,f();g();h();i();j()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/107_empty_name_input_parameter_with_named_one.sol,"f(uint, uint k)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/period_in_identifer.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/function_call_fail.sol,f(uint y)
bobsummerwill/solidity,test/compilationTests/milestonetracker/MilestoneTracker.sol,numberOfMilestones();changeArbitrator(address _newArbitrator);changeDonor(address _newDonor);changeRecipient(address _newRecipient);unproposeMilestones();markMilestoneComplete(uint _idMilestone);approveCompletedMilestone(uint _idMilestone);rejectMilestone(uint _idMilestone);cancelMilestone(uint _idMilestone);arbitrateCancelCampaign();authorizePayment(uint _idMilestone)
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionTypes/external_function_type_to_uint.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/length/const_cannot_be_fractional.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/constant_access_non_initialized.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/261_using_for_arbitrary_mismatch.sol,double(bytes32 self);f(uint a)
bobsummerwill/solidity,test/libsolidity/ASTJSON/long_type_name_identifier.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/storage_value_vars_3.sol,f(uint x);g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/329_rational_as_exponent_value_signed.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/mapping/argument_private.sol,f(mapping(uint => uint)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy_mixed_chain_with_params.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/inheritance/constructor_hierarchy_mixed_chain_with_params.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/array_static_mapping_aliasing_2.sol,f(mapping (uint => uint)
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/address_in_struct_fine.sol,f();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/modifier_inherited_different_signature_override.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/compound_shl_1.sol,f(bool b)
bobsummerwill/solidity,test/libsolidity/syntaxTests/fallback/fallback_as_function_name.sol,fallback()
bobsummerwill/solidity,test/libsolidity/syntaxTests/dataLocations/internalFunction/internal_function_parameters_no_data_location.sol,g(uint[])
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/106_empty_name_return_parameter.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/calldata_resize.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/string_literal_assignment_5.sol,g();f(bytes32 _x)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/inheritance/implicit_only_constructor_hierarchy.sol,h();g();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/diamond_interface_intermediate_public_state_variable_and_function_implemented.sol,f();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/variableDeclaration/else.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/metaTypes/codeAccessCyclic.sol,f();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/assignment_from_contract.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/duplicated_constructor_call/base_multi_no_constructor_modifier_style.sol,""
bobsummerwill/solidity,test/libsolidity/ASTJSON/long_type_name_binary_operation.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/call_unimplemented_internal_function.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/236_cyclic_binary_dependency.sol,f();f();f()
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/conversion/explicit_cast_local_assignment.sol,f(uint a)
bobsummerwill/solidity,test/libsolidity/ASTJSON/fallback_payable.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inline_arrays/dynamic_inline_array.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/verification_target/constant_condition_2.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/indexing/fixedbytes_out_of_bounds_index.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/tuple_function.sol,f();g()
bobsummerwill/solidity,test/libsolidity/semanticTests/smoke/failure.sol,e();f(bool _value);g(bool _value);h()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/encoding_fractional.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/scoping/double_variable_declaration_disjoint_scope.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/literals/hex_string_duplicate_underscore.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/invalidArgs/creating_struct_members_skipped.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/variable_declaration_suffix_offset.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/types/convert_uint_to_fixed_bytes_same_size.sol,uintToBytes(uint256 h)
bobsummerwill/solidity,test/libsolidity/gasTests/dispatch_medium.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/override_multiple2.sol,foo();test(uint8 _a);foo();foo()
bobsummerwill/solidity,test/libsolidity/semanticTests/expressions/exp_operator_const.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/550_warn_about_address_members_on_non_this_contract_call.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/168_assignment_to_const_var_involving_conversion.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/constructor_this.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/conversion/explicit_cast_assignment.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/emit_without_event.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/002_undeclared_name.sol,f(uint256 arg)
bobsummerwill/solidity,test/libsolidity/syntaxTests/specialFunctions/abi_functions_member_access.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/while_nested_continue.sol,"f(uint x, uint y, bool b, bool c)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/dataLocations/publicFunction/function_argument_location_specifier_test_public_calldata.sol,f(bytes calldata)
bobsummerwill/solidity,test/libsolidity/syntaxTests/receiveEther/old_syntax.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/gas_value_without_call.sol,f();g(address a);h()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/mapping/access_index_omitted.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/returning_structs_fail.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/calldata_memory_struct.sol,f(S calldata);g(S calldata);h(S calldata);i(S calldata);f(S memory);g(S memory);h(S memory);i(S memory)
bobsummerwill/solidity,test/libsolidity/semanticTests/structs/structs.sol,check();set()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/297_library_functions_do_not_have_value.sol,l();f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/do_while_1_false_positives.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/dataLocations/externalFunction/function_argument_location_specifier_test_external_memory.sol,f(bytes memory)
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/detect_div_overflow.sol,"f(uint a, uint b);g(int8 a, int8 b);h(uint256 a, uint256 b)"
bobsummerwill/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array_dynamic_index_access.sol,"f(uint256[] calldata s);g(uint256[][2] calldata s, uint256 which);h(uint8[] calldata s);i(uint8[][2] calldata s, uint256 which);j(bytes calldata s);k(bytes[2] calldata s, uint256 which)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/compoundAssignment/tuple_invalid_inline_array_type.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/010_type_conversion_for_comparison.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/contractTypeType/members/call_unimplemented_base.sol,f();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/contract_payable_fallback_to_payable_address_implicitly.sol,f()
bobsummerwill/solidity,test/cmdlineTests/too_long_line_multiline/input.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/encoding_packed_fractional.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/indexing/array_multim_overflow_index.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/bare_instructions_disallowed.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/constructor/function_named_constructor.sol,constructor()
bobsummerwill/solidity,test/libsolidity/syntaxTests/imports/shadowing_builtins_with_alias.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/conversion/not_allowed_conversion_to_int_array_pointer2.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/override_multiple_unresolved.sol,foo()
bobsummerwill/solidity,test/libsolidity/syntaxTests/conversion/explicit_conversion_from_storage_array_ref.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/getter/complex_struct.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/address_payable_struct.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/var_in_function_arguments.sol,"f(var);f(var x);f(var x, var y);f(uint x, var y);f(var x, uint y);f(var storage);f(var storage x);f(var storage x, var storage y)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/constant_state_modifier.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/290_varM_disqualified_as_keyword_1.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/indexing/function_type.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array_two_static.sol,"f(uint256[3] calldata s1, uint256[2] calldata s2, bool which);g(uint256[3] calldata s1, uint256[2] calldata s2, bool which)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/447_no_unused_warnings.sol,f(uint a)
bobsummerwill/solidity,test/externalTests/solc-js/DAO/TokenCreation.sol,createTokenProxy(address payable _tokenHolder);refund();divisor();createTokenProxy(address payable _tokenHolder);refund();divisor()
bobsummerwill/solidity,test/libsolidity/syntaxTests/unicode_escape_literals.sol,together();invalidLiteral()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/rational_number_div_limit.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_merge_variables_6.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/specialFunctions/types_with_unspecified_encoding_special_types.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/array_storage_push_empty.sol,pushEmpty(uint256 len)
bobsummerwill/solidity,test/libsolidity/syntaxTests/imports/name_clash_in_import_contract_struct_3.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/431_bare_assert.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/rational_number_huge_fail.sol,f(uint y)
bobsummerwill/solidity,test/libsolidity/semanticTests/specialFunctions/abi_functions_member_access.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/489_function_types_selector_6.sol,h();f()
bobsummerwill/solidity,test/externalTests/solc-js/DAO/Token.sol,"balanceOf(address _owner);transfer(address _to, uint256 _amount);transferFrom(address _from, address _to, uint256 _amount);approve(address _spender, uint256 _amount);receiveApproval(address _from, uint256 _value, address _token, bytes memory _extraData);balanceOf(address _owner);transfer(address _to, uint256 _amount);approve(address _spender, uint256 _amount);approveAndCall(address _spender, uint256 _value, bytes memory _extraData);allowance(address _owner, address _spender)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/230_creating_contract_within_the_contract.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/literal_to_payable_address.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/constants/addmod_zero.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy_2.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/calldata_multi.sol,f(uint[3][4] calldata)
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/diamond_interface_intermediate_public_state_variable.sol,f()
bobsummerwill/solidity,test/libsolidity/ABIJson/payable_constructor_abi.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionTypes/internal_function_as_external_parameter.sol,f(function(uint)
bobsummerwill/solidity,test/libsolidity/syntaxTests/lvalues/functions.sol,f();g();h();i()
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/length/bytes32_too_large_multidim.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/bytes_pop.sol,test()
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/length/parameter_too_large_multidim_ABIv2.sol,f(bytes32[1263941234127518272][500] memory);f(uint[2**30][2**30][][] memory)
bobsummerwill/solidity,test/libsolidity/syntaxTests/imports/library_name_clash_with_contract.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/super_on_external.sol,f();f()
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/assert_and_require.sol,f(bool a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/address_public_payable_error.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_overflow.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/compound_bitwise_or_1.sol,f(bool b)
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/calling_function.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/function_type_nested_return.sol,r();h()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/nonintermediate_common_base_and_unique_implementation_unimplemented.sol,f();g();f();f();f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/diamond_interface_intermediate_public_state_variable_and_function.sol,f();f()
bobsummerwill/solidity,test/libsolidity/semanticTests/tryCatch/trivial.sol,g(bool x);f(bool x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/metaTypes/typeOfContract.sol,f()
bobsummerwill/solidity,test/compilationTests/corion/owned.sol,replaceOwner(address newOwner);isOwner()
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/calldata.sol,f(uint[3] calldata)
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/whitespace_in_assignment.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/indexing/fixedbytes_negative_index.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/tuple_return_branch.sol,g();f(uint a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/425_interface_implement_public_contract.sol,f();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/423_using_interface.sol,f();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/disallow_modifier_style_without_parentheses.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/address_payable_internal_overload_payable.sol,f(address payable);f(address);g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/401_does_not_warn_msg_value_in_modifier_following_non_payable_public_function.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/compound_mul.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/override_type_mismatch.sol,foo();test(uint8 _a);foo();test();foo();foo();test();foo()
bobsummerwill/solidity,test/libsolidity/syntaxTests/deprecated_functions.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/411_string_literal_not_convertible_to_address_as_return_value.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/280_continue_not_in_loop.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/097_access_to_internal_function.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/conditional_multiple.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/560_event_emit_simple.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionTypes/function_type_internal_public_variable.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/modifier_ambiguous.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/scoping/double_variable_declaration_disjoint_scope_activation.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/functionCall/multiple_functions.sol,a();b();c();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/literal_constants_with_ether_subdenominations.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/479_explicit_literal_to_memory_string_assignment.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/101_empty_in_named_args.sol,"a(uint a, uint b);b()"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/struct_array_branches_1d.sol,f(bool b)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/overflow/overflow_sum.sol,f(uint8 x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_data_location_memory.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/for_1_false_positive.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/lexer_numbers_with_underscores_fixed_fail.sol,f()
bobsummerwill/solidity,test/compilationTests/gnosis/Oracles/DifficultyOracle.sol,setOutcome();isOutcomeSet();getOutcome()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/while_1_break_fail.sol,"f(uint x, bool b)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/580_improve_name_suggestion_one_and_two_letters.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/317_fixed_type_valid_explicit_conversions.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_or.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/408_invalid_address_length_short.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/333_fixed_point_casting_exponents_15.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/address_payable_internal_overload_nonpayable.sol,f(address payable);f(address);g()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/inheritance/constructor_state_variable_init_function_call.sol,f(uint y)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/delete_array_index_2d.sol,f(bool b)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/this_external_call.sol,f(uint y);g(uint y)
bobsummerwill/solidity,test/libsolidity/syntaxTests/conversion/allowed_conversion_to_string.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/warnUnused/return_parameter.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/196_integer_boolean_or.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/mapping_4.sol,f(bool x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/memberLookup/member_not_unique.sol,a(uint256);a(uint8);f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/conversion/function_type_pure_nonpayable.sol,h();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/array_pop_arg.sol,test()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/shadowing/name_clash_in_import.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/istanbul.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/490_function_types_selector_7.sol,h();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/overriding_fail.sol,f();g();f();g();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/573_similar_name_longer_than_80_not_suggested.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/var_empty_decl_1.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_return_internal.sol,f();g();h();i()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/typecast/cast_larger_1.sol,f(uint8 x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/508_large_storage_arrays_combined.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/invariants/state_machine_1_fail.sol,f();g();h();j();i()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/calldata_variables.sol,f(bytes calldata bytesAsCalldata)
bobsummerwill/solidity,test/compilationTests/gnosis/Oracles/CentralizedOracle.sol,replaceOwner(address newOwner);setOutcome(int _outcome);isOutcomeSet();getOutcome()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/array_mapping_aliasing_1.sol,f(mapping (uint => uint)
bobsummerwill/solidity,test/libsolidity/ASTJSON/two_base_functions.sol,f();f();f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/mapping_3d_1.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/tryCatch/low_level_with_wrong_type.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/function_type_call.sol,f(function(uint);h()
bobsummerwill/solidity,test/libsolidity/syntaxTests/constants/cyclic_dependency_1.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/contractTypeType/members/base_contract.sol,f();g();h()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/address_payable_storage_array_conversion.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/for_err.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/emit/emit_empty.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/053_hash_collision_in_interface.sol,gsf();tgeo()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/invalid_fixed_conversion_leading_zeroes_check.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/array_aliasing_storage_1.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/inheritance/constructor_state_variable_init_chain_run_all.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/unary_sub_array.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/library_function_selector.sol,f(uint256);g(uint256[] storage);h(uint256[] memory);f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/216_function_argument_storage_to_mem.sol,f(uint[] storage x);g(uint[] memory x)
bobsummerwill/solidity,test/libsolidity/gasTests/abiv2_optimised.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/148_external_argument_delete.sol,f(uint a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/modifier_ambiguous_fail.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/function_call_does_not_clear_local_vars.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/mapping_nonelementary_key_2.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/array_static_1_fail.sol,"f(uint x, uint y)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/shadowing_base_state_vars.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/denominations/combining_hex_and_denomination.sol,""
bobsummerwill/solidity,test/libsolidity/errorRecoveryTests/missing_rhs.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/mappingReturn/unnamed_err.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/specialFunctions/types_with_unspecified_encoding_structs.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/array_memory_create.sol,create(uint256 len)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/compound_bitwise_and_1.sol,f(bool b)
bobsummerwill/solidity,test/libsolidity/semanticTests/asmForLoop/for_loop_nested.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionCalls/arbitrary_parameters_but_restricted_first_type.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/292_modifier_is_not_a_valid_typename_is_not_fatal.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/bool_simple_2.sol,"f(bool x, bool y)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/fallback/default_visibility.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/040_functions_with_different_structs_in_interface.sol,f(S1 memory);f(S2 memory)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/unary_sub.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/storage/state_smoke_test.sol,"get(uint8 which);set(uint8 which, uint256 value)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/contract_to_base_base.sol,f()
bobsummerwill/solidity,test/compilationTests/gnosis/Markets/Campaign.sol,fund(uint amount);refund();createMarket();closeMarket();withdrawFees()
bobsummerwill/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_indirectly_recursive_dynamic_multi_array.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/contractTypeType/members/call_function_via_contract_name.sol,f();g();h();i()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/353_callcode_not_deprecated_as_function.sol,callcode()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_return_external.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/rational_number_signed_to_unsigned.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPure/view_pure_abi_encode.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/common_base_and_unique_implementation.sol,f();g();f();g();g();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/missing_variable_in_assign.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/405_address_checksum_type_deduction.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/406_invalid_address_checksum.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/address_payable_storage_array_conversion_fail.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/functionType.sol,f(function(uint[] storage)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/549_warn_about_address_members_on_non_this_contract_send.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/mapping/array_argument_internal.sol,f(mapping(uint => uint)
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/multiple_functions_natspec_documentation.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/tryCatch/catch_error.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/conversion/function_type_nonpayable_payable.sol,h();f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/while_1_fail.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/142_inheritence_suggestions.sol,func();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/storage_reference_assignment.sol,""
bobsummerwill/solidity,test/libsolidity/ABIJson/library_function.sol,"f(StructType storage b, uint[] storage c, X d)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/327_rational_index_access.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/315_fixed_type_invalid_implicit_conversion_size.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_indirectly_recursive_fixed_array1.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/128_enum_explicit_conversion_is_okay.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/fallback_receive/fallback_without_override.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/function_type_arrays.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/diamond_top_implemented_intermediate_empty_bottom_public_state_variable.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/251_using_for_library.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/typeChecking/return.sol,f()
bobsummerwill/solidity,test/compilationTests/corion/announcementTypes.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/rational_number_literal_limit_1.sol,bignum()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/shadowsBuiltin/return_parameters.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/control_flow/ways_to_merge_variables_3.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/contract_no_fallback_to_payable_address.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/push/calldata_push.sol,f(uint[] calldata x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/function_call_not_found.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/length/invalid_expression_5.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/540_array_length_invalid_expression_division_by_zero.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/literals/hex_string_trailing_underscore.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/warnUnused/local.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/498_msg_gas_deprecated.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/push/memory_push.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/while_loop.sol,fun()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/constructor_allowed_this.sol,a();b(C);f();g(C)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/201_integer_signed_exp_signed.sol,f();h()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy_empty_chain.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/if_err.sol,f(bool flag);g(bool flag)
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/fallback_receive/fallback_without_override_intermediate.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_directly_recursive_fixed_array.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/indexing/array_multidim_rational.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/568_blockhash.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/storage/simple_accessor.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/suggest_view.sol,g()
bobsummerwill/solidity,test/libsolidity/semanticTests/libraries/library_address_homestead.sol,"f(uint256 a, uint256 b);addr();g(uint256 a, uint256 b)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionCalls/named_arguments_overload.sol,"f(uint x);f(uint x, uint y);f(uint x, uint y, uint z);call()"
bobsummerwill/solidity,test/libsolidity/syntaxTests/tryCatch/low_level_pre-byzantium.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/libraries/library_delegatecall_guard_pure.sol,f(uint256[] storage x);f();g();h()
bobsummerwill/solidity,test/cmdlineTests/too_long_line/input.sol,"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff(announcementType Type, string Announcement, string Link, bool Oppositable, string _str, uint256 _uint, address _addr)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/constants/division_by_zero.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/dataLocations/internalFunction/function_argument_location_specifier_test_internal_memory.sol,f(bytes memory)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/302_invalid_fixed_type_long.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/returnExpressions/tuple_return_mismatching_number.sol,f();g();h()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/while_loop_array_assignment_memory_storage.sol,"testUnboundedForLoop(uint n, uint[] memory b, uint[] memory c)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/structs/global_struct_contract_name_clash.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/bytes_short_to_payable_address.sol,f(bytes10 x)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/inheritance/receive_fallback.sol,g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/581_improve_name_suggestion_three_letters.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/array_literal_1.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inline_arrays/inline_array_declaration_and_passing_implicit_conversion.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/dataLocations/externalFunction/function_argument_location_specifier_test_external_storage.sol,f(bytes storage)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/488_function_types_selector_5.sol,h();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/override_modifier_no_override.sol,""
bobsummerwill/solidity,test/compilationTests/gnosis/MarketMakers/LMSRMarketMaker.sol,"calcCost(Market market, uint8 outcomeTokenIndex, uint outcomeTokenCount);calcProfit(Market market, uint8 outcomeTokenIndex, uint outcomeTokenCount);calcMarginalPrice(Market market, uint8 outcomeTokenIndex);calcCostLevel(int logN, int[] memory netOutcomeTokensSold, uint funding);sumExpOffset(int logN, int[] memory netOutcomeTokensSold, uint funding, uint8 outcomeIndex);getNetOutcomeTokensSold(Market market)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/state_variable_function.sol,x()
bobsummerwill/solidity,test/libsolidity/ABIJson/empty_name_return_parameters.sol,f(uint k)
bobsummerwill/solidity,test/libsolidity/syntaxTests/string/string_multipart_newline_with_hex_prefix.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionCalls/named_arguments_overload_failing3.sol,"f(uint x);f(uint x, uint y);f(uint x, uint y, uint z);call()"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/contract_3.sol,"f(C c, C d, C e)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/constant_array.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/short_circuit.sol,or(uint x);and(uint x)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/this_fake.sol,f(C _c);g();h()
bobsummerwill/solidity,test/compilationTests/gnosis/Oracles/FutarchyOracle.sol,fund(uint funding);close();setOutcome();isOutcomeSet();getOutcome()
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/unimplemented_internal.sol,f();g()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/mod_n_uint16.sol,"f(uint16 x, uint16 y)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/397_warns_msg_value_in_non_payable_public_function.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/length/can_be_recursive_constant.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/conversion/function_type_nonpayable_pure.sol,h();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/constant_computation.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/constructor_this.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/shadowsBuiltin/variables.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/functions_external_2.sol,"g(uint x);f(uint y, D d)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/rational_number_huge.sol,f(uint y)
bobsummerwill/solidity,test/libsolidity/ASTJSON/modifier_invocation.sol,F()
bobsummerwill/solidity,test/libsolidity/ASTJSON/modifier_definition.sol,F()
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/static_storage_array_pop.sol,test()
bobsummerwill/solidity,test/libsolidity/syntaxTests/events/event_nested_array_in_struct.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/string/string_multipart_hex_valid_parts.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/193_positive_integers_to_signed_out_of_bound_max.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/170_assignment_to_const_var_involving_keccak.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/constants/addmod_mulmod_rational.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/mappings.sol,f();g();h()
bobsummerwill/solidity,test/libsolidity/semanticTests/inlineAssembly/selfbalance.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/conversion/function_type_pure_payable.sol,h();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/426_throw_is_deprecated.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/multiVariableDeclarationComplex.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/address_to_contract_payable_fallback.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/implement_internal_function_by_public_variable.sol,test()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/192_positive_integers_to_signed_out_of_bound.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/array_storage_index_access.sol,test_indices(uint256 len)
bobsummerwill/solidity,test/libsolidity/semanticTests/expressions/inc_dec_operators.sol,f()
bobsummerwill/solidity,test/compilationTests/gnosis/Oracles/MajorityOracleFactory.sol,createMajorityOracle(Oracle[] memory oracles)
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/comment_fine.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/functions_identity_2.sol,h(uint x);k(uint x);g()
bobsummerwill/solidity,test/libsolidity/ASTJSON/abstract_contract.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/functions_external_3.sol,"g(uint x);f(uint y, D d)"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_multi_functions_recursive.sol,"g(uint a, uint b);f(uint x)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/length/constant_var.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/indexing/array_out_of_bounds_index.sol,f()
bobsummerwill/solidity,test/compilationTests/corion/moduleHandler.sol,"connectModule();disconnectModule();replaceModule(address addr);disableModule(bool forever);isActive();replaceModuleHandler(address newHandler);transferEvent(address from, address to, uint256 value);newSchellingRoundEvent(uint256 roundID, uint256 reward);load(address payable foundation, bool forReplace, address payable Token, address payable Premium, address payable Publisher, address payable Schelling, address payable Provider);addModule(modules_s memory input, bool call);getModuleAddressByName(string memory name);getModuleIDByHash(bytes32 hashOfName);getModuleIDByName(string memory name);getModuleIDByAddress(address addr);replaceModule(string calldata name, address payable addr, bool callCallback);callReplaceCallback(string calldata moduleName, address newModule);newModule(string calldata name, address payable addr, bool schellingEvent, bool transferEvent);dropModule(string calldata name, bool callCallback);callDisableCallback(string calldata moduleName);broadcastTransfer(address from, address to, uint256 value);broadcastSchellingRound(uint256 roundID, uint256 reward);replaceModuleHandler(address newHandler);balanceOf(address owner);totalSupply();isICO();getCurrentSchellingRoundID();mint(address to, uint256 value);transfer(address from, address to, uint256 value, bool fee);processTransactionFee(address from, uint256 value);burn(address from, uint256 value);configureModule(string calldata moduleName, announcementType aType, uint256 value);freezing(bool forever)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/override_shared_base_simple.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/length/cannot_be_function_call.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/enums/global_enum_contract_name_clash.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/types/convert_uint_to_fixed_bytes_greater_size.sol,UintToBytes(uint16 h)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/inheritance/constructor_state_variable_init_chain_alternate.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/storage/array_accessor.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/malformed_enum_declaration.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/do_while_break_fail.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/invalid/contract_index_access.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/library_function_selector_view_pure.sol,f(uint256);g(uint256);f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/while_nested_continue_fail.sol,"f(uint x, uint y, bool b, bool c)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/denominations/denominations.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/external_turns_public_no_params.sol,f();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/255_using_for_function_on_struct.sol,"mul(s storage self, uint x);f(uint a)"
bobsummerwill/solidity,test/libsolidity/semanticTests/smoke/structs.sol,s();t()
bobsummerwill/solidity,test/libsolidity/syntaxTests/memberLookup/internal_function_type.sol,g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/events/event_nested_array_v2.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy_diamond_empty_middle.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/event_arguments.sol,""
bobsummerwill/solidity,test/cmdlineTests/require_overload/input.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/storage_value_vars_4.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/single_function_param_trailing_comma.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/constant_ref.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/functions_external_1.sol,"g(uint x);f(uint y, D d)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/495_builtin_ripemd160_reject_gas.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/shadowing/constant.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/176_overloaded_function_cannot_resolve.sol,f();f(uint a);g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_data_location_calldata.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/080_event.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/struct.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/281_continue_not_in_loop_2.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/contractTypeType/members/modifier_base.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/metaTypes/typeNotRegularIdentifierStateVariable.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/function_type_in_struct.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_or_fail.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/152_array_copy_with_different_types1.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/globalFunctions/suicide_override.sol,suicide();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/upper_case_hex_literals.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/receive/empty_calldata_calls_receive.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/abiEncoderV2/cleanup/intx.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/length/bytes32_too_large.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/constructor/inconstructible_internal_constructor.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/138_similar_name_suggestions_expected.sol,func();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/string/string_new_line.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_data_location_function_param_internal.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_indirectly_recursive.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/contractTypeType/members/function_via_contract_name_public.sol,f();g()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/string_literal_comparison_2.sol,f(bytes32 _x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/086_events_with_same_name_different_types.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/144_no_spurious_identifier_suggestions.sol,g()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/typecast/cast_larger_2_fail.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/modifiers/modifier_without_underscore.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/181_override_changes_return_types.sol,f(uint a);f(uint a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/535_address_overload_resolution.sol,balance();transfer(uint amount);f()
bobsummerwill/solidity,test/libsolidity/semanticTests/types/packing_unpacking_types.sol,"run(bool a, uint32 b, uint64 c)"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/functions_identity_1_fail.sol,h(uint x);g()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/inheritance/constructor_state_variable_init_chain.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/function_inside_branch_modify_state_var_3.sol,f();g(bool b);h(bool b)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/085_events_with_same_name_unnamed_arguments.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionTypes/payable_internal_function_type_is_not_fatal.sol,g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/477_too_large_arrays_for_calldata_internal.sol,f(uint[85678901234] memory a)
bobsummerwill/solidity,test/libsolidity/semanticTests/fallback/fallback_or_receive.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/encoding_packed_fractional_abiencoderv2.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/constructor/abstract_creation_forward_reference.sol,createChild()
bobsummerwill/solidity,test/libsolidity/syntaxTests/globalFunctions/call_with_wrong_arg_count.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/478_too_large_arrays_for_calldata_public.sol,f(uint[85678901234] memory a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/interface/implementation/partial.sol,testA();testB();testSub();testA();testSub()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/tuple_function_2.sol,f();g()
bobsummerwill/solidity,test/libsolidity/semanticTests/types/convert_fixed_bytes_to_uint_greater_size.sol,bytesToUint(bytes4 s)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/357_payable_private.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/address_delegatecall.sol,"f(address a, bytes memory data)"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/array_aliasing_storage_2.sol,"f(uint[] storage a, uint[] storage b, uint[] memory c)"
bobsummerwill/solidity,test/libsolidity/gasTests/dispatch_large.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/262_bound_function_in_var.sol,"mul(s storage self, uint x);f(uint a)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/override_multiple.sol,foo();test(uint8 _a);foo();test();foo();foo();test();foo()
bobsummerwill/solidity,test/libsolidity/syntaxTests/events/event_struct.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/uninitializedFunctionPointer/invalidStoredInConstructor.sol,f();f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/inheritance/implicit_constructor_hierarchy.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/internal_external_inheritance.sol,f(uint[] calldata);f(uint[] memory)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_1.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/175_uninitialized_const_variable.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/override_interface_multiple.sol,test();test();test()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/empty_tuple_function.sol,f();a()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/address_constant_payable.sol,""
bobsummerwill/solidity,test/libsolidity/gasTests/abiv2.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/296_int10abc_is_identifier.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/shadowsBuiltin/storage_variables.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/libraries/library_address.sol,f(uint256 v);g(uint256 v);addr();g(uint256 v);h(uint256 v);i(uint256 v);j(uint256 v);k(uint256 v)
bobsummerwill/solidity,test/libsolidity/syntaxTests/dataLocations/publicFunction/public_function_parameters_no_data_location.sol,h(uint[])
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/rational_number_bitshift_limit.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/cyclic_dependency_check_on_struct_good.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionCalls/named_arguments_for_functions_that_take_arbitrary_parameters.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/structs/conversion/assignment_ignore_mapping.sol,run()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/delete_struct.sol,f(bool b)
bobsummerwill/solidity,test/libsolidity/syntaxTests/visibility/external_library_function.sol,f(uint);f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/smoke_test.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/assembly.sol,e();f();g();h();g();j();k()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/065_super_excludes_current_contract.sol,b();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/public_vars_multiple2.sol,"foo();foo(uint );foo(uint , uint )"
bobsummerwill/solidity,test/libsolidity/syntaxTests/tryCatch/two_catch_clauses.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/conversion/function_type_pure_view.sol,h();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/var_empty_decl_0.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/comparison.sol,"f(address a);g();lt(uint a, uint b);slt(int a, int b);lte(uint a, uint b);slte(int a, int b);gt(uint a, uint b);sgt(int a, int b);gte(uint a, uint b);sgte(int a, int b);eq(uint a, uint b);neq(uint a, uint b)"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_or_need_both_fail.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/231_array_out_of_bound_access.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/210_uninitialized_mapping_variable.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/library_function_selector_private_outside.sol,f(uint256);f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/180_external_types_clash.sol,f(a);f(uint8 a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/125_enum_member_access_accross_contracts.sol,test()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/string_literal_assignment_4.sol,g();f(bytes32 _x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/compoundAssignment/incomp_types.sol,f()
bobsummerwill/solidity,test/libsolidity/ABIJson/receive_ether_function.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/constructor/inconstructible_internal_constructor_inverted.sol,""
bobsummerwill/solidity,test/libsolidity/ABIJson/include_fallback_function.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/368_shift_constant_left_negative_rvalue.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/address_payable_conversion.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/string_literal_comparison_1.sol,f(bytes32 _x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/zero_literal_to_bytesXX_implicit.sol,f();g();h()
bobsummerwill/solidity,test/libsolidity/syntaxTests/multiSource/one_source.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/tryCatch/return_function.sol,g();f();fun()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/array_static_2_fail.sol,"f(uint x, uint y, uint z, uint t)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/modifier_err.sol,f(bool flag);g(bool flag)
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/array_storage_index_zeroed_test.sol,test_zeroed_indicies(uint256 len)
bobsummerwill/solidity,test/libsolidity/semanticTests/expressions/exp_operator_const_signed.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/mapping/array_argument_private.sol,f(mapping(uint => uint)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/special/this.sol,f(address a)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/fixed_bytes_1.sol,f(bytes8 y);g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/conversion/allowed_conversion_to_bytes_array.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/abiEncoderV2/cleanup/function.sol,ggg(function();h(S calldata x);dummy();ffff(uint256 a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/482_explicit_literal_to_unspecified_string.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/typeChecking/return_tuple_not_convertible.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/while_loop_array_assignment_storage_storage.sol,testUnboundedForLoop(uint n)
bobsummerwill/solidity,test/libsolidity/syntaxTests/structs/recursion/parallel_structs.sol,addTestStruct(TestStruct memory)
bobsummerwill/solidity,test/libsolidity/syntaxTests/conversion/explicit_conversion_this_to_payable.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/storage_assignment.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/specialFunctions/abidecode/abi_decode_memory.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/contractTypeType/members/function_selector_via_contract_name.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/045_returning_multi_dimensional_arrays.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/array_memory_as_parameter.sol,"test(uint256 len, uint idx);receiver(uint[] memory array, uint idx)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/function_pointer.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/156_array_copy_with_different_types_dynamic_static.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/smoke/fallback.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/visibility_specifiers.sol,f();f_priv();f_internal()
bobsummerwill/solidity,test/libsolidity/syntaxTests/receiveEther/arguments.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/detect_add_overflow.sol,"f(uint a, uint b);g(uint8 a, uint8 b)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/shadowing/qualified_names.sol,f()
bobsummerwill/solidity,test/libsolidity/ASTJSON/non_utf8.sol,f()
bobsummerwill/solidity,test/compilationTests/gnosis/Oracles/FutarchyOracleFactory.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/multiSource/import.sol,g(uint256 x);f(uint256 x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/shadowing/function.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/value_with_call_nonpayable.sol,f(address a);g(address a);h();i()
bobsummerwill/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_indirectly_recursive_fixed_multi_array.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy_3.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/constructor_super.sol,x()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/enum_from_interface.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/specialFunctions/abidecode/abi_decode_storage.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/globalFunctions/sha256_with_wrong_arg_count.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_assert_condition_1.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/conversion/implicit_conversion_from_storage_array_ref.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/mapping_nonelementary_key_1.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/functionCall/array_multiple_local_vars.sol,f(uint256[] calldata seq)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy_diamond_3.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/array/push_no_args_struct.sol,"f(uint y);g(S storage s, uint y);h(uint y);lv(uint y);a(uint i);l()"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/for_1_break_fail.sol,"f(uint x, bool b)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/metaTypes/codeAccessAbstractRuntime.sol,runtime();f(uint)
bobsummerwill/solidity,test/compilationTests/corion/multiOwner.sol,"insertOwner(address addr);dropOwner(address addr);cancelDo(bytes32 doHash);ownersForChange();calcDoHash(string memory job, bytes32 data);validDoHash(bytes32 doHash);insertAndCheckDo(bytes32 doHash);_addOwner(address addr);_delOwner(address addr)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/409_invalid_address_length_long.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/globalFunctions/sha3_var.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/lvalues/calldata_index_access.sol,f(uint256[] calldata x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/leave_items_on_tack.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/types/convert_fixed_bytes_to_fixed_bytes_smaller_size.sol,bytesToBytes(bytes4 input)
bobsummerwill/solidity,test/libsolidity/syntaxTests/events/event_struct_indexed.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/conversion/function_type_view_pure.sol,h();f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/mapping_aliasing_2.sol,f(mapping (uint => uint)
bobsummerwill/solidity,test/libsolidity/semanticTests/structs/struct_reference.sol,check();set()
bobsummerwill/solidity,test/libsolidity/syntaxTests/constructor/constructor_without_implementation.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/500_gasleft_shadowing_1.sol,gasleft();f()
bobsummerwill/solidity,test/compilationTests/corion/publisher.sol,"transferEvent(address payable from, address payable to, uint256 value);Announcements(uint256 id);checkOpposited(uint256 weight, bool oppositable);newAnnouncement(announcementType Type, string calldata Announcement, string calldata Link, bool Oppositable, string calldata _str, uint256 _uint, address payable _addr);closeAnnouncement(uint256 id);oppositeAnnouncement(uint256 id);invalidateAnnouncement(uint256 id);checkICO()"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/250_member_access_parser_ambiguity.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/array/access_to_base_member_array.sol,g();h()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/for_1_continue_fail.sol,"f(uint x, bool b)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/metaTypes/codeAccessBase.sol,f();creation();runtime();creationBase();runtimeBase()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/contract_to_unrelated_contract.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/018_forward_function_reference.sol,"fun();fun(uint, bool, uint)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/constants/mulmod_zero.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/abiDecodeV1/dynamic_memory_copy.sol,test(bytes memory buf)
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/var_type_invalid_rational.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/318_invalid_array_declaration_with_rational.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/typecast/enum_from_uint.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/conversion/function_type_view_nonpayable.sol,h();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/for_loop_vardef_initexpr.sol,fun(uint256 a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/empty_tuple_event.sol,a()
bobsummerwill/solidity,test/compilationTests/corion/safeMath.sol,"safeAdd(uint256 a, uint256 b);safeSub(uint256 a, uint256 b)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/array/access_to_array_push.sol,g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/contractTypeType/members/function_via_contract_name_internal.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/address_nonpayable_selfdestruct.sol,f(address a)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/inheritance/constructor_state_variable_init_chain_run_all_2.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/uint_to_payable_address.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/150_array_with_nonconstant_length.sol,f(uint a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/memberLookup/failed_function_lookup.sol,"f(uint, uint);f(uint);g()"
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_dynamic_key_public.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/events/event_array_indexed_v2.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/events/event_nested_array_2.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/232_literal_string_to_storage_pointer.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/metaTypes/codeAccessLibrary.sol,creationOther();runtime();f(uint)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/tuple_assignment.sol,g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/dataLocations/publicFunction/function_argument_location_specifier_test_public_storage.sol,f(bytes storage)
bobsummerwill/solidity,test/libsolidity/syntaxTests/globalFunctions/suicide_var.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/special/abi_decode_simple.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/347_unused_return_value_call.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_merge_variables_2.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/function_type_as_storage_variable.sol,""
bobsummerwill/solidity,test/libsolidity/gasTests/dispatch_small.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/memberLookup/contract_not_payable_send.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/290_varM_disqualified_as_keyword_3.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/contract_to_derived.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/104_empty_name_input_parameter.sol,f(uint)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/054_inheritance_basic.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/more_than_256_declarationerrors.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/virtual_private.sol,test();test()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/tuple_declarations_function_empty.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/015_balance_invalid.sol,fun()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/003_undeclared_name_is_not_fatal.sol,f(uint256 arg)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/compound_assignment_division_1.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/unnamed_tuple_decl.sol,f();g();h();test()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/enum_explicit_values.sol,f(D _a)
bobsummerwill/solidity,test/libsolidity/semanticTests/state_var_initialization.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/while_2_break.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/316_fixed_type_invalid_implicit_conversion_lost_data.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/slice/bytes_storage.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/array_aliasing_storage_5.sol,"f(uint[] storage a, uint[] memory c)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/constant_variable_via_offset.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy_mixed_chain_with_params_2.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/conditional_true_false_literal.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/special/this_state.sol,f(address a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_data_location_default.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/calldata_memory.sol,f(uint[] calldata);g(uint[] calldata);h(uint[] calldata);i(uint[] calldata);f(uint[] memory);g(uint[] memory);h(uint[] memory);i(uint[] memory)
bobsummerwill/solidity,test/compilationTests/gnosis/Oracles/SignedMessageOracle.sol,"replaceSigner(address newSigner, uint _nonce, uint8 v, bytes32 r, bytes32 s);setOutcome(int _outcome, uint8 v, bytes32 r, bytes32 s);isOutcomeSet();getOutcome()"
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/callvalue_nonpayable_assembly_function_modifier.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy_diamond_2.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/279_break_not_in_loop.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/scoping/scoping_self_use.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/uninitialized_storage_var.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/while_loop_simple_4.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/gasTests/data_storage.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/typecast/cast_address_1.sol,f(address a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/126_enum_invalid_member_access.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/tryCatch/no_returns.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/fallback/return_value_type.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/imports/shadowing_builtins_with_imports.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionTypes/function_type_returned.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inline_arrays/inline_array_declaration_const_string_conversion.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/modifier_order_fail.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/tupleAssignments/warn_multiple_storage_storage_copies.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/462_callable_crash.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/events/event_array_v2.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/complex/slither/const_state_variables.sol,setUsed();setUsed(uint a);getNumber()
bobsummerwill/solidity,test/libsolidity/semanticTests/expressions/conditional_expression_storage_memory_2.sol,f(bool cond)
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/no_unused_variable_warning.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/inline_assembly/empty.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/specialFunctions/types_with_unspecified_encoding_types.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/allow_empty_duplicated_super_constructor_call.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/arrays_in_storage.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/modifiers/illegal_modifier_override.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/storage_reference_fine.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/no_singleton_tuple.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/address_tuple_fine.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/while_2_break_fail.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/fallback/pure_modifier.sol,""
bobsummerwill/solidity,test/cmdlineTests/too_long_line_right_short/input.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/control_flow/function_call_inside_branch_2.sol,f();g()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/bool_simple_6.sol,f(bool x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/129_int_to_enum_explicit_conversion_is_okay.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/override.sol,test();test()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/502_builtin_keccak256_reject_value.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/unary_add_array.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_assignment_outside_branch.sol,f();g(uint y)
bobsummerwill/solidity,test/libsolidity/syntaxTests/structs/recursion/return_recursive_structs2.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/metaTypes/codeAccess.sol,creationOther();runtimeOther();f(uint)
bobsummerwill/solidity,test/libsolidity/semanticTests/interface_inheritance_conversions.sol,parentFun();subAFun();subBFun();parentFun();subAFun();subBFun();convertParent();convertSubA();convertSubB()
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionTypes/internal_function_type_to_address.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/inheritance/constructor_state_variable_init.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/mapping/assignment_local.sol,fun()
bobsummerwill/solidity,test/compilationTests/gnosis/Tokens/OutcomeToken.sol,"issue(address _for, uint outcomeTokenCount);revoke(address _for, uint outcomeTokenCount)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/355_payable_external.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/function_type_as_parameter.sol,f(function(uint)
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/new_invalid_type_name.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/address_constant_assignment.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/constructor_hierarchy_mixed_chain_local_vars.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/signed_rational_modulus.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/abiEncoderV2/cleanup/bytesx.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/structs/recursion/return_recursive_structs3.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/conversion/implicit_cast_assignment.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/functions_bound_1_fail.sol,"add(uint x, uint y);f(uint x)"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/delete_array_index.sol,f(bool b)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/type_expression_array_2d.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/slice/memory_dynamic.sol,f(uint256[] memory x)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/division_1.sol,"f(uint x, uint y)"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/overflow/simple_overflow.sol,"f(uint a, uint b)"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/inheritance/constructor_state_variable_init_diamond.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/while_fine.sol,f();g();h()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/typecast/cast_larger_2.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/133_enum_duplicate_values.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/add_view.sol,f();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/004_reference_to_later_declaration.sol,g();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/538_array_length_invalid_expression_bool_divides_int.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/length/invalid_expression_3.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/conversion/not_allowed_conversion_from_super.sol,foo();fii()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/public_vars_multiple_diamond.sol,foo();foo();foo()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/location_specifiers_for_state_variables_multi.sol,""
bobsummerwill/solidity,test/libsolidity/errorRecoveryTests/multiple_errors.sol,"sendCoin(address receiver, uint amount)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/double_variable_declaration.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/inheritance/state_variables.sol,f(uint y)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/shadowsBuiltin/ignores_constructor.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/structs/calldata_dynamic.sol,f(S calldata)
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_dynamic_key.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/short_circuit_err.sol,f();g();h()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/address_payable_function_type.sol,g(function (address payable)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/195_positive_integers_to_unsigned_out_of_bound.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/structs/conversion/recursive_storage_memory.sol,run()
bobsummerwill/solidity,test/libsolidity/semanticTests/functionCall/transaction_status.sol,f();g();h()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/division_truncates_correctly_4.sol,"f(int x, int y)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/diamond_interface_empty_intermediate_public_state_variable_and_function.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/array_aliasing_memory_3.sol,"f(uint[] memory a, uint[] memory b)"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/functions_storage_var_2.sol,f(uint x);g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/257_using_for_by_name.sol,"mul(s storage self, uint x);f(uint a)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionTypes/external_function_type_public_variable.sol,g(uint);f()
bobsummerwill/solidity,test/libsolidity/semanticTests/tryCatch/lowLevel.sol,g(bool b);f(bool b)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/overflow/safe_sub_1.sol,"sub(uint256 a, uint256 b)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/invalidArgs/creating_struct.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/slice/slice_string.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/uint256_to_bytes1.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/253_using_for_function_exists.sol,double(uint self);f(uint a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/323_mapping_with_fixed_literal.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/uninitializedFunctionPointer/storeInConstructor.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/length/cannot_be_assigned_struct.sol,f()
bobsummerwill/solidity,test/cmdlineTests/too_long_line_edge_in/input.sol,"ffffffffffffffffffffff(announcementTypeTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT Ty, string A)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/interface/linearization/invalid/lists_b.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/569_block_blockhash_deprecated.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_trivial_condition_2.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/inline_array_empty_cells_check_lvalue.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/types/convert_fixed_bytes_to_uint_smaller_size.sol,bytesToUint(bytes4 s)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_2.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/base_arguments_empty_parentheses.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/typecast/string_literal_to_fixed_bytes_function_call.sol,f();g(bytes7 a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/023_comparison_of_function_types_gt_2.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/array/push_no_args_2d.sol,"l();ll(uint index);a(uint i, uint j);f(uint index, uint value);lv(uint value)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/303_fixed_type_int_conversion.sol,f()
bobsummerwill/solidity,test/compilationTests/gnosis/Tokens/Token.sol,"transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value);balanceOf(address owner);allowance(address owner, address spender);totalSupply()"
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/read_storage_pure_fail.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/scoping/state_variable_function_conflict_former_crash.sol,balance(uint number);doSomething()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/reference_non_base_ctor.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/functions_identity_as_tuple.sol,h(uint x);g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/222_struct_named_constructor.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_indirectly_recursive_fixed_array2.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/scoping/scoping_old.sol,f()
bobsummerwill/solidity,test/libsolidity/ASTJSON/assembly/stringlit.sol,m()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/544_warn_about_address_members_on_contract_call.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/calldata_multi_dynamic_V1.sol,f(uint[][] calldata);g(uint[][1] calldata)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/while_loop_simple_3.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/missing_argument_in_named_args.sol,"a(uint a, uint b, uint c);b()"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/constant_mapping.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/compound_add_chain.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/475_implicit_conversion_disallowed.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionTypes/external_function_to_function_type_calldata_parameter.sol,f(function(bytes memory);callback(bytes calldata);g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/override_unimplemented_fail.sol,f();f();f();f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_and_need_both.sol,f();g()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_assert_condition_2.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/001_name_references.sol,f(uint256)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/428_bare_revert.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/mapping_equal_keys_2.sol,"f(uint x, uint y)"
bobsummerwill/solidity,test/libsolidity/gasTests/dispatch_small_optimised.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/var_empty_decl_3.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/string/string_multipart_single_line.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/scoping/scoping_for2.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/array_dynamic_3_fail.sol,"f(uint x, uint y, uint z, uint t, uint w, uint v)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/duplicated_constructor_call/base.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/lexer_numbers_with_underscores_hex_fail.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/slice/calldata_dynamic.sol,f(uint256[] calldata x)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/functions_trivial_condition_while_only_call.sol,f(bool x);g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/local_variable_access_out_of_functions.sol,f();g()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/unary_sub_mapping.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/ABIJson/constructor_abi.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/control_flow/function_call_inside_branch_3.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/tupleAssignments/double_storage_crash.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/fallback/payable_fallback_with_inherited_receive.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/suggest_pure.sol,g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/226_inheriting_library.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_array_assignment_storage_memory.sol,testUnboundedForLoop(uint n)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/306_invalid_int_implicit_conversion_from_fixed.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/mapping/argument_internal.sol,f(mapping(uint => uint)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/mapping_3d_1_fail.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/while_1_continue_fail.sol,"f(uint x, bool b)"
bobsummerwill/solidity,test/libsolidity/semanticTests/functionSelector/function_selector_via_contract_name.sol,f();g(uint256);f();g(uint256)
bobsummerwill/solidity,test/libsolidity/syntaxTests/specialFunctions/abidecode/abi_decode_simple.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionTypes/valid_function_type_variables.sol,fa(uint);fb(uint);fc(uint);fd(uint);fe(uint);ff(uint);fg(uint);fh(uint)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/305_fixed_type_rational_fraction_conversion.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_or_touched.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/length/parameter_too_large.sol,f(bytes32[1263941234127518272] memory)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/control_flow/branches_merge_variables_1.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/332_rational_as_exponent_value_neg_quarter.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/178_assignment_of_nonoverloaded_function.sol,f(uint a);g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/369_shift_constant_right_negative_rvalue.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/length/can_be_constant_in_function.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/types/convert_fixed_bytes_to_fixed_bytes_greater_size.sol,bytesToBytes(bytes2 input)
bobsummerwill/solidity,test/compilationTests/corion/ico.sol,"ICObonus();setInterestDB(address addr, uint256 balance);checkInterest(address addr);getInterest(address beneficiary);setICOEthPrice(uint256 value);extendICO();closeICO();abortICO();connectTokens(address payable tokenContractAddr, address payable premiumContractAddr);receiveFunds();buy(address payable beneficiaryAddress, address affilateAddress);checkPremium(address owner);getIcoReward(uint256 value);isICO()"
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/public_vars_multiple.sol,foo();foo()
bobsummerwill/solidity,test/libsolidity/ABIJson/return_structs.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/slice/calldata_dynamic_forward.sol,f(bytes calldata x)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/mapping_as_local_var_1.sol,f(bool cond)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/473_storage_location_non_array_or_struct_disallowed.sol,f(uint storage a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/bytes_to_contract.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/expressions/conditional_expression_different_types.sol,f(bool cond)
bobsummerwill/solidity,test/libsolidity/semanticTests/statements/do_while_loop_continue.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/lexer_numbers_with_underscores_hex.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/functions_external_4.sol,f(uint _x);g(uint _y)
bobsummerwill/solidity,test/libsolidity/syntaxTests/dataLocations/privateFunction/private_function_parameters_no_data_location.sol,f(uint[])
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/bytes_1.sol,f(bytes memory b)
bobsummerwill/solidity,test/libsolidity/semanticTests/libraries/library_delegatecall_guard_view_not_needed.sol,f(uint256[] storage x);f();g();h()
bobsummerwill/solidity,test/libsolidity/semanticTests/functionCall/named_args_overload.sol,"f();f(uint a);f(uint a, uint b);f(uint a, uint b, uint c);call(uint num)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/constructor/constructor_visibility.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/mapping_2.sol,f(bool x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/mapping_and_array_of_functions.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/bytesXX_index_assign.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/imports/name_clash_in_import_contract_struct_4.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/implement_interface_by_public_variable.sol,test()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/address_payable_local.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/structs/recursion/multi_struct_composition.sol,f(T memory)
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/override_missing_virtual.sol,test();test()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/139_no_name_suggestion.sol,g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/146_external_argument_assign.sol,f(uint a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/constructor/constructor_state_mutability.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_inside_branch_assignment.sol,f();g(uint y)
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/callvalue_nonpayable_assembly_function.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/control_flow/ways_to_merge_variables_1.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/function_type_array_as_reference_type.sol,b(function(Nested memory);c(function(Nested memory);d(function(Nested memory)
bobsummerwill/solidity,test/libsolidity/syntaxTests/structs/recursion/recursive_struct_forward_reference.sol,f(Data.S memory a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/167_constant_string_literal_disallows_assignment.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/531_tuple_invalid_literal_too_large_unassigned.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/modifiers_in_constructor_context.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/memberLookup/msg_value_modifier_view.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/compound_sub_mapping.sol,"f(uint x, uint p)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/empty_function_name.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/structs/global_struct.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/no_array_pop.sol,test()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_array_return_internal.sol,f();g();h();i()
bobsummerwill/solidity,test/libsolidity/syntaxTests/imports/filename_with_period.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/480_explicit_literal_to_storage_string_assignment.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/481_explicit_literal_to_unspecified_string_assignment.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_4.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/578_private_member_getter_call_without_parentheses.sol,f();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/434_pure_statement_check_for_regular_for_loop.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/literal_constants_with_ether_subdenominations_in_expressions.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/356_payable_internal.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/inlineAssembly/chainid.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/address_nonpayable.sol,f(address b)
bobsummerwill/solidity,test/libsolidity/syntaxTests/conversion/explicit_conversion_sender_to_payable.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/inlineAssembly/leave.sol,f();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/metaTypes/unsupportedArgForType.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/459_function_overload_is_not_shadowing.sol,f();f(uint)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/584_abi_decode_with_tuple_of_other_than_types.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/160_test_byte_is_alias_of_byte1.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/051_function_internal_allowed_conversion.sol,internalCall()
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/simple_assignment.sol,"f(uint a, uint b)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/storage_reference_on_memory.sol,""
bobsummerwill/solidity,test/compilationTests/corion/premium.sol,"receiveCorionPremiumToken(address, uint256, bytes calldata);approvedCorionPremiumToken(address, uint256, bytes calldata);replaceModule(address payable addr);closeIco();approve(address spender, uint256 amount, uint256 nonce);approveAndCall(address spender, uint256 amount, uint256 nonce, bytes calldata extraData);_approve(address spender, uint256 amount, uint256 nonce);allowance(address owner, address spender);transfer(address to, uint256 amount);transferFrom(address from, address to, uint256 amount);transfer(address to, uint256 amount, bytes calldata extraData);transferToContract(address from, address to, uint256 amount, bytes memory extraData);_transfer(address from, address to, uint256 amount);mint(address owner, uint256 value);_mint(address owner, uint256 value);isContract(address addr);balanceOf(address owner);totalSupply()"
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/conditional_with_constants.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/length/complex_cyclic_constant.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/double_revert.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/194_negative_integers_to_unsigned.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/address_transfer_insufficient.sol,"f(address payable a, address payable b)"
bobsummerwill/solidity,test/libsolidity/ABIJson/event_structs.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/constant_access.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/140_multiple_similar_suggestions.sol,g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/ambiguous_base_functions_overridden_in_intermediate_base.sol,f();f();f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/complex/warn_on_struct.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/address_transfer.sol,f(address payable a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/index_access_for_bytes.sol,f(bytes16 b)
bobsummerwill/solidity,test/libsolidity/ASTJSON/assembly/call.sol,j()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/hex_literal_to_bytesXX_different_size_implicit.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/224_string_bytes_conversion.sol,h(string calldata _s);i(string memory _s);j();k(bytes calldata _b);l(bytes memory _b);m()
bobsummerwill/solidity,test/libsolidity/syntaxTests/unterminatedBlocks/one_dot_x.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/300_invalid_fixed_types_7x8_mxn.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/124_enum_member_access.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/mapping/mapping_array_return_external.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/smoke/basic.sol,"d();e();f(uint a);g();h(uint x, uint y);i(bool b);j(bytes32 b);k();l(uint a)"
bobsummerwill/solidity,test/libsolidity/ABIJson/receive_ether_and_fallback_function.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/contractTypeType/members/base_contract_invalid.sol,f();g();i()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/252_using_for_not_library.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/indexing/fixedbytes_noninteger_index.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/572_function_type_undeclared_type_multi_nested.sol,a(function(function(function(Nested)
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/address_constant.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/constants/abi_encoding_constant.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/scoping/double_function_declaration.sol,fun();fun()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/049_function_external_call_allowed_conversion.sol,externalCall()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/overloaded_reference.sol,f();f(address);g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/string/string_multipart_only_hex.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/functions_storage_var_2_fail.sol,f(uint x);g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPure/view_pure_abi_encode_arguments.sol,gView();gNonPayable();check()
bobsummerwill/solidity,test/libsolidity/syntaxTests/lvalues/calldata_member_access.sol,f(S calldata s)
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/bytes0.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/do_while_break_2_fail.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/fallback/return_value_unsupported.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/223_literal_strings.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/095_multiple_events_argument_clash.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/constructor_state_value_parameter.sol,f(uint y)
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/public_vars_multiple_explicit_override.sol,foo();foo()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/single_event_arg_trailing_comma.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/array_struct_array_branches_2d.sol,f(bool b)
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/smoke.sol,f();g();h();i();j()
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/modifiers.sol,f();g();h();i();j();k();l();m();n()
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/detect_mod_zero_signed.sol,"f(int a, int b);g(int8 a, int8 b)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/globalFunctions/callcode_with_wrong_arg_count.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/rational_negative_numerator_negative_exp.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/unterminatedBlocks/zero_dot_x.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/memberLookup/failed_function_lookup_in_library.sol,"f(uint, uint);f(uint);g()"
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/modifier_fine.sol,f(bool flag);g(bool flag)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/103_invalid_parameter_names_in_named_args.sol,"a(uint a, uint b);b()"
bobsummerwill/solidity,test/compilationTests/gnosis/Tokens/StandardToken.sol,"transfer(address to, uint value);transferFrom(address from, address to, uint value);approve(address spender, uint value);allowance(address owner, address spender);balanceOf(address owner);totalSupply()"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/constructor_state_value.sol,f(uint y)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/179_assignment_of_overloaded_function.sol,f();f(uint a);g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/metaTypes/name.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/constructor/external_constructor.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/exponentiation/small_exp.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/074_fallback_function.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/assignment_from_library.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/public_var_overrides_public_var.sol,""
bobsummerwill/solidity,test/libsolidity/ASTJSON/receive_ether.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/112_exp_operator_exponent_too_big.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_directly_recursive.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/natspec/docstring_empty_tag.sol,vote(uint id)
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/interface/overrides_multiple.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/receive/inherited.sol,getData()
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/selector_complex.sol,f(C c);g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/payable_without_arguments.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/134_enum_name_resolution_under_current_contract_name.sol,a()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/modifiers/modifier_inside_branch_assignment_branch.sol,f();g(uint y)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/127_enum_invalid_direct_member_access.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/113_exp_warn_literal_base_1.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/conversion/function_type_nonpayable_view.sol,h();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/524_accept_library_creation.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/typecast/cast_smaller_1.sol,f(uint16 x)
bobsummerwill/solidity,test/libsolidity/semanticTests/abiEncoderV2/cleanup/static_array.sol,"gggggggg(uint8[2] calldata s);f(uint256 a, uint256 b)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/shadowing/argument.sol,f(uint a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/conversion/conversion_to_bytes.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/fallback/payable_fallback_without_receive_only_internal.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/empty_fun_arg_beginning.sol,"f();f(a, b)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/address_tuple_fail.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/access_to_base_member_function.sol,x();f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/control_flow/function_call_inside_else_branch.sol,f();g()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/mapping_2d_1.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/returnExpressions/single_return_mismatching_number.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/099_access_to_internal_state_variable.sol,g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/address_to_contract.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/imports/name_clash_in_import_contract_struct_1.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/typecast/cast_larger_3.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/smoke.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/while_break.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/triangle_no_impl.sol,f();f();f()
bobsummerwill/solidity,test/libsolidity/ABIJson/basic_test.sol,f(uint a)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/while_2_fail.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/calldata_memory_interface_instantiate.sol,f(uint[] calldata);f(uint[] memory);f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/invalidTypes/constructor_call.sol,f()
bobsummerwill/solidity,test/libsolidity/errorRecoveryTests/contract_recovery.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/variableDeclaration/while.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/errorRecoveryTests/error_to_eos.sol,"sendCoin(address receiver, uint amount)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_not_really_recursive.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/ecrecover/failing_ecrecover_invalid_input.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/151_array_with_negative_length.sol,f(uint a)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/tuple_assignment_multiple_calls.sol,f(uint x);g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/nonpayable_address_to_contract_receive.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_or_need_both.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/multiple_statemutability_specifiers.sol,f();f();f();f();f();f();f();f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/address_abi_decode.sol,f(bytes memory b)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/array_dynamic_2.sol,"f(uint x, uint y, uint z, uint t)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/structs/recursion/struct_definition_indirectly_recursive_dynamic_array2.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/verification_target/constant_condition_3.sol,f(uint)
bobsummerwill/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array_static_dynamic_static.sol,f(uint8[1][][1] calldata s);reenc_f(uint8[1][][1] calldata s);g();h();i();j()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/189_string_length.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/specialFunctions/abidecode/abi_decode_invalid_arg_count.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/specialFunctions/abidecode/abi_decode_invalid_arg_type.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/functions_recursive_indirect.sol,f();g()
bobsummerwill/solidity,test/libsolidity/ASTJSON/enum_value.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/abiEncoderV2/calldata_array_static_index_access.sol,"f(uint256[3] calldata s);g(uint256[3][2] calldata s, uint256 which);h(uint8[3] calldata s);i(uint8[3][2] calldata s, uint256 which)"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/enum_in_struct.sol,f(S memory s)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/534_tuple_invalid_literal_too_large_expression.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/577_member_getter_call_without_parentheses_missing_function.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/165_assigning_state_to_const_variable.sol,""
bobsummerwill/solidity,test/compilationTests/corion/schelling.sol,"replaceOwner(address newOwner);getFunds(address _owner);setFunds(address _owner, uint256 _amount);getRound(uint256 _id);pushRound(uint256 _totalAboveWeight, uint256 _totalBelowWeight, uint256 _reward, uint256 _blockHeight, bool _voted);setRound(uint256 _id, uint256 _totalAboveWeight, uint256 _totalBelowWeight, uint256 _reward, uint256 _blockHeight, bool _voted);getCurrentRound();getVoter(address _owner);setVoter(address _owner, uint256 _roundID, bytes32 _hash, voterStatus _status, bool _voteResult, uint256 _rewards);getSchellingExpansion(uint256 _id);setSchellingExpansion(uint256 _id, uint256 _expansion);setCurrentSchellingRound(uint256 _id);getCurrentSchellingRound();replaceModule(address payable addr);transferEvent(address payable from, address payable to, uint256 value);getFunds(address addr);setFunds(address addr, uint256 amount);setVoter(address owner, _voter memory voter);getVoter(address addr);setRound(uint256 id, _rounds memory round);pushRound(_rounds memory round);getRound(uint256 id);getCurrentRound();setCurrentSchellingRound(uint256 id);getCurrentSchellingRound();setSchellingExpansion(uint256 id, uint256 amount);getSchellingExpansion(uint256 id);configure(announcementType a, uint256 b);prepareVote(bytes32 votehash, uint256 roundID);sendVote(string calldata vote);checkVote();getRewards(address beneficiary);checkReward();nextRound();addFunds(uint256 amount);getFunds();getCurrentSchellingRoundID();getSchellingRound(uint256 id);getRoundWeight(uint256 aboveW, uint256 belowW);isWinner(_rounds memory round, bool aboveVote);getTotalSupply();getTokenBalance(address addr)"
bobsummerwill/solidity,test/libsolidity/semanticTests/expressions/conditional_expression_true_literal.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/array_static_mapping_aliasing_1.sol,f(mapping (uint => uint)
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/enum_inheritance_interface.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/interface/linearization/valid.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/do_while_continue.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/119_shift_warn_literal_base_4.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/470_specified_storage_no_warn.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/344_one_divided_by_three_integer_conversion.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionTypes/function_type_return_parameters_with_names.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/functions/functions_identity_2_fail.sol,h(uint x);k(uint x);g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/rational_number_exp_limit_fine.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionTypes/internal_function_returned_from_public_function.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/msg_value_modifier.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/169_assignment_to_const_var_involving_expression.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/override_public_vars.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/modifiers/base_constructor_double_invocation.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/address/literal_to_address.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/tryCatch/invalid_error_name.sol,f()
bobsummerwill/solidity,test/libsolidity/ABIJson/inherited.sol,baseFunction(uint p);derivedFunction(bytes32 p)
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/slice/calldata_dynamic_access.sol,f(uint256[] calldata x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/for_loop_simple_initexpr.sol,fun(uint256 a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/imports/complex_import.sol,"f(c.S memory var1, x.C.S memory var2, C.S memory var3)"
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/string_format.sol,g();h()
bobsummerwill/solidity,test/libsolidity/syntaxTests/indexing/array_without_index.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/string_literals.sol,short_dyn();long_dyn();short_bytes_dyn();long_bytes_dyn();bytesNN();bytesNN_padded()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/529_fallback_marked_public.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_array_assignment_memory_storage.sol,"testUnboundedForLoop(uint n, uint[] memory b, uint[] memory c)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/304_fixed_type_rational_int_conversion.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/314_fixed_type_zero_handling.sol,f()
bobsummerwill/solidity,test/compilationTests/gnosis/Markets/Market.sol,"fund(uint _funding);close();withdrawFees();buy(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint maxCost);sell(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint minProfit);shortSell(uint8 outcomeTokenIndex, uint outcomeTokenCount, uint minProfit);calcMarketFee(uint outcomeTokenCost)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/variable_definition_in_mapping.sol,fun()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/585_abi_decode_with_unsupported_types.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/typeChecking/return_wrong_number.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/literalOperations/mod_zero_complex.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/overloaded_functions.sol,"fun(uint a);fun(uint a, uint b)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/constant_bytes_ref.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/sameNumberOfComponents.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/uninitializedAccess/modifier_post_access.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/control_flow/ways_to_merge_variables_2.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/imports/name_clash_in_import_1.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/double_return.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/duplicated_constructor_call/base_multi_no_constructor.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/variableDeclaration/do_while.sol,f(uint x)
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/length/non_integer_constant_var.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/division_truncates_correctly_3.sol,"f(int x, int y)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/invalidArgs/creating_memory_array.sol,f(uint size)
bobsummerwill/solidity,test/libsolidity/syntaxTests/modifiers/invalid_function_modifier_type.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/array_range_nested.sol,f(uint256[][] calldata x)
bobsummerwill/solidity,test/libsolidity/ABIJson/view_function.sol,"foo(uint a, uint b);boo(uint32 a)"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/complex/slither/external_function.sol,funcCalled();callWithSuper();funcNotCalled();my_func();funcNotCalled();exec()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/public_var_overriding_multiple_derived.sol,foo();foo()
bobsummerwill/solidity,test/libsolidity/syntaxTests/virtualLookup/modifiers_in_libraries.sol,withMod(uint self);f(uint _value)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/bytes_2_fail.sol,"f(bytes memory b1, bytes memory b2)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/541_warn_about_address_members_on_contract_balance.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/510_large_storage_array_mapping.sol,""
bobsummerwill/solidity,test/libsolidity/ABIJson/function_type.sol,g(function(uint)
bobsummerwill/solidity,test/libsolidity/ASTJSON/contract_dep_order.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/115_exp_warn_literal_base_3.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/322_fixed_to_bytes_implicit_conversion.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/inheritance/fallback.sol,g()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/function_type_as_argument.sol,f(function(uint)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/081_event_too_many_indexed.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/array_static_aliasing_memory_5.sol,"f(uint[2] memory a, uint[2] memory b, uint[2] memory c)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/493_builtin_keccak256_reject_gas.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/shadowsBuiltin/events.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/detect_sub_overflow_signed.sol,"f(int a, int b);g(int8 a, int8 b)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/lexer_numbers_with_underscores_decimal_fail.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionTypes/conversion_to_address.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/functionCall/base_overload.sol,"init(uint a, uint b);init(uint a);cInit(uint c);cInit(uint c, uint d)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/public_vars_multiple4.sol,balanceOf(address);balanceOf(uint);balanceOf()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/override_multiple_no_virtual.sol,foo();foo();foo()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/struct_1.sol,"f(uint y, uint v)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/multiVariableDeclaration/multiVariableDeclarationSimple.sol,f();g();h()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/298_invalid_fixed_types_0x7_mxn.sol,""
bobsummerwill/solidity,test/libsolidity/semanticTests/types/convert_uint_to_fixed_bytes_same_min_size.sol,UintToBytes(uint8 h)
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/loops/for_loop_array_assignment_memory_memory.sol,"testUnboundedForLoop(uint n, uint[] memory b, uint[] memory c)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/try_fine.sol,ext();f();g();h()
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/array_storage_index_boundary_test.sol,"test_boundary_check(uint256 len, uint256 access)"
bobsummerwill/solidity,test/libsolidity/semanticTests/expressions/conditional_expression_with_return_values.sol,"f(bool cond, uint v)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/inlineAssembly/invalid/empty_fun_arg_end.sol,"f();f(a, b)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/returnExpressions/single_return_mismatching_number_named.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/unreachableCode/revert_empty.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/elemantary_non_address_payable_state_variable.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/lvalues/external_reference_argument.sol,"f(uint256[] calldata x, uint256[] calldata y)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/address_payable_library.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/082_anonymous_event_four_indexed.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/229_call_to_library_function.sol,"min(uint, uint);f()"
bobsummerwill/solidity,test/libsolidity/syntaxTests/functionTypes/function_type.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/shadowsBuiltin/global_scope.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/typecast/string_literal_to_fixed_bytes_modifier.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/length/can_be_constant_in_struct.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/receiveEther/return_value.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/313_fixed_type_size_capabilities.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_and_touched_function.sol,g(bool _b);f()
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/simple_inline_asm.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/mapping_and_array_of_functions.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/compound_mul_mapping.sol,"f(uint x, uint p)"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/control_flow/short_circuit_and.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/092_function_event_inheritance_clash.sol,dup()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/declaring_fixed_literal_variables.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/override/override_multiple_no_virtual2.sol,foo();foo()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/compound_shr_1.sol,f(bool b)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/174_address_is_constant.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/137_external_visibility.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/dynamic_memory_array_pop.sol,test()
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/length/cannot_be_assigned_mapping.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/fallback_receive/receive_with_override_intermediate.sol,""
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/control_flow/function_call_inside_branch_4.sol,f();g();h()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/hex_literal_to_bytesXX_different_size_explicit.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/tryCatch/returns_memory_anonymous.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/multi_variable_declarations.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/tryCatch/two_error_catch_clauses.sol,f()
bobsummerwill/solidity,test/libsolidity/semanticTests/smoke/alignment.sol,"internalStateDecimal();update(bool _bool, uint256 _decimal, bytes32 _bytes)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/contractTypeType/members/modifier.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/118_shift_warn_literal_base_3.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/for_fine.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/inheritance/interface/implementation/complete.sol,testA();testB();testSub();testA();testB();testSub()
bobsummerwill/solidity,test/libsolidity/semanticTests/inlineAssembly/constant_access.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/334_fixed_point_casting_exponents_neg.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/smoke_test.sol,g();f();h();i()
bobsummerwill/solidity,test/libsolidity/syntaxTests/controlFlow/storageReturn/tuple_fine.sol,f();g();h()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/014_balance.sol,fun()
bobsummerwill/solidity,test/compilationTests/MultiSigWallet/TestToken.sol,"issueTokens(address _to, uint256 _value);transfer(address _to, uint256 _value);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);balanceOf(address _owner)"
bobsummerwill/solidity,test/libsolidity/semanticTests/functionCall/mapping_array_internal_argument.sol,"set_internal(mapping(uint8 => uint8);set(uint8 key, uint8 value_a1, uint8 value_a2, uint8 value_b1, uint8 value_b2);get(uint8 key)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/typeChecking/return_wrong_type.sol,f()
bobsummerwill/solidity,test/libsolidity/ABIJson/empty_contract.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/286_conditional_expression_with_different_enum.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/modifiers_fail.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/function_type_in_expression.sol,"f(uint x, uint y);g()"
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/types/array_static_3.sol,"f(uint x, uint y, uint z, uint t, uint w, uint v)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/024_comparison_of_function_types_eq.sol,f();g()
bobsummerwill/solidity,test/libsolidity/syntaxTests/unterminatedBlocks/zero_dot.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/string/string_multipart_only_regular.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/compound_add_array_index.sol,"f(uint x, uint p)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/modifiers/function_overrides_modifier.sol,mod(uint a)
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/detect_add_overflow_signed.sol,"f(int a, int b);g(int8 a, int8 b)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/imports/import_is_transitive.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/var_type_suggest.sol,h();g(uint x);f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/operators/delete_array.sol,f(bool b)
bobsummerwill/solidity,test/libsolidity/semanticTests/structs/calldata/dynamically_encoded.sol,f(S calldata s)
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/bytes32_to_uint32.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/literals/hex_string_misaligned_underscore.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/078_fallback_function_twice.sol,""
bobsummerwill/solidity,test/compilationTests/stringutils/strings.sol,"memcpy(uint dest, uint src, uint len);toSlice(string memory self);len(bytes32 self);copy(slice memory self);toString(slice memory self);len(slice memory self);empty(slice memory self);compare(slice memory self, slice memory other);equals(slice memory self, slice memory other);nextRune(slice memory self, slice memory rune);nextRune(slice memory self);ord(slice memory self);keccak(slice memory self);startsWith(slice memory self, slice memory needle);beyond(slice memory self, slice memory needle);endsWith(slice memory self, slice memory needle);until(slice memory self, slice memory needle);findPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);rfindPtr(uint selflen, uint selfptr, uint needlelen, uint needleptr);find(slice memory self, slice memory needle);rfind(slice memory self, slice memory needle);split(slice memory self, slice memory needle, slice memory token);split(slice memory self, slice memory needle);rsplit(slice memory self, slice memory needle, slice memory token);rsplit(slice memory self, slice memory needle);count(slice memory self, slice memory needle);contains(slice memory self, slice memory needle);concat(slice memory self, slice memory other);join(slice memory self, slice[] memory parts)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/563_event_without_emit_deprecated.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/function_types/function_state_mutability_fail.sol,internalPureFunc(uint256 x);internalViewFunc(uint256 x);internalMutableFunc(uint256 x);externalPureFunc(uint256 x);externalViewFunc(uint256 x);externalPayableFunc(uint256 x);externalMutableFunc(uint256 x);funcTakesInternalPure(function(uint256);funcTakesInternalView(function(uint256);funcTakesInternalMutable(function(uint256);funcTakesExternalPure(function(uint256);funcTakesExternalView(function(uint256);funcTakesExternalPayable(function(uint256);funcTakesExternalMutable(function(uint256);tests()
bobsummerwill/solidity,test/libsolidity/semanticTests/empty_contract.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/scoping/double_variable_declaration_same_and_disjoint_scope.sol,f()
bobsummerwill/solidity,test/libsolidity/smtCheckerTests/complex/slither/data_dependency.sol,set(address source_taint);set(uint source_taint);f();f();f(uint user_input);foo();bar()
bobsummerwill/solidity,test/compilationTests/gnosis/Oracles/SignedMessageOracleFactory.sol,"createSignedMessageOracle(bytes32 descriptionHash, uint8 v, bytes32 r, bytes32 s)"
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/returning_structs_no_restrict_warning.sol,f();g();h()
bobsummerwill/solidity,test/libsolidity/syntaxTests/array/calldata_dynamic.sol,f(uint[] calldata)
bobsummerwill/solidity,test/libsolidity/syntaxTests/nameAndTypeResolution/263_create_memory_arrays.sol,f(uint size)
bobsummerwill/solidity,test/libsolidity/syntaxTests/viewPureChecker/builtin_functions_restrict_warning.sol,f();g()
bobsummerwill/solidity,test/libsolidity/semanticTests/libraries/library_delegatecall_guard_view_staticcall.sol,f(D d);f();g();h()
bobsummerwill/solidity,test/libsolidity/syntaxTests/scoping/function_state_variable_conflict.sol,f(uint)
bobsummerwill/solidity,test/libsolidity/semanticTests/viaYul/local_address_assignment.sol,f(address a)
bobsummerwill/solidity,test/libsolidity/syntaxTests/parsing/multiple_function_param_trailing_comma.sol,""
bobsummerwill/solidity,test/libsolidity/syntaxTests/types/var_empty_decl_2.sol,f()
bobsummerwill/solidity,test/libsolidity/syntaxTests/imports/name_clash_in_import_contract_struct_5.sol,""
AugurProject/augur-core,tests/solidity_test_helpers/ZeroX/ZeroXPoC.sol,"ZeroXPoC(Augur _augur);deposit(ERC20 _token, uint256 _amount);withdraw(ERC20 _token, uint256 _amount);tradeMakerSharesForFillerShares(Order order, uint _toFillAmount);sellCompleteSets(Order order, uint256 _numCompleteSets, address _shortParticipant, address _longParticipant, IShareToken _longShareToken, IShareToken[] _shortShareTokens);tradeMakerSharesForFillerTokens(Order order, uint _toFillAmount);tradeMakerTokensForFillerShares(Order order, uint _toFillAmount);tradeMakerTokensForFillerTokens(Order order, uint256 _toFillAmount);getShortShareTokens(IMarket _market, uint256 _longOutcome);getOrderHash(address[2] orderAddresses, uint[6] orderValues);getUnavailableAmount(bytes32 orderHash);getTokenBalance(ERC20 token, address owner);getBalance(ERC20 token, address owner);getAllowance(ERC20 token, address owner)"
AugurProject/augur-core,source/contracts/trading/CompleteSets.sol,"publicBuyCompleteSets(IMarket _market, uint256 _amount);publicBuyCompleteSetsWithCash(IMarket _market, uint256 _amount);buyCompleteSets(address _sender, IMarket _market, uint256 _amount);publicSellCompleteSets(IMarket _market, uint256 _amount);publicSellCompleteSetsWithCash(IMarket _market, uint256 _amount);sellCompleteSets(address _sender, IMarket _market, uint256 _amount)"
AugurProject/augur-core,tests/solidity_test_helpers/MaliciousTrader.sol,"approveAugur(ICash _cash, address _augur);makeOrder(ICreateOrder _createOrder, Order.Types _type, uint256 _attoshares, uint256 _displayPrice, IMarket _market, uint256 _outcome, bytes32 _betterOrderId, bytes32 _worseOrderId, bytes32 _tradeGroupId);setEvil(bool _evil)"
AugurProject/augur-core,source/contracts/reporting/IReputationToken.sol,"initialize(IUniverse _universe);migrateOut(IReputationToken _destination, uint256 _attotokens);migrateIn(address _reporter, uint256 _attotokens);trustedReportingParticipantTransfer(address _source, address _destination, uint256 _attotokens);trustedMarketTransfer(address _source, address _destination, uint256 _attotokens);trustedFeeWindowTransfer(address _source, address _destination, uint256 _attotokens);trustedUniverseTransfer(address _source, address _destination, uint256 _attotokens);getUniverse();getTotalMigrated();getTotalTheoreticalSupply();mintForReportingParticipant(uint256 _amountMigrated)"
AugurProject/augur-core,source/contracts/reporting/InitialReporter.sol,"initialize(IMarket _market, address _designatedReporter);redeem(address);report(address _reporter, bytes32 _payoutDistributionHash, uint256[] _payoutNumerators, bool _invalid);withdrawInEmergency();resetReportTimestamp();migrateREP();forkAndRedeem();getStake();getDesignatedReporter();getReportTimestamp();designatedReporterShowed();getFeeWindow();getReputationToken();designatedReporterWasCorrect();onTransferOwnership(address _owner, address _newOwner)"
AugurProject/augur-core,source/contracts/Controller.sol,"Controller();addToWhitelist(address _target);removeFromWhitelist(address _target);assertIsWhitelisted(address _target);registerContract(bytes32 _key, address _address, bytes20 _commitHash, bytes32 _bytecodeHash);getContractDetails(bytes32 _key);lookup(bytes32 _key);transferOwnership(address _newOwner);emergencyStop();stopInEmergency();onlyInEmergency();getAugur();getTimestamp()"
AugurProject/augur-core,source/contracts/reporting/IFeeWindow.sol,"initialize(IUniverse _universe, uint256 _feeWindowId);getUniverse();getReputationToken();getStartTime();getEndTime();getNumMarkets();getNumInvalidMarkets();getNumIncorrectDesignatedReportMarkets();getNumDesignatedReportNoShows();getFeeToken();isActive();isOver();onMarketFinalized();buy(uint256 _attotokens);redeem(address _sender);redeemForReportingParticipant();mintFeeTokens(uint256 _amount);trustedUniverseBuy(address _buyer, uint256 _attotokens)"
AugurProject/augur-core,source/contracts/trading/IFillOrder.sol,"publicFillOrder(bytes32 _orderId, uint256 _amountFillerWants, bytes32 _tradeGroupId);fillOrder(address _filler, bytes32 _orderId, uint256 _amountFillerWants, bytes32 tradeGroupId)"
AugurProject/augur-core,source/contracts/libraries/Initializable.sol,endInitialization();getInitialized()
AugurProject/augur-core,source/contracts/libraries/token/ERC20.sol,"allowance(address _owner, address _spender);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value)"
AugurProject/augur-core,tests/solidity_test_helpers/MockInitialReporter.sol,"setReportTimestamp(uint256 _reportTimestamp);setPayoutDistributionHash(bytes32 _payoutDistributionHash);initialize(IMarket _market, address _designatedReporter);callMintFeeTokens(IFeeWindow _feeWindow, uint256 _amount);reportWasCalled();report(address _reporter, bytes32 _payoutDistributionHash, uint256[] _payoutNumerators, bool _invalid);resetReportTimestamp();designatedReporterShowed();designatedReporterWasCorrect();getDesignatedReporter();getReportTimestamp();getStake();getPayoutDistributionHash();liquidateLosing();fork();redeem(address _redeemer);isInvalid();isDisavowed();migrate();getPayoutNumerator(uint256 _outcome);getMarket();getSize();migrateREP()"
AugurProject/augur-core,source/contracts/factories/InitialReporterFactory.sol,"createInitialReporter(IController _controller, IMarket _market, address _designatedReporter)"
AugurProject/augur-core,source/contracts/reporting/Market.sol,"initialize(IUniverse _universe, uint256 _endTime, uint256 _feePerEthInAttoeth, ICash _cash, address _designatedReporterAddress, address _creator, uint256 _numOutcomes, uint256 _numTicks);assessFees();createShareToken(uint256 _outcome);approveSpenders();doInitialReport(uint256[] _payoutNumerators, bool _invalid);contribute(uint256[] _payoutNumerators, bool _invalid, uint256 _amount);finishedCrowdsourcingDisputeBond(IReportingParticipant _reportingParticipant);finalize();finalizeFork();redistributeLosingReputation();distributeNoShowBond(IInitialReporter _initialReporter, address _reporter);getMarketCreatorSettlementFeeDivisor();deriveMarketCreatorFeeAmount(uint256 _amount);distributeValidityBond();getOrCreateDisputeCrowdsourcer(bytes32 _payoutDistributionHash, uint256[] _payoutNumerators, bool _invalid);migrateThroughOneFork();disavowCrowdsourcers();withdrawInEmergency();getParticipantStake();getStakeInOutcome(bytes32 _payoutDistributionHash);getTypeName();getForkingMarket();getWinningPayoutDistributionHash();isFinalized();getDesignatedReporter();designatedReporterShowed();designatedReporterWasCorrect();getEndTime();getMarketCreatorMailbox();isInvalid();getInitialReporter();getInitialReporterAddress();getReportingParticipant(uint256 _index);getCrowdsourcer(bytes32 _payoutDistributionHash);getWinningReportingParticipant();getWinningPayoutNumerator(uint256 _outcome);getUniverse();getFeeWindow();getFinalizationTime();getReputationToken();getNumberOfOutcomes();getNumTicks();getDenominationToken();getShareToken(uint256 _outcome);getDesignatedReportingEndTime();getNumParticipants();getValidityBondAttoeth();derivePayoutDistributionHash(uint256[] _payoutNumerators, bool _invalid);isContainerForShareToken(IShareToken _shadyShareToken);isContainerForReportingParticipant(IReportingParticipant _shadyReportingParticipant);onTransferOwnership(address _owner, address _newOwner);assertBalances()"
AugurProject/augur-core,source/contracts/trading/CreateOrder.sol,"publicCreateOrder(Order.Types _type, uint256 _attoshares, uint256 _displayPrice, IMarket _market, uint256 _outcome, bytes32 _betterOrderId, bytes32 _worseOrderId, bytes32 _tradeGroupId);createOrder(address _creator, Order.Types _type, uint256 _attoshares, uint256 _displayPrice, IMarket _market, uint256 _outcome, bytes32 _betterOrderId, bytes32 _worseOrderId, bytes32 _tradeGroupId)"
AugurProject/augur-core,source/contracts/libraries/ReentrancyGuard.sol,""
AugurProject/augur-core,source/contracts/IAugur.sol,"createChildUniverse(bytes32 _parentPayoutDistributionHash, uint256[] _parentPayoutNumerators, bool _parentInvalid);isKnownUniverse(IUniverse _universe);trustedTransfer(ERC20 _token, address _from, address _to, uint256 _amount);logMarketCreated(bytes32 _topic, string _description, string _extraInfo, IUniverse _universe, address _market, address _marketCreator, bytes32[] _outcomes, int256 _minPrice, int256 _maxPrice, IMarket.MarketType _marketType);logMarketCreated(bytes32 _topic, string _description, string _extraInfo, IUniverse _universe, address _market, address _marketCreator, int256 _minPrice, int256 _maxPrice, IMarket.MarketType _marketType);logInitialReportSubmitted(IUniverse _universe, address _reporter, address _market, uint256 _amountStaked, bool _isDesignatedReporter, uint256[] _payoutNumerators, bool _invalid);disputeCrowdsourcerCreated(IUniverse _universe, address _market, address _disputeCrowdsourcer, uint256[] _payoutNumerators, uint256 _size, bool _invalid);logDisputeCrowdsourcerContribution(IUniverse _universe, address _reporter, address _market, address _disputeCrowdsourcer, uint256 _amountStaked);logDisputeCrowdsourcerCompleted(IUniverse _universe, address _market, address _disputeCrowdsourcer);logInitialReporterRedeemed(IUniverse _universe, address _reporter, address _market, uint256 _amountRedeemed, uint256 _repReceived, uint256 _reportingFeesReceived, uint256[] _payoutNumerators);logDisputeCrowdsourcerRedeemed(IUniverse _universe, address _reporter, address _market, uint256 _amountRedeemed, uint256 _repReceived, uint256 _reportingFeesReceived, uint256[] _payoutNumerators);logFeeWindowRedeemed(IUniverse _universe, address _reporter, uint256 _amountRedeemed, uint256 _reportingFeesReceived);logMarketFinalized(IUniverse _universe);logMarketMigrated(IMarket _market, IUniverse _originalUniverse);logReportingParticipantDisavowed(IUniverse _universe, IMarket _market);logMarketParticipantsDisavowed(IUniverse _universe);logOrderCanceled(IUniverse _universe, address _shareToken, address _sender, bytes32 _orderId, Order.Types _orderType, uint256 _tokenRefund, uint256 _sharesRefund);logOrderCreated(Order.Types _orderType, uint256 _amount, uint256 _price, address _creator, uint256 _moneyEscrowed, uint256 _sharesEscrowed, bytes32 _tradeGroupId, bytes32 _orderId, IUniverse _universe, address _shareToken);logOrderFilled(IUniverse _universe, address _shareToken, address _filler, bytes32 _orderId, uint256 _numCreatorShares, uint256 _numCreatorTokens, uint256 _numFillerShares, uint256 _numFillerTokens, uint256 _marketCreatorFees, uint256 _reporterFees, uint256 _amountFilled, bytes32 _tradeGroupId);logCompleteSetsPurchased(IUniverse _universe, IMarket _market, address _account, uint256 _numCompleteSets);logCompleteSetsSold(IUniverse _universe, IMarket _market, address _account, uint256 _numCompleteSets);logTradingProceedsClaimed(IUniverse _universe, address _shareToken, address _sender, address _market, uint256 _numShares, uint256 _numPayoutTokens, uint256 _finalTokenBalance);logUniverseForked();logFeeWindowTransferred(IUniverse _universe, address _from, address _to, uint256 _value);logReputationTokensTransferred(IUniverse _universe, address _from, address _to, uint256 _value);logDisputeCrowdsourcerTokensTransferred(IUniverse _universe, address _from, address _to, uint256 _value);logShareTokensTransferred(IUniverse _universe, address _from, address _to, uint256 _value);logReputationTokenBurned(IUniverse _universe, address _target, uint256 _amount);logReputationTokenMinted(IUniverse _universe, address _target, uint256 _amount);logShareTokenBurned(IUniverse _universe, address _target, uint256 _amount);logShareTokenMinted(IUniverse _universe, address _target, uint256 _amount);logFeeWindowBurned(IUniverse _universe, address _target, uint256 _amount);logFeeWindowMinted(IUniverse _universe, address _target, uint256 _amount);logDisputeCrowdsourcerTokensBurned(IUniverse _universe, address _target, uint256 _amount);logDisputeCrowdsourcerTokensMinted(IUniverse _universe, address _target, uint256 _amount);logFeeWindowCreated(IFeeWindow _feeWindow, uint256 _id);logFeeTokenTransferred(IUniverse _universe, address _from, address _to, uint256 _value);logFeeTokenBurned(IUniverse _universe, address _target, uint256 _amount);logFeeTokenMinted(IUniverse _universe, address _target, uint256 _amount);logTimestampSet(uint256 _newTimestamp);logInitialReporterTransferred(IUniverse _universe, IMarket _market, address _from, address _to);logMarketTransferred(IUniverse _universe, address _from, address _to);logMarketMailboxTransferred(IUniverse _universe, IMarket _market, address _from, address _to);logEscapeHatchChanged(bool _isOn)"
AugurProject/augur-core,source/contracts/trading/ICompleteSets.sol,"buyCompleteSets(address _sender, IMarket _market, uint256 _amount);sellCompleteSets(address _sender, IMarket _market, uint256 _amount)"
AugurProject/augur-core,source/contracts/legacy_reputation/ERC20Basic.sol,"balanceOf(address who);transfer(address to, uint256 value)"
AugurProject/augur-core,source/contracts/trading/IClaimTradingProceeds.sol,""
AugurProject/augur-core,source/contracts/trading/ICreateOrder.sol,"publicCreateOrder(Order.Types, uint256, uint256, IMarket, uint256, bytes32, bytes32, bytes32);createOrder(address, Order.Types, uint256, uint256, IMarket, uint256, bytes32, bytes32, bytes32)"
AugurProject/augur-core,source/contracts/legacy_reputation/ERC20.sol,"allowance(address owner, address spender);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value)"
AugurProject/augur-core,source/contracts/factories/MarketFactory.sol,"createMarket(IController _controller, IUniverse _universe, uint256 _endTime, uint256 _feePerEthInWei, ICash _denominationToken, address _designatedReporterAddress, address _sender, uint256 _numOutcomes, uint256 _numTicks)"
AugurProject/augur-core,tests/solidity_test_helpers/Constants.sol,""
AugurProject/augur-core,tests/solidity_test_helpers/MockAugur.sol,"reset();trustedTransfer(ERC20 _token, address _from, address _to, uint256 _amount);logMarketCreatedCalled();logMarketCreated(bytes32 _topic, string _description, string _extraInfo, IUniverse _universe, address _market, address _marketCreator, bytes32[] _outcomes, int256 _minPrice, int256 _maxPrice, IMarket.MarketType _marketType);logMarketCreated(bytes32 _topic, string _description, string _extraInfo, IUniverse _universe, address _market, address _marketCreator, int256 _minPrice, int256 _maxPrice, IMarket.MarketType _marketType);logDesignatedReportSubmitted(IUniverse _universe, address _reporter, address _market, uint256 _amountStaked, uint256[] _payoutNumerators);logReportSubmitted(IUniverse _universe, address _reporter, address _market, address _reportingParticipant, uint256 _amountStaked, uint256[] _payoutNumerators);logReportingParticipantDisavowed(IUniverse _universe, IMarket _market);logMarketParticipantsDisavowed(IUniverse _universe);logInitialReporterRedeemed(IUniverse _universe, address _reporter, address _market, uint256 _amountRedeemed, uint256 _repReceived, uint256 _reportingFeesReceived, uint256[] _payoutNumerators);logDisputeCrowdsourcerRedeemed(IUniverse _universe, address _reporter, address _market, uint256 _amountRedeemed, uint256 _repReceived, uint256 _reportingFeesReceived, uint256[] _payoutNumerators);logFeeWindowRedeemed(IUniverse _universe, address _reporter, uint256 _amountRedeemed, uint256 _reportingFeesReceived);logInitialReporterTransferred(IUniverse _universe, IMarket _market, address _from, address _to);logReportsDisputedCalled();logReportsDisputed(IUniverse _universe, address _disputer, address _market, uint256 _disputeBondAmount);logMarketFinalizedCalled();logMarketFinalized(IUniverse _universe);logMarketMigrated(IMarket _market, IUniverse _originalUniverse);logOrderCanceled(IUniverse _universe, address _shareToken, address _sender, bytes32 _orderId, Order.Types _orderType, uint256 _tokenRefund, uint256 _sharesRefund);disputeCrowdsourcerCreated(IUniverse _universe, IMarket _market, IDisputeCrowdsourcer _crowdsourcer, uint256[] _payoutNumerators, uint256 _size, bool _invalid);logOrderCreated(Order.Types _orderType, uint256 _amount, uint256 _price, address _creator, uint256 _moneyEscrowed, uint256 _sharesEscrowed, bytes32 _tradeGroupId, bytes32 _orderId, IUniverse _universe, address _shareToken);logOrderFilled(IUniverse _universe, address _shareToken, address _filler, bytes32 _orderId, uint256 _numCreatorShares, uint256 _numCreatorTokens, uint256 _numFillerShares, uint256 _numFillerTokens, uint256 _marketCreatorFees, uint256 _reporterFees, uint256 _amountFilled, bytes32 _tradeGroupId);logCompleteSetsPurchased(IUniverse _universe, IMarket _market, address _account, uint256 _numCompleteSets);logCompleteSetsSold(IUniverse _universe, IMarket _market, address _account, uint256 _numCompleteSets);logProceedsClaimed(IUniverse _universe, address _shareToken, address _sender, address _market, uint256 _numShares, uint256 _numPayoutTokens, uint256 _finalTokenBalance);logReputationTokenBurned(IUniverse _universe, address _target, uint256 _amount);logReputationTokenMinted(IUniverse _universe, address _target, uint256 _amount);logShareTokenBurned(IUniverse _universe, address _target, uint256 _amount);logShareTokenMinted(IUniverse _universe, address _target, uint256 _amount);logFeeWindowBurned(IUniverse _universe, address _target, uint256 _amount);logFeeWindowMinted(IUniverse _universe, address _target, uint256 _amount);logUniverseForkedCalled();logUniverseForked();logUniverseCreatedCalled();logUniverseCreated(IUniverse _childUniverse, uint256[] _payoutNumerators, bool _invalid);logFeeWindowsTransferred(IUniverse _universe, address _from, address _to, uint256 _value);logReputationTokensTransferredCalled();logReputationTokensTransferred(IUniverse _universe, address _from, address _to, uint256 _value);logShareTokensTransferred(IUniverse _universe, address _from, address _to, uint256 _value);logFeeWindowCreated(IFeeWindow _feeWindow, uint256 _id);logInitialReportSubmitted(IUniverse _universe, address _reporter, address _market, uint256 _amountStaked, bool _isDesignatedReporter, uint256[] _payoutNumerators, bool _invalid);logDisputeCrowdsourcerCreated(IUniverse _universe, address _market, address _disputeCrowdsourcer, uint256[] _payoutNumerators, uint256 _size, bool _invalid);logDisputeCrowdsourcerContribution(IUniverse _universe, address _reporter, address _market, address _disputeCrowdsourcer, uint256 _amountStaked);logDisputeCrowdsourcerCompleted(IUniverse _universe, address _market, address _disputeCrowdsourcer);logTimestampSet(uint256 _newTimestamp);logMarketTransferred(IUniverse _universe, address _from, address _to);logMarketMailboxTransferred(IUniverse _universe, IMarket _market, address _from, address _to)"
AugurProject/augur-core,source/contracts/IController.sol,assertIsWhitelisted(address _target);lookup(bytes32 _key);stopInEmergency();onlyInEmergency();getAugur();getTimestamp();emergencyStop()
AugurProject/augur-core,tests/solidity_test_helpers/ControllerUser.sol,getController();setController(IController _controller)
AugurProject/augur-core,source/contracts/factories/MailboxFactory.sol,"createMailbox(IController _controller, address _owner, IMarket _market)"
AugurProject/augur-core,source/contracts/libraries/Delegator.sol,"Delegator(IController _controller, bytes32 _controllerLookupName)"
AugurProject/augur-core,source/contracts/trading/ITrade.sol,"publicBuy(IMarket _market, uint256 _outcome, uint256 _fxpAmount, uint256 _price, bytes32 _betterOrderId, bytes32 _worseOrderId, uint256 _tradeGroupID);publicSell(IMarket _market, uint256 _outcome, uint256 _fxpAmount, uint256 _price, bytes32 _betterOrderId, bytes32 _worseOrderId, uint256 _tradeGroupID);publicTrade(Order.TradeDirections _direction, IMarket _market, uint256 _outcome, uint256 _fxpAmount, uint256 _price, bytes32 _betterOrderId, bytes32 _worseOrderId, uint256 _tradeGroupID);publicFillBestOrder(Order.TradeDirections _direction, IMarket _market, uint256 _outcome, uint256 _fxpAmount, uint256 _price, uint256 _tradeGroupID);trade(address _sender, Order.TradeDirections _direction, IMarket _market, uint256 _outcome, uint256 _fxpAmount, uint256 _price, bytes32 _betterOrderId, bytes32 _worseOrderId, uint256 _tradeGroupID);fillBestOrder(address _sender, Order.TradeDirections _direction, IMarket _market, uint256 _outcome, uint256 _fxpAmount, uint256 _price, uint256 _tradeGroupID)"
AugurProject/augur-core,source/contracts/legacy_reputation/LegacyRepToken.sol,"LegacyRepToken(address _legacyReputationToken, uint256 _amountUsedToFreeze, address _accountToSendFrozenRepTo);migrateBalances(address[] _holders);migrateBalance(address _holder);unpause()"
AugurProject/augur-core,source/contracts/reporting/IMarket.sol,"initialize(IUniverse _universe, uint256 _endTime, uint256 _feePerEthInAttoeth, ICash _cash, address _designatedReporterAddress, address _creator, uint256 _numOutcomes, uint256 _numTicks);derivePayoutDistributionHash(uint256[] _payoutNumerators, bool _invalid);getUniverse();getFeeWindow();getNumberOfOutcomes();getNumTicks();getDenominationToken();getShareToken(uint256 _outcome);getMarketCreatorSettlementFeeDivisor();getForkingMarket();getEndTime();getMarketCreatorMailbox();getWinningPayoutDistributionHash();getWinningPayoutNumerator(uint256 _outcome);getReputationToken();getFinalizationTime();getInitialReporterAddress();deriveMarketCreatorFeeAmount(uint256 _amount);isContainerForShareToken(IShareToken _shadyTarget);isContainerForReportingParticipant(IReportingParticipant _reportingParticipant);isInvalid();finalize();designatedReporterWasCorrect();designatedReporterShowed();isFinalized();finalizeFork();assertBalances()"
AugurProject/augur-core,tests/solidity_test_helpers/SafeMathInt256Tester.sol,"mul(int256 _a, int256 _b);div(int256 _a, int256 _b);sub(int256 _a, int256 _b);add(int256 _a, int256 _b);min(int256 _a, int256 _b);max(int256 _a, int256 _b);fxpMul(int256 _a, int256 _b, int256 _base);fxpDiv(int256 _a, int256 _b, int256 _base)"
AugurProject/augur-core,tests/solidity_test_helpers/MockLegacyReputationToken.sol,getFaucetAmountValue();faucet(uint256 _amount)
AugurProject/augur-core,source/contracts/ITime.sol,getTimestamp()
AugurProject/augur-core,tests/solidity_test_helpers/MockFeeToken.sol,"reset();onBurnCalled();onMintCalled();onTokenTransferCalled();getInitializedFeeWindow();initialize(IFeeWindow _feeWindow);getFeeWindow();getFeeWindowBurnTargetValue();getFeeWindowBurnAmountValue();feeWindowBurn(address _target, uint256 _amount);getMintForReportingParticipantTargetValue();getMintForReportingParticipantAmountValue();mintForReportingParticipant(address _target, uint256 _amount);getOnTokenTransferFromValue();getOnTokenTransferToValue();getOnTokenTransferValueValue();getOnMintTargetValue();getOnMintAmountValue();getOnBurnTargetValue();getOnBurnAmountValue();onBurn(address _target, uint256 _amount);onTokenTransfer(address _from, address _to, uint256 _value);onMint(address _target, uint256 _amount)"
AugurProject/augur-core,source/contracts/trading/TradingEscapeHatch.sol,"claimSharesInUpdate(IMarket _market);getFrozenShareValueInMarket(IMarket _market);getFrozenShareValueInMarketAndDeleteShares(IMarket _market);getFrozenShareValue(IMarket _market, uint256 _numOutcomes, uint256 _outcome);memoizeFrozenShareValues(IMarket _market, uint256 _numOutcomes)"
AugurProject/augur-core,source/contracts/factories/FeeTokenFactory.sol,"createFeeToken(IController _controller, IFeeWindow _feeWindow)"
AugurProject/augur-core,source/contracts/IControlled.sol,getController();setController(IController _controller)
AugurProject/augur-core,source/contracts/trading/CancelOrder.sol,"cancelOrder(bytes32 _orderId);refundOrder(address _sender, Order.Types _type, uint256 _sharesEscrowed, uint256 _moneyEscrowed, IMarket _market, uint256 _outcome)"
AugurProject/augur-core,source/contracts/libraries/ContractExists.sol,exists(address _address)
AugurProject/augur-core,tests/solidity_test_helpers/MockUniverseFactory.sol,"setCreateUniverseUniverseValue(IUniverse _universe);getCreateUniverseParentUniverseValue();getCreateUniverseParentPayoutDistributionHashValue();createUniverse(IController _controller, IUniverse _parentUniverse, bytes32 _parentPayoutDistributionHash)"
AugurProject/augur-core,source/contracts/factories/DisputeCrowdsourcerFactory.sol,"createDisputeCrowdsourcer(IController _controller, IMarket _market, uint256 _size, bytes32 _payoutDistributionHash, uint256[] _payoutNumerators, bool _invalid)"
AugurProject/augur-core,source/contracts/reporting/RepPriceOracle.sol,"setRepPriceInAttoEth(uint256 _repPriceInAttoEth);getRepPriceInAttoEth();onTransferOwnership(address, address)"
AugurProject/augur-core,source/contracts/factories/FeeWindowFactory.sol,"createFeeWindow(IController _controller, IUniverse _universe, uint256 _feeWindowId)"
AugurProject/augur-core,tests/solidity_test_helpers/MockFeeTokenFactory.sol,"getCreateFeeToken();setCreateFeeToken(IFeeToken _feeToken);getCreateFeeTokenFeeWindowValue();createFeeToken(IController _controller, IFeeWindow _feeWindow)"
AugurProject/augur-core,source/contracts/trading/OrdersFetcher.sol,"ascendOrderList(Order.Types _type, uint256 _price, bytes32 _lowestOrderId);descendOrderList(Order.Types _type, uint256 _price, bytes32 _highestOrderId);findBoundingOrders(Order.Types _type, uint256 _price, bytes32 _bestOrderId, bytes32 _worstOrderId, bytes32 _betterOrderId, bytes32 _worseOrderId)"
AugurProject/augur-core,source/contracts/trading/ShareToken.sol,"initialize(IMarket _market, uint256 _outcome);createShares(address _owner, uint256 _fxpValue);destroyShares(address _owner, uint256 _fxpValue);trustedOrderTransfer(address _source, address _destination, uint256 _attotokens);trustedFillOrderTransfer(address _source, address _destination, uint256 _attotokens);trustedCancelOrderTransfer(address _source, address _destination, uint256 _attotokens);getTypeName();getMarket();getOutcome();onTokenTransfer(address _from, address _to, uint256 _value);onMint(address _target, uint256 _amount);onBurn(address _target, uint256 _amount)"
AugurProject/augur-core,source/contracts/external/OrdersFinder.sol,OrdersFinder(IOrders _orders)
AugurProject/augur-core,source/contracts/factories/ShareTokenFactory.sol,"createShareToken(IController _controller, IMarket _market, uint256 _outcome)"
AugurProject/augur-core,source/contracts/trading/IOrdersFetcher.sol,"findBoundingOrders(Order.Types _type, uint256 _price, bytes32 _bestOrderId, bytes32 _worstOrderId, bytes32 _betterOrderId, bytes32 _worseOrderId)"
AugurProject/augur-core,tests/solidity_test_helpers/TestTrade.sol,getFillOrderMinGasNeeded();getCreateOrderMinGasNeeded()
AugurProject/augur-core,tests/solidity_test_helpers/MockMarketFactory.sol,"setMarket(IMarket _market);getCreateMarketController();getCreateMarketUniverseValue();getCreateMarketEndTimeValue();getCreateMarketNumOutcomesValue();getCreateMarketNumTicksValue();getCreateMarketfeePerEthInWeiValue();getCreateMarketDenominationTokenValue();getCreateMarketCreatorValue();getCreateMarketDesignatedReporterAddressValue();createMarket(IController _controller, IUniverse _universe, uint256 _endTime, uint256 _feePerEthInWei, ICash _denominationToken, address _designatedReporterAddress, address _sender, uint256 _numOutcomes, uint256 _numTicks)"
AugurProject/augur-core,source/contracts/libraries/CashAutoConverter.sol,ethToCash();cashToEth()
AugurProject/augur-core,source/contracts/reporting/FeeToken.sol,"initialize(IFeeWindow _feeWindow);getFeeWindow();feeWindowBurn(address _target, uint256 _amount);mintForReportingParticipant(address _target, uint256 _amount);onTokenTransfer(address _from, address _to, uint256 _value);onMint(address _target, uint256 _amount);onBurn(address _target, uint256 _amount)"
AugurProject/augur-core,source/contracts/trading/ITradingEscapeHatch.sol,claimSharesInUpdate(IMarket)
AugurProject/augur-core,tests/solidity_test_helpers/MockInitialReporterFactory.sol,"setInitialReporter(IInitialReporter _initialReporter);createInitialReporter(IController _controller, IMarket _market, address _designatedReporter)"
AugurProject/augur-core,source/contracts/reporting/IInitialReporter.sol,"initialize(IMarket _market, address _designatedReporter);report(address _reporter, bytes32 _payoutDistributionHash, uint256[] _payoutNumerators, bool _invalid);resetReportTimestamp();designatedReporterShowed();designatedReporterWasCorrect();getDesignatedReporter();getReportTimestamp();migrateREP()"
AugurProject/augur-core,source/contracts/legacy_reputation/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender)"
AugurProject/augur-core,source/contracts/reporting/BaseReportingParticipant.sol,migrate();liquidateLosing();fork();redeemForAllFeeWindows();isInvalid();getSize();getPayoutDistributionHash();getMarket();isDisavowed();getPayoutNumerator(uint256 _outcome)
AugurProject/augur-core,source/contracts/external/EscapeHatchController.sol,"setController(IController _controller);emergencyStop();onTransferOwnership(address, address)"
AugurProject/augur-core,source/contracts/trading/ICancelOrder.sol,""
AugurProject/augur-core,source/contracts/reporting/ReputationToken.sol,"initialize(IUniverse _universe);migrateOutByPayout(uint256[] _payoutNumerators, bool _invalid, uint256 _attotokens);migrateOut(IReputationToken _destination, uint256 _attotokens);migrateIn(address _reporter, uint256 _attotokens);mintForReportingParticipant(uint256 _amountMigrated);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);trustedUniverseTransfer(address _source, address _destination, uint256 _attotokens);trustedMarketTransfer(address _source, address _destination, uint256 _attotokens);trustedReportingParticipantTransfer(address _source, address _destination, uint256 _attotokens);trustedFeeWindowTransfer(address _source, address _destination, uint256 _attotokens);assertReputationTokenIsLegitSibling(IReputationToken _shadyReputationToken);getTypeName();getUniverse();getTotalMigrated();getLegacyRepToken();updateSiblingMigrationTotal(IReputationToken _token);updateParentTotalTheoreticalSupply();getTotalTheoreticalSupply();onTokenTransfer(address _from, address _to, uint256 _value);onMint(address _target, uint256 _amount);onBurn(address _target, uint256 _amount);migrateBalancesFromLegacyRep(address[] _holders);migrateBalanceFromLegacyRep(address _holder, ERC20 _legacyRepToken);migrateAllowancesFromLegacyRep(address[] _owners, address[] _spenders);getIsMigratingFromLegacy();getTargetSupply()"
AugurProject/augur-core,source/contracts/Time.sol,getTimestamp();getTypeName()
AugurProject/augur-core,tests/solidity_test_helpers/MockToken.sol,"callInternalTransfer(address _from, address _to, uint256 _value);mint(address _target, uint256 _amount);onTokenTransfer(address _from, address _to, uint256 _value)"
AugurProject/augur-core,source/contracts/trading/ClaimTradingProceeds.sol,"claimTradingProceeds(IMarket _market, address _shareHolder);logTradingProceedsClaimed(IMarket _market, address _shareToken, address _sender, uint256 _numShares, uint256 _numPayoutTokens);divideUpWinnings(IMarket _market, uint256 _outcome, uint256 _numberOfShares);calculateProceeds(IMarket _market, uint256 _outcome, uint256 _numberOfShares);calculateReportingFee(IMarket _market, uint256 _amount);calculateCreatorFee(IMarket _market, uint256 _amount)"
AugurProject/augur-core,source/contracts/trading/FillOrder.sol,"create(IController _controller, bytes32 _orderId, address _fillerAddress, uint256 _fillerSize);tradeMakerSharesForFillerShares(Data _data);tradeMakerSharesForFillerTokens(Data _data);tradeMakerTokensForFillerShares(Data _data);tradeMakerTokensForFillerTokens(Data _data);getLongShareBuyerDestination(Data _data);getShortShareBuyerDestination(Data _data);getLongShareSellerSource(Data _data);getShortShareSellerSource(Data _data);getLongShareSellerDestination(Data _data);getShortShareSellerDestination(Data _data);getMakerSharesDepleted(Data _data);getFillerSharesDepleted(Data _data);getMakerTokensDepleted(Data _data);getFillerTokensDepleted(Data _data);getTokensDepleted(Data _data, Direction _direction, uint256 _startingSharesToBuy, uint256 _endingSharesToBuy);getTokensToCover(Data _data, Direction _direction, uint256 _numShares);getContracts(IController _controller, bytes32 _orderId);getOrder(Contracts _contracts, bytes32 _orderId);getMaker(Contracts _contracts, FilledOrder _order, Order.Types _orderOrderType);getFiller(Contracts _contracts, Order.Types _orderOrderType, address _address, uint256 _size);getTokensToCover(Direction _direction, uint256 _sharePriceLong, uint256 _sharePriceShort, uint256 _numShares);getShortShareTokens(IMarket _market, uint256 _longOutcome);getSharePriceDetails(IMarket _market, IOrders _orders, bytes32 _orderId);getFillerSharesToSell(IShareToken _longShareToken, IShareToken[] memory _shortShareTokens, address _filler, Direction _fillerDirection, uint256 _fillerSize);publicFillOrder(bytes32 _orderId, uint256 _amountFillerWants, bytes32 _tradeGroupId);fillOrder(address _filler, bytes32 _orderId, uint256 _amountFillerWants, bytes32 _tradeGroupId);logOrderFilled(Trade.Data _tradeData, uint256 _marketCreatorFees, uint256 _reporterFees, uint256 _amountFilled, bytes32 _tradeGroupId)"
AugurProject/augur-core,tests/solidity_test_helpers/CashWrapperHelper.sol,toEthFunction()
AugurProject/augur-core,tests/solidity_test_helpers/MockShareToken.sol,"getInitializeMarketValue();getInitializeOutcomeValue();getCreateSharesOwner();getCreateSharesFxpValue();getDestroySharesOwnerValue();getDestroySharesFxpValueValue();setMarket(IMarket _market);setOutcome(uint256 _outcome);initialize(IMarket _market, uint256 _outcome);createShares(address _owner, uint256 _fxpValue);destroyShares(address _owner, uint256 _fxpValue);getTypeName();getMarket();getOutcome();trustedOrderTransfer(address _source, address _destination, uint256 _attotokens);trustedFillOrderTransfer(address _source, address _destination, uint256 _attotokens);trustedCancelOrderTransfer(address _source, address _destination, uint256 _attotokens)"
AugurProject/augur-core,source/contracts/trading/Cash.sol,"depositEther();depositEtherFor(address _to);withdrawEther(uint256 _amount);withdrawEtherTo(address _to, uint256 _amount);withdrawEtherInternal(address _from, address _to, uint256 _amount);withdrawEtherToIfPossible(address _to, uint256 _amount);getTypeName();onMint(address, uint256);onBurn(address, uint256);onTokenTransfer(address, address, uint256)"
AugurProject/augur-core,source/contracts/reporting/FeeWindow.sol,"initialize(IUniverse _universe, uint256 _feeWindowId);onMarketFinalized();buy(uint256 _attotokens);trustedUniverseBuy(address _buyer, uint256 _attotokens);buyInternal(address _buyer, uint256 _attotokens);redeemForReportingParticipant();redeem(address _sender);redeemInternal(address _sender, bool _isReportingParticipant);withdrawInEmergency();mintFeeTokens(uint256 _amount);getTotalFeeStake();getTypeName();getUniverse();getNumMarkets();getReputationToken();getStartTime();getEndTime();getFeeToken();getNumInvalidMarkets();getNumIncorrectDesignatedReportMarkets();getNumDesignatedReportNoShows();isActive();isOver();onTokenTransfer(address _from, address _to, uint256 _value);onMint(address _target, uint256 _amount);onBurn(address _target, uint256 _amount)"
AugurProject/augur-core,tests/solidity_test_helpers/MockFillOrder.sol,"publicFillOrder(bytes32 _orderId, uint256 _amountFillerWants, bytes32 _tradeGroupId);fillOrder(address _filler, bytes32 _orderId, uint256 _amountFillerWants, bytes32 _tradeGroupId)"
AugurProject/augur-core,tests/solidity_test_helpers/StandardTokenHelper.sol,"faucet(uint256 _amount);onTokenTransfer(address _from, address _to, uint256 _value)"
AugurProject/augur-core,source/contracts/trading/ICash.sol,"depositEther();depositEtherFor(address _to);withdrawEther(uint256 _amount);withdrawEtherTo(address _to, uint256 _amount);withdrawEtherToIfPossible(address _to, uint256 _amount)"
AugurProject/augur-core,source/contracts/reporting/IMailbox.sol,"initialize(address _owner, IMarket _market);depositEther()"
AugurProject/augur-core,tests/solidity_test_helpers/DelegatorHelper.sol,"getTypeName();setStringMember(string _value);populateStringMember();setName(bytes32 _name);setIntValue(int256 _value);setPrivateName(bytes32 _name);pushArrayValue(uint256 _value);addToMap(uint256 _key, uint256 _value);setOtherContract(DelegatorHelper _other);getStringMember();getStringConstant();getName();getIntValue();getPrivateName();getConstantName();getMapValue(uint256 _key);getArrayValue(uint256 _index);getArraySize();getOtherName();addToOtherMap(uint256 _key, uint256 _value);getOtherMapValue(uint256 _key);noInputReturn();manyInputsNoReturn(uint256 _one, uint256 _two, uint256 _three, uint256 _four);returnDynamic();returnFixed()"
AugurProject/augur-core,source/contracts/reporting/DisputeCrowdsourcer.sol,"initialize(IMarket _market, uint256 _size, bytes32 _payoutDistributionHash, uint256[] _payoutNumerators, bool _invalid);redeem(address _redeemer);contribute(address _participant, uint256 _amount);withdrawInEmergency();forkAndRedeem();getStake();onTokenTransfer(address _from, address _to, uint256 _value);onMint(address _target, uint256 _amount);onBurn(address _target, uint256 _amount);getFeeWindow();getReputationToken()"
AugurProject/augur-core,source/contracts/libraries/ITyped.sol,getTypeName()
AugurProject/augur-core,tests/solidity_test_helpers/MockDisputeCrowdsourcerFactory.sol,"setDisputeCrowdsourcer(MockDisputeCrowdsourcer _disputeCrowdsourcer);getDisputeCrowdsourcer();getCreatedPayoutDistributionHash();getCreatedPayoutNumerators();createDisputeCrowdsourcer(IController _controller, IMarket _market, uint256 _size, bytes32 _payoutDistributionHash, uint256[] _payoutNumerators, bool _invalid)"
AugurProject/augur-core,source/contracts/libraries/collections/Map.sol,"initialize(address _owner);add(bytes32 _key, bytes32 _value);add(bytes32 _key, address _value);remove(bytes32 _key);getValueOrZero(bytes32 _key);get(bytes32 _key);getAsAddressOrZero(bytes32 _key);getAsAddress(bytes32 _key);contains(bytes32 _key);getCount();onTransferOwnership(address, address)"
AugurProject/augur-core,tests/solidity_test_helpers/MockMarket.sol,"setUniverse(IUniverse _universe);setDesignatedReport(bool _designatedReportValue);setDerivePayoutDistributionHash(bytes32 _derivePayoutDistributionHashValue);setFeeWindow(IFeeWindow _feeWindow);setNumberOfOutcomes(uint256 _numberOfOutcomes);setNumTicks(uint256 _numTicks);setDenominationToken(ICash _denominationToken);setShareToken(IShareToken _shareToken);setDesignatedReporter(address _designatedReporter);setMarketCreatorSettlementFeeDivisor(uint256 _marketCreatorSettlementFeeDivisor);setFinalizationTime(uint256 _finalizationTime);setFinalPayoutDistributionHash(bytes32 _finalPayoutDistributionHash);setDesignatedReportPayoutHash(bytes32 _designatedReportPayoutHash);setTentativeWinningPayoutDistributionHash(bytes32 _tentativeWinningPayoutDistributionHash);setBestGuessSecondPlaceTentativeWinningPayoutDistributionHash(bytes32 _bestGuessSecondPlaceTentativeWinningPayoutDistributionHash);setForkingMarket(IMarket _forkingMarket);setEndTime(uint256 _endTime);setDesignatedReportDueTimestamp(uint256 _designatedReportDueTimestamp);setDesignatedReportReceivedTime(uint256 _designatedReportReceivedTime);setDesignatedReportDisputeDueTimestamp(uint256 _designatedReportDisputeDueTimestamp);setFirstReporterCompensationCheck(uint256 _firstReporterCompCheck);setMigrateDueToNoReports(bool _migrateDueToNoRep);setIsContainerForShareToken(bool _isContForShareToken);setIsInvalid(bool _isInValidValue);setOwner(address _owner);setTransferOwnership(bool _transferOwner);callForkOnUniverse(IUniverse _universe);getInitializeUniverseValue();getInitializeEndTime();getInitializeNumOutcomesValue();getInitializeNumTicksValue();getInitializeFeePerEthInAttoethValue();getInitializeCashValue();getInitializeCreatorValue();getInitializeDesignatedReporterAddressValue();getUpdateDerivePayoutDistributionHashValue();setMigrateDueToNoReportsNextState(IFeeWindow _feeWindow);callTrustedMarketTransfer(IReputationToken _reputationToken, address _source, address _destination, uint256 _attotokens);setMarketCreatorMailboxValue(IMailbox _setMarketCreatorMailbox);callOnMarketFinalized(IFeeWindow _feeWindow);getOwner();transferOwnership(address newOwner);getTypeName();initialize(IUniverse _universe, uint256 _endTime, uint256 _feePerEthInAttoeth, ICash _cash, address _designatedReporterAddress, address _creator, uint256 _numOutcomes, uint256 _numTicks);updateTentativeWinningPayoutDistributionHash(bytes32 _payoutDistributionHash);derivePayoutDistributionHash(uint256[] _payoutNumerators, bool _invalid);designatedReport();getUniverse();getFeeWindow();getNumberOfOutcomes();getNumTicks();getDenominationToken();getShareToken(uint256 _outcome);getDesignatedReporter();getMarketCreatorSettlementFeeDivisor();getFinalizationTime();getFinalPayoutDistributionHash();getDesignatedReportPayoutHash();getTentativeWinningPayoutDistributionHash();getBestGuessSecondPlaceTentativeWinningPayoutDistributionHash();getForkingMarket();getEndTime();getDesignatedReportDueTimestamp();getDesignatedReportReceivedTime();getDesignatedReportDisputeDueTimestamp();firstReporterCompensationCheck(address _reporter);migrateDueToNoReports();isContainerForShareToken(IShareToken _shadyTarget);isInvalid();getMarketCreatorMailbox();disavowTokens();getWinningPayoutDistributionHash();getWinningPayoutNumerator(uint256 _outcome);getReputationToken();isContainerForReportingParticipant(IReportingParticipant _reportingParticipant);finishedCrowdsourcingDisputeBond();setDesignatedReporterWasCorrect(bool _designatedReporterWasCorrect);designatedReporterWasCorrect();setDesignatedReporterShowed(bool _designatedReporterShowed);designatedReporterShowed();isFinalized();finalizeFork();assertBalances();finalize();onTransferOwnership(address, address);getInitialReporterAddress();deriveMarketCreatorFeeAmount(uint256 _amount)"
AugurProject/augur-core,source/contracts/trading/IOrders.sol,"saveOrder(Order.Types _type, IMarket _market, uint256 _fxpAmount, uint256 _price, address _sender, uint256 _outcome, uint256 _moneyEscrowed, uint256 _sharesEscrowed, bytes32 _betterOrderId, bytes32 _worseOrderId, bytes32 _tradeGroupId);removeOrder(bytes32 _orderId);getMarket(bytes32 _orderId);getOrderType(bytes32 _orderId);getOutcome(bytes32 _orderId);getAmount(bytes32 _orderId);getPrice(bytes32 _orderId);getOrderCreator(bytes32 _orderId);getOrderSharesEscrowed(bytes32 _orderId);getOrderMoneyEscrowed(bytes32 _orderId);getBetterOrderId(bytes32 _orderId);getWorseOrderId(bytes32 _orderId);getBestOrderId(Order.Types _type, IMarket _market, uint256 _outcome);getWorstOrderId(Order.Types _type, IMarket _market, uint256 _outcome);getLastOutcomePrice(IMarket _market, uint256 _outcome);getOrderId(Order.Types _type, IMarket _market, uint256 _fxpAmount, uint256 _price, address _sender, uint256 _blockNumber, uint256 _outcome, uint256 _moneyEscrowed, uint256 _sharesEscrowed);getTotalEscrowed(IMarket _market);isBetterPrice(Order.Types _type, uint256 _price, bytes32 _orderId);isWorsePrice(Order.Types _type, uint256 _price, bytes32 _orderId);assertIsNotBetterPrice(Order.Types _type, uint256 _price, bytes32 _betterOrderId);assertIsNotWorsePrice(Order.Types _type, uint256 _price, bytes32 _worseOrderId);recordFillOrder(bytes32 _orderId, uint256 _sharesFilled, uint256 _tokensFilled);setPrice(IMarket _market, uint256 _outcome, uint256 _price);incrementTotalEscrowed(IMarket _market, uint256 _amount);decrementTotalEscrowed(IMarket _market, uint256 _amount)"
AugurProject/augur-core,tests/solidity_test_helpers/MockReputationToken.sol,"reset();setMigrateOut(bool _setMigrateOutValue);setMigrateIn(bool _setMigrateInValue);setTrustedTransfer(bool _setTrustedTransferValue);setUniverse(IUniverse _setUniverseValue);setTopMigrationDestination(IReputationToken _setTopMigrationDestinationValue);setMigrateFromLegacyReputationToken(bool _setMigrateFromLegacyReputationTokenValue);setInitializeUniverseValue();getTrustedTransferSourceValue();getTrustedTransferDestinationValue();getTrustedTransferAttotokensValue();getMigrateOutDestinationValue();getMigrateOutReporterValue();getMigrateOutAttoTokens();getMigrateInReporterValue();getMigrateInAttoTokensValue();getMigrateInBonusIfInForkWindowValue();callMigrateIn(IReputationToken _reputationToken, address _reporter, uint256 _attotokens);getTypeName();initialize(IUniverse _universe);migrateOut(IReputationToken _destination, uint256 _attotokens);migrateIn(address _reporter, uint256 _attotokens);trustedMarketTransfer(address _source, address _destination, uint256 _attotokens);trustedFeeWindowTransfer(address _source, address _destination, uint256 _attotokens);trustedUniverseTransfer(address _source, address _destination, uint256 _attotokens);getUniverse();migrateFromLegacyReputationToken();mintForDisputeCrowdsourcer(uint256 _amountMigrated);trustedReportingParticipantTransfer(address _source, address _destination, uint256 _attotokens);mintForReportingParticipant(uint256 _amountMigrated);getTotalMigrated();getTotalTheoreticalSupply()"
AugurProject/augur-core,source/contracts/libraries/token/ERC20Basic.sol,"balanceOf(address _who);transfer(address _to, uint256 _value);totalSupply()"
AugurProject/augur-core,tests/solidity_test_helpers/MockReputationTokenFactory.sol,"getCreateReputationTokenUniverse();setCreateReputationTokenValue(IReputationToken _reputationTokenValue);createReputationToken(IController _controller, IUniverse _universe)"
AugurProject/augur-core,tests/solidity_test_helpers/MockCash.sol,"reset();getDepositEtherForAddressValue();getWithdrawEtherAmountValue();getwithdrawEtherToAddressValue();getwithdrawEthertoAmountValue();resetWithdrawEtherToValues();getTypeName();depositEther();depositEtherFor(address _to);withdrawEther(uint256 _amount);withdrawEtherTo(address _to, uint256 _amount);withdrawEtherToIfPossible(address _to, uint256 _amount)"
AugurProject/augur-core,source/contracts/libraries/token/BasicToken.sol,"transfer(address _to, uint256 _value);internalTransfer(address _from, address _to, uint256 _value);balanceOf(address _owner);totalSupply();onTokenTransfer(address _from, address _to, uint256 _value)"
AugurProject/augur-core,source/contracts/legacy_reputation/Pausable.sol,pause();unpause()
AugurProject/augur-core,source/contracts/reporting/Mailbox.sol,"initialize(address _owner, IMarket _market);depositEther();withdrawEther();withdrawTokens(ERC20Basic _token);onTransferOwnership(address _owner, address _newOwner)"
AugurProject/augur-core,tests/solidity_test_helpers/SafeMathUint256Tester.sol,"mul(uint256 _a, uint256 _b);div(uint256 _a, uint256 _b);sub(uint256 _a, uint256 _b);add(uint256 _a, uint256 _b);min(uint256 _a, uint256 _b);max(uint256 _a, uint256 _b);fxpMul(uint256 _a, uint256 _b, uint256 _base);fxpDiv(uint256 _a, uint256 _b, uint256 _base);isMultipleOf(uint256 _a, uint256 _b)"
AugurProject/augur-core,source/contracts/trading/Order.sol,"create(IController _controller, address _creator, uint256 _outcome, Order.Types _type, uint256 _attoshares, uint256 _price, IMarket _market, bytes32 _betterOrderId, bytes32 _worseOrderId);getOrderId(Order.Data _orderData);getOrderTradingTypeFromMakerDirection(Order.TradeDirections _creatorDirection);getOrderTradingTypeFromFillerDirection(Order.TradeDirections _fillerDirection);escrowFunds(Order.Data _orderData);saveOrder(Order.Data _orderData, bytes32 _tradeGroupId);escrowFundsForBid(Order.Data _orderData);escrowFundsForAsk(Order.Data _orderData)"
AugurProject/augur-core,source/contracts/libraries/token/StandardToken.sol,"transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);increaseApproval(address _spender, uint _addedValue);decreaseApproval(address _spender, uint _subtractedValue);approveInternal(address _owner, address _spender, uint256 _value)"
AugurProject/augur-core,source/contracts/legacy_reputation/BasicToken.sol,"transfer(address _to, uint256 _value);balanceOf(address _owner)"
AugurProject/augur-core,source/contracts/reporting/IUniverse.sol,"initialize(IUniverse _parentUniverse, bytes32 _parentPayoutDistributionHash);fork();getParentUniverse();createChildUniverse(uint256[] _parentPayoutNumerators, bool _invalid);getChildUniverse(bytes32 _parentPayoutDistributionHash);getReputationToken();getForkingMarket();getForkEndTime();getForkReputationGoal();getParentPayoutDistributionHash();getDisputeRoundDurationInSeconds();getOrCreateFeeWindowByTimestamp(uint256 _timestamp);getOrCreateCurrentFeeWindow();getOrCreateNextFeeWindow();getOpenInterestInAttoEth();getRepMarketCapInAttoeth();getTargetRepMarketCapInAttoeth();getOrCacheValidityBond();getOrCacheDesignatedReportStake();getOrCacheDesignatedReportNoShowBond();getOrCacheReportingFeeDivisor();getDisputeThresholdForFork();getInitialReportMinValue();calculateFloatingValue(uint256 _badMarkets, uint256 _totalMarkets, uint256 _targetDivisor, uint256 _previousValue, uint256 _defaultValue, uint256 _floor);getOrCacheMarketCreationCost();getCurrentFeeWindow();getOrCreateFeeWindowBefore(IFeeWindow _feeWindow);isParentOf(IUniverse _shadyChild);updateTentativeWinningChildUniverse(bytes32 _parentPayoutDistributionHash);isContainerForFeeWindow(IFeeWindow _shadyTarget);isContainerForMarket(IMarket _shadyTarget);isContainerForReportingParticipant(IReportingParticipant _reportingParticipant);isContainerForShareToken(IShareToken _shadyTarget);isContainerForFeeToken(IFeeToken _shadyTarget);addMarketTo();removeMarketFrom();decrementOpenInterest(uint256 _amount);decrementOpenInterestFromMarket(uint256 _amount);incrementOpenInterest(uint256 _amount);incrementOpenInterestFromMarket(uint256 _amount);getWinningChildUniverse();isForking()"
AugurProject/augur-core,source/contracts/legacy_reputation/Initializable.sol,endInitialization()
AugurProject/augur-core,tests/solidity_test_helpers/TestController.sol,"registerContract(bytes32 _key, address _address, bytes20 _commitHash, bytes32 _bytecodeHash)"
AugurProject/augur-core,source/contracts/TimeControlled.sol,"TimeControlled();getTimestamp();incrementTimestamp(uint256 _amount);setTimestamp(uint256 _timestamp);getTypeName();onTransferOwnership(address, address)"
AugurProject/augur-core,source/contracts/factories/UniverseFactory.sol,"createUniverse(IController _controller, IUniverse _parentUniverse, bytes32 _parentPayoutDistributionHash)"
AugurProject/augur-core,tests/solidity_test_helpers/UpgradedUniverse.sol,setNewData(uint256 _newData);getTypeName();getNewForkReputationGoal()
AugurProject/augur-core,tests/solidity_test_helpers/ReentrancyGuardHelper.sol,testerNonReentrant();testerCanNotReentrant();testerReentrant();testerCanReentrant()
AugurProject/augur-core,source/contracts/libraries/IOwnable.sol,getOwner();transferOwnership(address newOwner)
AugurProject/augur-core,tests/solidity_test_helpers/MockShareTokenFactory.sol,"resetCreateShareToken();getCreateShareTokenCounter();getCreateShareToken(uint256 _index);pushCreateShareToken(IShareToken _shareToken);getCreateShareTokenMarketValue();getCreateShareTokenOutcomeValue();createShareToken(IController _controller, IMarket _market, uint256 _outcome)"
AugurProject/augur-core,tests/solidity_test_helpers/MockDisputeCrowdsourcer.sol,"initialize(IMarket market, uint256 _size, bytes32 _payoutDistributionHash, uint256[] _payoutNumerators, bool _invalid);contributeWasCalled();getContributeParticipant();getContributeAmount();contribute(address _participant, uint256 _amount);disavow();getStake();setPayoutNumeratorsValue(uint256[] _payoutNumerators);setPayoutDistributionHash(bytes32 _hash);getPayoutDistributionHash();liquidateLosing();fork();redeem(address _redeemer);isInvalid();isDisavowed();migrate();getPayoutNumerator(uint256 _outcome);getMarket();setSize(uint256 _size);getSize()"
AugurProject/augur-core,source/contracts/libraries/token/VariableSupplyToken.sol,"mint(address _target, uint256 _amount);burn(address _target, uint256 _amount);onMint(address, uint256);onBurn(address, uint256)"
AugurProject/augur-core,source/contracts/libraries/Ownable.sol,"Ownable();getOwner();transferOwnership(address _newOwner);onTransferOwnership(address, address)"
AugurProject/augur-core,tests/solidity_test_helpers/TestControlled.sol,deposit()
AugurProject/augur-core,source/contracts/factories/MapFactory.sol,"createMap(IController _controller, address _owner)"
AugurProject/augur-core,tests/solidity_test_helpers/MaliciousMarketHaver.sol,getMarket();setMarket(IMarket _market)
AugurProject/augur-core,source/contracts/reporting/Universe.sol,"initialize(IUniverse _parentUniverse, bytes32 _parentPayoutDistributionHash);fork();updateForkValues();getTypeName();getParentUniverse();getParentPayoutDistributionHash();getReputationToken();getForkingMarket();getForkEndTime();getForkReputationGoal();getDisputeThresholdForFork();getInitialReportMinValue();getFeeWindow(uint256 _feeWindowId);isForking();getChildUniverse(bytes32 _parentPayoutDistributionHash);getFeeWindowId(uint256 _timestamp);getDisputeRoundDurationInSeconds();getOrCreateFeeWindowByTimestamp(uint256 _timestamp);getFeeWindowByTimestamp(uint256 _timestamp);getOrCreatePreviousPreviousFeeWindow();getOrCreatePreviousFeeWindow();getPreviousFeeWindow();getOrCreateCurrentFeeWindow();getCurrentFeeWindow();getOrCreateNextFeeWindow();getNextFeeWindow();getOrCreateFeeWindowBefore(IFeeWindow _feeWindow);createChildUniverse(uint256[] _parentPayoutNumerators, bool _parentInvalid);updateTentativeWinningChildUniverse(bytes32 _parentPayoutDistributionHash);getWinningChildUniverse();isContainerForFeeWindow(IFeeWindow _shadyFeeWindow);isContainerForFeeToken(IFeeToken _shadyFeeToken);isContainerForMarket(IMarket _shadyMarket);addMarketTo();removeMarketFrom();isContainerForShareToken(IShareToken _shadyShareToken);isContainerForReportingParticipant(IReportingParticipant _shadyReportingParticipant);isParentOf(IUniverse _shadyChild);decrementOpenInterest(uint256 _amount);decrementOpenInterestFromMarket(uint256 _amount);incrementOpenInterest(uint256 _amount);incrementOpenInterestFromMarket(uint256 _amount);getOpenInterestInAttoEth();getRepMarketCapInAttoeth();getTargetRepMarketCapInAttoeth();getOrCacheValidityBond();getOrCacheDesignatedReportStake();getOrCacheDesignatedReportNoShowBond();calculateFloatingValue(uint256 _badMarkets, uint256 _totalMarkets, uint256 _targetDivisor, uint256 _previousValue, uint256 _defaultValue, uint256 _floor);getOrCacheReportingFeeDivisor();getOrCacheMarketCreationCost();getInitialReportStakeSize();createYesNoMarket(uint256 _endTime, uint256 _feePerEthInWei, ICash _denominationToken, address _designatedReporterAddress, bytes32 _topic, string _description, string _extraInfo);createCategoricalMarket(uint256 _endTime, uint256 _feePerEthInWei, ICash _denominationToken, address _designatedReporterAddress, bytes32[] _outcomes, bytes32 _topic, string _description, string _extraInfo);createScalarMarket(uint256 _endTime, uint256 _feePerEthInWei, ICash _denominationToken, address _designatedReporterAddress, int256 _minPrice, int256 _maxPrice, uint256 _numTicks, bytes32 _topic, string _description, string _extraInfo);createMarketInternal(uint256 _endTime, uint256 _feePerEthInWei, ICash _denominationToken, address _designatedReporterAddress, address _sender, uint256 _numOutcomes, uint256 _numTicks);redeemStake(IReportingParticipant[] _reportingParticipants, IFeeWindow[] _feeWindows);buyParticipationTokens(uint256 _attotokens)"
AugurProject/augur-core,source/contracts/reporting/IReportingParticipant.sol,getStake();getPayoutDistributionHash();liquidateLosing();redeem(address _redeemer);isInvalid();isDisavowed();migrate();getPayoutNumerator(uint256 _outcome);getMarket();getSize()
AugurProject/augur-core,tests/solidity_test_helpers/MockFeeWindowFactory.sol,"getCreateFeeWindowUniverseValue();getCreateFeeWindowValue(IFeeWindow _feeWindowValue);getCreatefeeWindowIdValue();setCreateFeeWindowValue(IFeeWindow _feeWindowValue);createFeeWindow(IController _controller, IUniverse _universe, uint256 _feeWindowId)"
AugurProject/augur-core,source/contracts/Controlled.sol,Controlled();getController();setController(IController _controller)
AugurProject/augur-core,tests/solidity_test_helpers/Redeploy/NewReputationToken.sol,"initialize(IUniverse _universe);migrateOutByPayout(uint256[] _payoutNumerators, bool _invalid, uint256 _attotokens);migrateOut(IReputationToken _destination, uint256 _attotokens);migrateIn(address _reporter, uint256 _attotokens);mintForReportingParticipant(uint256 _amountMigrated);transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value);trustedUniverseTransfer(address _source, address _destination, uint256 _attotokens);trustedMarketTransfer(address _source, address _destination, uint256 _attotokens);trustedReportingParticipantTransfer(address _source, address _destination, uint256 _attotokens);trustedFeeWindowTransfer(address _source, address _destination, uint256 _attotokens);assertReputationTokenIsLegitSibling(IReputationToken _shadyReputationToken);getTypeName();getUniverse();getTotalMigrated();getLegacyRepToken();updateSiblingMigrationTotal(IReputationToken _token);updateParentTotalTheoreticalSupply();getTotalTheoreticalSupply();onTokenTransfer(address _from, address _to, uint256 _value);onMint(address _target, uint256 _amount);onBurn(address _target, uint256 _amount);migrateFromLegacyReputationToken()"
AugurProject/augur-core,tests/solidity_test_helpers/MockFeeWindow.sol,"reset();getMigrateMarketInFromSiblingCalled();getMigrateMarketInFromNiblingCalled();getRemoveMarketCalled();getUpdateMarketPhaseCalled();getNoteDesignatedReport();setUniverse(IUniverse _universe);setReputationToken(IReputationToken _setReputationTokenValue);setStartTime(uint256 _setStartTimeValue);setEndTime(uint256 _setEndTimeValue);setNumMarkets(uint256 _setNumMarketsValue);setNumInvalidMarkets(uint256 _setNumInvalidMarketsValue);setNumIncorrectDesignatedReportMarkets(uint256 _setNumIncorrectDesignatedReportMarketsValue);setNextFeeWindow(IFeeWindow _setNextFeeWindowValue);setPreviousFeeWindow(IFeeWindow _setPreviousFeeWindowValue);setNumDesignatedReportNoShows(uint256 _setNumDesignatedReportNoShowsValue);setAllMarketsFinalized(bool _setAllMarketsFinalizedValue);setCollectFeeWindowReportingFees(uint256 _setCollectFeeWindowReportingFeesValue);setMigrateFeesDueToFork(bool _setMigrateFeesDueToForkValue);setIsContainerForMarket(bool _setIsContainerForMarketValue);setIsForkingMarketFinalized(bool _setIsForkingMarketFinalizedValue);setIsDisputeActive(bool _setIsDisputeActiveValue);setCreateMarket(IMarket _market);setIsOver(bool _isOver);setIsReportingActive(bool _isReportingActive);setIsActive(bool _isActive);setIsContainerForFeeWindow(bool _isContainerForFeeWindow);getIncreaseTotalStakeCalled();setIncreaseTotalWinningStake(bool _setIncreaseTotalWinningStakeValue);getInitializeUniverseValue();getinitializeFeeWindowIdValue();getCollectReporterAddress();callTrustedFeeWindowTransfer(IReputationToken _reputationToken, address _source, address _destination, uint256 _attotokens);getTypeName();initialize(IUniverse _universe, uint256 _feeWindowId);createMarket(uint256 _endTime, uint256 _feePerEthInWei, ICash _denominationToken, address _designatedReporterAddress, address _sender, uint256 _numOutcomes, uint256 _numTicks);migrateMarketInFromSibling();migrateMarketInFromNibling();removeMarket();noteDesignatedReport();updateMarketPhase();getUniverse();getReputationToken();getStartTime();getEndTime();getNumMarkets();getNumInvalidMarkets();getNumIncorrectDesignatedReportMarkets();getOrCreateNextFeeWindow();getOrCreatePreviousFeeWindow();getNumDesignatedReportNoShows();allMarketsFinalized();migrateFeesDueToFork();isContainerForMarket(IMarket _shadyTarget);isDisputeActive();isReportingActive();isActive();isOver();isContainerForFeeWindow(IFeeWindow _shadyTarget);increaseTotalStake(uint256 _amount);increaseTotalWinningStake(uint256 _amount);noteInitialReportingGasPrice();onMarketFinalized();buy(uint256 _attotokens);redeem(address _sender);onTokenTransfer(address _from, address _to, uint256 _value);onMint(address _target, uint256 _amount);onBurn(address _target, uint256 _amount);getFeeToken();redeemForReportingParticipant();mintFeeTokens(uint256 _amount);getController();setController(IController _controller);trustedUniverseBuy(address _buyer, uint256 _attotokens)"
AugurProject/augur-core,tests/solidity_test_helpers/ContractExistsHelper.sol,doesContractExist(address _address)
AugurProject/augur-core,tests/solidity_test_helpers/MockVariableSupplyToken.sol,"setBalanceOf(uint256 _balance);getTransferToValue();getTransferValueValue();resetBalanceOfValues();resetTransferToValues();getTransferValueFor(address _to);setBalanceOfValueFor(address _to, uint256 _value);setTotalSupply(uint256 _totalSupply);getTransferFromFromValue();getTransferFromToValue();getTransferFromValueValue();mint(address _target, uint256 _amount);burn(address _target, uint256 _amount);balanceOf(address _owner);transfer(address _to, uint256 _value);totalSupply();transferFrom(address _from, address _to, uint256 _value)"
AugurProject/augur-core,source/contracts/trading/IShareToken.sol,"initialize(IMarket _market, uint256 _outcome);createShares(address _owner, uint256 _amount);destroyShares(address, uint256 balance);getMarket();getOutcome();trustedOrderTransfer(address _source, address _destination, uint256 _attotokens);trustedFillOrderTransfer(address _source, address _destination, uint256 _attotokens);trustedCancelOrderTransfer(address _source, address _destination, uint256 _attotokens)"
AugurProject/augur-core,source/contracts/libraries/MarketValidator.sol,""
AugurProject/augur-core,source/contracts/trading/Orders.sol,"getMarket(bytes32 _orderId);getOrderType(bytes32 _orderId);getOutcome(bytes32 _orderId);getAmount(bytes32 _orderId);getPrice(bytes32 _orderId);getOrderCreator(bytes32 _orderId);getOrderSharesEscrowed(bytes32 _orderId);getOrderMoneyEscrowed(bytes32 _orderId);getTotalEscrowed(IMarket _market);getLastOutcomePrice(IMarket _market, uint256 _outcome);getBetterOrderId(bytes32 _orderId);getWorseOrderId(bytes32 _orderId);getBestOrderId(Order.Types _type, IMarket _market, uint256 _outcome);getWorstOrderId(Order.Types _type, IMarket _market, uint256 _outcome);getOrderId(Order.Types _type, IMarket _market, uint256 _amount, uint256 _price, address _sender, uint256 _blockNumber, uint256 _outcome, uint256 _moneyEscrowed, uint256 _sharesEscrowed);isBetterPrice(Order.Types _type, uint256 _price, bytes32 _orderId);isWorsePrice(Order.Types _type, uint256 _price, bytes32 _orderId);assertIsNotBetterPrice(Order.Types _type, uint256 _price, bytes32 _betterOrderId);assertIsNotWorsePrice(Order.Types _type, uint256 _price, bytes32 _worseOrderId);insertOrderIntoList(Order.Data storage _order, bytes32 _betterOrderId, bytes32 _worseOrderId);saveOrder(Order.Types _type, IMarket _market, uint256 _amount, uint256 _price, address _sender, uint256 _outcome, uint256 _moneyEscrowed, uint256 _sharesEscrowed, bytes32 _betterOrderId, bytes32 _worseOrderId, bytes32 _tradeGroupId);removeOrder(bytes32 _orderId);recordFillOrder(bytes32 _orderId, uint256 _sharesFilled, uint256 _tokensFilled);setPrice(IMarket _market, uint256 _outcome, uint256 _price);incrementTotalEscrowed(IMarket _market, uint256 _amount);decrementTotalEscrowed(IMarket _market, uint256 _amount);removeOrderFromList(bytes32 _orderId);updateBestBidOrder(bytes32 _orderId, IMarket _market, uint256 _price, uint256 _outcome);updateWorstBidOrder(bytes32 _orderId, IMarket _market, uint256 _price, uint256 _outcome);updateBestAskOrder(bytes32 _orderId, IMarket _market, uint256 _price, uint256 _outcome);updateWorstAskOrder(bytes32 _orderId, IMarket _market, uint256 _price, uint256 _outcome);getBestOrderWorstOrderHash(IMarket _market, uint256 _outcome, Order.Types _type)"
AugurProject/augur-core,source/contracts/reporting/IFeeToken.sol,"initialize(IFeeWindow _feeWindow);getFeeWindow();feeWindowBurn(address _target, uint256 _amount);mintForReportingParticipant(address _target, uint256 _amount)"
AugurProject/augur-core,source/contracts/reporting/IDisputeCrowdsourcer.sol,"initialize(IMarket market, uint256 _size, bytes32 _payoutDistributionHash, uint256[] _payoutNumerators, bool _invalid);contribute(address _participant, uint256 _amount)"
AugurProject/augur-core,source/contracts/libraries/DelegationTarget.sol,""
AugurProject/augur-core,source/contracts/TestNetReputationToken.sol,TestNetReputationToken();faucet(uint256 _amount)
AugurProject/augur-core,tests/solidity_test_helpers/MapHelper.sol,"init(IController _controller);add(bytes32 _key, bytes32 _value);remove(bytes32 _key);getValueOrZero(bytes32 _key);get(bytes32 _key);contains(bytes32 _key);getCount();addAsAddress(bytes32 _key, address _value);getAsAddressOrZero(bytes32 _key);getAsAddress(bytes32 _key)"
AugurProject/augur-core,tests/solidity_test_helpers/MaliciousMarket.sol,MaliciousMarket(IMarket _market);getShareToken(uint256 _outcome);getNumberOfOutcomes();getDenominationToken();getUniverse()
AugurProject/augur-core,source/contracts/reporting/IRepPriceOracle.sol,setRepPriceInAttoEth(uint256 _repPriceInAttoEth);getRepPriceInAttoEth()
AugurProject/augur-core,source/contracts/legacy_reputation/Ownable.sol,Ownable();transferOwnership(address newOwner)
AugurProject/augur-core,source/contracts/factories/ReputationTokenFactory.sol,"createReputationToken(IController _controller, IUniverse _universe)"
AugurProject/augur-core,source/contracts/LegacyReputationToken.sol,"LegacyReputationToken();faucet(uint256 _amount);onMint(address, uint256);onBurn(address, uint256);onTokenTransfer(address, address, uint256);pause();unpause();onTransferOwnership(address, address)"
AugurProject/augur-core,tests/solidity_test_helpers/MockStandardToken.sol,"reset();getTransferFromFromValue();getTransferFromToValue();getTransferFromValueValue();getApproveSpenderValue();getApproveValueValue();getAllowanceOwnerValue();getAllowanceSpenderValue();setAllowanceValue(uint256 _amount);getApproveValueFor(address _to);transferFrom(address _from, address _to, uint256 _value);approve(address _spender, uint256 _value);allowance(address _owner, address _spender);onTokenTransfer(address _from, address _to, uint256 _value)"
AugurProject/augur-core,tests/solidity_test_helpers/MockUniverse.sol,"reset();getForkCalled();setParentUniverse(IUniverse _setParentUniverseValue);setOrCreateChildUniverse(IUniverse _setOrCreateChildUniverseValue);setChildUniverse(IUniverse _setChildUniverseValue);setReputationToken(IReputationToken _setReputationTokenValue);setForkingMarket(IMarket _setForkingMarketValue);setForkEndTime(uint256 _setForkEndTimeValue);setParentPayoutDistributionHash(bytes32 _setParentPayoutDistributionHashValue);setDisputeRoundDurationInSeconds(uint256 _setDisputeRoundDurationInSecondsValue);setFeeWindowByTimestamp(IFeeWindow _setFeeWindowByTimestampValue);setFeeWindowByMarketEndTime(IFeeWindow _setFeeWindowByMarketEndTimeValue);setCurrentFeeWindow(IFeeWindow _setCurrentFeeWindowValue);setNextFeeWindow(IFeeWindow _setNextFeeWindowValue);setFeeWindowForForkEndTime(IFeeWindow _setFeeWindowForForkEndTimeValue);setOpenInterestInAttoEth(uint256 _setOpenInterestInAttoEthValue);setRepMarketCapInAttoeth(uint256 _setRepMarketCapInAttoethValue);setTargetRepMarketCapInAttoeth(uint256 _setTargetRepMarketCapInAttoethValue);setOrCacheValidityBond(uint256 _setValidityBondValue);setOrCacheDesignatedReportStake(uint256 _setDesignatedReportStakeValue);setOrCacheDesignatedReportNoShowBond(uint256 _setDesignatedReportNoShowBondValue);setReportingFeeDivisor(uint256 _setReportingFeeDivisorValue);setRepAvailableForExtraBondPayouts(uint256 _setRepAvailableForExtraBondPayoutsValue);setIncreaseRepAvailableForExtraBondPayouts(bool _setIncreaseRepAvailableForExtraBondPayoutsValue);setDecreaseRepAvailableForExtraBondPayouts(bool _setDecreaseRepAvailableForExtraBondPayoutsValue);setCalculateFloatingValue(uint256 _setCalculateFloatingValueValue);setOrCacheTargetReporterGasCosts(uint256 _setTargetReporterGasCostsValue);setMarketCreationCost(uint256 _setMarketCreationCostValue);setIsParentOf(bool _setIsParentOfValue);setIsContainerForMarket(bool _setIsContainerForMarketValue);setIsContainerForShareToken(bool _setIsContainerForShareTokenValue);setIsContainerForFeeWindow(bool _setIsContainerForFeeWindowValue);setDecrementOpenInterest(bool _setDecrementOpenInterestValue);setIncrementOpenInterest(bool _setIncrementOpenInterestValue);setForkReputationGoal(uint256 _forkReputationGoalValue);getInitializParentUniverseValue();getInitializeParentPayoutDistributionHashValue();setIsContainerForReportingParticipant(bool _value);getTypeName();initialize(IUniverse _parentUniverse, bytes32 _parentPayoutDistributionHash);fork();getParentUniverse();getOrCreateChildUniverse(bytes32 _parentPayoutDistributionHash);getChildUniverse(bytes32 _parentPayoutDistributionHash);getReputationToken();getForkingMarket();getForkEndTime();getParentPayoutDistributionHash();getDisputeRoundDurationInSeconds();getOrCreateFeeWindowByTimestamp(uint256 _timestamp);getOrCreateFeeWindowByMarketEndTime(uint256 _endTime);getOrCreateCurrentFeeWindow();getOrCreateNextFeeWindowWasCalled();getOrCreateNextFeeWindow();getOrCreateFeeWindowForForkEndTime();getOpenInterestInAttoEth();getRepMarketCapInAttoeth();getTargetRepMarketCapInAttoeth();getOrCacheValidityBondWallCalled();getOrCacheValidityBond();getOrCacheDesignatedReportStake();getOrCacheDesignatedReportNoShowBond();getOrCacheReportingFeeDivisor();getRepAvailableForExtraBondPayouts();increaseRepAvailableForExtraBondPayouts(uint256 _amount);decreaseRepAvailableForExtraBondPayouts(uint256 _amount);calculateFloatingValue(uint256 _badMarkets, uint256 _totalMarkets, uint256 _targetDivisor, uint256 _previousValue, uint256 _defaultValue, uint256 _floor);getOrCacheTargetReporterGasCostsWasCalled();getOrCacheTargetReporterGasCosts();getOrCacheMarketCreationCost();isParentOf(IUniverse _shadyChild);isContainerForMarket(IMarket _shadyTarget);isContainerForShareToken(IShareToken _shadyTarget);isContainerForFeeWindow(IFeeWindow _shadyTarget);decrementOpenInterest(uint256 _amount);incrementOpenInterest(uint256 _amount);incrementOpenInterestFromMarket(uint256 _amount);decrementOpenInterestFromMarket(uint256 _amount);getForkReputationGoal();createYesNoMarket(uint256 _endTime, uint256 _feePerEthInWei, ICash _denominationToken, address _designatedReporterAddress, bytes32 _topic, string _description, string _extraInfo);createCategoricalMarket(uint256 _endTime, uint256 _feePerEthInWei, ICash _denominationToken, address _designatedReporterAddress, bytes32[] _outcomes, bytes32 _topic, string _description, string _extraInfo);createScalarMarket(uint256 _endTime, uint256 _feePerEthInWei, ICash _denominationToken, address _designatedReporterAddress, int256 _minPrice, int256 _maxPrice, uint256 _numTicks, bytes32 _topic, string _description, string _extraInfo);createMarketInternal(uint256 _endTime, uint256 _feePerEthInWei, ICash _denominationToken, address _designatedReporterAddress, address _sender, uint256 _numOutcomes, uint256 _numTicks);createChildUniverse(uint256[] _parentPayoutNumerators, bool _parentInvalid);isContainerForReportingParticipant(IReportingParticipant _reportingParticipant);addMarketToWasCalled();addMarketTo();removeMarketFromWasCalled();removeMarketFrom();setWinningChildUniverse(IUniverse _winning);getWinningChildUniverse();getCurrentFeeWindow();getOrCreateFeeWindowBefore(IFeeWindow _feeWindow);isContainerForFeeToken(IFeeToken _shadyTarget);setIsForking(bool _isForking);isForking();updateTentativeWinningChildUniverse(bytes32 _parentPayoutDistributionHash);setDisputeThresholdForFork(uint256 _value);getDisputeThresholdForFork();getInitialReportMinValue()"
AugurProject/augur-core,source/contracts/trading/Trade.sol,"publicBuy(IMarket _market, uint256 _outcome, uint256 _fxpAmount, uint256 _price, bytes32 _betterOrderId, bytes32 _worseOrderId, bytes32 _tradeGroupId);publicSell(IMarket _market, uint256 _outcome, uint256 _fxpAmount, uint256 _price, bytes32 _betterOrderId, bytes32 _worseOrderId, bytes32 _tradeGroupId);publicTrade(Order.TradeDirections _direction, IMarket _market, uint256 _outcome, uint256 _fxpAmount, uint256 _price, bytes32 _betterOrderId, bytes32 _worseOrderId, bytes32 _tradeGroupId);publicFillBestOrder(Order.TradeDirections _direction, IMarket _market, uint256 _outcome, uint256 _fxpAmount, uint256 _price, bytes32 _tradeGroupId);trade(address _sender, Order.TradeDirections _direction, IMarket _market, uint256 _outcome, uint256 _fxpAmount, uint256 _price, bytes32 _betterOrderId, bytes32 _worseOrderId, bytes32 _tradeGroupId);fillBestOrder(address _sender, Order.TradeDirections _direction, IMarket _market, uint256 _outcome, uint256 _fxpAmount, uint256 _price, bytes32 _tradeGroupId);publicBuyWithLimit(IMarket _market, uint256 _outcome, uint256 _fxpAmount, uint256 _price, bytes32 _betterOrderId, bytes32 _worseOrderId, bytes32 _tradeGroupId, uint256 _loopLimit);publicSellWithLimit(IMarket _market, uint256 _outcome, uint256 _fxpAmount, uint256 _price, bytes32 _betterOrderId, bytes32 _worseOrderId, bytes32 _tradeGroupId, uint256 _loopLimit);publicTradeWithLimit(Order.TradeDirections _direction, IMarket _market, uint256 _outcome, uint256 _fxpAmount, uint256 _price, bytes32 _betterOrderId, bytes32 _worseOrderId, bytes32 _tradeGroupId, uint256 _loopLimit);publicFillBestOrderWithLimit(Order.TradeDirections _direction, IMarket _market, uint256 _outcome, uint256 _fxpAmount, uint256 _price, bytes32 _tradeGroupId, uint256 _loopLimit);tradeWithLimit(address _sender, Order.TradeDirections _direction, IMarket _market, uint256 _outcome, uint256 _fxpAmount, uint256 _price, bytes32 _betterOrderId, bytes32 _worseOrderId, bytes32 _tradeGroupId, uint256 _loopLimit);fillBestOrderWithLimit(address _sender, Order.TradeDirections _direction, IMarket _market, uint256 _outcome, uint256 _fxpAmount, uint256 _price, bytes32 _tradeGroupId, uint256 _loopLimit);getFillOrderMinGasNeeded();getCreateOrderMinGasNeeded()"
AugurProject/augur-core,source/contracts/legacy_reputation/PausableToken.sol,"transfer(address _to, uint _value);transferFrom(address _from, address _to, uint _value)"
AugurProject/augur-core,source/contracts/Augur.sol,"createGenesisUniverse();createChildUniverse(bytes32 _parentPayoutDistributionHash, uint256[] _parentPayoutNumerators, bool _parentInvalid);createUniverse(IUniverse _parentUniverse, bytes32 _parentPayoutDistributionHash, uint256[] _parentPayoutNumerators, bool _parentInvalid);isKnownUniverse(IUniverse _universe);isKnownCrowdsourcer(IDisputeCrowdsourcer _crowdsourcer);disputeCrowdsourcerCreated(IUniverse _universe, address _market, address _disputeCrowdsourcer, uint256[] _payoutNumerators, uint256 _size, bool _invalid);trustedTransfer(ERC20 _token, address _from, address _to, uint256 _amount);logMarketCreated(bytes32 _topic, string _description, string _extraInfo, IUniverse _universe, address _market, address _marketCreator, bytes32[] _outcomes, int256 _minPrice, int256 _maxPrice, IMarket.MarketType _marketType);logMarketCreated(bytes32 _topic, string _description, string _extraInfo, IUniverse _universe, address _market, address _marketCreator, int256 _minPrice, int256 _maxPrice, IMarket.MarketType _marketType);logInitialReportSubmitted(IUniverse _universe, address _reporter, address _market, uint256 _amountStaked, bool _isDesignatedReporter, uint256[] _payoutNumerators, bool _invalid);logDisputeCrowdsourcerContribution(IUniverse _universe, address _reporter, address _market, address _disputeCrowdsourcer, uint256 _amountStaked);logDisputeCrowdsourcerCompleted(IUniverse _universe, address _market, address _disputeCrowdsourcer);logInitialReporterRedeemed(IUniverse _universe, address _reporter, address _market, uint256 _amountRedeemed, uint256 _repReceived, uint256 _reportingFeesReceived, uint256[] _payoutNumerators);logDisputeCrowdsourcerRedeemed(IUniverse _universe, address _reporter, address _market, uint256 _amountRedeemed, uint256 _repReceived, uint256 _reportingFeesReceived, uint256[] _payoutNumerators);logReportingParticipantDisavowed(IUniverse _universe, IMarket _market);logMarketParticipantsDisavowed(IUniverse _universe);logFeeWindowRedeemed(IUniverse _universe, address _reporter, uint256 _amountRedeemed, uint256 _reportingFeesReceived);logMarketFinalized(IUniverse _universe);logMarketMigrated(IMarket _market, IUniverse _originalUniverse);logOrderCanceled(IUniverse _universe, address _shareToken, address _sender, bytes32 _orderId, Order.Types _orderType, uint256 _tokenRefund, uint256 _sharesRefund);logOrderCreated(Order.Types _orderType, uint256 _amount, uint256 _price, address _creator, uint256 _moneyEscrowed, uint256 _sharesEscrowed, bytes32 _tradeGroupId, bytes32 _orderId, IUniverse _universe, address _shareToken);logOrderFilled(IUniverse _universe, address _shareToken, address _filler, bytes32 _orderId, uint256 _numCreatorShares, uint256 _numCreatorTokens, uint256 _numFillerShares, uint256 _numFillerTokens, uint256 _marketCreatorFees, uint256 _reporterFees, uint256 _amountFilled, bytes32 _tradeGroupId);logCompleteSetsPurchased(IUniverse _universe, IMarket _market, address _account, uint256 _numCompleteSets);logCompleteSetsSold(IUniverse _universe, IMarket _market, address _account, uint256 _numCompleteSets);logTradingProceedsClaimed(IUniverse _universe, address _shareToken, address _sender, address _market, uint256 _numShares, uint256 _numPayoutTokens, uint256 _finalTokenBalance);logUniverseForked();logFeeWindowTransferred(IUniverse _universe, address _from, address _to, uint256 _value);logReputationTokensTransferred(IUniverse _universe, address _from, address _to, uint256 _value);logDisputeCrowdsourcerTokensTransferred(IUniverse _universe, address _from, address _to, uint256 _value);logShareTokensTransferred(IUniverse _universe, address _from, address _to, uint256 _value);logReputationTokenBurned(IUniverse _universe, address _target, uint256 _amount);logReputationTokenMinted(IUniverse _universe, address _target, uint256 _amount);logShareTokenBurned(IUniverse _universe, address _target, uint256 _amount);logShareTokenMinted(IUniverse _universe, address _target, uint256 _amount);logFeeWindowBurned(IUniverse _universe, address _target, uint256 _amount);logFeeWindowMinted(IUniverse _universe, address _target, uint256 _amount);logDisputeCrowdsourcerTokensBurned(IUniverse _universe, address _target, uint256 _amount);logDisputeCrowdsourcerTokensMinted(IUniverse _universe, address _target, uint256 _amount);logFeeWindowCreated(IFeeWindow _feeWindow, uint256 _id);logFeeTokenTransferred(IUniverse _universe, address _from, address _to, uint256 _value);logFeeTokenBurned(IUniverse _universe, address _target, uint256 _amount);logFeeTokenMinted(IUniverse _universe, address _target, uint256 _amount);logTimestampSet(uint256 _newTimestamp);logInitialReporterTransferred(IUniverse _universe, IMarket _market, address _from, address _to);logMarketTransferred(IUniverse _universe, address _from, address _to);logMarketMailboxTransferred(IUniverse _universe, IMarket _market, address _from, address _to);logEscapeHatchChanged(bool _isOn)"
OpenZeppelin/zep-solidity,contracts/utils/introspection/ERC165Checker.sol,"supportsInterface(address account, bytes4 interfaceId);getSupportedInterfaces(address account, bytes4[] memory interfaceIds);supportsAllInterfaces(address account, bytes4[] memory interfaceIds)"
OpenZeppelin/zep-solidity,contracts/proxy/Proxy.sol,_delegate(address implementation);_implementation();_fallback();_beforeFallback()
OpenZeppelin/zep-solidity,contracts/mocks/SafeCastMock.sol,""
OpenZeppelin/zep-solidity,contracts/mocks/EIP712External.sol,"domainSeparator();verify(bytes memory signature, address signer, address mailTo, string memory mailContents);getChainId()"
OpenZeppelin/zep-solidity,contracts/governance/TimelockController.sol,"isOperation(bytes32 id);isOperationPending(bytes32 id);isOperationReady(bytes32 id);isOperationDone(bytes32 id);getTimestamp(bytes32 id);getMinDelay();hashOperation(address target, uint256 value, bytes calldata data, bytes32 predecessor, bytes32 salt);hashOperationBatch(address[] calldata targets, uint256[] calldata values, bytes[] calldata datas, bytes32 predecessor, bytes32 salt);schedule(address target, uint256 value, bytes calldata data, bytes32 predecessor, bytes32 salt, uint256 delay);scheduleBatch(address[] calldata targets, uint256[] calldata values, bytes[] calldata datas, bytes32 predecessor, bytes32 salt, uint256 delay);_schedule(bytes32 id, uint256 delay);cancel(bytes32 id);execute(address target, uint256 value, bytes calldata data, bytes32 predecessor, bytes32 salt);executeBatch(address[] calldata targets, uint256[] calldata values, bytes[] calldata datas, bytes32 predecessor, bytes32 salt);_beforeCall(bytes32 predecessor);_afterCall(bytes32 id);_call(bytes32 id, uint256 index, address target, uint256 value, bytes calldata data);updateDelay(uint256 newDelay)"
OpenZeppelin/zep-solidity,contracts/mocks/AddressImpl.sol,"isContract(address account);sendValue(address payable receiver, uint256 amount);functionCall(address target, bytes calldata data);functionCallWithValue(address target, bytes calldata data, uint256 value);functionStaticCall(address target, bytes calldata data);functionDelegateCall(address target, bytes calldata data)"
OpenZeppelin/zep-solidity,contracts/proxy/beacon/IBeacon.sol,implementation()
OpenZeppelin/zep-solidity,contracts/mocks/StringsMock.sol,""
OpenZeppelin/zep-solidity,contracts/mocks/BadBeacon.sol,implementation()
OpenZeppelin/zep-solidity,contracts/mocks/ContextMock.sol,"msgSender();msgData(uint256 integerValue, string memory stringValue);callSender(ContextMock context);callData(ContextMock context, uint256 integerValue, string memory stringValue)"
OpenZeppelin/zep-solidity,contracts/proxy/beacon/UpgradeableBeacon.sol,implementation();upgradeTo(address newImplementation);_setImplementation(address newImplementation)
OpenZeppelin/zep-solidity,contracts/metatx/ERC2771Context.sol,isTrustedForwarder(address forwarder);_msgSender();_msgData()
OpenZeppelin/zep-solidity,contracts/utils/escrow/Escrow.sol,depositsOf(address payee);deposit(address payee);withdraw(address payable payee)
OpenZeppelin/zep-solidity,contracts/token/ERC721/extensions/ERC721Burnable.sol,burn(uint256 tokenId)
OpenZeppelin/zep-solidity,contracts/token/ERC1155/extensions/ERC1155Pausable.sol,""
OpenZeppelin/zep-solidity,contracts/security/PullPayment.sol,"withdrawPayments(address payable payee);payments(address dest);_asyncTransfer(address dest, uint256 amount)"
OpenZeppelin/zep-solidity,contracts/token/ERC721/extensions/IERC721Enumerable.sol,"totalSupply();tokenOfOwnerByIndex(address owner, uint256 index);tokenByIndex(uint256 index)"
OpenZeppelin/zep-solidity,contracts/utils/structs/EnumerableSet.sol,"_add(Set storage set, bytes32 value);_remove(Set storage set, bytes32 value);_contains(Set storage set, bytes32 value);_length(Set storage set);_at(Set storage set, uint256 index);add(Bytes32Set storage set, bytes32 value);remove(Bytes32Set storage set, bytes32 value);contains(Bytes32Set storage set, bytes32 value);length(Bytes32Set storage set);at(Bytes32Set storage set, uint256 index);add(AddressSet storage set, address value);remove(AddressSet storage set, address value);contains(AddressSet storage set, address value);length(AddressSet storage set);at(AddressSet storage set, uint256 index);add(UintSet storage set, uint256 value);remove(UintSet storage set, uint256 value);contains(UintSet storage set, uint256 value);length(UintSet storage set);at(UintSet storage set, uint256 index)"
OpenZeppelin/zep-solidity,contracts/mocks/ERC1820ImplementerMock.sol,"registerInterfaceForAddress(bytes32 interfaceHash, address account)"
OpenZeppelin/zep-solidity,contracts/mocks/SignedSafeMathMock.sol,"mul(int256 a, int256 b);div(int256 a, int256 b);sub(int256 a, int256 b);add(int256 a, int256 b)"
OpenZeppelin/zep-solidity,contracts/token/ERC1155/presets/ERC1155PresetMinterPauser.sol,"mint(address to, uint256 id, uint256 amount, bytes memory data);mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data);pause();unpause();supportsInterface(bytes4 interfaceId)"
OpenZeppelin/zep-solidity,contracts/mocks/ERC721PausableMock.sol,"pause();unpause();exists(uint256 tokenId);mint(address to, uint256 tokenId);safeMint(address to, uint256 tokenId);safeMint(address to, uint256 tokenId, bytes memory _data);burn(uint256 tokenId)"
OpenZeppelin/zep-solidity,contracts/token/ERC20/utils/TokenTimelock.sol,token();beneficiary();releaseTime();release()
OpenZeppelin/zep-solidity,contracts/mocks/PullPaymentMock.sol,"callTransfer(address dest, uint256 amount)"
OpenZeppelin/zep-solidity,contracts/mocks/CountersImpl.sol,current();increment();decrement()
OpenZeppelin/zep-solidity,contracts/mocks/ERC721URIStorageMock.sol,"_baseURI();setBaseURI(string calldata newBaseTokenURI);baseURI();setTokenURI(uint256 tokenId, string memory _tokenURI);exists(uint256 tokenId);mint(address to, uint256 tokenId);safeMint(address to, uint256 tokenId);safeMint(address to, uint256 tokenId, bytes memory _data);burn(uint256 tokenId)"
OpenZeppelin/zep-solidity,contracts/mocks/ERC165/ERC165MissingData.sol,supportsInterface(bytes4 interfaceId)
OpenZeppelin/zep-solidity,contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol,"mint(address to, uint256 amount);pause();unpause();_beforeTokenTransfer(address from, address to, uint256 amount)"
OpenZeppelin/zep-solidity,contracts/utils/introspection/ERC1820Implementer.sol,"canImplementInterfaceForAddress(bytes32 interfaceHash, address account);_registerInterfaceForAddress(bytes32 interfaceHash, address account)"
OpenZeppelin/zep-solidity,contracts/mocks/ClashingImplementation.sol,admin();delegatedFunction()
OpenZeppelin/zep-solidity,contracts/mocks/ERC20CappedMock.sol,"mint(address to, uint256 tokenId)"
OpenZeppelin/zep-solidity,contracts/mocks/ERC777SenderRecipientMock.sol,"senderFor(address account);registerSender(address sender);recipientFor(address account);registerRecipient(address recipient);setShouldRevertSend(bool shouldRevert);setShouldRevertReceive(bool shouldRevert);send(IERC777 token, address to, uint256 amount, bytes memory data);burn(IERC777 token, uint256 amount, bytes memory data)"
OpenZeppelin/zep-solidity,contracts/utils/introspection/IERC165.sol,supportsInterface(bytes4 interfaceId)
OpenZeppelin/zep-solidity,contracts/utils/escrow/ConditionalEscrow.sol,withdrawalAllowed(address payee);withdraw(address payable payee)
OpenZeppelin/zep-solidity,contracts/mocks/ArraysImpl.sol,findUpperBound(uint256 element)
OpenZeppelin/zep-solidity,contracts/mocks/ClonesMock.sol,"clone(address implementation, bytes calldata initdata);cloneDeterministic(address implementation, bytes32 salt, bytes calldata initdata);predictDeterministicAddress(address implementation, bytes32 salt);_initAndEmit(address instance, bytes memory initdata)"
OpenZeppelin/zep-solidity,contracts/utils/Address.sol,"isContract(address account);sendValue(address payable recipient, uint256 amount);functionCall(address target, bytes memory data);functionCall(address target, bytes memory data, string memory errorMessage);functionCallWithValue(address target, bytes memory data, uint256 value);functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage);functionStaticCall(address target, bytes memory data);functionStaticCall(address target, bytes memory data, string memory errorMessage);functionDelegateCall(address target, bytes memory data);functionDelegateCall(address target, bytes memory data, string memory errorMessage);_verifyCallResult(bool success, bytes memory returndata, string memory errorMessage)"
OpenZeppelin/zep-solidity,contracts/token/ERC1155/utils/ERC1155Holder.sol,""
OpenZeppelin/zep-solidity,contracts/security/Pausable.sol,paused();_pause();_unpause()
OpenZeppelin/zep-solidity,contracts/token/ERC721/extensions/ERC721Enumerable.sol,"supportsInterface(bytes4 interfaceId);tokenOfOwnerByIndex(address owner, uint256 index);totalSupply();tokenByIndex(uint256 index);_beforeTokenTransfer(address from, address to, uint256 tokenId);_addTokenToOwnerEnumeration(address to, uint256 tokenId);_addTokenToAllTokensEnumeration(uint256 tokenId);_removeTokenFromOwnerEnumeration(address from, uint256 tokenId);_removeTokenFromAllTokensEnumeration(uint256 tokenId)"
OpenZeppelin/zep-solidity,contracts/token/ERC721/extensions/ERC721URIStorage.sol,"tokenURI(uint256 tokenId);_setTokenURI(uint256 tokenId, string memory _tokenURI);_burn(uint256 tokenId)"
OpenZeppelin/zep-solidity,contracts/mocks/ERC721EnumerableMock.sol,"_baseURI();setBaseURI(string calldata newBaseTokenURI);baseURI();exists(uint256 tokenId);mint(address to, uint256 tokenId);safeMint(address to, uint256 tokenId);safeMint(address to, uint256 tokenId, bytes memory _data);burn(uint256 tokenId)"
OpenZeppelin/zep-solidity,contracts/token/ERC20/presets/ERC20PresetFixedSupply.sol,""
OpenZeppelin/zep-solidity,contracts/mocks/ERC165/ERC165NotSupported.sol,""
OpenZeppelin/zep-solidity,contracts/access/AccessControl.sol,"hasRole(bytes32 role, address account);getRoleAdmin(bytes32 role);grantRole(bytes32 role, address account);revokeRole(bytes32 role, address account);renounceRole(bytes32 role, address account);foo();supportsInterface(bytes4 interfaceId);hasRole(bytes32 role, address account);getRoleAdmin(bytes32 role);grantRole(bytes32 role, address account);revokeRole(bytes32 role, address account);renounceRole(bytes32 role, address account);_setupRole(bytes32 role, address account);_setRoleAdmin(bytes32 role, bytes32 adminRole);_grantRole(bytes32 role, address account);_revokeRole(bytes32 role, address account)"
OpenZeppelin/zep-solidity,contracts/token/ERC721/IERC721Receiver.sol,""
OpenZeppelin/zep-solidity,contracts/mocks/ERC721Mock.sol,"_baseURI();setBaseURI(string calldata newBaseTokenURI);baseURI();exists(uint256 tokenId);mint(address to, uint256 tokenId);safeMint(address to, uint256 tokenId);safeMint(address to, uint256 tokenId, bytes memory _data);burn(uint256 tokenId)"
OpenZeppelin/zep-solidity,contracts/token/ERC721/ERC721.sol,"supportsInterface(bytes4 interfaceId);balanceOf(address owner);ownerOf(uint256 tokenId);name();symbol();tokenURI(uint256 tokenId);_baseURI();approve(address to, uint256 tokenId);getApproved(uint256 tokenId);setApprovalForAll(address operator, bool approved);isApprovedForAll(address owner, address operator);transferFrom(address from, address to, uint256 tokenId);safeTransferFrom(address from, address to, uint256 tokenId);safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data);_safeTransfer(address from, address to, uint256 tokenId, bytes memory _data);_exists(uint256 tokenId);_isApprovedOrOwner(address spender, uint256 tokenId);_safeMint(address to, uint256 tokenId);_safeMint(address to, uint256 tokenId, bytes memory _data);_mint(address to, uint256 tokenId);_burn(uint256 tokenId);_transfer(address from, address to, uint256 tokenId);_approve(address to, uint256 tokenId);_beforeTokenTransfer(address from, address to, uint256 tokenId)"
OpenZeppelin/zep-solidity,contracts/mocks/ERC1155BurnableMock.sol,"mint(address to, uint256 id, uint256 value, bytes memory data)"
OpenZeppelin/zep-solidity,contracts/mocks/ERC165/ERC165InterfacesSupported.sol,supportsInterface(bytes4 interfaceId);_registerInterface(bytes4 interfaceId)
OpenZeppelin/zep-solidity,contracts/mocks/PausableMock.sol,normalProcess();drasticMeasure();pause();unpause()
OpenZeppelin/zep-solidity,contracts/mocks/MathMock.sol,"max(uint256 a, uint256 b);min(uint256 a, uint256 b);average(uint256 a, uint256 b)"
OpenZeppelin/zep-solidity,contracts/mocks/ERC165CheckerMock.sol,"supportsInterface(address account, bytes4 interfaceId);supportsAllInterfaces(address account, bytes4[] memory interfaceIds);getSupportedInterfaces(address account, bytes4[] memory interfaceIds)"
OpenZeppelin/zep-solidity,contracts/mocks/OwnableMock.sol,""
OpenZeppelin/zep-solidity,contracts/mocks/InitializableMock.sol,initialize();initializeNested();initializeWithX(uint256 _x);nonInitializable(uint256 _x);fail()
OpenZeppelin/zep-solidity,contracts/mocks/AccessControlMock.sol,"setRoleAdmin(bytes32 roleId, bytes32 adminRoleId)"
OpenZeppelin/zep-solidity,contracts/token/ERC777/IERC777Sender.sol,""
OpenZeppelin/zep-solidity,contracts/mocks/ERC165Mock.sol,""
OpenZeppelin/zep-solidity,contracts/proxy/Clones.sol,"clone(address implementation);cloneDeterministic(address implementation, bytes32 salt);predictDeterministicAddress(address implementation, bytes32 salt, address deployer);predictDeterministicAddress(address implementation, bytes32 salt)"
OpenZeppelin/zep-solidity,contracts/mocks/ERC165StorageMock.sol,registerInterface(bytes4 interfaceId)
OpenZeppelin/zep-solidity,contracts/utils/Create2.sol,"deploy(uint256 amount, bytes32 salt, bytes memory bytecode);computeAddress(bytes32 salt, bytes32 bytecodeHash);computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer)"
OpenZeppelin/zep-solidity,contracts/token/ERC777/IERC777.sol,"name();symbol();granularity();totalSupply();balanceOf(address owner);send(address recipient, uint256 amount, bytes calldata data);burn(uint256 amount, bytes calldata data);isOperatorFor(address operator, address tokenHolder);authorizeOperator(address operator);revokeOperator(address operator);defaultOperators()"
OpenZeppelin/zep-solidity,contracts/utils/structs/EnumerableMap.sol,"_set(Map storage map, bytes32 key, bytes32 value);_remove(Map storage map, bytes32 key);_contains(Map storage map, bytes32 key);_length(Map storage map);_at(Map storage map, uint256 index);_tryGet(Map storage map, bytes32 key);_get(Map storage map, bytes32 key);_get(Map storage map, bytes32 key, string memory errorMessage);set(UintToAddressMap storage map, uint256 key, address value);remove(UintToAddressMap storage map, uint256 key);contains(UintToAddressMap storage map, uint256 key);length(UintToAddressMap storage map);at(UintToAddressMap storage map, uint256 index);tryGet(UintToAddressMap storage map, uint256 key);get(UintToAddressMap storage map, uint256 key);get(UintToAddressMap storage map, uint256 key, string memory errorMessage)"
OpenZeppelin/zep-solidity,contracts/token/ERC721/presets/ERC721PresetMinterPauserAutoId.sol,"_baseURI();mint(address to);pause();unpause();_beforeTokenTransfer(address from, address to, uint256 tokenId);supportsInterface(bytes4 interfaceId)"
OpenZeppelin/zep-solidity,contracts/mocks/ReentrancyMock.sol,callback();countLocalRecursive(uint256 n);countThisRecursive(uint256 n);countAndCall(ReentrancyAttack attacker);_count()
OpenZeppelin/zep-solidity,contracts/mocks/AccessControlEnumerableMock.sol,"setRoleAdmin(bytes32 roleId, bytes32 adminRoleId)"
OpenZeppelin/zep-solidity,contracts/metatx/MinimalForwarder.sol,"getNonce(address from);verify(ForwardRequest calldata req, bytes calldata signature);execute(ForwardRequest calldata req, bytes calldata signature)"
OpenZeppelin/zep-solidity,contracts/token/ERC20/extensions/ERC20Snapshot.sol,"_snapshot();balanceOfAt(address account, uint256 snapshotId);totalSupplyAt(uint256 snapshotId);_beforeTokenTransfer(address from, address to, uint256 amount);_valueAt(uint256 snapshotId, Snapshots storage snapshots);_updateAccountSnapshot(address account);_updateTotalSupplySnapshot();_updateSnapshot(Snapshots storage snapshots, uint256 currentValue);_lastSnapshotId(uint256[] storage ids)"
OpenZeppelin/zep-solidity,contracts/token/ERC777/presets/ERC777PresetFixedSupply.sol,""
OpenZeppelin/zep-solidity,contracts/mocks/ERC777Mock.sol,"approveInternal(address holder, address spender, uint256 value);_beforeTokenTransfer(address, address, address, uint256)"
OpenZeppelin/zep-solidity,contracts/proxy/beacon/BeaconProxy.sol,"_beacon();_implementation();_setBeacon(address beacon, bytes memory data)"
OpenZeppelin/zep-solidity,contracts/token/ERC721/IERC721.sol,"balanceOf(address owner);ownerOf(uint256 tokenId);safeTransferFrom(address from, address to, uint256 tokenId);transferFrom(address from, address to, uint256 tokenId);approve(address to, uint256 tokenId);getApproved(uint256 tokenId);setApprovalForAll(address operator, bool _approved);isApprovedForAll(address owner, address operator);safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data)"
OpenZeppelin/zep-solidity,contracts/token/ERC721/extensions/ERC721Pausable.sol,"_beforeTokenTransfer(address from, address to, uint256 tokenId)"
OpenZeppelin/zep-solidity,contracts/mocks/ERC20PausableMock.sol,"pause();unpause();mint(address to, uint256 amount);burn(address from, uint256 amount)"
OpenZeppelin/zep-solidity,contracts/mocks/MultipleInheritanceInitializableMocks.sol,"initialize();initialize(uint256 value);initialize(string memory value);initialize(string memory _gramps, uint256 _father);initialize(uint256 _mother, string memory _gramps, uint256 _father, uint256 _child)"
OpenZeppelin/zep-solidity,contracts/access/AccessControlEnumerable.sol,"getRoleMember(bytes32 role, uint256 index);getRoleMemberCount(bytes32 role);supportsInterface(bytes4 interfaceId);getRoleMember(bytes32 role, uint256 index);getRoleMemberCount(bytes32 role);grantRole(bytes32 role, address account);revokeRole(bytes32 role, address account);renounceRole(bytes32 role, address account);_setupRole(bytes32 role, address account)"
OpenZeppelin/zep-solidity,contracts/mocks/ERC1155PausableMock.sol,pause();unpause()
OpenZeppelin/zep-solidity,contracts/mocks/RegressionImplementation.sol,initialize();setValue(uint _number);initialize();setValue(uint _number);getValue();initialize();setValue(uint _number);getValue(uint _number);initialize();setValue(uint _number);getValue()
OpenZeppelin/zep-solidity,contracts/token/ERC20/extensions/ERC20Burnable.sol,"burn(uint256 amount);burnFrom(address account, uint256 amount)"
OpenZeppelin/zep-solidity,contracts/mocks/ERC20BurnableMock.sol,""
OpenZeppelin/zep-solidity,contracts/mocks/ERC721ReceiverMock.sol,""
OpenZeppelin/zep-solidity,contracts/access/Ownable.sol,owner();renounceOwnership();transferOwnership(address newOwner)
OpenZeppelin/zep-solidity,contracts/mocks/ERC1155ReceiverMock.sol,""
OpenZeppelin/zep-solidity,contracts/finance/PaymentSplitter.sol,"totalShares();totalReleased();shares(address account);released(address account);payee(uint256 index);release(address payable account);_addPayee(address account, uint256 shares_)"
OpenZeppelin/zep-solidity,contracts/mocks/Create2Impl.sol,"deploy(uint256 value, bytes32 salt, bytes memory code);computeAddress(bytes32 salt, bytes32 codeHash);computeAddressWithDeployer(bytes32 salt, bytes32 codeHash, address deployer)"
OpenZeppelin/zep-solidity,contracts/proxy/transparent/TransparentUpgradeableProxy.sol,"admin();implementation();changeAdmin(address newAdmin);upgradeTo(address newImplementation);upgradeToAndCall(address newImplementation, bytes calldata data);_admin();_setAdmin(address newAdmin);_beforeFallback()"
OpenZeppelin/zep-solidity,contracts/mocks/ERC20Mock.sol,"mint(address account, uint256 amount);burn(address account, uint256 amount);transferInternal(address from, address to, uint256 value);approveInternal(address owner, address spender, uint256 value)"
OpenZeppelin/zep-solidity,contracts/token/ERC20/extensions/draft-ERC20Permit.sol,"permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s);nonces(address owner);DOMAIN_SEPARATOR();_useNonce(address owner)"
OpenZeppelin/zep-solidity,contracts/mocks/ERC20PermitMock.sol,getChainId()
OpenZeppelin/zep-solidity,contracts/token/ERC1155/utils/ERC1155Receiver.sol,supportsInterface(bytes4 interfaceId)
OpenZeppelin/zep-solidity,contracts/mocks/ECDSAMock.sol,"recover(bytes32 hash, bytes memory signature);toEthSignedMessageHash(bytes32 hash)"
OpenZeppelin/zep-solidity,contracts/mocks/DummyImplementation.sol,"version();initializeNonPayable();initializePayable();initializeNonPayableWithValue(uint256 _value);initializePayableWithValue(uint256 _value);initialize(uint256 _value, string memory _text, uint256[] memory _values);get();version();reverts();migrate(uint256 newVal);version()"
OpenZeppelin/zep-solidity,contracts/utils/introspection/ERC165Storage.sol,supportsInterface(bytes4 interfaceId);_registerInterface(bytes4 interfaceId)
OpenZeppelin/zep-solidity,contracts/mocks/SingleInheritanceInitializableMocks.sol,"initialize(uint256 value);migrate(uint256 value, uint256 anotherValue);migrate()"
OpenZeppelin/zep-solidity,contracts/mocks/ConditionalEscrowMock.sol,"setAllowed(address payee, bool allowed);withdrawalAllowed(address payee)"
OpenZeppelin/zep-solidity,contracts/mocks/EnumerableMapMock.sol,"contains(uint256 key);set(uint256 key, address value);remove(uint256 key);length();at(uint256 index);tryGet(uint256 key);get(uint256 key);getWithMessage(uint256 key, string calldata errorMessage)"
OpenZeppelin/zep-solidity,contracts/mocks/ERC20DecimalsMock.sol,decimals()
OpenZeppelin/zep-solidity,contracts/mocks/EtherReceiverMock.sol,setAcceptEther(bool acceptEther)
OpenZeppelin/zep-solidity,contracts/token/ERC1155/extensions/ERC1155Burnable.sol,"burn(address account, uint256 id, uint256 value);burnBatch(address account, uint256[] memory ids, uint256[] memory values)"
OpenZeppelin/zep-solidity,contracts/utils/introspection/ERC165.sol,supportsInterface(bytes4 interfaceId);supportsInterface(bytes4 interfaceId)
OpenZeppelin/zep-solidity,contracts/mocks/CallReceiverMock.sol,mockFunction();mockFunctionNonPayable();mockStaticFunction();mockFunctionRevertsNoReason();mockFunctionRevertsReason();mockFunctionThrows();mockFunctionOutOfGas();mockFunctionWritesStorage()
OpenZeppelin/zep-solidity,contracts/utils/math/SafeMath.sol,"tryAdd(uint256 a, uint256 b);trySub(uint256 a, uint256 b);tryMul(uint256 a, uint256 b);tryDiv(uint256 a, uint256 b);tryMod(uint256 a, uint256 b);add(uint256 a, uint256 b);sub(uint256 a, uint256 b);mul(uint256 a, uint256 b);div(uint256 a, uint256 b);mod(uint256 a, uint256 b);sub(uint256 a, uint256 b, string memory errorMessage);div(uint256 a, uint256 b, string memory errorMessage);mod(uint256 a, uint256 b, string memory errorMessage)"
OpenZeppelin/zep-solidity,contracts/token/ERC777/IERC777Recipient.sol,""
OpenZeppelin/zep-solidity,contracts/token/ERC20/extensions/ERC20Capped.sol,"cap();_mint(address account, uint256 amount)"
OpenZeppelin/zep-solidity,contracts/mocks/SafeMathMock.sol,"tryAdd(uint256 a, uint256 b);trySub(uint256 a, uint256 b);tryMul(uint256 a, uint256 b);tryDiv(uint256 a, uint256 b);tryMod(uint256 a, uint256 b);doAdd(uint256 a, uint256 b);doSub(uint256 a, uint256 b);doMul(uint256 a, uint256 b);doDiv(uint256 a, uint256 b);doMod(uint256 a, uint256 b);subWithMessage(uint256 a, uint256 b, string memory errorMessage);divWithMessage(uint256 a, uint256 b, string memory errorMessage);modWithMessage(uint256 a, uint256 b, string memory errorMessage);addMemoryCheck();subMemoryCheck();mulMemoryCheck();divMemoryCheck();modMemoryCheck()"
OpenZeppelin/zep-solidity,contracts/mocks/ReentrancyAttack.sol,callSender(bytes4 data)
OpenZeppelin/zep-solidity,contracts/utils/Context.sol,_msgSender();_msgData()
OpenZeppelin/zep-solidity,contracts/proxy/ERC1967/ERC1967Proxy.sol,_implementation();_upgradeTo(address newImplementation);_setImplementation(address newImplementation)
OpenZeppelin/zep-solidity,contracts/utils/introspection/IERC1820Implementer.sol,"canImplementInterfaceForAddress(bytes32 interfaceHash, address account)"
OpenZeppelin/zep-solidity,contracts/mocks/MerkleProofWrapper.sol,"verify(bytes32[] memory proof, bytes32 root, bytes32 leaf)"
OpenZeppelin/zep-solidity,contracts/token/ERC20/extensions/ERC20Pausable.sol,"_beforeTokenTransfer(address from, address to, uint256 amount)"
OpenZeppelin/zep-solidity,contracts/mocks/ERC721BurnableMock.sol,"exists(uint256 tokenId);mint(address to, uint256 tokenId);safeMint(address to, uint256 tokenId);safeMint(address to, uint256 tokenId, bytes memory _data)"
OpenZeppelin/zep-solidity,contracts/utils/escrow/RefundEscrow.sol,state();beneficiary();deposit(address refundee);close();enableRefunds();beneficiaryWithdraw();withdrawalAllowed(address)
OpenZeppelin/zep-solidity,contracts/utils/cryptography/draft-EIP712.sol,"_buildDomainSeparator(bytes32 typeHash, bytes32 name, bytes32 version)"
OpenZeppelin/zep-solidity,contracts/token/ERC20/ERC20.sol,"name();symbol();decimals();totalSupply();balanceOf(address account);transfer(address recipient, uint256 amount);allowance(address owner, address spender);approve(address spender, uint256 amount);transferFrom(address sender, address recipient, uint256 amount);increaseAllowance(address spender, uint256 addedValue);decreaseAllowance(address spender, uint256 subtractedValue);_transfer(address sender, address recipient, uint256 amount);_mint(address account, uint256 amount);_burn(address account, uint256 amount);_approve(address owner, address spender, uint256 amount);_beforeTokenTransfer(address from, address to, uint256 amount)"
OpenZeppelin/zep-solidity,contracts/token/ERC721/utils/ERC721Holder.sol,""
OpenZeppelin/zep-solidity,contracts/security/ReentrancyGuard.sol,""
OpenZeppelin/zep-solidity,contracts/mocks/SafeERC20Helper.sol,"transfer(address, uint256);transferFrom(address, address, uint256);approve(address, uint256);allowance(address, address);transfer(address, uint256);transferFrom(address, address, uint256);approve(address, uint256);setAllowance(uint256 allowance_);allowance(address owner, address);transfer(address, uint256);transferFrom(address, address, uint256);approve(address, uint256);setAllowance(uint256 allowance_);allowance(address owner, address);transfer();transferFrom();approve(uint256 amount);increaseAllowance(uint256 amount);decreaseAllowance(uint256 amount);setAllowance(uint256 allowance_);allowance()"
OpenZeppelin/zep-solidity,contracts/utils/introspection/IERC1820Registry.sol,"setManager(address account, address newManager);getManager(address account);setInterfaceImplementer(address account, bytes32 _interfaceHash, address implementer);getInterfaceImplementer(address account, bytes32 _interfaceHash);interfaceHash(string calldata interfaceName)"
OpenZeppelin/zep-solidity,contracts/mocks/EnumerableSetMock.sol,contains(bytes32 value);add(bytes32 value);remove(bytes32 value);length();at(uint256 index);contains(address value);add(address value);remove(address value);length();at(uint256 index);contains(uint256 value);add(uint256 value);remove(uint256 value);length();at(uint256 index)
OpenZeppelin/zep-solidity,contracts/proxy/utils/Initializable.sol,""
OpenZeppelin/zep-solidity,contracts/mocks/ERC1155Mock.sol,"setURI(string memory newuri);mint(address to, uint256 id, uint256 value, bytes memory data);mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data);burn(address owner, uint256 id, uint256 value);burnBatch(address owner, uint256[] memory ids, uint256[] memory values)"
OpenZeppelin/zep-solidity,contracts/mocks/ERC2771ContextMock.sol,_msgSender();_msgData()
OpenZeppelin/zep-solidity,contracts/token/ERC1155/IERC1155.sol,"balanceOf(address account, uint256 id);balanceOfBatch(address[] calldata accounts, uint256[] calldata ids);setApprovalForAll(address operator, bool approved);isApprovedForAll(address account, address operator);safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data);safeBatchTransferFrom(address from, address to, uint256[] calldata ids, uint256[] calldata amounts, bytes calldata data)"
OpenZeppelin/zep-solidity,contracts/token/ERC777/ERC777.sol,"name();symbol();decimals();granularity();totalSupply();balanceOf(address tokenHolder);send(address recipient, uint256 amount, bytes memory data);transfer(address recipient, uint256 amount);burn(uint256 amount, bytes memory data);isOperatorFor(address operator, address tokenHolder);authorizeOperator(address operator);revokeOperator(address operator);defaultOperators();operatorBurn(address account, uint256 amount, bytes memory data, bytes memory operatorData);allowance(address holder, address spender);approve(address spender, uint256 value);transferFrom(address holder, address recipient, uint256 amount);_approve(address holder, address spender, uint256 value);_beforeTokenTransfer(address operator, address from, address to, uint256 amount)"
OpenZeppelin/zep-solidity,contracts/mocks/ERC20SnapshotMock.sol,"snapshot();mint(address account, uint256 amount);burn(address account, uint256 amount)"
OpenZeppelin/zep-solidity,contracts/proxy/transparent/ProxyAdmin.sol,"getProxyImplementation(TransparentUpgradeableProxy proxy);getProxyAdmin(TransparentUpgradeableProxy proxy);changeProxyAdmin(TransparentUpgradeableProxy proxy, address newAdmin);upgrade(TransparentUpgradeableProxy proxy, address implementation);upgradeAndCall(TransparentUpgradeableProxy proxy, address implementation, bytes memory data)"
OpenZeppelin/zep-solidity,contracts/token/ERC1155/ERC1155.sol,"supportsInterface(bytes4 interfaceId);uri(uint256);balanceOf(address account, uint256 id);setApprovalForAll(address operator, bool approved);isApprovedForAll(address account, address operator);_setURI(string memory newuri);_mint(address account, uint256 id, uint256 amount, bytes memory data);_mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data);_burn(address account, uint256 id, uint256 amount);_burnBatch(address account, uint256[] memory ids, uint256[] memory amounts);_asSingletonArray(uint256 element)"
OpenZeppelin/zep-solidity,contracts/token/ERC20/utils/SafeERC20.sol,"safeTransfer(IERC20 token, address to, uint256 value);safeTransferFrom(IERC20 token, address from, address to, uint256 value);safeApprove(IERC20 token, address spender, uint256 value);safeIncreaseAllowance(IERC20 token, address spender, uint256 value);safeDecreaseAllowance(IERC20 token, address spender, uint256 value);_callOptionalReturn(IERC20 token, bytes memory data)"
sc-forks/solidity-coverage,test/sources/solidity/contracts/statements/stack-too-deep.sol,""
sc-forks/solidity-coverage,test/sources/solidity/contracts/loops/while-no-brackets.sol,a()
sc-forks/solidity-coverage,test/sources/solidity/contracts/if/if-with-brackets-multiline.sol,a(uint x)
sc-forks/solidity-coverage,test/integration/projects/libraries/contracts/UsesPure.sol,"usesThem();isPure(uint a, uint b);isView();isConstant();bePure(uint a, uint b);beView();usesLibrary();stare(uint a, uint b);cry()"
sc-forks/solidity-coverage,test/sources/solidity/contracts/app/Unparseable.sol,test(uint val);getX()
sc-forks/solidity-coverage,test/integration/generic/assets/SimpleError.sol,test(uint val);getX()
sc-forks/solidity-coverage,test/sources/solidity/contracts/if/if-elseif-else.sol,"a(uint x,uint y, uint z)"
sc-forks/solidity-coverage,test/sources/solidity/contracts/conditional/sameline-consequent.sol,a()
sc-forks/solidity-coverage,test/sources/solidity/contracts/function/calldata.sol,a(string calldata x)
sc-forks/solidity-coverage,test/sources/solidity/contracts/statements/multiple.sol,a(uint x)
sc-forks/solidity-coverage,test/sources/solidity/contracts/function/function-call.sol,loggedAsStatement(uint x);a()
sc-forks/solidity-coverage,test/sources/solidity/contracts/statements/emit-instrument.sol,a(uint x)
sc-forks/solidity-coverage,test/integration/projects/solc-6/contracts/B_Wallet.sol,"transferPayment(uint payment, address payable recipient);sendPayment(uint payment, address payable recipient);getBalance()"
sc-forks/solidity-coverage,test/sources/solidity/contracts/assembly/if.sol,""
sc-forks/solidity-coverage,test/sources/solidity/contracts/statements/fn-argument.sol,a(bytes32 x)
sc-forks/solidity-coverage,test/sources/solidity/contracts/if/else-if-without-brackets.sol,a(uint x)
sc-forks/solidity-coverage,test/sources/solidity/contracts/if/if-else-no-brackets.sol,"a(uint x,uint y, uint z)"
sc-forks/solidity-coverage,test/sources/solidity/contracts/app/Expensive.sol,""
sc-forks/solidity-coverage,test/sources/solidity/contracts/statements/interpolation.sol,a(uint x)
sc-forks/solidity-coverage,test/integration/generic/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
sc-forks/solidity-coverage,test/integration/projects/import-paths/node_modules/package/AnotherImport.sol,isNodeModulesMethod()
sc-forks/solidity-coverage,test/sources/solidity/contracts/function/chainable.sol,"chainWith(uint y, uint z);a()"
sc-forks/solidity-coverage,test/sources/solidity/contracts/assert/RequireMultiline.sol,"a(bool _a, bool _b, bool _c)"
sc-forks/solidity-coverage,test/sources/solidity/contracts/if/else-without-brackets.sol,a(uint x)
sc-forks/solidity-coverage,test/sources/solidity/contracts/function/empty-body.sol,emptyBody(uint x)
sc-forks/solidity-coverage,test/sources/solidity/contracts/loops/for-no-brackets.sol,a()
sc-forks/solidity-coverage,test/integration/projects/contract-subfolders/contracts/A/ContractA2.sol,sendFn();callFn()
sc-forks/solidity-coverage,test/sources/solidity/contracts/app/Oraclize.sol,"query(uint _timestamp, string _datasource, string _arg);query_withGasLimit(uint _timestamp, string _datasource, string _arg, uint _gaslimit);queryN(uint _timestamp, string _datasource, bytes _argN);queryN_withGasLimit(uint _timestamp, string _datasource, bytes _argN, uint _gaslimit);getPrice(string _datasource);getPrice(string _datasource, uint gaslimit);setProofType(byte _proofType);setCustomGasPrice(uint _gasPrice);randomDS_getSessionPubKeyHash();getAddress();oraclize_setNetwork(uint8 networkID);oraclize_setNetwork();__callback(bytes32 myid, string result);__callback(bytes32 myid, string result, bytes proof);oraclize_getPrice(string datasource);oraclize_getPrice(string datasource, uint gaslimit);oraclize_query(string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg);oraclize_query(uint timestamp, string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2);oraclize_query(uint timestamp, string datasource, string arg1, string arg2, uint gaslimit);oraclize_query(string datasource, string arg1, string arg2, uint gaslimit);oraclize_query(string datasource, string[] argN);oraclize_query(uint timestamp, string datasource, string[] argN);oraclize_query(uint timestamp, string datasource, string[] argN, uint gaslimit);oraclize_query(string datasource, string[] argN, uint gaslimit);oraclize_query(string datasource, string[1] args);oraclize_query(uint timestamp, string datasource, string[1] args);oraclize_query(uint timestamp, string datasource, string[1] args, uint gaslimit);oraclize_query(string datasource, string[1] args, uint gaslimit);oraclize_query(string datasource, string[2] args);oraclize_query(uint timestamp, string datasource, string[2] args);oraclize_query(uint timestamp, string datasource, string[2] args, uint gaslimit);oraclize_query(string datasource, string[2] args, uint gaslimit);oraclize_query(string datasource, string[3] args);oraclize_query(uint timestamp, string datasource, string[3] args);oraclize_query(uint timestamp, string datasource, string[3] args, uint gaslimit);oraclize_query(string datasource, string[3] args, uint gaslimit);oraclize_query(string datasource, string[4] args);oraclize_query(uint timestamp, string datasource, string[4] args);oraclize_query(uint timestamp, string datasource, string[4] args, uint gaslimit);oraclize_query(string datasource, string[4] args, uint gaslimit);oraclize_query(string datasource, string[5] args);oraclize_query(uint timestamp, string datasource, string[5] args);oraclize_query(uint timestamp, string datasource, string[5] args, uint gaslimit);oraclize_query(string datasource, string[5] args, uint gaslimit);oraclize_query(string datasource, bytes[] argN);oraclize_query(uint timestamp, string datasource, bytes[] argN);oraclize_query(uint timestamp, string datasource, bytes[] argN, uint gaslimit);oraclize_query(string datasource, bytes[] argN, uint gaslimit);oraclize_query(string datasource, bytes[1] args);oraclize_query(uint timestamp, string datasource, bytes[1] args);oraclize_query(uint timestamp, string datasource, bytes[1] args, uint gaslimit);oraclize_query(string datasource, bytes[1] args, uint gaslimit);oraclize_query(string datasource, bytes[2] args);oraclize_query(uint timestamp, string datasource, bytes[2] args);oraclize_query(uint timestamp, string datasource, bytes[2] args, uint gaslimit);oraclize_query(string datasource, bytes[2] args, uint gaslimit);oraclize_query(string datasource, bytes[3] args);oraclize_query(uint timestamp, string datasource, bytes[3] args);oraclize_query(uint timestamp, string datasource, bytes[3] args, uint gaslimit);oraclize_query(string datasource, bytes[3] args, uint gaslimit);oraclize_query(string datasource, bytes[4] args);oraclize_query(uint timestamp, string datasource, bytes[4] args);oraclize_query(uint timestamp, string datasource, bytes[4] args, uint gaslimit);oraclize_query(string datasource, bytes[4] args, uint gaslimit);oraclize_query(string datasource, bytes[5] args);oraclize_query(uint timestamp, string datasource, bytes[5] args);oraclize_query(uint timestamp, string datasource, bytes[5] args, uint gaslimit);oraclize_query(string datasource, bytes[5] args, uint gaslimit);oraclize_cbAddress();oraclize_setProof(byte proofP);oraclize_setCustomGasPrice(uint gasPrice);oraclize_randomDS_getSessionPubKeyHash();getCodeSize(address _addr);parseAddr(string _a);strCompare(string _a, string _b);indexOf(string _haystack, string _needle);strConcat(string _a, string _b, string _c, string _d, string _e);strConcat(string _a, string _b, string _c, string _d);strConcat(string _a, string _b, string _c);strConcat(string _a, string _b);parseInt(string _a);parseInt(string _a, uint _b);oraclize_setNetworkName(string _network_name);oraclize_getNetworkName();oraclize_newRandomDSQuery(uint _delay, uint _nbytes, uint _customGasLimit);oraclize_randomDS_setCommitment(bytes32 queryId, bytes32 commitment);verifySig(bytes32 tosignh, bytes dersig, bytes pubkey);oraclize_randomDS_proofVerify__sessionKeyValidity(bytes proof, uint sig2offset);oraclize_randomDS_proofVerify__returnCode(bytes32 _queryId, string _result, bytes _proof);oraclize_randomDS_proofVerify__main(bytes proof, bytes32 queryId, bytes result, string context_name);copyBytes(bytes from, uint fromOffset, uint length, bytes to, uint toOffset);safer_ecrecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s);ecrecovery(bytes32 hash, bytes sig);nestingTest(string _a, string _b, string _c, string _d, string _e);test()"
sc-forks/solidity-coverage,test/sources/solidity/contracts/statements/post-close-brace.sol,a(uint x)
sc-forks/solidity-coverage,test/sources/solidity/contracts/statements/tuple.sol,returnTuple();a()
sc-forks/solidity-coverage,test/sources/solidity/contracts/statements/single.sol,a(uint x)
sc-forks/solidity-coverage,test/sources/solidity/contracts/statements/unary.sol,a()
sc-forks/solidity-coverage,test/sources/solidity/contracts/function/modifier.sol,a(uint x)
sc-forks/solidity-coverage,test/integration/projects/hardhat-compile-config/contracts/ContractC1.sol,sendFn();callFn()
sc-forks/solidity-coverage,test/sources/solidity/contracts/expressions/new-expression.sol,a(uint x)
sc-forks/solidity-coverage,test/sources/solidity/contracts/loops/for-with-brackets.sol,a()
sc-forks/solidity-coverage,test/integration/projects/solc-6/contracts/ContractB.sol,simpleSet(uint i)
sc-forks/solidity-coverage,test/sources/solidity/contracts/statements/type-keyword.sol,setOwner(address _owner);destroy(address payable recipient)
sc-forks/solidity-coverage,test/sources/solidity/contracts/app/Wallet.sol,"transferPayment(uint payment, address payable recipient);sendPayment(uint payment, address payable recipient);getBalance()"
sc-forks/solidity-coverage,test/sources/solidity/contracts/statements/empty-contract-ala-melonport.sol,""
sc-forks/solidity-coverage,test/sources/solidity/contracts/loops/while-with-brackets.sol,a()
sc-forks/solidity-coverage,test/sources/solidity/contracts/if/if-no-brackets-multiline.sol,a(uint x)
sc-forks/solidity-coverage,test/sources/solidity/contracts/conditional/multiline-alternate.sol,a()
sc-forks/solidity-coverage,test/sources/solidity/contracts/statements/empty-contract-body.sol,""
sc-forks/solidity-coverage,test/sources/solidity/contracts/if/else-with-brackets.sol,a(uint x)
sc-forks/solidity-coverage,test/sources/solidity/contracts/conditional/mapping-assignment.sol,a()
sc-forks/solidity-coverage,test/sources/solidity/contracts/comments/postFunctionDeclarationComment.sol,a(bool test);b(bool test)
sc-forks/solidity-coverage,test/sources/solidity/contracts/function/chainable-new.sol,"chainWith(uint y, uint z);a()"
sc-forks/solidity-coverage,test/sources/solidity/contracts/statements/library.sol,flip(Value storage self);not()
sc-forks/solidity-coverage,test/sources/solidity/contracts/function/multiple.sol,""
sc-forks/solidity-coverage,test/sources/solidity/contracts/function/constructor-keyword.sol,a()
sc-forks/solidity-coverage,test/integration/projects/tests-folder/contracts/ContractC.sol,sendFn();callFn()
sc-forks/solidity-coverage,test/integration/projects/multiple-suites/contracts/ContractC.sol,sendFn();callFn()
sc-forks/solidity-coverage,test/integration/projects/test-files/contracts/ContractC.sol,sendFn();callFn()
sc-forks/solidity-coverage,test/integration/projects/ganache-solcoverjs/contracts/ContractC.sol,sendFn();callFn()
sc-forks/solidity-coverage,test/integration/projects/multiple-migrations/contracts/ContractC.sol,sendFn();callFn()
sc-forks/solidity-coverage,test/sources/solidity/contracts/app/Owned.sol,""
sc-forks/solidity-coverage,test/sources/solidity/contracts/if/else-if-unbracketed-multi.sol,"sendCoin(address receiver, uint amount);getBalance(address addr)"
sc-forks/solidity-coverage,test/sources/solidity/contracts/comments/postContractComment.sol,a(bool test)
sc-forks/solidity-coverage,test/integration/projects/hardhat-gas-reporter/contracts/ContractA.sol,sendFn();callFn()
sc-forks/solidity-coverage,test/integration/projects/skipping/contracts/ContractA.sol,sendFn();callFn()
sc-forks/solidity-coverage,test/integration/projects/hardhat-compile-config/contracts/ContractA1.sol,sendFn();callFn()
sc-forks/solidity-coverage,test/integration/projects/ganache-solcoverjs/contracts/ContractA.sol,sendFn();callFn()
sc-forks/solidity-coverage,test/integration/projects/tests-folder/contracts/ContractA.sol,sendFn();callFn()
sc-forks/solidity-coverage,test/integration/projects/test-files/contracts/ContractA.sol,sendFn();callFn()
sc-forks/solidity-coverage,test/integration/projects/multiple-suites/contracts/ContractA.sol,sendFn();callFn()
sc-forks/solidity-coverage,test/integration/projects/multiple-migrations/contracts/ContractA.sol,sendFn();callFn()
sc-forks/solidity-coverage,test/integration/projects/skipping/contracts/skipped-folder/ContractB.sol,sendFn();callFn()
sc-forks/solidity-coverage,test/integration/projects/tests-folder/contracts/ContractB.sol,sendFn();callFn()
sc-forks/solidity-coverage,test/integration/projects/hardhat-compile-config/contracts/ContractB1.sol,sendFn();callFn()
sc-forks/solidity-coverage,test/integration/projects/multiple-suites/contracts/ContractB.sol,sendFn();callFn()
sc-forks/solidity-coverage,test/integration/projects/multiple-migrations/contracts/ContractB.sol,sendFn();callFn()
sc-forks/solidity-coverage,test/integration/projects/ganache-solcoverjs/contracts/ContractB.sol,sendFn();callFn()
sc-forks/solidity-coverage,test/integration/projects/test-files/contracts/ContractB.sol,sendFn();callFn()
sc-forks/solidity-coverage,test/sources/solidity/contracts/app/Simple.sol,test(uint val);getX()
sc-forks/solidity-coverage,test/sources/solidity/contracts/app/Empty.sol,""
sc-forks/solidity-coverage,test/sources/solidity/contracts/statements/fn-struct.sol,""
sc-forks/solidity-coverage,test/sources/solidity/contracts/conditional/multiline-consequent.sol,a()
sc-forks/solidity-coverage,test/integration/projects/solc-6/contracts/ContractA.sol,"simpleSet(uint i);simpleView(uint i);tryCatch();arraySlice(uint _a, uint b_);payableFn();simpleC(uint x)"
sc-forks/solidity-coverage,test/sources/solidity/contracts/return/return.sol,a(uint x)
sc-forks/solidity-coverage,test/integration/projects/import-paths/node_modules/package/NodeModulesImport.sol,isNodeModulesMethod()
sc-forks/solidity-coverage,test/sources/solidity/contracts/if/if-no-brackets.sol,a(uint x)
sc-forks/solidity-coverage,test/sources/solidity/external/PureView.sol,"bePure(uint a, uint b);beView();inheritedPure(uint a, uint b);inheritedView()"
sc-forks/solidity-coverage,test/integration/projects/libraries/contracts/PureView.sol,"bePure(uint a, uint b);beView();inheritedPure(uint a, uint b);inheritedView()"
sc-forks/solidity-coverage,test/sources/solidity/contracts/if/if-with-brackets.sol,a(uint x)
sc-forks/solidity-coverage,test/sources/solidity/contracts/assert/Assert.sol,a(bool test)
sc-forks/solidity-coverage,test/sources/solidity/contracts/assembly/spaces-in-function.sol,"a();power(base, exponent)"
sc-forks/solidity-coverage,test/sources/solidity/contracts/statements/emit-coverage.sol,a(uint x)
sc-forks/solidity-coverage,test/sources/solidity/contracts/function/function.sol,a(bytes32 x)
sc-forks/solidity-coverage,test/sources/js/TestSimple.sol,""
sc-forks/solidity-coverage,test/sources/solidity/contracts/conditional/variable-decl-assignment-alternate.sol,a()
sc-forks/solidity-coverage,test/sources/solidity/contracts/conditional/declarative-exp-assignment-alternate.sol,a()
sc-forks/solidity-coverage,test/sources/solidity/contracts/statements/fn-argument-multiline.sol,""
sc-forks/solidity-coverage,test/sources/solidity/contracts/function/chainable-value.sol,"paySomeone(address x, address y);a()"
sc-forks/solidity-coverage,test/sources/solidity/contracts/conditional/sameline-alternate.sol,a()
sc-forks/solidity-coverage,test/integration/projects/contract-subfolders/contracts/B/ContractB2.sol,sendFnB();callFnB()
sc-forks/solidity-coverage,test/sources/solidity/contracts/function/abstract.sol,abstractFn(uint x)
sc-forks/solidity-coverage,test/sources/solidity/contracts/app/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
sc-forks/solidity-coverage,test/sources/solidity/contracts/conditional/identifier-assignment-alternate.sol,a()
sc-forks/solidity-coverage,test/integration/projects/import-paths/assets/RelativePathImport.sol,isRelativePathMethod()
sc-forks/solidity-coverage,test/sources/solidity/contracts/app/Proxy.sol,isOwner()
sc-forks/solidity-coverage,test/sources/solidity/contracts/expressions/single-binary-expression.sol,a(uint x)
sc-forks/solidity-coverage,test/sources/solidity/contracts/comments/postLineComment.sol,a(bool test)
sc-forks/solidity-coverage,test/sources/solidity/contracts/comments/postIfStatementComment.sol,a(bool x)
sc-forks/solidity-coverage,test/sources/solidity/contracts/app/Events.sol,test(uint val);getX()
sc-forks/solidity-coverage,test/integration/projects/solc-7/contracts/Contract_solc7.sol,_addTen(uint x);addFive();addSeven();addTen()
sc-forks/solidity-coverage,test/sources/solidity/contracts/app/OnlyCall.sol,addTwo(uint val)
sc-forks/solidity-coverage,test/sources/solidity/contracts/if/nested-if-missing-else.sol,"a(uint x,uint y, uint z)"
sc-forks/solidity-coverage,test/integration/projects/multiple-suites/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
sc-forks/solidity-coverage,test/integration/projects/tests-folder/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
sc-forks/solidity-coverage,test/integration/projects/skipping/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
sc-forks/solidity-coverage,test/integration/projects/libraries/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
sc-forks/solidity-coverage,test/integration/projects/test-files/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
sc-forks/solidity-coverage,test/integration/projects/multiple-migrations/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
sc-forks/solidity-coverage,test/integration/projects/import-paths/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
sc-forks/solidity-coverage,test/integration/projects/ganache-solcoverjs/contracts/Migrations.sol,setCompleted(uint completed);upgrade(address new_address)
sc-forks/solidity-coverage,test/sources/solidity/contracts/app/SimpleError.sol,""
sc-forks/solidity-coverage,test/integration/projects/import-paths/contracts/UsesImports.sol,wrapsRelativePathMethod();wrapsNodeModulesMethod()
OpenZeppelin/zeppelin-solidity,contracts/mocks/WhitelistCrowdsaleImpl.sol,""
OpenZeppelin/zeppelin-solidity,contracts/crowdsale/emission/AllowanceCrowdsale.sol,"tokenWallet();remainingTokens();_deliverTokens(address beneficiary, uint256 tokenAmount)"
OpenZeppelin/zeppelin-solidity,contracts/GSN/GSNRecipient.sol,"getHubAddr();_upgradeRelayHub(address newRelayHub);relayHubVersion();_withdrawDeposits(uint256 amount, address payable payee);_msgSender();_msgData();_getRelayedCallSender();_getRelayedCallData()"
OpenZeppelin/zeppelin-solidity,contracts/mocks/SecondaryMock.sol,onlyPrimaryMock()
OpenZeppelin/zeppelin-solidity,contracts/payment/escrow/RefundEscrow.sol,state();beneficiary();deposit(address refundee);close();enableRefunds();beneficiaryWithdraw();withdrawalAllowed(address)
OpenZeppelin/zeppelin-solidity,contracts/token/ERC721/IERC721Receiver.sol,""
OpenZeppelin/zeppelin-solidity,contracts/token/ERC777/ERC777.sol,"name();symbol();decimals();granularity();totalSupply();balanceOf(address tokenHolder);send(address recipient, uint256 amount, bytes calldata data);transfer(address recipient, uint256 amount);burn(uint256 amount, bytes calldata data);authorizeOperator(address operator);revokeOperator(address operator);defaultOperators();operatorBurn(address account, uint256 amount, bytes calldata data, bytes calldata operatorData);allowance(address holder, address spender);approve(address spender, uint256 value);transferFrom(address holder, address recipient, uint256 amount);_approve(address holder, address spender, uint256 value)"
OpenZeppelin/zeppelin-solidity,contracts/mocks/GSNRecipientMock.sol,"withdrawDeposits(uint256 amount, address payable payee);acceptRelayedCall(address, address, bytes calldata, uint256, uint256, uint256, uint256, bytes calldata, uint256);preRelayedCall(bytes calldata);postRelayedCall(bytes calldata, bool, uint256, bytes32);upgradeRelayHub(address newRelayHub)"
OpenZeppelin/zeppelin-solidity,contracts/introspection/IERC165.sol,supportsInterface(bytes4 interfaceId)
OpenZeppelin/zeppelin-solidity,contracts/mocks/GSNBouncerSignatureMock.sol,mockFunction()
OpenZeppelin/zeppelin-solidity,contracts/mocks/ERC777SenderRecipientMock.sol,"senderFor(address account);registerSender(address sender);recipientFor(address account);registerRecipient(address recipient);setShouldRevertSend(bool shouldRevert);setShouldRevertReceive(bool shouldRevert);send(IERC777 token, address to, uint256 amount, bytes memory data);burn(IERC777 token, uint256 amount, bytes memory data)"
OpenZeppelin/zeppelin-solidity,contracts/mocks/ERC721PausableMock.sol,"mint(address to, uint256 tokenId);burn(uint256 tokenId);exists(uint256 tokenId)"
OpenZeppelin/zeppelin-solidity,contracts/mocks/PausableCrowdsaleImpl.sol,""
OpenZeppelin/zeppelin-solidity,contracts/mocks/PullPaymentMock.sol,"callTransfer(address dest, uint256 amount)"
OpenZeppelin/zeppelin-solidity,contracts/token/ERC721/IERC721Full.sol,""
OpenZeppelin/zeppelin-solidity,contracts/mocks/ERC165/ERC165InterfacesSupported.sol,supportsInterface(bytes4 interfaceId);_registerInterface(bytes4 interfaceId)
OpenZeppelin/zeppelin-solidity,contracts/mocks/CrowdsaleMock.sol,""
OpenZeppelin/zeppelin-solidity,contracts/payment/PaymentSplitter.sol,"totalShares();totalReleased();shares(address account);released(address account);payee(uint256 index);release(address payable account);_addPayee(address account, uint256 shares_)"
OpenZeppelin/zeppelin-solidity,contracts/token/ERC20/ERC20Burnable.sol,"burn(uint256 amount);burnFrom(address account, uint256 amount)"
OpenZeppelin/zeppelin-solidity,contracts/introspection/ERC1820Implementer.sol,"canImplementInterfaceForAddress(bytes32 interfaceHash, address account);_registerInterfaceForAddress(bytes32 interfaceHash, address account)"
OpenZeppelin/zeppelin-solidity,contracts/mocks/ConditionalEscrowMock.sol,"setAllowed(address payee, bool allowed);withdrawalAllowed(address payee)"
OpenZeppelin/zeppelin-solidity,contracts/token/ERC721/ERC721.sol,"balanceOf(address owner);ownerOf(uint256 tokenId);approve(address to, uint256 tokenId);getApproved(uint256 tokenId);setApprovalForAll(address to, bool approved);isApprovedForAll(address owner, address operator);transferFrom(address from, address to, uint256 tokenId);safeTransferFrom(address from, address to, uint256 tokenId);safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data);_safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data);_exists(uint256 tokenId);_isApprovedOrOwner(address spender, uint256 tokenId);_safeMint(address to, uint256 tokenId);_safeMint(address to, uint256 tokenId, bytes memory _data);_mint(address to, uint256 tokenId);_burn(address owner, uint256 tokenId);_burn(uint256 tokenId);_transferFrom(address from, address to, uint256 tokenId);_clearApproval(uint256 tokenId)"
OpenZeppelin/zeppelin-solidity,contracts/mocks/AllowanceCrowdsaleImpl.sol,""
OpenZeppelin/zeppelin-solidity,contracts/access/roles/WhitelistedRole.sol,isWhitelisted(address account);addWhitelisted(address account);removeWhitelisted(address account);renounceWhitelisted();_addWhitelisted(address account);_removeWhitelisted(address account)
OpenZeppelin/zeppelin-solidity,contracts/crowdsale/validation/CappedCrowdsale.sol,"cap();capReached();_preValidatePurchase(address beneficiary, uint256 weiAmount)"
OpenZeppelin/zeppelin-solidity,contracts/mocks/SafeMathMock.sol,"mul(uint256 a, uint256 b);div(uint256 a, uint256 b);sub(uint256 a, uint256 b);add(uint256 a, uint256 b);mod(uint256 a, uint256 b)"
OpenZeppelin/zeppelin-solidity,contracts/GSN/bouncers/GSNBouncerSignature.sol,""
OpenZeppelin/zeppelin-solidity,contracts/crowdsale/distribution/PostDeliveryCrowdsale.sol,"withdrawTokens(address beneficiary);balanceOf(address account);_processPurchase(address beneficiary, uint256 tokenAmount);transfer(IERC20 token, address to, uint256 amount)"
OpenZeppelin/zeppelin-solidity,contracts/token/ERC777/IERC777.sol,"name();symbol();granularity();totalSupply();balanceOf(address owner);send(address recipient, uint256 amount, bytes calldata data);burn(uint256 amount, bytes calldata data);isOperatorFor(address operator, address tokenHolder);authorizeOperator(address operator);revokeOperator(address operator);defaultOperators()"
OpenZeppelin/zeppelin-solidity,contracts/mocks/CapperRoleMock.sol,removeCapper(address account);onlyCapperMock();_removeCapper(address account)
OpenZeppelin/zeppelin-solidity,contracts/mocks/SignerRoleMock.sol,removeSigner(address account);onlySignerMock();_removeSigner(address account)
OpenZeppelin/zeppelin-solidity,contracts/GSN/bouncers/GSNBouncerBase.sol,"preRelayedCall(bytes calldata context);postRelayedCall(bytes calldata context, bool success, uint256 actualCharge, bytes32 preRetVal);_approveRelayedCall();_approveRelayedCall(bytes memory context);_rejectRelayedCall(uint256 errorCode);_preRelayedCall(bytes memory);_postRelayedCall(bytes memory, bool, uint256, bytes32);_computeCharge(uint256 gas, uint256 gasPrice, uint256 serviceFee)"
OpenZeppelin/zeppelin-solidity,contracts/GSN/IRelayRecipient.sol,"getHubAddr();preRelayedCall(bytes calldata context);postRelayedCall(bytes calldata context, bool success, uint256 actualCharge, bytes32 preRetVal)"
OpenZeppelin/zeppelin-solidity,contracts/introspection/IERC1820Implementer.sol,"canImplementInterfaceForAddress(bytes32 interfaceHash, address account)"
OpenZeppelin/zeppelin-solidity,contracts/crowdsale/distribution/FinalizableCrowdsale.sol,finalized();finalize();_finalization()
OpenZeppelin/zeppelin-solidity,contracts/token/ERC721/ERC721Enumerable.sol,"tokenOfOwnerByIndex(address owner, uint256 index);totalSupply();tokenByIndex(uint256 index);_transferFrom(address from, address to, uint256 tokenId);_mint(address to, uint256 tokenId);_burn(address owner, uint256 tokenId);_tokensOfOwner(address owner);_addTokenToOwnerEnumeration(address to, uint256 tokenId);_addTokenToAllTokensEnumeration(uint256 tokenId);_removeTokenFromOwnerEnumeration(address from, uint256 tokenId);_removeTokenFromAllTokensEnumeration(uint256 tokenId)"
OpenZeppelin/zeppelin-solidity,contracts/mocks/SignedSafeMathMock.sol,"mul(int256 a, int256 b);div(int256 a, int256 b);sub(int256 a, int256 b);add(int256 a, int256 b)"
OpenZeppelin/zeppelin-solidity,contracts/mocks/MerkleProofWrapper.sol,"verify(bytes32[] memory proof, bytes32 root, bytes32 leaf)"
OpenZeppelin/zeppelin-solidity,contracts/mocks/ERC165/ERC165NotSupported.sol,""
OpenZeppelin/zeppelin-solidity,contracts/drafts/SignedSafeMath.sol,"mul(int256 a, int256 b);div(int256 a, int256 b);sub(int256 a, int256 b);add(int256 a, int256 b)"
OpenZeppelin/zeppelin-solidity,contracts/access/roles/WhitelistAdminRole.sol,isWhitelistAdmin(address account);addWhitelistAdmin(address account);renounceWhitelistAdmin();_addWhitelistAdmin(address account);_removeWhitelistAdmin(address account)
OpenZeppelin/zeppelin-solidity,contracts/mocks/MinterRoleMock.sol,removeMinter(address account);onlyMinterMock();_removeMinter(address account)
OpenZeppelin/zeppelin-solidity,contracts/mocks/OwnableInterfaceId.sol,getInterfaceId()
OpenZeppelin/zeppelin-solidity,contracts/mocks/ERC721FullMock.sol,"exists(uint256 tokenId);tokensOfOwner(address owner);setTokenURI(uint256 tokenId, string memory uri)"
OpenZeppelin/zeppelin-solidity,contracts/token/ERC721/ERC721Mintable.sol,"mint(address to, uint256 tokenId);safeMint(address to, uint256 tokenId);safeMint(address to, uint256 tokenId, bytes memory _data)"
OpenZeppelin/zeppelin-solidity,contracts/mocks/StringsMock.sol,""
OpenZeppelin/zeppelin-solidity,contracts/introspection/ERC165Checker.sol,"_supportsInterface(address account, bytes4 interfaceId);_supportsAllInterfaces(address account, bytes4[] memory interfaceIds)"
OpenZeppelin/zeppelin-solidity,contracts/mocks/ECDSAMock.sol,"recover(bytes32 hash, bytes memory signature);toEthSignedMessageHash(bytes32 hash)"
OpenZeppelin/zeppelin-solidity,contracts/mocks/ERC777Mock.sol,""
OpenZeppelin/zeppelin-solidity,contracts/mocks/ERC721ReceiverMock.sol,""
OpenZeppelin/zeppelin-solidity,contracts/payment/escrow/Escrow.sol,depositsOf(address payee);deposit(address payee);withdraw(address payable payee)
OpenZeppelin/zeppelin-solidity,contracts/access/roles/SignerRole.sol,isSigner(address account);addSigner(address account);renounceSigner();_addSigner(address account);_removeSigner(address account)
OpenZeppelin/zeppelin-solidity,contracts/GSN/bouncers/GSNBouncerERC20Fee.sol,"token();_mint(address account, uint256 amount);_preRelayedCall(bytes memory context);_postRelayedCall(bytes memory context, bool, uint256 actualCharge, bytes32);mint(address account, uint256 amount);allowance(address owner, address spender);_approve(address owner, address spender, uint256 value);transferFrom(address sender, address recipient, uint256 amount)"
OpenZeppelin/zeppelin-solidity,contracts/crowdsale/validation/PausableCrowdsale.sol,"_preValidatePurchase(address _beneficiary, uint256 _weiAmount)"
OpenZeppelin/zeppelin-solidity,contracts/drafts/ERC1046/ERC20Metadata.sol,tokenURI();_setTokenURI(string memory tokenURI_)
OpenZeppelin/zeppelin-solidity,contracts/ownership/Secondary.sol,primary();transferPrimary(address recipient)
OpenZeppelin/zeppelin-solidity,contracts/crowdsale/emission/MintedCrowdsale.sol,"_deliverTokens(address beneficiary, uint256 tokenAmount)"
OpenZeppelin/zeppelin-solidity,contracts/crowdsale/validation/IndividuallyCappedCrowdsale.sol,"setCap(address beneficiary, uint256 cap);getCap(address beneficiary);getContribution(address beneficiary);_preValidatePurchase(address beneficiary, uint256 weiAmount);_updatePurchasingState(address beneficiary, uint256 weiAmount)"
OpenZeppelin/zeppelin-solidity,contracts/math/SafeMath.sol,"add(uint256 a, uint256 b);sub(uint256 a, uint256 b);sub(uint256 a, uint256 b, string memory errorMessage);mul(uint256 a, uint256 b);div(uint256 a, uint256 b);div(uint256 a, uint256 b, string memory errorMessage);mod(uint256 a, uint256 b);mod(uint256 a, uint256 b, string memory errorMessage)"
OpenZeppelin/zeppelin-solidity,contracts/token/ERC721/ERC721Pausable.sol,"approve(address to, uint256 tokenId);setApprovalForAll(address to, bool approved);_transferFrom(address from, address to, uint256 tokenId)"
OpenZeppelin/zeppelin-solidity,contracts/mocks/TimedCrowdsaleImpl.sol,extendTime(uint256 closingTime)
OpenZeppelin/zeppelin-solidity,contracts/crowdsale/price/IncreasingPriceCrowdsale.sol,rate();initialRate();finalRate();getCurrentRate();_getTokenAmount(uint256 weiAmount)
OpenZeppelin/zeppelin-solidity,contracts/mocks/ERC165Mock.sol,registerInterface(bytes4 interfaceId)
OpenZeppelin/zeppelin-solidity,contracts/mocks/CountersImpl.sol,current();increment();decrement()
OpenZeppelin/zeppelin-solidity,contracts/mocks/PausableMock.sol,normalProcess();drasticMeasure()
OpenZeppelin/zeppelin-solidity,contracts/mocks/MathMock.sol,"max(uint256 a, uint256 b);min(uint256 a, uint256 b);average(uint256 a, uint256 b)"
OpenZeppelin/zeppelin-solidity,contracts/drafts/TokenVesting.sol,beneficiary();cliff();start();duration();revocable();released(address token);revoked(address token);release(IERC20 token);revoke(IERC20 token);_releasableAmount(IERC20 token);_vestedAmount(IERC20 token)
OpenZeppelin/zeppelin-solidity,contracts/mocks/GSNBouncerERC20FeeMock.sol,"mint(address account, uint256 amount);mockFunction()"
OpenZeppelin/zeppelin-solidity,contracts/crowdsale/distribution/RefundableCrowdsale.sol,goal();claimRefund(address payable refundee);goalReached();_finalization();_forwardFunds()
OpenZeppelin/zeppelin-solidity,contracts/token/ERC721/ERC721Metadata.sol,"name();symbol();tokenURI(uint256 tokenId);_setTokenURI(uint256 tokenId, string memory uri);_burn(address owner, uint256 tokenId)"
OpenZeppelin/zeppelin-solidity,contracts/mocks/SafeERC20Helper.sol,"transfer(address, uint256);transferFrom(address, address, uint256);approve(address, uint256);allowance(address, address);transfer(address, uint256);transferFrom(address, address, uint256);approve(address, uint256);setAllowance(uint256 allowance_);allowance(address owner, address);transfer(address, uint256);transferFrom(address, address, uint256);approve(address, uint256);setAllowance(uint256 allowance_);allowance(address owner, address);transfer();transferFrom();approve(uint256 amount);increaseAllowance(uint256 amount);decreaseAllowance(uint256 amount);setAllowance(uint256 allowance_);allowance()"
OpenZeppelin/zeppelin-solidity,contracts/token/ERC721/ERC721Holder.sol,""
OpenZeppelin/zeppelin-solidity,contracts/mocks/ERC20DetailedMock.sol,""
OpenZeppelin/zeppelin-solidity,contracts/mocks/IncreasingPriceCrowdsaleImpl.sol,""
OpenZeppelin/zeppelin-solidity,contracts/crowdsale/Crowdsale.sol,"token();wallet();rate();weiRaised();buyTokens(address beneficiary);_preValidatePurchase(address beneficiary, uint256 weiAmount);_postValidatePurchase(address beneficiary, uint256 weiAmount);_deliverTokens(address beneficiary, uint256 tokenAmount);_processPurchase(address beneficiary, uint256 tokenAmount);_updatePurchasingState(address beneficiary, uint256 weiAmount);_getTokenAmount(uint256 weiAmount);_forwardFunds()"
OpenZeppelin/zeppelin-solidity,contracts/token/ERC20/ERC20Detailed.sol,name();symbol();decimals()
OpenZeppelin/zeppelin-solidity,contracts/mocks/RolesMock.sol,add(address account);remove(address account);has(address account)
OpenZeppelin/zeppelin-solidity,contracts/mocks/ReentrancyMock.sol,callback();countLocalRecursive(uint256 n);countThisRecursive(uint256 n);countAndCall(ReentrancyAttack attacker);count()
OpenZeppelin/zeppelin-solidity,contracts/token/ERC721/IERC721.sol,"balanceOf(address owner);ownerOf(uint256 tokenId);safeTransferFrom(address from, address to, uint256 tokenId);transferFrom(address from, address to, uint256 tokenId);approve(address to, uint256 tokenId);getApproved(uint256 tokenId);setApprovalForAll(address operator, bool _approved);isApprovedForAll(address owner, address operator);safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data)"
OpenZeppelin/zeppelin-solidity,contracts/token/ERC721/IERC721Enumerable.sol,"totalSupply();tokenOfOwnerByIndex(address owner, uint256 index);tokenByIndex(uint256 index)"
OpenZeppelin/zeppelin-solidity,contracts/mocks/PostDeliveryCrowdsaleImpl.sol,""
OpenZeppelin/zeppelin-solidity,contracts/mocks/CappedCrowdsaleImpl.sol,""
OpenZeppelin/zeppelin-solidity,contracts/crowdsale/validation/TimedCrowdsale.sol,"openingTime();closingTime();isOpen();hasClosed();_preValidatePurchase(address beneficiary, uint256 weiAmount);_extendTime(uint256 newClosingTime)"
OpenZeppelin/zeppelin-solidity,contracts/payment/PullPayment.sol,"withdrawPayments(address payable payee);payments(address dest);_asyncTransfer(address dest, uint256 amount)"
OpenZeppelin/zeppelin-solidity,contracts/mocks/FinalizableCrowdsaleImpl.sol,""
OpenZeppelin/zeppelin-solidity,contracts/crowdsale/validation/WhitelistCrowdsale.sol,"_preValidatePurchase(address _beneficiary, uint256 _weiAmount)"
OpenZeppelin/zeppelin-solidity,contracts/token/ERC20/ERC20Pausable.sol,"transfer(address to, uint256 value);transferFrom(address from, address to, uint256 value);approve(address spender, uint256 value);increaseAllowance(address spender, uint256 addedValue);decreaseAllowance(address spender, uint256 subtractedValue)"
OpenZeppelin/zeppelin-solidity,contracts/access/roles/PauserRole.sol,isPauser(address account);addPauser(address account);renouncePauser();_addPauser(address account);_removePauser(address account)
OpenZeppelin/zeppelin-solidity,contracts/mocks/WhitelistedRoleMock.sol,onlyWhitelistedMock()
OpenZeppelin/zeppelin-solidity,contracts/token/ERC20/ERC20.sol,"totalSupply();balanceOf(address account);transfer(address recipient, uint256 amount);allowance(address owner, address spender);approve(address spender, uint256 amount);transferFrom(address sender, address recipient, uint256 amount);increaseAllowance(address spender, uint256 addedValue);decreaseAllowance(address spender, uint256 subtractedValue);_transfer(address sender, address recipient, uint256 amount);_mint(address account, uint256 amount);_burn(address account, uint256 amount);_approve(address owner, address spender, uint256 amount);_burnFrom(address account, uint256 amount)"
OpenZeppelin/zeppelin-solidity,contracts/mocks/ERC20MintableMock.sol,""
OpenZeppelin/zeppelin-solidity,contracts/mocks/MintedCrowdsaleImpl.sol,""
OpenZeppelin/zeppelin-solidity,contracts/access/roles/CapperRole.sol,isCapper(address account);addCapper(address account);renounceCapper();_addCapper(address account);_removeCapper(address account)
OpenZeppelin/zeppelin-solidity,contracts/examples/SimpleToken.sol,""
OpenZeppelin/zeppelin-solidity,contracts/mocks/ERC20PausableMock.sol,""
OpenZeppelin/zeppelin-solidity,contracts/drafts/ERC20Migrator.sol,"legacyToken();newToken();beginMigration(ERC20Mintable newToken_);migrate(address account, uint256 amount);migrateAll(address account)"
OpenZeppelin/zeppelin-solidity,contracts/introspection/ERC165.sol,supportsInterface(bytes4 interfaceId);_registerInterface(bytes4 interfaceId)
OpenZeppelin/zeppelin-solidity,contracts/mocks/ERC20MetadataMock.sol,setTokenURI(string memory tokenURI)
OpenZeppelin/zeppelin-solidity,contracts/GSN/IRelayHub.sol,"stake(address relayaddr, uint256 unstakeDelay);registerRelay(uint256 transactionFee, string memory url);removeRelayByOwner(address relay);unstake(address relay);getRelay(address relay);depositFor(address target);balanceOf(address target);withdraw(uint256 amount, address payable dest);requiredGas(uint256 relayedCallStipend);maxPossibleCharge(uint256 relayedCallStipend, uint256 gasPrice, uint256 transactionFee);penalizeRepeatedNonce(bytes memory unsignedTx1, bytes memory signature1, bytes memory unsignedTx2, bytes memory signature2);penalizeIllegalTransaction(bytes memory unsignedTx, bytes memory signature);getNonce(address from)"
OpenZeppelin/zeppelin-solidity,contracts/examples/SampleCrowdsale.sol,""
OpenZeppelin/zeppelin-solidity,contracts/mocks/ERC165CheckerMock.sol,"supportsInterface(address account, bytes4 interfaceId);supportsAllInterfaces(address account, bytes4[] memory interfaceIds)"
OpenZeppelin/zeppelin-solidity,contracts/mocks/RefundablePostDeliveryCrowdsaleImpl.sol,""
OpenZeppelin/zeppelin-solidity,contracts/mocks/ContextMock.sol,"msgSender();msgData(uint256 integerValue, string memory stringValue);callSender(ContextMock context);callData(ContextMock context, uint256 integerValue, string memory stringValue)"
OpenZeppelin/zeppelin-solidity,contracts/crowdsale/distribution/RefundablePostDeliveryCrowdsale.sol,withdrawTokens(address beneficiary)
OpenZeppelin/zeppelin-solidity,contracts/ownership/Ownable.sol,owner();isOwner();renounceOwnership();transferOwnership(address newOwner);_transferOwnership(address newOwner)
OpenZeppelin/zeppelin-solidity,contracts/mocks/PauserRoleMock.sol,removePauser(address account);onlyPauserMock();_removePauser(address account)
OpenZeppelin/zeppelin-solidity,contracts/mocks/ArraysImpl.sol,findUpperBound(uint256 _element)
OpenZeppelin/zeppelin-solidity,contracts/lifecycle/Pausable.sol,paused();pause();unpause()
OpenZeppelin/zeppelin-solidity,contracts/mocks/ReentrancyAttack.sol,callSender(bytes4 data)
OpenZeppelin/zeppelin-solidity,contracts/utils/Address.sol,isContract(address account);toPayable(address account)
OpenZeppelin/zeppelin-solidity,contracts/mocks/ERC721GSNRecipientMock.sol,mint(uint256 tokenId)
OpenZeppelin/zeppelin-solidity,contracts/mocks/OwnableMock.sol,""
OpenZeppelin/zeppelin-solidity,contracts/token/ERC777/IERC777Recipient.sol,""
OpenZeppelin/zeppelin-solidity,contracts/mocks/ERC721Mock.sol,"safeMint(address to, uint256 tokenId);safeMint(address to, uint256 tokenId, bytes memory _data);mint(address to, uint256 tokenId);burn(address owner, uint256 tokenId);burn(uint256 tokenId)"
OpenZeppelin/zeppelin-solidity,contracts/token/ERC20/ERC20Mintable.sol,"mint(address account, uint256 amount)"
OpenZeppelin/zeppelin-solidity,contracts/utils/ReentrancyGuard.sol,""
OpenZeppelin/zeppelin-solidity,contracts/token/ERC20/SafeERC20.sol,"safeTransfer(IERC20 token, address to, uint256 value);safeTransferFrom(IERC20 token, address from, address to, uint256 value);safeApprove(IERC20 token, address spender, uint256 value);safeIncreaseAllowance(IERC20 token, address spender, uint256 value);safeDecreaseAllowance(IERC20 token, address spender, uint256 value);callOptionalReturn(IERC20 token, bytes memory data)"
OpenZeppelin/zeppelin-solidity,contracts/token/ERC777/IERC777Sender.sol,""
OpenZeppelin/zeppelin-solidity,contracts/mocks/ERC20Mock.sol,"mint(address account, uint256 amount);burn(address account, uint256 amount);burnFrom(address account, uint256 amount);transferInternal(address from, address to, uint256 value);approveInternal(address owner, address spender, uint256 value)"
OpenZeppelin/zeppelin-solidity,contracts/mocks/ERC721MintableBurnableImpl.sol,""
OpenZeppelin/zeppelin-solidity,contracts/mocks/RefundableCrowdsaleImpl.sol,""
OpenZeppelin/zeppelin-solidity,contracts/introspection/IERC1820Registry.sol,"setManager(address account, address newManager);getManager(address account);setInterfaceImplementer(address account, bytes32 interfaceHash, address implementer);getInterfaceImplementer(address account, bytes32 interfaceHash);interfaceHash(string calldata interfaceName)"
OpenZeppelin/zeppelin-solidity,contracts/mocks/ERC1820ImplementerMock.sol,"registerInterfaceForAddress(bytes32 interfaceHash, address account)"
OpenZeppelin/zeppelin-solidity,contracts/drafts/ERC20Snapshot.sol,"snapshot();balanceOfAt(address account, uint256 snapshotId);totalSupplyAt(uint256 snapshotId);_transfer(address from, address to, uint256 value);_mint(address account, uint256 value);_burn(address account, uint256 value);_valueAt(uint256 snapshotId, Snapshots storage snapshots);_updateAccountSnapshot(address account);_updateTotalSupplySnapshot();_updateSnapshot(Snapshots storage snapshots, uint256 currentValue);_lastSnapshotId(uint256[] storage ids)"
OpenZeppelin/zeppelin-solidity,contracts/mocks/WhitelistAdminRoleMock.sol,removeWhitelistAdmin(address account);onlyWhitelistAdminMock();_removeWhitelistAdmin(address account)
OpenZeppelin/zeppelin-solidity,contracts/mocks/ERC20BurnableMock.sol,""
OpenZeppelin/zeppelin-solidity,contracts/token/ERC721/ERC721Full.sol,""
OpenZeppelin/zeppelin-solidity,contracts/token/ERC721/ERC721MetadataMintable.sol,"mintWithTokenURI(address to, uint256 tokenId, string memory tokenURI)"
OpenZeppelin/zeppelin-solidity,contracts/GSN/Context.sol,_msgSender();_msgData()
OpenZeppelin/zeppelin-solidity,contracts/payment/escrow/ConditionalEscrow.sol,withdrawalAllowed(address payee);withdraw(address payable payee)
OpenZeppelin/zeppelin-solidity,contracts/token/ERC20/TokenTimelock.sol,token();beneficiary();releaseTime();release()
OpenZeppelin/zeppelin-solidity,contracts/token/ERC721/ERC721Burnable.sol,burn(uint256 tokenId)
OpenZeppelin/zeppelin-solidity,contracts/mocks/IndividuallyCappedCrowdsaleImpl.sol,""
OpenZeppelin/zeppelin-solidity,contracts/mocks/AddressImpl.sol,isContract(address account);toPayable(address account)
OpenZeppelin/zeppelin-solidity,contracts/mocks/ERC20SnapshotMock.sol,"mint(address account, uint256 amount);burn(address account, uint256 amount)"
OpenZeppelin/zeppelin-solidity,contracts/token/ERC20/ERC20Capped.sol,"cap();_mint(address account, uint256 value)"
OpenZeppelin/zeppelin-solidity,contracts/access/roles/MinterRole.sol,isMinter(address account);addMinter(address account);renounceMinter();_addMinter(address account);_removeMinter(address account)
OpenZeppelin/zeppelin-solidity,contracts/token/ERC721/IERC721Metadata.sol,name();symbol();tokenURI(uint256 tokenId)
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldFail/locationSpecifiersWithVar.sol,f()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/formatter/if-after.sol,a()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/forLoopSingleStmtBody.sol,fun(uint256 a)
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/returnTuples.sol,f();b()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/formatter/if.sol,a()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldFail/variableDefinitionInFunctionReturn.sol,fun()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/stateVars.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/formatter/assembly.sol,b()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/formatter/blankLinesBetweenContracts-after.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldFail/inlineArrayEmptyCellsCheckWithoutLvalue.sol,f()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/comments.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/auto_ident/struct.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/conditionalWithVariables.sol,f()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/elseIfStatement.sol,fun(uint256 a)
intellij-solidity/intellij-solidity,src/test/resources/fixtures/formatter/events.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/formatter/insideParens-after.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/refactoring/rename/imports/nested/ImportingFile_after.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/functions.sol,hello();totalSupply()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/complexExpression.sol,fun(uint256 a)
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldFail/noDoubleRadixInFixedLiteral.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/noFunctionParams.sol,functionName()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/constructor.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/variableDefinition.sol,fun(uint256 a)
intellij-solidity/intellij-solidity,src/test/resources/fixtures/auto_ident/contract.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/forLoopSimpleNoexpr.sol,fun(uint256 a)
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/multipleFunctionsNatspecDocumentation.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/declaringFixedAndUfixedVariables.sol,"f(ufixed x, fixed32x32 y)"
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/assignments.sol,g()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldFail/localConstVariable.sol,localConst()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/formatter/lineComments-after.sol,comments()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/auto_ident/assembly.sol,b()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/refactoring/rename/imports/Lab.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/overloadedFunctions.sol,"fun(uint a);fun(uint a, uint b)"
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/stateMutability.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldFail/varArray.sol,f()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/functionNoBody.sol,functionName(bytes32 input)
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/arraysInEvents.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/formatter/spaceAfterReturns.sol,spaceAfterReturns()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/functionTypeInExpression.sol,"f(uint x, uint y);g()"
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/eventArgumentsIndexed.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/literals.sol,b()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldFail/functionTypeAsStorageVariableWithModifiers.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/digits.sol,f();f()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/formatter/errors-after.sol,"send(address receiver, uint amount)"
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/multipleContractsAndImports.sol,fun();fun()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/event.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/auto_ident/stateVar.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/typeConversionToDynamicArray.sol,fun()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/placeholderInFunctionContext.sol,fun()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/arrays.sol,goforit()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/auto_ident/ifAfter.sol,test()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/smokeTest.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/auto_ident/assemblyAfter.sol,b()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/modifierInvocation.sol,f()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/visibilitySpecifiers.sol,f();f_priv();f_public();f_internal()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/bytes.sol,read()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/formatter/assembly-after.sol,b()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/variableDefinitionWithInitialization.sol,fun(uint256 a)
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/natspecDocstringAfterSignature.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/new.sol,Foo();King();b()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/tuples.sol,f()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/arraysInExpressions.sol,f()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/formatter/statementLineBreak.sol,test()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/formatter/indent-after.sol,ident()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/singleFunctionParam.sol,functionName(bytes32 input)
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldFail/modifierWithoutSemicolon.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/formatter/events-after.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/callOptions.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/functionNatspecDocumentation.sol,functionName(bytes32 input)
intellij-solidity/intellij-solidity,src/test/resources/fixtures/formatter/blankLinesBetweenContractParts.sol,f();g()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/assembly.sol,"Foo();get();iffun();switchfun();switchfor();funcalls();f(x);f(x);f();f();f();f();f(a, b);f();g();f(r, s);g(a);fibo();f(uint x);_copyToBytes(uint btsPtr, bytes memory tgt, uint btsLen)"
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/emit.sol,f();f();f()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/fallbackFunction.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/mappingToMappingInStruct.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/twoExactFunctions.sol,fun(uint a);fun(uint a)
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/calldataArray.sol,_preRelayedCall(bytes memory context)
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/mappingInStruct.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/multiVariableDeclaration.sol,f();g()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/literalConstantsWithEtherSubdenominationsInExpressions.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/natspecDocstringBetweenKeywordAndSignature.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/event.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/arraysInStorage.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/contractInheritance.sol,fun();fun()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/contract.sol,b()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/externalFunction.sol,x()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/functionTypeStateVariable.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/modifier.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/forLoopVardefInitexpr.sol,fun(uint256 a)
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/structDefinition.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/auto_ident/if.sol,test()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/functionTypeInStruct.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/auto_ident/enumAfter.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/formatter/enum.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldFail/emptyEnumDeclaration.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/formatter/enum-after.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/conditionalTrueFalseLiteral.sol,f()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/usingFor.sol,f()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldFail/missingArgumentInNamedArgs.sol,"a(uint a, uint b, uint c);b()"
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/multiArrays.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/functionTypeAsParameter.sol,f(function(uint)
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/declaringFixedLiteralVariables.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/auto_ident/contractAfter.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldFail/externalVariable.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/formatter/voting-after.sol,getCandidateList();totalVotesFor(bytes32 candidate);voteForCandidate(bytes32 candidate);validCandidate(bytes32 candidate)
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/multipleContracts.sol,fun();fun()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/import/contracts/ImportUsageEthPM.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/formatter/blankLinesBetweenContracts.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldFail/variableDefinitionInFunctionParameter.sol,fun(var a)
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/tryCatch.sol,getData(address token);rate(address token)
intellij-solidity/intellij-solidity,src/test/resources/fixtures/formatter/multisigWallet.sol,"kill(  address  _to);execute(address  _to, uint  _value, bytes  _data);resetSpentToday();clearPending(  )"
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldFail/missingVariableNameInDeclaration.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/conditionalWithAssignment.sol,f()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldFail/constantIsKeyword.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/import/node_modules/util/contracts/TestImport.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/import/installed_contracts/util/contracts/TestImport.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/ternary.sol,b()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/formatter/insideParens.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/commentEndWithDoubleStar.sol,""
intellij-solidity/intellij-solidity,src/main/resources/me/serce/solidity/ide/colors/highlighter_example.sol,transferOwnership(<KEYWORD>address</KEYWORD> newOwner);claimOwnership();reclaimToken(<CONTRACT_REFERENCE>ERC20Basic</CONTRACT_REFERENCE> token)
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/expExpression.sol,fun(uint256 a)
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/contractMultipleInheritanceWithArguments.sol,fun();fun()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldFail/payableAccessor.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/fromIsNotKeyword.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/operatorExpression.sol,fun(uint256 a)
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/complexImport.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/auto_ident/structAfter.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/contractWithDifferentFields.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/contractWithLiterals.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/whileLoop.sol,fun(uint256 a)
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/enumValidDeclaration.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/emptyFunction.sol,"functionName(bytes20 arg1, address addr)"
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/mapInvoke.sol,MyToken()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/formatter/spaceAfterReturns-after.sol,spaceAfterReturns()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/modifiers.sol,abort()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/formatter/statementLineBreak-after.sol,test()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/conditionalMultiple.sol,f()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/mappings.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldFail/locationSpecifiersForState.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/slice.sol,a()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldFail/variableDefinitionInMapping.sol,fun()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/formatter/contract-after.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/functionNormalComments.sol,functionName(bytes32 input)
intellij-solidity/intellij-solidity,src/test/resources/fixtures/auto_ident/stateVarAfter.sol,""
intellij-solidity/intellij-solidity,src/main/resources/me/serce/solidity/ide/formatting/indent_sample.sol,transferOwnership(address newOwner);claimOwnership()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/locationSpecifiersForLocals.sol,f()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/callingFunction.sol,f()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/auto_ident/enum.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/identifier.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/auto_ident/functionAfter.sol,a()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/natspecCommentInFunctionBody.sol,fun(bytes32 input)
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/destructuring.sol,MyToken()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/auto_ident/function.sol,a()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/refactoring/rename/imports/nested/ImportingFile.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/formatter/lineComments.sol,comments()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/enums.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/mapping.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/callChain.sol,b()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/mappingAndArrayOfFunctions.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/formatter/contract.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/conditionalWithConstants.sol,f()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/arithmetic.sol,"f(uint x, uint y)"
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/modifierArguments.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/address.sol,f();g(function (address payable);f();f()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/formatter/voting.sol,getCandidateList();totalVotesFor(bytes32 candidate);voteForCandidate(bytes32 candidate);validCandidate(bytes32 candidate)
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/inlineArrayDeclaration.sol,f()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/importDirective.sol,fun()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/locationSpecifiersForParams.sol,"f(uint[] storage constant x, uint[] memory y)"
intellij-solidity/intellij-solidity,src/test/resources/fixtures/formatter/errors.sol,"send(address receiver, uint amount)"
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/locationSpecifier.sol,"f(uint[] memory yy, uint[] calldata);setup(address[] calldata _owners, uint256 _threshold, address to, bytes calldata data)"
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldFail/multipleVisibilitySpecifiers.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldFail/invalidFixedConversionLeadingZeroesCheck.sol,f()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/forLoopSimpleInitexpr.sol,fun(uint256 a)
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/memberAccessParserAmbiguity.sol,f()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldFail/inlineArrayEmptyCellsCheckLvalue.sol,f()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/emptyComment.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/contractMultipleInheritance.sol,fun();fun()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/formatter/indent.sol,ident()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldFail/malformedEnumDeclaration.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/ifStatement.sol,fun(uint256 a)
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/literalConstantsWithEtherSubdenominations.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/import/contracts/ImportUsage.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/functionTypeAsStorageVariable.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/eventArguments.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/functionTypeAsStorageVariableWithAssignment.sol,"f(uint x, uint y)"
intellij-solidity/intellij-solidity,src/test/resources/fixtures/formatter/blankLinesBetweenContractParts-after.sol,f();g()
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldFail/missingParameterNameInNamedArgs.sol,"a(uint a, uint b, uint c);b()"
intellij-solidity/intellij-solidity,src/test/resources/fixtures/formatter/multisigWallet-after.sol,"MultisigWallet(address[] _owners, uint _required, uint _daylimit);kill(address _to);execute(address _to, uint _value, bytes _data);confirm(bytes32 _h);resetSpentToday();clearPending()"
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/error.sol,"send(address receiver, uint amount)"
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/address2.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/multilineFunctionDocumentation.sol,""
intellij-solidity/intellij-solidity,src/test/resources/fixtures/parser/solidity_official_tests/shouldSucceed/statementStartingWithTypeConversion.sol,fun()
